[{"path":"https://keyes-timothy.github.io/tidytof/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to tidytof","title":"Contributing to tidytof","text":"outlines propose change tidytof. detailed info contributing , tidyverse packages, please see development contributing guide.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to tidytof","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to tidytof","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to tidytof","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"keyes-timothy/tidytof\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to tidytof","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to tidytof","text":"Please note tidytof project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2020 Timothy Keyes Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/clustering.html","id":"clustering-with-tof_cluster","dir":"Articles","previous_headings":"","what":"Clustering with tof_cluster()","title":"Clustering and metaclustering","text":"demonstrate, can apply PhenoGraph clustering algorithm tidytof’s built-phenograph_data. Note phenograph_data contains 3000 total cells (1000 3 clusters identified original PhenoGraph publication). demonstration purposes, also metacluster PhenoGraph clusters using k-means clustering. outputs tof_cluster() tof_metacluster() tof_tbl identical input tibble, now addition additional column (case, “.phenograph_cluster” “.kmeans_metacluster”) encodes cluster id cell input tof_tbl. Note output columns added tibble tof_tbl tidytof begin full-stop (“.”) reduce likelihood collisions existing column names. output tof_cluster tof_tbl, can use dplyr’s count method assess accuracy clustering procedure compared original clustering PhenoGraph paper. , can see clustering procedure groups cells PhenoGraph cluster one another (small number mistakes). change clustering algorithm tof_cluster uses, alter method flag. change columns used compute clusters, change cluster_cols flag. finally, want return one-column tibble includes cluster labels (opposed cluster labels added new column input tof_tbl), set augment FALSE.","code":"data(phenograph_data)  set.seed(203L)  phenograph_clusters <-     phenograph_data |>     tof_preprocess() |>     tof_cluster(         cluster_cols = starts_with(\"cd\"),         num_neighbors = 50L,         distance_function = \"cosine\",         method = \"phenograph\"     ) |>     tof_metacluster(         cluster_col = .phenograph_cluster,         metacluster_cols = starts_with(\"cd\"),         num_metaclusters = 3L,         method = \"kmeans\"     )  phenograph_clusters |>     dplyr::select(sample_name, .phenograph_cluster, .kmeans_metacluster) |>     head() #> # A tibble: 6 × 3 #>   sample_name            .phenograph_cluster .kmeans_metacluster #>   <chr>                  <chr>               <chr>               #> 1 H1_PhenoGraph_cluster1 6                   2                   #> 2 H1_PhenoGraph_cluster1 1                   2                   #> 3 H1_PhenoGraph_cluster1 6                   2                   #> 4 H1_PhenoGraph_cluster1 6                   2                   #> 5 H1_PhenoGraph_cluster1 6                   2                   #> 6 H1_PhenoGraph_cluster1 6                   2 phenograph_clusters |>     dplyr::count(phenograph_cluster, .kmeans_metacluster, sort = TRUE) #> # A tibble: 4 × 3 #>   phenograph_cluster .kmeans_metacluster     n #>   <chr>              <chr>               <int> #> 1 cluster2           3                    1000 #> 2 cluster3           1                    1000 #> 3 cluster1           2                     995 #> 4 cluster1           1                       5 # use the kmeans algorithm phenograph_data |>     tof_preprocess() |>     tof_cluster(         cluster_cols = contains(\"cd\"),         method = \"kmeans\"     )  # use the flowsom algorithm phenograph_data |>     tof_preprocess() |>     tof_cluster(         cluster_cols = contains(\"cd\"),         method = \"flowsom\"     ) # will result in a tibble with only 1 column (the cluster labels) phenograph_data |>     tof_preprocess() |>     tof_cluster(         cluster_cols = contains(\"cd\"),         method = \"kmeans\",         augment = FALSE     ) |>     head() #> # A tibble: 6 × 1 #>   .kmeans_cluster #>   <chr>           #> 1 2               #> 2 1               #> 3 19              #> 4 9               #> 5 2               #> 6 9"},{"path":"https://keyes-timothy.github.io/tidytof/articles/clustering.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Clustering and metaclustering","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] dplyr_1.1.4    tidytof_0.99.0 #>  #> loaded via a namespace (and not attached): #>   [1] tidyselect_1.2.0    viridisLite_0.4.2   timeDate_4032.109   #>   [4] farver_2.1.1        viridis_0.6.5       ggraph_2.2.1        #>   [7] fastmap_1.1.1       tweenr_2.0.3        rpart_4.1.23        #>  [10] digest_0.6.34       timechange_0.3.0    lifecycle_1.0.4     #>  [13] yardstick_1.3.0     survival_3.5-8      magrittr_2.0.3      #>  [16] compiler_4.3.3      rlang_1.1.3         sass_0.4.8          #>  [19] tools_4.3.3         igraph_2.0.2        utf8_1.2.4          #>  [22] yaml_2.3.8          data.table_1.15.2   knitr_1.45          #>  [25] graphlayouts_1.1.1  withr_3.0.0         purrr_1.0.2         #>  [28] RProtoBufLib_2.14.0 BiocGenerics_0.48.1 desc_1.4.3          #>  [31] nnet_7.3-19         grid_4.3.3          polyclip_1.10-6     #>  [34] stats4_4.3.3        fansi_1.0.6         RcppHNSW_0.6.0      #>  [37] future_1.33.1       colorspace_2.1-0    ggplot2_3.5.0       #>  [40] globals_0.16.3      scales_1.3.0        iterators_1.0.14    #>  [43] MASS_7.3-60.0.1     cli_3.6.2           rmarkdown_2.26      #>  [46] ragg_1.2.7          generics_0.1.3      future.apply_1.11.1 #>  [49] tzdb_0.4.0          cachem_1.0.8        flowCore_2.14.1     #>  [52] ggforce_0.4.2       stringr_1.5.1       splines_4.3.3       #>  [55] parallel_4.3.3      matrixStats_1.2.0   vctrs_0.6.5         #>  [58] hardhat_1.3.1       glmnet_4.1-8        Matrix_1.6-5        #>  [61] jsonlite_1.8.8      cytolib_2.14.1      hms_1.1.3           #>  [64] S4Vectors_0.40.2    ggrepel_0.9.5       listenv_0.9.1       #>  [67] systemfonts_1.0.6   foreach_1.5.2       gower_1.0.1         #>  [70] tidyr_1.3.1         jquerylib_0.1.4     recipes_1.0.10      #>  [73] parallelly_1.37.1   glue_1.7.0          pkgdown_2.0.7       #>  [76] codetools_0.2-19    stringi_1.8.3       lubridate_1.9.3     #>  [79] gtable_0.3.4        shape_1.4.6.1       munsell_0.5.0       #>  [82] tibble_3.2.1        pillar_1.9.0        htmltools_0.5.7     #>  [85] ipred_0.9-14        lava_1.8.0          R6_2.5.1            #>  [88] textshaping_0.3.7   doParallel_1.0.17   tidygraph_1.3.1     #>  [91] evaluate_0.23       Biobase_2.62.0      lattice_0.22-5      #>  [94] readr_2.1.5         memoise_2.0.1       bslib_0.6.1         #>  [97] class_7.3-22        Rcpp_1.0.12         prodlim_2023.08.28  #> [100] gridExtra_2.3       xfun_0.42           fs_1.6.3            #> [103] pkgconfig_2.0.3"},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"general-guidelines","dir":"Articles","previous_headings":"","what":"General Guidelines","title":"How to contribute code","text":"extend tidytof include new algorithm - example, one ’ve just developed - can take 1 2 general strategies (cases, may take !). first write tidytof-style verb algorithm can included standalone package. case, benefit writing tidytof-style verb algorithm taking advantage tidytof’s design schema make algorithm easy users access without learning much () new syntax still allowing maintain code base independently team. second approach write tidytof-style function ’d like team add tidytof next release. case, code review process take bit time, also allow teams collaborate provide greater degree critical feedback one another well share burden code maintenance future. either case, ’re welcome contact tidytof team review code via pull request /issue tidytof GitHub page. tutorial may helpful don’t lot experience collaborating programmers via GitHub. open request, can submit code team reviewed. Whether want method incorporated tidytof ’re simply looking external code review/feedback team, please mention request.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"code-style","dir":"Articles","previous_headings":"","what":"Code style","title":"How to contribute code","text":"tidytof uses tidyverse style guide. Adhering tidyverse style something team expect code incorporated tidytof, ’s also something encourage functions write analysis packages. experience, best code written just executed, also read humans! also many tools can use lint automatically style R code, {lintr} {styler} packages.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"testing","dir":"Articles","previous_headings":"","what":"Testing","title":"How to contribute code","text":"addition written well-styled code, encourage write unit tests every function write. common practice software engineering world, common probably (!) bioinformatics community. tidytof team uses {testthat} package unit tests, ’s great tutorial .","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"general-principles","dir":"Articles","previous_headings":"How to contribute","what":"General principles","title":"How to contribute code","text":"important part writing function extends tidytof adhere tidytof verb syntax. exceptions, tidytof functions follow specific, shared syntax involves 3 types arguments always occur order. argument types follows: almost tidytof functions, first argument data frame (tibble). enables use pipe (|>) multi-step calculations, means first argument functions implicit (passed previous function using pipe). second group arguments called column specifications, end suffix _col _cols. Column specifications unquoted column names tell tidytof verb columns compute particular operation. example, cluster_cols argument tof_cluster allows user specify column input data frames used perform clustering. Regardless verb requires , column specifications support tidyselect helpers follow rules tidyselection tidyverse verbs like dplyr::select() tidyr::pivot_longer(). Finally, third group arguments tidytof verb called method specifications, ’re comprised every argument isn’t input data frame column specification. Whereas column specifications represent columns used perform operation, method specifications represent details operation performed. example, tof_cluster_phenograph() function requires method specification num_neighbors, specifies many nearest neighbors used construct PhenoGraph algorithm’s k-nearest-neighbor graph. exceptions, tidytof extension include 3 argument types (order). addition, functions extend tidytof name starts prefix tof_. make easier users find tidytof functions using text completion functionality included development environments.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"contributing-a-new-method-to-an-existing-tidytof-verb","dir":"Articles","previous_headings":"How to contribute","what":"Contributing a new method to an existing {tidytof} verb","title":"How to contribute code","text":"tidytof currently includes multiple verbs perform fundamental single-cell data manipulation tasks. Currently, tidytof’s extensible verbs following: tof_analyze_abundance: Perform differential cluster abundance analysis tof_analyze_expression: Perform differential marker expression analysis tof_annotate_clusters: Annotate clusters manual IDs tof_batch_correct: Perform batch correction tof_cluster: Cluster cells subpopulations tof_downsample: Subsample dataset smaller number cells tof_extract: Calculate sample-level summary statistics tof_metacluster: Metacluster clusters smaller number subpopulations tof_plot_cells: Plot cell-level data tof_plot_clusters: Plot cluster-level data tof_plot_model: Plot results sample-level model tof_read_data: Read data memory disk tof_reduce_dimensions: Perform dimensionality reduction tof_transform: Transform marker expression values vectorized fashion tof_upsample: Assign new cells existing clusters (defined downsample dataset) tof_write_data: Write data memory disk tidytof verb wraps family related functions perform basic task. example, tof_cluster verb wrapper following functions: tof_cluster_ddpr, tof_cluster_flowsom, tof_cluster_kmeans, tof_cluster_phenograph. functions implement different clustering algorithm, share underlying logic standardized tof_cluster abstraction. practice, means users can apply DDPR, FlowSOM, K-means, PhenoGraph clustering algorithms datasets either calling one tof_cluster_* functions directly, calling tof_cluster method argument set appropriate value (“ddpr”, “flowsom”, “kmeans”, “phenograph”, respectively). extend existing tidytof verb, write function whose name fits pattern tof_{verb name}_*, “*” represents name algorithm used perform computation. function definition, try share many arguments possible tidytof verb ’re extending, return output object described “Value” heading help file verb extended. example, suppose wanted write tidytof-style interface new clustering algorithm “supercluster”, performs k-means clustering dataset twice outputs final cluster assignment equal two k-means cluster assignments spliced together. add supercluster algorithm tidytof, might write function like : example , note tof_cluster_supercluster named using tof_{verb name}_* style, function definition uses tof_tibble cluster_cols arguments tof_cluster, returned output object tof_tbl single column encoding cluster ids cells tof_tibble.","code":"#' Perform superclustering on high-dimensional cytometry data. #' #' This function applies the silly, hypothetical clustering algorithm #' \"supercluster\" to high-dimensional cytometry data using user-specified #' input variables/cytometry measurements. #' #' @param tof_tibble A `tof_tbl` or `tibble`. #' #' @param cluster_cols Unquoted column names indicating which columns in #' `tof_tibble` to use in computing the supercluster clusters. #' Supports tidyselect helpers. #' #' @param num_kmeans_clusters An integer indicating how many clusters should be #' used for the two k-means clustering steps. #' #' @param sep A string to use when splicing the 2 k-means clustering assignments #' to one another. #' #' @param ... Optional additional parameters to pass to #' \\code{\\link[tidytof]{tof_cluster_kmeans}} #' #' @return A tibble with one column named `.supercluster_cluster` containing #' a character vector of length `nrow(tof_tibble)` indicating the id of the #' supercluster cluster to which each cell (i.e. each row) in `tof_tibble` was #' assigned. #' #' @importFrom dplyr tibble #' tof_cluster_supercluster <-     function(tof_tibble, cluster_cols, num_kmeans_clusters = 10L, sep = \"_\", ...) {         kmeans_1 <-             tof_tibble |>             tof_cluster_kmeans(                 cluster_cols = {{ cluster_cols }},                 num_clusters = num_kmeans_clusters,                 ...             )          kmeans_2 <-             tof_tibble |>             tof_cluster_kmeans(                 cluster_cols = {{ cluster_cols }},                 num_clusters = num_kmeans_clusters,                 ...             )          final_result <-             dplyr::tibble(                 .supercluster_cluster =                     paste(kmeans_1$.kmeans_cluster, kmeans_2$.kmeans_cluster, sep = sep)             )          return(final_result)     }"},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"creating-a-new-tidytof-verb","dir":"Articles","previous_headings":"How to contribute","what":"Creating a new {tidytof} verb","title":"How to contribute code","text":"want contribute function tidytof represents new operation encompassed existing verbs , include suggestion create new verb pull request tidytof team. case, ’ll considerably flexibility define interface tidytof use implement new verb, tidytof team happy work figure makes sense (least brainstorm together).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"a-note-about-modeling-functions","dir":"Articles","previous_headings":"How to contribute","what":"A note about modeling functions","title":"How to contribute code","text":"point development, don’t recommend extending tidytof’s modeling functionality, likely abstracted standalone package (emphasis interoperability tidymodels ecosystem) point future.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"contact-us","dir":"Articles","previous_headings":"","what":"Contact us","title":"How to contribute code","text":"general questions/comments/concerns tidytof, feel free reach team GitHub .","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"How to contribute code","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> loaded via a namespace (and not attached): #>  [1] digest_0.6.34     desc_1.4.3        R6_2.5.1          fastmap_1.1.1     #>  [5] xfun_0.42         magrittr_2.0.3    cachem_1.0.8      knitr_1.45        #>  [9] memoise_2.0.1     htmltools_0.5.7   rmarkdown_2.26    lifecycle_1.0.4   #> [13] cli_3.6.2         vctrs_0.6.5       sass_0.4.8        pkgdown_2.0.7     #> [17] textshaping_0.3.7 jquerylib_0.1.4   systemfonts_1.0.6 compiler_4.3.3    #> [21] purrr_1.0.2       tools_4.3.3       ragg_1.2.7        bslib_0.6.1       #> [25] evaluate_0.23     yaml_2.3.8        jsonlite_1.8.8    rlang_1.1.3       #> [29] fs_1.6.3"},{"path":"https://keyes-timothy.github.io/tidytof/articles/differential-discovery-analysis.html","id":"accessing-the-data-for-this-vignette","dir":"Articles","previous_headings":"","what":"Accessing the data for this vignette","title":"Differential discovery analysis","text":"demonstrate use verbs, ’ll first download dataset originally collected development CITRUS algorithm. data available HDCytoData package, available Bioconductor can downloaded following command: load CITRUS data current R session, can call function HDCytoData, provide us format {flowCore} package (called “flowSet”). convert tidy tibble, can use tidytof built-method converting flowCore objects tof_tbl’s . Thus, can see citrus_data tof_tbl 172791 cells (one row) 39 pieces information cell (one column). can also extract metadata raw data join single-cell data using functions tidyverse: Thus, now sample-level information patient sample collected stimulation condition (“Basal” “BCR-XL”) sample exposed data acquisition. Finally, can join metadata single-cell tof_tbl obtain cleaned dataset. data cleaning steps, now citrus_data, tof_tbl containing cells collected 8 patients. Specifically, 2 samples taken patient: one cells’ B-cell receptors stimulated (BCR-XL) one (Basal). citrus_data, cell’s patient origin stored patient column, cell’s stimulation condition stored stimulation column. addition, population_id column stores information cluster labels applied cell using combination FlowSOM clustering manual merging (details, run ?HDCytoData::Bodenmiller_BCR_XL R console).","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE)) {     install.packages(\"BiocManager\") }  BiocManager::install(\"HDCytoData\") citrus_raw <- HDCytoData::Bodenmiller_BCR_XL_flowSet()  citrus_data <-     citrus_raw |>     as_tof_tbl(sep = \"_\") citrus_metadata <-     tibble(         file_name = as.character(flowCore::pData(citrus_raw)[[1]]),         sample_id = 1:length(file_name),         patient = stringr::str_extract(file_name, \"patient[:digit:]\"),         stimulation = stringr::str_extract(file_name, \"(BCR-XL)|Reference\")     ) |>     mutate(         stimulation = if_else(stimulation == \"Reference\", \"Basal\", stimulation)     )  citrus_metadata |>     head() #> # A tibble: 6 × 4 #>   file_name                          sample_id patient  stimulation #>   <chr>                                  <int> <chr>    <chr>       #> 1 PBMC8_30min_patient1_BCR-XL.fcs            1 patient1 BCR-XL      #> 2 PBMC8_30min_patient1_Reference.fcs         2 patient1 Basal       #> 3 PBMC8_30min_patient2_BCR-XL.fcs            3 patient2 BCR-XL      #> 4 PBMC8_30min_patient2_Reference.fcs         4 patient2 Basal       #> 5 PBMC8_30min_patient3_BCR-XL.fcs            5 patient3 BCR-XL      #> 6 PBMC8_30min_patient3_Reference.fcs         6 patient3 Basal citrus_data <-     citrus_data |>     left_join(citrus_metadata, by = \"sample_id\")"},{"path":"https://keyes-timothy.github.io/tidytof/articles/differential-discovery-analysis.html","id":"differential-abundance-analysis-using-tof_analyze_abundance","dir":"Articles","previous_headings":"","what":"Differential abundance analysis using tof_analyze_abundance()","title":"Differential discovery analysis","text":"might wonder certain clusters expand deplete within patients two stimulation conditions described - question requires differential abundance analysis (DAA). tidytof’s tof_analyze_abundance() verb supports use 3 statistical approaches performing DAA: diffcyt, generalized-linear mixed modeling (GLMMs), simple t-tests. setup described uses paired design 2 experimental conditions interest (Basal vs. BCR-XL), can use paired t-test method: Based output, can see 6 8 clusters statistically different abundance two stimulation conditions. Using tidytof easy integration tidyverse packages, can use result visualize fold-changes cluster (within patient) BCR-XL condition compared Basal condition using ggplot2:  Importantly, output tof_analyze_abundance depends slightly underlying statistical method used, details can found documentation tof_analyze_abundance_* function family member: tof_analyze_abundance_diffcyt tof_analyze_abundance_glmm tof_analyze_abundance_ttest","code":"daa_result <-     citrus_data |>     tof_analyze_abundance(         cluster_col = population_id,         effect_col = stimulation,         group_cols = patient,         test_type = \"paired\",         method = \"ttest\"     )  daa_result #> # A tibble: 8 × 8 #>   population_id    p_val   p_adj significant      t    df mean_diff mean_fc #>   <chr>            <dbl>   <dbl> <chr>        <dbl> <dbl>     <dbl>   <dbl> #> 1 1             0.000924 0.00535 \"*\"         -5.48      7  -0.00743   0.644 #> 2 2             0.00623  0.0166  \"*\"         -3.86      7  -0.0156    0.674 #> 3 3             0.0235   0.0314  \"*\"         -2.88      7  -0.0638    0.849 #> 4 4             0.0235   0.0314  \"*\"          2.88      7   0.0832    1.38  #> 5 5             0.0116   0.0232  \"*\"          3.39      7   0.00246   1.08  #> 6 6             0.371    0.371   \"\"          -0.955     7  -0.0168    0.919 #> 7 7             0.00134  0.00535 \"*\"          5.14      7   0.0202    1.14  #> 8 8             0.236    0.270   \"\"          -1.30      7  -0.00228   0.901 plot_data <-     citrus_data |>     mutate(population_id = as.character(population_id)) |>     left_join(         select(daa_result, population_id, significant, mean_fc),         by = \"population_id\"     ) |>     dplyr::count(patient, stimulation, population_id, significant, mean_fc, name = \"n\") |>     group_by(patient, stimulation) |>     mutate(prop = n / sum(n)) |>     ungroup() |>     pivot_wider(         names_from = stimulation,         values_from = c(prop, n),     ) |>     mutate(         diff = `prop_BCR-XL` - prop_Basal,         fc = `prop_BCR-XL` / prop_Basal,         population_id = fct_reorder(population_id, diff),         direction =             case_when(                 mean_fc > 1 & significant == \"*\" ~ \"increase\",                 mean_fc < 1 & significant == \"*\" ~ \"decrease\",                 TRUE ~ NA_character_             )     )  significance_data <-     plot_data |>     group_by(population_id, significant, direction) |>     summarize(diff = max(diff), fc = max(fc)) |>     ungroup()  plot_data |>     ggplot(aes(x = population_id, y = fc, fill = direction)) +     geom_violin(trim = FALSE) +     geom_hline(yintercept = 1, color = \"red\", linetype = \"dotted\", size = 0.5) +     geom_point() +     geom_text(         aes(x = population_id, y = fc, label = significant),         data = significance_data,         size = 8,         nudge_x = 0.2,         nudge_y = 0.06     ) +     scale_x_discrete(labels = function(x) str_c(\"cluster \", x)) +     scale_fill_manual(         values = c(\"decrease\" = \"#cd5241\", \"increase\" = \"#207394\"),         na.translate = FALSE     ) +     labs(         x = NULL,         y = \"Abundance fold-change (stimulated / basal)\",         fill = \"Effect\",         caption = \"Asterisks indicate significance at an adjusted p-value of 0.05\"     ) #> Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0. #> ℹ Please use `linewidth` instead. #> This warning is displayed once every 8 hours. #> Call `lifecycle::last_lifecycle_warnings()` to see where this warning was #> generated."},{"path":"https://keyes-timothy.github.io/tidytof/articles/differential-discovery-analysis.html","id":"differential-expression-analysis-with-tof_analyze_expression","dir":"Articles","previous_headings":"","what":"Differential expression analysis with tof_analyze_expression()","title":"Differential discovery analysis","text":"Similarly, suppose ’re interested intracellular signaling proteins change expression levels two stimulation conditions clusters. Differential Expression Analysis (DEA) can performed using tidytof’s tof_analyze_expression verb. , can use paired t-tests multiple-hypothesis correction test significant differences cluster’s expression signaling markers stimulation conditions. output tof_analyze_expression() also depends underlying test used, can see result looks relatively similar output tof_analyze_abundance(). , output tibble row represents differential expression results single cluster-marker pair - example, first row represents difference expression pS6 cluster 1 BCR-XL Basal conditions. row includes raw p-value multiple-hypothesis-corrected p-value cluster-marker pair. result can used make volcano plot visualize results cluster-marker pairs:  , details can found documentation tof_analyze_expression_* function family member: tof_analyze_expression_diffcyt tof_analyze_expression_lmm tof_analyze_expression_ttest","code":"signaling_markers <-     c(         \"pNFkB_Nd142\", \"pStat5_Nd150\", \"pAkt_Sm152\", \"pStat1_Eu153\", \"pStat3_Gd158\",         \"pSlp76_Dy164\", \"pBtk_Er166\", \"pErk_Er168\", \"pS6_Yb172\", \"pZap70_Gd156\"     )  dea_result <-     citrus_data |>     tof_preprocess(channel_cols = any_of(signaling_markers)) |>     tof_analyze_expression(         method = \"ttest\",         cluster_col = population_id,         marker_cols = any_of(signaling_markers),         effect_col = stimulation,         group_cols = patient,         test_type = \"paired\"     )  dea_result |>     head() #> # A tibble: 6 × 9 #>   population_id marker   p_val   p_adj significant     t    df mean_diff mean_fc #>   <chr>         <chr>    <dbl>   <dbl> <chr>       <dbl> <dbl>     <dbl>   <dbl> #> 1 1             pS6_Y… 7.58e-8 2.12e-6 *            22.9     7     2.56    4.31  #> 2 2             pS6_Y… 1.16e-7 2.12e-6 *            21.6     7     2.13    2.49  #> 3 3             pBtk_… 1.32e-7 2.12e-6 *           -21.2     7    -0.475   0.289 #> 4 7             pBtk_… 1.18e-7 2.12e-6 *           -21.5     7    -0.518   0.286 #> 5 8             pBtk_… 1.30e-7 2.12e-6 *           -21.2     7    -0.516   0.324 #> 6 4             pBtk_… 7.85e-7 1.05e-5 *           -16.3     7    -0.462   0.296 volcano_data <-     dea_result |>     mutate(         log2_fc = log(mean_fc, base = 2),         log_p = -log(p_adj),         significance =             case_when(                 p_adj < 0.05 & mean_fc > 1 ~ \"increased\",                 p_adj < 0.05 & mean_fc < 1 ~ \"decreased\",                 TRUE ~ NA_character_             ),         marker =             str_extract(marker, \".+_\") |>                 str_remove(\"_\"),         pair = str_c(marker, str_c(\"cluster \", population_id), sep = \"@\")     )  volcano_data |>     ggplot(aes(x = log2_fc, y = log_p, fill = significance)) +     geom_vline(xintercept = 0, linetype = \"dashed\", color = \"gray50\") +     geom_hline(yintercept = -log(0.05), linetype = \"dashed\", color = \"red\") +     geom_point(shape = 21, size = 2) +     ggrepel::geom_text_repel(         aes(label = pair),         data = slice_head(volcano_data, n = 10L),         size = 2     ) +     scale_fill_manual(         values = c(\"decreased\" = \"#cd5241\", \"increased\" = \"#207394\"),         na.value = \"#cdcdcd\"     ) +     labs(         x = \"log2(Fold-change)\",         y = \"-log10(p-value)\",         fill = NULL,         caption = \"Labels indicate the 10 most significant marker-cluster pairs\"     )"},{"path":"https://keyes-timothy.github.io/tidytof/articles/differential-discovery-analysis.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Differential discovery analysis","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats4    stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #>  [1] HDCytoData_1.22.0           flowCore_2.14.1             #>  [3] SummarizedExperiment_1.32.0 Biobase_2.62.0              #>  [5] GenomicRanges_1.54.1        GenomeInfoDb_1.38.7         #>  [7] IRanges_2.36.0              S4Vectors_0.40.2            #>  [9] MatrixGenerics_1.14.0       matrixStats_1.2.0           #> [11] ExperimentHub_2.10.0        AnnotationHub_3.10.0        #> [13] BiocFileCache_2.10.1        dbplyr_2.4.0                #> [15] BiocGenerics_0.48.1         forcats_1.0.0               #> [17] tidyr_1.3.1                 ggplot2_3.5.0               #> [19] stringr_1.5.1               dplyr_1.1.4                 #> [21] tidytof_0.99.0              #>  #> loaded via a namespace (and not attached): #>   [1] jsonlite_1.8.8                shape_1.4.6.1                 #>   [3] magrittr_2.0.3                farver_2.1.1                  #>   [5] rmarkdown_2.26                fs_1.6.3                      #>   [7] zlibbioc_1.48.0               ragg_1.2.7                    #>   [9] vctrs_0.6.5                   memoise_2.0.1                 #>  [11] htmltools_0.5.7               S4Arrays_1.2.1                #>  [13] curl_5.2.1                    SparseArray_1.2.4             #>  [15] sass_0.4.8                    parallelly_1.37.1             #>  [17] bslib_0.6.1                   desc_1.4.3                    #>  [19] lubridate_1.9.3               cachem_1.0.8                  #>  [21] igraph_2.0.2                  mime_0.12                     #>  [23] lifecycle_1.0.4               iterators_1.0.14              #>  [25] pkgconfig_2.0.3               Matrix_1.6-5                  #>  [27] R6_2.5.1                      fastmap_1.1.1                 #>  [29] shiny_1.8.0                   GenomeInfoDbData_1.2.11       #>  [31] future_1.33.1                 digest_0.6.34                 #>  [33] colorspace_2.1-0              AnnotationDbi_1.64.1          #>  [35] textshaping_0.3.7             RSQLite_2.3.5                 #>  [37] labeling_0.4.3                filelock_1.0.3                #>  [39] cytolib_2.14.1                fansi_1.0.6                   #>  [41] yardstick_1.3.0               timechange_0.3.0              #>  [43] httr_1.4.7                    polyclip_1.10-6               #>  [45] abind_1.4-5                   compiler_4.3.3                #>  [47] bit64_4.0.5                   withr_3.0.0                   #>  [49] doParallel_1.0.17             viridis_0.6.5                 #>  [51] DBI_1.2.2                     highr_0.10                    #>  [53] ggforce_0.4.2                 MASS_7.3-60.0.1               #>  [55] lava_1.8.0                    rappdirs_0.3.3                #>  [57] DelayedArray_0.28.0           tools_4.3.3                   #>  [59] interactiveDisplayBase_1.40.0 httpuv_1.6.14                 #>  [61] future.apply_1.11.1           nnet_7.3-19                   #>  [63] glue_1.7.0                    promises_1.2.1                #>  [65] grid_4.3.3                    generics_0.1.3                #>  [67] recipes_1.0.10                gtable_0.3.4                  #>  [69] tzdb_0.4.0                    class_7.3-22                  #>  [71] data.table_1.15.2             hms_1.1.3                     #>  [73] tidygraph_1.3.1               utf8_1.2.4                    #>  [75] XVector_0.42.0                ggrepel_0.9.5                 #>  [77] BiocVersion_3.18.1            foreach_1.5.2                 #>  [79] pillar_1.9.0                  RcppHNSW_0.6.0                #>  [81] later_1.3.2                   splines_4.3.3                 #>  [83] tweenr_2.0.3                  lattice_0.22-5                #>  [85] survival_3.5-8                bit_4.0.5                     #>  [87] RProtoBufLib_2.14.0           tidyselect_1.2.0              #>  [89] Biostrings_2.70.2             knitr_1.45                    #>  [91] gridExtra_2.3                 xfun_0.42                     #>  [93] graphlayouts_1.1.1            hardhat_1.3.1                 #>  [95] timeDate_4032.109             stringi_1.8.3                 #>  [97] yaml_2.3.8                    evaluate_0.23                 #>  [99] codetools_0.2-19              ggraph_2.2.1                  #> [101] tibble_3.2.1                  BiocManager_1.30.22           #> [103] cli_3.6.2                     rpart_4.1.23                  #> [105] xtable_1.8-4                  systemfonts_1.0.6             #> [107] munsell_0.5.0                 jquerylib_0.1.4               #> [109] Rcpp_1.0.12                   globals_0.16.3                #> [111] png_0.1-8                     parallel_4.3.3                #> [113] ellipsis_0.3.2                pkgdown_2.0.7                 #> [115] gower_1.0.1                   readr_2.1.5                   #> [117] blob_1.2.4                    listenv_0.9.1                 #> [119] glmnet_4.1-8                  viridisLite_0.4.2             #> [121] ipred_0.9-14                  scales_1.3.0                  #> [123] prodlim_2023.08.28            purrr_1.0.2                   #> [125] crayon_1.5.2                  rlang_1.1.3                   #> [127] KEGGREST_1.42.0"},{"path":"https://keyes-timothy.github.io/tidytof/articles/dimensionality-reduction.html","id":"dimensionality-reduction-with-tof_reduce_dimensions-","dir":"Articles","previous_headings":"","what":"Dimensionality reduction with tof_reduce_dimensions().","title":"Dimensionality reduction","text":"example call tof_reduce_dimensions() use tSNE visualize data tidytof’s built-phenograph_data dataset. default, tof_reduce_dimensions add reduced-dimension feature embeddings input tof_tbl return augmented tof_tbl (, tof_tbl new columns embedding dimension) result. return features embeddings , set augment FALSE (tof_cluster). Changing method argument results different low-dimensional embeddings:","code":"data(phenograph_data)  # perform the dimensionality reduction phenograph_tsne <-     phenograph_data |>     tof_preprocess() |>     tof_reduce_dimensions(method = \"tsne\") #> Loading required namespace: Rtsne  # select only the tsne embedding columns phenograph_tsne |>     select(contains(\"tsne\")) |>     head() #> # A tibble: 6 × 2 #>   .tsne1 .tsne2 #>    <dbl>  <dbl> #> 1  -1.68  -11.5 #> 2  -7.17  -13.3 #> 3 -14.4   -35.5 #> 4 -16.3   -16.4 #> 5  -4.55  -13.0 #> 6 -13.6   -23.6 phenograph_data |>     tof_preprocess() |>     tof_reduce_dimensions(method = \"tsne\", augment = FALSE) #> # A tibble: 3,000 × 2 #>    .tsne1 .tsne2 #>     <dbl>  <dbl> #>  1 -11.6  17.1   #>  2  -4.38  6.34  #>  3 -30.1   5.10  #>  4 -13.5   4.67  #>  5 -16.1  13.1   #>  6 -13.5  -1.53  #>  7  -4.30  5.05  #>  8 -23.7  -0.945 #>  9 -11.4   0.723 #> 10  -3.98 14.6   #> # ℹ 2,990 more rows phenograph_data |>     tof_reduce_dimensions(method = \"umap\", augment = FALSE) #> # A tibble: 3,000 × 2 #>    .umap1 .umap2 #>     <dbl>  <dbl> #>  1 -9.34   4.69  #>  2 -8.67   3.69  #>  3 -3.61  -0.121 #>  4 -3.39  -1.83  #>  5 -9.49   4.47  #>  6 -0.737 -2.71  #>  7 -9.65   4.13  #>  8 -2.65  -0.933 #>  9 -5.97  -0.665 #> 10 -7.88   5.66  #> # ℹ 2,990 more rows  phenograph_data |>     tof_reduce_dimensions(method = \"pca\", augment = FALSE) #> # A tibble: 3,000 × 5 #>       .pc1     .pc2   .pc3    .pc4   .pc5 #>      <dbl>    <dbl>  <dbl>   <dbl>  <dbl> #>  1 -2.77    1.23    -0.868  0.978   3.49  #>  2 -0.969  -1.02    -0.787  1.22    0.329 #>  3 -2.36    2.54    -1.95  -0.882  -1.30  #>  4 -3.68   -0.00565  0.962  0.410   0.788 #>  5 -4.03    2.07    -0.829  1.59    5.39  #>  6 -2.59   -0.108    1.32  -1.41   -1.24  #>  7 -1.55   -0.651   -0.233  1.08    0.129 #>  8 -1.18   -0.446    0.134 -0.771  -0.932 #>  9 -2.00   -0.485    0.593 -0.0416 -0.658 #> 10 -0.0356 -0.924   -0.692  1.45    0.270 #> # ℹ 2,990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/dimensionality-reduction.html","id":"method-specifications-for-tof_reduce_-functions","dir":"Articles","previous_headings":"","what":"Method specifications for tof_reduce_*() functions","title":"Dimensionality reduction","text":"tof_reduce_dimensions() provides high-level API three lower-level functions: tof_reduce_pca(), tof_reduce_umap(), tof_reduce_tsne(). help files functions provide details algorithm-specific method specifications associated dimensionality reduction approaches. example, tof_reduce_pca takes num_comp argument determine many principal components returned: see ?tof_reduce_pca, ?tof_reduce_umap, ?tof_reduce_tsne additional details.","code":"# 2 principal components phenograph_data |>     tof_reduce_pca(num_comp = 2) #> # A tibble: 3,000 × 2 #>       .pc1     .pc2 #>      <dbl>    <dbl> #>  1 -2.77    1.23    #>  2 -0.969  -1.02    #>  3 -2.36    2.54    #>  4 -3.68   -0.00565 #>  5 -4.03    2.07    #>  6 -2.59   -0.108   #>  7 -1.55   -0.651   #>  8 -1.18   -0.446   #>  9 -2.00   -0.485   #> 10 -0.0356 -0.924   #> # ℹ 2,990 more rows # 3 principal components phenograph_data |>     tof_reduce_pca(num_comp = 3) #> # A tibble: 3,000 × 3 #>       .pc1     .pc2   .pc3 #>      <dbl>    <dbl>  <dbl> #>  1 -2.77    1.23    -0.868 #>  2 -0.969  -1.02    -0.787 #>  3 -2.36    2.54    -1.95  #>  4 -3.68   -0.00565  0.962 #>  5 -4.03    2.07    -0.829 #>  6 -2.59   -0.108    1.32  #>  7 -1.55   -0.651   -0.233 #>  8 -1.18   -0.446    0.134 #>  9 -2.00   -0.485    0.593 #> 10 -0.0356 -0.924   -0.692 #> # ℹ 2,990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/dimensionality-reduction.html","id":"visualization-using-tof_plot_cells_embedding","dir":"Articles","previous_headings":"","what":"Visualization using tof_plot_cells_embedding()","title":"Dimensionality reduction","text":"Regardless method used, reduced-dimension feature embeddings can visualized using ggplot2 (graphics package). tidytof also provides helper functions easily generating dimensionality reduction plots tof_tbl tibble columns representing embedding dimensions:   visualizations can helpful qualitatively describing phenotypic differences clusters dataset. example, example , can see one clusters high CD11b expression, whereas others lower CD11b expression.","code":"# plot the tsne embeddings using color to distinguish between clusters phenograph_tsne |>     tof_plot_cells_embedding(         embedding_cols = contains(\".tsne\"),         color_col = phenograph_cluster     ) # plot the tsne embeddings using color to represent CD11b expression phenograph_tsne |>     tof_plot_cells_embedding(         embedding_cols = contains(\".tsne\"),         color_col = cd11b     ) +     ggplot2::scale_fill_viridis_c()"},{"path":"https://keyes-timothy.github.io/tidytof/articles/dimensionality-reduction.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Dimensionality reduction","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] ggplot2_3.5.0  dplyr_1.1.4    tidytof_0.99.0 #>  #> loaded via a namespace (and not attached): #>   [1] gridExtra_2.3       rlang_1.1.3         magrittr_2.0.3      #>   [4] RcppAnnoy_0.0.22    matrixStats_1.2.0   compiler_4.3.3      #>   [7] png_0.1-8           systemfonts_1.0.6   vctrs_0.6.5         #>  [10] stringr_1.5.1       pkgconfig_2.0.3     shape_1.4.6.1       #>  [13] fastmap_1.1.1       ellipsis_0.3.2      labeling_0.4.3      #>  [16] ggraph_2.2.1        utf8_1.2.4          rmarkdown_2.26      #>  [19] prodlim_2023.08.28  tzdb_0.4.0          ragg_1.2.7          #>  [22] purrr_1.0.2         xfun_0.42           glmnet_4.1-8        #>  [25] cachem_1.0.8        jsonlite_1.8.8      recipes_1.0.10      #>  [28] highr_0.10          keras_2.13.0        tweenr_2.0.3        #>  [31] irlba_2.3.5.1       tensorflow_2.15.0   parallel_4.3.3      #>  [34] R6_2.5.1            bslib_0.6.1         stringi_1.8.3       #>  [37] reticulate_1.35.0   parallelly_1.37.1   rpart_4.1.23        #>  [40] lubridate_1.9.3     jquerylib_0.1.4     Rcpp_1.0.12         #>  [43] iterators_1.0.14    knitr_1.45          future.apply_1.11.1 #>  [46] base64enc_0.1-3     readr_2.1.5         flowCore_2.14.1     #>  [49] Matrix_1.6-5        splines_4.3.3       nnet_7.3-19         #>  [52] igraph_2.0.2        timechange_0.3.0    tidyselect_1.2.0    #>  [55] yaml_2.3.8          viridis_0.6.5       timeDate_4032.109   #>  [58] doParallel_1.0.17   codetools_0.2-19    listenv_0.9.1       #>  [61] lattice_0.22-5      tibble_3.2.1        Biobase_2.62.0      #>  [64] withr_3.0.0         evaluate_0.23       Rtsne_0.17          #>  [67] future_1.33.1       desc_1.4.3          survival_3.5-8      #>  [70] polyclip_1.10-6     embed_1.1.3         pillar_1.9.0        #>  [73] whisker_0.4.1       foreach_1.5.2       stats4_4.3.3        #>  [76] generics_0.1.3      RcppHNSW_0.6.0      S4Vectors_0.40.2    #>  [79] hms_1.1.3           munsell_0.5.0       scales_1.3.0        #>  [82] globals_0.16.3      class_7.3-22        glue_1.7.0          #>  [85] tools_4.3.3         data.table_1.15.2   gower_1.0.1         #>  [88] fs_1.6.3            graphlayouts_1.1.1  tidygraph_1.3.1     #>  [91] grid_4.3.3          yardstick_1.3.0     tidyr_1.3.1         #>  [94] RProtoBufLib_2.14.0 ipred_0.9-14        colorspace_2.1-0    #>  [97] ggforce_0.4.2       cli_3.6.2           tfruns_1.5.2        #> [100] textshaping_0.3.7   fansi_1.0.6         cytolib_2.14.1      #> [103] viridisLite_0.4.2   lava_1.8.0          uwot_0.1.16         #> [106] gtable_0.3.4        zeallot_0.1.0       sass_0.4.8          #> [109] digest_0.6.34       BiocGenerics_0.48.1 ggrepel_0.9.5       #> [112] farver_2.1.1        memoise_2.0.1       htmltools_0.5.7     #> [115] pkgdown_2.0.7       lifecycle_1.0.4     hardhat_1.3.1       #> [118] MASS_7.3-60.0.1"},{"path":"https://keyes-timothy.github.io/tidytof/articles/downsampling.html","id":"downsampling-with-tof_downsample","dir":"Articles","previous_headings":"","what":"Downsampling with tof_downsample()","title":"Downsampling","text":"Using tidytof’s built-dataset phenograph_data, can see original size dataset 1000 cells per cluster, 3000 cells total: randomly sample 200 cells per cluster, can use tof_downsample() using “constant” method: Alternatively, wanted sample 50% cells cluster, use “prop” method: finally, might also interested taking slightly different approach downsampling reduces number cells fixed constant proportion, fixed density phenotypic space. example, following scatterplot demonstrates certain areas phenotypic density phenograph_data contain cells others along cd34/cd38 axes:  reduce number cells dataset local density around cell dataset relatively constant, can use “density” method tof_downsample:  Thus, can see density downsampling uniform (though exactly uniform) across range cd34/cd38 values phenograph_data.","code":"data(phenograph_data)  phenograph_data |>     dplyr::count(phenograph_cluster) #> # A tibble: 3 × 2 #>   phenograph_cluster     n #>   <chr>              <int> #> 1 cluster1            1000 #> 2 cluster2            1000 #> 3 cluster3            1000 phenograph_data |>     # downsample     tof_downsample(         group_cols = phenograph_cluster,         method = \"constant\",         num_cells = 200     ) |>     # count the number of downsampled cells in each cluster     count(phenograph_cluster) #> # A tibble: 3 × 2 #>   phenograph_cluster     n #>   <chr>              <int> #> 1 cluster1             200 #> 2 cluster2             200 #> 3 cluster3             200 phenograph_data |>     # downsample     tof_downsample(         group_cols = phenograph_cluster,         method = \"prop\",         prop_cells = 0.5     ) |>     # count the number of downsampled cells in each cluster     count(phenograph_cluster) #> # A tibble: 3 × 2 #>   phenograph_cluster     n #>   <chr>              <int> #> 1 cluster1             500 #> 2 cluster2             500 #> 3 cluster3             500 rescale_max <-     function(x, to = c(0, 1), from = range(x, na.rm = TRUE)) {         x / from[2] * to[2]     }  phenograph_data |>     # preprocess all numeric columns in the dataset     tof_preprocess(undo_noise = FALSE) |>     # plot     ggplot(aes(x = cd34, y = cd38)) +     geom_hex() +     coord_fixed(ratio = 0.4) +     scale_x_continuous(limits = c(NA, 1.5)) +     scale_y_continuous(limits = c(NA, 4)) +     scale_fill_viridis_c(         labels = function(x) round(rescale_max(x), 2)     ) +     labs(         fill = \"relative density\"     ) phenograph_data |>     tof_preprocess(undo_noise = FALSE) |>     tof_downsample(method = \"density\", density_cols = c(cd34, cd38)) |>     # plot     ggplot(aes(x = cd34, y = cd38)) +     geom_hex() +     coord_fixed(ratio = 0.4) +     scale_x_continuous(limits = c(NA, 1.5)) +     scale_y_continuous(limits = c(NA, 4)) +     scale_fill_viridis_c(         labels = function(x) round(rescale_max(x), 2)     ) +     labs(         fill = \"relative density\"     )"},{"path":"https://keyes-timothy.github.io/tidytof/articles/downsampling.html","id":"additional-documentation","dir":"Articles","previous_headings":"","what":"Additional documentation","title":"Downsampling","text":"details, check documentation 3 underlying members tof_downsample_* function family (wrapped tof_downsample): tof_downsample_constant tof_downsample_prop tof_downsample_density","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/downsampling.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Downsampling","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] ggplot2_3.5.0  dplyr_1.1.4    tidytof_0.99.0 #>  #> loaded via a namespace (and not attached): #>   [1] gridExtra_2.3       rlang_1.1.3         magrittr_2.0.3      #>   [4] matrixStats_1.2.0   compiler_4.3.3      systemfonts_1.0.6   #>   [7] vctrs_0.6.5         stringr_1.5.1       pkgconfig_2.0.3     #>  [10] shape_1.4.6.1       fastmap_1.1.1       ggraph_2.2.1        #>  [13] utf8_1.2.4          rmarkdown_2.26      prodlim_2023.08.28  #>  [16] tzdb_0.4.0          ragg_1.2.7          purrr_1.0.2         #>  [19] xfun_0.42           glmnet_4.1-8        cachem_1.0.8        #>  [22] jsonlite_1.8.8      recipes_1.0.10      highr_0.10          #>  [25] tweenr_2.0.3        parallel_4.3.3      R6_2.5.1            #>  [28] bslib_0.6.1         stringi_1.8.3       parallelly_1.37.1   #>  [31] rpart_4.1.23        lubridate_1.9.3     jquerylib_0.1.4     #>  [34] Rcpp_1.0.12         iterators_1.0.14    knitr_1.45          #>  [37] future.apply_1.11.1 readr_2.1.5         flowCore_2.14.1     #>  [40] Matrix_1.6-5        splines_4.3.3       nnet_7.3-19         #>  [43] igraph_2.0.2        timechange_0.3.0    tidyselect_1.2.0    #>  [46] yaml_2.3.8          viridis_0.6.5       timeDate_4032.109   #>  [49] doParallel_1.0.17   codetools_0.2-19    listenv_0.9.1       #>  [52] lattice_0.22-5      tibble_3.2.1        Biobase_2.62.0      #>  [55] withr_3.0.0         evaluate_0.23       future_1.33.1       #>  [58] desc_1.4.3          survival_3.5-8      polyclip_1.10-6     #>  [61] pillar_1.9.0        foreach_1.5.2       stats4_4.3.3        #>  [64] generics_0.1.3      RcppHNSW_0.6.0      S4Vectors_0.40.2    #>  [67] hms_1.1.3           munsell_0.5.0       scales_1.3.0        #>  [70] globals_0.16.3      class_7.3-22        glue_1.7.0          #>  [73] tools_4.3.3         data.table_1.15.2   gower_1.0.1         #>  [76] fs_1.6.3            graphlayouts_1.1.1  tidygraph_1.3.1     #>  [79] grid_4.3.3          yardstick_1.3.0     tidyr_1.3.1         #>  [82] RProtoBufLib_2.14.0 ipred_0.9-14        colorspace_2.1-0    #>  [85] ggforce_0.4.2       cli_3.6.2           textshaping_0.3.7   #>  [88] fansi_1.0.6         cytolib_2.14.1      viridisLite_0.4.2   #>  [91] lava_1.8.0          gtable_0.3.4        sass_0.4.8          #>  [94] digest_0.6.34       BiocGenerics_0.48.1 ggrepel_0.9.5       #>  [97] farver_2.1.1        memoise_2.0.1       htmltools_0.5.7     #> [100] pkgdown_2.0.7       lifecycle_1.0.4     hardhat_1.3.1       #> [103] MASS_7.3-60.0.1"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"accessing-the-data-for-this-vignette","dir":"Articles","previous_headings":"","what":"Accessing the data for this vignette","title":"Feature extraction","text":"demonstrate use verbs, ’ll first download dataset originally collected development CITRUS algorithm. data available HDCytoData package, available Bioconductor can downloaded following command: load CITRUS data current R session, can call function HDCytoData, provide us format {flowCore} package (called “flowSet”). convert tidy tibble, can use tidytof built-method converting flowCore objects tof_tbl’s . Thus, can see citrus_data tof_tbl 172791 cells (one row) 39 pieces information cell (one column). can also extract metadata raw data join single-cell data using functions tidyverse: Thus, now sample-level information patient sample collected stimulation condition (“Basal” “BCR-XL”) sample exposed data acquisition. Finally, can join metadata single-cell tof_tbl obtain cleaned dataset. data cleaning steps, now citrus_data, tof_tbl containing cells collected 8 patients. Specifically, 2 samples taken patient: one cells’ B-cell receptors stimulated (BCR-XL) one (Basal). citrus_data, cell’s patient origin stored patient column, cell’s stimulation condition stored stimulation column. addition, population_id column stores information cluster labels applied cell using combination FlowSOM clustering manual merging (details, run ?HDCytoData::Bodenmiller_BCR_XL R console).","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE)) {     install.packages(\"BiocManager\") }  BiocManager::install(\"HDCytoData\") citrus_raw <- HDCytoData::Bodenmiller_BCR_XL_flowSet()  citrus_data <-     citrus_raw |>     as_tof_tbl(sep = \"_\") citrus_metadata <-     tibble(         file_name = as.character(flowCore::pData(citrus_raw)[[1]]),         sample_id = 1:length(file_name),         patient = stringr::str_extract(file_name, \"patient[:digit:]\"),         stimulation = stringr::str_extract(file_name, \"(BCR-XL)|Reference\")     ) |>     mutate(         stimulation = if_else(stimulation == \"Reference\", \"Basal\", stimulation)     )  citrus_metadata |>     head() #> # A tibble: 6 × 4 #>   file_name                          sample_id patient  stimulation #>   <chr>                                  <int> <chr>    <chr>       #> 1 PBMC8_30min_patient1_BCR-XL.fcs            1 patient1 BCR-XL      #> 2 PBMC8_30min_patient1_Reference.fcs         2 patient1 Basal       #> 3 PBMC8_30min_patient2_BCR-XL.fcs            3 patient2 BCR-XL      #> 4 PBMC8_30min_patient2_Reference.fcs         4 patient2 Basal       #> 5 PBMC8_30min_patient3_BCR-XL.fcs            5 patient3 BCR-XL      #> 6 PBMC8_30min_patient3_Reference.fcs         6 patient3 Basal citrus_data <-     citrus_data |>     left_join(citrus_metadata, by = \"sample_id\")"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"calculating-cluster-proportions-using-tof_extract_proportion","dir":"Articles","previous_headings":"","what":"Calculating cluster proportions using tof_extract_proportion()","title":"Feature extraction","text":"First, tof_extract_proportion(), extracts proportion cells cluster within sample (samples defined using group_cols argument): Like members tof_extract_* function family, tof_extract_proportion() returns one row sample (defined unique combination values columns specified group_cols) one column extracted feature (, one column proportion 8 clusters citrus_data). values can also returned “long” format changing format argument:","code":"# preprocess the numeric columns in the citrus dataset citrus_data <-     citrus_data |>     mutate(cluster = str_c(\"cluster\", population_id)) |>     tof_preprocess()  citrus_data |>     tof_extract_proportion(         cluster_col = cluster,         group_cols = c(patient, stimulation)     ) |>     head() #> # A tibble: 6 × 10 #>   patient  stimulation `prop@cluster1` `prop@cluster2` `prop@cluster3` #>   <chr>    <chr>                 <dbl>           <dbl>           <dbl> #> 1 patient1 Basal                0.0190          0.0482           0.447 #> 2 patient1 BCR-XL               0.0109          0.0395           0.268 #> 3 patient2 Basal                0.0130          0.0280           0.491 #> 4 patient2 BCR-XL               0.0101          0.0143           0.358 #> 5 patient3 Basal                0.0326          0.0830           0.397 #> 6 patient3 BCR-XL               0.0200          0.0412           0.323 #> # ℹ 5 more variables: `prop@cluster4` <dbl>, `prop@cluster5` <dbl>, #> #   `prop@cluster6` <dbl>, `prop@cluster7` <dbl>, `prop@cluster8` <dbl> citrus_data |>     tof_extract_proportion(         cluster_col = cluster,         group_cols = c(patient, stimulation),         format = \"long\"     ) |>     head() #> # A tibble: 6 × 4 #>   patient  stimulation cluster     prop #>   <chr>    <chr>       <chr>      <dbl> #> 1 patient1 Basal       cluster1 0.0190  #> 2 patient1 Basal       cluster2 0.0482  #> 3 patient1 Basal       cluster3 0.447   #> 4 patient1 Basal       cluster4 0.237   #> 5 patient1 Basal       cluster5 0.00219 #> 6 patient1 Basal       cluster6 0.0759"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"calculating-cluster-marker-expression-measures-using-tof_extract_central_tendency","dir":"Articles","previous_headings":"","what":"Calculating cluster marker expression measures using tof_extract_central_tendency()","title":"Feature extraction","text":"Another member tof_extract_*() function family, tof_extract_central_tendency(), computes central tendency (e.g. mean median) user-specified markers cluster. argument central_tendency_function can used compute summary statistic. example, following choice central_tendency_function compute 75th percentile marker-cluster pair citrus_data:","code":"citrus_data |>     tof_extract_central_tendency(         cluster_col = cluster,         group_cols = c(patient, stimulation),         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         central_tendency_function = mean     ) |>     head() #> # A tibble: 6 × 26 #>   patient  stimulation `CD45_In115@cluster1_ct` `CD4_Nd145@cluster1_ct` #>   <chr>    <chr>                          <dbl>                   <dbl> #> 1 patient1 BCR-XL                          4.80                  0.0967 #> 2 patient1 Basal                           4.68                  0.765  #> 3 patient2 BCR-XL                          5.00                 -0.0579 #> 4 patient2 Basal                           4.88                  0.808  #> 5 patient3 BCR-XL                          5.04                 -0.0432 #> 6 patient3 Basal                           4.98                  0.745  #> # ℹ 22 more variables: `CD20_Sm147@cluster1_ct` <dbl>, #> #   `CD45_In115@cluster2_ct` <dbl>, `CD4_Nd145@cluster2_ct` <dbl>, #> #   `CD20_Sm147@cluster2_ct` <dbl>, `CD45_In115@cluster3_ct` <dbl>, #> #   `CD4_Nd145@cluster3_ct` <dbl>, `CD20_Sm147@cluster3_ct` <dbl>, #> #   `CD45_In115@cluster4_ct` <dbl>, `CD4_Nd145@cluster4_ct` <dbl>, #> #   `CD20_Sm147@cluster4_ct` <dbl>, `CD45_In115@cluster5_ct` <dbl>, #> #   `CD4_Nd145@cluster5_ct` <dbl>, `CD20_Sm147@cluster5_ct` <dbl>, … citrus_data |>     tof_extract_central_tendency(         cluster_col = cluster,         group_cols = c(patient, stimulation),         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         central_tendency_function = function(x) quantile(x = x, probs = 0.75)     ) |>     head() #> # A tibble: 6 × 26 #>   patient  stimulation `CD45_In115@cluster1_ct` `CD4_Nd145@cluster1_ct` #>   <chr>    <chr>                          <dbl>                   <dbl> #> 1 patient1 BCR-XL                          5.30                 -0.0186 #> 2 patient1 Basal                           5.18                  1.32   #> 3 patient2 BCR-XL                          5.41                 -0.0201 #> 4 patient2 Basal                           5.28                  1.39   #> 5 patient3 BCR-XL                          5.42                 -0.0362 #> 6 patient3 Basal                           5.41                  1.27   #> # ℹ 22 more variables: `CD20_Sm147@cluster1_ct` <dbl>, #> #   `CD45_In115@cluster2_ct` <dbl>, `CD4_Nd145@cluster2_ct` <dbl>, #> #   `CD20_Sm147@cluster2_ct` <dbl>, `CD45_In115@cluster3_ct` <dbl>, #> #   `CD4_Nd145@cluster3_ct` <dbl>, `CD20_Sm147@cluster3_ct` <dbl>, #> #   `CD45_In115@cluster4_ct` <dbl>, `CD4_Nd145@cluster4_ct` <dbl>, #> #   `CD20_Sm147@cluster4_ct` <dbl>, `CD45_In115@cluster5_ct` <dbl>, #> #   `CD4_Nd145@cluster5_ct` <dbl>, `CD20_Sm147@cluster5_ct` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"calculating-the-proportion-of-cells-with-marker-expression-above-a-threshold-using-tof_extract_proportion","dir":"Articles","previous_headings":"","what":"Calculating the proportion of cells with marker expression above a threshold using tof_extract_proportion()","title":"Feature extraction","text":"tof_extract_threshold() similar tof_extract_central_tendency(), calculates proportion cells user-specified expression value marker instead measure central tendency:","code":"citrus_data |>     tof_extract_threshold(         cluster_col = cluster,         group_cols = c(patient, stimulation),         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         threshold = 5     ) |>     head() #> # A tibble: 6 × 26 #>   patient  stimulation `CD45_In115@cluster1_threshold` CD4_Nd145@cluster1_thre…¹ #>   <chr>    <chr>                                 <dbl>                     <dbl> #> 1 patient1 BCR-XL                                0.516                         0 #> 2 patient1 Basal                                 0.365                         0 #> 3 patient2 BCR-XL                                0.554                         0 #> 4 patient2 Basal                                 0.452                         0 #> 5 patient3 BCR-XL                                0.547                         0 #> 6 patient3 Basal                                 0.549                         0 #> # ℹ abbreviated name: ¹​`CD4_Nd145@cluster1_threshold` #> # ℹ 22 more variables: `CD20_Sm147@cluster1_threshold` <dbl>, #> #   `CD45_In115@cluster2_threshold` <dbl>, #> #   `CD4_Nd145@cluster2_threshold` <dbl>, #> #   `CD20_Sm147@cluster2_threshold` <dbl>, #> #   `CD45_In115@cluster3_threshold` <dbl>, #> #   `CD4_Nd145@cluster3_threshold` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"calculating-differences-in-marker-distributions-using-tof_extract_emd-and-tof_extract_jsd","dir":"Articles","previous_headings":"","what":"Calculating differences in marker distributions using tof_extract_emd() and tof_extract_jsd()","title":"Feature extraction","text":"two final members tof_extract_* function family – tof_extract_emd tof_extract_jsd – designed specifically comparing distributions marker expression stimulation conditions. , must given stimulation column (using emd_col jsd_col argument) identifies stimulation condition cell , reference_level specifies reference (.e. unstimulated) condition within emd_col jsd_col. additional arguments, tof_extract_emd computes Earth-mover’s distance marker’s distribution stimulation conditions (within cluster) basal condition; similarly, tof_extract_jsd computes Jensen-Shannon divergence index distributions. values ways compare different 2 distributions one another computationally expensive (also higher-resolution) simply comparing measures central tendency.","code":"# Earth-mover's distance citrus_data |>     tof_extract_emd(         cluster_col = cluster,         group_cols = patient,         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         emd_col = stimulation,         reference_level = \"Basal\"     ) |>     head() #> # A tibble: 6 × 25 #>   patient  BCR-XL_CD45_In115@clu…¹ BCR-XL_CD4_Nd145@clu…² BCR-XL_CD20_Sm147@cl…³ #>   <chr>                      <dbl>                  <dbl>                  <dbl> #> 1 patient1                   0.864                   2.47                  13.0  #> 2 patient2                   1.11                    7.05                  10.8  #> 3 patient3                   0.670                   6.23                  10.5  #> 4 patient4                   2.64                    5.86                   9.90 #> 5 patient5                   0.594                   7.56                   8.13 #> 6 patient6                   0.661                   4.77                   7.97 #> # ℹ abbreviated names: ¹​`BCR-XL_CD45_In115@cluster3_emd`, #> #   ²​`BCR-XL_CD4_Nd145@cluster3_emd`, ³​`BCR-XL_CD20_Sm147@cluster3_emd` #> # ℹ 21 more variables: `BCR-XL_CD45_In115@cluster7_emd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster7_emd` <dbl>, #> #   `BCR-XL_CD20_Sm147@cluster7_emd` <dbl>, #> #   `BCR-XL_CD45_In115@cluster4_emd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster4_emd` <dbl>, … # Jensen-Shannon Divergence citrus_data |>     tof_extract_jsd(         cluster_col = cluster,         group_cols = patient,         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         jsd_col = stimulation,         reference_level = \"Basal\"     ) |>     head() #> # A tibble: 6 × 25 #>   patient  BCR-XL_CD45_In115@clu…¹ BCR-XL_CD4_Nd145@clu…² BCR-XL_CD20_Sm147@cl…³ #>   <chr>                      <dbl>                  <dbl>                  <dbl> #> 1 patient1                 0.0367                  0.0513                  0.347 #> 2 patient2                 0.00831                 0.168                   0.401 #> 3 patient3                 0.0104                  0.115                   0.357 #> 4 patient4                 0.0301                  0.135                   0.205 #> 5 patient5                 0.00911                 0.0789                  0.274 #> 6 patient6                 0.00972                 0.0346                  0.214 #> # ℹ abbreviated names: ¹​`BCR-XL_CD45_In115@cluster3_jsd`, #> #   ²​`BCR-XL_CD4_Nd145@cluster3_jsd`, ³​`BCR-XL_CD20_Sm147@cluster3_jsd` #> # ℹ 21 more variables: `BCR-XL_CD45_In115@cluster7_jsd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster7_jsd` <dbl>, #> #   `BCR-XL_CD20_Sm147@cluster7_jsd` <dbl>, #> #   `BCR-XL_CD45_In115@cluster4_jsd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster4_jsd` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"putting-it-all-together-with-tof_extract_features","dir":"Articles","previous_headings":"","what":"Putting it all together with tof_extract_features()","title":"Feature extraction","text":"Finally, tof_extract_features() verb provides wrapper members function family, allowing users extract multiple features types . example, following code extracts proportion cluster, median several markers cluster, EMD basal condition stimulated condition cluster patients citrus_data.","code":"signaling_markers <-     c(         \"pNFkB_Nd142\", \"pStat5_Nd150\", \"pAkt_Sm152\", \"pStat1_Eu153\", \"pStat3_Gd158\",         \"pSlp76_Dy164\", \"pBtk_Er166\", \"pErk_Er168\", \"pS6_Yb172\", \"pZap70_Gd156\"     )  citrus_data |>     tof_extract_features(         cluster_col = cluster,         group_cols = patient,         stimulation_col = stimulation,         lineage_cols = any_of(c(\"CD45_In115\", \"CD20_Sm147\", \"CD33_Nd148\")),         signaling_cols = any_of(signaling_markers),         signaling_method = \"emd\",         basal_level = \"Basal\"     ) |>     head() #> # A tibble: 6 × 193 #>   patient  `prop@cluster1` `prop@cluster2` `prop@cluster3` `prop@cluster4` #>   <chr>              <dbl>           <dbl>           <dbl>           <dbl> #> 1 patient1          0.0149          0.0438           0.356           0.351 #> 2 patient2          0.0115          0.0212           0.425           0.323 #> 3 patient3          0.0255          0.0594           0.355           0.217 #> 4 patient4          0.0127          0.0418           0.320           0.223 #> 5 patient5          0.0207          0.0423           0.377           0.269 #> 6 patient6          0.0183          0.0493           0.459           0.250 #> # ℹ 188 more variables: `prop@cluster5` <dbl>, `prop@cluster6` <dbl>, #> #   `prop@cluster7` <dbl>, `prop@cluster8` <dbl>, #> #   `CD45_In115@cluster1_ct` <dbl>, `CD20_Sm147@cluster1_ct` <dbl>, #> #   `CD33_Nd148@cluster1_ct` <dbl>, `CD45_In115@cluster2_ct` <dbl>, #> #   `CD20_Sm147@cluster2_ct` <dbl>, `CD33_Nd148@cluster2_ct` <dbl>, #> #   `CD45_In115@cluster3_ct` <dbl>, `CD20_Sm147@cluster3_ct` <dbl>, #> #   `CD33_Nd148@cluster3_ct` <dbl>, `CD45_In115@cluster4_ct` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Feature extraction","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats4    stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #>  [1] HDCytoData_1.22.0           flowCore_2.14.1             #>  [3] SummarizedExperiment_1.32.0 Biobase_2.62.0              #>  [5] GenomicRanges_1.54.1        GenomeInfoDb_1.38.7         #>  [7] IRanges_2.36.0              S4Vectors_0.40.2            #>  [9] MatrixGenerics_1.14.0       matrixStats_1.2.0           #> [11] ExperimentHub_2.10.0        AnnotationHub_3.10.0        #> [13] BiocFileCache_2.10.1        dbplyr_2.4.0                #> [15] BiocGenerics_0.48.1         stringr_1.5.1               #> [17] dplyr_1.1.4                 tidytof_0.99.0              #>  #> loaded via a namespace (and not attached): #>   [1] jsonlite_1.8.8                shape_1.4.6.1                 #>   [3] magrittr_2.0.3                farver_2.1.1                  #>   [5] rmarkdown_2.26                fs_1.6.3                      #>   [7] zlibbioc_1.48.0               ragg_1.2.7                    #>   [9] vctrs_0.6.5                   memoise_2.0.1                 #>  [11] htmltools_0.5.7               S4Arrays_1.2.1                #>  [13] curl_5.2.1                    SparseArray_1.2.4             #>  [15] sass_0.4.8                    parallelly_1.37.1             #>  [17] bslib_0.6.1                   desc_1.4.3                    #>  [19] lubridate_1.9.3               cachem_1.0.8                  #>  [21] igraph_2.0.2                  mime_0.12                     #>  [23] lifecycle_1.0.4               iterators_1.0.14              #>  [25] pkgconfig_2.0.3               Matrix_1.6-5                  #>  [27] R6_2.5.1                      fastmap_1.1.1                 #>  [29] shiny_1.8.0                   GenomeInfoDbData_1.2.11       #>  [31] future_1.33.1                 digest_0.6.34                 #>  [33] colorspace_2.1-0              AnnotationDbi_1.64.1          #>  [35] textshaping_0.3.7             RSQLite_2.3.5                 #>  [37] philentropy_0.8.0             filelock_1.0.3                #>  [39] cytolib_2.14.1                fansi_1.0.6                   #>  [41] yardstick_1.3.0               timechange_0.3.0              #>  [43] httr_1.4.7                    polyclip_1.10-6               #>  [45] abind_1.4-5                   compiler_4.3.3                #>  [47] bit64_4.0.5                   withr_3.0.0                   #>  [49] doParallel_1.0.17             viridis_0.6.5                 #>  [51] DBI_1.2.2                     ggforce_0.4.2                 #>  [53] MASS_7.3-60.0.1               lava_1.8.0                    #>  [55] rappdirs_0.3.3                DelayedArray_0.28.0           #>  [57] tools_4.3.3                   interactiveDisplayBase_1.40.0 #>  [59] httpuv_1.6.14                 future.apply_1.11.1           #>  [61] nnet_7.3-19                   glue_1.7.0                    #>  [63] promises_1.2.1                grid_4.3.3                    #>  [65] generics_0.1.3                recipes_1.0.10                #>  [67] gtable_0.3.4                  tzdb_0.4.0                    #>  [69] class_7.3-22                  tidyr_1.3.1                   #>  [71] data.table_1.15.2             hms_1.1.3                     #>  [73] tidygraph_1.3.1               utf8_1.2.4                    #>  [75] XVector_0.42.0                ggrepel_0.9.5                 #>  [77] BiocVersion_3.18.1            foreach_1.5.2                 #>  [79] pillar_1.9.0                  RcppHNSW_0.6.0                #>  [81] later_1.3.2                   splines_4.3.3                 #>  [83] tweenr_2.0.3                  lattice_0.22-5                #>  [85] survival_3.5-8                bit_4.0.5                     #>  [87] emdist_0.3-3                  RProtoBufLib_2.14.0           #>  [89] tidyselect_1.2.0              Biostrings_2.70.2             #>  [91] knitr_1.45                    gridExtra_2.3                 #>  [93] xfun_0.42                     graphlayouts_1.1.1            #>  [95] hardhat_1.3.1                 timeDate_4032.109             #>  [97] stringi_1.8.3                 yaml_2.3.8                    #>  [99] evaluate_0.23                 codetools_0.2-19              #> [101] ggraph_2.2.1                  tibble_3.2.1                  #> [103] BiocManager_1.30.22           cli_3.6.2                     #> [105] rpart_4.1.23                  xtable_1.8-4                  #> [107] systemfonts_1.0.6             munsell_0.5.0                 #> [109] jquerylib_0.1.4               Rcpp_1.0.12                   #> [111] globals_0.16.3                png_0.1-8                     #> [113] parallel_4.3.3                ellipsis_0.3.2                #> [115] pkgdown_2.0.7                 gower_1.0.1                   #> [117] ggplot2_3.5.0                 readr_2.1.5                   #> [119] blob_1.2.4                    listenv_0.9.1                 #> [121] glmnet_4.1-8                  viridisLite_0.4.2             #> [123] ipred_0.9-14                  scales_1.3.0                  #> [125] prodlim_2023.08.28            purrr_1.0.2                   #> [127] crayon_1.5.2                  rlang_1.1.3                   #> [129] KEGGREST_1.42.0"},{"path":"https://keyes-timothy.github.io/tidytof/articles/modeling.html","id":"accessing-the-data-for-this-vignette","dir":"Articles","previous_headings":"","what":"Accessing the data for this vignette","title":"Building predictive models","text":"illustrate work, first download patient-level data paper combine sample-level clinical annotations one tidytof’s built-datasets (ddpr_metadata). data processing steps result tibble called ddpr_patients. numeric columns ddpr_patients represent aggregated cell population features sample (see Supplementary Table 5 paper details). non-numeric columns represent clinical metadata sample (run ?ddpr_metadata information). metadata columns, important ones indicate patient develop refractory disease (“relapse”), /happen. information stored relapse_status time_to_relapse columns, respectively. also preprocessing steps might want perform now save us headaches ’re fitting models later. next part vignette, ’ll use patient-level data build predictive models using resampling procedures like k-fold cross-validation bootstrapping.","code":"data(ddpr_metadata)  # link for downloading the sample-level data from the Nature Medicine website data_link <-     \"https://static-content.springer.com/esm/art%3A10.1038%2Fnm.4505/MediaObjects/41591_2018_BFnm4505_MOESM3_ESM.csv\"  # download the data and combine it with clinical annotations ddpr_patients <-     readr::read_csv(data_link, skip = 2L, n_max = 78L, show_col_types = FALSE) |>     dplyr::rename(patient_id = Patient_ID) |>     dplyr::left_join(ddpr_metadata, by = \"patient_id\") |>     dplyr::filter(!str_detect(patient_id, \"Healthy\"))  # preview only the metadata (i.e. non-numeric) columns ddpr_patients |>     dplyr::select(where(~ !is.numeric(.x))) |>     head() #> # A tibble: 6 × 8 #>   patient_id gender mrd_risk nci_rome_risk relapse_status type_of_relapse cohort #>   <chr>      <chr>  <chr>    <chr>         <chr>          <chr>           <chr>  #> 1 UPN1       Male   Interme… Standard      Yes            Early           Train… #> 2 UPN1-Rx    Male   Interme… Standard      Yes            Early           Train… #> 3 UPN2       Male   Interme… Standard      No             NA              Train… #> 4 UPN3       Female Standard Standard      No             NA              Train… #> 5 UPN4       Male   Standard Standard      No             NA              Valid… #> 6 UPN5       Female Standard High          No             NA              Valid… #> # ℹ 1 more variable: ddpr_risk <chr> ddpr_patients <-     ddpr_patients |>     # convert the relapse_status variable to a factor     # and create the time_to_event and event columns for survival modeling     dplyr::mutate(         relapse_status = as.factor(relapse_status),         time_to_event = dplyr::if_else(relapse_status == \"Yes\", time_to_relapse, ccr),         event = dplyr::if_else(relapse_status == \"Yes\", 1, 0)     )"},{"path":"https://keyes-timothy.github.io/tidytof/articles/modeling.html","id":"building-a-classifier-using-elastic-net-regularized-logistic-regression","dir":"Articles","previous_headings":"","what":"Building a classifier using elastic net-regularized logistic regression","title":"Building predictive models","text":"First, can build elastic net classifier predict patients relapse patients won’t (ignoring time--event data now). , can use relapse_status column ddpr_patients outcome variable: can see samples annotated, can throw away samples don’t clinical outcome associated . original DDPR paper, 10-fold cross-validation used tune glmnet model estimate error model new datasets. , can use tof_split_data() function split cohort training test set either 10 times using k-fold cross-validation bootstrapping. Reading documentation tof_split_data() demonstrates use resampling methods (like bootstrapping). output tof_split_data() varies depending split_method used. cross-validation, result rset object rsample package. rset objects type tibble two columns: splits - column entry rsplit object (contains single resample full dataset) id - character column entry represents name fold entry splits belongs . can inspect one resamples splits column see contain: Note can use rsample::training rsample::testing return training test observations resampling: , can feed training_split tof_train_model function tune logistic regression model predicts relapse_status leukemia patient. sure check tof_create_grid documentation learn make hyperparameter search grid model tuning (case, limit mixture parameter value 1, fits sparse lasso model). Also note , case, illustrative purposes ’re incorporating features one populations interest (population 2) model, whereas original model incorporated features 12 populations (likely required quite bit computational power result). output tof_train_model tof_model, object containing information trained model (can passed tof_predict tof_assess_model verbs). tof_model printed, information optimal hyperparamters printed, table nonzero model coefficients model. training model, might interested seeing performs. One way assess classification model see well works applied directly back data trained (model’s “training data”). , can use tof_assess_model() function arguments: tof_assess_model() returns list several model assessment metrics differ depending kind tof_model trained. two-class classifier models, among useful confusion_matrix, shows classifier classified observation relative true class assignment. case, can see model performed perfectly training data (expected, model optimized using data !). can also visualize model’s performance using tof_plot_model() verb, case two-class model give us Receiver-Operating Characteristic (ROC) curve:  shown , tof_plot_model() return receiver-operating curve two-class model. ’s unusual get AUC 1 machine learning world, can note case, classification problem wasn’t particularly difficult (lot input features work ). training model, generally isn’t sufficient evaluate model performs training data alone, provide overly-optimistic representation model perform data ’s never seen (problem often called “overfitting” model training data). get fairer estimate model’s performance new datasets, can also evaluate cross-validation error calling tof_assess_model() tof_plot_model() new_data argument set “tuning”.  case, plot ROC Curve using predictions observation excluded model training cross-validation, approach gives accurate estimate model’s performance new data simple evaluation training dataset.","code":"# find how many of each outcome we have in our cohort ddpr_patients |>     dplyr::count(relapse_status) #> # A tibble: 3 × 2 #>   relapse_status     n #>   <fct>          <int> #> 1 No                37 #> 2 Yes               24 #> 3 NA                12 ddpr_patients_unannotated <-     ddpr_patients |>     dplyr::filter(is.na(relapse_status))  ddpr_patients <-     ddpr_patients |>     dplyr::filter(!is.na(relapse_status)) set.seed(3000L)  training_split <-     ddpr_patients |>     tof_split_data(         split_method = \"k-fold\",         num_cv_folds = 10,         strata = relapse_status     )  training_split #> #  10-fold cross-validation using stratification  #> # A tibble: 10 × 2 #>    splits         id     #>    <list>         <chr>  #>  1 <split [54/7]> Fold01 #>  2 <split [54/7]> Fold02 #>  3 <split [54/7]> Fold03 #>  4 <split [54/7]> Fold04 #>  5 <split [55/6]> Fold05 #>  6 <split [55/6]> Fold06 #>  7 <split [55/6]> Fold07 #>  8 <split [56/5]> Fold08 #>  9 <split [56/5]> Fold09 #> 10 <split [56/5]> Fold10 my_resample <- training_split$splits[[1]]  print(my_resample) #> <Analysis/Assess/Total> #> <54/7/61> my_resample |>     rsample::training() |>     head() #> # A tibble: 6 × 1,854 #>   patient_id Pop_P_Pop1 CD19_Pop1 CD20_Pop1 CD24_Pop1 CD34_Pop1 CD38_Pop1 #>   <chr>           <dbl>     <dbl>     <dbl>     <dbl>     <dbl>     <dbl> #> 1 UPN1           3.06      0.583    0.00449    0.164       1.94     0.416 #> 2 UPN1-Rx        0.0395    0.618    0.0634     0.572       2.93     0.944 #> 3 UPN2           0.139     0.0662   0.0221     0.0825      2.25     0.454 #> 4 UPN3           0.633     0.0234   0.0165     0.0327      2.25     0.226 #> 5 UPN4           0.0443    0.129    0.0447     0.232       2.47     0.336 #> 6 UPN5           0.0647    0.0577   0.0163     0.162       2.89     0.406 #> # ℹ 1,847 more variables: CD127_Pop1 <dbl>, CD179a_Pop1 <dbl>, #> #   CD179b_Pop1 <dbl>, IgMi_Pop1 <dbl>, IgMs_Pop1 <dbl>, TdT_Pop1 <dbl>, #> #   CD22_Pop1 <dbl>, tIkaros_Pop1 <dbl>, CD79b_Pop1 <dbl>, Ki67_Pop1 <dbl>, #> #   TSLPr_Pop1 <dbl>, RAG1_Pop1 <dbl>, CD123_Pop1 <dbl>, CD45_Pop1 <dbl>, #> #   CD10_Pop1 <dbl>, Pax5_Pop1 <dbl>, CD43_Pop1 <dbl>, CD58_Pop1 <dbl>, #> #   HLADR_Pop1 <dbl>, p4EBP1_FC_Basal_Pop1 <dbl>, pSTAT5_FC_Basal_Pop1 <dbl>, #> #   pPLCg1_2_FC_Basal_Pop1 <dbl>, pAkt_FC_Basal_Pop1 <dbl>, … my_resample |>     rsample::testing() |>     head() #> # A tibble: 6 × 1,854 #>   patient_id Pop_P_Pop1 CD19_Pop1 CD20_Pop1 CD24_Pop1 CD34_Pop1 CD38_Pop1 #>   <chr>           <dbl>     <dbl>     <dbl>     <dbl>     <dbl>     <dbl> #> 1 UPN6          5.62      0.550     0.00374     0.622      2.86     0.342 #> 2 UPN10-Rx      0.00240   0.167     0.203       0.802      2.57     0.822 #> 3 UPN13         0.0634    0.0300    0.0219      0.109      2.34     0.314 #> 4 UPN22-Rx      0.0643    1.68      0.0804      1.56       3.06     0.529 #> 5 UPN58         0.00546   0.00918   0.0168      0.480      2.70     0.112 #> 6 UPN95         0.300     0.389     0.00454     0.697      2.45     0.247 #> # ℹ 1,847 more variables: CD127_Pop1 <dbl>, CD179a_Pop1 <dbl>, #> #   CD179b_Pop1 <dbl>, IgMi_Pop1 <dbl>, IgMs_Pop1 <dbl>, TdT_Pop1 <dbl>, #> #   CD22_Pop1 <dbl>, tIkaros_Pop1 <dbl>, CD79b_Pop1 <dbl>, Ki67_Pop1 <dbl>, #> #   TSLPr_Pop1 <dbl>, RAG1_Pop1 <dbl>, CD123_Pop1 <dbl>, CD45_Pop1 <dbl>, #> #   CD10_Pop1 <dbl>, Pax5_Pop1 <dbl>, CD43_Pop1 <dbl>, CD58_Pop1 <dbl>, #> #   HLADR_Pop1 <dbl>, p4EBP1_FC_Basal_Pop1 <dbl>, pSTAT5_FC_Basal_Pop1 <dbl>, #> #   pPLCg1_2_FC_Basal_Pop1 <dbl>, pAkt_FC_Basal_Pop1 <dbl>, … hyperparams <- tof_create_grid(mixture_values = 1)  class_mod <-     training_split |>     tof_train_model(         predictor_cols = c(contains(\"Pop2\")),         response_col = relapse_status,         model_type = \"two-class\",         hyperparameter_grid = hyperparams,         impute_missing_predictors = TRUE,         remove_zv_predictors = TRUE # often a smart decision     ) print(class_mod) #> A two-class `tof_model` with a mixture parameter (alpha) of 1 and a penalty parameter (lambda) of 1e-10  #> # A tibble: 28 × 2 #>    feature               coefficient #>    <chr>                       <dbl> #>  1 p4EBP1_dP_IL7_Pop2          -3.10 #>  2 pCreb_dP_PVO4_Pop2          -2.66 #>  3 TSLPr_Pop2                   2.07 #>  4 CD43_Pop2                    2.00 #>  5 pSTAT5_FC_PVO4_Pop2         -1.80 #>  6 pS6_dP_IL7_Pop2              1.56 #>  7 pPLCg1_2_dP_PVO4_Pop2        1.44 #>  8 (Intercept)                 -1.43 #>  9 pSTAT5_FC_BCR_Pop2           1.24 #> 10 pErk_dP_IL7_Pop2            -1.23 #> # ℹ 18 more rows training_classifier_metrics <-     class_mod |>     tof_assess_model() training_classifier_metrics$confusion_matrix #> # A tibble: 4 × 3 #>   true_outcome predicted_outcome num_observations #>   <chr>        <chr>                        <int> #> 1 No           No                              37 #> 2 No           Yes                              0 #> 3 Yes          No                               0 #> 4 Yes          Yes                             24 class_mod |>     tof_plot_model() cv_classifier_metrics <-     class_mod |>     tof_assess_model(new_data = \"tuning\")  class_mod |>     tof_plot_model(new_data = \"tuning\")"},{"path":"https://keyes-timothy.github.io/tidytof/articles/modeling.html","id":"building-a-survival-model-using-elastic-net-regularized-cox-regression","dir":"Articles","previous_headings":"","what":"Building a survival model using elastic net-regularized cox regression","title":"Building predictive models","text":"Building ideas , sophisticated way model data simply predict relapse won’t, build time--event model estimates patients’ probabilities relapse function time since diagnosis. approach called “survival modeling” (specifically, case use Cox-proportional hazards modeling) takes account patients adverse events different times course disease (.e. everyone relapses time). build survival model using tidytof, use tof_train_model() verb setting model_type flag “survival”. addition, need provide two outcome columns. first columns (event_col) indicates patient relapsed (.e. experienced event--interest) censored certain amount follow-time. second (time_col) indicates much time took patient relapse censored analysis. survival model trained, can used predict patient’s probability event--interest different times post-diagnosis. However, common way survival models applied practice use patient’s predicted relative risk event--interest divide patients low- high-risk subgroups. tidytof can automatically according optimal split obtained using log-rank test possible split points dataset tof_assess_model(). addition, return predicted survival curve patient time: survival models, tof_plot_model() plots average survival curves low- high-risk groups:","code":"hyperparams <- tof_create_grid(mixture_values = 1)  survival_mod <-     training_split |>     tof_train_model(         predictor_cols = c(contains(\"Pop2\")),         time_col = time_to_event,         event_col = event,         model_type = \"survival\",         hyperparameter_grid = hyperparams,         impute_missing_predictors = TRUE,         remove_zv_predictors = TRUE # often a smart decision     )  print(survival_mod) #> A survival `tof_model` with a mixture parameter (alpha) of 1 and a penalty parameter (lambda) of 3.162e-03  #> # A tibble: 40 × 2 #>    feature               coefficient #>    <chr>                       <dbl> #>  1 pErk_dP_TSLP_Pop2           -7.03 #>  2 pCreb_dP_PVO4_Pop2          -5.47 #>  3 CD19_Pop2                   -3.73 #>  4 CD34_Pop2                    3.63 #>  5 pSTAT5_FC_BCR_Pop2           3.40 #>  6 HLADR_Pop2                  -3.38 #>  7 pPLCg1_2_dP_IL7_Pop2         3.33 #>  8 pPLCg1_2_dP_PVO4_Pop2        3.14 #>  9 pSyk_dP_TSLP_Pop2            2.88 #> 10 CD123_Pop2                   2.77 #> # ℹ 30 more rows survival_metrics <-     survival_mod |>     tof_assess_model()  survival_metrics #> $model_metrics #> # A tibble: 3 × 2 #>   metric                        value #>   <chr>                         <dbl> #> 1 neg_log_partial_likelihood 1.76e+ 1 #> 2 concordance_index          1   e+ 0 #> 3 log_rank_p_value           1.47e-22 #>  #> $survival_curves #> # A tibble: 61 × 6 #>    row_index survival_curve    relative_risk time_to_event event risk_group #>    <chr>     <list>                    <dbl>         <dbl> <dbl> <chr>      #>  1 1         <tibble [54 × 2]>       2.83e+3          1043     1 low        #>  2 2         <tibble [54 × 2]>       2.61e+3          1043     1 low        #>  3 3         <tibble [54 × 2]>       1.58e-8          5406     0 low        #>  4 4         <tibble [54 × 2]>       2.09e-4          4917     0 low        #>  5 5         <tibble [54 × 2]>       9.98e-3          4538     0 low        #>  6 6         <tibble [54 × 2]>       6.62e-1          4490     0 low        #>  7 7         <tibble [54 × 2]>       4.09e+9           136     1 high       #>  8 8         <tibble [54 × 2]>       2.57e+8           364     1 high       #>  9 9         <tibble [54 × 2]>       1.27e+9           237     1 high       #> 10 10        <tibble [54 × 2]>       2.31e+4           886     1 low        #> # ℹ 51 more rows survival_mod |>     tof_plot_model() cv_survival_metrics <-     survival_mod |>     tof_assess_model(new_data = \"tuning\") survival_mod |>     tof_plot_model(new_data = \"tuning\")"},{"path":"https://keyes-timothy.github.io/tidytof/articles/modeling.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Building predictive models","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] stringr_1.5.1  tidytof_0.99.0 #>  #> loaded via a namespace (and not attached): #>   [1] gridExtra_2.3       rlang_1.1.3         magrittr_2.0.3      #>   [4] furrr_0.3.1         matrixStats_1.2.0   compiler_4.3.3      #>   [7] systemfonts_1.0.6   vctrs_0.6.5         crayon_1.5.2        #>  [10] pkgconfig_2.0.3     shape_1.4.6.1       fastmap_1.1.1       #>  [13] ellipsis_0.3.2      labeling_0.4.3      ggraph_2.2.1        #>  [16] utf8_1.2.4          rmarkdown_2.26      prodlim_2023.08.28  #>  [19] tzdb_0.4.0          ragg_1.2.7          bit_4.0.5           #>  [22] purrr_1.0.2         xfun_0.42           glmnet_4.1-8        #>  [25] cachem_1.0.8        jsonlite_1.8.8      recipes_1.0.10      #>  [28] highr_0.10          tweenr_2.0.3        parallel_4.3.3      #>  [31] R6_2.5.1            rsample_1.2.0       bslib_0.6.1         #>  [34] stringi_1.8.3       parallelly_1.37.1   rpart_4.1.23        #>  [37] lubridate_1.9.3     jquerylib_0.1.4     Rcpp_1.0.12         #>  [40] iterators_1.0.14    knitr_1.45          future.apply_1.11.1 #>  [43] readr_2.1.5         flowCore_2.14.1     Matrix_1.6-5        #>  [46] splines_4.3.3       nnet_7.3-19         igraph_2.0.2        #>  [49] timechange_0.3.0    tidyselect_1.2.0    yaml_2.3.8          #>  [52] viridis_0.6.5       timeDate_4032.109   doParallel_1.0.17   #>  [55] codetools_0.2-19    curl_5.2.1          listenv_0.9.1       #>  [58] lattice_0.22-5      tibble_3.2.1        Biobase_2.62.0      #>  [61] withr_3.0.0         evaluate_0.23       future_1.33.1       #>  [64] desc_1.4.3          survival_3.5-8      polyclip_1.10-6     #>  [67] pillar_1.9.0        foreach_1.5.2       stats4_4.3.3        #>  [70] generics_0.1.3      vroom_1.6.5         RcppHNSW_0.6.0      #>  [73] S4Vectors_0.40.2    hms_1.1.3           ggplot2_3.5.0       #>  [76] munsell_0.5.0       scales_1.3.0        globals_0.16.3      #>  [79] class_7.3-22        glue_1.7.0          tools_4.3.3         #>  [82] data.table_1.15.2   gower_1.0.1         fs_1.6.3            #>  [85] graphlayouts_1.1.1  tidygraph_1.3.1     grid_4.3.3          #>  [88] yardstick_1.3.0     tidyr_1.3.1         RProtoBufLib_2.14.0 #>  [91] ipred_0.9-14        colorspace_2.1-0    ggforce_0.4.2       #>  [94] cli_3.6.2           textshaping_0.3.7   fansi_1.0.6         #>  [97] cytolib_2.14.1      viridisLite_0.4.2   lava_1.8.0          #> [100] dplyr_1.1.4         gtable_0.3.4        sass_0.4.8          #> [103] digest_0.6.34       BiocGenerics_0.48.1 ggrepel_0.9.5       #> [106] farver_2.1.1        memoise_2.0.1       htmltools_0.5.7     #> [109] pkgdown_2.0.7       lifecycle_1.0.4     hardhat_1.3.1       #> [112] bit64_4.0.5         MASS_7.3-60.0.1"},{"path":"https://keyes-timothy.github.io/tidytof/articles/preprocessing.html","id":"preprocessing-with-tof_preprocess","dir":"Articles","previous_headings":"","what":"Preprocessing with tof_preprocess","title":"Preprocessing","text":"Generally speaking, raw ion counts measured analyte mass cytometer (content raw FCS files obtained directly mass cytometer) need transformed CyTOF data analysis. Common preprocessing steps may include variance-stabilizing transformations - hyperbolic arcsine (arcsinh) transformation log transformation - scaling/centering, /denoising. perform standard preprocessing tasks tidytof, use tof_preprocess. tof_preprocess’s default behavior apply arcsinh transformation (cofactor 5) numeric column input tof_tibble well remove gaussian noise Fluidigm software adds ion count (noise added visualization purposes, analyses, removing recommended). example, can preprocess tidytof’s built-phenograph_data tof_tibble see first measurements change . alter tof_preprocess’s default behavior, change channel_cols argument specify columns tof_tibble transformed. Alter transform_fun argument specify vector-valued function used transform channel_cols. example, suppose want center scale numeric columns instead arcsinh-transforming : keep gaussian noise added Fluidigm software (working dataset noise), set undo_noise argument FALSE.","code":"data(phenograph_data)  # before preprocessing phenograph_data %>%     select(cd45, cd34, cd38) %>%     head() #> # A tibble: 6 × 3 #>    cd45   cd34  cd38 #>   <dbl>  <dbl> <dbl> #> 1  131.  3.23   1.51 #> 2  230. -0.582 11.4  #> 3  293.  5.20   1.84 #> 4  431.  0.363 13.3  #> # ℹ 2 more rows phenograph_data %>%     # perform preprocessing     tof_preprocess() %>%     # inspect new values     select(cd45, cd34, cd38) %>%     head() #> # A tibble: 6 × 3 #>    cd45    cd34  cd38 #>   <dbl>   <dbl> <dbl> #> 1  3.96  0.608  0.298 #> 2  4.52 -0.116  1.56  #> 3  4.76  0.909  0.360 #> 4  5.15  0.0725 1.70  #> # ℹ 2 more rows phenograph_data %>%     # preprocess     tof_preprocess(transform_fun = scale) %>%     # inspect new values     select(cd45, cd34, cd38) %>%     head() #> # A tibble: 6 × 3 #>   cd45[,1] cd34[,1] cd38[,1] #>      <dbl>    <dbl>    <dbl> #> 1   -1.40     1.01   -0.437  #> 2   -1.15    -0.911   0.0316 #> 3   -0.999    2.00   -0.422  #> 4   -0.661   -0.436   0.120  #> # ℹ 2 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/preprocessing.html","id":"postprocessing-with-tof_postprocess","dir":"Articles","previous_headings":"","what":"Postprocessing with tof_postprocess","title":"Preprocessing","text":"final note, note built-function tof_postprocess works nearly identically tof_preprocess, provides different default behavior (namely, applying reverse arcsinh transformation cofactor 5 numeric columns. See ?tof_postprocess details).","code":"print(phenograph_data) %>%     select(cd45, cd34, cd38) %>%     head() #> # A tibble: 3,000 × 25 #>   sample_name  phenograph_cluster    cd19 cd11b   cd34  cd45  cd123   cd33  cd47 #>   <chr>        <chr>                <dbl> <dbl>  <dbl> <dbl>  <dbl>  <dbl> <dbl> #> 1 H1_PhenoGra… cluster1           -0.168  29.0   3.23   131. -0.609  1.21   13.0 #> 2 H1_PhenoGra… cluster1            1.65    4.83 -0.582  230.  2.53  -0.507  12.9 #> 3 H1_PhenoGra… cluster1            2.79   36.1   5.20   293. -0.265  3.67   27.1 #> 4 H1_PhenoGra… cluster1            0.0816 48.8   0.363  431.  2.04   9.40   41.0 #> # ℹ 2,996 more rows #> # ℹ 16 more variables: cd7 <dbl>, cd44 <dbl>, cd38 <dbl>, cd3 <dbl>, #> #   cd117 <dbl>, cd64 <dbl>, cd41 <dbl>, pstat3 <dbl>, pstat5 <dbl>, #> #   pampk <dbl>, p4ebp1 <dbl>, ps6 <dbl>, pcreb <dbl>, `pzap70-syk` <dbl>, #> #   prb <dbl>, `perk1-2` <dbl> #> # A tibble: 6 × 3 #>    cd45   cd34  cd38 #>   <dbl>  <dbl> <dbl> #> 1  131.  3.23   1.51 #> 2  230. -0.582 11.4  #> 3  293.  5.20   1.84 #> 4  431.  0.363 13.3  #> # ℹ 2 more rows  # after preprocessing and post-processing, the data are the same # except that the re-added noise component is different for each value phenograph_data %>%     tof_preprocess() %>%     tof_postprocess(redo_noise = TRUE) %>%     select(cd45, cd34, cd38) %>%     head() #> # A tibble: 6 × 3 #>    cd45   cd34   cd38 #>   <dbl>  <dbl>  <dbl> #> 1  131.  3.21   0.925 #> 2  229. -0.907 10.8   #> 3  293.  5.05   1.42  #> 4  431.  0.235 12.6   #> # ℹ 2 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/preprocessing.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Preprocessing","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] dplyr_1.1.4    tidytof_0.99.0 #>  #> loaded via a namespace (and not attached): #>   [1] tidyselect_1.2.0    viridisLite_0.4.2   timeDate_4032.109   #>   [4] farver_2.1.1        viridis_0.6.5       ggraph_2.2.1        #>   [7] fastmap_1.1.1       tweenr_2.0.3        rpart_4.1.23        #>  [10] digest_0.6.34       timechange_0.3.0    lifecycle_1.0.4     #>  [13] yardstick_1.3.0     survival_3.5-8      magrittr_2.0.3      #>  [16] compiler_4.3.3      rlang_1.1.3         sass_0.4.8          #>  [19] tools_4.3.3         igraph_2.0.2        utf8_1.2.4          #>  [22] yaml_2.3.8          data.table_1.15.2   knitr_1.45          #>  [25] graphlayouts_1.1.1  withr_3.0.0         purrr_1.0.2         #>  [28] RProtoBufLib_2.14.0 BiocGenerics_0.48.1 desc_1.4.3          #>  [31] nnet_7.3-19         grid_4.3.3          polyclip_1.10-6     #>  [34] stats4_4.3.3        fansi_1.0.6         RcppHNSW_0.6.0      #>  [37] future_1.33.1       colorspace_2.1-0    ggplot2_3.5.0       #>  [40] globals_0.16.3      scales_1.3.0        iterators_1.0.14    #>  [43] MASS_7.3-60.0.1     cli_3.6.2           rmarkdown_2.26      #>  [46] ragg_1.2.7          generics_0.1.3      future.apply_1.11.1 #>  [49] tzdb_0.4.0          cachem_1.0.8        flowCore_2.14.1     #>  [52] ggforce_0.4.2       stringr_1.5.1       splines_4.3.3       #>  [55] parallel_4.3.3      matrixStats_1.2.0   vctrs_0.6.5         #>  [58] hardhat_1.3.1       glmnet_4.1-8        Matrix_1.6-5        #>  [61] jsonlite_1.8.8      cytolib_2.14.1      hms_1.1.3           #>  [64] S4Vectors_0.40.2    ggrepel_0.9.5       listenv_0.9.1       #>  [67] systemfonts_1.0.6   foreach_1.5.2       gower_1.0.1         #>  [70] tidyr_1.3.1         jquerylib_0.1.4     recipes_1.0.10      #>  [73] parallelly_1.37.1   glue_1.7.0          pkgdown_2.0.7       #>  [76] codetools_0.2-19    stringi_1.8.3       lubridate_1.9.3     #>  [79] gtable_0.3.4        shape_1.4.6.1       munsell_0.5.0       #>  [82] tibble_3.2.1        pillar_1.9.0        htmltools_0.5.7     #>  [85] ipred_0.9-14        lava_1.8.0          R6_2.5.1            #>  [88] textshaping_0.3.7   doParallel_1.0.17   tidygraph_1.3.1     #>  [91] evaluate_0.23       Biobase_2.62.0      lattice_0.22-5      #>  [94] readr_2.1.5         memoise_2.0.1       bslib_0.6.1         #>  [97] class_7.3-22        Rcpp_1.0.12         prodlim_2023.08.28  #> [100] gridExtra_2.3       xfun_0.42           fs_1.6.3            #> [103] pkgconfig_2.0.3"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"accessing-the-data-for-this-vignette","dir":"Articles","previous_headings":"","what":"Accessing the data for this vignette","title":"Quality control","text":"demonstrate use {tidytof}’s quality control verbs, use combination simulated real data vignette. Simulated data generated --fly sections , walk download real dataset section. want download dataset originally collected development PhenoGraph algorithm. data built HDCytoData package, available Bioconductor can downloaded following command: load PhenoGraph data current R session, can call function HDCytoData, provide us format {flowCore} package (called “flowSet”). convert tidy tibble, can use tidytof built-method converting flowCore objects tof_tbl’s. also add lines dplyr code clean column names perform standard arcsinh transformation. Thus, can see levine tof_tbl 265627 cells (one row) 40 pieces information cell (one column).","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE)) {     install.packages(\"BiocManager\") }  BiocManager::install(\"HDCytoData\") levine <-     HDCytoData::Levine_32dim_flowSet() |>     as_tof_tbl() |>     # a bit of data cleaning     dplyr::mutate(population_id = as.character(population_id)) |>     dplyr::rename_with(         .fn = \\(x) stringr::str_to_lower(stringr::str_remove(x, \"\\\\|.+\"))     ) |>     dplyr::mutate(dplyr::across(c(file_number, population_id), as.character)) |>     # arcsinh transformation     tof_preprocess(         channel_cols =             c(-time, -cell_length, -event_number, -file_number, -population_id)     )"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"detect-low-expression-i-e--potentially-failed-channels-with-tof_assess_channels","dir":"Articles","previous_headings":"","what":"Detect low-expression (i.e. potentially failed) channels with tof_assess_channels()","title":"Quality control","text":"data collection, might wonder channels include downstream analyses. particular, might want exclude channels positive values, situation indicates antibody may failed, signal particular channel may weak detected. , can use tof_assess_channels(), verb calculates many cells negative (.e. use-specified threshold, negative_threshold) channel flags channels user-specified proportion negative cells (negative_proportion_flag). levine dataset, look markers 97.5% cells threshold 5 ion counts: can see two channels 97.5% cells dataset 5 counts. given experiment, might expected (.e. marker expressed rare cell population) unexpected (marker expressed many cells). case, can visualize marker negative cells manually inspect (recommend flagged channels).  case, looks like small population cells slightly positive cd14, simply measurement noise/nonspecific binding antibody. user whether include cd14 downstream analyses.","code":"# convert 5 counts to asinh value with a cofactor of 5 threshold <- asinh(5 / 5)  levine |>     tof_assess_channels(         negative_threshold = threshold,         negative_proportion_flag = 0.975     ) #> # A tibble: 38 × 3 #>    channel negative_proportion flagged_channel #>    <chr>                 <dbl> <lgl>           #>  1 cd14                  0.988 TRUE            #>  2 cd133                 0.975 TRUE            #>  3 cd117                 0.969 FALSE           #>  4 cd16                  0.967 FALSE           #>  5 flt3                  0.960 FALSE           #>  6 cd15                  0.940 FALSE           #>  7 cd41                  0.923 FALSE           #>  8 cd34                  0.909 FALSE           #>  9 cd61                  0.890 FALSE           #> 10 cd33                  0.885 FALSE           #> # ℹ 28 more rows levine |>     tof_plot_cells_density(marker_col = cd14)"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"identify-time-periods-of-abnormally-low-or-high-flow-rate-during-data-acquisition-using-tof_assess_flow_rate","dir":"Articles","previous_headings":"","what":"Identify time periods of abnormally low or high flow rate during data acquisition using tof_assess_flow_rate()","title":"Quality control","text":"Large changes flow rate cytometer can impact quality signal acquired data collection: example, abnormally low flow rates can caused partial occlusions cytometer’s flow cell, leading debris air infiltration cytometer’s microfluidics system. Thus, can useful perform quality control step explicitly interrogates flow rate course cytometry experiment order flag cells collected unusually high low rates acquisition. , {tidytof} provides tof_assess_flow_rate(), function implements simplified version FlowAI’s flow rate analysis. short, relative flow rates timestep cytometry experiment calculated, outlier timepoints particularly high low flow rates (.e. beyond extreme values t-distribution across timesteps) flagged. size timesteps user-defined parameter calculation, significance level (0 1) within t-distribution determines anomalous time step’s flow rate must cells flagged. can apply tof_assess_flow_rate() levine dataset , using  result , can see last several timesteps flagged potentially low flow rates. decision include exclude cells analyses left user. group_cols argument can also used analyze flow rates samples, patients, mass cytometry barcode plates, etc. separately.","code":"levine |>     tof_assess_flow_rate(         time_col = time,         num_timesteps = 200,         # flag timepoints in which flow rates are high or low at a signicance level         # of p = 0.01         alpha_threshold = 0.01,         # plot the number of cells in each timestep, and whether or not the         # rates were flagged as too high or too low         visualize = TRUE     ) levine |>     tof_assess_flow_rate(         time_col = time,         # analyze two files in the levine dataset separately         group_cols = file_number,         alpha_threshold = 0.01,         visualize = TRUE     )"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"flag-cells-that-are-unusually-far-from-the-centroid-of-a-cluster-to-which-they-have-been-assigned-with-tof_assess_clusters_distance","dir":"Articles","previous_headings":"","what":"Flag cells that are unusually far from the centroid of a cluster to which they have been assigned with tof_assess_clusters_distance()","title":"Quality control","text":"using favorite clustering algorithm define cell subpopulations (example, using tof_cluster()), may wonder well clustering procedure worked. example, may clusters contain outliers - , cells less similar cells cluster typical. detect cells, tidytof provides tof_assess_clusters_distance() verb, computes Mahalanobis distance cell centroid cluster assigned. , computes z-score mahalanobis distances cells cluster flags cells z-score user-specified threshold. Altogether, procedure flags cells unusually far cluster centroid - .e. candidate outliers. demonstrate use tof_assess_clusters_distance() simulated data. simulate data 3 clusters, large population cells “truly” belong cluster well small population outliers cells erroneously assigned cluster. following plots visualize simulated data described :   Using dataset, see tof_assess_clusters_distance() can successfully flag majority outlier cells cluster.","code":"set.seed(2020L)  # simulate large population of cells that truly belong in their assigned cluster sim_data_base <-     dplyr::tibble(         cd45 = c(rnorm(n = 600), rnorm(n = 500, mean = -4)),         cd38 =             c(                 rnorm(n = 100, sd = 0.5),                 rnorm(n = 500, mean = -3),                 rnorm(n = 500, mean = 8)             ),         cd34 =             c(                 rnorm(n = 100, sd = 0.2, mean = -10),                 rnorm(n = 500, mean = 4),                 rnorm(n = 500, mean = 60)             ),         cd19 = c(rnorm(n = 100, sd = 0.3, mean = 10), rnorm(n = 1000)),         cluster_id = c(rep(\"a\", 100), rep(\"b\", 500), rep(\"c\", 500)),         dataset = \"non-outlier\"     )  # simulate outlier cells that do not belong in their assigned cluster sim_data_outlier <-     dplyr::tibble(         cd45 = c(rnorm(n = 10), rnorm(50, mean = 3), rnorm(n = 50, mean = -12)),         cd38 =             c(                 rnorm(n = 10, sd = 0.5),                 rnorm(n = 50, mean = -10),                 rnorm(n = 50, mean = 10)             ),         cd34 =             c(                 rnorm(n = 10, sd = 0.2, mean = -15),                 rnorm(n = 50, mean = 15),                 rnorm(n = 50, mean = 70)             ),         cd19 = c(rnorm(n = 10, sd = 0.3, mean = 19), rnorm(n = 100)),         cluster_id = c(rep(\"a\", 10), rep(\"b\", 50), rep(\"c\", 50)),         dataset = \"outlier\"     )  # bind simulated data together sim_data <- bind_rows(sim_data_base, sim_data_outlier) sim_data |>     tof_plot_cells_embedding(color_col = cluster_id) sim_data |>     tof_plot_cells_embedding(color_col = dataset) sim_data |>     tof_assess_clusters_distance(         cluster_col = cluster_id,         # flag cells with a mahalanobis distance z-score over 3         z_threshold = 3,         augment = TRUE     ) |>     # visualize result as above     dplyr::select(-dplyr::starts_with(\".mahala\"), -z_score) |>     dplyr::mutate(flagged_cell = as.character(flagged_cell)) |>     tof_plot_cells_embedding(color_col = flagged_cell) +     scale_fill_manual(values = tof_generate_palette(num_colors = 2))"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"flag-cells-whose-cluster-assignment-is-ambiguous-with-tof_assess_clusters_entropy","dir":"Articles","previous_headings":"","what":"Flag cells whose cluster assignment is ambiguous with tof_assess_clusters_entropy()","title":"Quality control","text":"may also wish evaluate clustering result based cell’s absolute distance centroid cluster assigned, based relative distances cell cluster centroids. , order confident cell’s cluster assignment, ideally want cell close centroid cluster assigned, relatively distant clusters. contrasts scenario cell might similarly close centroids 2-3 clusters, case might think cell “ambiguous” phenotype, phenotype intermediate clusters clustering algorithm identified. flag “ambiguous” clusters, {tidytof} provides tof_assess_clusters_entropy() verb. tof_assess_clusters_entropy() computes entropy L1-scaled mahalanobis distance vector (.e. mahalanobis distance cell centroids clusters dataset) - entropy low (close 0) confident cell’s cluster assignment, high (near 1) equally close multiple cluster centroids. demonstrate use function simulated data levine dataset .","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"simulated-data","dir":"Articles","previous_headings":"Flag cells whose cluster assignment is ambiguous with tof_assess_clusters_entropy()","what":"Simulated data","title":"Quality control","text":"First, simulate fake dataset 3000 cells 4 channels. simulated dataset, two well-defined clusters (“b” “c”) dispersed cluster intermediate others (“”). data visualized :  dataset, can imagine first analysis approach might involve clustering cells 2 distinct clusters. data simulated, already know number clusters small - can calculating entropy cells resulting clusters help us realize without prior knowledge? check, can use tof_assess_clusters_entropy():   plots , can see cells middle 2 k-means clusters (correspond well ground-truth clusters “b” “c” ) high entropy values, whereas cells closer one centroids low entropy values. can also see tof_assess_clusters_entropy() flags cells potentially anomalous (.e. intermediate phenotype two clusters identified) entropy values 75th percentile (user-specified parameter) entropy values dataset. user wish recluster dataset, filter anomalous cells, processing steps.  can see , expected, intermediate cluster (“”) higher entropies either distinct clusters (“b” “c”).","code":"sim_data <-     dplyr::tibble(         cd45 =             c(                 rnorm(n = 1000, sd = 2),                 rnorm(n = 1000, mean = 2),                 rnorm(n = 1000, mean = -2)             ),         cd38 =             c(                 rnorm(n = 1000, sd = 2),                 rnorm(n = 1000, mean = 2),                 rnorm(n = 1000, mean = -2)             ),         cd34 =             c(                 rnorm(n = 1000, sd = 2),                 rnorm(n = 1000, mean = 2),                 rnorm(n = 1000, mean = -2)             ),         cd19 =             c(                 rnorm(n = 1000, sd = 2),                 rnorm(n = 1000, mean = 2),                 rnorm(n = 1000, mean = -2)             ),         cluster_id = c(rep(\"a\", 1000), rep(\"b\", 1000), rep(\"c\", 1000))     ) sim_data |>     tof_reduce_dimensions(method = \"pca\") |>     tof_plot_cells_embedding(         embedding_cols = c(.pc1, .pc2),         color_col = cluster_id     ) set.seed(17L)  entropy_result <-     sim_data |>     # cluster into 2 clusters     tof_cluster(         num_clusters = 2,         method = \"kmeans\"     ) |>     # calculate the entropy of all cells     tof_assess_clusters_entropy(         cluster_col = .kmeans_cluster,         marker_cols = starts_with(\"cd\"),         entropy_quantile = 0.8,         augment = TRUE     )  # plot the clusters in PCA space entropy_result |>     select(-starts_with(\".mahala\"), -flagged_cell) |>     tof_reduce_dimensions(pca_cols = starts_with(\"cd\"), method = \"pca\") |>     tof_plot_cells_embedding(embedding_cols = c(.pc1, .pc2), color_col = .kmeans_cluster) # show the entropy values for each cell entropy_result |>     select(-starts_with(\".mahala\"), -flagged_cell) |>     tof_reduce_dimensions(pca_cols = starts_with(\"cd\"), method = \"pca\") |>     tof_plot_cells_embedding(embedding_cols = c(.pc1, .pc2), color_col = entropy) +     scale_fill_viridis_c() entropy_result |>     select(-starts_with(\".mahala\")) |>     tof_reduce_dimensions(pca_cols = starts_with(\"cd\"), method = \"pca\") |>     tof_plot_cells_embedding(embedding_cols = c(.pc1, .pc2), color_col = flagged_cell) +     scale_fill_viridis_d() entropy_result |>     ggplot(aes(x = entropy, fill = cluster_id)) +     geom_density(alpha = 0.4) +     theme_bw()"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"real-data","dir":"Articles","previous_headings":"Flag cells whose cluster assignment is ambiguous with tof_assess_clusters_entropy()","what":"Real data","title":"Quality control","text":"can also apply tof_assess_clusters_entropy() dataset derived levine data. Suppose take 5 largest clusters levine save result small_levine tof_tbl. , can perturb dataset replacing labels cells smallest cluster (cluster 9) random labels. effectively creates population cells dataset whose “true” cluster label absent. scenario, expect cells perturbed cluster relatively distant remaining clusters, whereas unperturbed cells relatively close cluster centroid (correct centroid). Thus, can test tof_assess_clusters_entropy() successfully flags cells perturbed cluster relative others: plot , can see cells cluster 9 larger entropy values cells clusters, expected.  Similarly, can see majority cells 9 successfully flagged tof_assess_clusters_entropy() using entropy quantile threshold 0.9. Conversely, cells cluster (cluster 15) flagged.","code":"clusters_to_keep <-     levine |>     dplyr::count(population_id) |>     dplyr::slice_max(order_by = n, n = 5L) |>     dplyr::arrange(n) |>     pull(population_id)  smallest_cluster <- clusters_to_keep[1] largest_cluster <- clusters_to_keep[[length(clusters_to_keep)]]  small_levine <-     levine |>     dplyr::filter(population_id %in% clusters_to_keep) # perform the perturbation small_levine <-     small_levine |>     dplyr::mutate(         new_population_id =             dplyr::if_else(                 population_id %in% smallest_cluster,                 sample(                     clusters_to_keep[-which(clusters_to_keep %in% smallest_cluster)],                     size = nrow(small_levine),                     replace = TRUE                 ),                 population_id             )     )  # perform the entropy assessment entropy_levine <-     small_levine |>     tof_assess_clusters_entropy(         cluster_col = new_population_id,         marker_cols = starts_with(\"cd\"),         augment = TRUE     ) entropy_levine |>     mutate(population_id = fct_reorder(population_id, entropy)) |>     tof_plot_cells_density(         marker_col = entropy,         group_col = population_id,         use_ggridges = TRUE,         scale = 0.1     ) +     ggplot2::theme(legend.position = \"none\") +     ggplot2::labs(x = \"Entropy\", y = \"Cluster ID\") entropy_levine |>     mutate(flagged_cell = entropy > quantile(entropy, prob = 0.9)) |>     dplyr::count(population_id, flagged_cell) |>     group_by(population_id) |>     mutate(prop = n / sum(n)) |>     ungroup() |>     dplyr::filter(flagged_cell) #> # A tibble: 2 × 4 #>   population_id flagged_cell     n   prop #>   <chr>         <lgl>        <int>  <dbl> #> 1 15            TRUE         12888 0.0798 #> 2 9             TRUE         11666 0.706"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Quality control","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats4    stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #>  [1] HDCytoData_1.22.0           flowCore_2.14.1             #>  [3] SummarizedExperiment_1.32.0 Biobase_2.62.0              #>  [5] GenomicRanges_1.54.1        GenomeInfoDb_1.38.7         #>  [7] IRanges_2.36.0              S4Vectors_0.40.2            #>  [9] MatrixGenerics_1.14.0       matrixStats_1.2.0           #> [11] ExperimentHub_2.10.0        AnnotationHub_3.10.0        #> [13] BiocFileCache_2.10.1        dbplyr_2.4.0                #> [15] BiocGenerics_0.48.1         forcats_1.0.0               #> [17] ggplot2_3.5.0               dplyr_1.1.4                 #> [19] tidytof_0.99.0              #>  #> loaded via a namespace (and not attached): #>   [1] jsonlite_1.8.8                shape_1.4.6.1                 #>   [3] magrittr_2.0.3                farver_2.1.1                  #>   [5] rmarkdown_2.26                fs_1.6.3                      #>   [7] zlibbioc_1.48.0               ragg_1.2.7                    #>   [9] vctrs_0.6.5                   memoise_2.0.1                 #>  [11] htmltools_0.5.7               S4Arrays_1.2.1                #>  [13] curl_5.2.1                    SparseArray_1.2.4             #>  [15] sass_0.4.8                    parallelly_1.37.1             #>  [17] bslib_0.6.1                   desc_1.4.3                    #>  [19] lubridate_1.9.3               cachem_1.0.8                  #>  [21] igraph_2.0.2                  mime_0.12                     #>  [23] lifecycle_1.0.4               iterators_1.0.14              #>  [25] pkgconfig_2.0.3               Matrix_1.6-5                  #>  [27] R6_2.5.1                      fastmap_1.1.1                 #>  [29] shiny_1.8.0                   GenomeInfoDbData_1.2.11       #>  [31] future_1.33.1                 digest_0.6.34                 #>  [33] colorspace_2.1-0              AnnotationDbi_1.64.1          #>  [35] textshaping_0.3.7             RSQLite_2.3.5                 #>  [37] labeling_0.4.3                filelock_1.0.3                #>  [39] cytolib_2.14.1                fansi_1.0.6                   #>  [41] yardstick_1.3.0               timechange_0.3.0              #>  [43] httr_1.4.7                    polyclip_1.10-6               #>  [45] abind_1.4-5                   compiler_4.3.3                #>  [47] bit64_4.0.5                   withr_3.0.0                   #>  [49] doParallel_1.0.17             viridis_0.6.5                 #>  [51] DBI_1.2.2                     highr_0.10                    #>  [53] ggforce_0.4.2                 MASS_7.3-60.0.1               #>  [55] lava_1.8.0                    rappdirs_0.3.3                #>  [57] DelayedArray_0.28.0           tools_4.3.3                   #>  [59] interactiveDisplayBase_1.40.0 httpuv_1.6.14                 #>  [61] future.apply_1.11.1           nnet_7.3-19                   #>  [63] glue_1.7.0                    promises_1.2.1                #>  [65] grid_4.3.3                    generics_0.1.3                #>  [67] recipes_1.0.10                gtable_0.3.4                  #>  [69] tzdb_0.4.0                    class_7.3-22                  #>  [71] tidyr_1.3.1                   data.table_1.15.2             #>  [73] hms_1.1.3                     tidygraph_1.3.1               #>  [75] utf8_1.2.4                    XVector_0.42.0                #>  [77] ggrepel_0.9.5                 BiocVersion_3.18.1            #>  [79] foreach_1.5.2                 pillar_1.9.0                  #>  [81] stringr_1.5.1                 RcppHNSW_0.6.0                #>  [83] later_1.3.2                   splines_4.3.3                 #>  [85] tweenr_2.0.3                  lattice_0.22-5                #>  [87] survival_3.5-8                bit_4.0.5                     #>  [89] RProtoBufLib_2.14.0           tidyselect_1.2.0              #>  [91] Biostrings_2.70.2             knitr_1.45                    #>  [93] gridExtra_2.3                 xfun_0.42                     #>  [95] graphlayouts_1.1.1            hardhat_1.3.1                 #>  [97] timeDate_4032.109             stringi_1.8.3                 #>  [99] yaml_2.3.8                    evaluate_0.23                 #> [101] codetools_0.2-19              ggraph_2.2.1                  #> [103] tibble_3.2.1                  BiocManager_1.30.22           #> [105] cli_3.6.2                     rpart_4.1.23                  #> [107] xtable_1.8-4                  systemfonts_1.0.6             #> [109] munsell_0.5.0                 jquerylib_0.1.4               #> [111] Rcpp_1.0.12                   globals_0.16.3                #> [113] png_0.1-8                     parallel_4.3.3                #> [115] ellipsis_0.3.2                pkgdown_2.0.7                 #> [117] gower_1.0.1                   readr_2.1.5                   #> [119] blob_1.2.4                    listenv_0.9.1                 #> [121] glmnet_4.1-8                  viridisLite_0.4.2             #> [123] ipred_0.9-14                  ggridges_0.5.6                #> [125] scales_1.3.0                  prodlim_2023.08.28            #> [127] purrr_1.0.2                   crayon_1.5.2                  #> [129] rlang_1.1.3                   KEGGREST_1.42.0"},{"path":"https://keyes-timothy.github.io/tidytof/articles/reading-and-writing-data.html","id":"accessing-the-data-for-this-vignette","dir":"Articles","previous_headings":"","what":"Accessing the data for this vignette","title":"Reading and writing data","text":"tidytof comes bundled several example mass cytometry datasets. access raw FCS CSV files containing data, use tidytof_example_data function. called arguments, tidytof_example_data return character vector naming datasets contained tidytof: details datasets contained directories isn’t particularly important, basic information follows: aml - one FCS file containing myeloid cells healthy bone marrow one FCS file containing myeloid cells AML patient bone marrow ddpr - two FCS files containing B-cell lineage cells paper mix - two FCS files different CyTOF antigen panels (one FCS file “aml” directory one “phenograph” directory) mix2 - three files different CyTOF antigen panels different file extensions (one FCS file “aml” directory two CSV files “phenograph_csv directory) phenograph - three FCS files containing AML cells paper phenograph_csv - cells “phenograph” directory, stored CSV files scaffold - three FCS files paper statistical_scaffold - three FCS files paper surgery - three FCS files paper obtain file path directory containing dataset, call tidytof_example_data one dataset names argument. example, obtain directory phenograph data, use following command:","code":"tidytof_example_data() #> [1] \"aml\"               \"ddpr\"              \"ddpr_metadata.csv\" #> [4] \"mix\"               \"mix2\"              \"phenograph\"        #> [7] \"phenograph_csv\"    \"surgery\" tidytof_example_data(\"phenograph\") #> [1] \"/home/runner/work/_temp/Library/tidytof/extdata/phenograph\""},{"path":"https://keyes-timothy.github.io/tidytof/articles/reading-and-writing-data.html","id":"reading-data-with-tof_read_data","dir":"Articles","previous_headings":"","what":"Reading Data with tof_read_data","title":"Reading and writing data","text":"Using one directories (directory containing CyTOF data local machine), can use tof_read_data read CyTOF data raw files. Acceptable formats include FCS files CSV files. Importantly, tof_read_data smart enough read single FCS/CSV files multiple FCS/CSV files depending whether first argument (path) leads single file directory files. , can use tof_read_data read FCS files “phenograph” example dataset bundled tidytof store phenograph variable. Regardless input data file type, tidytof reads data extended tibble class called tof_tbl (pronounced “tof tibble”). tof tibbles S3 class identical tbl_df, one additional attribute (“panel”). tidytof stores additional attribute tof_tbls , addition analyzing CyTOF data individual experiments, CyTOF users often want compare panels experiments find common markers compare metals associated particular markers across panels. retrieve panel information tof_tbl, use tof_get_panel: additional notes tof_tbls: tof_tbls contains one cell per row one CyTOF channel per column (provide data “tidy” format). tof_read_data adds additional column output tof_tbl encoding name file cell read (“file_name” column). tof_tbls inherit tbl_df class, methods available tibbles also available tof_tbls.","code":"phenograph <-     tidytof_example_data(\"phenograph\") %>%     tof_read_data()  phenograph %>%     class() #> [1] \"tof_tbl\"    \"tbl_df\"     \"tbl\"        \"data.frame\" phenograph %>%     tof_get_panel() #> # A tibble: 44 × 2 #>   metals      antigens    #>   <chr>       <chr>       #> 1 Time        Time        #> 2 Cell_length Cell_length #> 3 Ir191       DNA1        #> 4 Ir193       DNA2        #> # ℹ 40 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/reading-and-writing-data.html","id":"using-tibble-methods-with-tidytof-tibbles","dir":"Articles","previous_headings":"","what":"Using tibble methods with {tidytof} tibbles","title":"Reading and writing data","text":"extension tbl_df class, tof_tbls get access dplyr tidyr free. can useful performing variety common operations. example, phenograph object two columns - PhenoGraph Condition - encode categorical variables numeric codes. might interested converting types columns strings make sure don’t accidentally perform quantitative operations later. Thus, dplyr’s useful mutate method can applied phenograph convert two columns character vectors. note tof_tbl class preserved even transformations. Importantly, tof_read_data uses opinionated heuristic mine different keyword slots input FCS file(s) guess metals antigens used data acquisition. Thus, CSV files read using tof_read_data, recommended use panel_info argument provide panel manually (CSV files, unlike FCS files, provide built-metadata columns contain).","code":"phenograph <-     phenograph %>%     # mutate the input tof_tbl     mutate(         PhenoGraph = as.character(PhenoGraph),         Condition = as.character(Condition)     )  phenograph %>%     # use dplyr's select method to show     # that the columns have been changed     select(where(is.character)) #> # A tibble: 300 × 3 #>   file_name                  PhenoGraph Condition #>   <chr>                      <chr>      <chr>     #> 1 H1_PhenoGraph_cluster1.fcs 7          7         #> 2 H1_PhenoGraph_cluster1.fcs 6          6         #> 3 H1_PhenoGraph_cluster1.fcs 9          9         #> 4 H1_PhenoGraph_cluster1.fcs 2          2         #> # ℹ 296 more rows phenograph %>%     class() #> [1] \"tof_tbl\"    \"tbl_df\"     \"tbl\"        \"data.frame\" # when csv files are read, the tof_tibble's \"panel\" # attribute will be empty by default tidytof_example_data(\"phenograph_csv\") %>%     tof_read_data() %>%     tof_get_panel() #> # A tibble: 0 × 0  # to add a panel manually, provide it as a tibble # to tof_read_data phenograph_panel <-     phenograph %>%     tof_get_panel()  tidytof_example_data(\"phenograph_csv\") %>%     tof_read_data(panel_info = phenograph_panel) %>%     tof_get_panel() #> # A tibble: 44 × 2 #>   antigens    metals      #>   <chr>       <chr>       #> 1 Time        Time        #> 2 Cell_length Cell_length #> 3 DNA1        Ir191       #> 4 DNA2        Ir193       #> # ℹ 40 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/reading-and-writing-data.html","id":"writing-data-from-a-tof_tbl-to-disk","dir":"Articles","previous_headings":"","what":"Writing data from a tof_tbl to disk","title":"Reading and writing data","text":"Users may wish store CyTOF data FCS CSV files transformation, concatenation, filtering, data processing. write single-cell data tof_tbl FCS CSV files, use tof_write_data. illustrate use verb, use tidytof’s built-phenograph_data dataset. tof_write_data’s trickiest argument group_cols, argument used specify columns tof_tibble used group cells (rows tof_tibble) separate FCS CSV files. Simply put, argument allows tof_write_data create single FCS CSV file unique combination values group_cols columns specified user. example , cells grouped 3 output FCS files - one 3 clusters encoded phenograph_cluster column phenograph_data. files following names (derived values phenograph_cluster column): cluster1.fcs cluster2.fcs cluster3.fcs Note file names match distinct values group_cols column (phenograph_cluster): However, suppose wanted write multiple files cluster breaking cells two groups: express high levels pstat5 express low levels pstat5. can use dplyr::mutate create new column phenograph_data breaks cells high- low-pstat5 expression groups, add column group_cols specification: write 6 files following names (derived values phenograph_cluster expression_group). cluster1_low.fcs cluster1_high.fcs cluster2_low.fcs cluster2_high.fcs cluster3_low.fcs cluster3_high.fcs , note file names match distinct values group_cols columns (phenograph_cluster expression_group): useful feature tof_write_data automatically concatenate cells single FCS CSV files based specified group_cols regardless many unique files cells came . allows easy concatenation FCS CSV files containing data single sample acquired multiple CyTOF runs, example.","code":"data(phenograph_data)  print(phenograph_data) #> # A tibble: 3,000 × 25 #>   sample_name  phenograph_cluster    cd19 cd11b   cd34  cd45  cd123   cd33  cd47 #>   <chr>        <chr>                <dbl> <dbl>  <dbl> <dbl>  <dbl>  <dbl> <dbl> #> 1 H1_PhenoGra… cluster1           -0.168  29.0   3.23   131. -0.609  1.21   13.0 #> 2 H1_PhenoGra… cluster1            1.65    4.83 -0.582  230.  2.53  -0.507  12.9 #> 3 H1_PhenoGra… cluster1            2.79   36.1   5.20   293. -0.265  3.67   27.1 #> 4 H1_PhenoGra… cluster1            0.0816 48.8   0.363  431.  2.04   9.40   41.0 #> # ℹ 2,996 more rows #> # ℹ 16 more variables: cd7 <dbl>, cd44 <dbl>, cd38 <dbl>, cd3 <dbl>, #> #   cd117 <dbl>, cd64 <dbl>, cd41 <dbl>, pstat3 <dbl>, pstat5 <dbl>, #> #   pampk <dbl>, p4ebp1 <dbl>, ps6 <dbl>, pcreb <dbl>, `pzap70-syk` <dbl>, #> #   prb <dbl>, `perk1-2` <dbl> # when copying and pasting this code, feel free to change this path # to wherever you'd like to save your output files my_path <- file.path(\"~\", \"Desktop\", \"tidytof_vignette_files\")  phenograph_data %>%     tof_write_data(         group_cols = phenograph_cluster,         out_path = my_path,         format = \"fcs\"     ) phenograph_data %>%     distinct(phenograph_cluster) #> # A tibble: 3 × 1 #>   phenograph_cluster #>   <chr>              #> 1 cluster1           #> 2 cluster2           #> 3 cluster3 phenograph_data %>%     # create a variable representing if a cell is above or below     # the median expression level of pstat5     mutate(         expression_group = if_else(pstat5 > median(pstat5), \"high\", \"low\")     ) %>%     tof_write_data(         group_cols = c(phenograph_cluster, expression_group),         out_path = my_path,         format = \"fcs\"     ) phenograph_data %>%     mutate(         expression_group = if_else(pstat5 > median(pstat5), \"high\", \"low\")     ) %>%     distinct(phenograph_cluster, expression_group) #> # A tibble: 6 × 2 #>   phenograph_cluster expression_group #>   <chr>              <chr>            #> 1 cluster1           low              #> 2 cluster1           high             #> 3 cluster2           low              #> 4 cluster2           high             #> # ℹ 2 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/reading-and-writing-data.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Reading and writing data","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] dplyr_1.1.4    tidytof_0.99.0 #>  #> loaded via a namespace (and not attached): #>   [1] gridExtra_2.3       rlang_1.1.3         magrittr_2.0.3      #>   [4] matrixStats_1.2.0   compiler_4.3.3      systemfonts_1.0.6   #>   [7] vctrs_0.6.5         stringr_1.5.1       crayon_1.5.2        #>  [10] pkgconfig_2.0.3     shape_1.4.6.1       fastmap_1.1.1       #>  [13] ggraph_2.2.1        utf8_1.2.4          rmarkdown_2.26      #>  [16] prodlim_2023.08.28  tzdb_0.4.0          ragg_1.2.7          #>  [19] bit_4.0.5           purrr_1.0.2         xfun_0.42           #>  [22] glmnet_4.1-8        cachem_1.0.8        jsonlite_1.8.8      #>  [25] recipes_1.0.10      tweenr_2.0.3        parallel_4.3.3      #>  [28] R6_2.5.1            bslib_0.6.1         stringi_1.8.3       #>  [31] parallelly_1.37.1   rpart_4.1.23        lubridate_1.9.3     #>  [34] jquerylib_0.1.4     Rcpp_1.0.12         iterators_1.0.14    #>  [37] knitr_1.45          future.apply_1.11.1 readr_2.1.5         #>  [40] flowCore_2.14.1     Matrix_1.6-5        splines_4.3.3       #>  [43] nnet_7.3-19         igraph_2.0.2        timechange_0.3.0    #>  [46] tidyselect_1.2.0    yaml_2.3.8          viridis_0.6.5       #>  [49] timeDate_4032.109   doParallel_1.0.17   codetools_0.2-19    #>  [52] listenv_0.9.1       lattice_0.22-5      tibble_3.2.1        #>  [55] Biobase_2.62.0      withr_3.0.0         evaluate_0.23       #>  [58] future_1.33.1       desc_1.4.3          survival_3.5-8      #>  [61] polyclip_1.10-6     pillar_1.9.0        foreach_1.5.2       #>  [64] stats4_4.3.3        generics_0.1.3      vroom_1.6.5         #>  [67] RcppHNSW_0.6.0      S4Vectors_0.40.2    hms_1.1.3           #>  [70] ggplot2_3.5.0       munsell_0.5.0       scales_1.3.0        #>  [73] globals_0.16.3      class_7.3-22        glue_1.7.0          #>  [76] tools_4.3.3         data.table_1.15.2   gower_1.0.1         #>  [79] fs_1.6.3            graphlayouts_1.1.1  tidygraph_1.3.1     #>  [82] grid_4.3.3          yardstick_1.3.0     tidyr_1.3.1         #>  [85] RProtoBufLib_2.14.0 ipred_0.9-14        colorspace_2.1-0    #>  [88] ggforce_0.4.2       cli_3.6.2           textshaping_0.3.7   #>  [91] fansi_1.0.6         cytolib_2.14.1      viridisLite_0.4.2   #>  [94] lava_1.8.0          gtable_0.3.4        sass_0.4.8          #>  [97] digest_0.6.34       BiocGenerics_0.48.1 ggrepel_0.9.5       #> [100] farver_2.1.1        memoise_2.0.1       htmltools_0.5.7     #> [103] pkgdown_2.0.7       lifecycle_1.0.4     hardhat_1.3.1       #> [106] bit64_4.0.5         MASS_7.3-60.0.1"},{"path":"https://keyes-timothy.github.io/tidytof/articles/tidytof.html","id":"prerequisites","dir":"Articles","previous_headings":"","what":"Prerequisites","title":"Getting started with tidytof","text":"tidytof makes heavy use two concepts may unfamiliar R beginners. first pipe (|>), can read . second “grouping” data data.frame tibble using dplyr::group_by, can read . tidytof users also benefit relatively -depth understanding dplyr package, wonderful introductory vignette : Everything else self-explanatory beginner advanced R users, though zero background running R code, read chapter R Data Science Hadley Wickham.","code":"vignette(\"dplyr\")"},{"path":"https://keyes-timothy.github.io/tidytof/articles/tidytof.html","id":"workflow-basics","dir":"Articles","previous_headings":"","what":"Workflow basics","title":"Getting started with tidytof","text":"Broadly speaking, tidytof’s functionality organized support 3 levels analysis inherent single-cell data described : Reading, writing, preprocessing, visualizing data level individual cells Identifying describing cell subpopulations clusters Building models (inference prediction) level patients samples tidytof provides functions (“verbs”) operate levels analysis: Cell-level data: tof_read_data() reads single-cell data FCS CSV files disk tidy data frame called tof_tbl. tof_tbls represent cell row protein measurement (piece information associated given cell) column. tof_preprocess() transforms protein expression values using user-provided function (.e. log-transformation, centering, scaling) tof_downsample() reduces number cells tof_tibble via subsampling. tof_reduce_dimensions() performs dimensionality reduction (across columns) tof_write_data writes single-cell data tof_tibble back disk form FCS CSV file. Cluster-level data: tof_cluster() clusters cells using one several algorithms commonly applied high-dimensional cytometry data tof_metacluster() agglomerates clusters smaller number metaclusters tof_analyze_abundance() performs differential abundance analysis (DAA) clusters metaclusters across experimental groups tof_analyze_expression() performs differential expression analysis (DEA) clusters’ metaclusters’ marker expression levels across experimental groups tof_extract_features() computes summary statistics (mean marker expression) cluster. Also (optionally) pivots summary statistics sample-level tidy data frame row represents sample column represents cluster-level summary statistic. Sample-level data: tof_split_data() splits sample-level data training test set predictive modeling tof_create_grid() creates elastic net hyperparameter search grid model tuning tof_train_model() trains sample-level elastic net model saves tof_model object tof_predict() Applies trained tof_model new data predict sample-level outcomes tof_assess_model() calculates performance metrics trained tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/tidytof.html","id":"tidytof-verb-syntax","dir":"Articles","previous_headings":"","what":"{tidytof} verb syntax","title":"Getting started with tidytof","text":"exceptions, tidytof functions follow specific, shared syntax involves 3 types arguments always occur order. argument types follows: almost tidytof functions, first argument data frame (tibble). enables use pipe (|>) multi-step calculations, means first argument functions implicit (passed previous function using pipe). also means tidytof functions -called “single-table verbs,” exception tof_cluster_ddpr, “two-table verb” (details use tof_cluster_ddpr, see “clustering--metaclustering” vignette). second group arguments called column specifications, end suffix _col _cols. Column specifications unquoted column names tell tidytof verb columns compute particular operation. example, cluster_cols argument tof_cluster allows user specify column input data frames used perform clustering. Regardless verb requires , column specifications support tidyselect helpers follow rules tidyselection tidyverse verbs like dplyr::select() tidyr::pivot_longer(). Finally, third group arguments tidytof verb called method specifications, ’re comprised every argument isn’t input data frame column specification. Whereas column specifications represent columns used perform operation, method specifications represent details operation performed. example, tof_cluster_phenograph() function requires method specification num_neighbors, specifies many nearest neighbors used construct PhenoGraph algorithm’s k-nearest-neighbor graph. cases, tidytof sets reasonable defaults verb’s particular method specifications, workflows can also customized experimenting non-default values. following code demonstrates tidytof verb syntax looks practice, column method specifications explicitly pointed :","code":"data(ddpr_data)  set.seed(777L)  ddpr_data |>     tof_preprocess() |>     tof_cluster(         cluster_cols = starts_with(\"cd\"), # column specification         method = \"phenograph\", # method specification,     ) |>     tof_metacluster(         cluster_col = .phenograph_cluster, # column specification         num_metaclusters = 4, # method specification         method = \"kmeans\" # method specification     ) |>     tof_downsample(         group_cols = .kmeans_metacluster, # column specification         num_cells = 200, # method specification         method = \"constant\" # method specification     ) |>     tof_plot_cells_layout(         knn_cols = starts_with(\"cd\"), # column specification         color_col = .kmeans_metacluster, # column specification         num_neighbors = 7L, # method specification         node_size = 2L # method specification     )"},{"path":"https://keyes-timothy.github.io/tidytof/articles/tidytof.html","id":"pipelines","dir":"Articles","previous_headings":"","what":"Pipelines","title":"Getting started with tidytof","text":"tidytof verbs can used combination one another using pipe (|>) operator. example, multistep “pipeline” takes built-tidytof dataset performs following analytical steps: Arcsinh-transform column protein measurements (default behavior tof_preprocess verb Cluster cells based surface markers panel Downsample dataset 100 random cells picked cluster Perform dimensionality reduction downsampled dataset using tSNE Visualize clusters using low-dimensional tSNE embedding","code":"ddpr_data |>     # step 1     tof_preprocess() |>     # step 2     tof_cluster(         cluster_cols = starts_with(\"cd\"),         method = \"phenograph\",         # num_metaclusters = 4L,         seed = 2020L     ) |>     # step 3     tof_downsample(         group_cols = .phenograph_cluster,         method = \"constant\",         num_cells = 400     ) |>     # step 4     tof_reduce_dimensions(method = \"tsne\") |>     # step 5     tof_plot_cells_embedding(         embedding_cols = contains(\"tsne\"),         color_col = .phenograph_cluster     ) +     ggplot2::theme(legend.position = \"none\") #> Loading required namespace: Rtsne"},{"path":"https://keyes-timothy.github.io/tidytof/articles/tidytof.html","id":"other-tips","dir":"Articles","previous_headings":"","what":"Other tips","title":"Getting started with tidytof","text":"tidytof designed multidisciplinary team wet-lab biologists, bioinformaticians, physician-scientists analyze high-dimensional cytometry kinds single-cell data solve variety problems. result, tidytof’s high-level API designed great care mirror tidyverse - , human-centered, consistent, composable, inclusive wide userbase. Practically speaking, means things using tidytof. First, means tidytof designed quality--life features mind. example, may notice tidytof functions begin prefix tof_. intentional, allow use development environment’s code-completing software search tidytof functions easily (even can’t remember specific function name). reason, recommend using tidytof within RStudio development environment; however, many code editors predictive text functionality serves similar function. general, tidytof verbs organized way IDE’s code-completion tools also allow search (compare) related functions relative ease. (instance, tof_cluster_ prefix used clustering functions, tof_downsample_ prefix used downsampling functions). Second, means tidytof functions relatively intuitive use due shared logic - words, understand use one tidytof function, understand use others. example shared logic across tidytof functions argument group_cols, shows multiple verbs (tof_downsample, tof_cluster, tof_daa, tof_dea, tof_extract_features, tof_write_data). case, group_cols works way: accepts unquoted vector column names (specified manually using tidyselection) used group cells operation performed. idea generalizes throughout tidytof: see argument one place, behave identically (least similarly) wherever else encounter . Finally, means tidytof optimized first ease--use, performance. humans computers interact data differently, always trade-choosing data representation intuitive human user vs. choosing data representation optimized computational speed memory efficiency. design choices conflict one another, team tends err side choosing representation easy--understand users even expense small performance costs. Ultimately, means tidytof may optimal tool every high-dimensional cytometry analysis, though hopefully general framework provide users useful functionality.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/tidytof.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Getting started with tidytof","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] tidytof_0.99.0 #>  #> loaded via a namespace (and not attached): #>   [1] gridExtra_2.3       rlang_1.1.3         magrittr_2.0.3      #>   [4] matrixStats_1.2.0   compiler_4.3.3      systemfonts_1.0.6   #>   [7] vctrs_0.6.5         stringr_1.5.1       pkgconfig_2.0.3     #>  [10] shape_1.4.6.1       fastmap_1.1.1       labeling_0.4.3      #>  [13] ggraph_2.2.1        utf8_1.2.4          rmarkdown_2.26      #>  [16] prodlim_2023.08.28  tzdb_0.4.0          ragg_1.2.7          #>  [19] purrr_1.0.2         xfun_0.42           glmnet_4.1-8        #>  [22] cachem_1.0.8        jsonlite_1.8.8      recipes_1.0.10      #>  [25] highr_0.10          tweenr_2.0.3        parallel_4.3.3      #>  [28] R6_2.5.1            bslib_0.6.1         stringi_1.8.3       #>  [31] parallelly_1.37.1   rpart_4.1.23        lubridate_1.9.3     #>  [34] jquerylib_0.1.4     Rcpp_1.0.12         iterators_1.0.14    #>  [37] knitr_1.45          future.apply_1.11.1 readr_2.1.5         #>  [40] flowCore_2.14.1     Matrix_1.6-5        splines_4.3.3       #>  [43] nnet_7.3-19         igraph_2.0.2        timechange_0.3.0    #>  [46] tidyselect_1.2.0    yaml_2.3.8          viridis_0.6.5       #>  [49] timeDate_4032.109   doParallel_1.0.17   codetools_0.2-19    #>  [52] listenv_0.9.1       lattice_0.22-5      tibble_3.2.1        #>  [55] Biobase_2.62.0      withr_3.0.0         Rtsne_0.17          #>  [58] evaluate_0.23       future_1.33.1       desc_1.4.3          #>  [61] survival_3.5-8      polyclip_1.10-6     pillar_1.9.0        #>  [64] foreach_1.5.2       stats4_4.3.3        generics_0.1.3      #>  [67] RcppHNSW_0.6.0      S4Vectors_0.40.2    hms_1.1.3           #>  [70] ggplot2_3.5.0       munsell_0.5.0       scales_1.3.0        #>  [73] globals_0.16.3      class_7.3-22        glue_1.7.0          #>  [76] tools_4.3.3         data.table_1.15.2   gower_1.0.1         #>  [79] fs_1.6.3            graphlayouts_1.1.1  tidygraph_1.3.1     #>  [82] grid_4.3.3          yardstick_1.3.0     tidyr_1.3.1         #>  [85] RProtoBufLib_2.14.0 ipred_0.9-14        colorspace_2.1-0    #>  [88] ggforce_0.4.2       cli_3.6.2           textshaping_0.3.7   #>  [91] fansi_1.0.6         cytolib_2.14.1      viridisLite_0.4.2   #>  [94] lava_1.8.0          dplyr_1.1.4         gtable_0.3.4        #>  [97] sass_0.4.8          digest_0.6.34       BiocGenerics_0.48.1 #> [100] ggrepel_0.9.5       farver_2.1.1        memoise_2.0.1       #> [103] htmltools_0.5.7     pkgdown_2.0.7       lifecycle_1.0.4     #> [106] hardhat_1.3.1       MASS_7.3-60.0.1"},{"path":"https://keyes-timothy.github.io/tidytof/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Timothy Keyes. Maintainer. Kara Davis. Research team head, owner. Garry Nolan. Research team head, owner.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Keyes T (2024). tidytof: Analyze High-dimensional Cytometry Data Using Tidy Data Principles. R package version 0.99.0,  https://keyes-timothy.github.io/tidytof/, https://keyes-timothy.github.io/tidytof.","code":"@Manual{,   title = {tidytof: Analyze High-dimensional Cytometry Data Using Tidy Data Principles},   author = {Timothy Keyes},   year = {2024},   note = {R package version 0.99.0,  https://keyes-timothy.github.io/tidytof/},   url = {https://keyes-timothy.github.io/tidytof}, }"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"tidytof-a-user-friendly-framework-for-interactive-and-reproducible-cytometry-data-analysis-","dir":"","previous_headings":"","what":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"tidytof R package implements open-source, integrated “grammar” single-cell data analysis high-dimensional cytometry data (.e. mass cytometry, full-spectrum flow cytometry, sequence-based cytometry). Specifically, tidytof provides easy--use pipeline handling high-dimensional cytometry data multiple levels observation - single-cell level, cell subpopulation (cluster) level, whole-sample level - automating many common data-processing tasks common “tidy data” interface. extension tidyverse ecosystem data manipulation tools R, tidytof’s functions developed internally consistent, human-centered set design principles. means using tidytof equally intuitive among scientists wide range coding experience (including beginners).","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"prerequisites","dir":"","previous_headings":"Getting started","what":"Prerequisites","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"tidytof makes heavy use two concepts R beginners may unfamiliar . first pipe (|>), can read . second “grouping” data data.frame tibble using dplyr::group_by, can read . Everything else self-explanatory beginner advanced R users, though zero background running R code, read chapter R Data Science Hadley Wickham.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"package-structure","dir":"","previous_headings":"Getting started","what":"Package structure","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"Broadly speaking, tidytof’s functionality organized support 3 levels analysis inherent single-cell data: Reading, writing, preprocessing, visualizing data level single cells Identifying describing cell subpopulations clusters Building models (inference prediction) level patients samples use tidytof levels cytometry data analysis detailed “Usage” section .","code":""},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"can install development version tidytof GitHub following command: tidytof installed, can attach current R session using following code: addition, can install load packages need vignette:","code":"if (!require(devtools)) install.packages(\"devtools\") devtools::install_github(\"keyes-timothy/tidytof\") library(tidytof) if (!require(FlowSOM)) BiocManager::install(\"FlowSOM\") library(FlowSOM)  if (!require(tidyverse)) install.packages(\"tidyverse\") library(tidyverse)"},{"path":[]},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"reading-data-with-tof_read_data","dir":"","previous_headings":"Usage > Analyzing data at the single-cell level","what":"Reading data with tof_read_data","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"tidytof comes bundled several example mass cytometry datasets. access raw .fcs .csv files containing data, use tidytof_example_data function. called arguments, tidytof_example_data return character vector naming datasets contained tidytof: obtain file path directory containing dataset, call tidytof_example_data one dataset names argument. example, obtain directory phenograph data, use following command: Using one directories (directory containing cytometry data local machine), can use tof_read_data read cytometry data raw files. Acceptable formats include .fcs files .csv files. Importantly, tof_read_data smart enough read single .fcs/.csv files multiple .fcs/.csv files depending whether first argument (path) leads single file directory files. , can use tof_read_data read .fcs files “phenograph” example dataset bundled tidytof store phenograph variable. Regardless input format, tidytof reads data extended tibble called tof_tbl (pronounced “tof tibble”), S3 class identical tbl_df, one additional attribute (“panel”). tidytof stores additional attribute tof_tbls , addition analyzing cytometry data individual experiments, cytometry users often want compare panels experiments find common markers compare metals associated particular markers across panels. notes tof_tbls: tof_tbls contains one cell per row one cytometry channel per column (provide data “tidy” format). tof_read_data adds additional column output tof_tbl encoding name file cell read (“file_name” column). tof_tbls inherit tbl_df class, methods available tibbles also available tof_tbls. example, dplyr’s useful mutate method can applied tof_tbl named phenograph convert columns encoding phenograph cluster ID stimulation condition cell belongs character vectors (instead original numeric codes uncleaned dataset). tof_tbl class preserved even transformations. Finally, retrieve panel information tof_tbl, use tof_get_panel: Importantly, tof_read_data uses opinionated heuristic mine different keyword slots input .fcs file(s) guess metals antigens used data collection. Thus, .csv files read using tof_read_data, recommended use panel_info argument provide panel manually (.csv files, unlike .fcs files, provide built-metadata columns contain).","code":"tidytof_example_data() #>  [1] \"aml\"                  \"ddpr\"                 \"ddpr_metadata.csv\"    #>  [4] \"mix\"                  \"mix2\"                 \"phenograph\"           #>  [7] \"phenograph_csv\"       \"scaffold\"             \"statistical_scaffold\" #> [10] \"surgery\" tidytof_example_data(\"phenograph\") #> [1] \"/Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/library/tidytof/extdata/phenograph\" phenograph <-     tidytof_example_data(\"phenograph\") |>     tof_read_data()  phenograph |>     class() #> [1] \"tof_tbl\"    \"tbl_df\"     \"tbl\"        \"data.frame\" phenograph <-     phenograph |>     # mutate the input tof_tbl     mutate(         PhenoGraph = as.character(PhenoGraph),         Condition = as.character(Condition)     )  phenograph |>     # use dplyr's select method to show that the columns have been changed     select(where(is.character)) |>     head() #> # A tibble: 6 × 3 #>   file_name                  PhenoGraph Condition #>   <chr>                      <chr>      <chr>     #> 1 H1_PhenoGraph_cluster1.fcs 7          7         #> 2 H1_PhenoGraph_cluster1.fcs 6          6         #> 3 H1_PhenoGraph_cluster1.fcs 9          9         #> 4 H1_PhenoGraph_cluster1.fcs 2          2         #> 5 H1_PhenoGraph_cluster1.fcs 15         15        #> 6 H1_PhenoGraph_cluster1.fcs 12         12 phenograph |>     class() #> [1] \"tof_tbl\"    \"tbl_df\"     \"tbl\"        \"data.frame\" phenograph |>     tof_get_panel() |>     head() #> # A tibble: 6 × 2 #>   metals      antigens    #>   <chr>       <chr>       #> 1 Time        Time        #> 2 Cell_length Cell_length #> 3 Ir191       DNA1        #> 4 Ir193       DNA2        #> 5 Pd104       BC1         #> 6 Pd106       BC2"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"pre-processing-with-tof_preprocess","dir":"","previous_headings":"Usage > Analyzing data at the single-cell level","what":"Pre-processing with tof_preprocess","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"Generally, raw ion counts analyte measured mass cytometer need transformed cytometry data analysis. Common preprocessing steps may include variance-stabilizing transformations - hyperbolic arcsine (arcsinh) transformation log transformation - scaling/centering, /denoising. perform standard preprocessing tasks tidytof, use tof_preprocess. tof_preprocess’s default behavior apply arcsinh transformation (cofactor 5) numeric column input tof_tibble well remove gaussian noise Fluidigm software adds ion count (noise added visualization purposes, analyses, removing recommended). example, can preprocess phenograph tof_tibble see first measurements change . alter tof_preprocess’s default behavior, change channel_cols argument (specify columns tof_tibble transformed) transform_fun argument (specify vector-valued function used transform channel_cols). keep gaussian noise added Fluidigm software (working dataset noise), set undo_noise argument FALSE. Finally, note built-function tof_postprocess works nearly identically tof_preprocess, provides different default behavior (namely, applying reverse arcsinh transformation cofactor 5 numeric columns. See ?tof_postprocess details).","code":"# before preprocessing phenograph |>     select(`CD45|Sm154`, `CD34|Nd148`, `CD38|Er167`) |>     head() #> # A tibble: 6 × 3 #>   `CD45|Sm154` `CD34|Nd148` `CD38|Er167` #>          <dbl>        <dbl>        <dbl> #> 1        440.         0.256        18.7  #> 2        705.         1.96         41.2  #> 3        383.        -0.302         6.51 #> 4         44.4        2.74         27.2  #> 5        892.         4.08         24.5  #> 6        448.         2.69         11.1 # perform preprocessing phenograph <-     phenograph |>     tof_preprocess()  # inspect new values phenograph |>     select(`CD45|Sm154`, `CD34|Nd148`, `CD38|Er167`) |>     head() #> # A tibble: 6 × 3 #>   `CD45|Sm154` `CD34|Nd148` `CD38|Er167` #>          <dbl>        <dbl>        <dbl> #> 1         5.17       0.0512         2.03 #> 2         5.64       0.382          2.81 #> 3         5.03      -0.0603         1.08 #> 4         2.88       0.524          2.40 #> 5         5.88       0.746          2.29 #> 6         5.19       0.515          1.54"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"downsampling-with-tof_downsample","dir":"","previous_headings":"Usage > Analyzing data at the single-cell level","what":"Downsampling with tof_downsample","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"Often, cytometry experiments collect tens hundreds millions cells total, can useful downsample smaller, computationally tractable number cells - either final analysis developing code. , tidytof implements tof_downsample verb, allows downsampling using 3 methods. Using tidytof’s built-dataset phenograph_data (smaller version dataset read ), can see original size dataset 1000 cells per cluster, 3000 cells total: randomly sample 200 cells per cluster, can use tof_downsample using “constant” method: Alternatively, wanted sample 50% cells cluster, use “prop” method: finally, might also interested taking slightly different approach downsampling downsamples number cells fixed constant proportion, fixed density phenotypic space. example, following scatterplot demonstrates certain areas phenotypic density phenograph_data contain cells others along cd34/cd38 axes:  reduce number cells dataset local density around cell dataset relatively constant, can use “density” method tof_downsample:  details, check documentation 3 underlying members tof_downsample_* function family (wrapped tof_downsample): tof_downsample_constant tof_downsample_prop tof_downsample_density","code":"data(phenograph_data)  phenograph_data |>     count(phenograph_cluster) #> # A tibble: 3 × 2 #>   phenograph_cluster     n #>   <chr>              <int> #> 1 cluster1            1000 #> 2 cluster2            1000 #> 3 cluster3            1000 phenograph_data |>     # downsample     tof_downsample(         method = \"constant\",         group_cols = phenograph_cluster,         num_cells = 200     ) |>     # count the number of downsampled cells in each cluster     count(phenograph_cluster) #> # A tibble: 3 × 2 #>   phenograph_cluster     n #>   <chr>              <int> #> 1 cluster1             200 #> 2 cluster2             200 #> 3 cluster3             200 phenograph_data |>     # downsample     tof_downsample(         method = \"prop\",         group_cols = phenograph_cluster,         prop_cells = 0.5     ) |>     # count the number of downsampled cells in each cluster     count(phenograph_cluster) #> # A tibble: 3 × 2 #>   phenograph_cluster     n #>   <chr>              <int> #> 1 cluster1             500 #> 2 cluster2             500 #> 3 cluster3             500 phenograph_data |>     # preprocess all numeric columns in the dataset     tof_preprocess(undo_noise = FALSE) |>     # make a scatterplot     ggplot(aes(x = cd34, y = cd38)) +     geom_point(alpha = 0.5) +     scale_x_continuous(limits = c(NA, 1.5)) +     scale_y_continuous(limits = c(NA, 4)) +     theme_bw() phenograph_data |>     tof_preprocess(undo_noise = FALSE) |>     tof_downsample(         density_cols = c(cd34, cd38),         target_prop_cells = 0.25,         method = \"density\",     ) |>     ggplot(aes(x = cd34, y = cd38)) +     geom_point(alpha = 0.5) +     scale_x_continuous(limits = c(NA, 1.5)) +     scale_y_continuous(limits = c(NA, 4)) +     theme_bw()"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"writing-data-with-tof_write_data","dir":"","previous_headings":"Usage > Analyzing data at the single-cell level","what":"Writing data with tof_write_data","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"Finally, users may wish store single-cell data .fcs .csv files transformation, concatenation, filtering, data processing steps dimensionality reduction /clustering (see ). write single-cell data tof_tbl .fcs .csv files, use tof_write_data. tof_write_data’s trickiest argument group_cols, argument used specify columns tof_tibble used group cells (.e. rows tof_tibble) separate .fcs .csv files. Simply put, argument allows tof_write_data create single .fcs .csv file unique combination values columns specified user. example , cells grouped 3 output .fcs files - one 3 clusters encoded phenograph_cluster column phenograph_data. files following names (derived values phenograph_cluster column): cluster1.fcs cluster2.fcs cluster3.fcs However, suppose wanted write multiple files cluster breaking cells two groups: express high levels pstat5 express low levels pstat5. can use dplyr::mutate create new column phenograph_data breaks cells high- low-pstat5 expression groups, add column group_cols specification: write 6 files following names (derived values phenograph_cluster expression_group). cluster1_low.fcs cluster1_high.fcs cluster2_low.fcs cluster2_high.fcs cluster3_low.fcs cluster3_high.fcs useful feature tof_write_data automatically concatenate cells single .fcs .csv files based specified group_cols regardless many unique files cells came , allowing easy concatenation .fcs .csv files containing data single sample acquired multiple cytometry runs.","code":"# when copying and pasting this code, feel free to change this path # to wherever you'd like to save your output files my_path <- file.path(\"~\", \"Desktop\", \"tidytof_vignette_files\")  phenograph_data |>     tof_write_data(         group_cols = phenograph_cluster,         out_path = my_path,         format = \"fcs\"     ) phenograph_data |>     # create a variable representing if a cell is above or below the median     # expression level of pstat5     mutate(expression_group = if_else(pstat5 > median(pstat5), \"high\", \"low\")) |>     tof_write_data(         group_cols = c(phenograph_cluster, expression_group),         out_path = my_path,         format = \"fcs\"     )"},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"identifying-clusters-with-tof_cluster","dir":"","previous_headings":"Usage > Analyzing data at the cluster-level","what":"Identifying clusters with tof_cluster","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"input files read tabular format preprocessed/downsampled, might interested clustering data define communities cells shared characteristics. , can use tof_cluster verb. Several clustering methods implemented tidytof, including FlowSOM, PhenoGraph, k-means, others. demonstrate, can apply FlowSOM clustering algorithm phenograph_data . Note phenograph_data contains 6000 total cells (2000 3 clusters identified original PhenoGraph publication). output tof_cluster tof_tbl identical input tibble, now addition additional column (“.flowsom_metacluster”) encodes cluster id cell input tof_tbl. Note output columns added tibble tof_tbl tidytof begin full-stop (“.”) reduce likelihood collisions existing column names. output tof_cluster tof_tbl, can use dplyr’s count method assess accuracy FlowSOM clustering compared original clustering PhenoGraph paper. , can see FlowSOM algorithm groups cells PhenoGraph cluster one another (small number mistakes per PhenoGraph cluster). change clustering algorithm tof_cluster uses, alter method flag; change columns used compute clusters, change cluster_cols flag. finally, want return tibble includes cluster labels (cluster labels added new column input tof_tbl), set augment FALSE.","code":"phenograph_clusters <-     phenograph_data |>     tof_preprocess() |>     tof_cluster(method = \"flowsom\", cluster_cols = contains(\"cd\"))  phenograph_clusters |>     select(sample_name, .flowsom_metacluster, everything()) |>     head() #> # A tibble: 6 × 26 #>   sample_name      .flowsom_metacluster phenograph_cluster    cd19 cd11b    cd34 #>   <chr>            <chr>                <chr>                <dbl> <dbl>   <dbl> #> 1 H1_PhenoGraph_c… 13                   cluster1           -0.0336 2.46   0.608  #> 2 H1_PhenoGraph_c… 18                   cluster1            0.324  0.856 -0.116  #> 3 H1_PhenoGraph_c… 10                   cluster1            0.532  2.67   0.909  #> 4 H1_PhenoGraph_c… 8                    cluster1            0.0163 2.97   0.0725 #> 5 H1_PhenoGraph_c… 13                   cluster1            0.144  2.98   0.128  #> 6 H1_PhenoGraph_c… 8                    cluster1            0.742  3.41   0.336  #> # ℹ 20 more variables: cd45 <dbl>, cd123 <dbl>, cd33 <dbl>, cd47 <dbl>, #> #   cd7 <dbl>, cd44 <dbl>, cd38 <dbl>, cd3 <dbl>, cd117 <dbl>, cd64 <dbl>, #> #   cd41 <dbl>, pstat3 <dbl>, pstat5 <dbl>, pampk <dbl>, p4ebp1 <dbl>, #> #   ps6 <dbl>, pcreb <dbl>, `pzap70-syk` <dbl>, prb <dbl>, `perk1-2` <dbl> phenograph_clusters |>     count(phenograph_cluster, .flowsom_metacluster, sort = TRUE) #> # A tibble: 23 × 3 #>    phenograph_cluster .flowsom_metacluster     n #>    <chr>              <chr>                <int> #>  1 cluster3           12                     323 #>  2 cluster3           15                     318 #>  3 cluster2           3                      309 #>  4 cluster1           17                     234 #>  5 cluster2           2                      218 #>  6 cluster2           4                      206 #>  7 cluster1           8                      182 #>  8 cluster1           18                     167 #>  9 cluster1           9                      162 #> 10 cluster3           20                     162 #> # ℹ 13 more rows # will result in a tibble with only 1 column (the cluster labels) phenograph_data |>     tof_preprocess() |>     tof_cluster(method = \"flowsom\", cluster_cols = contains(\"cd\"), augment = FALSE) |>     head() #> # A tibble: 6 × 1 #>   .flowsom_metacluster #>   <chr>                #> 1 13                   #> 2 3                    #> 3 10                   #> 4 11                   #> 5 10                   #> 6 11"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"dimensionality-reduction-with-tof_reduce_dimensions","dir":"","previous_headings":"Usage > Analyzing data at the cluster-level","what":"Dimensionality reduction with tof_reduce_dimensions()","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"clusters identified, useful tool visualizing dimensionality reduction, form unsupervised machine learning used represent high-dimensional datasets smaller, easier--visualize number dimensions. tidytof includes several algorithms commonly used biologists dimensionality reduction: Principal component analysis (PCA), t-distributed stochastic neighbor embedding (tSNE), uniform manifold approximation projection (UMAP). apply dataset, use tof_reduce_dimensions: default, tof_reduce_dimensions add reduced-dimension feature embeddings input tof_tbl return augmented tof_tbl (, tof_tbl new columns embedding dimension) result. return features embeddings , set augment FALSE (tof_cluster). Regardless method used, reduced-dimension feature embeddings can visualized using ggplot2 (graphics package):   visualizations can helpful qualitatively describing phenotypic differences clusters dataset. example, example , can see one clusters high CD11b expression, whereas others lower CD11b expression.","code":"# perform the dimensionality reduction phenograph_tsne <-     phenograph_clusters |>     tof_reduce_dimensions(method = \"tsne\")  # select only the tsne embedding columns using a tidyselect helper (contains) phenograph_tsne |>     select(contains(\"tsne\")) |>     head() #> # A tibble: 6 × 2 #>   .tsne1 .tsne2 #>    <dbl>  <dbl> #> 1  -8.41   17.2 #> 2   1.91   13.6 #> 3  23.9    20.1 #> 4   4.79   22.3 #> 5  -4.99   22.4 #> 6  11.0    20.2 # plot the tsne embeddings using color to distinguish between clusters phenograph_tsne |>     ggplot(aes(x = .tsne1, y = .tsne2, fill = phenograph_cluster)) +     geom_point(shape = 21) +     theme_bw() +     labs(fill = NULL) # plot the tsne embeddings using color to represent CD11b expression phenograph_tsne |>     ggplot(aes(x = .tsne1, y = .tsne2, fill = cd11b)) +     geom_point(shape = 21) +     scale_fill_viridis_c() +     theme_bw() +     labs(fill = \"CD11b expression\")"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"differential-discovery-analysis-with-tof_analyze_abundance-and-tof_analyze_expression","dir":"","previous_headings":"Usage > Analyzing data at the cluster-level","what":"Differential discovery analysis with tof_analyze_abundance and tof_analyze_expression","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"dimensionality reduction can used visualize clustering result, many cytometry users also want use statistical tools rigorously quantify clusters(s) dataset associate particular experimental clinical variable. analyses often grouped umbrella term differential discovery analysis include comparing relative size clusters experimental conditions (differential abundance analysis; DAA) well comparing marker expression patterns clusters experimental conditions (differential expression analysis; DEA). tidytof provides tof_analyze_abundance tof_analyze_expression verbs differential abundance differential expression analyses, respectively. demonstrate use verbs, ’ll first download dataset originally collected development CITRUS algorithm. data available HDCytoData package, available Bioconductor can downloaded following command: load CITRUS data current R session, can call function HDCytoData, provide us format {flowCore} package (called “flowSet”). convert tidy tibble, can use tidytof built-method converting flowCore objects tof_tbl’s . Thus, can see citrus_data tof_tbl 172791 cells (one row) 39 pieces information cell (one column). can also extract metadata raw data join single-cell data using functions tidyverse: Thus, now sample-level information patient sample collected stimulation condition (“Basal” “BCR-XL”) sample exposed data acquisition. Finally, can join metadata single-cell tof_tbl obtain cleaned dataset. data cleaning steps, now citrus_data, tof_tbl containing cells collected 8 patients. Specifically, 2 samples taken patient: one cells’ B-cell receptors stimulated (BCR-XL) one (Basal). citrus_data, cell’s patient origin stored patient column, cell’s stimulation condition stored stimulation column. addition, population_id column stores information cluster labels applied cell using combination FlowSOM clustering manual merging (details, run ?HDCytoData::Bodenmiller_BCR_XL R console). might wonder certain clusters expand deplete within patients two stimulation conditions described - question requires differential abundance analysis (DAA). tidytof’s tof_analyze_abundance verb supports use 3 statistical approaches performing DAA: diffcyt, generalized-linear mixed modeling (GLMMs), simple t-tests. setup described uses paired design 2 experimental conditions interest (Basal vs. BCR-XL), can use paired t-test method: Based output, can see 6 8 clusters statistically different abundance two stimulation conditions. Using tidytof easy integration tidyverse packages, can use result visualize fold-changes cluster (within patient) BCR-XL condition compared Basal condition using ggplot2:  Importantly, output tof_analyze_abundance depends slightly underlying statistical method used, details can found documentation tof_analyze_abundance_* function family member: tof_analyze_abundance_diffcyt tof_analyze_abundance_glmm tof_analyze_abundance_ttest Similarly, suppose ’re interested intracellular signaling proteins change expression levels two stimulation conditions clusters. Differential Expression Analysis (DEA) can performed using tidytof’s tof_analyze_expression verb. , can use paired t-tests multiple-hypothesis correction test significant differences cluster’s expression signaling markers stimulation conditions. output tof_analyze_expression() also depends underlying test used, can see result looks relatively similar output tof_analyze_abundance(). , output tibble row represents differential expression results single cluster-marker pair - example, first row represents difference expression pS6 cluster 1 BCR-XL Basal conditions. row includes raw p-value multiple-hypothesis-corrected p-value cluster-marker pair. result can used make volcano plot visualize results cluster-marker pairs:","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE)) {     install.packages(\"BiocManager\") }  BiocManager::install(\"HDCytoData\") citrus_raw <- HDCytoData::Bodenmiller_BCR_XL_flowSet()  citrus_data <-     citrus_raw |>     as_tof_tbl(sep = \"_\") citrus_metadata <-     tibble(         file_name = as.character(flowCore::pData(citrus_raw)[[1]]),         sample_id = seq_along(file_name),         patient = str_extract(file_name, \"patient[:digit:]\"),         stimulation = str_extract(file_name, \"(BCR-XL)|Reference\")     ) |>     mutate(         stimulation = if_else(stimulation == \"Reference\", \"Basal\", stimulation)     )  citrus_metadata |>     head() #> # A tibble: 6 × 4 #>   file_name                          sample_id patient  stimulation #>   <chr>                                  <int> <chr>    <chr>       #> 1 PBMC8_30min_patient1_BCR-XL.fcs            1 patient1 BCR-XL      #> 2 PBMC8_30min_patient1_Reference.fcs         2 patient1 Basal       #> 3 PBMC8_30min_patient2_BCR-XL.fcs            3 patient2 BCR-XL      #> 4 PBMC8_30min_patient2_Reference.fcs         4 patient2 Basal       #> 5 PBMC8_30min_patient3_BCR-XL.fcs            5 patient3 BCR-XL      #> 6 PBMC8_30min_patient3_Reference.fcs         6 patient3 Basal citrus_data <-     citrus_data |>     left_join(citrus_metadata, by = \"sample_id\") daa_result <-     citrus_data |>     tof_analyze_abundance(         cluster_col = population_id,         effect_col = stimulation,         group_cols = patient,         test_type = \"paired\",         method = \"ttest\"     )  daa_result #> # A tibble: 8 × 8 #>   population_id    p_val   p_adj significant      t    df mean_diff mean_fc #>   <chr>            <dbl>   <dbl> <chr>        <dbl> <dbl>     <dbl>   <dbl> #> 1 1             0.000924 0.00535 \"*\"         -5.48      7  -0.00743   0.644 #> 2 2             0.00623  0.0166  \"*\"         -3.86      7  -0.0156    0.674 #> 3 3             0.0235   0.0314  \"*\"         -2.88      7  -0.0638    0.849 #> 4 4             0.0235   0.0314  \"*\"          2.88      7   0.0832    1.38  #> 5 5             0.0116   0.0232  \"*\"          3.39      7   0.00246   1.08  #> 6 6             0.371    0.371   \"\"          -0.955     7  -0.0168    0.919 #> 7 7             0.00134  0.00535 \"*\"          5.14      7   0.0202    1.14  #> 8 8             0.236    0.270   \"\"          -1.30      7  -0.00228   0.901 plot_data <-     citrus_data |>     mutate(population_id = as.character(population_id)) |>     left_join(         select(daa_result, population_id, significant, mean_fc),         by = \"population_id\"     ) |>     dplyr::count(patient, stimulation, population_id, significant, mean_fc, name = \"n\") |>     group_by(patient, stimulation) |>     mutate(prop = n / sum(n)) |>     ungroup() |>     pivot_wider(         names_from = stimulation,         values_from = c(prop, n),     ) |>     mutate(         diff = `prop_BCR-XL` - prop_Basal,         fc = `prop_BCR-XL` / prop_Basal,         population_id = fct_reorder(population_id, diff),         direction =             case_when(                 mean_fc > 1 & significant == \"*\" ~ \"increase\",                 mean_fc < 1 & significant == \"*\" ~ \"decrease\",                 TRUE ~ NA_character_             )     )  significance_data <-     plot_data |>     group_by(population_id, significant, direction) |>     summarize(diff = max(diff), fc = max(fc)) |>     ungroup()  plot_data |>     ggplot(aes(x = population_id, y = fc, fill = direction)) +     geom_violin(trim = FALSE) +     geom_hline(yintercept = 1, color = \"red\", linetype = \"dotted\", size = 0.5) +     geom_point() +     geom_text(         aes(x = population_id, y = fc, label = significant),         data = significance_data,         size = 8,         nudge_x = 0.2,         nudge_y = 0.06     ) +     scale_x_discrete(labels = function(x) str_c(\"cluster \", x)) +     scale_fill_manual(         values = c(\"decrease\" = \"#cd5241\", \"increase\" = \"#207394\"),         na.translate = FALSE     ) +     labs(         x = NULL,         y = \"Abundance fold-change (stimulated / basal)\",         fill = \"Effect\",         caption = \"Asterisks indicate significance at an adjusted p-value of 0.05\"     ) signaling_markers <-     c(         \"pNFkB_Nd142\", \"pStat5_Nd150\", \"pAkt_Sm152\", \"pStat1_Eu153\", \"pStat3_Gd158\",         \"pSlp76_Dy164\", \"pBtk_Er166\", \"pErk_Er168\", \"pS6_Yb172\", \"pZap70_Gd156\"     )  dea_result <-     citrus_data |>     tof_preprocess(channel_cols = any_of(signaling_markers)) |>     tof_analyze_expression(         cluster_col = population_id,         marker_cols = any_of(signaling_markers),         effect_col = stimulation,         group_cols = patient,         test_type = \"paired\",         method = \"ttest\"     )  dea_result |>     head() #> # A tibble: 6 × 9 #>   population_id marker   p_val   p_adj significant     t    df mean_diff mean_fc #>   <chr>         <chr>    <dbl>   <dbl> <chr>       <dbl> <dbl>     <dbl>   <dbl> #> 1 1             pS6_Y… 7.58e-8 2.12e-6 *            22.9     7     2.56    4.31  #> 2 2             pS6_Y… 1.16e-7 2.12e-6 *            21.6     7     2.13    2.49  #> 3 3             pBtk_… 1.32e-7 2.12e-6 *           -21.2     7    -0.475   0.289 #> 4 7             pBtk_… 1.18e-7 2.12e-6 *           -21.5     7    -0.518   0.286 #> 5 8             pBtk_… 1.30e-7 2.12e-6 *           -21.2     7    -0.516   0.324 #> 6 4             pBtk_… 7.85e-7 1.05e-5 *           -16.3     7    -0.462   0.296 volcano_plot <-     dea_result |>     tof_plot_clusters_volcano(         use_ggrepel = TRUE     )  volcano_plot"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"analyzing-data-at-the-patient--and-sample-level","dir":"","previous_headings":"Usage","what":"Analyzing data at the patient- and sample-level","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"addition verbs operate single-cell data directly, tidytof implements functions aggregating single-cell measurements cluster- sample-level summary statistics can analyzed using variety statistical models.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"feature-extraction-with-tof_extract_features","dir":"","previous_headings":"Usage > Analyzing data at the patient- and sample-level","what":"Feature extraction with tof_extract_features","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"addition functions analyzing visualizing cytometry data single-cell cluster levels, tidytof’s tof_extract_features verb allows users aggregate single-cell cluster-level information order summarize whole-samples (whole-patients) cells collected. features can useful visualizing differences patients samples different experimental conditions building machine learning models. understand tof_extract_features verb works, ’s easiest look subroutines (members tof_extract_* function family) independently. First, tof_extract_proportion, extracts proportion cells cluster within sample (samples defined using group_cols argument): Like members tof_extract_* function family, tof_extract_proportion() returns one row sample (defined unique combination values group_cols) one column extracted feature (, one column proportion 8 clusters citrus_data). values can also returned “long” format changing format argument: Another member function family, tof_extract_central_tendency, computes central tendency (e.g. mean median) user-specified markers cluster. tof_extract_threshold similar tof_extract_central_tendency, calculates proportion cells user-specified expression value marker instead measure central tendency: two final members tof_extract_* function family – tof_extract_emd tof_extract_jsd designed specifically comparing distributions marker expression stimulation conditions. , must given stimulation_col identifies stimulation condition cell , basal_level specifies reference (.e. unstimulated) condition within stimulation_col. additional arguments, tof_extract_emd computes Earth-mover’s distance marker’s distribution stimulation conditions (within cluster) basal condition; similarly, tof_extract_jsd computes Jensen-Shannon divergence index distributions. values ways compare different 2 distributions one another computationally expensive (also higher-resolution) simply comparing measures central tendency. Finally, tof_extract_features verb provides wrapper members function family, allowing users extract multiple features types . example, following code extracts proportion cluster, median several markers cluster, EMD basal condition stimulated condition cluster patients citrus_data.","code":"# preprocess the numeric columns in the citrus dataset citrus_data <-     citrus_data |>     mutate(cluster = str_c(\"cluster\", population_id)) |>     tof_preprocess()  citrus_data |>     tof_extract_proportion(         cluster_col = cluster,         group_cols = c(patient, stimulation)     ) |>     head() #> # A tibble: 6 × 10 #>   patient  stimulation `prop@cluster1` `prop@cluster2` `prop@cluster3` #>   <chr>    <chr>                 <dbl>           <dbl>           <dbl> #> 1 patient1 Basal                0.0190          0.0482           0.447 #> 2 patient1 BCR-XL               0.0109          0.0395           0.268 #> 3 patient2 Basal                0.0130          0.0280           0.491 #> 4 patient2 BCR-XL               0.0101          0.0143           0.358 #> 5 patient3 Basal                0.0326          0.0830           0.397 #> 6 patient3 BCR-XL               0.0200          0.0412           0.323 #> # ℹ 5 more variables: `prop@cluster4` <dbl>, `prop@cluster5` <dbl>, #> #   `prop@cluster6` <dbl>, `prop@cluster7` <dbl>, `prop@cluster8` <dbl> citrus_data |>     tof_extract_proportion(         cluster_col = cluster,         group_cols = c(patient, stimulation),         format = \"long\"     ) |>     head() #> # A tibble: 6 × 4 #>   patient  stimulation cluster     prop #>   <chr>    <chr>       <chr>      <dbl> #> 1 patient1 Basal       cluster1 0.0190  #> 2 patient1 Basal       cluster2 0.0482  #> 3 patient1 Basal       cluster3 0.447   #> 4 patient1 Basal       cluster4 0.237   #> 5 patient1 Basal       cluster5 0.00219 #> 6 patient1 Basal       cluster6 0.0759 citrus_data |>     tof_extract_central_tendency(         cluster_col = cluster,         group_cols = c(patient, stimulation),         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         central_tendency_function = mean     ) |>     head() #> # A tibble: 6 × 26 #>   patient  stimulation `CD45_In115@cluster1_ct` `CD4_Nd145@cluster1_ct` #>   <chr>    <chr>                          <dbl>                   <dbl> #> 1 patient1 BCR-XL                          4.80                  0.0967 #> 2 patient1 Basal                           4.68                  0.765  #> 3 patient2 BCR-XL                          5.00                 -0.0579 #> 4 patient2 Basal                           4.88                  0.808  #> 5 patient3 BCR-XL                          5.04                 -0.0432 #> 6 patient3 Basal                           4.98                  0.745  #> # ℹ 22 more variables: `CD20_Sm147@cluster1_ct` <dbl>, #> #   `CD45_In115@cluster2_ct` <dbl>, `CD4_Nd145@cluster2_ct` <dbl>, #> #   `CD20_Sm147@cluster2_ct` <dbl>, `CD45_In115@cluster3_ct` <dbl>, #> #   `CD4_Nd145@cluster3_ct` <dbl>, `CD20_Sm147@cluster3_ct` <dbl>, #> #   `CD45_In115@cluster4_ct` <dbl>, `CD4_Nd145@cluster4_ct` <dbl>, #> #   `CD20_Sm147@cluster4_ct` <dbl>, `CD45_In115@cluster5_ct` <dbl>, #> #   `CD4_Nd145@cluster5_ct` <dbl>, `CD20_Sm147@cluster5_ct` <dbl>, … citrus_data |>     tof_extract_threshold(         cluster_col = cluster,         group_cols = c(patient, stimulation),         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         threshold = 5     ) |>     head() #> # A tibble: 6 × 26 #>   patient  stimulation `CD45_In115@cluster1_threshold` CD4_Nd145@cluster1_thre…¹ #>   <chr>    <chr>                                 <dbl>                     <dbl> #> 1 patient1 BCR-XL                                0.516                         0 #> 2 patient1 Basal                                 0.365                         0 #> 3 patient2 BCR-XL                                0.554                         0 #> 4 patient2 Basal                                 0.452                         0 #> 5 patient3 BCR-XL                                0.547                         0 #> 6 patient3 Basal                                 0.549                         0 #> # ℹ abbreviated name: ¹​`CD4_Nd145@cluster1_threshold` #> # ℹ 22 more variables: `CD20_Sm147@cluster1_threshold` <dbl>, #> #   `CD45_In115@cluster2_threshold` <dbl>, #> #   `CD4_Nd145@cluster2_threshold` <dbl>, #> #   `CD20_Sm147@cluster2_threshold` <dbl>, #> #   `CD45_In115@cluster3_threshold` <dbl>, #> #   `CD4_Nd145@cluster3_threshold` <dbl>, … # Earth-mover's distance citrus_data |>     tof_extract_emd(         cluster_col = cluster,         group_cols = patient,         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         emd_col = stimulation,         reference_level = \"Basal\"     ) |>     head() #> # A tibble: 6 × 25 #>   patient  BCR-XL_CD45_In115@clu…¹ BCR-XL_CD4_Nd145@clu…² BCR-XL_CD20_Sm147@cl…³ #>   <chr>                      <dbl>                  <dbl>                  <dbl> #> 1 patient1                   0.864                   2.47                  13.0  #> 2 patient2                   1.11                    7.05                  10.8  #> 3 patient3                   0.670                   6.23                  10.5  #> 4 patient4                   2.64                    5.86                   9.90 #> 5 patient5                   0.594                   7.56                   8.13 #> 6 patient6                   0.661                   4.77                   7.97 #> # ℹ abbreviated names: ¹​`BCR-XL_CD45_In115@cluster3_emd`, #> #   ²​`BCR-XL_CD4_Nd145@cluster3_emd`, ³​`BCR-XL_CD20_Sm147@cluster3_emd` #> # ℹ 21 more variables: `BCR-XL_CD45_In115@cluster7_emd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster7_emd` <dbl>, #> #   `BCR-XL_CD20_Sm147@cluster7_emd` <dbl>, #> #   `BCR-XL_CD45_In115@cluster4_emd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster4_emd` <dbl>, … # Jensen-Shannon Divergence citrus_data |>     tof_extract_jsd(         cluster_col = cluster,         group_cols = patient,         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         jsd_col = stimulation,         reference_level = \"Basal\"     ) |>     head() #> # A tibble: 6 × 25 #>   patient  BCR-XL_CD45_In115@clu…¹ BCR-XL_CD4_Nd145@clu…² BCR-XL_CD20_Sm147@cl…³ #>   <chr>                      <dbl>                  <dbl>                  <dbl> #> 1 patient1                 0.0367                  0.0513                  0.347 #> 2 patient2                 0.00831                 0.168                   0.401 #> 3 patient3                 0.0104                  0.115                   0.357 #> 4 patient4                 0.0301                  0.135                   0.205 #> 5 patient5                 0.00911                 0.0789                  0.274 #> 6 patient6                 0.00972                 0.0346                  0.214 #> # ℹ abbreviated names: ¹​`BCR-XL_CD45_In115@cluster3_jsd`, #> #   ²​`BCR-XL_CD4_Nd145@cluster3_jsd`, ³​`BCR-XL_CD20_Sm147@cluster3_jsd` #> # ℹ 21 more variables: `BCR-XL_CD45_In115@cluster7_jsd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster7_jsd` <dbl>, #> #   `BCR-XL_CD20_Sm147@cluster7_jsd` <dbl>, #> #   `BCR-XL_CD45_In115@cluster4_jsd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster4_jsd` <dbl>, … citrus_data |>     tof_extract_features(         cluster_col = cluster,         group_cols = patient,         stimulation_col = stimulation,         lineage_cols = any_of(c(\"CD45_In115\", \"CD20_Sm147\", \"CD33_Nd148\")),         signaling_cols = any_of(signaling_markers),         signaling_method = \"emd\",         basal_level = \"Basal\"     ) |>     head()"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"outcomes-modeling-with-tof_model","dir":"","previous_headings":"Usage > Analyzing data at the patient- and sample-level","what":"Outcomes modeling with tof_model","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"[brief intro building predictive models might motivated .] tidytof implements several functions building predictive models using sample- patient-level data. illustrate work, first download patient-level data paper combining sample-level clinical annotations one tidytof’s built-data objects (ddpr_metadata). data processing steps result ddpr_patients tibble. numeric columns ddpr_patients represent aggregated cell population features sample (see Supplementary Table 5 paper details). non-numeric columns represent clinical metadata sample (run ?ddpr_metadata information). also preprocessing steps might want perform now save us headaches ’re fitting models later.","code":"data(ddpr_metadata)  # link for downloading the sample-level data from the Nature Medicine website data_link <-     \"https://static-content.springer.com/esm/art%3A10.1038%2Fnm.4505/MediaObjects/41591_2018_BFnm4505_MOESM3_ESM.csv\"  # downloading the data and combining it with clinical annotations ddpr_patients <-     readr::read_csv(data_link, skip = 2L, n_max = 78L, show_col_types = FALSE) |>     dplyr::rename(patient_id = Patient_ID) |>     left_join(ddpr_metadata, by = \"patient_id\") |>     dplyr::filter(!str_detect(patient_id, \"Healthy\"))  ddpr_patients |>     select(where(~ !is.numeric(.x))) |>     head() #> # A tibble: 6 × 8 #>   patient_id gender mrd_risk nci_rome_risk relapse_status type_of_relapse cohort #>   <chr>      <chr>  <chr>    <chr>         <chr>          <chr>           <chr>  #> 1 UPN1       Male   Interme… Standard      Yes            Early           Train… #> 2 UPN1-Rx    Male   Interme… Standard      Yes            Early           Train… #> 3 UPN2       Male   Interme… Standard      No             <NA>            Train… #> 4 UPN3       Female Standard Standard      No             <NA>            Train… #> 5 UPN4       Male   Standard Standard      No             <NA>            Valid… #> 6 UPN5       Female Standard High          No             <NA>            Valid… #> # ℹ 1 more variable: ddpr_risk <chr> ddpr_patients <-     ddpr_patients |>     # convert the relapse_status variable to a factor first,     # which is something we'll want for fitting the model later     # and create the time_to_event and event columns for survival modeling     mutate(         relapse_status = as.factor(relapse_status),         time_to_event = if_else(relapse_status == \"Yes\", time_to_relapse, ccr),         event = if_else(relapse_status == \"Yes\", 1, 0)     )"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"separating-the-training-and-validation-cohorts","dir":"","previous_headings":"Usage > Analyzing data at the patient- and sample-level > Outcomes modeling with tof_model","what":"Separating the training and validation cohorts","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"original DDPR paper, patients used fit model rest used assess model tuned. can separate training validation cohorts using cohort variable ddpr_patients","code":"ddpr_training <-     ddpr_patients |>     dplyr::filter(cohort == \"Training\")  ddpr_validation <-     ddpr_patients |>     dplyr::filter(cohort == \"Validation\") nrow(ddpr_training) #> [1] 49  nrow(ddpr_validation) #> [1] 12"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"building-a-classifier-using-logistic-regression","dir":"","previous_headings":"Usage > Analyzing data at the patient- and sample-level > Outcomes modeling with tof_model","what":"Building a classifier using logistic regression","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"First, can build elastic net classifier predict patients relapse patients won’t (ignoring time--event data now). , can use relapse_status column ddpr_training outcome variable: Specifically, can use tof_split_data function split cohort training test set either (“simple” split) multiple times (using either k-fold cross-validation bootstrapping). case, use 5-fold cross-validation, reading documentation tof_split_data demonstrates use methods. output tof_split_data varies depending split_method used. cross-validation, result rset object rsample package. rset objects type tibble two columns: splits - column entry rsplit object (contains single resample full dataset) id - character column entry represents name fold entry splits belongs . can inspect one resamples splits column see contain: Note can use rsample::training rsample::testing return training test obeservations resampling: , can feed training_split tof_train_model function tune logistic regression model predicts relapse_status leukemia patient. sure check tof_create_grid documentation learn make hyperparameter search grid model tuning (case, limit mixture parameter value 1, fits sparse lasso model). Also note demonstration purposes, include features come one cell population (“Population 2”) original dataset, means probably shouldn’t expect model perform well one original paper (select many features). output tof_train_model tof_model, object containing information trained model (can passed tof_predict tof_assess_model verbs). tof_model printed, information optimal hyperparamters printed, table nonzero model coefficients model. can use trained model make predictions validation data set aside earlier: can see model gets (!) predictions correct validation set set aside. can also assess model directly using tof_assess_model can make ROC curve using metrics:  can assess model validation data…","code":"# find how many of each outcome we have in our cohort ddpr_training |>     dplyr::count(relapse_status) #> # A tibble: 2 × 2 #>   relapse_status     n #>   <fct>          <int> #> 1 No                31 #> 2 Yes               18 training_split <-     ddpr_training |>     tof_split_data(         split_method = \"k-fold\",         num_cv_folds = 5,         strata = relapse_status     )  training_split #> #  5-fold cross-validation using stratification  #> # A tibble: 5 × 2 #>   splits          id    #>   <list>          <chr> #> 1 <split [38/11]> Fold1 #> 2 <split [39/10]> Fold2 #> 3 <split [39/10]> Fold3 #> 4 <split [40/9]>  Fold4 #> 5 <split [40/9]>  Fold5 my_resample <- training_split$splits[[1]]  print(my_resample) #> <Analysis/Assess/Total> #> <38/11/49>  class(my_resample) #> [1] \"vfold_split\" \"rsplit\" my_resample |>     rsample::training() |>     head() #> # A tibble: 6 × 1,854 #>   patient_id Pop_P_Pop1 CD19_Pop1 CD20_Pop1 CD24_Pop1 CD34_Pop1 CD38_Pop1 #>   <chr>           <dbl>     <dbl>     <dbl>     <dbl>     <dbl>     <dbl> #> 1 UPN1          3.06       0.583   0.00449     0.164       1.94     0.416 #> 2 UPN1-Rx       0.0395     0.618   0.0634      0.572       2.93     0.944 #> 3 UPN3          0.633      0.0234  0.0165      0.0327      2.25     0.226 #> 4 UPN8          0.951      0.958   0.161       0.556       3.18     0.556 #> 5 UPN10         0.00374    0.761   0.000696    0.829       3.19     0.886 #> 6 UPN10-Rx      0.00240    0.167   0.203       0.802       2.57     0.822 #> # ℹ 1,847 more variables: CD127_Pop1 <dbl>, CD179a_Pop1 <dbl>, #> #   CD179b_Pop1 <dbl>, IgMi_Pop1 <dbl>, IgMs_Pop1 <dbl>, TdT_Pop1 <dbl>, #> #   CD22_Pop1 <dbl>, tIkaros_Pop1 <dbl>, CD79b_Pop1 <dbl>, Ki67_Pop1 <dbl>, #> #   TSLPr_Pop1 <dbl>, RAG1_Pop1 <dbl>, CD123_Pop1 <dbl>, CD45_Pop1 <dbl>, #> #   CD10_Pop1 <dbl>, Pax5_Pop1 <dbl>, CD43_Pop1 <dbl>, CD58_Pop1 <dbl>, #> #   HLADR_Pop1 <dbl>, p4EBP1_FC_Basal_Pop1 <dbl>, pSTAT5_FC_Basal_Pop1 <dbl>, #> #   pPLCg1_2_FC_Basal_Pop1 <dbl>, pAkt_FC_Basal_Pop1 <dbl>, …  my_resample |>     rsample::testing() |>     head() #> # A tibble: 6 × 1,854 #>   patient_id Pop_P_Pop1 CD19_Pop1 CD20_Pop1 CD24_Pop1 CD34_Pop1 CD38_Pop1 #>   <chr>           <dbl>     <dbl>     <dbl>     <dbl>     <dbl>     <dbl> #> 1 UPN2           0.139     0.0662   0.0221     0.0825      2.25     0.454 #> 2 UPN6           5.62      0.550    0.00374    0.622       2.86     0.342 #> 3 UPN7           0.474     0.966    0.124      1.24        2.59     0.243 #> 4 UPN9          15.6       0.446    0.0445     0.163       2.86     0.434 #> 5 UPN12          0.0565    0.185    0.0115     0.142       2.49     0.254 #> 6 UPN17          1.40      1.52     0.0128     0.284       3.46     0.656 #> # ℹ 1,847 more variables: CD127_Pop1 <dbl>, CD179a_Pop1 <dbl>, #> #   CD179b_Pop1 <dbl>, IgMi_Pop1 <dbl>, IgMs_Pop1 <dbl>, TdT_Pop1 <dbl>, #> #   CD22_Pop1 <dbl>, tIkaros_Pop1 <dbl>, CD79b_Pop1 <dbl>, Ki67_Pop1 <dbl>, #> #   TSLPr_Pop1 <dbl>, RAG1_Pop1 <dbl>, CD123_Pop1 <dbl>, CD45_Pop1 <dbl>, #> #   CD10_Pop1 <dbl>, Pax5_Pop1 <dbl>, CD43_Pop1 <dbl>, CD58_Pop1 <dbl>, #> #   HLADR_Pop1 <dbl>, p4EBP1_FC_Basal_Pop1 <dbl>, pSTAT5_FC_Basal_Pop1 <dbl>, #> #   pPLCg1_2_FC_Basal_Pop1 <dbl>, pAkt_FC_Basal_Pop1 <dbl>, … class_mod <-     training_split |>     tof_train_model(         predictor_cols = contains(\"Pop2\"),         response_col = relapse_status,         model_type = \"two-class\",         hyperparameter_grid = tof_create_grid(mixture_values = 1),         impute_missing_predictors = TRUE,         remove_zv_predictors = TRUE # often a smart decision     ) print(class_mod) #> A two-class `tof_model` with a mixture parameter (alpha) of 1 and a penalty parameter (lambda) of 1e-05  #> # A tibble: 25 × 2 #>    feature             coefficient #>    <chr>                     <dbl> #>  1 p4EBP1_dP_IL7_Pop2        -2.59 #>  2 CD58_Pop2                  2.23 #>  3 (Intercept)               -1.83 #>  4 pSTAT5_dP_TSLP_Pop2        1.69 #>  5 p4EBP1_FC_IL7_Pop2         1.46 #>  6 CD43_Pop2                  1.37 #>  7 HLADR_Pop2                -1.32 #>  8 pSyk_dP_TSLP_Pop2          1.08 #>  9 pErk_dP_IL7_Pop2          -1.05 #> 10 Ki67_Pop2                 -1.05 #> # ℹ 15 more rows class_predictions <-     class_mod |>     tof_predict(new_data = ddpr_validation, prediction_type = \"class\")  class_predictions |>     dplyr::mutate(         truth = ddpr_validation$relapse_status     ) #> # A tibble: 12 × 2 #>    .pred truth #>    <chr> <fct> #>  1 Yes   No    #>  2 No    No    #>  3 No    Yes   #>  4 No    No    #>  5 No    No    #>  6 Yes   Yes   #>  7 Yes   Yes   #>  8 No    No    #>  9 No    No    #> 10 No    Yes   #> 11 No    Yes   #> 12 No    Yes # calling the function with no new_data evaluates the # the nodel using its training data training_assessment <-     class_mod |>     tof_assess_model()  training_assessment #> $model_metrics #> # A tibble: 6 × 2 #>   metric                    value #>   <chr>                     <dbl> #> 1 binomial_deviance       0.0291  #> 2 misclassification_error 0       #> 3 roc_auc                 1       #> 4 mse                     0.00119 #> 5 mae                     0.0285  #> 6 accuracy                1       #>  #> $roc_curve #> # A tibble: 51 × 5 #>       .threshold specificity sensitivity   tpr   fpr #>            <dbl>       <dbl>       <dbl> <dbl> <dbl> #>  1 -Inf               0                1     1 1     #>  2    0.00000114      0                1     1 1     #>  3    0.0000955       0.0323           1     1 0.968 #>  4    0.000160        0.0645           1     1 0.935 #>  5    0.000190        0.0968           1     1 0.903 #>  6    0.000612        0.129            1     1 0.871 #>  7    0.000896        0.161            1     1 0.839 #>  8    0.00135         0.194            1     1 0.806 #>  9    0.00142         0.226            1     1 0.774 #> 10    0.00194         0.258            1     1 0.742 #> # ℹ 41 more rows #>  #> $confusion_matrix #> # A tibble: 4 × 3 #>   true_outcome predicted_outcome num_observations #>   <chr>        <chr>                        <int> #> 1 No           No                              31 #> 2 No           Yes                              0 #> 3 Yes          No                               0 #> 4 Yes          Yes                             18 class_mod |>     tof_plot_model() +     labs(subtitle = \"ROC Curve (Training data)\") validation_assessment <-     class_mod |>     tof_assess_model(new_data = ddpr_validation)  validation_assessment #> $model_metrics #> # A tibble: 6 × 2 #>   metric                  value #>   <chr>                   <dbl> #> 1 binomial_deviance       4.75  #> 2 misclassification_error 0.417 #> 3 roc_auc                 0.639 #> 4 mse                     0.759 #> 5 mae                     0.879 #> 6 accuracy                0.583 #>  #> $roc_curve #> # A tibble: 14 × 5 #>     .threshold specificity sensitivity   tpr   fpr #>          <dbl>       <dbl>       <dbl> <dbl> <dbl> #>  1 -Inf              0           1     1     1     #>  2    0.000240       0           1     1     1     #>  3    0.00105        0.167       1     1     0.833 #>  4    0.00195        0.167       0.833 0.833 0.833 #>  5    0.00230        0.333       0.833 0.833 0.667 #>  6    0.00472        0.5         0.833 0.833 0.5   #>  7    0.00618        0.667       0.833 0.833 0.333 #>  8    0.0464         0.667       0.667 0.667 0.333 #>  9    0.273          0.667       0.5   0.5   0.333 #> 10    0.286          0.667       0.333 0.333 0.333 #> 11    0.844          0.833       0.333 0.333 0.167 #> 12    0.852          0.833       0.167 0.167 0.167 #> 13    1.00           0.833       0     0     0.167 #> 14  Inf              1           0     0     0     #>  #> $confusion_matrix #> # A tibble: 4 × 3 #>   true_outcome predicted_outcome num_observations #>   <chr>        <chr>                        <int> #> 1 No           No                               5 #> 2 No           Yes                              1 #> 3 Yes          No                               4 #> 4 Yes          Yes                              2 class_mod |>     tof_plot_model(new_data = ddpr_validation) +     labs(subtitle = \"ROC Curve (Validation data)\")"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"tidytofs-design-principles-and-some-tips","dir":"","previous_headings":"","what":"{tidytof}’s Design Principles (and some tips)","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"{tidytof} designed multidisciplinary team wet-lab biologists, bioinformaticians, physician-scientists analyze cytometry kinds single-cell data solve variety problems. result, tidytof’s high-level API designed great care mirror tidyverse - , human-centered, consistent, composable, inclusive wide userbase. section, describe miscellaneous design decisions tips using tidytof may help enthusiastic user.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"id_1-use-the-tof_-prefix-to-your-advantage","dir":"","previous_headings":"{tidytof}’s Design Principles (and some tips)","what":"1. Use the tof_ prefix to your advantage.","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"may notice tidytof functions begin prefix tof_. intentional, allow use development environment’s code-completing software search functions easily (even don’t remember function name). reason, recommend using tidytof within RStudio development environment; however, many code editors predictive text functionality serves similar function. general, tidytof verbs organized way IDE’s code-completion tools also allow search (compare) related functions relative ease. (instance, tof_cluster_ prefix used clustering functions, tof_downsample_ prefix used downsampling functions).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"id_2-tidytof-functions-use-2-kinds-of-arguments","dir":"","previous_headings":"{tidytof}’s Design Principles (and some tips)","what":"2. {tidytof} functions use 2 kinds of arguments","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"tidytof functions optimized working “tidy” data form tibbles data.frames. means tidytof functions share basic design principles terms arguments work. details design principles, check Getting Started tidytof vignette","code":""},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"id_3-use-tidytof-to-write-human-readable-pipelines","dir":"","previous_headings":"{tidytof}’s Design Principles (and some tips)","what":"3. Use {tidytof} to write human-readable pipelines","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"real “magic” tidytof derives ability simplify multistep data-processing tasks simple readable chunk code. example, suppose just acquired .fcs files mass cytometer want perform following analysis: Read .fcs files R session Arcsinh-transform column protein measurements Cluster cells based surface markers panel Downsample dataset 100 random cells picked cluster Perform dimensionality reduction downsampled dataset using tSNE Visualize clusters using low-dimensional tSNE embedding using appropriate tidytof verbs step analysis, can easily write code function call corresponds exactly one step pipeline:  shown , stringing together tidytof verbs creates pipeline can read easily left--right top--bottom – means relatively easy return code later (modify , write methods section next high-impact manuscript!) , perhaps importantly, one colleagues return later want recreate analysis.","code":"input_path <- tidytof_example_data(\"phenograph\")  set.seed(0012)  input_path |>     # step 1     tof_read_data() |>     # step 2     tof_preprocess() |>     # step 3     tof_cluster(method = \"phenograph\") |>     # step 4     tof_downsample(         group_cols = .phenograph_cluster,         num_cells = 100,         method = \"constant\"     ) |>     # step 5     tof_reduce_dimensions(perplexity = 50, method = \"tsne\") |>     # step 6     tof_plot_cells_embedding(         embedding_cols = starts_with(\".tsne\"),         color_col = .phenograph_cluster     )"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"id_4-additional-resources","dir":"","previous_headings":"{tidytof}’s Design Principles (and some tips)","what":"4. Additional resources","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"tidytof built top tidyverse family R packages. result, users tidytof benefit substantially spending hours dplyr, ggplot2, tidyr package vignettes learn many useful functions packages provide. access recommended list package vignettes, run following lines R code console:","code":"# dplyr vignette(topic = \"dplyr\", package = \"dplyr\") vignette(topic = \"grouping\", package = \"dplyr\") vignette(topic = \"colwise\", package = \"dplyr\")  # ggplot2 vignette(topic = \"ggplot2-specs\", package = \"ggplot2\")  # tidyr vignette(topic = \"tidy-data\", package = \"tidyr\") vignette(topic = \"nest\", package = \"tidyr\")"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_SingleCellExperiment.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce an object into a SingleCellExperiment — as_SingleCellExperiment","title":"Coerce an object into a SingleCellExperiment — as_SingleCellExperiment","text":"Coerce object SingleCellExperiment Coerce tof_tbl SingleCellExperiment","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_SingleCellExperiment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce an object into a SingleCellExperiment — as_SingleCellExperiment","text":"","code":"as_SingleCellExperiment(x, ...)  # S3 method for tof_tbl as_SingleCellExperiment(   x,   channel_cols = where(tof_is_numeric),   reduced_dimensions_cols,   metadata_cols = where(function(.x) !tof_is_numeric(.x)),   split_reduced_dimensions = FALSE,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_SingleCellExperiment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce an object into a SingleCellExperiment — as_SingleCellExperiment","text":"x tof_tbl ... Unused. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. nothing specified, default numeric columns. reduced_dimensions_cols Unquoted column names representing columns contain dimensionality reduction embeddings, tSNE UMAP embeddings. Supports tidyselect helpers. metadata_cols Unquoted column names representing columns contain metadata samples cell collected. nothing specified, default non-numeric columns. split_reduced_dimensions boolean value indicating whether dimensionality results x split separate slots resulting SingleCellExperiment. FALSE (default), split performed reducedDims slot result single entry (\"tidytof_reduced_dimensions\"). TRUE, split performed reducedDims slot result 1-4 entries depending dimensionality reduction results present x (\"tidytof_pca\", \"tidytof_tsne\", \"tidytof_umap\", \"tidytof_reduced_dimensions\"). Note \"tidytof_reduced_dimensions\" include dimensionality reduction results named according tidytof's pca, umap, tsne conventions.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_SingleCellExperiment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce an object into a SingleCellExperiment — as_SingleCellExperiment","text":"SingleCellExperiment SingleCellExperiment.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_SingleCellExperiment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce an object into a SingleCellExperiment — as_SingleCellExperiment","text":"","code":"NULL #> NULL  NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce an object into a flowFrame — as_flowFrame","title":"Coerce an object into a flowFrame — as_flowFrame","text":"Coerce object flowFrame Coerce tof_tbl flowFrame","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowFrame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce an object into a flowFrame — as_flowFrame","text":"","code":"as_flowFrame(x, ...)  # S3 method for tof_tbl as_flowFrame(x, ...)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowFrame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce an object into a flowFrame — as_flowFrame","text":"x tof_tbl. ... Unused.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowFrame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce an object into a flowFrame — as_flowFrame","text":"flowFrame flowFrame. Note non-numeric columns `x` removed.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowFrame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce an object into a flowFrame — as_flowFrame","text":"","code":"NULL #> NULL  NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce an object into a flowSet — as_flowSet","title":"Coerce an object into a flowSet — as_flowSet","text":"Coerce object flowSet Coerce tof_tbl flowSet","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce an object into a flowSet — as_flowSet","text":"","code":"as_flowSet(x, ...)  # S3 method for tof_tbl as_flowSet(x, group_cols, ...)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce an object into a flowSet — as_flowSet","text":"x tof_tbl. ... Unused. group_cols Unquoted names columns `x` used group cells separate flowFrames. Supports tidyselect helpers. Defaults NULL (cells written single flowFrame).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce an object into a flowSet — as_flowSet","text":"flowSet flowSet. Note non-numeric columns `x` removed.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowSet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce an object into a flowSet — as_flowSet","text":"","code":"NULL #> NULL  NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_seurat.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce an object into a SeuratObject — as_seurat","title":"Coerce an object into a SeuratObject — as_seurat","text":"Coerce object SeuratObject Coerce tof_tbl SeuratObject","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_seurat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce an object into a SeuratObject — as_seurat","text":"","code":"as_seurat(x, ...)  # S3 method for tof_tbl as_seurat(   x,   channel_cols = where(tof_is_numeric),   reduced_dimensions_cols,   metadata_cols = where(function(.x) !tof_is_numeric(.x)),   split_reduced_dimensions = FALSE,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_seurat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce an object into a SeuratObject — as_seurat","text":"x tof_tbl ... Unused. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. nothing specified, default numeric columns. reduced_dimensions_cols Unquoted column names representing columns contain dimensionality reduction embeddings, tSNE UMAP embeddings. Supports tidyselect helpers. metadata_cols Unquoted column names representing columns contain metadata samples cell collected. nothing specified, default non-numeric columns. split_reduced_dimensions boolean value indicating whether dimensionality results x split separate slots resulting SingleCellExperiment. FALSE (default), split performed reducedDims slot result single entry (\"tidytof_reduced_dimensions\"). TRUE, split performed reducedDims slot result 1-4 entries depending dimensionality reduction results present x (\"tidytof_pca\", \"tidytof_tsne\", \"tidytof_umap\", \"tidytof_reduced_dimensions\"). Note \"tidytof_reduced_dimensions\" include dimensionality reduction results named according tidytof's pca, umap, tsne conventions.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_seurat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce an object into a SeuratObject — as_seurat","text":"SeuratObject SeuratObject.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_seurat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce an object into a SeuratObject — as_seurat","text":"","code":"NULL #> NULL  NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.flowSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an object into a tof_tbl — as_tof_tbl.flowSet","title":"Convert an object into a tof_tbl — as_tof_tbl.flowSet","text":"Convert object tof_tbl","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.flowSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an object into a tof_tbl — as_tof_tbl.flowSet","text":"","code":"# S3 method for flowSet as_tof_tbl(flow_data, sep = \"|\")"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.flowSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an object into a tof_tbl — as_tof_tbl.flowSet","text":"flow_data FlowSet sep string use separate antigen name associated metal column names output tibble. Defaults \"|\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.flowSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert an object into a tof_tbl — as_tof_tbl.flowSet","text":"`tof_tbl`","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce flowFrames or flowSets into tof_tbl's. — as_tof_tbl","title":"Coerce flowFrames or flowSets into tof_tbl's. — as_tof_tbl","text":"Coerce flowFrames flowSets tof_tbl's.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce flowFrames or flowSets into tof_tbl's. — as_tof_tbl","text":"","code":"as_tof_tbl(flow_data, sep = \"|\")"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce flowFrames or flowSets into tof_tbl's. — as_tof_tbl","text":"flow_data flowFrame flowSet sep string indicating symbol used separate antigen names metal names columns output tof_tbl.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce flowFrames or flowSets into tof_tbl's. — as_tof_tbl","text":"tof_tbl.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce flowFrames or flowSets into tof_tbl's. — as_tof_tbl","text":"","code":"input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]]  input_flowframe <- flowCore::read.FCS(input_file)  tof_tibble <- as_tof_tbl(input_flowframe)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/cosine_similarity.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the cosine similarity between two vectors — cosine_similarity","title":"Find the cosine similarity between two vectors — cosine_similarity","text":"Find cosine similarity two vectors","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/cosine_similarity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the cosine similarity between two vectors — cosine_similarity","text":"","code":"cosine_similarity(x, y)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/cosine_similarity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the cosine similarity between two vectors — cosine_similarity","text":"x numeric vector y numeric vector","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/cosine_similarity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the cosine similarity between two vectors — cosine_similarity","text":"scalar value representing cosine similarity x y","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_data.html","id":null,"dir":"Reference","previous_headings":"","what":"CyTOF data from two samples: 5,000 B-cell lineage cells from a healthy\npatient and 5,000 B-cell lineage cells from a B-cell precursor Acute\nLymphoblastic Leukemia (BCP-ALL) patient. — ddpr_data","title":"CyTOF data from two samples: 5,000 B-cell lineage cells from a healthy\npatient and 5,000 B-cell lineage cells from a B-cell precursor Acute\nLymphoblastic Leukemia (BCP-ALL) patient. — ddpr_data","text":"dataset containing CyTOF measurements immune cells originally studied following paper:   Good Z, Sarno J, et al. Single-cell developmental classification B cell precursor acute lymphoblastic leukemia diagnosis reveals predictors relapse. Nat Med. 2018 May;24(4):474-483. doi: 10.1038/nm.4505. Epub 2018 Mar 5. PMID: 29505032; PMCID: PMC5953207.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CyTOF data from two samples: 5,000 B-cell lineage cells from a healthy\npatient and 5,000 B-cell lineage cells from a B-cell precursor Acute\nLymphoblastic Leukemia (BCP-ALL) patient. — ddpr_data","text":"","code":"data(ddpr_data)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"CyTOF data from two samples: 5,000 B-cell lineage cells from a healthy\npatient and 5,000 B-cell lineage cells from a B-cell precursor Acute\nLymphoblastic Leukemia (BCP-ALL) patient. — ddpr_data","text":"data frame 10000 rows 24 variables: sample_name name sample data read cd45 CyTOF measurement raw ion counts cd19 CyTOF measurement raw ion counts cd22 CyTOF measurement raw ion counts cd79b CyTOF measurement raw ion counts cd20 CyTOF measurement raw ion counts cd34 CyTOF measurement raw ion counts cd123 CyTOF measurement raw ion counts cd10 CyTOF measurement raw ion counts cd24 CyTOF measurement raw ion counts cd127 CyTOF measurement raw ion counts cd43 CyTOF measurement raw ion counts cd38 CyTOF measurement raw ion counts cd58 CyTOF measurement raw ion counts psyk CyTOF measurement raw ion counts p4ebp1 CyTOF measurement raw ion counts pstat5 CyTOF measurement raw ion counts pakt CyTOF measurement raw ion counts ps6 CyTOF measurement raw ion counts perk CyTOF measurement raw ion counts pcreb CyTOF measurement raw ion counts","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"CyTOF data from two samples: 5,000 B-cell lineage cells from a healthy\npatient and 5,000 B-cell lineage cells from a B-cell precursor Acute\nLymphoblastic Leukemia (BCP-ALL) patient. — ddpr_data","text":"https://github.com/kara-davis-lab/DDPR","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CyTOF data from two samples: 5,000 B-cell lineage cells from a healthy\npatient and 5,000 B-cell lineage cells from a B-cell precursor Acute\nLymphoblastic Leukemia (BCP-ALL) patient. — ddpr_data","text":"data.frame","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Clinical metadata for each patient sample in Good & Sarno et al. (2018). — ddpr_metadata","title":"Clinical metadata for each patient sample in Good & Sarno et al. (2018). — ddpr_metadata","text":"dataset containing patient-level clinical metadata samples originally studied following paper:  Good Z, Sarno J, et al. Single-cell developmental classification B cell precursor acute lymphoblastic leukemia diagnosis reveals predictors relapse. Nat Med. 2018 May;24(4):474-483. doi: 10.1038/nm.4505. Epub 2018 Mar 5. PMID: 29505032; PMCID: PMC5953207.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clinical metadata for each patient sample in Good & Sarno et al. (2018). — ddpr_metadata","text":"","code":"data(ddpr_metadata)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_metadata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Clinical metadata for each patient sample in Good & Sarno et al. (2018). — ddpr_metadata","text":"data frame 10000 rows 12 variables: patient_id Name sample data read gender Gender patient sample collected age_at_diagnosis Age (years) patient sample collected wbc_count diagnostic White Blood Cell (WBC) count patient sample collected mrd_risk Risk stratification category patient using minimal residual disease (MRD) criteria nci_rome_risk Risk stratification category patient using National Cancer Institute (NCI) criteria relapse_status string representing whether patient relapsed time_to_relapse time (days) took patient relapse. Patients relapse value NA type_of_relapse string representing timing relapse patient.   \"early\" relapses occurred less 18 months diagnosis;   \"Early\" relapses occurred 18 months 32 months diagnosis;   \"Late\" relapses occurred later 32 months diagnosis. ccr number documented days continuous complete remission (CCR) patients relapse. patients relapsed value NA. cohort string representing sample used \"Training\" \"Validation\" cohort original study ddpr_risk risk category (\"Low\" \"High\") assigned sample using original paper's risk-stratification algorithm","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_metadata.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Clinical metadata for each patient sample in Good & Sarno et al. (2018). — ddpr_metadata","text":"Good Z, Sarno J, et al. Single-cell developmental classification B cell precursor acute lymphoblastic leukemia diagnosis reveals predictors relapse. Nat Med. 2018 May;24(4):474-483. doi: 10.1038/nm.4505. Epub 2018 Mar 5. PMID: 29505032; PMCID: PMC5953207. Supplementary Table 1.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clinical metadata for each patient sample in Good & Sarno et al. (2018). — ddpr_metadata","text":"data.frame","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/dot.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the dot product between two vectors. — dot","title":"Find the dot product between two vectors. — dot","text":"Find dot product two vectors.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/dot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the dot product between two vectors. — dot","text":"","code":"dot(x, y)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/dot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the dot product between two vectors. — dot","text":"x numeric vector. y numeric vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/dot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the dot product between two vectors. — dot","text":"dot product x y.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/get_extension.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the extension for a file — get_extension","title":"Find the extension for a file — get_extension","text":"Find extension file","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/get_extension.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the extension for a file — get_extension","text":"","code":"get_extension(filename)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/get_extension.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the extension for a file — get_extension","text":"filename string representing name file local directory","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/get_extension.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the extension for a file — get_extension","text":"file extension `filename`","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/l2_normalize.html","id":null,"dir":"Reference","previous_headings":"","what":"L2 normalize an input vector x to a length of 1 — l2_normalize","title":"L2 normalize an input vector x to a length of 1 — l2_normalize","text":"L2 normalize input vector x length 1","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/l2_normalize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"L2 normalize an input vector x to a length of 1 — l2_normalize","text":"","code":"l2_normalize(x)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/l2_normalize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"L2 normalize an input vector x to a length of 1 — l2_normalize","text":"x numeric vector","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/l2_normalize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"L2 normalize an input vector x to a length of 1 — l2_normalize","text":"vector length length(x) magnitude 1","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/magnitude.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the magnitude of a vector. — magnitude","title":"Find the magnitude of a vector. — magnitude","text":"Find magnitude vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/magnitude.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the magnitude of a vector. — magnitude","text":"","code":"magnitude(x)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/magnitude.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the magnitude of a vector. — magnitude","text":"x numeric vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/magnitude.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the magnitude of a vector. — magnitude","text":"scalar value (magnitude x).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/make_flowcore_annotated_data_frame.html","id":null,"dir":"Reference","previous_headings":"","what":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","title":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","text":"Make AnnotatedDataFrame needed flowFrame class","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/make_flowcore_annotated_data_frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","text":"","code":"make_flowcore_annotated_data_frame(maxes_and_mins)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/make_flowcore_annotated_data_frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","text":"maxes_and_mins data.frame containing information max min values channel saved flowFrame.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/make_flowcore_annotated_data_frame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","text":"AnnotatedDataFrame.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/make_flowcore_annotated_data_frame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/metal_masterlist.html","id":null,"dir":"Reference","previous_headings":"","what":"A character vector of metal name patterns supported by tidytof. — metal_masterlist","title":"A character vector of metal name patterns supported by tidytof. — metal_masterlist","text":"character vector used `tof_read_fcs` `tof_read_data` detect parse CyTOF metals correspond channel input .fcs file.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/metal_masterlist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A character vector of metal name patterns supported by tidytof. — metal_masterlist","text":"","code":"data(metal_masterlist)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/metal_masterlist.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A character vector of metal name patterns supported by tidytof. — metal_masterlist","text":"character vector entry pattern tidytof searches every CyTOF channel input .fcs files. patterns amalgamate example .fcs files sampled studies linked .","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/metal_masterlist.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"A character vector of metal name patterns supported by tidytof. — metal_masterlist","text":"https://github.com/kara-davis-lab/DDPR https://cytobank.org/nolanlab/reports/Levine2015.html https://cytobank.org/nolanlab/reports/Spitzer2015.html https://cytobank.org/nolanlab/reports/Spitzer2017.html https://community.cytobank.org/cytobank/projects/609","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/metal_masterlist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A character vector of metal name patterns supported by tidytof. — metal_masterlist","text":"named character vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor for a tof_model. — new_tof_model","title":"Constructor for a tof_model. — new_tof_model","text":"Constructor tof_model.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor for a tof_model. — new_tof_model","text":"","code":"new_tof_model(   model,   recipe,   penalty,   mixture,   model_type = c(\"linear\", \"two-class\", \"multiclass\", \"survival\"),   outcome_colnames,   training_data )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor for a tof_model. — new_tof_model","text":"model glmnet model. recipe prepped recipe object. penalty double indicating lambda value used within glmnet path. mixture double indicating alpha value used fit glmnet model. model_type string indicating type glmnet model fit. outcome_colnames training_data ","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructor for a tof_model. — new_tof_model","text":"`tof_model`, S3 class includes trained glmnet model recipe used perform associated preprocessing.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor for a tof_tibble. — new_tof_tibble","title":"Constructor for a tof_tibble. — new_tof_tibble","text":"Constructor tof_tibble.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor for a tof_tibble. — new_tof_tibble","text":"","code":"new_tof_tibble(x = dplyr::tibble(), panel = dplyr::tibble())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor for a tof_tibble. — new_tof_tibble","text":"x data.frame tibble containing single-cell mass cytometry data rows cells columns CyTOF measurements. panel data.frame tibble containing information panel mass cytometry data x.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_tibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructor for a tof_tibble. — new_tof_tibble","text":"`tof_tbl`, tibble extension tracks attributes useful CyTOF data analysis.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/phenograph_data.html","id":null,"dir":"Reference","previous_headings":"","what":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","title":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","text":"dataset containing CyTOF measurements healthy control cells originally studied following paper:   Levine JH, Simonds EF, et al. Data-Driven Phenotypic Dissection AML Reveals Progenitor-like Cells Correlate Prognosis. Cell. 2015 Jul 2;162(1):184-97. doi: 10.1016/j.cell.2015.05.047. Epub 2015 Jun 18. PMID: 26095251; PMCID: PMC4508757.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/phenograph_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","text":"","code":"data(phenograph_data)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/phenograph_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","text":"data frame 6000 rows 26 variables: sample_name Name sample data read phenograph_cluster Numeric ID cluster assignment row cd19 CyTOF measurement raw ion counts cd11b CyTOF measurement raw ion counts cd34 CyTOF measurement raw ion counts cd45 CyTOF measurement raw ion counts cd123 CyTOF measurement raw ion counts cd33 CyTOF measurement raw ion counts cd47 CyTOF measurement raw ion counts cd7 CyTOF measurement raw ion counts cd44 CyTOF measurement raw ion counts cd38 CyTOF measurement raw ion counts cd3 CyTOF measurement raw ion counts cd117 CyTOF measurement raw ion counts cd64 CyTOF measurement raw ion counts cd41 CyTOF measurement raw ion counts pstat3 CyTOF measurement raw ion counts pstat5 CyTOF measurement raw ion counts pampk CyTOF measurement raw ion counts p4ebp1 CyTOF measurement raw ion counts ps6 CyTOF measurement raw ion counts pcreb CyTOF measurement raw ion counts pzap70-syk CyTOF measurement raw ion counts prb CyTOF measurement raw ion counts perk1-2 CyTOF measurement raw ion counts","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/phenograph_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","text":"https://cytobank.org/nolanlab/reports/Levine2015.html","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/phenograph_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","text":"data.frame","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/phenograph_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","text":"2000 cells 3 clusters identified original paper sampled.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. dplyr %>% rlang :=, .data tidyselect all_of, any_of, contains, ends_with, everything, last_col, matches, num_range, starts_with","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/rev_asinh.html","id":null,"dir":"Reference","previous_headings":"","what":"Reverses arcsinh transformation with cofactor `scale_factor` and a\nshift of `shift_factor`. — rev_asinh","title":"Reverses arcsinh transformation with cofactor `scale_factor` and a\nshift of `shift_factor`. — rev_asinh","text":"Reverses arcsinh transformation cofactor `scale_factor` shift `shift_factor`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/rev_asinh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reverses arcsinh transformation with cofactor `scale_factor` and a\nshift of `shift_factor`. — rev_asinh","text":"","code":"rev_asinh(x, shift_factor, scale_factor)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/rev_asinh.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reverses arcsinh transformation with cofactor `scale_factor` and a\nshift of `shift_factor`. — rev_asinh","text":"x numeric vector. shift_factor scalar value `` following equation used transform high-dimensional cytometry raw data ion counts using hyperbolic arcsinh function:    `new_x <- asinh(+ b * x)`. scale_factor scalar value `b` following equation used transform high-dimensional cytometry raw data ion counts using hyperbolic arcsinh function:    `new_x <- asinh(+ b * x)`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/rev_asinh.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reverses arcsinh transformation with cofactor `scale_factor` and a\nshift of `shift_factor`. — rev_asinh","text":"numeric vector undergoing reverse arcsinh transformation","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/rev_asinh.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reverses arcsinh transformation with cofactor `scale_factor` and a\nshift of `shift_factor`. — rev_asinh","text":"","code":"shift_factor <- 0 scale_factor <- 1 / 5  input_value <- 20 asinh_value <- asinh(shift_factor + input_value * scale_factor)  restored_value <- rev_asinh(asinh_value, shift_factor, scale_factor)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tidytof_example_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get paths to tidytof example data — tidytof_example_data","title":"Get paths to tidytof example data — tidytof_example_data","text":"tidytof comes bundled number sample .fcs files inst/extdata directory. function makes easy access.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tidytof_example_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get paths to tidytof example data — tidytof_example_data","text":"","code":"tidytof_example_data(dataset_name = NULL)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tidytof_example_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get paths to tidytof example data — tidytof_example_data","text":"dataset_name Name dataset want access. NULL, names datasets (different study) listed.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tidytof_example_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get paths to tidytof example data — tidytof_example_data","text":"character vector file paths requested .fcs files located. `dataset_name` NULL, character vector dataset names (can used values `dataset_name`) returned instead.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tidytof_example_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get paths to tidytof example data — tidytof_example_data","text":"","code":"tidytof_example_data() #> [1] \"aml\"               \"ddpr\"              \"ddpr_metadata.csv\" #> [4] \"mix\"               \"mix2\"              \"phenograph\"        #> [7] \"phenograph_csv\"    \"surgery\"           tidytof_example_data(dataset_name = \"phenograph\") #> [1] \"/home/runner/work/_temp/Library/tidytof/extdata/phenograph\""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Differential Abundance Analysis (DAA) on high-dimensional cytometry data — tof_analyze_abundance","title":"Perform Differential Abundance Analysis (DAA) on high-dimensional cytometry data — tof_analyze_abundance","text":"function performs differential abundance analysis cell clusters contained within `tof_tbl` using one three methods (\"diffcyt\", \"glmm\", \"ttest\"). wraps members `tof_analyze_abundance_*` function family: tof_analyze_abundance_diffcyt, tof_analyze_abundance_glmm, tof_analyze_abundance_ttest.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Differential Abundance Analysis (DAA) on high-dimensional cytometry data — tof_analyze_abundance","text":"","code":"tof_analyze_abundance(tof_tibble, method = c(\"diffcyt\", \"glmm\", \"ttest\"), ...)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Differential Abundance Analysis (DAA) on high-dimensional cytometry data — tof_analyze_abundance","text":"tof_tibble `tof_tbl` `tibble`. method string indicating statistical method used. Valid values include \"diffcyt\", \"glmm\", \"ttest\". ... Additional arguments pass onto `tof_analyze_abundance_*` function family member corresponding chosen method.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform Differential Abundance Analysis (DAA) on high-dimensional cytometry data — tof_analyze_abundance","text":"tibble nested tibble containing differential abundance results chosen method. See tof_analyze_abundance_diffcyt, tof_analyze_abundance_glmm, tof_analyze_abundance_ttest details.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform Differential Abundance Analysis (DAA) on high-dimensional cytometry data — tof_analyze_abundance","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_diffcyt.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","title":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","text":"function performs differential abundance analysis cell clusters contained within `tof_tbl` using one three methods implemented diffcyt package differential discovery analysis high-dimensional cytometry data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_diffcyt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","text":"","code":"tof_analyze_abundance_diffcyt(   tof_tibble,   sample_col,   cluster_col,   fixed_effect_cols,   random_effect_cols,   diffcyt_method = c(\"glmm\", \"edgeR\", \"voom\"),   include_observation_level_random_effects = FALSE,   min_cells = 3,   min_samples = 5,   alpha = 0.05,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_diffcyt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","text":"tof_tibble `tof_tbl` `tibble`. sample_col unquoted column name indicating column `tof_tibble` represents id sample cell collected. `sample_col` serve unique identifier sample collected data acquisition - cells value `sample_col` treated part observational unit. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. fixed_effect_cols Unquoted column names representing columns `tof_tibble` used model fixed effects differential abundance analysis. Generally speaking, fixed effects represent comparisons biological interest (often variables manipulated experiments), treated vs. non-treated, -treatment vs. -treatment, healthy vs. non-healthy. random_effect_cols Optional. Unquoted column names representing columns `tof_tibble` used model random effects differential abundance analysis. Generally speaking, random effects represent variables researcher wants control/account , necessarily biological interest. Example random effect variables might include batch id, patient id (paired design), patient age. Note without multiple samples level random effect variables, can easy overfit mixed models. high-dimensional cytometry experiments, 2 fewer (often 0) random effect variables appropriate. diffcyt_method string indicating diffcyt method used differential abundance analysis. Valid methods include \"glmm\" (default), \"edgeR\", \"voom\". include_observation_level_random_effects boolean value indicating \"observation-level random effects\" (OLREs) included random effect terms \"glmm\" differential abundance model. details OLREs , see diffcyt paper. \"glmm\" method can model observation-level random effects, values ignore argument (throw warning set TRUE). Defaults FALSE. min_cells integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 3. min_samples integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 5. alpha numeric value 0 1 indicating significance level applied multiple-comparison adjusted p-values differential abundance analysis. Defaults 0.05. ... Optional additional arguments pass --hood diffcyt function used perform differential abundance analysis. See testDA_GLMM, testDA_edgeR, testDA_voom details.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_diffcyt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","text":"nested tibble two columns: `tested_effect` `daa_results`. first column, `tested_effect` character vector indicating term differential abundance model used significance testing. values row obtained pasting together column names fixed effect variable values. example, fixed effect column named `fixed_effect` levels \"\", \"b\", \"c\" two terms `tested_effect`: \"fixed_effectb\" \"fixed_effectc\" (note level \"\" fixed_effect set reference level dummy coding). values correspond terms differential abundance model represent difference cluster abundances samples fixed_effect = \"b\" fixed_effect = \"\" samples fixed_effect = \"c\" fixed_effect = \"\", respectively. addition, first row `tested_effect` always represent \"omnibus\" test, test significant differences levels fixed effect variable model. second column, `daa_results` list tibbles entry gives differential abundance results tested_effect. Within entry `daa_results`, find several columns including following: * `p_val`, p-value associated tested effect input cluster * `p_adj`, multiple-comparison adjusted p-value (using p.adjust function) * values associated underlying method used perform differential abundance analysis (log-fold change cluster abundance levels compared). details, see glmFit, voom, topTable, testDA_GLMM.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_diffcyt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","text":"three methods based generalized linear mixed models (\"glmm\"), edgeR (\"edgeR\"), voom (\"voom\"). \"glmm\" \"voom\" methods can model fixed effects random effects, \"edgeR\" method can model fixed effects.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_diffcyt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_glmm.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Abundance Analysis (DAA) with generalized linear mixed-models (GLMMs) — tof_analyze_abundance_glmm","title":"Differential Abundance Analysis (DAA) with generalized linear mixed-models (GLMMs) — tof_analyze_abundance_glmm","text":"function performs differential abundance analysis cell clusters contained within `tof_tbl` using generalized linear mixed-models. Users specify columns represent sample, cluster, fixed effect, random effect information, (mixed) binomial regression model fit using either glmer glm.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_glmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Abundance Analysis (DAA) with generalized linear mixed-models (GLMMs) — tof_analyze_abundance_glmm","text":"","code":"tof_analyze_abundance_glmm(   tof_tibble,   sample_col,   cluster_col,   fixed_effect_cols,   random_effect_cols,   min_cells = 3,   min_samples = 5,   alpha = 0.05 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_glmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Abundance Analysis (DAA) with generalized linear mixed-models (GLMMs) — tof_analyze_abundance_glmm","text":"tof_tibble `tof_tbl` `tibble`. sample_col unquoted column name indicating column `tof_tibble` represents id sample cell collected. `sample_col` serve unique identifier sample collected data acquisition - cells value `sample_col` treated part observational unit. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. fixed_effect_cols Unquoted column names representing columns `tof_tibble` used model fixed effects differential abundance analysis. Supports tidyselect helpers. Generally speaking, fixed effects represent comparisons biological interest (often variables manipulated experiments), treated vs. non-treated, -treatment vs. -treatment, healthy vs. non-healthy. random_effect_cols Unquoted column names representing columns `tof_tibble` used model random effects differential abundance analysis. Supports tidyselection. Generally speaking, random effects represent variables researcher wants control/account , necessarily biological interest. Example random effect variables might include batch id, patient id (paired design), patient age. Note without many samples level random effect variables, can easy overfit mixed models. high-dimensional cytometry experiments, 2 fewer (often 0) random effect variables appropriate. min_cells integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 3. min_samples integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 5. alpha numeric value 0 1 indicating significance level applied multiple-comparison adjusted p-values differential abundance analysis. Defaults 0.05.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_glmm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Abundance Analysis (DAA) with generalized linear mixed-models (GLMMs) — tof_analyze_abundance_glmm","text":"nested tibble two columns: `tested_effect` `daa_results`. first column, `tested_effect`, character vector indicating term differential abundance model used significance testing. values row obtained pasting together column names fixed effect variable values. example, fixed effect column named fixed_effect levels \"\", \"b\", \"c\" two terms `tested_effect`: \"fixed_effectb\" \"fixed_effectc\" (note level \"\" fixed_effect set reference level dummy coding). values correspond terms differential abundance model represent difference cluster abundances samples fixed_effect = \"b\" fixed_effect = \"\" samples fixed_effect = \"c\" fixed_effect = \"\", respectively. addition, note first row `tested_effect` always represent \"omnibus\" test, test significant differences levels fixed effect variable model. second column, `daa_results`, list tibbles entry gives differential abundance results tested_effect. Within entry `daa_results`, find `p_value`, p-value associated tested effect input cluster; `p_adj`, multiple-comparison adjusted p-value (using p.adjust function), values associated underlying method used perform differential abundance analysis (log-fold change cluster abundance levels compared).","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_glmm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Abundance Analysis (DAA) with generalized linear mixed-models (GLMMs) — tof_analyze_abundance_glmm","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_ttest.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Abundance Analysis (DAA) with t-tests — tof_analyze_abundance_ttest","title":"Differential Abundance Analysis (DAA) with t-tests — tof_analyze_abundance_ttest","text":"function performs differential abundance analysis cell clusters contained within `tof_tbl` using simple t-tests. Users specify columns represent sample, cluster, effect information, either paired unpaired t-test (one per cluster) used detect significant differences sample types.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_ttest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Abundance Analysis (DAA) with t-tests — tof_analyze_abundance_ttest","text":"","code":"tof_analyze_abundance_ttest(   tof_tibble,   cluster_col,   effect_col,   group_cols,   test_type = c(\"unpaired\", \"paired\"),   min_cells = 3,   min_samples = 5,   alpha = 0.05,   quiet = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_ttest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Abundance Analysis (DAA) with t-tests — tof_analyze_abundance_ttest","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. effect_col Unquoted column name representing column `tof_tibble` used break samples groups t-test. 2 unique values. group_cols Unquoted names columns `effect_col` used group cells independent observations. Fills similar role `sample_col` `tof_analyze_abundance_*` functions. example, experiment involves analyzing samples taken multiple patients two timepoints (`effect_col = timepoint`), group_cols name column representing patient IDs. test_type string indicating whether t-test \"unpaired\" (default) \"paired\". min_cells integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 3. min_samples integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 5. alpha numeric value 0 1 indicating significance level applied multiple-comparison adjusted p-values differential abundance analysis. Defaults 0.05. quiet boolean value indicating whether warnings printed. Defaults `TRUE`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_ttest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Abundance Analysis (DAA) with t-tests — tof_analyze_abundance_ttest","text":"tibble 7 columns: {cluster_col} name/ID cluster tested.   entry column match unique value input   {cluster_col}. t t-statistic computed cluster. df degrees freedom used t-test cluster. p_val (unadjusted) p-value t-test cluster. p_adj p.adjust-adjusted p-value t-test cluster. significant character vector \"*\" clusters    p_adj < alpha \"\" otherwise. mean_diff unpaired t-test, difference average   proportions cluster two levels `effect_col`. paired   t-test, average difference proportions cluster   two levels `effect_col` within given patient. mean_fc unpaired t-test, ratio average   proportions cluster two levels `effect_col`. paired   t-test, average ratio proportions cluster   two levels `effect_col` within given patient. 0.001 added   denominator ratio avoid divide--zero errors. \"levels\" attribute result indicates order different levels `effect_col` considered. `mean_diff` value row output computed subtracting second level first level, `mean_fc` value row computed dividing first level second level.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_ttest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Abundance Analysis (DAA) with t-tests — tof_analyze_abundance_ttest","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Differential Expression Analysis (DEA) on high-dimensional cytometry data — tof_analyze_expression","title":"Perform Differential Expression Analysis (DEA) on high-dimensional cytometry data — tof_analyze_expression","text":"function performs differential expression analysis cell clusters contained within `tof_tbl` using one three methods (\"diffcyt\", \"glmm\", \"ttest\"). wraps members `tof_analyze_expression_*` function family: tof_analyze_expression_diffcyt, tof_analyze_expression_lmm, tof_analyze_expression_ttest.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Differential Expression Analysis (DEA) on high-dimensional cytometry data — tof_analyze_expression","text":"","code":"tof_analyze_expression(tof_tibble, method = c(\"diffcyt\", \"glmm\", \"ttest\"), ...)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Differential Expression Analysis (DEA) on high-dimensional cytometry data — tof_analyze_expression","text":"tof_tibble `tof_tbl` `tibble`. method string indicating statistical method used. Valid values include \"diffcyt\", \"lmm\", \"ttest\". ... Additional arguments pass onto `tof_analyze_expression_*` function family member corresponding chosen method.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform Differential Expression Analysis (DEA) on high-dimensional cytometry data — tof_analyze_expression","text":"tibble nested tibble containing differential abundance results chosen method. See tof_analyze_expression_diffcyt, tof_analyze_expression_lmm, tof_analyze_expression_ttest details.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform Differential Expression Analysis (DEA) on high-dimensional cytometry data — tof_analyze_expression","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_diffcyt.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","title":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","text":"function performs differential expression analysis cell clusters contained within `tof_tbl` using one two methods implemented diffcyt package differential discovery analysis high-dimensional cytometry data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_diffcyt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","text":"","code":"tof_analyze_expression_diffcyt(   tof_tibble,   sample_col,   cluster_col,   marker_cols = where(tof_is_numeric),   fixed_effect_cols,   random_effect_cols,   diffcyt_method = c(\"lmm\", \"limma\"),   include_observation_level_random_effects = FALSE,   min_cells = 3,   min_samples = 5,   alpha = 0.05,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_diffcyt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","text":"tof_tibble `tof_tbl` `tibble`. sample_col unquoted column name indicating column `tof_tibble` represents id sample cell collected. `sample_col` serve unique identifier sample collected data acquisition - cells value `sample_col` treated part observational unit. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names representing columns `tof_tibble` (.e. high-dimensional cytometry protein measurements) tested differential expression levels `fixed_effect_cols`. Defaults numeric (integer double) columns. Supports tidyselect helpers. fixed_effect_cols Unquoted column names representing columns `tof_tibble` used model fixed effects differential expression analysis. Generally speaking, fixed effects represent comparisons biological interest (often variables manipulated experiments), treated vs. non-treated, -treatment vs. -treatment, healthy vs. non-healthy. random_effect_cols Unquoted column names representing columns `tof_tibble` used model random effects differential expression analysis. Generally speaking, random effects represent variables researcher wants control/account , necessarily biological interest. Example random effect variables might include batch id, patient id (paired design), patient age. Note without many samples level random effect variables, can easy overfit mixed models. high-dimensional cytometry experiments, 2 fewer (often 0) random effect variables appropriate. diffcyt_method string indicating diffcyt method used differential expression analysis. Valid methods include \"lmm\" (default) \"limma\". include_observation_level_random_effects boolean value indicating \"observation-level random effects\" (OLREs) included random effect terms \"lmm\" differential expression model. details OLREs , see diffcyt paper. Defaults FALSE. min_cells integer value used filter clusters differential expression analysis. Clusters included differential expression testing least `min_cells` least `min_samples` samples. Defaults 3. min_samples integer value used filter clusters differential expression analysis. Clusters included differential expression testing least `min_cells` least `min_samples` samples. Defaults 5. alpha numeric value 0 1 indicating significance level applied multiple-comparison adjusted p-values differential abundance analysis. Defaults 0.05. ... Optional additional arguments pass --hood diffcyt function used perform differential expression analysis. See testDS_LMM testDS_limma details.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_diffcyt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","text":"nested tibble two columns: `tested_effect` `dea_results`. first column, `tested_effect` character vector indicating term differential expression model used significance testing. values row obtained pasting together column names fixed effect variable values. example, fixed effect column named fixed_effect levels \"\", \"b\", \"c\" two terms `tested_effect`: \"fixed_effectb\" \"fixed_effectc\" (note level \"\" fixed_effect set reference level dummy coding). values correspond terms differential expression model represent difference cluster median expression values marker samples fixed_effect = \"b\" fixed_effect = \"\" samples fixed_effect = \"c\" fixed_effect = \"\", respectively. addition, note first row `tested_effect` always represent \"omnibus\" test, test significant differences levels fixed effect variable model. second column, `dea_results` list tibbles entry gives differential expression results tested_effect. Within entry `dea_results`, find `p_val`, p-value associated tested effect input cluster/marker pair; `p_adj`, multiple-comparison adjusted p-value (using p.adjust function), values associated underlying method used perform differential expression analysis (log-fold change clusters' median marker expression values conditions compared). tibble `dea_results` also two columns representing cluster marker corresponding p-value row.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_diffcyt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","text":"two methods based linear mixed models (\"lmm\") limma (\"limma\"). \"lmm\" \"limma\" methods can model fixed effects random effects.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_diffcyt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_lmm.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","title":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","text":"function performs differential expression analysis cell clusters contained within `tof_tbl` using linear mixed-models. Users specify columns represent sample, cluster, marker, fixed effect, random effect information, (mixed) linear regression model fit using either lmer glm.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_lmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","text":"","code":"tof_analyze_expression_lmm(   tof_tibble,   sample_col,   cluster_col,   marker_cols = where(tof_is_numeric),   fixed_effect_cols,   random_effect_cols,   central_tendency_function = median,   min_cells = 3,   min_samples = 5,   alpha = 0.05 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_lmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","text":"tof_tibble `tof_tbl` `tibble`. sample_col unquoted column name indicating column `tof_tibble` represents id sample cell collected. `sample_col` serve unique identifier sample collected data acquisition - cells value `sample_col` treated part observational unit. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names representing columns `tof_tibble` (.e. high-dimensional cytometry protein measurements) included differential discovery analysis. Defaults numeric (integer double) columns. Supports tidyselection. fixed_effect_cols Unquoted column names representing columns `tof_tibble` used model fixed effects differential expression analysis. Supports tidyselection. Generally speaking, fixed effects represent comparisons biological interest (often variables manipulated experiments), treated vs. non-treated, -treatment vs. -treatment, healthy vs. non-healthy. random_effect_cols Optional. Unquoted column names representing columns `tof_tibble` used model random effects differential expression analysis. Supports tidyselection. Generally speaking, random effects represent variables researcher wants control/account , necessarily biological interest. Example random effect variables might include batch id, patient id (paired design), patient age. analyses include random effects. central_tendency_function function used calculate measurement central tendency cluster/marker pair (used dependent variable linear model). Defaults median. min_cells integer value used filter clusters differential expression analysis. Clusters included differential expression testing least `min_cells` least `min_samples` samples. Defaults 3. min_samples integer value used filter clusters differential expression analysis. Clusters included differential expression testing least `min_cells` least `min_samples` samples. Defaults 5. alpha numeric value 0 1 indicating significance level applied multiple-comparison adjusted p-values differential abundance analysis. Defaults 0.05.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_lmm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","text":"nested tibble two columns: `tested_effect` `dea_results`. first column, `tested_effect` character vector indicating term differential expression model used significance testing. values row obtained pasting together column names fixed effect variable values. example, fixed effect column named fixed_effect levels \"\", \"b\", \"c\" two terms `tested_effect`: \"fixed_effectb\" \"fixed_effectc\" (note level \"\" fixed_effect set reference level dummy coding). values correspond terms differential expression model represent difference cluster median expression values marker samples fixed_effect = \"b\" fixed_effect = \"\" samples fixed_effect = \"c\" fixed_effect = \"\", respectively. addition, note first row `tested_effect` always represent \"omnibus\" test, test significant differences levels fixed effect variable model. second column, `dea_results` list tibbles entry gives differential expression results tested_effect. Within entry `daa_results`, find `p_val`, p-value associated tested effect input cluster/marker pair; `p_adj`, multiple-comparison adjusted p-value (using p.adjust function), values associated underlying method used perform differential expression analysis (log-fold change clusters' median marker expression values levels compared).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_lmm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","text":"Specifically, one linear model fit cluster/marker pair. cluster/marker pair, user-supplied measurement central tendency (`central_tendency_function`), mean median, calculated across cells cluster sample--sample basis. , central tendency value used dependent variable linear model `fixed_effect_cols` fixed effects predictors `random_effect_cols` random effects predictors. models (one per cluster/marker pair) fit, p-values coefficient model multiple-comparisons adjusted using p.adjust function.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_lmm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_ttest.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Expression Analysis (DEA) with t-tests — tof_analyze_expression_ttest","title":"Differential Expression Analysis (DEA) with t-tests — tof_analyze_expression_ttest","text":"function performs differential expression analysis cell clusters contained within `tof_tbl` using simple t-tests. Specifically, either unpaired paired t-test compare samples' marker expression distributions (two conditions) within cluster using user-specified summary function (.e. mean median). One t-test conducted per cluster/marker pair significant differences sample types detected multiple-hypothesis correction.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_ttest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Expression Analysis (DEA) with t-tests — tof_analyze_expression_ttest","text":"","code":"tof_analyze_expression_ttest(   tof_tibble,   cluster_col,   marker_cols = where(tof_is_numeric),   effect_col,   group_cols,   test_type = c(\"unpaired\", \"paired\"),   summary_function = mean,   min_cells = 3,   min_samples = 5,   alpha = 0.05,   quiet = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_ttest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Expression Analysis (DEA) with t-tests — tof_analyze_expression_ttest","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names representing columns `tof_tibble` (.e. high-dimensional cytometry protein measurements) tested differential expression levels `effect_col`. Defaults numeric (integer double) columns. Supports tidyselect helpers. effect_col Unquoted column name representing column `tof_tibble` used break samples groups t-test. 2 unique values. group_cols Unquoted names columns `effect_col` used group cells independent observations. Fills similar role `sample_col` `tof_analyze_abundance_*` functions. example, experiment involves analyzing samples taken multiple patients two timepoints (`effect_col = timepoint`), group_cols name column representing patient IDs. test_type string indicating whether t-test \"unpaired\" (default) \"paired\". summary_function vector-valued function used summarize distribution marker cluster (within sample, grouped `group_cols`). Defaults `mean`. min_cells integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 3. min_samples integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 5. alpha numeric value 0 1 indicating significance level applied multiple-comparison adjusted p-values differential abundance analysis. Defaults 0.05. quiet boolean value indicating whether warnings printed. Defaults `TRUE`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_ttest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Expression Analysis (DEA) with t-tests — tof_analyze_expression_ttest","text":"tibble 7 columns: {cluster_col} name/ID cluster cluster/marker pair   tested. entry column match unique value input   {cluster_col}. marker name marker cluster/marker pair tested. t t-statistic computed cluster. df degrees freedom used t-test cluster. p_val (unadjusted) p-value t-test cluster. p_adj p.adjust-adjusted p-value t-test cluster. significant character vector \"*\" clusters    p_adj < alpha \"\" otherwise. mean_diff unpaired t-test, difference average   proportions cluster two levels `effect_col`. paired   t-test, average difference proportions cluster   two levels `effect_col` within given patient. mean_fc unpaired t-test, ratio average   proportions cluster two levels `effect_col`. paired   t-test, average ratio proportions cluster   two levels `effect_col` within given patient. 0.001 added   denominator ratio avoid divide--zero errors. \"levels\" attribute result indicates order different levels `effect_col` considered. `mean_diff` value row output computed subtracting second level first level, `mean_fc` value row computed dividing first level second level.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_ttest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Expression Analysis (DEA) with t-tests — tof_analyze_expression_ttest","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_annotate_clusters.html","id":null,"dir":"Reference","previous_headings":"","what":"Manually annotate tidytof-computed clusters using user-specified labels — tof_annotate_clusters","title":"Manually annotate tidytof-computed clusters using user-specified labels — tof_annotate_clusters","text":"function adds additional column `tibble` `tof_tbl` allow users incorporate manual cell type labels clusters identified using unsupervised algorithms.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_annotate_clusters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Manually annotate tidytof-computed clusters using user-specified labels — tof_annotate_clusters","text":"","code":"tof_annotate_clusters(tof_tibble, cluster_col, annotations)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_annotate_clusters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Manually annotate tidytof-computed clusters using user-specified labels — tof_annotate_clusters","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` contains ids unsupervised cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. annotations data structure indicating annotate cluster id `cluster_col`. `annotations` can provided data.frame two columns (first name `cluster_col` contain unique cluster id; second can name contain character vector indicating manual annotation matched cluster id first column). `annotations` can also provided named character vector; case, entry `annotations` unique cluster id, names entry corresponding manual cluster annotation. See examples.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_annotate_clusters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Manually annotate tidytof-computed clusters using user-specified labels — tof_annotate_clusters","text":"`tof_tbl` number rows `tof_tibble` one additional column containing manual cluster annotations cell (character vector). `annotations` provided data.frame, new column name column containing cluster annotations `annotations`. `annotations` provided named character vector, new column named `cluster_col_annotation`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_annotate_clusters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Manually annotate tidytof-computed clusters using user-specified labels — tof_annotate_clusters","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = c(rnorm(n = 500), rnorm(n = 500, mean = 2)),         cd34 = c(rnorm(n = 500), rnorm(n = 500, mean = 4)),         cd19 = rnorm(n = 1000),         cluster_id = c(rep(\"a\", 500), rep(\"b\", 500))     )  # using named character vector sim_data |>     tof_annotate_clusters(         cluster_col = cluster_id,         annotations = c(\"macrophage\" = \"a\", \"dendritic cell\" = \"b\")     ) #> # A tibble: 1,000 × 6 #>        cd45   cd38   cd34   cd19 cluster_id cluster_id_annotation #>       <dbl>  <dbl>  <dbl>  <dbl> <chr>      <chr>                 #>  1 -1.40    -0.337 -0.166  1.12  a          macrophage            #>  2  0.255   -0.216  0.120  0.400 a          macrophage            #>  3 -2.44     0.621 -0.662 -0.985 a          macrophage            #>  4 -0.00557 -1.28  -0.531 -0.503 a          macrophage            #>  5  0.622   -1.30  -0.301  0.987 a          macrophage            #>  6  1.15    -0.377 -0.602  2.19  a          macrophage            #>  7 -1.82     0.104 -0.318 -0.165 a          macrophage            #>  8 -0.247   -0.704  0.308 -0.686 a          macrophage            #>  9 -0.244    1.50   0.799  0.941 a          macrophage            #> 10 -0.283   -0.303  1.75  -0.164 a          macrophage            #> # ℹ 990 more rows  # using two-column data.frame annotation_data_frame <-     data.frame(         cluster_id = c(\"a\", \"b\"),         cluster_annotation = c(\"macrophage\", \"dendritic cell\")     )  sim_data |>     tof_annotate_clusters(         cluster_col = cluster_id,         annotations = annotation_data_frame     ) #> # A tibble: 1,000 × 6 #>        cd45   cd38   cd34   cd19 cluster_id cluster_annotation #>       <dbl>  <dbl>  <dbl>  <dbl> <chr>      <chr>              #>  1 -1.40    -0.337 -0.166  1.12  a          macrophage         #>  2  0.255   -0.216  0.120  0.400 a          macrophage         #>  3 -2.44     0.621 -0.662 -0.985 a          macrophage         #>  4 -0.00557 -1.28  -0.531 -0.503 a          macrophage         #>  5  0.622   -1.30  -0.301  0.987 a          macrophage         #>  6  1.15    -0.377 -0.602  2.19  a          macrophage         #>  7 -1.82     0.104 -0.318 -0.165 a          macrophage         #>  8 -0.247   -0.704  0.308 -0.686 a          macrophage         #>  9 -0.244    1.50   0.799  0.941 a          macrophage         #> 10 -0.283   -0.303  1.75  -0.164 a          macrophage         #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_apply_classifier.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform developmental clustering on CyTOF data using a pre-fit classifier — tof_apply_classifier","title":"Perform developmental clustering on CyTOF data using a pre-fit classifier — tof_apply_classifier","text":"Perform developmental clustering CyTOF data using pre-fit classifier","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_apply_classifier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform developmental clustering on CyTOF data using a pre-fit classifier — tof_apply_classifier","text":"","code":"tof_apply_classifier(   cancer_tibble = NULL,   classifier_fit = NULL,   distance_function = c(\"mahalanobis\", \"cosine\", \"pearson\"),   num_cores = 1,   parallel_vars )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_apply_classifier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform developmental clustering on CyTOF data using a pre-fit classifier — tof_apply_classifier","text":"cancer_tibble `tibble` `tof_tibble` containing cells classified nearest healthy subpopulation (generally cancer cells). classifier_fit nested `tibble` produced `tof_build_classifier` row represents healthy cell subpopulation cells `cancer_tibble` classified using minimum distance. distance_function string indicating distance function used perform classification. Options \"mahalanobis\" (default), \"cosine\", \"pearson\". num_cores integer indicating number CPU cores used parallelize classification. Defaults 1 (single core). parallel_vars Unquoted column names indicating columns `cancer_tibble` use breaking data order parallelize classification. Defaults NULL. Supports tidyselect helpers.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_apply_classifier.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform developmental clustering on CyTOF data using a pre-fit classifier — tof_apply_classifier","text":"tibble `nrow(cancer_tibble)` rows `nrow(classifier_fit) + 1` columns. row represents cell `cancer_tibble`, `nrow(classifier_fit)` columns represent distance cell healthy subpopulations' cluster centroids. final column represents cluster id healthy subpopulation minimum distance cell represented row.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_apply_classifier.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform developmental clustering on CyTOF data using a pre-fit classifier — tof_apply_classifier","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_channels.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect low-expression (i.e. potentially failed) channels in high-dimensional cytometry data — tof_assess_channels","title":"Detect low-expression (i.e. potentially failed) channels in high-dimensional cytometry data — tof_assess_channels","text":"Detect low-expression (.e. potentially failed) channels high-dimensional cytometry data","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_channels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect low-expression (i.e. potentially failed) channels in high-dimensional cytometry data — tof_assess_channels","text":"","code":"tof_assess_channels(   tof_tibble,   channel_cols = where(tof_is_numeric),   negative_threshold = asinh(10/5),   negative_proportion_flag = 0.95 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_channels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect low-expression (i.e. potentially failed) channels in high-dimensional cytometry data — tof_assess_channels","text":"tof_tibble `tof_tbl` `tibble`. channel_cols vector unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. nothing specified, default analyze numeric columns. negative_threshold scalar indicating threshold measurement considered negative. Defaults hyperbolic arcsine transformation 10 counts. negative_proportion_flag scalar 0 1 indicating proportion cells tof_tibble need `negative_threshold` given marker order marker flagged. Defaults 0.95.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_channels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect low-expression (i.e. potentially failed) channels in high-dimensional cytometry data — tof_assess_channels","text":"tibble 3 columns number rows equal number columns `tof_tibble` chosen `channel_cols`. three columns \"channel\", character vector channel names, \"negative_proportion\", numeric vector values 0 1 indicating many cells `tof_tibble` `negative_threshold` channel, `flagged_channel`, boolean vector indicating whether channel flagged potentially failed (TRUE means channel large number cells `negative_threshold`).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_channels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect low-expression (i.e. potentially failed) channels in high-dimensional cytometry data — tof_assess_channels","text":"","code":"# simulate some data sim_data <-     data.frame(         cd4 = rnorm(n = 100, mean = 5, sd = 0.5),         cd8 = rnorm(n = 100, mean = 0, sd = 0.1),         cd33 = rnorm(n = 100, mean = 10, sd = 0.1)     )  tof_assess_channels(tof_tibble = sim_data) #> # A tibble: 3 × 3 #>   channel negative_proportion flagged_channel #>   <chr>                 <dbl> <lgl>           #> 1 cd8                       1 TRUE            #> 2 cd4                       0 FALSE           #> 3 cd33                      0 FALSE            tof_assess_channels(tof_tibble = sim_data, channel_cols = c(cd4, cd8)) #> # A tibble: 2 × 3 #>   channel negative_proportion flagged_channel #>   <chr>                 <dbl> <lgl>           #> 1 cd8                       1 TRUE            #> 2 cd4                       0 FALSE            tof_assess_channels(tof_tibble = sim_data, negative_threshold = 2) #> # A tibble: 3 × 3 #>   channel negative_proportion flagged_channel #>   <chr>                 <dbl> <lgl>           #> 1 cd8                       1 TRUE            #> 2 cd4                       0 FALSE           #> 3 cd33                      0 FALSE"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_distance.html","id":null,"dir":"Reference","previous_headings":"","what":"Assess a clustering result by calculating the z-score of each cell's\nmahalanobis distance to its cluster centroid and flagging outliers. — tof_assess_clusters_distance","title":"Assess a clustering result by calculating the z-score of each cell's\nmahalanobis distance to its cluster centroid and flagging outliers. — tof_assess_clusters_distance","text":"function evaluates result clustering procedure comparing mahalanobis distance cell centroid cluster assigned among cells given cluster. cells mahalanobis-distance z-score user-specified threshold flagged potentially anomalous. Note z-score calculated using modified formula minimize effect outliers (Z = x - median(x) / mad(x)).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assess a clustering result by calculating the z-score of each cell's\nmahalanobis distance to its cluster centroid and flagging outliers. — tof_assess_clusters_distance","text":"","code":"tof_assess_clusters_distance(   tof_tibble,   cluster_col,   marker_cols = where(tof_is_numeric),   z_threshold = 3,   augment = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_distance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assess a clustering result by calculating the z-score of each cell's\nmahalanobis distance to its cluster centroid and flagging outliers. — tof_assess_clusters_distance","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names indicating column `tof_tibble` interpreted markers used mahalanobis distance calculation. Defaults numeric columns. Supports tidyselection. z_threshold scalar indicating distance z-score threshold cell considered anomalous. Defaults 3. augment boolean value indicating output column-bind computed flags cell (see ) new columns `tof_tibble` (TRUE) tibble including computed flags returned (FALSE, default).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_distance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assess a clustering result by calculating the z-score of each cell's\nmahalanobis distance to its cluster centroid and flagging outliers. — tof_assess_clusters_distance","text":"augment = FALSE (default), tibble 3 columns: \".mahalanobis_distance\" (mahalanobis distance cell centroid tits assigned cluster), \"z_score\" (modified z-score cell's mahalanobis distance relative cells dataset), \"flagged_cell\" (boolean indicating whether cell flagged z-score z_threshold). augment = TRUE, 3 columns column-bound tof_tibble, resulting tibble returned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_distance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assess a clustering result by calculating the z-score of each cell's\nmahalanobis distance to its cluster centroid and flagging outliers. — tof_assess_clusters_distance","text":"","code":"# simulate data sim_data_inner <-     dplyr::tibble(         cd45 = c(rnorm(n = 600), rnorm(n = 500, mean = -4)),         cd38 =             c(                 rnorm(n = 100, sd = 0.5),                 rnorm(n = 500, mean = -3),                 rnorm(n = 500, mean = 8)             ),         cd34 =             c(                 rnorm(n = 100, sd = 0.2, mean = -10),                 rnorm(n = 500, mean = 4),                 rnorm(n = 500, mean = 60)             ),         cd19 = c(rnorm(n = 100, sd = 0.3, mean = 10), rnorm(n = 1000)),         cluster_id = c(rep(\"a\", 100), rep(\"b\", 500), rep(\"c\", 500)),         dataset = \"inner\"     )  sim_data_outer <-     dplyr::tibble(         cd45 = c(rnorm(n = 10), rnorm(50, mean = 3), rnorm(n = 50, mean = -12)),         cd38 =             c(                 rnorm(n = 10, sd = 0.5),                 rnorm(n = 50, mean = -10),                 rnorm(n = 50, mean = 10)             ),         cd34 =             c(                 rnorm(n = 10, sd = 0.2, mean = -15),                 rnorm(n = 50, mean = 15),                 rnorm(n = 50, mean = 70)             ),         cd19 = c(rnorm(n = 10, sd = 0.3, mean = 19), rnorm(n = 100)),         cluster_id = c(rep(\"a\", 10), rep(\"b\", 50), rep(\"c\", 50)),         dataset = \"outer\"     )  sim_data <- rbind(sim_data_inner, sim_data_outer)  # detect anomalous cells (in this case, the \"outer\" dataset contains small # clusters that get lumped into the larger clusters in the \"inner\" dataset) z_result <-     sim_data |>     tof_assess_clusters_distance(cluster_col = cluster_id, z_threshold = 2.5)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_entropy.html","id":null,"dir":"Reference","previous_headings":"","what":"Assess a clustering result by calculating the shannon entropy of each cell's\nmahalanobis distance to all cluster centroids and flagging outliers. — tof_assess_clusters_entropy","title":"Assess a clustering result by calculating the shannon entropy of each cell's\nmahalanobis distance to all cluster centroids and flagging outliers. — tof_assess_clusters_entropy","text":"function evaluates result clustering procedure calculating mahalanobis distance cell centroids clusters dataset finding shannon entropy resulting vector distances. cells entropy threshold user-specified threshold flagged potentially anomalous. Entropy minimized (0) cell close one (small number) clusters, far rest . cell close multiple cluster centroids (.e. ambiguous phenotype), entropy large.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_entropy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assess a clustering result by calculating the shannon entropy of each cell's\nmahalanobis distance to all cluster centroids and flagging outliers. — tof_assess_clusters_entropy","text":"","code":"tof_assess_clusters_entropy(   tof_tibble,   cluster_col,   marker_cols = where(tof_is_numeric),   entropy_threshold,   entropy_quantile = 0.9,   num_closest_clusters,   augment = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_entropy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assess a clustering result by calculating the shannon entropy of each cell's\nmahalanobis distance to all cluster centroids and flagging outliers. — tof_assess_clusters_entropy","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names indicating column `tof_tibble` interpreted markers used mahalanobis distance calculation. Defaults numeric columns. Supports tidyselection. entropy_threshold scalar indicating entropy threshold cell considered anomalous. unspecified, threshold computed using `entropy_quantile` (see ). (Note: Entropy often 0 1, can larger many classes/clusters). entropy_quantile scalar 0 1 indicating entropy quantile cell considered anomalous. Defaults 0.9, means cells entropy 90th percentile flagged. Ignored entropy_threshold specified directly. num_closest_clusters integer indicating many cell's closest cluster centroids mahalanobis distance included entropy calculation. Playing argument allow ignore distances clusters far away cell (thus may distort result, many distant centroids large distances can artificially inflate cells' entropy value; said, rarely issue empirically). Defaults clusters tof_tibble. augment boolean value indicating output column-bind computed flags cell (see ) new columns `tof_tibble` (TRUE) tibble including computed flags returned (FALSE, default).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_entropy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assess a clustering result by calculating the shannon entropy of each cell's\nmahalanobis distance to all cluster centroids and flagging outliers. — tof_assess_clusters_entropy","text":"augment = FALSE (default), tibble 2 + NUM_CLUSTERS columns. NUM_CLUSTERS number unique clusters cluster_col. Two columns \"entropy\" (entropy value cell) \"flagged_cell\" (boolean value indicating cell entropy value entropy_threshold). NUM_CLUSTERS columns contain mahalanobis distances cell clusters cluster_col (named \".mahalanobis_cluster_name\"). augment = TRUE, 2 + NUM_CLUSTERS columns column-bound tof_tibble, resulting tibble returned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_entropy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assess a clustering result by calculating the shannon entropy of each cell's\nmahalanobis distance to all cluster centroids and flagging outliers. — tof_assess_clusters_entropy","text":"","code":"# simulate data sim_data <-     dplyr::tibble(         cd45 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cd38 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cd34 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cd19 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cluster_id = c(rep(\"a\", 1000), rep(\"b\", 1000), rep(\"c\", 1000))     )  # imagine a \"reference\" dataset in which \"cluster a\" isn't present sim_data_reference <-     sim_data |>     dplyr::filter(cluster_id %in% c(\"b\", \"c\"))  # if we cluster into the reference dataset, we will force all cells in # cluster a into a population where they don't fit very well sim_data <-     sim_data |>     tof_cluster(         healthy_tibble = sim_data_reference,         healthy_label_col = cluster_id,         method = \"ddpr\"     )  # we can evaluate the clustering quality by calculating by the entropy of the # mahalanobis distance vector for each cell to all cluster centroids entropy_result <-     sim_data |>     tof_assess_clusters_entropy(         cluster_col = .mahalanobis_cluster,         marker_cols = starts_with(\"cd\"),         entropy_quantile = 0.8,         augment = TRUE     )  # most cells in \"cluster a\" are flagged, and few cells in the other clusters are flagged_cluster_proportions <-     entropy_result |>     dplyr::group_by(cluster_id) |>     dplyr::summarize(         prop_flagged = mean(flagged_cell)     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_knn.html","id":null,"dir":"Reference","previous_headings":"","what":"Assess a clustering result by calculating a cell's cluster assignment to that\nof its K nearest neighbors. — tof_assess_clusters_knn","title":"Assess a clustering result by calculating a cell's cluster assignment to that\nof its K nearest neighbors. — tof_assess_clusters_knn","text":"function evaluates result clustering procedure finding cell's K nearest neighbors, determining cluster majority assigned , checking matches cell's cluster assignment. cluster assignment majority cell's nearest neighbors match cell's cluster assignment, cell flagged potentially anomalous.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_knn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assess a clustering result by calculating a cell's cluster assignment to that\nof its K nearest neighbors. — tof_assess_clusters_knn","text":"","code":"tof_assess_clusters_knn(   tof_tibble,   cluster_col,   marker_cols = where(tof_is_numeric),   num_neighbors = min(10, nrow(tof_tibble)),   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\"),   augment = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_knn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assess a clustering result by calculating a cell's cluster assignment to that\nof its K nearest neighbors. — tof_assess_clusters_knn","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names indicating column `tof_tibble` interpreted markers used mahalanobis distance calculation. Defaults numeric columns. Supports tidyselection. num_neighbors integer indicating many neighbors found nearest neighbor calculation. distance_function string indicating distance function used perform k nearest neighbor calculation.  Options \"euclidean\" (default) \"cosine\". augment boolean value indicating output column-bind computed flags cell (see ) new columns `tof_tibble` (TRUE) tibble including computed flags returned (FALSE, default).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_knn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assess a clustering result by calculating a cell's cluster assignment to that\nof its K nearest neighbors. — tof_assess_clusters_knn","text":"augment = FALSE (default), tibble 2 columns: \".knn_cluster\" (character vector indicating cluster received majority vote cell's k nearest neighbors) \"flagged_cell\" (boolean value indicating cell's cluster assignment matched majority vote (TRUE) (FALSE)). augment = TRUE, 2 columns column-bound tof_tibble, resulting tibble returned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_knn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assess a clustering result by calculating a cell's cluster assignment to that\nof its K nearest neighbors. — tof_assess_clusters_knn","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cd38 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cd34 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cd19 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cluster_id = c(rep(\"a\", 1000), rep(\"b\", 1000), rep(\"c\", 1000))     )  knn_result <-     sim_data |>     tof_assess_clusters_knn(         cluster_col = cluster_id,         num_neighbors = 10     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect flow rate abnormalities in high-dimensional cytometry data — tof_assess_flow_rate","title":"Detect flow rate abnormalities in high-dimensional cytometry data — tof_assess_flow_rate","text":"function performs simplified version flowAI's statistical test detect time periods abnormal flow rates course flow cytometry experiment. Briefly, relative flow rates timestep throughout data acquisition calculated (see tof_calculate_flow_rate), outlier timepoints particularly high low flow rates (.e. beyond extreme values t-distribution across timesteps) flagged.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect flow rate abnormalities in high-dimensional cytometry data — tof_assess_flow_rate","text":"","code":"tof_assess_flow_rate(   tof_tibble,   time_col,   group_cols,   num_timesteps = nrow(tof_tibble)/1000,   alpha_threshold = 0.01,   visualize = FALSE,   ...,   augment = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect flow rate abnormalities in high-dimensional cytometry data — tof_assess_flow_rate","text":"tof_tibble `tof_tbl` `tibble`. time_col unquoted column name indicating column `tof_tibble` contains time cell collected. group_cols Optional. Unquoted column names indicating columns used group cells analysis. Flow rate calculation performed independently within group. Supports tidyselect helpers. num_timesteps number bins `time_col` split. define \"timesteps\" data collection process. number cells analyzed cytometer counted bin separately represent relative average flow rate timestep data collection. alpha_threshold scalar 0 1 indicating two-tailed significance level draw outlier thresholds t-distribution `num_timesteps` - 1 degrees freedom. Defaults 0.01. visualize boolean value indicating plot generated visualize timestep's relative flow rate (group) instead returning tibble directly. Defaults FALSE. ... Optional additional arguments pass facet_wrap. Ignored visualize = FALSE. augment boolean value indicating output column-bind computed flags cell (see ) new columns `tof_tibble` (TRUE) tibble including computed flags returned (FALSE, default).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect flow rate abnormalities in high-dimensional cytometry data — tof_assess_flow_rate","text":"tibble number rows `tof_tibble`. augment = FALSE (default), 3 columns: \"time_col\" (column `time_col`), \"timestep\" (numeric timestep cell assigned based value `time_col`), \"flagged_window\" (boolean vector indicating cell collecting timestep flagged high low flow rate). augment = TRUE, 3 columns column-bound `tof_tibble` return augmented version input dataset. (Note case, time_col duplicated). visualize = TRUE, ggplot object returned instead tibble.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect flow rate abnormalities in high-dimensional cytometry data — tof_assess_flow_rate","text":"","code":"set.seed(1000L) sim_data <-     data.frame(         cd4 = rnorm(n = 1000, mean = 5, sd = 0.5),         cd8 = rnorm(n = 1000, mean = 0, sd = 0.1),         cd33 = rnorm(n = 1000, mean = 10, sd = 0.1),         file_name = c(rep(\"a\", times = 500), rep(\"b\", times = 500)),         time =             c(                 sample(1:100, size = 200, replace = TRUE),                 sample(100:400, size = 300, replace = TRUE),                 sample(1:150, size = 400, replace = TRUE),                 sample(1:500, size = 100, replace = TRUE)             )     )  sim_data |>     tof_assess_flow_rate(         time_col = time,         num_timesteps = 20,         visualize = TRUE     )   sim_data |>     tof_assess_flow_rate(         time_col = time,         group_cols = file_name,         num_timesteps = 20,         visualize = TRUE     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect flow rate abnormalities in high-dimensional cytometry data (stored in a\nsingle data.frame) — tof_assess_flow_rate_tibble","title":"Detect flow rate abnormalities in high-dimensional cytometry data (stored in a\nsingle data.frame) — tof_assess_flow_rate_tibble","text":"function performs simplified version flowAI's statistical test detect time periods abnormal flow rates course flow cytometry experiment. Briefly, relative flow rates timestep throughout data acquisition calculated (see tof_calculate_flow_rate), outlier timepoints particularly high low flow rates (.e. beyond extreme values t-distribution across timesteps) flagged.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect flow rate abnormalities in high-dimensional cytometry data (stored in a\nsingle data.frame) — tof_assess_flow_rate_tibble","text":"","code":"tof_assess_flow_rate_tibble(   tof_tibble,   time_col,   num_timesteps = nrow(tof_tibble)/1000,   alpha_threshold = 0.01,   augment = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect flow rate abnormalities in high-dimensional cytometry data (stored in a\nsingle data.frame) — tof_assess_flow_rate_tibble","text":"tof_tibble `tof_tbl` `tibble`. time_col unquoted column name indicating column `tof_tibble` contains time cell collected. num_timesteps number bins `time_col` split. define \"timesteps\" data collection process. number cells analyzed cytometer counted bin separately represent relative average flow rate timestep data collection. alpha_threshold scalar 0 1 indicating two-tailed significance level draw outlier thresholds t-distribution `num_timesteps` - 1 degrees freedom. Defaults 0.01. augment boolean value indicating output column-bind computed flags cell (see ) new columns `tof_tibble` (TRUE) tibble including computed flags returned (FALSE, default).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate_tibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect flow rate abnormalities in high-dimensional cytometry data (stored in a\nsingle data.frame) — tof_assess_flow_rate_tibble","text":"tibble number rows `tof_tibble`. augment = FALSE (default), 3 columns: \"time_col\" (column `time_col`), \"timestep\" (numeric timestep cell assigned based value `time_col`), \"flagged_window\" (boolean vector indicating cell collecting timestep flagged high low flow rate). augment = TRUE, 3 columns column-bound `tof_tibble` return augmented version input dataset. (Note case, time_col duplicated).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate_tibble.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect flow rate abnormalities in high-dimensional cytometry data (stored in a\nsingle data.frame) — tof_assess_flow_rate_tibble","text":"","code":"set.seed(1000L) sim_data <-     data.frame(         cd4 = rnorm(n = 1000, mean = 5, sd = 0.5),         cd8 = rnorm(n = 1000, mean = 0, sd = 0.1),         cd33 = rnorm(n = 1000, mean = 10, sd = 0.1),         time =             c(                 sample(1:100, size = 200, replace = TRUE),                 sample(100:400, size = 300, replace = TRUE),                 sample(1:150, size = 400, replace = TRUE),                 sample(1:500, size = 100, replace = TRUE)             )     )  sim_data |>     tof_assess_flow_rate(         time_col = time,         num_timesteps = 20,         visualize = TRUE     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Assess a trained elastic net model — tof_assess_model","title":"Assess a trained elastic net model — tof_assess_model","text":"function assesses trained `tof_model`'s performance new data computing model type-specific performance measurements. new data provided, performance metrics training data provided.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assess a trained elastic net model — tof_assess_model","text":"","code":"tof_assess_model(tof_model, new_data)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assess a trained elastic net model — tof_assess_model","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations used evaluate `tof_model`'s performance. new_data provided, model evaluation performed using training data used fit model. Alternatively, string \"tuning\" can provided access model's performance metrics (resampled) model tuning process.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assess a trained elastic net model — tof_assess_model","text":"list performance metrics whose components depend model type: \"model_metrics\" tibble two columns (\"metric\" \"value\") containing standard performance metrics model type. linear models, \"mse\" (mean squared error predictions) \"mae\" (mean absolute error predictions). two-class models, \"roc_auc\" (area Receiver-Operating Curve classification), \"misclassification error\" (proportion misclassified observations), \"binomial_deviance\" (see deviance.glmnet), \"mse\" (mean squared error logit function), \"mae\" (mean absolute error logit function). multiclass models, \"roc_auc\" (area Receiver-Operating Curve classification using Hand-Till generalization ROC AUC multiclass models roc_auc), \"misclassification error\" (proportion misclassified observations), \"multinomial_deviance\" (see deviance.glmnet), \"mse\" \"mae\" . survival models, \"concordance_index\" (Harrel's C index; see deviance.glmnet) \"partial_likelihood_deviance\" (see deviance.glmnet). \"roc_curve\" Reported \"two-class\" \"multiclass\" models. ,  tibble provided reporting true-positive rate (tpr) false-positive  rate (fpr) threshold classification use plotting  receiver-operating curve. \"multiclass\" models, \".level\" column  allows separating values roc_curve one ROC can plotted  class. \"confusion_matrix\" Reported \"two-class\" \"multiclass\" models. , tibble provided reporting \"confusion matrix\" classification long-format. \"survival_curves\" Reported \"survival\" models. tibble indicating patient's probability survival (1 - probability(event)) timepoint dataset whether sample placed \"high\" \"low\" risk group according predicted relative risk (tof_model's optimal relative_risk cutoff training dataset).","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assess a trained elastic net model — tof_assess_model","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100)     )  new_tibble <-     dplyr::tibble(         sample = as.character(1:20),         cd45 = runif(n = 20),         pstat5 = runif(n = 20),         cd34 = runif(n = 20),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(20)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  # assess the model on new data tof_assess_model(tof_model = regression_model, new_data = new_tibble) #> $model_metrics #> # A tibble: 2 × 2 #>   metric value #>   <chr>  <dbl> #> 1 mse    0.795 #> 2 mae    0.788 #>"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_new_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute a trained elastic net model's performance metrics using new_data. — tof_assess_model_new_data","title":"Compute a trained elastic net model's performance metrics using new_data. — tof_assess_model_new_data","text":"Compute trained elastic net model's performance metrics using new_data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_new_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute a trained elastic net model's performance metrics using new_data. — tof_assess_model_new_data","text":"","code":"tof_assess_model_new_data(tof_model, new_data)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_new_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute a trained elastic net model's performance metrics using new_data. — tof_assess_model_new_data","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations used evaluate `tof_model`'s performance.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_new_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute a trained elastic net model's performance metrics using new_data. — tof_assess_model_new_data","text":"list performance metrics whose components depend model type.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_tuning.html","id":null,"dir":"Reference","previous_headings":"","what":"Access a trained elastic net model's performance metrics using its tuning data. — tof_assess_model_tuning","title":"Access a trained elastic net model's performance metrics using its tuning data. — tof_assess_model_tuning","text":"Access trained elastic net model's performance metrics using tuning data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_tuning.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Access a trained elastic net model's performance metrics using its tuning data. — tof_assess_model_tuning","text":"","code":"tof_assess_model_tuning(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_tuning.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Access a trained elastic net model's performance metrics using its tuning data. — tof_assess_model_tuning","text":"tof_model `tof_model` trained using tof_train_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_tuning.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Access a trained elastic net model's performance metrics using its tuning data. — tof_assess_model_tuning","text":"list performance metrics whose components depend model type.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct","text":"function performs quantile normalization high-dimensional cytometry data tidy format using either linear rescaling quantile normalization. channel specified `channel_cols` batch corrected, `group_cols` can used break cells groups batch correction performed separately.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct","text":"","code":"tof_batch_correct(   tof_tibble,   channel_cols,   group_cols,   augment = TRUE,   method = c(\"rescale\", \"quantile\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct","text":"tof_tibble `tof_tbl` `tibble`. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. group_cols Optional. Unquoted column names indicating columns used group cells batch correction. Batch correction performed independently within group. Supports tidyselect helpers. augment boolean value indicating output replace `channel_cols` `tof_tibble` new, batch corrected columns (TRUE, default) return batch-corrected columns (FALSE) columns omitted. method string indicating batch correction method used. Valid options \"rescale\" linear scaling (default) \"quantile\" quantile normalization using normalize.quantiles.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct","text":"augment = TRUE, tibble number rows columns tof_tibble, columns specified `channel_cols` batch-corrected. augment = FALSE, tibble containing batch-corrected `channel_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile.html","id":null,"dir":"Reference","previous_headings":"","what":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile","text":"function performs quantile normalization high-dimensional cytometry data tidy format using normalize.quantiles. Optionally, groups can specified normalized separately.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile","text":"","code":"tof_batch_correct_quantile(   tof_tibble,   channel_cols,   group_cols,   augment = TRUE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile","text":"tof_tibble `tof_tbl` `tibble`. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. group_cols Optional. Unquoted column names indicating columns used group cells batch correction. Batch correction performed independently within group. Supports tidyselect helpers. augment boolean value indicating output replace `channel_cols` `tof_tibble` new, batch corrected columns (TRUE, default) return batch-corrected columns (FALSE) columns omitted.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile","text":"augment = TRUE, tibble number rows columns tof_tibble, columns specified `channel_cols` batch-corrected. augment = FALSE, tibble containing batch-corrected `channel_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile_tibble","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile_tibble","text":"function performs quantile normalization high-dimensional cytometry data tidy format using normalize.quantiles.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile_tibble","text":"","code":"tof_batch_correct_quantile_tibble(tof_tibble, channel_cols, augment = TRUE)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile_tibble","text":"tof_tibble `tof_tbl` `tibble`. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. augment boolean value indicating output replace `channel_cols` `tof_tibble` new, batch corrected columns (TRUE, default) return batch-corrected columns (FALSE) columns omitted.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile_tibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile_tibble","text":"augment = TRUE, tibble number rows columns tof_tibble, columns specified `channel_cols` batch-corrected. augment = FALSE, tibble containing batch-corrected `channel_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile_tibble.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile_tibble","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_rescale.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct_rescale","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct_rescale","text":"function performs quantile normalization high-dimensional cytometry data tidy format using linear rescaling. channel specified `channel_cols` rescaled maximum value 1 minimum value 0. `group_cols` specifies columns used break cells groups rescaling performed separately.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_rescale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct_rescale","text":"","code":"tof_batch_correct_rescale(tof_tibble, channel_cols, group_cols, augment = TRUE)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_rescale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct_rescale","text":"tof_tibble `tof_tbl` `tibble`. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. group_cols Optional. Unquoted column names indicating columns used group cells batch correction. Batch correction performed independently within group. Supports tidyselect helpers. augment boolean value indicating output replace `channel_cols` `tof_tibble` new, batch corrected columns (TRUE, default) return batch-corrected columns (FALSE) columns omitted.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_rescale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct_rescale","text":"augment = TRUE, tibble number rows columns tof_tibble, columns specified `channel_cols` batch-corrected. augment = FALSE, tibble containing batch-corrected `channel_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_rescale.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct_rescale","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_build_classifier.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate centroids and covariance matrices for each cell subpopulation in\nhealthy CyTOF data. — tof_build_classifier","title":"Calculate centroids and covariance matrices for each cell subpopulation in\nhealthy CyTOF data. — tof_build_classifier","text":"function takes `tibble` `tof_tibble` storing healthy cell measurements rows vector (`healthy_cell_labels`) representing cell subpopulation cell belongs. uses values calculate several values required perform \"developmental classification\" described paper.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_build_classifier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate centroids and covariance matrices for each cell subpopulation in\nhealthy CyTOF data. — tof_build_classifier","text":"","code":"tof_build_classifier(   healthy_tibble = NULL,   healthy_cell_labels = NULL,   classifier_markers = where(tof_is_numeric),   verbose = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_build_classifier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate centroids and covariance matrices for each cell subpopulation in\nhealthy CyTOF data. — tof_build_classifier","text":"healthy_tibble `tibble` `tof_tibble` containing cells healthy control samples (.e. disease samples). healthy_cell_labels character integer vector length `nrow(healthy_tibble)`. entry vector represent cell subpopulation label (cluster id) corresponding row `healthy_tibble`. classifier_markers Unquoted column names indicating columns `healthy_tibble` use developmental classification. Defaults numeric columns `healthy_tibble`. Supports tidyselect helpers. verbose boolean value indicating updates printed console classification. Defaults FALSE.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_build_classifier.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate centroids and covariance matrices for each cell subpopulation in\nhealthy CyTOF data. — tof_build_classifier","text":"tibble three columns: population (id healthy cell population), centroid (centroid vector cell population), covariance_matrix (covariance matrix cell population)","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_calculate_flow_rate.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the relative flow rates of different timepoints throughout a flow\nor mass cytometry run. — tof_calculate_flow_rate","title":"Calculate the relative flow rates of different timepoints throughout a flow\nor mass cytometry run. — tof_calculate_flow_rate","text":"Calculate relative flow rates different timepoints throughout flow mass cytometry run.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_calculate_flow_rate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the relative flow rates of different timepoints throughout a flow\nor mass cytometry run. — tof_calculate_flow_rate","text":"","code":"tof_calculate_flow_rate(   tof_tibble,   time_col,   num_timesteps = nrow(tof_tibble)/1000 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_calculate_flow_rate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the relative flow rates of different timepoints throughout a flow\nor mass cytometry run. — tof_calculate_flow_rate","text":"tof_tibble `tof_tbl` `tibble`. time_col unquoted column name indicating column `tof_tibble` contains time cell collected. num_timesteps number bins `time_col` split. define \"timesteps\" data collection process. number cells analyzed cytometer counted bin separately represent relative average flow rate timestep data collection.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_calculate_flow_rate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the relative flow rates of different timepoints throughout a flow\nor mass cytometry run. — tof_calculate_flow_rate","text":"tibble 3 columns num_timesteps rows. row represent single timestep (error thrown `num_timesteps` larger number rows `tof_tibble`). three columns follows: \"timestep\", numeric vector indicating timestep represented given row; \"time_window\", factor showing interval `time_col` \"timestep\" defined; \"num_cells\", number cells collected timestep.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_calculate_flow_rate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the relative flow rates of different timepoints throughout a flow\nor mass cytometry run. — tof_calculate_flow_rate","text":"","code":"# simulate some data sim_data <-     data.frame(         cd4 = rnorm(n = 100, mean = 5, sd = 0.5),         cd8 = rnorm(n = 100, mean = 0, sd = 0.1),         cd33 = rnorm(n = 100, mean = 10, sd = 0.1),         time = sample(1:300, size = 100)     )  tof_calculate_flow_rate(tof_tibble = sim_data, time_col = time, num_timesteps = 20L) #>    timestep time_window num_cells #> 1         1 (6.71,21.6]         4 #> 2         2 (21.6,36.2]         6 #> 3         3 (36.2,50.8]         7 #> 4         4 (50.8,65.4]         7 #> 5         5   (65.4,80]         5 #> 6         6   (80,94.6]         4 #> 7         7  (94.6,109]         5 #> 8         8   (109,124]         4 #> 9         9   (124,138]         1 #> 10       10   (138,153]         7 #> 11       11   (153,168]         5 #> 12       12   (168,182]         2 #> 13       13   (182,197]         7 #> 14       14   (197,211]         7 #> 15       15   (211,226]         5 #> 16       16   (226,241]         2 #> 17       17   (241,255]         4 #> 18       18   (255,270]         5 #> 19       19   (270,284]         7 #> 20       20   (284,299]         6"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_check_model_args.html","id":null,"dir":"Reference","previous_headings":"","what":"Check argument specifications for a glmnet model. — tof_check_model_args","title":"Check argument specifications for a glmnet model. — tof_check_model_args","text":"Check argument specifications glmnet model.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_check_model_args.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check argument specifications for a glmnet model. — tof_check_model_args","text":"","code":"tof_check_model_args(   split_data,   model_type = c(\"linear\", \"two-class\", \"multiclass\", \"survival\"),   best_model_type = c(\"best\", \"best with sparsity\"),   response_col,   time_col,   event_col )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_check_model_args.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check argument specifications for a glmnet model. — tof_check_model_args","text":"split_data `rsplit` `rset` object rsample package containing sample-level data use modeling. Alternatively, unsplit tbl_df can provided, though recommended. model_type string indicating kind elastic net model build. continuous response predicted, use \"linear\" linear regression; categorical response 2 classes predicted, use \"two-class\" logistic regression; categorical response 2 levels predicted, use \"multiclass\" multinomial regression; time--event outcome predicted, use \"survival\" Cox regression. best_model_type Currently unused. response_col Unquoted column name indicating column data contained `split_data` used outcome \"two-class\", \"multiclass\", \"linear\" elastic net model. Must factor \"two-class\" \"multiclass\" models must numeric \"linear\" models. Ignored `model_type` \"survival\". time_col Unquoted column name indicating column data contained `split_data` represents time--event outcome \"survival\" elastic net model. Must numeric. Ignored `model_type` \"two-class\", \"multiclass\", \"linear\". event_col Unquoted column name indicating column data contained `split_data` represents time--event outcome \"survival\" elastic net model. Must binary column - values either 0 1 (1 indicating adverse event) FALSE TRUE (TRUE indicating adverse event). Ignored `model_type` \"two-class\", \"multiclass\", \"linear\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_check_model_args.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check argument specifications for a glmnet model. — tof_check_model_args","text":"tibble. arguments specified correctly, tibble can used create recipe preprocessing.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_classify_cells.html","id":null,"dir":"Reference","previous_headings":"","what":"Classify each cell (i.e. each row) in a matrix of cancer cells into its most\nsimilar healthy developmental subpopulation. — tof_classify_cells","title":"Classify each cell (i.e. each row) in a matrix of cancer cells into its most\nsimilar healthy developmental subpopulation. — tof_classify_cells","text":"function uses specified distance metric classify cell data.frame matrix (`cancer_data`) one `nrow(classifier_fit)` subpopulations based minimum distance, described paper.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_classify_cells.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Classify each cell (i.e. each row) in a matrix of cancer cells into its most\nsimilar healthy developmental subpopulation. — tof_classify_cells","text":"","code":"tof_classify_cells(   classifier_fit,   cancer_data,   distance_function = c(\"mahalanobis\", \"cosine\", \"pearson\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_classify_cells.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Classify each cell (i.e. each row) in a matrix of cancer cells into its most\nsimilar healthy developmental subpopulation. — tof_classify_cells","text":"classifier_fit tibble produced tof_build_classifier. cancer_data matrix row corresponds cell column corresponds measured CyTOF antigen. distance_function string indicating three distance functions used calculate distances row `cancer_data` healthy developmental subpopulations corresponding row `classifier_fit`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_classify_cells.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Classify each cell (i.e. each row) in a matrix of cancer cells into its most\nsimilar healthy developmental subpopulation. — tof_classify_cells","text":"data.frame column represents distance cell input data healthy subpopulation cells classified .","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_clean_metric_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename glmnet's default model evaluation metrics to make them more interpretable — tof_clean_metric_names","title":"Rename glmnet's default model evaluation metrics to make them more interpretable — tof_clean_metric_names","text":"Rename glmnet's default model evaluation metrics make interpretable","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_clean_metric_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename glmnet's default model evaluation metrics to make them more interpretable — tof_clean_metric_names","text":"","code":"tof_clean_metric_names(metric_tibble, model_type)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_clean_metric_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename glmnet's default model evaluation metrics to make them more interpretable — tof_clean_metric_names","text":"metric_tibble tibble column represents glmnet model evaluation metric default name. model_type string indicating type glmnet model trained.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_clean_metric_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename glmnet's default model evaluation metrics to make them more interpretable — tof_clean_metric_names","text":"tibble column represents glmnet model evaluation metric \"cleaned\" name.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster high-dimensional cytometry data. — tof_cluster","title":"Cluster high-dimensional cytometry data. — tof_cluster","text":"function wrapper around tidytof's tof_cluster_* function family. performs clustering high-dimensional cytometry data using user-specified method (5 choices) method's corresponding input parameters.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster high-dimensional cytometry data. — tof_cluster","text":"","code":"tof_cluster(   tof_tibble,   cluster_cols = where(tof_is_numeric),   group_cols = NULL,   ...,   augment = TRUE,   method )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster high-dimensional cytometry data. — tof_cluster","text":"tof_tibble `tof_tbl` `tibble`. cluster_cols Unquoted column names indicating columns `tof_tibble` use computing clusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. group_cols Optional. Unquoted column names indicating columns used group cells clustering. Clustering performed group independently. Supports tidyselect helpers. ... Additional arguments pass `tof_cluster_*` function family member corresponding chosen method. augment boolean value indicating output column-bind cluster ids cell new column `tof_tibble` (TRUE, default) single-column tibble including cluster ids returned (FALSE). method string indicating clustering methods used. Valid values include \"flowsom\", \"phenograph\", \"kmeans\", \"ddpr\", \"xshift\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cluster high-dimensional cytometry data. — tof_cluster","text":"`tof_tbl` `tibble` augment = FALSE, single column encoding cluster ids cell `tof_tibble`. augment = TRUE, ncol(tof_tibble) + 1 columns: (unaltered) columns `tof_tibble` plus additional column encoding cluster ids.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cluster high-dimensional cytometry data. — tof_cluster","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 500),         cd38 = rnorm(n = 500),         cd34 = rnorm(n = 500),         cd19 = rnorm(n = 500)     )  tof_cluster(tof_tibble = sim_data, method = \"kmeans\") #> # A tibble: 500 × 5 #>      cd45   cd38   cd34   cd19 .kmeans_cluster #>     <dbl>  <dbl>  <dbl>  <dbl> <chr>           #>  1  1.33  -0.447  1.50   0.436 11              #>  2 -1.20  -0.481 -0.391 -1.54  9               #>  3 -0.541  0.666 -1.68  -0.986 16              #>  4 -1.22   1.32   0.689 -0.791 10              #>  5  0.639  0.519 -1.32  -0.204 18              #>  6 -0.239  0.397 -0.780  0.372 1               #>  7  0.651  0.997 -0.665  0.805 18              #>  8  0.788  1.26   0.584 -0.953 19              #>  9 -0.344  0.388 -0.407 -0.442 13              #> 10  0.120  0.885 -2.26   0.583 17              #> # ℹ 490 more rows tof_cluster(tof_tibble = sim_data, method = \"phenograph\") #> # A tibble: 500 × 5 #>      cd45   cd38   cd34   cd19 .phenograph_cluster #>     <dbl>  <dbl>  <dbl>  <dbl> <chr>               #>  1  1.33  -0.447  1.50   0.436 2                   #>  2 -1.20  -0.481 -0.391 -1.54  1                   #>  3 -0.541  0.666 -1.68  -0.986 1                   #>  4 -1.22   1.32   0.689 -0.791 3                   #>  5  0.639  0.519 -1.32  -0.204 5                   #>  6 -0.239  0.397 -0.780  0.372 5                   #>  7  0.651  0.997 -0.665  0.805 4                   #>  8  0.788  1.26   0.584 -0.953 8                   #>  9 -0.344  0.388 -0.407 -0.442 1                   #> 10  0.120  0.885 -2.26   0.583 5                   #> # ℹ 490 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_ddpr.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform developmental clustering on high-dimensional cytometry data. — tof_cluster_ddpr","title":"Perform developmental clustering on high-dimensional cytometry data. — tof_cluster_ddpr","text":"function performs distance-based clustering high-dimensional cytometry data sorting cancer cells (passed function `tof_tibble`) phenotypically similar healthy cell subpopulation (passed function using `healthy_tibble`). details algorithm used perform clustering, see paper.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_ddpr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform developmental clustering on high-dimensional cytometry data. — tof_cluster_ddpr","text":"","code":"tof_cluster_ddpr(   tof_tibble,   healthy_tibble,   healthy_label_col,   cluster_cols = where(tof_is_numeric),   distance_function = c(\"mahalanobis\", \"cosine\", \"pearson\"),   num_cores = 1L,   parallel_cols,   return_distances = FALSE,   verbose = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_ddpr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform developmental clustering on high-dimensional cytometry data. — tof_cluster_ddpr","text":"tof_tibble `tibble` `tof_tbl` containing cells classified nearest healthy subpopulation (generally cancer cells). healthy_tibble `tibble` `tof_tibble` containing cells healthy control samples (.e. disease samples). healthy_label_col unquoted column name indicating column `healthy_tibble` contains subpopulation label (cluster id) cell `healthy_tibble`. cluster_cols Unquoted column names indicating columns `tof_tibble` use computing DDPR clusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. distance_function string indicating distance function used perform classification. Options \"mahalanobis\" (default), \"cosine\", \"pearson\". num_cores integer indicating number CPU cores used parallelize classification. Defaults 1 (single core). parallel_cols Optional. Unquoted column names indicating columns `tof_tibble` use breaking data order parallelize classification using `foreach` `doParallel` backend. Supports tidyselect helpers. return_distances boolean value indicating whether returned result include one column, cluster ids corresponding row `tof_tibble` (return_distances = FALSE, default), returned result include additional columns representing distance row `tof_tibble` healthy subpopulation centroids (return_distances = TRUE). verbose boolean value indicating whether progress updates printed developmental classification. Default FALSE.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_ddpr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform developmental clustering on high-dimensional cytometry data. — tof_cluster_ddpr","text":"`return_distances = FALSE`, tibble one column named `.distance_function_cluster`, character vector length `nrow(tof_tibble)` indicating id developmental cluster cell (.e. row) `tof_tibble` assigned. `return_distances = TRUE`, tibble `nrow(tof_tibble)` rows `nrow(classifier_fit) + 1` columns. row represents cell `tof_tibble`, `nrow(classifier_fit)` columns represent distance cell healthy subpopulations' cluster centroids. final column represents cluster id healthy subpopulation minimum distance cell represented row. `return_distances = FALSE`, tibble one column named `.distance_function_cluster`. column contain integer vector length `nrow(tof_tibble)` indicating id developmental cluster cell (.e. row) `tof_tibble` assigned.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_ddpr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform developmental clustering on high-dimensional cytometry data. — tof_cluster_ddpr","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  healthy_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200),         cluster_id = c(rep(\"a\", times = 100), rep(\"b\", times = 100))     )  tof_cluster_ddpr(     tof_tibble = sim_data,     healthy_tibble = healthy_data,     healthy_label_col = cluster_id ) #> # A tibble: 1,000 × 1 #>    .mahalanobis_cluster #>    <chr>                #>  1 b                    #>  2 b                    #>  3 b                    #>  4 a                    #>  5 b                    #>  6 b                    #>  7 b                    #>  8 a                    #>  9 a                    #> 10 b                    #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_flowsom.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","title":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","text":"function performs FlowSOM clustering high-dimensional cytometry data using user-specified selection input variables/high-dimensional cytometry measurements. mostly convenient wrapper around SOM MetaClustering.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_flowsom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","text":"","code":"tof_cluster_flowsom(   tof_tibble = NULL,   cluster_cols = where(tof_is_numeric),   som_xdim = 10,   som_ydim = 10,   som_distance_function = c(\"euclidean\", \"manhattan\", \"chebyshev\", \"cosine\"),   perform_metaclustering = TRUE,   num_metaclusters = 20,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_flowsom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","text":"tof_tibble `tof_tbl` `tibble`. cluster_cols Unquoted column names indicating columns `tof_tibble` use computing flowSOM clusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. som_xdim width grid used self-organizing map. total number clusters returned FlowSOM som_xdim * som_ydim, adjust value affect final number clusters. Defaults 10. som_ydim height grid used self-organizing map. total number clusters returned FlowSOM som_xdim * som_ydim, adjust value affect final number clusters. Defaults 10. som_distance_function distance function used self-organizing map calculations. Options \"euclidean\" (default), \"manhattan\", \"chebyshev\", \"cosine\". perform_metaclustering boolean value indicating metaclustering performed initial clustering result returned FlowSOM. Defaults TRUE. num_metaclusters integer indicating maximum number metaclusters returned metaclustering. Defaults 20. ... Optional additional parameters can passed BuildSOM function.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_flowsom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","text":"tibble one column named `.flowsom_cluster` `.flowsom_metacluster` depending value `perform_metaclustering`. column contain integer vector length `nrow(tof_tibble)` indicating id flowSOM cluster cell (.e. row) `tof_tibble` assigned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_flowsom.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","text":"additional details FlowSOM algorithm, see paper.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_flowsom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200)     )  tof_cluster_flowsom(tof_tibble = sim_data, cluster_cols = c(cd45, cd19)) #> # A tibble: 200 × 1 #>    .flowsom_metacluster #>    <chr>                #>  1 10                   #>  2 10                   #>  3 8                    #>  4 5                    #>  5 10                   #>  6 15                   #>  7 6                    #>  8 8                    #>  9 15                   #> 10 2                    #> # ℹ 190 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_grouped.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster (grouped) high-dimensional cytometry data. — tof_cluster_grouped","title":"Cluster (grouped) high-dimensional cytometry data. — tof_cluster_grouped","text":"function wrapper around tidytof's tof_cluster_* function family provides low-level API clustering grouped data frames. subroutine tof_cluster called directly users.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_grouped.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster (grouped) high-dimensional cytometry data. — tof_cluster_grouped","text":"","code":"tof_cluster_grouped(tof_tibble, group_cols, ..., augment = TRUE, method)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_grouped.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster (grouped) high-dimensional cytometry data. — tof_cluster_grouped","text":"tof_tibble `tof_tbl` `tibble`. group_cols unquoted column name indicating columns used group cells clustering. Clustering performed group independently. ... Additional arguments pass `tof_cluster_*` function family member corresponding chosen method. augment boolean value indicating output column-bind cluster ids cell new column `tof_tibble` (TRUE, default) single-column tibble including cluster ids returned (FALSE). method string indicating clustering methods used. Valid values include \"flowsom\", \"phenograph\", \"kmeans\", \"ddpr\", \"xshift\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_grouped.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cluster (grouped) high-dimensional cytometry data. — tof_cluster_grouped","text":"`tof_tbl` `tibble` augment = FALSE, single column encoding cluster ids cell `tof_tibble`. augment = TRUE, ncol(tof_tibble) + 1 columns: (unaltered) columns `tof_tibble` plus additional column encoding cluster ids.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_kmeans.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform k-means clustering on high-dimensional cytometry data. — tof_cluster_kmeans","title":"Perform k-means clustering on high-dimensional cytometry data. — tof_cluster_kmeans","text":"function performs k-means clustering high-dimensional cytometry data using user-specified selection input variables/high-dimensional cytometry measurements. mostly convenient wrapper around kmeans.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_kmeans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform k-means clustering on high-dimensional cytometry data. — tof_cluster_kmeans","text":"","code":"tof_cluster_kmeans(   tof_tibble,   cluster_cols = where(tof_is_numeric),   num_clusters = 20,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_kmeans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform k-means clustering on high-dimensional cytometry data. — tof_cluster_kmeans","text":"tof_tibble `tof_tibble`. cluster_cols Unquoted column names indicating columns `tof_tibble` use computing k-means clusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. num_clusters integer indicating maximum number clusters returned. Defaults 20. ... Optional additional arguments can passed kmeans.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_kmeans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform k-means clustering on high-dimensional cytometry data. — tof_cluster_kmeans","text":"tibble one column named `.kmeans_cluster`. column contain integer vector length `nrow(tof_tibble)` indicating id k-means cluster cell (.e. row) `tof_tibble` assigned.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_kmeans.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform k-means clustering on high-dimensional cytometry data. — tof_cluster_kmeans","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     ) tof_cluster_kmeans(tof_tibble = sim_data) #> # A tibble: 1,000 × 1 #>    .kmeans_cluster #>    <chr>           #>  1 6               #>  2 6               #>  3 20              #>  4 1               #>  5 7               #>  6 6               #>  7 20              #>  8 11              #>  9 8               #> 10 15              #> # ℹ 990 more rows tof_cluster_kmeans(tof_tibble = sim_data, cluster_cols = c(cd45, cd19)) #> # A tibble: 1,000 × 1 #>    .kmeans_cluster #>    <chr>           #>  1 14              #>  2 8               #>  3 3               #>  4 3               #>  5 2               #>  6 2               #>  7 15              #>  8 2               #>  9 5               #> 10 19              #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_phenograph.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","title":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","text":"function performs PhenoGraph clustering high-dimensional cytometry data using user-specified selection input variables/high-dimensional cytometry measurements.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_phenograph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","text":"","code":"tof_cluster_phenograph(   tof_tibble,   cluster_cols = where(tof_is_numeric),   num_neighbors = 30,   distance_function = c(\"euclidean\", \"cosine\"),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_phenograph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","text":"tof_tibble `tof_tbl` `tibble`. cluster_cols Unquoted column names indicating columns `tof_tibble` use computing PhenoGraph clusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. num_neighbors integer indicating number neighbors use constructing PhenoGraph's k-nearest-neighbor graph. Smaller values emphasize local graph structure; larger values emphasize global graph structure (add time computation). Defaults 30. distance_function string indicating distance function use nearest-neighbor calculation. Options include \"euclidean\" (default) \"cosine\" distances. ... Optional additional parameters can passed tof_find_knn.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_phenograph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","text":"tibble one column named `.phenograph_cluster`. column contain integer vector length `nrow(tof_tibble)` indicating id PhenoGraph cluster cell (.e. row) `tof_tibble` assigned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_phenograph.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","text":"additional details Phenograph algorithm, see paper.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_phenograph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     ) tof_cluster_phenograph(tof_tibble = sim_data) #> # A tibble: 1,000 × 1 #>    .phenograph_cluster #>    <chr>               #>  1 6                   #>  2 8                   #>  3 2                   #>  4 5                   #>  5 3                   #>  6 3                   #>  7 6                   #>  8 5                   #>  9 7                   #> 10 6                   #> # ℹ 990 more rows tof_cluster_phenograph(tof_tibble = sim_data, cluster_cols = c(cd45, cd19)) #> # A tibble: 1,000 × 1 #>    .phenograph_cluster #>    <chr>               #>  1 10                  #>  2 8                   #>  3 7                   #>  4 7                   #>  5 6                   #>  6 1                   #>  7 9                   #>  8 3                   #>  9 12                  #> 10 6                   #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster (ungrouped) high-dimensional cytometry data. — tof_cluster_tibble","title":"Cluster (ungrouped) high-dimensional cytometry data. — tof_cluster_tibble","text":"function wrapper around tidytof's tof_cluster_* function family provides low-level API clustering ungrouped data frames. subroutine tof_cluster called directly users.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster (ungrouped) high-dimensional cytometry data. — tof_cluster_tibble","text":"","code":"tof_cluster_tibble(tof_tibble, ..., augment = TRUE, method)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster (ungrouped) high-dimensional cytometry data. — tof_cluster_tibble","text":"tof_tibble `tof_tbl` `tibble`. ... Additional arguments pass `tof_cluster_*` function family member corresponding chosen method. augment boolean value indicating output column-bind cluster ids cell new column `tof_tibble` (TRUE, default) single-column tibble including cluster ids returned (FALSE). method string indicating clustering methods used. Valid values include \"flowsom\", \"phenograph\", \"kmeans\", \"ddpr\", \"xshift\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_tibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cluster (ungrouped) high-dimensional cytometry data. — tof_cluster_tibble","text":"`tof_tbl` `tibble` augment = FALSE, single column encoding cluster ids cell `tof_tibble`. augment = TRUE, ncol(tof_tibble) + 1 columns: (unaltered) columns `tof_tibble` plus additional column encoding cluster ids.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_compute_km_curve.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute a Kaplan-Meier curve from sample-level survival data — tof_compute_km_curve","title":"Compute a Kaplan-Meier curve from sample-level survival data — tof_compute_km_curve","text":"Compute Kaplan-Meier curve sample-level survival data","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_compute_km_curve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute a Kaplan-Meier curve from sample-level survival data — tof_compute_km_curve","text":"","code":"tof_compute_km_curve(survival_curves)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_compute_km_curve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute a Kaplan-Meier curve from sample-level survival data — tof_compute_km_curve","text":"survival_curves tibble Kaplan-Meier curve computed. row must represent observation must two columns named \"time_to_event\" \"event\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_compute_km_curve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute a Kaplan-Meier curve from sample-level survival data — tof_compute_km_curve","text":"tibble 3 columns: time_to_event, survival_probability, is_censored (whether event censored timepoint).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cosine_dist.html","id":null,"dir":"Reference","previous_headings":"","what":"A function for finding the cosine distance between each of the rows of a numeric\nmatrix and a numeric vector. — tof_cosine_dist","title":"A function for finding the cosine distance between each of the rows of a numeric\nmatrix and a numeric vector. — tof_cosine_dist","text":"function finding cosine distance rows numeric matrix numeric vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cosine_dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function for finding the cosine distance between each of the rows of a numeric\nmatrix and a numeric vector. — tof_cosine_dist","text":"","code":"tof_cosine_dist(matrix, vector)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cosine_dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function for finding the cosine distance between each of the rows of a numeric\nmatrix and a numeric vector. — tof_cosine_dist","text":"matrix numeric matrix. vector numeric vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cosine_dist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function for finding the cosine distance between each of the rows of a numeric\nmatrix and a numeric vector. — tof_cosine_dist","text":"numeric vector distances length `nrow(matrix)` ith entry represents cosine distance ith row `matrix` `vector`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cosine_dist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A function for finding the cosine distance between each of the rows of a numeric\nmatrix and a numeric vector. — tof_cosine_dist","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an elastic net hyperparameter search grid of a specified size — tof_create_grid","title":"Create an elastic net hyperparameter search grid of a specified size — tof_create_grid","text":"function creates regular hyperparameter search grid (form tibble) specifying search space two hyperparameters generalized linear model using glmnet package: regularization penalty term lasso/ridge regression mixture term.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an elastic net hyperparameter search grid of a specified size — tof_create_grid","text":"","code":"tof_create_grid(   penalty_values,   mixture_values,   num_penalty_values = 5,   num_mixture_values = 5 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an elastic net hyperparameter search grid of a specified size — tof_create_grid","text":"penalty_values numeric vector unique elastic net penalty values (\"lambda\") include hyperparameter grid. unspecified, regular grid `num_penalty_values` 10^(-10) 10^(0) used. mixture_values numeric vector elastic net mixture values (\"alpha\") include hyperparameter grid. unspecified, regular grid `num_mixture_values` 0 1 used. num_penalty_values Optional. `penalty_values` supplied, `num_penalty_values` (integer) can given specify many equally-spaced penalty values 10^(-10) 1 included hyperparameter grid. method used, regular grid always returned. Defaults 5. num_mixture_values Optional. `mixture_values` supplied, `num_mixture_values` (integer) can given specify many equally-spaced penalty values 0 (ridge regression) 1 (lasso) included hyperparameter grid. method used, regular grid always returned. Defaults 5.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an elastic net hyperparameter search grid of a specified size — tof_create_grid","text":"tibble two numeric columns: `penalty` `mixture`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_grid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an elastic net hyperparameter search grid of a specified size — tof_create_grid","text":"","code":"tof_create_grid() #> # A tibble: 25 × 2 #>         penalty mixture #>           <dbl>   <dbl> #>  1 0.0000000001    0    #>  2 0.0000000001    0.25 #>  3 0.0000000001    0.5  #>  4 0.0000000001    0.75 #>  5 0.0000000001    1    #>  6 0.0000000316    0    #>  7 0.0000000316    0.25 #>  8 0.0000000316    0.5  #>  9 0.0000000316    0.75 #> 10 0.0000000316    1    #> # ℹ 15 more rows  tof_create_grid(num_penalty_values = 10, num_mixture_values = 5) #> # A tibble: 50 × 2 #>          penalty mixture #>            <dbl>   <dbl> #>  1 0.0000000001     0    #>  2 0.0000000001     0.25 #>  3 0.0000000001     0.5  #>  4 0.0000000001     0.75 #>  5 0.0000000001     1    #>  6 0.00000000129    0    #>  7 0.00000000129    0.25 #>  8 0.00000000129    0.5  #>  9 0.00000000129    0.75 #> 10 0.00000000129    1    #> # ℹ 40 more rows  tof_create_grid(penalty_values = c(0.01, 0.1, 0.5)) #> # A tibble: 15 × 2 #>    penalty mixture #>      <dbl>   <dbl> #>  1    0.01    0    #>  2    0.01    0.25 #>  3    0.01    0.5  #>  4    0.01    0.75 #>  5    0.01    1    #>  6    0.1     0    #>  7    0.1     0.25 #>  8    0.1     0.5  #>  9    0.1     0.75 #> 10    0.1     1    #> 11    0.5     0    #> 12    0.5     0.25 #> 13    0.5     0.5  #> 14    0.5     0.75 #> 15    0.5     1"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_recipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a recipe for preprocessing sample-level cytometry data for an elastic net model — tof_create_recipe","title":"Create a recipe for preprocessing sample-level cytometry data for an elastic net model — tof_create_recipe","text":"Create recipe preprocessing sample-level cytometry data elastic net model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_recipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a recipe for preprocessing sample-level cytometry data for an elastic net model — tof_create_recipe","text":"","code":"tof_create_recipe(   feature_tibble,   predictor_cols,   outcome_cols,   standardize_predictors = TRUE,   remove_zv_predictors = FALSE,   impute_missing_predictors = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_recipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a recipe for preprocessing sample-level cytometry data for an elastic net model — tof_create_recipe","text":"feature_tibble tibble row represents sample- patient- level observation, produced tof_extract_features. predictor_cols Unquoted column names indicating columns data contained `feature_tibble` used predictors elastic net model. Supports tidyselect helpers. outcome_cols Unquoted column names indicating columns `feature_tibble` used outcome variables elastic net model. Supports tidyselect helpers. standardize_predictors logical value indicating numeric predictor columns standardized (centered scaled) model fitting. Defaults TRUE. remove_zv_predictors logical value indicating predictor columns near-zero variance removed model fitting using step_nzv. Defaults FALSE. impute_missing_predictors logical value indicating predictor columns missing values imputed using k-nearest neighbors model fitting (see step_impute_knn). Imputation performed using observation's 5 nearest-neighbors. Defaults FALSE.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_recipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a recipe for preprocessing sample-level cytometry data for an elastic net model — tof_create_recipe","text":"recipe object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample.html","id":null,"dir":"Reference","previous_headings":"","what":"Downsample high-dimensional cytometry data. — tof_downsample","title":"Downsample high-dimensional cytometry data. — tof_downsample","text":"function downsamples number cells `tof_tbl` using one three methods (randomly sampling constant number cells, randomly sampling proportion cells, performing density-dependent downsampling per algorithm Qiu et al., (2011)).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downsample high-dimensional cytometry data. — tof_downsample","text":"","code":"tof_downsample(   tof_tibble,   group_cols = NULL,   ...,   method = c(\"constant\", \"prop\", \"density\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downsample high-dimensional cytometry data. — tof_downsample","text":"tof_tibble `tof_tbl` `tibble`. group_cols Unquoted names columns `tof_tibble` used define groups within downsampling performed. Supports tidyselect helpers. Defaults `NULL` (grouping). ... Additional arguments pass `tof_downsample_*` function family member corresponding chosen method. method string indicating downsampling method use: \"constant\" (default), \"prop\", \"density\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downsample high-dimensional cytometry data. — tof_downsample","text":"downsampled `tof_tbl` number columns input `tof_tibble`, fewer rows. number rows result depend chosen downsampling method.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downsample high-dimensional cytometry data. — tof_downsample","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  # sample 200 cells from the input data tof_downsample(     tof_tibble = sim_data,     num_cells = 200L,     method = \"constant\" ) #> # A tibble: 200 × 5 #>      cd45    cd38    cd34   cd19 cluster_id #>     <dbl>   <dbl>   <dbl>  <dbl> <chr>      #>  1 -0.646  0.173   2.56   -0.515 c          #>  2 -0.441 -0.622   0.630   0.810 y          #>  3 -1.93   0.403  -0.381   0.497 o          #>  4  0.262  1.88   -0.0172 -0.190 z          #>  5 -1.17   1.34   -0.354  -0.869 n          #>  6 -0.221  0.111   0.353   0.857 t          #>  7 -1.46  -0.440   1.63   -0.239 i          #>  8  1.63   1.11   -1.91    0.209 h          #>  9 -0.983 -0.0646  2.42    1.86  t          #> 10 -0.461 -0.759   0.753   0.918 x          #> # ℹ 190 more rows  # sample 10% of all cells from the input data tof_downsample(     tof_tibble = sim_data,     prop_cells = 0.1,     method = \"prop\" ) #> # A tibble: 100 × 5 #>      cd45    cd38   cd34    cd19 cluster_id #>     <dbl>   <dbl>  <dbl>   <dbl> <chr>      #>  1  0.251  0.763   1.50  -0.925  y          #>  2 -0.901 -0.439  -1.09  -1.13   q          #>  3  0.872  0.259  -1.63  -0.0570 z          #>  4 -0.141  0.717   0.445  0.835  e          #>  5 -1.04   0.0878  0.279  0.640  q          #>  6  1.32   0.225  -0.245 -2.86   e          #>  7 -0.779 -1.51    0.811 -0.826  v          #>  8 -0.676 -1.05   -2.17  -1.49   d          #>  9  0.316  0.404   1.10  -1.21   p          #> 10  0.198 -0.799  -0.870  0.623  l          #> # ℹ 90 more rows  # sample ~10% of cells from the input data using density dependence tof_downsample(     tof_tibble = sim_data,     target_prop_cells = 0.1,     method = \"density\" ) #> # A tibble: 99 × 5 #>       cd45   cd38   cd34   cd19 cluster_id #>      <dbl>  <dbl>  <dbl>  <dbl> <chr>      #>  1  0.208  -0.517  0.601 -0.699 p          #>  2  0.110  -0.871  0.252  0.127 o          #>  3 -1.20   -0.254  1.01  -0.814 z          #>  4  0.0467 -1.19  -0.946  0.949 j          #>  5 -0.729   0.598 -0.147 -0.151 p          #>  6 -0.221   1.12  -0.969  0.461 o          #>  7 -1.45   -2.00   1.55   1.31  j          #>  8 -1.36   -0.541  0.797  0.136 c          #>  9 -1.44    0.817  0.295 -0.630 b          #> 10 -1.38    1.22   0.603 -0.643 l          #> # ℹ 89 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_constant.html","id":null,"dir":"Reference","previous_headings":"","what":"Downsample high-dimensional cytometry data by randomly selecting a constant number of cells per group. — tof_downsample_constant","title":"Downsample high-dimensional cytometry data by randomly selecting a constant number of cells per group. — tof_downsample_constant","text":"function downsamples number cells `tof_tbl` randomly selecting `num_cells` cells unique combination values `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_constant.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downsample high-dimensional cytometry data by randomly selecting a constant number of cells per group. — tof_downsample_constant","text":"","code":"tof_downsample_constant(tof_tibble, group_cols = NULL, num_cells)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_constant.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downsample high-dimensional cytometry data by randomly selecting a constant number of cells per group. — tof_downsample_constant","text":"tof_tibble `tof_tbl` `tibble`. group_cols Unquoted names columns `tof_tibble` used define groups `num_cells` downsampled. Supports tidyselect helpers. Defaults `NULL` (grouping). num_cells integer number cells sampled group defined `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_constant.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downsample high-dimensional cytometry data by randomly selecting a constant number of cells per group. — tof_downsample_constant","text":"`tof_tbl` number columns input `tof_tibble`, fewer rows. Specifically, number rows `num_cells` multiplied number unique combinations values `group_cols`. group fewer `num_cells` number cells, cells group kept.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_constant.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downsample high-dimensional cytometry data by randomly selecting a constant number of cells per group. — tof_downsample_constant","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  # sample 500 cells from the input data tof_downsample_constant(     tof_tibble = sim_data,     num_cells = 500L ) #> # A tibble: 500 × 5 #>      cd45   cd38   cd34    cd19 cluster_id #>     <dbl>  <dbl>  <dbl>   <dbl> <chr>      #>  1  0.366  0.539  1.08   1.21   k          #>  2  0.649 -1.36  -1.05  -0.840  d          #>  3  1.16   0.948  0.214  0.651  f          #>  4 -0.764  2.73   1.06   0.730  y          #>  5 -0.608 -0.154 -0.131  0.0936 w          #>  6 -0.367 -0.446  0.561  1.12   w          #>  7  1.27  -0.815 -0.670 -0.425  x          #>  8 -1.58   2.09   0.213 -1.08   l          #>  9 -0.482  0.312  1.54   0.602  o          #> 10 -0.862  0.575  1.39   0.217  n          #> # ℹ 490 more rows  # sample 20 cells per cluster from the input data tof_downsample_constant(     tof_tibble = sim_data,     group_cols = cluster_id,     num_cells = 20L ) #> # A tibble: 520 × 5 #>      cd45   cd38   cd34    cd19 cluster_id #>     <dbl>  <dbl>  <dbl>   <dbl> <chr>      #>  1  0.208 -1.85   0.829  0.812  m          #>  2 -0.304  0.401  0.380 -0.246  b          #>  3  0.366  0.539  1.08   1.21   k          #>  4  0.649 -1.36  -1.05  -0.840  d          #>  5  1.16   0.948  0.214  0.651  f          #>  6 -0.608 -0.154 -0.131  0.0936 w          #>  7  0.276  0.425 -1.09  -0.166  g          #>  8  1.27  -0.815 -0.670 -0.425  x          #>  9  0.194 -0.464 -1.33   0.461  a          #> 10  2.37   0.773 -0.846 -0.729  t          #> # ℹ 510 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_density","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_density","text":"function downsamples number cells `tof_tbl` using density-dependent downsampling algorithm described Qiu et al., (2011).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_density","text":"","code":"tof_downsample_density(   tof_tibble,   group_cols = NULL,   density_cols = where(tof_is_numeric),   target_num_cells,   target_prop_cells,   target_percentile = 0.03,   outlier_percentile = 0.01,   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\"),   density_estimation_method = c(\"mean_distance\", \"sum_distance\", \"spade\"),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_density","text":"tof_tibble `tof_tbl` `tibble`. group_cols Unquoted names columns `tof_tibble` used define groups within downsampling performed. Supports tidyselect helpers. Defaults `NULL` (grouping). density_cols Unquoted names columns `tof_tibble` use density estimation cell. Defaults numeric columns `tof_tibble`. target_num_cells approximate constant number cells (0 1) sampled group defined `group_cols`. Slightly fewer cells may returned due density calculation performed. target_prop_cells approximate proportion cells (0 1) sampled group defined `group_cols`. Slightly fewer cells may returned due density calculation performed. Ignored `target_num_cells` specified. target_percentile local density percentile (.e. value 0 1) downsampling procedure adjust cells. short, algorithm continue remove cells input `tof_tibble` local densities remaining cells equal `target_percentile`. Lower values result cells removed. See Qiu et al., (2011) details. Defaults 0.1 (10th percentile local densities). Ignored either `target_num_cells` `target_prop_cells` specified. outlier_percentile local density percentile (.e. value 0 1) cells considered outliers (discarded). Cells local density `outlier_percentile` never selected downsampling procedure. Defaults 0.01 (cells 1st local density percentile removed). distance_function string indicating distance function use cell--cell distance calculations. Options include \"euclidean\" (default) \"cosine\" distances. density_estimation_method string indicating algorithm used calculate local density estimate cell. Options include k-nearest neighbor density estimation using mean distance cell's k-nearest neighbors (\"mean_distance\"; default), k-nearest neighbor density estimation using summed distance cell's k nearest neighbors (\"sum_distance\") counting number neighboring cells within spherical radius around cell described Qiu et al., 2011  (\"spade\"). \"spade\" often produces best results, slower knn-density estimation methods. ... Optional additional arguments pass tof_knn_density tof_spade_density.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_density","text":"`tof_tbl` number columns input `tof_tibble`, fewer rows. number rows depend chosen value `target_percentile`, fewer cells selected lower values `target_percentile`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_density","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  tof_downsample_density(     tof_tibble = sim_data,     density_cols = c(cd45, cd34, cd38),     target_prop_cells = 0.5,     density_estimation_method = \"spade\" ) #> # A tibble: 495 × 4 #>      cd45   cd38    cd34   cd19 #>     <dbl>  <dbl>   <dbl>  <dbl> #>  1  1.09   0.159 -0.0258 -0.500 #>  2 -1.11  -1.15   0.606   0.211 #>  3 -0.109  0.821 -1.99    0.371 #>  4 -1.11  -0.296  0.169  -0.280 #>  5  0.353  0.111 -0.781   0.555 #>  6  0.299  0.379 -0.905   0.778 #>  7 -0.839  0.186  0.0491 -0.757 #>  8  0.972 -1.56  -1.18    0.146 #>  9  2.19   1.09   1.55   -0.508 #> 10 -2.35   1.36  -0.193   0.983 #> # ℹ 485 more rows  tof_downsample_density(     tof_tibble = sim_data,     density_cols = c(cd45, cd34, cd38),     target_num_cells = 200L,     density_estimation_method = \"spade\" ) #> # A tibble: 208 × 4 #>       cd45   cd38    cd34    cd19 #>      <dbl>  <dbl>   <dbl>   <dbl> #>  1  0.546  -2.16  -1.12   -0.782  #>  2  0.357  -0.306 -0.442   0.263  #>  3 -0.839   0.186  0.0491 -0.757  #>  4 -0.0260 -0.126 -1.20    0.480  #>  5 -1.65   -0.420  1.71   -1.07   #>  6  0.330  -2.23   1.35   -0.182  #>  7  0.411   2.02   0.357  -0.0997 #>  8  0.292  -0.743 -0.190  -0.756  #>  9  2.10   -0.949 -1.74   -1.35   #> 10  0.911   0.974 -0.793  -0.512  #> # ℹ 198 more rows  tof_downsample_density(     tof_tibble = sim_data,     density_cols = c(cd45, cd34, cd38),     target_num_cells = 200L,     density_estimation_method = \"mean_distance\" ) #> # A tibble: 190 × 4 #>       cd45    cd38   cd34   cd19 #>      <dbl>   <dbl>  <dbl>  <dbl> #>  1  2.19    1.09    1.55  -0.508 #>  2  0.158  -0.211   1.42   0.228 #>  3 -1.65   -1.50    0.430  0.818 #>  4  0.0165 -0.539   0.426 -0.332 #>  5 -0.687  -1.28   -1.04  -0.460 #>  6 -0.317   0.0671 -1.23  -1.12  #>  7  2.10   -0.949  -1.74  -1.35  #>  8 -1.24    0.369   1.30  -1.17  #>  9  1.79    0.271   1.46   0.960 #> 10  0.911   0.974  -0.793 -0.512 #> # ℹ 180 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_prop.html","id":null,"dir":"Reference","previous_headings":"","what":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_prop","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_prop","text":"function downsamples number cells `tof_tbl` randomly selecting `prop_cells` proportion total number cells unique combination values `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_prop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_prop","text":"","code":"tof_downsample_prop(tof_tibble, group_cols = NULL, prop_cells)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_prop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_prop","text":"tof_tibble `tof_tbl` `tibble`. group_cols Unquoted names columns `tof_tibble` used define groups `prop_cells` downsampled. Supports tidyselect helpers. Defaults `NULL` (grouping). prop_cells proportion cells (0 1) sampled group defined `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_prop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_prop","text":"`tof_tbl` number columns input `tof_tibble`, fewer rows. Specifically, number rows `prop_cells` times number rows input `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_prop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_prop","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  # sample 10% of all cells from the input data tof_downsample_prop(     tof_tibble = sim_data,     prop_cells = 0.1 ) #> # A tibble: 100 × 5 #>      cd45    cd38   cd34    cd19 cluster_id #>     <dbl>   <dbl>  <dbl>   <dbl> <chr>      #>  1 -0.832 -0.721   0.395  0.992  m          #>  2  0.556 -0.597   0.116  0.207  g          #>  3  1.05  -0.497  -0.368  0.0227 i          #>  4 -0.708 -0.0874 -0.867 -1.02   n          #>  5 -2.17  -0.0559 -0.574 -0.0164 t          #>  6 -0.855 -0.352  -2.15  -0.241  e          #>  7 -0.152  0.150  -1.38   0.594  f          #>  8 -0.782 -0.309  -0.760 -0.578  t          #>  9  1.33   0.0834  0.689 -0.395  f          #> 10 -1.37   0.0921 -1.33  -0.196  f          #> # ℹ 90 more rows  # sample 10% of all cells from each cluster in the input data tof_downsample_prop(     tof_tibble = sim_data,     group_cols = cluster_id,     prop_cells = 0.1 ) #> # A tibble: 87 × 5 #>       cd45   cd38     cd34    cd19 cluster_id #>      <dbl>  <dbl>    <dbl>   <dbl> <chr>      #>  1  0.338  -0.399  1.04    -0.266  a          #>  2  0.793  -1.70  -0.868   -2.53   a          #>  3 -0.392   1.36  -1.48     2.27   a          #>  4 -0.388  -1.90  -1.30    -0.274  a          #>  5 -0.543   0.321  1.18    -0.559  b          #>  6 -1.94   -1.54  -0.00926 -1.72   b          #>  7 -1.10   -1.65  -0.0204  -0.938  b          #>  8  0.775  -2.10  -0.773    0.384  c          #>  9 -0.827   1.04  -1.17     0.0455 c          #> 10  0.0833 -0.324  0.214   -0.799  c          #> # ℹ 77 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_estimate_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate the local densities for all cells in a high-dimensional cytometry dataset. — tof_estimate_density","title":"Estimate the local densities for all cells in a high-dimensional cytometry dataset. — tof_estimate_density","text":"function wrapper around tidytof's tof_*_density() function family. performs local density estimation high-dimensional cytometry data using user-specified method (3 choices) method's corresponding input parameters.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_estimate_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate the local densities for all cells in a high-dimensional cytometry dataset. — tof_estimate_density","text":"","code":"tof_estimate_density(   tof_tibble,   distance_cols = where(tof_is_numeric),   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\"),   normalize = TRUE,   ...,   augment = TRUE,   method = c(\"mean_distance\", \"sum_distance\", \"spade\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_estimate_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate the local densities for all cells in a high-dimensional cytometry dataset. — tof_estimate_density","text":"tof_tibble `tof_tbl` `tibble`. distance_cols Unquoted names columns `tof_tibble` use calculating cell--cell distances local density estimation cell. Defaults numeric columns `tof_tibble`. distance_function string indicating distance function use calculating cell--cell distances local density estimation. Options include \"euclidean\" (default) \"cosine\". normalize boolean value indicating vector local density estimates normalized values 0 1. Defaults TRUE. ... Additional arguments pass `tof_*_density()` function family member corresponding chosen `method`. augment boolean value indicating output column-bind local density estimates cell new column `tof_tibble` (TRUE; default) single-column tibble including local density estimates returned (FALSE). method string indicating local density estimation method used. Valid values include \"mean_distance\", \"sum_distance\", \"spade\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_estimate_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate the local densities for all cells in a high-dimensional cytometry dataset. — tof_estimate_density","text":"`tof_tbl` `tibble` augment = FALSE, single column encoding local density estimates cell `tof_tibble`. augment = TRUE, ncol(tof_tibble) + 1 columns: (unaltered) columns `tof_tibble` plus additional column encoding local density estimates.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_estimate_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate the local densities for all cells in a high-dimensional cytometry dataset. — tof_estimate_density","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  # perform the density estimation tof_estimate_density(tof_tibble = sim_data, method = \"spade\") #> # A tibble: 1,000 × 5 #>      cd45   cd38   cd34    cd19 .spade_density #>     <dbl>  <dbl>  <dbl>   <dbl>          <dbl> #>  1 -1.34   1.72   2.14  -0.975               1 #>  2 -0.132 -0.226 -1.32  -0.776               1 #>  3 -0.612  0.963 -0.366  0.220               1 #>  4 -1.39  -0.750 -0.504  0.442               1 #>  5 -1.36  -0.286 -0.108  0.826               1 #>  6 -1.01   2.01  -0.264  0.0644              1 #>  7  0.952  0.263  0.643 -1.32                1 #>  8  1.19  -0.197 -0.299  0.709               1 #>  9 -1.15  -1.54   1.42   0.872               1 #> 10 -0.142 -2.98  -0.926 -0.355               1 #> # ℹ 990 more rows  # perform the density estimation with a smaller search radius around # each cell tof_estimate_density(     tof_tibble = sim_data,     alpha_multiplier = 2,     method = \"spade\" ) #> # A tibble: 1,000 × 5 #>      cd45   cd38   cd34    cd19 .spade_density #>     <dbl>  <dbl>  <dbl>   <dbl>          <dbl> #>  1 -1.34   1.72   2.14  -0.975             0.1 #>  2 -0.132 -0.226 -1.32  -0.776             1   #>  3 -0.612  0.963 -0.366  0.220             1   #>  4 -1.39  -0.750 -0.504  0.442             1   #>  5 -1.36  -0.286 -0.108  0.826             1   #>  6 -1.01   2.01  -0.264  0.0644            0.3 #>  7  0.952  0.263  0.643 -1.32              1   #>  8  1.19  -0.197 -0.299  0.709             1   #>  9 -1.15  -1.54   1.42   0.872             0.3 #> 10 -0.142 -2.98  -0.926 -0.355             0   #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_central_tendency.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the central tendencies of CyTOF markers in each cluster in a `tof_tibble`. — tof_extract_central_tendency","title":"Extract the central tendencies of CyTOF markers in each cluster in a `tof_tibble`. — tof_extract_central_tendency","text":"feature extraction function calculates user-specified measurement central tendency (.e. median mode) cells cluster `tof_tibble` across user-specified selection CyTOF markers. calculations can done either overall (across cells dataset) breaking cells subgroups using `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_central_tendency.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the central tendencies of CyTOF markers in each cluster in a `tof_tibble`. — tof_extract_central_tendency","text":"","code":"tof_extract_central_tendency(   tof_tibble,   cluster_col,   group_cols = NULL,   marker_cols = where(tof_is_numeric),   stimulation_col = NULL,   central_tendency_function = stats::median,   format = c(\"wide\", \"long\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_central_tendency.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the central tendencies of CyTOF markers in each cluster in a `tof_tibble`. — tof_extract_central_tendency","text":"tof_tibble `tof_tibble` `tibble` row represents single cell column represents CyTOF measurement piece metadata (.e. cluster id, patient id, etc.) cell. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. group_cols Unquoted column names representing columns `tof_tibble` used break rows `tof_tibble` subgroups feature extraction calculation. Defaults NULL (.e. performing extraction without subgroups). marker_cols Unquoted column names representing columns `tof_tibble` (.e. CyTOF protein measurements) included feature extraction calculation. Defaults numeric (integer double) columns. Supports tidyselection. stimulation_col Optional. unquoted column name indicates column `tof_tibble` contains information stimulation condition cell exposed data acquisition. provided, feature extraction broken subgroups stimulation condition (features stimulation condition included features wide format). central_tendency_function function used calculate measurement central tendency cluster (used dependent variable linear model). Defaults median. format string indicating data returned \"wide\" format (default; cluster feature given column) \"long\" format (cluster feature provided row).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_central_tendency.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the central tendencies of CyTOF markers in each cluster in a `tof_tibble`. — tof_extract_central_tendency","text":"tibble. format == \"wide\", tibble 1 row combination grouping variables provided `group_cols` one column grouping variable, one column extracted feature (central tendency given marker given cluster). names column containing cluster features obtained using following pattern: \"{marker_id}@{cluster_id}_ct\". format == \"long\", tibble 1 row combination grouping variables `group_cols`, cluster id (.e. level) `cluster_col`, marker `marker_cols`. one column grouping variable, one column cluster ids, one column CyTOF channel names, one column (`value`) containing features.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_central_tendency.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract the central tendencies of CyTOF markers in each cluster in a `tof_tibble`. — tof_extract_central_tendency","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         patient = sample(c(\"kirby\", \"mario\"), size = 1000, replace = TRUE),         stim = sample(c(\"basal\", \"stim\"), size = 1000, replace = TRUE)     )  # extract proportion of each cluster in each patient in wide format tof_extract_central_tendency(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient ) #> # A tibble: 2 × 105 #>   patient `cd45@a_ct` `cd38@a_ct` `cd34@a_ct` `cd19@a_ct` `cd45@b_ct` #>   <chr>         <dbl>       <dbl>       <dbl>       <dbl>       <dbl> #> 1 kirby        -0.405      -0.470      0.0958      -0.122      0.0480 #> 2 mario         0.147      -0.223     -0.360        0.168      0.131  #> # ℹ 99 more variables: `cd38@b_ct` <dbl>, `cd34@b_ct` <dbl>, `cd19@b_ct` <dbl>, #> #   `cd45@c_ct` <dbl>, `cd38@c_ct` <dbl>, `cd34@c_ct` <dbl>, `cd19@c_ct` <dbl>, #> #   `cd45@d_ct` <dbl>, `cd38@d_ct` <dbl>, `cd34@d_ct` <dbl>, `cd19@d_ct` <dbl>, #> #   `cd45@e_ct` <dbl>, `cd38@e_ct` <dbl>, `cd34@e_ct` <dbl>, `cd19@e_ct` <dbl>, #> #   `cd45@f_ct` <dbl>, `cd38@f_ct` <dbl>, `cd34@f_ct` <dbl>, `cd19@f_ct` <dbl>, #> #   `cd45@g_ct` <dbl>, `cd38@g_ct` <dbl>, `cd34@g_ct` <dbl>, `cd19@g_ct` <dbl>, #> #   `cd45@h_ct` <dbl>, `cd38@h_ct` <dbl>, `cd34@h_ct` <dbl>, …  # extract proportion of each cluster in each patient in long format tof_extract_central_tendency(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     format = \"long\" ) #> # A tibble: 208 × 4 #>    patient cluster_id channel  values #>    <chr>   <chr>      <chr>     <dbl> #>  1 kirby   a          cd45    -0.405  #>  2 kirby   a          cd38    -0.470  #>  3 kirby   a          cd34     0.0958 #>  4 kirby   a          cd19    -0.122  #>  5 kirby   b          cd45     0.0480 #>  6 kirby   b          cd38     0.165  #>  7 kirby   b          cd34     0.520  #>  8 kirby   b          cd19     0.563  #>  9 kirby   c          cd45     0.0521 #> 10 kirby   c          cd38    -0.338  #> # ℹ 198 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_emd.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract aggregated features from CyTOF data using earth-mover's distance (EMD) — tof_extract_emd","title":"Extract aggregated features from CyTOF data using earth-mover's distance (EMD) — tof_extract_emd","text":"feature extraction function calculates earth-mover's distance (EMD) stimulated unstimulated (\"basal\") experimental conditions samples CyTOF experiment. calculation performed across user-specified selection CyTOF antigens can performed either overall (across cells dataset) breaking cells subgroups using `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_emd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract aggregated features from CyTOF data using earth-mover's distance (EMD) — tof_extract_emd","text":"","code":"tof_extract_emd(   tof_tibble,   cluster_col,   group_cols = NULL,   marker_cols = where(tof_is_numeric),   emd_col,   reference_level,   format = c(\"wide\", \"long\"),   num_bins = 100 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_emd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract aggregated features from CyTOF data using earth-mover's distance (EMD) — tof_extract_emd","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. group_cols Unquoted column names representing columns `tof_tibble` used break rows `tof_tibble` subgroups feature extraction calculation. Defaults NULL (.e. performing extraction without subgroups). marker_cols Unquoted column names representing columns `tof_tibble` (.e. CyTOF protein measurements) included earth-mover's distance calculation. Defaults numeric (integer double) columns. Supports tidyselect helpers. emd_col unquoted column name indicates column `tof_tibble` used group cells different distributions compared one another EMD calculation. example, want compare marker expression distributions across stimulation conditions, `emd_col` column `tof_tibble` containing information stimulation condition cell exposed data acquisition. provided, feature extraction broken subgroups stimulation condition (features stimulation condition included features wide format). reference_level string indicating value `emd_col` corresponds \"reference\" value values `emd_col` compared. example, `emd_col` represents stimulation condition cell, reference_level might take value \"basal\" \"unstimulated\" want compare stimulation basal state. format string indicating data returned \"wide\" format (default; cluster feature given column) \"long\" format (cluster feature provided row). num_bins Optional. number bins use dividing one-dimensional marker distributions discrete segments EMD calculation. Defaults 100.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_emd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract aggregated features from CyTOF data using earth-mover's distance (EMD) — tof_extract_emd","text":"tibble. format == \"wide\", tibble 1 row combination grouping variables provided `group_cols` one column grouping variable, one column extracted feature (EMD distribution given marker given cluster basal condition distribution marker given cluster stimulated condition). names column containing cluster features obtained using following pattern: \"{stimulation_id}_{marker_id}@{cluster_id}_emd\". format == \"long\", tibble 1 row combination grouping variables `group_cols`, cluster id (.e. level) `cluster_col`, marker `marker_cols`. one column grouping variable, one column cluster ids, one column CyTOF channel names, one column (`value`) containing features.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_emd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract aggregated features from CyTOF data using earth-mover's distance (EMD) — tof_extract_emd","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         patient = sample(c(\"kirby\", \"mario\"), size = 1000, replace = TRUE),         stim = sample(c(\"basal\", \"stim\"), size = 1000, replace = TRUE)     )  # extract emd of each cluster in each patient (using the \"basal\" stim # condition as a reference) in wide format tof_extract_emd(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     emd_col = stim,     reference_level = \"basal\" ) #> # A tibble: 2 × 105 #>   patient `stim_cd45@a_emd` `stim_cd38@a_emd` `stim_cd34@a_emd` #>   <chr>               <dbl>             <dbl>             <dbl> #> 1 kirby                  NA                NA                NA #> 2 mario                  NA                NA                NA #> # ℹ 101 more variables: `stim_cd19@a_emd` <dbl>, `stim_cd45@z_emd` <dbl>, #> #   `stim_cd38@z_emd` <dbl>, `stim_cd34@z_emd` <dbl>, `stim_cd19@z_emd` <dbl>, #> #   `stim_cd45@p_emd` <dbl>, `stim_cd38@p_emd` <dbl>, `stim_cd34@p_emd` <dbl>, #> #   `stim_cd19@p_emd` <dbl>, `stim_cd45@u_emd` <dbl>, `stim_cd38@u_emd` <dbl>, #> #   `stim_cd34@u_emd` <dbl>, `stim_cd19@u_emd` <dbl>, `stim_cd45@k_emd` <dbl>, #> #   `stim_cd38@k_emd` <dbl>, `stim_cd34@k_emd` <dbl>, `stim_cd19@k_emd` <dbl>, #> #   `stim_cd45@h_emd` <dbl>, `stim_cd38@h_emd` <dbl>, …  # extract emd of each cluster (using the \"basal\" stim # condition as a reference) in long format tof_extract_emd(     tof_tibble = sim_data,     cluster_col = cluster_id,     emd_col = stim,     reference_level = \"basal\",     format = \"long\" ) #> # A tibble: 104 × 4 #>    cluster_id marker stimulation   emd #>    <chr>      <chr>  <chr>       <dbl> #>  1 a          cd45   stim         8.39 #>  2 a          cd38   stim         6.47 #>  3 a          cd34   stim         8    #>  4 a          cd19   stim         6.86 #>  5 z          cd45   stim         6.56 #>  6 z          cd38   stim         5.15 #>  7 z          cd34   stim         6.03 #>  8 z          cd19   stim         5.44 #>  9 p          cd45   stim         8.60 #> 10 p          cd38   stim         4.36 #> # ℹ 94 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","title":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","text":"function wraps members `tof_extract_*` function family extract sample-level features lineage (.e. cell surface antigen) CyTOF channels assumed stable across stimulation conditions signaling CyTOF channels assumed change across stimulation conditions. Features extracted cluster within independent sample (defined `group_cols` argument).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","text":"","code":"tof_extract_features(   tof_tibble,   cluster_col,   group_cols = NULL,   stimulation_col = NULL,   lineage_cols,   signaling_cols,   central_tendency_function = stats::median,   signaling_method = c(\"threshold\", \"emd\", \"jsd\", \"central tendency\"),   basal_level = NULL,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. group_cols Unquoted column names representing columns `tof_tibble` used break rows `tof_tibble` subgroups feature extraction calculation. Defaults NULL (.e. performing extraction without subgroups). stimulation_col Optional. unquoted column name indicates column `tof_tibble` contains information stimulation condition cell exposed data acquisition. provided, feature extraction broken subgroups stimulation condition (features stimulation condition included features wide format). lineage_cols Unquoted column names representing columns `tof_tibble` (.e. CyTOF protein measurements) considered lineage markers feature extraction calculation. Supports tidyselect helpers. signaling_cols Unquoted column names representing columns `tof_tibble` (.e. CyTOF protein measurements) considered signaling markers feature extraction calculation. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster (used dependent variable linear model). Defaults median. signaling_method string indicating feature extraction method use signaling markers (identified `signaling_cols` argument). Options \"threshold\" (default), \"emd\", \"jsd\", \"central tendency\". basal_level string indicating value `stimulation_col` corresponds basal stimulation condition (.e. \"basal\" \"unstimulated\"). ... Optional additional arguments passed tof_extract_threshold, tof_extract_emd, tof_extract_jsd.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","text":"tibble. output tibble 1 row combination grouping variables provided `group_cols` (thus, row represent considered single \"sample\" based grouping provided). one column grouping variable one column extracted feature (\"wide\" format).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_features.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","text":"Lineage channels specified using `lineage_cols` argument, extracted features measurements central tendency (computed user-supplied `central_tendency_function`). Signaling channels specified using `signaling_cols` argument, extracted features depend user's chosen `signaling_method`. `signaling method` == \"threshold\" (default), tof_extract_threshold used calculate proportion cells cluster signaling marker expression `threshold` stimulation condition. `signaling_method` == \"emd\" `signaling_method` == \"jsd\", tof_extract_emd tof_extract_jsd used calculate earth-mover's distance (EMD) Jensen-Shannon Distance (JSD), respectively, basal condition stimulated conditions cluster sample. Finally, none options chosen, tof_extract_central_tendency used calculate measurements central tendency. addition, tof_extract_proportion used extract proportion cells cluster computed sample. calculations can performed either overall (across cells dataset) breaking cells subgroups using `group_cols`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_features.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         patient = sample(c(\"kirby\", \"mario\"), size = 1000, replace = TRUE),         stim = sample(c(\"basal\", \"stim\"), size = 1000, replace = TRUE)     )  # extract the following features from each cluster in each # patient/stimulation: #    - proportion of each cluster #    - central tendency (median) of cd45 and cd38 in each cluster #    - the proportion of cells in each cluster with cd34 expression over #      the default threshold (asinh(10 / 5)) tof_extract_features(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     lineage_cols = c(cd45, cd38),     signaling_cols = cd34,     stimulation_col = stim ) #> # A tibble: 2 × 131 #>   patient `prop@a` `prop@b` `prop@c` `prop@d` `prop@e` `prop@f` `prop@g` #>   <chr>      <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl> #> 1 kirby     0.0404   0.0404   0.0319   0.0340   0.0532   0.0319   0.0447 #> 2 mario     0.0453   0.0415   0.0340   0.0472   0.0377   0.0283   0.0340 #> # ℹ 123 more variables: `prop@h` <dbl>, `prop@i` <dbl>, `prop@j` <dbl>, #> #   `prop@k` <dbl>, `prop@l` <dbl>, `prop@m` <dbl>, `prop@n` <dbl>, #> #   `prop@o` <dbl>, `prop@p` <dbl>, `prop@q` <dbl>, `prop@r` <dbl>, #> #   `prop@s` <dbl>, `prop@t` <dbl>, `prop@u` <dbl>, `prop@v` <dbl>, #> #   `prop@w` <dbl>, `prop@x` <dbl>, `prop@y` <dbl>, `prop@z` <dbl>, #> #   `cd45@a_ct` <dbl>, `cd38@a_ct` <dbl>, `cd45@b_ct` <dbl>, `cd38@b_ct` <dbl>, #> #   `cd45@c_ct` <dbl>, `cd38@c_ct` <dbl>, `cd45@d_ct` <dbl>, …  # extract the following features from each cluster in each # patient/stimulation: #    - proportion of each cluster #    - central tendency (mean) of cd45 and cd38 in each cluster #    - the earth mover's distance between each cluster's cd34 histogram in #      the \"basal\" and \"stim\" conditions tof_extract_features(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     lineage_cols = c(cd45, cd38),     signaling_cols = cd34,     central_tendency_function = mean,     stimulation_col = stim,     signaling_method = \"emd\",     basal_level = \"basal\" ) #> # A tibble: 2 × 131 #>   patient `prop@a` `prop@b` `prop@c` `prop@d` `prop@e` `prop@f` `prop@g` #>   <chr>      <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl> #> 1 kirby     0.0404   0.0404   0.0319   0.0340   0.0532   0.0319   0.0447 #> 2 mario     0.0453   0.0415   0.0340   0.0472   0.0377   0.0283   0.0340 #> # ℹ 123 more variables: `prop@h` <dbl>, `prop@i` <dbl>, `prop@j` <dbl>, #> #   `prop@k` <dbl>, `prop@l` <dbl>, `prop@m` <dbl>, `prop@n` <dbl>, #> #   `prop@o` <dbl>, `prop@p` <dbl>, `prop@q` <dbl>, `prop@r` <dbl>, #> #   `prop@s` <dbl>, `prop@t` <dbl>, `prop@u` <dbl>, `prop@v` <dbl>, #> #   `prop@w` <dbl>, `prop@x` <dbl>, `prop@y` <dbl>, `prop@z` <dbl>, #> #   `cd45@a_ct` <dbl>, `cd38@a_ct` <dbl>, `cd45@b_ct` <dbl>, `cd38@b_ct` <dbl>, #> #   `cd45@c_ct` <dbl>, `cd38@c_ct` <dbl>, `cd45@d_ct` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_jsd.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract aggregated features from CyTOF data using the Jensen-Shannon Distance (JSD) — tof_extract_jsd","title":"Extract aggregated features from CyTOF data using the Jensen-Shannon Distance (JSD) — tof_extract_jsd","text":"feature extraction function calculates Jensen-Shannon Distance (JSD) stimulated unstimulated (\"basal\") experimental conditions samples CyTOF experiment. calculation performed across user-specified selection CyTOF antigens can performed either overall (across cells dataset) breaking cells subgroups using `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_jsd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract aggregated features from CyTOF data using the Jensen-Shannon Distance (JSD) — tof_extract_jsd","text":"","code":"tof_extract_jsd(   tof_tibble,   cluster_col,   group_cols = NULL,   marker_cols = where(tof_is_numeric),   jsd_col,   reference_level,   format = c(\"wide\", \"long\"),   num_bins = 100 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_jsd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract aggregated features from CyTOF data using the Jensen-Shannon Distance (JSD) — tof_extract_jsd","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. group_cols Unquoted column names representing columns `tof_tibble` used break rows `tof_tibble` subgroups feature extraction calculation. Defaults NULL (.e. performing extraction without subgroups). marker_cols Unquoted column names representing columns `tof_tibble` (.e. CyTOF protein measurements) included feature extraction calculation. Defaults numeric (integer double) columns. Supports tidyselect helpers. jsd_col unquoted column name indicates column `tof_tibble` contains information stimulation condition cell exposed data acquisition. provided, feature extraction broken subgroups stimulation condition (features stimulation condition included features wide format). reference_level string indicating value `jsd_col` corresponds basal stimulation condition (.e. \"basal\" \"unstimulated\"). format string indicating data returned \"wide\" format (default; cluster feature given column) \"long\" format (cluster feature provided row). num_bins Optional. number bins use dividing one-dimensional marker distributions discrete segments JSD calculation. Defaults 100.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_jsd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract aggregated features from CyTOF data using the Jensen-Shannon Distance (JSD) — tof_extract_jsd","text":"tibble. format == \"wide\", tibble 1 row combination grouping variables provided `group_cols` one column grouping variable, one column extracted feature (JSD distribution given marker given cluster basal condition distribution marker cluster stimulated condition). names column containing cluster features obtained using following pattern: \"{stimulation_id}_{marker_id}@{cluster_id}_jsd\". format == \"long\", tibble 1 row combination grouping variables `group_cols`, cluster id (.e. level) `cluster_col`, marker `marker_cols`. one column grouping variable, one column cluster ids, one column CyTOF channel names, one column (`value`) containing features.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_jsd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract aggregated features from CyTOF data using the Jensen-Shannon Distance (JSD) — tof_extract_jsd","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         patient = sample(c(\"kirby\", \"mario\"), size = 1000, replace = TRUE),         stim = sample(c(\"basal\", \"stim\"), size = 1000, replace = TRUE)     )  # extract jsd of each cluster in each patient (using the \"basal\" stim # condition as a reference) in wide format tof_extract_jsd(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     jsd_col = stim,     reference_level = \"basal\" ) #> # A tibble: 2 × 105 #>   patient `stim_cd45@a_jsd` `stim_cd38@a_jsd` `stim_cd34@a_jsd` #>   <chr>               <dbl>             <dbl>             <dbl> #> 1 kirby               0.885             1                 0.75  #> 2 mario               0.809             0.920             0.809 #> # ℹ 101 more variables: `stim_cd19@a_jsd` <dbl>, `stim_cd45@k_jsd` <dbl>, #> #   `stim_cd38@k_jsd` <dbl>, `stim_cd34@k_jsd` <dbl>, `stim_cd19@k_jsd` <dbl>, #> #   `stim_cd45@l_jsd` <dbl>, `stim_cd38@l_jsd` <dbl>, `stim_cd34@l_jsd` <dbl>, #> #   `stim_cd19@l_jsd` <dbl>, `stim_cd45@d_jsd` <dbl>, `stim_cd38@d_jsd` <dbl>, #> #   `stim_cd34@d_jsd` <dbl>, `stim_cd19@d_jsd` <dbl>, `stim_cd45@q_jsd` <dbl>, #> #   `stim_cd38@q_jsd` <dbl>, `stim_cd34@q_jsd` <dbl>, `stim_cd19@q_jsd` <dbl>, #> #   `stim_cd45@e_jsd` <dbl>, `stim_cd38@e_jsd` <dbl>, …  # extract jsd of each cluster (using the \"basal\" stim # condition as a reference) in long format tof_extract_jsd(     tof_tibble = sim_data,     cluster_col = cluster_id,     jsd_col = stim,     reference_level = \"basal\",     format = \"long\" ) #> # A tibble: 104 × 4 #>    cluster_id marker stimulation   jsd #>    <chr>      <chr>  <chr>       <dbl> #>  1 a          cd45   stim        0.599 #>  2 a          cd38   stim        0.790 #>  3 a          cd34   stim        0.640 #>  4 a          cd19   stim        0.658 #>  5 k          cd45   stim        0.738 #>  6 k          cd38   stim        0.738 #>  7 k          cd34   stim        0.853 #>  8 k          cd19   stim        0.670 #>  9 l          cd45   stim        0.722 #> 10 l          cd38   stim        0.871 #> # ℹ 94 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_proportion.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the proportion of cells in each cluster in a `tof_tibble`. — tof_extract_proportion","title":"Extract the proportion of cells in each cluster in a `tof_tibble`. — tof_extract_proportion","text":"feature extraction function allows calculate proportion cells cluster `tof_tibble` - either overall broken subgroups using `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_proportion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the proportion of cells in each cluster in a `tof_tibble`. — tof_extract_proportion","text":"","code":"tof_extract_proportion(   tof_tibble,   cluster_col,   group_cols = NULL,   format = c(\"wide\", \"long\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_proportion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the proportion of cells in each cluster in a `tof_tibble`. — tof_extract_proportion","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. group_cols Unquoted column names representing columns `tof_tibble` used break rows `tof_tibble` subgroups feature extraction calculation. Defaults NULL (.e. performing extraction without subgroups). format string indicating data returned \"wide\" format (default; cluster proportion given column) \"long\" format (cluster proportion provided row).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_proportion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the proportion of cells in each cluster in a `tof_tibble`. — tof_extract_proportion","text":"tibble. format == \"wide\", tibble 1 row combination grouping variables provided `group_cols` one column grouping variable well one column proportion cells cluster. names column containing cluster proportions obtained using following pattern: \"prop@{cluster_id}\". format == \"long\", tibble 1 row combination grouping variables `group_cols` cluster id (.e. level) `cluster_col`. one column grouping variable, one column cluster ids, one column (`prop`) containing cluster proportions.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_proportion.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract the proportion of cells in each cluster in a `tof_tibble`. — tof_extract_proportion","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         patient = sample(c(\"kirby\", \"mario\"), size = 1000, replace = TRUE),         stim = sample(c(\"basal\", \"stim\"), size = 1000, replace = TRUE)     )  # extract proportion of each cluster in each patient in wide format tof_extract_proportion(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient ) #> # A tibble: 2 × 27 #>   patient `prop@a` `prop@b` `prop@c` `prop@d` `prop@e` `prop@f` `prop@g` #>   <chr>      <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl> #> 1 kirby     0.0415   0.0494   0.0296   0.0534   0.0257   0.0435   0.0514 #> 2 mario     0.0304   0.0425   0.0385   0.0425   0.0385   0.0405   0.0405 #> # ℹ 19 more variables: `prop@h` <dbl>, `prop@i` <dbl>, `prop@j` <dbl>, #> #   `prop@k` <dbl>, `prop@l` <dbl>, `prop@m` <dbl>, `prop@n` <dbl>, #> #   `prop@o` <dbl>, `prop@p` <dbl>, `prop@q` <dbl>, `prop@r` <dbl>, #> #   `prop@s` <dbl>, `prop@t` <dbl>, `prop@u` <dbl>, `prop@v` <dbl>, #> #   `prop@w` <dbl>, `prop@x` <dbl>, `prop@y` <dbl>, `prop@z` <dbl>  # extract proportion of each cluster in each patient in long format tof_extract_proportion(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     format = \"long\" ) #> # A tibble: 52 × 3 #>    patient cluster_id   prop #>    <chr>   <chr>       <dbl> #>  1 kirby   a          0.0415 #>  2 kirby   b          0.0494 #>  3 kirby   c          0.0296 #>  4 kirby   d          0.0534 #>  5 kirby   e          0.0257 #>  6 kirby   f          0.0435 #>  7 kirby   g          0.0514 #>  8 kirby   h          0.0356 #>  9 kirby   i          0.0455 #> 10 kirby   j          0.0573 #> # ℹ 42 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_threshold.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract aggregated features from CyTOF data using a binary threshold — tof_extract_threshold","title":"Extract aggregated features from CyTOF data using a binary threshold — tof_extract_threshold","text":"feature extraction function calculates proportion cells given cluster CyTOF antigen expression user-specified threshold across user-specified selection CyTOF markers. calculations can done either overall (across cells dataset) breaking cells subgroups using `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_threshold.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract aggregated features from CyTOF data using a binary threshold — tof_extract_threshold","text":"","code":"tof_extract_threshold(   tof_tibble,   cluster_col,   group_cols = NULL,   marker_cols = where(tof_is_numeric),   stimulation_col = NULL,   threshold = asinh(10/5),   format = c(\"wide\", \"long\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_threshold.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract aggregated features from CyTOF data using a binary threshold — tof_extract_threshold","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. group_cols Unquoted column names representing columns `tof_tibble` used break rows `tof_tibble` subgroups feature extraction calculation. Defaults NULL (.e. performing extraction without subgroups). marker_cols Unquoted column names representing columns `tof_tibble` (.e. CyTOF protein measurements) included feature extraction calculation. Defaults numeric (integer double) columns. Supports tidyselect helpers. stimulation_col Optional. unquoted column name indicates column `tof_tibble` contains information stimulation condition cell exposed data acquisition. provided, feature extraction broken subgroups stimulation condition (features stimulation condition included features wide format). threshold double integer length 1 indicating threshold used. format string indicating data returned \"wide\" format (default; cluster feature given column) \"long\" format (cluster feature provided row).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_threshold.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract aggregated features from CyTOF data using a binary threshold — tof_extract_threshold","text":"tibble. format == \"wide\", tibble 1 row combination grouping variables provided `group_cols` one column grouping variable, one column extracted feature (proportion cells given cluster marker expression values `threshold`). names column containing cluster features obtained using following pattern: \"{marker_id}@{cluster_id}_threshold\". format == \"long\", tibble 1 row combination grouping variables `group_cols`, cluster id (.e. level) `cluster_col`, marker `marker_cols`. one column grouping variable, one column cluster ids, one column CyTOF channel names, one column (`value`) containing features.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_threshold.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract aggregated features from CyTOF data using a binary threshold — tof_extract_threshold","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         patient = sample(c(\"kirby\", \"mario\"), size = 1000, replace = TRUE),         stim = sample(c(\"basal\", \"stim\"), size = 1000, replace = TRUE)     )  # extract proportion of each cluster in each patient in wide format tof_extract_threshold(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient ) #> # A tibble: 2 × 105 #>   patient `cd45@a_threshold` `cd38@a_threshold` `cd34@a_threshold` #>   <chr>                <dbl>              <dbl>              <dbl> #> 1 kirby                0                 0.0526             0.211  #> 2 mario                0.211             0.105              0.0526 #> # ℹ 101 more variables: `cd19@a_threshold` <dbl>, `cd45@b_threshold` <dbl>, #> #   `cd38@b_threshold` <dbl>, `cd34@b_threshold` <dbl>, #> #   `cd19@b_threshold` <dbl>, `cd45@c_threshold` <dbl>, #> #   `cd38@c_threshold` <dbl>, `cd34@c_threshold` <dbl>, #> #   `cd19@c_threshold` <dbl>, `cd45@d_threshold` <dbl>, #> #   `cd38@d_threshold` <dbl>, `cd34@d_threshold` <dbl>, #> #   `cd19@d_threshold` <dbl>, `cd45@e_threshold` <dbl>, …  # extract proportion of each cluster in each patient in long format tof_extract_threshold(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     format = \"long\" ) #> # A tibble: 208 × 4 #>    patient cluster_id channel values #>    <chr>   <chr>      <chr>    <dbl> #>  1 kirby   a          cd45    0      #>  2 kirby   a          cd38    0.0526 #>  3 kirby   a          cd34    0.211  #>  4 kirby   a          cd19    0      #>  5 kirby   b          cd45    0.2    #>  6 kirby   b          cd38    0      #>  7 kirby   b          cd34    0.133  #>  8 kirby   b          cd19    0.267  #>  9 kirby   c          cd45    0.0556 #> 10 kirby   c          cd38    0.111  #> # ℹ 198 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_best.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the optimal hyperparameters for an elastic net model from candidate performance metrics — tof_find_best","title":"Find the optimal hyperparameters for an elastic net model from candidate performance metrics — tof_find_best","text":"Find optimal hyperparameters elastic net model candidate performance metrics","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_best.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the optimal hyperparameters for an elastic net model from candidate performance metrics — tof_find_best","text":"","code":"tof_find_best(performance_metrics, model_type, optimization_metric)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_best.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the optimal hyperparameters for an elastic net model from candidate performance metrics — tof_find_best","text":"performance_metrics tibble performance metrics elastic net model (wide format) model_type string indicating type glmnet model trained. optimization_metric string indicating performance metric used select optimal model.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_best.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the optimal hyperparameters for an elastic net model from candidate performance metrics — tof_find_best","text":"tibble 3 columns: \"mixture\", \"penalty\", column containing chosen optimization metric. returned tibble 1 column, means 1 mixture/penalty combination yielded optimal result (.e. tuning procedure resulted tie).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_cv_predictions.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate and store the predicted outcomes for each validation set observation during model tuning — tof_find_cv_predictions","title":"Calculate and store the predicted outcomes for each validation set observation during model tuning — tof_find_cv_predictions","text":"Calculate store predicted outcomes validation set observation model tuning","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_cv_predictions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate and store the predicted outcomes for each validation set observation during model tuning — tof_find_cv_predictions","text":"","code":"tof_find_cv_predictions(   split_data,   prepped_recipe,   lambda,   alpha,   model_type,   outcome_colnames )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_cv_predictions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate and store the predicted outcomes for each validation set observation during model tuning — tof_find_cv_predictions","text":"split_data `rsplit` object rsample package. Alternatively, unsplit tbl_df can provided, though recommended. prepped_recipe trained recipe lambda single numeric value indicating penalty (lambda) value used make predictions alpha single numeric value indicating mixture (alpha) value used make predictions model_type string indicating kind elastic net model build. continuous response predicted, use \"linear\" linear regression; categorical response 2 classes predicted, use \"two-class\" logistic regression; categorical response 2 levels predicted, use \"multiclass\" multinomial regression; time--event outcome predicted, use \"survival\" Cox regression. outcome_colnames Quoted column names indicating columns data fit represent outcome variables (others assumed predictors).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_cv_predictions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate and store the predicted outcomes for each validation set observation during model tuning — tof_find_cv_predictions","text":"tibble containing predicted true values outcome validation observations `split_data`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_emd.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the earth-mover's distance between two numeric vectors — tof_find_emd","title":"Find the earth-mover's distance between two numeric vectors — tof_find_emd","text":"Find earth-mover's distance two numeric vectors","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_emd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the earth-mover's distance between two numeric vectors — tof_find_emd","text":"","code":"tof_find_emd(vec_1, vec_2, num_bins = 100)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_emd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the earth-mover's distance between two numeric vectors — tof_find_emd","text":"vec_1 numeric vector. vec_2 numeric vector. num_bins integer number bins use performing kernel density estimation two vectors. Defaults 100.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_emd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the earth-mover's distance between two numeric vectors — tof_find_emd","text":"double (length 1) representing EMD two vectors.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_jsd.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the Jensen-Shannon Divergence (JSD) between two numeric vectors — tof_find_jsd","title":"Find the Jensen-Shannon Divergence (JSD) between two numeric vectors — tof_find_jsd","text":"Find Jensen-Shannon Divergence (JSD) two numeric vectors","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_jsd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the Jensen-Shannon Divergence (JSD) between two numeric vectors — tof_find_jsd","text":"","code":"tof_find_jsd(vec_1, vec_2, num_bins = 100)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_jsd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the Jensen-Shannon Divergence (JSD) between two numeric vectors — tof_find_jsd","text":"vec_1 numeric vector. vec_2 numeric vector. num_bins integer number bins use binning across two vectors' combined range. Defaults 100.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_jsd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the Jensen-Shannon Divergence (JSD) between two numeric vectors — tof_find_jsd","text":"double (length 1) representing JSD two vectors.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_knn.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the k-nearest neighbors of each cell in a high-dimensional cytometry dataset. — tof_find_knn","title":"Find the k-nearest neighbors of each cell in a high-dimensional cytometry dataset. — tof_find_knn","text":"Find k-nearest neighbors cell high-dimensional cytometry dataset.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_knn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the k-nearest neighbors of each cell in a high-dimensional cytometry dataset. — tof_find_knn","text":"","code":"tof_find_knn(   .data,   k = min(10, nrow(.data)),   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\"),   .query,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_knn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the k-nearest neighbors of each cell in a high-dimensional cytometry dataset. — tof_find_knn","text":".data `tof_tibble` `tibble` row represents cell column represents high-dimensional cytometry measurement. k integer indicating number nearest neighbors return cell. distance_function string indicating distance function use nearest-neighbor calculation. Options include \"euclidean\" (default) \"cosine\" distances. .query set cells queried .data (.e. set cells find nearest neighbors within .data). Defaults .data , .e. finding nearest neighbors cells .data. ... Optional additional arguments pass hnsw_knn","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_knn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the k-nearest neighbors of each cell in a high-dimensional cytometry dataset. — tof_find_knn","text":"list two elements: \"neighbor_ids\" \"neighbor_distances,\" n k matrices (n number cells input `.data`. [,j]-th entry \"neighbor_ids\" represents row index j-th nearest neighbor cell -th row `.data`. [,j]-th entry \"neighbor_distances\" represents distance two cells according `distance_function`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_knn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find the k-nearest neighbors of each cell in a high-dimensional cytometry dataset. — tof_find_knn","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  # Find the 10 nearest neighbors of each cell in the dataset tof_find_knn(     .data = sim_data,     k = 10,     distance_function = \"euclidean\" ) #> $neighbor_ids #>         [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] #>    [1,]  447  589    9  804  887  444  700  930   71   164 #>    [2,]  551  945   23  656  473  585  132  830  900   571 #>    [3,]  106  894  825  447    9  149  759  124  567   564 #>    [4,]   25  503  189  368  815  985  734  906  876   670 #>    [5,]  237  491  872  445  495   80  364  698  336   154 #>    [6,]  126  270  502   34   68  271  434  694  592   195 #>    [7,]  421  352  188  746  686  764  869  469   83   410 #>    [8,]  948  824  745  443  536  676  260  671  882   627 #>    [9,]  447  930  950  695  444  785  437  103  225   106 #>   [10,]  951   29   19  949  479  190  777  497  599   443 #>   [11,]  625  257  204  965  166  953  668  748  514   897 #>   [12,]   15  123  248  601  661   51  467  850  708   614 #>   [13,]  699  658  343  361  744  904  169  219  720   362 #>   [14,]  119  404  474  223  431  241  943  473   20    76 #>   [15,]   12  123  614  235  248  661  601  467   51   850 #>   [16,]  940  136  847  969  811  755  122  385  890   982 #>   [17,]   38  279  299  716  901  540  209  134  653   285 #>   [18,]  480  209  194  246  903  598  757  540  417    43 #>   [19,]   29   10  951  314  104  834  770  614  497   190 #>   [20,]   76  558  292  945   14  431  657  404  975   835 #>   [21,]  303  559  255  426  440  218  233   60  318   729 #>   [22,]  460  481  484  763  475  461  815  829  734   578 #>   [23,]  571  760    2  287   65  830  790  585  271   100 #>   [24,]   64  617  487  978  672  855  252  630  902   436 #>   [25,]    4  815  189  503  734  985  368  393  646   342 #>   [26,]  256  961  560  590  298   72  327  980  377    61 #>   [27,]  356  232  803   87  645  966  360  816   46   403 #>   [28,]   69  780  298  510  318  980  256  145  426   452 #>   [29,]   19   10  951  314  104  497  381  834  770   669 #>   [30,]  162  609  329  611   97  732   59   39  779   511 #>   [31,]  600   99  632  212   91  118  315  563  627   408 #>   [32,]   66  437  102   59  785  172  277  950  103   611 #>   [33,]  841  839  428  572  931  519  874  344  954   725 #>   [34,]  602    6  195  592  126  694  684  502  121   504 #>   [35,]  579  976  562  346  642  853  898  849  884   284 #>   [36,]  383  537  648   81  179  659  963  488  183   902 #>   [37,]  912  174  957  703  857  710  295  161  482   108 #>   [38,]  134  376  547  994  395  932   17   41  299   842 #>   [39,]  276  115  665   86   97  891  453  948  625   455 #>   [40,]  460  324  403  484  692  481   22  201  475    75 #>   [41,]   94  932  395  939  485  392  417  802  300   355 #>   [42,]  705  731  429  987  455  713  639  464  865   500 #>   [43,]  673  246  194  480  493   55  598  780  203   674 #>   [44,]  535  117  696  840  282  496  215  440  436   242 #>   [45,]  936  283  228  648  183  846  394  679  176   971 #>   [46,]  803  418  232  411  645  456  147  281  511   784 #>   [47,]  816  800  861  351   57  489  970  509  995   155 #>   [48,]  770  951  565  313  777   19   10   29  823    71 #>   [49,]  541  224  688  920  212  347  547  310  100    91 #>   [50,]  568  810  559  358  717  652  603  367   58   242 #>   [51,]  601  382  248  708  439  859   12  187  669   322 #>   [52,]  153  561  349  823  315  479  949  555  914   771 #>   [53,]  610  922  974  671  434  704  277  745   97   978 #>   [54,]  852  457  924  983  152  981  486  130  629   407 #>   [55,]  515  417  595  858  194  980   43  545   61   598 #>   [56,]  977  553  505  358  593  192  686  961  786   297 #>   [57,]  789  155  970  861  509  908  351  791  196   995 #>   [58,]  105  559  207  717  358  411  297  281  242   652 #>   [59,]  329  277   32   66  974  650  821  611   30   949 #>   [60,]  500  729  475   21  426  827  303   75  218   510 #>   [61,]  980  545  256   72  410  780   26   78  137   858 #>   [62,]  644  334  892  141  164  425  709  406  229   688 #>   [63,]  549  739  986  808  316  622  393  573  196   959 #>   [64,]   24  617  902  679  696  756  907  585  672   436 #>   [65,]  742  100  790  141  310  425  571  760   49   334 #>   [66,]   32  437  785   59  102  695  599  950  103   777 #>   [67,]  947  968  476  128   90  374  158  524  521   604 #>   [68,]  126  971  740  270  438  266    6  102  172    32 #>   [69,]  298  339  478  897  426   28  318  166  145   527 #>   [70,]  185  814  192  594  667  462  234  466  492   977 #>   [71,]  565  313  804  637   48  773  887  770  823   172 #>   [72,]  256  980  780   61  432  782   26  512  377   616 #>   [73,]  285  375  943  330  450  241  975  406  349   498 #>   [74,]  560  701  667  594  185  234   70  814  327   538 #>   [75,]  214  987  865  500  182  727  475  729  827    60 #>   [76,]   20  558  431  292  657   14  975  119  910   945 #>   [77,]  177  990  175  712  934  690  418  456  989   641 #>   [78,]  653  728  512  137  377   61   72  545  327   256 #>   [79,]  563  555  479  451  226  315   31  624  845   301 #>   [80,]  802  491  747  472  389  743  337  495  876   395 #>   [81,]  179  902   36  228  431  648  996  120  311   335 #>   [82,]  494  340  446  674   90  510  374  595  306   843 #>   [83,]  869  290  109  263  293  840  352  117  409   440 #>   [84,]  651  518  435  229  221  398  646  414  954   845 #>   [85,]  808  197   96  573  739  433  451  196   63   497 #>   [86,]  891   39  713  455  115  511  429  276  609   665 #>   [87,]  360  232   46   27  144  803  693  645  147   699 #>   [88,]  400  184  335  856  179  173  691  311  588   643 #>   [89,]  138  261  988  512  470  198  243  903  274   837 #>   [90,]  374  476  510  158   60  493  674   82  682   475 #>   [91,]  212  118  600   31  632  315  920  753  342   817 #>   [92,]  792  596  650  775  183  283  885  329  820   190 #>   [93,]  817  310  893  472  920  344  753  833  633   507 #>   [94,]   41  802  932  300  395  939  876    4  189   368 #>   [95,]  370  661  317  723  963  467  183  689  850    12 #>   [96,]  197  433   85  573  516  819  808  236  739   718 #>   [97,]  611  974  779  855  665  277   39   53  704    30 #>   [98,]  295  548  905  301  108  525  518  229  624   226 #>   [99,]  600  408   31  632  286  627  118  133  725   405 #>  [100,]  310  753  396  688  619  164   65  507  709   287 #>  [101,]  163  879  488  208  441  603  288  638  120   293 #>  [102,]   32  437  740   66  438  597  785  172   59    68 #>  [103,]  504  437   66  785   32  950  140    9  930   102 #>  [104,]  314  378  834   19   29  273  719  614  819   381 #>  [105,]   58  207  281  280  411  358  297  717  866   249 #>  [106,]    3  447    9  894  930  759  143  149  167   124 #>  [107,]  957  929  161  450  150  174   37  321  921   634 #>  [108,]  912   98  226  295  703  845  250   37  161   321 #>  [109,]  218  306  440  869  668  862  426  937  495    21 #>  [110,]  839  238  841  168  532   33  620  931  825   508 #>  [111,]  250  366  718  108  959  781  416  516  321   202 #>  [112,]  886  586  917  531  346  647  853  881  605   979 #>  [113,]  178  917  424  604  886  112  946  517  979   968 #>  [114,]  935  637  561  823  766  910  313  914  774   153 #>  [115,]  665  276  626   39  244  953  625  257   86    11 #>  [116,]  353  415  238  684  508  326  135  509  733   613 #>  [117,]   44  440  840  293  851  436  352  696  288   652 #>  [118,]   91  600   31  212  315  725  133  632  671   753 #>  [119,]  404   14  431  544  462  941  311  474  975   580 #>  [120,]  996  488  394  193  228   81  163  179  648   902 #>  [121,]  733  684  195  893  415  654  507  502  681   839 #>  [122,]  603  208  967  568  131  879   50  459  786   537 #>  [123,]   15   12  877  258  661  614  850  248  467   165 #>  [124,]  268  894  836  414  554  567  143    3  106   954 #>  [125,]  302  245  799  465  127  878  857  346  669   680 #>  [126,]    6   68  592  611  694  270  779  654  504   974 #>  [127,]  669  542  601  381  680  125  838  245  486   322 #>  [128,]  476  409  717  899  593  521  686  374  682    21 #>  [129,]  706  866  711  899  517  222  521  331  967    56 #>  [130,]  412  486  871  981  457  591   54  528  152   983 #>  [131,]  459  967  786  357  603  537  122  866  911   358 #>  [132,]  422  430  656  224  551  796  577  688  474   386 #>  [133,]  725  286  408  244  600  908  118  956   99   864 #>  [134,]  994  939  392   38  209  376  916  616  842    41 #>  [135,]  508  626  326  666  259  490  833  244  343   966 #>  [136,]   16  755  915  847  394  940  659  969  982   963 #>  [137,]  937  377  858  256  862  743   78  432  495   758 #>  [138,]   89  903  757  402  243  540  512  716  470   261 #>  [139,]  944  705  731  254  778  333  465  463  556   639 #>  [140,]  741  597  785  103   66  437  930  390  171    32 #>  [141,]  425  742   65  355   62  644  571  334  289   100 #>  [142,]   50  822  568   44  810  441  972  367  122   559 #>  [143,]  167  836  414  398  567  221  251  887  225   589 #>  [144,]  360  800  489  147   87  156  861  354  816   693 #>  [145,]  452  372  578  405  339  269  461   69  865   478 #>  [146,]  691  170  988  643  655  373  736  764  746   206 #>  [147,]  354  489  162  861  320   46  803  732  458   418 #>  [148,]  628  660  504  126  602   34  438  151   68     6 #>  [149,]  268  567  564    3  520  106  167  894  759   825 #>  [150,]  412  924  243  325  957  635  130  606  591   107 #>  [151,]  597  942  628  449  102  960  982  915  458   354 #>  [152,]  635  591  412  243   54  457  983  245  531   852 #>  [153,]   52  561  349  771  914  823  619  949  315   555 #>  [154,]  350  473  872  698  386    5  223  571  926   364 #>  [155,]  908   57  791  995  864  572  789  509  801   970 #>  [156,]  458  354  693  489  960  147  942  144  715   800 #>  [157,]  901  842  716  423  180  299  818  241  540   943 #>  [158,]  674  332   90  493  510  446  476  203   43   605 #>  [159,]  714  420  320  399  284  927  678  778  584   993 #>  [160,]  687  200  785  930  437  565  172  438    9   140 #>  [161,]  957  174   37  295  108  634   98  912  107   921 #>  [162,]  609   30  732  329  511  969  683  281  649    86 #>  [163,]  101  879  488  120  537  603   36  288  996    81 #>  [164,]  396  398  100  334  709  444  619  836  794   507 #>  [165,]  828  359  787  239  123   15  754  723  612   614 #>  [166,]   11  257  965  897  627  625  729  426  204    69 #>  [167,]  143  251  567  887  695  414  836  589  768   225 #>  [168,]  931  841  319  344  211   33  620  368  876   428 #>  [169,]  526  496  972  608  694  550  535  621  361   672 #>  [170,]  988  373  594  553  206  870  691  261   74   146 #>  [171,]  390  599  793  683  964  724  497  320  768   140 #>  [172,]  740  437  313  565  785  804  914  773   32   102 #>  [173,]  675  186  580  363  795  544  975  471  941   311 #>  [174,]  295   37  957  307  880  161  921  574  375   542 #>  [175,]  177  934  690  399   77  697  990  712  649   213 #>  [176,]  773  832  936  846  283  657  317  910  740   766 #>  [177,]  175  399  934   77  649  990  712  159  690   147 #>  [178,]  917  604  886  275  112  647  468  113  968   898 #>  [179,]   81   36  996  488  120  335  228  648  902   431 #>  [180,]  423  842  157  943  241  728  701  631  818   327 #>  [181,]  341  522  782  780  857  262  583  482  461    72 #>  [182,]  865  986  254  639  463   75  429  333  731   987 #>  [183,]  963  283  659  596   92  792   95  885  775   936 #>  [184,]  896  723  754  689  359  467  311   36  383   870 #>  [185,]   70  814  234  462  192  466  594  848  667   492 #>  [186,]  173  975  761  889  675  580  941  606  574   544 #>  [187,]  992  536  382  455  618  824  260  948   51   443 #>  [188,]  469    7  352  128  421  686  899  409  331   142 #>  [189,]  291   25  985  342  815    4  339  734  916   442 #>  [190,]  951  650  949   10  773  775  770  766  317   596 #>  [191,]  805  923  706  867  991  967  866  911  899   131 #>  [192,]   70  505  977  357  365  185  630  786  553   870 #>  [193,]  120  607  996  698  756  902  336  163  228    81 #>  [194,]  598  417  480   18   43  246   55  209  673   939 #>  [195,]  121  733  684   34  504  654  602  126    6   502 #>  [196,]  970  808   85   63  549  520  789   57  678   739 #>  [197,]   96  433   85  497  573  964  808  236  819   251 #>  [198,]  470  837  606  818  261  988  373   89  941   206 #>  [199,]  909  772  598  413  369  587  194  673   18   416 #>  [200,]  160  565  438  740  687  785  172  773   71   313 #>  [201,]  692  460  829  499  316  622  986  211  182   734 #>  [202,]  267  938 1000  543  534  959  499  549  516   111 #>  [203,]  402  477  246  530  522  854  583  181  341    43 #>  [204,]  625   11  748  257  953  276  627  166  610   527 #>  [205,]  835  285  761  498   73  292  450  943  735   376 #>  [206,]  373  870  655  594  170  553  988  691  643   198 #>  [207,]  280  105  281  641   58  411  249  584  418   566 #>  [208,]  122  879  603  101  441  163   16  685  972   638 #>  [209,]  540  299   18  716  512  842  903  782  134   480 #>  [210,]  294  264  718  554  844  250  268  414  221   167 #>  [211,]  428  931  519  201  622  874  620  532  316   956 #>  [212,]   91   31  118  600  632  347  315  342  541   794 #>  [213,]  258  712  934  877  752  923  272  123  850   661 #>  [214,]   75  727  987  827  956  865  729  475  500   514 #>  [215,]  252  242  453  436  672  535  652  810  617   367 #>  [216,]  765  220  612  762  813  873  697  661  798   883 #>  [217,]  664  662  227  962  884  918  579  952   35   738 #>  [218,]  109  306  426  440  965   21  668   60  514   937 #>  [219,]  615  539  833  704  658  672  608  904  666   953 #>  [220,]  216  873  765  689  165  501  552  754  370   661 #>  [221,]  414  229   84  518  554  398  836  143  301   251 #>  [222,]  517  647  979  706  129  711  331  866  859   854 #>  [223,]  926  569  474  386  943  473  582   14  623   180 #>  [224,]  132  422  688  430  577   49  656  347  541   551 #>  [225,]  328  695  636  771  777  570  914  444  950   681 #>  [226,]  845  646  703  624   79  710  518  108   98   912 #>  [227,]  884  938  806  919  217  240  579   35  998   556 #>  [228,]  928  902  648   81   45  996  971  120  679   910 #>  [229,]  518  221   84  644  651   98  301  398  845   406 #>  [230,]  848  322  269  492  680  262  667  542  478   464 #>  [231,]  464  667  345  478  769  297  318  298  977   897 #>  [232,]  645   46   27  803  863   87  947  682  523   744 #>  [233,]  557  362  242   21  559  255  682  490  640   668 #>  [234,]  814  848  185  542  492   70  941  667  322    74 #>  [235,]   15  471  787  248   12  601  123  467  486   127 #>  [236,]  849  433  819  993  197  678  719  976  516    96 #>  [237,]  491  445  495  282  720  109    5  364  872   306 #>  [238,]  110  116  508  353  839  415  684  326  135   532 #>  [239,]  828  501  363  776  787  165  359  754  723   471 #>  [240,]  707  678  549  351  401  884  236  196  227   918 #>  [241,]  818  837  180  943  423  157  941  880  606   842 #>  [242,]  559  810  215  453  255  652  252  367  233   668 #>  [243,]  635  591  412  522  152   89  782  857  799   341 #>  [244,]  665  626  133  115  276  286  864  257  704   118 #>  [245,]  302  125  859  799  853  346  642  838  751   465 #>  [246,]  480   43  203  402  522  780  194  782  181    18 #>  [247,]  724  697  380  793  399  171  765  265  834   390 #>  [248,]  467   12   51  850  601   15  439  123  859   235 #>  [249,]  566  207  297  139  345  641  468  751  575   105 #>  [250,]  718  108  221   96  251  111  516  959  905   573 #>  [251,]  167  555  768  777  695  143  451   85  197   301 #>  [252,]  453  652  436  487  215  882  505  358  242   630 #>  [253,]  400   88  873  501  689  754  179  184   36   846 #>  [254,]  333  463  944  639  731  556  139  705  182   429 #>  [255,]  668  559  242  426  965   11  440  897   21   453 #>  [256,]   72  980  780   61   26  137  432  377  937    28 #>  [257,]  625   11  204  276  166  627  953  748  115   965 #>  [258,]  877  213  123  850   12  661  752   15  708   934 #>  [259,]  135  508  827  343  490  666  720  514  966   727 #>  [260,]  618  948  676  536    8  820  187  992  882   382 #>  [261,]  988   89  590  274  470  837  170  560  198   423 #>  [262,]  478  701  230  616  680  560  667  782  769   269 #>  [263,]  293  288  736  807  726   83  851  840  352   869 #>  [264,]  312  718  844  210  768  294  250  767  999   788 #>  [265,]  834  993  284  708  849  314  793  562  465    19 #>  [266,]  935  270  971  700  771  804  434   68  114   444 #>  [267,]  499 1000  959  549  534   63  393  202  692   874 #>  [268,]  124  567  149  414  894  836  954  554  143     3 #>  [269,]  372  145  405  230  452  710  809  262  339   578 #>  [270,]  434  971  266    6   68  502  935  577  928   126 #>  [271,]  397    6  502  700  287  270  266  444   68   900 #>  [272,]  649  798  890  683  813  708  732  793  969   650 #>  [273,]  378  719  677  309  104  838  819  308  314   642 #>  [274,]  590  623  261  736  653  512  728  901  157    89 #>  [275,]  898  468  604  917  178   35  886  346  751   579 #>  [276,]  625   39  665  115  257  204  953  244  627   671 #>  [277,]  974   59  570   53  922  745   97  821  671   681 #>  [278,]  387  983  852  981  457  663  528  877  979    54 #>  [279,]   17   38  299  653  737  623  716  901  205   540 #>  [280,]  207  281  411  105  641  418  911  711   58   732 #>  [281,]  411  280  418  207  105  732  511   58  609   811 #>  [282,]  696  840  535  672   44  617  668  364  237   215 #>  [283,]  774  775  183   92  885  648  596  176  963    45 #>  [284,]  993  265  714  159  420  778  849  465  139   708 #>  [285,]  450  943   73  842  880  157  241  180  423   901 #>  [286,]  408  908  133  864  725  600   99  244  454   821 #>  [287,]  507  502  100  893  760  753  577  434  271   310 #>  [288,]  293  726  263  851  736  807  352  117  840   170 #>  [289,]  892  485  141  644   62  425  229   38  376    41 #>  [290,]  495  872  862  869   83  445  109  483  137   851 #>  [291,]  916  189  985  461  339  342  939  815  392   145 #>  [292,]   20  835   76  945  558   14  473  975  350   933 #>  [293,]  288  851  726  263  117  840  352  736  807    83 #>  [294,]  844  305  999  210  788  589  264  887  554   167 #>  [295,]   98  548  905  174  525  307  375  702  108   301 #>  [296,]  532  499  534  620  201  519  211  351  692  1000 #>  [297,]  345  231  464  977  249  105   58   56  769   593 #>  [298,]  318  478  897   69  426  231  464   28  303    26 #>  [299,]  716  540  901  157  842  512  209  728  423   903 #>  [300,]  876   94  368  802  337  344    4   41   80   931 #>  [301,]  555  525  548  518   98  406  905  398  702   349 #>  [302,]  125  245  799  859  346  586  345  583  853   751 #>  [303,]  318   21  426  298  593  255  897  729  961   440 #>  [304,]  498  330  761  975  925  895  721  921  835    71 #>  [305,]  788  844  999  294  721  589  887  525   71   702 #>  [306,]  218  109  440  869  557  409   21  233  495    83 #>  [307,]  542  375  295  174  848  548  234  349  702   680 #>  [308,]  663  877  273  309  834  123  314  614   15   104 #>  [309,]  719  819  273  642  378  562  677  849  838   308 #>  [310,]  817  920  753  100   93  790   49  472  396    91 #>  [311,]  544  431  580  462  795  119  941  797  832   910 #>  [312,]  768  264  104  819  844  378   96  999  718   314 #>  [313,]  565  804  773  172  914   71  637  823  114   771 #>  [314,]  104  834   19   29  614  378  265   15   10   793 #>  [315,]  563  794   31  118  212   91  636  671  600   745 #>  [316,]  622  393  734  986  815   63  956  519  405   201 #>  [317,]  773   95  766  888  176  190  770  895  925   370 #>  [318,]  298  897  426  303  478   69  464  231  729   255 #>  [319,]  168  931  211  300  620  876  670  368    4   344 #>  [320,]  714  159  420  927  683  399  678  649  789   401 #>  [321,]  772  108  416  957   37  912  703  161  529   325 #>  [322,]  848  382  492  439  230  667  466  234  669   542 #>  [323,]  106    3    1  447  759  894    9  271  687   504 #>  [324,]  403   40  919  913  356  692  998  379  575   460 #>  [325,]  482  427  150  413  529  857  530  246  321   924 #>  [326,]  833  415  539  508  135  615  219  684  626   666 #>  [327,]  377  701  569  631  582  728  560  862  590    26 #>  [328,]  225  771  695  914  636  777  444  950  570   153 #>  [329,]   59  650  992   30  536  683   92  948  443   609 #>  [330,]  975  498  761   73  895  304  375  637  921   574 #>  [331,]  946  854  129  517  384  593  655  686  222   899 #>  [332,]  674  446  158  419   90   82  476  374  510   128 #>  [333,]  254  944  556  463  731  139  639  809  705   182 #>  [334,]  164   62  709  688  100  406   65  644  396   619 #>  [335,]  431   81  179   76   20  581  311  544   88   691 #>  [336,]  445  840  698  364  282  696  872  496  263   851 #>  [337,]  389  802  932   80  300   94  395  355  876    41 #>  [338,]  427  878  482  531  407  586  853  857  605   838 #>  [339,]   69  145  442  405  452  189  291  166  478   269 #>  [340,]  858   82  545  595  306  483   61   55  980   290 #>  [341,]  181  522  857  782  583  780  262  586  769   799 #>  [342,]  632  212  189  291  916  651   91   31  442    25 #>  [343,]  666  720  539  833  508  259  658  615  135   219 #>  [344,]  368  876  841  931  168   93  817   33  300   310 #>  [345,]  297  464  231  769  583  318  799  667  478   298 #>  [346,]  976   35  853  562  302  579  245  751  642   881 #>  [347,]  860  212  541  527  538  748  631  230  701   224 #>  [348,]  670  843  747  595  743  475  727    4  937   734 #>  [349,]  561   52  406  153  375  709  823  301  307   688 #>  [350,]  473  154  292  193   20  223    2   14  386    76 #>  [351,]  970   57   47  707  196  240  549  861  816   986 #>  [352,]  686  293  288  117    7  869   56  961   83   553 #>  [353,]  116  415  509  684  995  733  613  238  800   546 #>  [354,]  458  156  960  147  693  489  715  162  151   942 #>  [355,]  742  932  141  395  337   65  389   41  802   425 #>  [356,]   27  324  403  913  919  803   40  232  966   645 #>  [357,]  459  192  131  786  896  870  553  537  977    70 #>  [358,]  505  652  786  459  568  252  882   56  192   453 #>  [359,]  754  828  723  787  165  850  467  752  689   370 #>  [360,]   87  144   46   27  800  147  693  803  232   156 #>  [361,]  550  621  784  385  904  699  367  511  907   215 #>  [362,]  720  658  233  514  557  668  242  490  965   953 #>  [363,]  776  675  723  471  787  239  173  925  828   895 #>  [364,]  698  756  608  585  282  386  830  696  617   336 #>  [365,]  797  630  192  676  462   70  538  814  185   487 #>  [366,]  781  416  111  646   84  959  250  226  554   108 #>  [367,]  810  511  242  568  215   50  361  550  559   784 #>  [368,]  876   25    4  344  931  300  428  519  874   817 #>  [369,]  587  673  998  763  493  909  481  806   43   605 #>  [370,]   95  661  689  850  752  467  963  723   12   659 #>  [371,]  506  121  287  893   23  684  894  733  760   195 #>  [372,]  578  145  452  269  405  461  865  809  339   763 #>  [373,]  206  594  170  988  870  553  655  691  977   198 #>  [374,]  640   90  682  476  947  863  409  128   60    82 #>  [375,]  307  349  406   73  542  295  548  702  561   301 #>  [376,]  547  541  994  644   49   38  406  688  392    73 #>  [377,]  327  631  137  937  701  432  758  527  862   256 #>  [378,]  104  719  273  314  819  838  381  834  309    29 #>  [379,]  575  881  998  403  919  806  324  605  566   586 #>  [380,]  247  724  309  849  819  834  265  314  236   308 #>  [381,]  465  669  497   29  601  378  719  993  127   838 #>  [382,]  439  322   51  187  601  466  492  669  536   260 #>  [383,]  537  659   36  963  648  786  183  131  885   357 #>  [384,]  946  854  655  477  331  764  402  979  424   517 #>  [385,]  784  550  940  361  811  621  847  367  699   715 #>  [386,]  926  569  223  132  422  607  582  224  474   473 #>  [387,]  981  278  983  663  457  528  852  308  828   787 #>  [388,]  612  104  614  273  314  997  308  448  378   391 #>  [389,]  337  932  802  395   80   94  743  355  483   491 #>  [390,]  171  793  683  599  964   66  798   10  813    19 #>  [391,]  513  612  765  750  388  216  552  984  239   165 #>  [392,]  939  916  845  994  291  624  985  134  342   226 #>  [393,]  316  646  815   25  734  874  519  622   63   739 #>  [394,]  996  488  120   45  648  228  679   36  179    81 #>  [395,]  932  389  802  547  758   94   41   49  742   376 #>  [396,]  794  398  709  164  100  651  619  518   84   753 #>  [397,]  700  271  900    1  955  266    2  935  971   945 #>  [398,]  396  555  794  518  709  143  836  301  164    84 #>  [399,]  159  649  934  320  177  714  272  284  420   724 #>  [400,]   88  253  184  179  335   36   81  173  754   311 #>  [401,]  707  240  320  678  714  927  159  171  789   196 #>  [402,]  477  203  854  246  384  522  243  138   89   635 #>  [403,]  324   40  919  575  379  913  356  998   75   182 #>  [404,]  119  796   14  431  474  607  902  430  797   132 #>  [405,]  452  145  372  269  339  578  865  734  632    99 #>  [406,]  709  349  375  301  688  518   52  153  561   541 #>  [407,]  783   54  529  338  427  924  629  852  457   531 #>  [408,]  286   99  133  600  908  725  454  622   31   986 #>  [409,]  128  869   21  306  476   83  374  686  440   109 #>  [410,]   61  545  746   26  590  980  256  961  780   686 #>  [411,]  281  418  280  105  207  811   58  511  367   732 #>  [412,]  591  871  130  152  243  606  150  635  486   880 #>  [413,]  325  530  246  203  427  480   43  529  673   482 #>  [414,]  836  143  221  567  554   84  954  167  435   398 #>  [415,]  684  326  733  602  121  353  613  195  116   779 #>  [416,]  781  772  906  985  321  366  503  598  909   703 #>  [417,]  939   55  194  515  598  432   94  858  595    41 #>  [418,]  411  281  280  811  732  456  207  641   46   105 #>  [419,]  446  674  332  545  410  757  158   43  340   246 #>  [420,]  714  778  159  584  320  927  284  678  639   429 #>  [421,]    7  746  869   83  410  352  188  764  409   263 #>  [422,]  132  224  926  688  430  474  473  551  656   386 #>  [423,]  180  842  157  728  943  241  818  901  701   512 #>  [424,]  384  946  979  113  854  477  222  331  517   655 #>  [425,]  141   65  644   62  742  355  164  396  100   310 #>  [426,]  318  965  897  729   69  298  303  166  255   218 #>  [427,]  338  482  878  530  325  857  531  586  407   522 #>  [428,]  211  622  519  956  725  931  133  874  316    33 #>  [429,]  731  639  713  705  778   42  463  944  254   455 #>  [430,]  551  132  656  796  577  224  422  688  474   404 #>  [431,]  311  544  119  404  462   76  795   14  580   941 #>  [432,]  616  758   72  631  377  256  728  916  137   262 #>  [433,]  197   96  236  819   85  497  573  516  849   381 #>  [434,]   53  502  270  922  974  577  830  704  610   266 #>  [435,]  954   84  451  563  808  651  739  398  646   555 #>  [436,]  252  215  652  453  617  603  358  568  879   630 #>  [437,]  785   66   32  172  102  103  950  740  930   695 #>  [438,]  740  102  660   68  437  172  785   32  200   936 #>  [439,]  466  382  322   51  492  601  814  848  669    70 #>  [440,]  668  109  255  117   21  961  218  426  559   303 #>  [441,]  638  822  972  142  496  879  208  101  469    44 #>  [442,]  527  339  758  937   69  189  166  342  377   631 #>  [443,]  536  824    8  948  479  745  949  454  992   187 #>  [444,]  950  328  771  225  681  619  804  447    9   570 #>  [445,]  336  872  237  290  840  495  282  698  862     5 #>  [446,]  674  332  419   82  158  510  340   43  493    90 #>  [447,]    9  930  444  106  950    1  695  785  328   225 #>  [448,]  997  702  770  925  574  525  888  905  548   471 #>  [449,]  883  915  762  151  813  596  597  982  102   749 #>  [450,]  285  880  842   73  921  174  818  761  157   957 #>  [451,]  808  563  739  435   79   85  573  454  479   408 #>  [452,]  145  578  405  372  865  339  500  461  269    69 #>  [453,]  252  882  652  487  215  242  276  255  625   953 #>  [454,]  821  443  286  408  479  824  536   99  745   563 #>  [455,]  187  992  891  429  705   42  778  536   86   948 #>  [456,]  811  418  989  693  940  411   46  385  990   960 #>  [457,]  983  852   54  981  486  152  130  663  853   531 #>  [458,]  354  156  960  693  715  147  151  162  489   942 #>  [459,]  131  786  357  967  358  505  603  537  192   568 #>  [460,]  484  829  481   40   22  201  692  475  734    75 #>  [461,]  145  291  372  452  578  815  985  339  405   763 #>  [462,]  814  795  185  544  941  311  580   70  797   365 #>  [463,]  254  639  333  944  731  429  182  556  778   139 #>  [464,]  231  345  478  667  318  297  298  769  230   897 #>  [465,]  381  993  139  562  669  601  809  944  125   976 #>  [466,]  439  814  492  382  185  322   70  462  848   234 #>  [467,]  248  850  896   12  752  370   95  723   51    15 #>  [468,]  898  641  275  968  249  751  711  917  280   604 #>  [469,]  188  352    7  441  142   83  101  421  288   263 #>  [470,]  198  837  606  818  261  988   89  241  941   373 #>  [471,]  776  787  675  363  235  574  925  888  723   997 #>  [472,]  920  491  790  633   80   93  310  802  817   876 #>  [473,]  422  223  926  132   14  386  474  404  430   656 #>  [474,]  926  569   14  422  223  132  404  943  860   119 #>  [475,]  843  670   75   60  500   22  348  214  727   460 #>  [476,]  128  593   90  303   21  409  374  863  682   717 #>  [477,]  402  203  854  384  946  635  243  522  583   246 #>  [478,]  298  897  262   69  464  318  231  769  667   230 #>  [479,]  443   10  949   79  563  454   52  497  555   153 #>  [480,]  246   18  194   43  757  209  903   61   55   598 #>  [481,]  484  460  829   22  692   40  763  201  499   587 #>  [482,]  857  427  522  325  338  341  181  878   37   635 #>  [483,]  858  495   78  872  290  137  653  545  515   743 #>  [484,]  829  460  481   22   40  692  201  670  475   503 #>  [485,]   41   94  355  300  289  425  932  141  368   644 #>  [486,]  130  457  127   54  412  235  152  574   37   174 #>  [487,]  882  630  453  252  676  748  652  617  505   625 #>  [488,]  120  996  163  394  179   36  101   81  879   648 #>  [489,]  861  800  147  509  816   47  789  354   57   320 #>  [490,]  827  362  233  645  626  514  135  966  115   658 #>  [491,]   80  472  237  633  495  802  790  666  747     5 #>  [492,]  322  848  466  538  814  230  382  439  234   185 #>  [493,]  510   22  673  674   90  605  158   43  475    28 #>  [494,]   82  348  843  595  340  670  747  475  306   743 #>  [495,]  872  862  137  237  290  937  743  483  491   109 #>  [496,]  696  535  526   44  840  972  638  879  282   730 #>  [497,]  197  964  599  381   10  433  479   29  927    19 #>  [498,]  761  330  921  975  304   73  186  835  574   450 #>  [499,]  692  267  201 1000  296  534  829  481  549   460 #>  [500,]  865  729  452   75  987   60  578   42  475   145 #>  [501,]  754  239  828  359  165  723  689  363  873   787 #>  [502,]  434  507  287  681    6  270  444  266  922   271 #>  [503,]  906  985  815    4   25  189  734  393  829   291 #>  [504,]  103  950  195  654  126  437  660    9   32    68 #>  [505,]  358  652  192  630  882  786  252   56  459   487 #>  [506,]  371  121  684  195   34  733  287  893  271   502 #>  [507,]  893  681  753  502  287  100  619  570  444   922 #>  [508,]  135  326  259  343  666  833  539  626  238   415 #>  [509,]  613  995  155   57  789  791  546  861  831   572 #>  [510,]   28  493   90  843  674  980   60  475  780   595 #>  [511,]  367  609   86   39  810  281  784  411  891   242 #>  [512,]  540  728  903  901  716  157  423  299   78   842 #>  [513,]  391  750  612  765  984  200  388   71  216   317 #>  [514,]  965  827   11  166  727  257  729  362  426   633 #>  [515,]   55  417  858  595  743  483  747   94  389   337 #>  [516,]  573  433   96   85  959  236  739  819  719   197 #>  [517,]  222  647  129  979  706  331  854  711  521   899 #>  [518,]  229  651   84  555  301  845  398  624  221    98 #>  [519,]  874  428  622  393  211  316  931   63  201    25 #>  [520,]  564  964  801  567  831  196  599  197  695   167 #>  [521,]  899  711  129  717  866  706  517  968  805   331 #>  [522,]  341  181  782  857  482  583  243  780  635   799 #>  [523,]  641  207  280  411  418  717  947  281  863   711 #>  [524,]   67   90  158  379  332  374  356  403  674   324 #>  [525,]  702  548  905  301  295   98  823  448  375   555 #>  [526,]  496  608  169  756  696  672   64  535  364   585 #>  [527,]  442  897  347  748  166   69  204  377  478    11 #>  [528,]  981  130  387  983  457   54  812  852  629   871 #>  [529,]  783  407  325  321  427  924  482  338  413   772 #>  [530,]  203  427  413  482  112  325  338  477  402   531 #>  [531,]  853  245  346  878  852  112  152  983  338   838 #>  [532,]  296  620  211   33  572  428  519  841  995   931 #>  [533,]   18  480  757  150  209  325  413  722  138   903 #>  [534,] 1000  499  296  267  549  959  202  874   63   519 #>  [535,]  696   44  672  282  215  496  658  436  242   840 #>  [536,]  443  992  948  824  187    8  260  382  618   455 #>  [537,]  383  786  603  131  459   36  357  659  797   648 #>  [538,]  860  492  676  748  347  365  814   74  630   561 #>  [539,]  833  615  666  219  343  326  633  720  704   658 #>  [540,]  299  512  716  901  209  842  903  157  728   423 #>  [541,]   49  347  212  688  631  376  547  758  342   624 #>  [542,]  307  848  680  234  230  322  127  375  710   492 #>  [543,]  202  938  369  806  587  998  227  662  267  1000 #>  [544,]  795  580  941  311  462  431  119  814  185   173 #>  [545,]   61  410  980   78  256  858   72   26  780   137 #>  [546,]  831  613  791  509  654  801  103  995  789   611 #>  [547,]  376  926  395  541   49  631  943  422  758    38 #>  [548,]  905  525  702  295   98  301  375  307  448   555 #>  [549,]   63  959  196  707  267  573  739   85  986   808 #>  [550,]  361  621  784  385  907  847  367  904  511   940 #>  [551,]  430  656  132  577  796  422  935  224  688   928 #>  [552,]  165  765  612  220  828  239  391  614  388   258 #>  [553,]  870  170  373  977  594  206   56  192  357   988 #>  [554,]  414  221  836  143   84  124  229  268  210   398 #>  [555,]  301  398  563   79  518  794  153   52  315   479 #>  [556,]  333  944  254  463  139  881  809  731  705   976 #>  [557,]  233  362  744  640  682   21  242  559   44   306 #>  [558,]   20   76  657  945  910  928  404  551  119    14 #>  [559,]  242  255  810   58  652   21   50  568  358   233 #>  [560,]   74  701  769  667  594  262   26  988  327   478 #>  [561,]   52  153  349  823  114  914  949  771  375   538 #>  [562,]  642  976   35  579  838  465  719  346  993   853 #>  [563,]  315  451  636   79  555   31  794  435  479   600 #>  [564,]  520  801  831  567  964  196  791  970  954   821 #>  [565,]  313  773   71  172  804   48  740  914  770   637 #>  [566,]  249  575  207   42   58  500  345  863  297   254 #>  [567,]  954  564  414  167  520  143  435  836  251   808 #>  [568,]   50  810  358  603  652  367  559  459  436   786 #>  [569,]  582  223  327  474  926  386  180  860  631   701 #>  [570,]  636  681  277  922  821  225  950  328  315   974 #>  [571,]   23   65  742  141    2  334  760  790  422   100 #>  [572,]  995  155  791  831  908  970  801   33   57   509 #>  [573,]  739   85  516  808   96  433   63  197  959   451 #>  [574,]  471  997  448  675  307  174  888  921  925   186 #>  [575,]  881  566  254  333  379  919  139  249  556   463 #>  [576,]  875  237  445  306  557  720  282   44    5    83 #>  [577,]  656  430  551  830  224  132  434  922  619   796 #>  [578,]  452  372  145  865  405  461  500  269  333   339 #>  [579,]   35  976  562  642  346  849  884  236  853   993 #>  [580,]  795  544  941  311  462  173  814  119  675   431 #>  [581,]  241  623   14  470  198  157  837  901  274   943 #>  [582,]  569  726  851  862  327  386  223  377  590   607 #>  [583,]  854  769  345  799  341  522  586  302  181   593 #>  [584,]  420  803  778  713  639  207  429  463  891   159 #>  [585,]  830  756  656  608  364  577   64   24  796   270 #>  [586,]  605  881  878  583  302  341  125  112  346   522 #>  [587,]  909  369  481  906  763  416  673  503  484   598 #>  [588,]  643  184  706  896  856  655  870  206  691   553 #>  [589,]  887  999  167  844  143    1  930  447  305     9 #>  [590,]  274  261   26  327  988  726  961  560  582   170 #>  [591,]  152  635  412  243  871  799  130  245  979   486 #>  [592,]  694  779  126  855  602   34    6  611  621   904 #>  [593,]  686  303   56  961  977  297  769  345  583   331 #>  [594,]  373  988  170  977  206  553  667   70  870   769 #>  [595,]  843  743  858  348  747   55  937  137  980   670 #>  [596,]   92  183  650  792  963  283  190  775  915   762 #>  [597,]  102  140  151   32  762   66  390  437  683   103 #>  [598,]  194  417  673  772  939   43  416  906  985    18 #>  [599,]  964  777  695  497   10   66  390  768  520   171 #>  [600,]   31  118   99  632   91  725  408  212  133   286 #>  [601,]   51  669  382  439   12  248  708  381  465   859 #>  [602,]   34  592  195  415  684  126  694  779  733     6 #>  [603,]  786  122  537  879  568  459  131  436  358    50 #>  [604,]  917  178  275  886  968  468  112  898  379   346 #>  [605,]  586  881  998  878  578  763  575  372  341   556 #>  [606,]  837  818  880  470  198  241  412  941  871   157 #>  [607,]  796  404  386  902  582  617  569  656  797    64 #>  [608,]  756  364  585  219  830  526  698  672  539   615 #>  [609,]  162  732   30  511  281  329  969   39   86   792 #>  [610,]  671   53  922  745  204  704  276  748  118   953 #>  [611,]  779   97  974  654   30  277   59  126  855   613 #>  [612,]  765  614  165  317  388  216  661  513   15   391 #>  [613,]  509  864  791  546  779  611  155   97  654   831 #>  [614,]   15  314  123  612  834   12   19  661  104   793 #>  [615,]  219  539  633  666  704  833  953  626  665   720 #>  [616,]  631  432  262  916  701  758  994  423  180   782 #>  [617,]   24   64  696  672  487  252  436  630  215   953 #>  [618,]  260  820  992  187  948  792  536  650    8   455 #>  [619,]  794  922  709  153  315  753  771  636  100   570 #>  [620,]  532  296  211  931  168  519  319  428  874   841 #>  [621,]  361  550  784  904  907  855  385  847  511   715 #>  [622,]  316  986  428  519  408  956  725  393   63   908 #>  [623,]  274  653  901  157  728  223  943  423  716   180 #>  [624,]  845  916  226  710  518  392  703   79  541    98 #>  [625,]  257  204   11  276  748  953  627  166  115   665 #>  [626,]  115  665  244  615  904  704  953  276  135    39 #>  [627,]  824  625  257  748  166  204  276    8   11    99 #>  [628,]  148  660  151  126  438   68  982  602  749   592 #>  [629,]  812  852   54  924  981  983  457  407  528   387 #>  [630,]  365  487  797  882  505  676  192  252  652   617 #>  [631,]  758  616  377  701  432  327  180  347  423   541 #>  [632,]  600   31   99  342  956  212   91  118  405   725 #>  [633,]  615  666  953  472  920  514  720  204  539    11 #>  [634,]  161  929  107  957  321  783  108  174  921   295 #>  [635,]  152  591  243  799  412  522  482  979  857   245 #>  [636,]  570  225  563  328  681  315  794  821  619   922 #>  [637,]  804  114  823  313  771  914  935  561  153   349 #>  [638,]  441  972  496  879  822  208  730  685  101   163 #>  [639,]  463  429  254  713  731  778  944  705  182   333 #>  [640,]  682  744  557  863  374  233   60   21  306   827 #>  [641,]  280  468  207  249  523  898  711  281  105   584 #>  [642,]  562  838  976  719  853   35  579  309  465   245 #>  [643,]  655  856  206  691  588  146  373  870  170   553 #>  [644,]   62  229  376  518  406  396  709  651  425   398 #>  [645,]  863  490  232  803  682  891   58   46  713   233 #>  [646,]  393  226  845  651  739   84   25  435  342   316 #>  [647,]  979  222  517  859  751  245  302  854  112   799 #>  [648,]  902  885  383   36  283  228  774   81  537    45 #>  [649,]  272  399  683  732  798  320  813  890  162   177 #>  [650,]   92  190  329  596  792  775  992  618   59   536 #>  [651,]   84  518  342  396  646  845  435  229  794   398 #>  [652,]  252  358  505  453  436  882  242  487  559   215 #>  [653,]   78  728  623  274  512  903  327  901  540   590 #>  [654,]  681  950  611  277  974  570  821   97  546   791 #>  [655,]  206  373  643  384  988  170  331  553  870   146 #>  [656,]  132  796  577  430  551  830  224  585  422   386 #>  [657,]  910  832  558  928  176  114  774  935  228   895 #>  [658,]  362  720  672  219  904  615  535  215  626   666 #>  [659,]  963  383  183  792  537   36  820  755  370    95 #>  [660,]  438  148  504  628   68  103  102  740  437   126 #>  [661,]  370   95   12  123  850  798   15  614  467   752 #>  [662,]  962  217  227  938  806  579   35  664  886   884 #>  [663,]  308  457  309  387  983  642  273  877  853   852 #>  [664,]  217  884  952  918  227  849  662  579  962    35 #>  [665,]  115  244  276  626  953   39  704  625   97   257 #>  [666,]  720  539  633  615  343  833  219  626  514   362 #>  [667,]  231  769  848  464  560  322  594   70   74   185 #>  [668,]  255  440  965   11  897  426  204  218  453   242 #>  [669,]  127  601  381  382  322  439  465   51   29   542 #>  [670,]  348  843  475  727    4  734  747  595  829   214 #>  [671,]  745  610  922   53    8  315  276  118  748   824 #>  [672,]  535  215  696  617  282  658  953  219   24   904 #>  [673,]   43  493  369  598  194  246  587   22   55   510 #>  [674,]  446  158  332  510  493   90   82  419   43   673 #>  [675,]  173  471  363  776  186  580  574  787  723   795 #>  [676,]    8  948  487  978  882  260  630  365  538   824 #>  [677,]  273  309  719  819  378  838  104  312  642   663 #>  [678,]  927  714  463  707  420  639  778  196  159   236 #>  [679,]  907  885   64  648  270  228  971   24  855    45 #>  [680,]  542  848  710  230  262  857  322  667  234   799 #>  [681,]  570  950  636  654  507  444  225  277  922   502 #>  [682,]  863  640   21  233  645  557   60  374  947   559 #>  [683,]  793  390  329  798  272  813  171  650  320    59 #>  [684,]  733  415  121  195  326  602   34  893  353   839 #>  [685,]  972   16  208  385  638  940  550  847  136   122 #>  [686,]  352  593  961   56  331  553  977  440  303   869 #>  [687,]  160  200  660  438  785    1  447  740  930     9 #>  [688,]  224  709  422   49  430  132  100  406  541   619 #>  [689,]  370  873  754   95  723  752  963  661  850   659 #>  [690,]  990  175  177  991  213  712  934   77  989   649 #>  [691,]  170  206  870  373  146  643  198  553  795   544 #>  [692,]  499  201  460  481  829   40  484  913  267   324 #>  [693,]  960  456  354  458  989  147  715  156   46   811 #>  [694,]  592  855  779  126    6  704  904  907  219   611 #>  [695,]  777  225  328  599  964  930   66  914  167   950 #>  [696,]  282  535  672  617  840   44  496  215  436    64 #>  [697,]  247  724  765  213  216  813  798  934  258   175 #>  [698,]  364  756  336  386  608  607  585  282  840   696 #>  [699,]  361  784  385  550  367  972  621  810   13   658 #>  [700,]  900  935  266  397  804  971  637  271  313   114 #>  [701,]  560   74  262  631  327  377  616  180  423   860 #>  [702,]  525  548  905  448  823  997  301  375  770   307 #>  [703,]  710  912  226  845  857   37  624  680  108   916 #>  [704,]   53  665  615  610  953  244  855   97  219   626 #>  [705,]  731  944  809   42  429  139  778  254  639   333 #>  [706,]  129  222  866  711  517  899  521  967  331   647 #>  [707,]  240  678  549  401  351  196  236  927  433   884 #>  [708,]   51  601   12  992  187  265  751  859  284   618 #>  [709,]  406  794  688  619  396  349  398  153  555   301 #>  [710,]  703  680  912  624  269  857  542  226  845    37 #>  [711,]  866  129  521  899  706  717  517  249  280   105 #>  [712,]  934  923  213  911  641  258  280  898  468   990 #>  [713,]  429  639  891  731   42   86  778  987  584   182 #>  [714,]  159  420  927  320  678  284  778  993  849   584 #>  [715,]  982  784  621  960  458  385  361  779  550   162 #>  [716,]  901  299  157  540  842  512  423  818  728   903 #>  [717,]   58  899   50  521  711  105  559  866  863   129 #>  [718,]  250   96  959  251  264   85  197  111  312   221 #>  [719,]  378  838  819  309  642  273  562  381  104   976 #>  [720,]  362  666  658  343  633  514  615  237  539   827 #>  [721,]  997  305  448  788  925  304  702   71  525   921 #>  [722,]  138  150  856   89  871  470  198  606  735   889 #>  [723,]  363  359  754   95  370  467  787  471  689   828 #>  [724,]  247  793  171  380  390  697  399  798  265   813 #>  [725,]  133  600  286  408  908  118  956  632   99   622 #>  [726,]  851  582  293  288  736  807  590  862  263   274 #>  [727,]  214  956  514   75  987  827  734  166  670   475 #>  [728,]  512   78  423  653  180  327  540  377  157   842 #>  [729,]  500  426  965  987  166  318   60  514  255    75 #>  [730,]  496  336  638  441  840  101  263  193  526   163 #>  [731,]  705  429  944  639   42  254  809  139  333   463 #>  [732,]  609  162  281   30  418  969  511  272  890   992 #>  [733,]  121  684  195  415  825  546  654  995  893   602 #>  [734,]  815  316  405  956   25  393  189  727  452   622 #>  [735,]  889  450  285  880  761  186  606  716  901   157 #>  [736,]  807  726  263  288  274  293  590  146  851   746 #>  [737,]  581  889  735  623  901  274  807  716  722   157 #>  [738,]  918  217  202  240  227  707  664  952  938   534 #>  [739,]  808  573  451   85   63  646  435  959  393    79 #>  [740,]  172  438  102   68  773  437  565  313  266   971 #>  [741,]  140  597  103  785  759  171   66  930  437   390 #>  [742,]   65  355  141  932  790  395  547   49  571   425 #>  [743,]  747  595  858  937  137  348   80  843  495   802 #>  [744,]  557  640  233  682  490  863  875  232  645   362 #>  [745,]  671    8  824  610  443  948  922  315   53   276 #>  [746,]  410  764  146  590  274  736    7   89  421   545 #>  [747,]  743  348  595   80  843  937  858  670  137   495 #>  [748,]  204  625  627   11  257  487  527  882  538   860 #>  [749,]  438  936  449  660  628  846  883  955   45   200 #>  [750,]  513  391  999  844  388  612  200  788   48    71 #>  [751,]  859  346  245  708  302  249  898  139  465    51 #>  [752,]  850  467  370  896  661  248  689  359  755   123 #>  [753,]  507  310  922  118  100  619   91  817  794   920 #>  [754,]  359  689  723  501  828  165  184  370  850   752 #>  [755,]  890  969  659  963  911  923  752  792  915   820 #>  [756,]  585  608  364  698  830   64  526  656   24   617 #>  [757,]  903  480  138  545  246   18  746  410   61   540 #>  [758,]  631  442  432  377  616  527  541  916  937   137 #>  [759,]  106    3  149  741    9  894  447  825  323   930 #>  [760,]  790  287  830   65   23  310  100  472  585    93 #>  [761,]  498  921  330  186  975   73  450  304  285   835 #>  [762,]  813  798  793  596  597  683  102  390  915   449 #>  [763,]  461   22  372  578  605  481  815  145  452   985 #>  [764,]  746  384  146  655  946    7  643  331   89   138 #>  [765,]  612  216  614  552  165  391  697  220  762   661 #>  [766,]  888  895  114  775  773  317  466  832  774   770 #>  [767,]  380  264  312  247  724  171  768  750  819   390 #>  [768,]  251  599  312  777  964  167  695  197  887   999 #>  [769,]  667  231  560  594  478  345  464  583  298   799 #>  [770,]   48  951  888  823  448   19  702  190   29    10 #>  [771,]  914  328  804  153  225  444  823  619  637   949 #>  [772,]  321  416  598  134  909  781  194  108  939   325 #>  [773,]  565  313  176  317  172  190  766  740  114   770 #>  [774,]  283  775  928  910  902  766  114  978  648   657 #>  [775,]  774  283   92  650  766  190  978  949  773   676 #>  [776,]  471  363  787  675  925  239  723  828  888   574 #>  [777,]  695  599  225  328  964   10  914  949  479   951 #>  [778,]  639  420  429  731  139  705  463  455  713   584 #>  [779,]  611   97  855  694  592  904  613   30  621   974 #>  [780,]  980   72  256   28  782  181   61  341   26   522 #>  [781,]  416  366  906  985  503  646  393  267  226   815 #>  [782,]  181   72  522  780  341  262  616  512  256   857 #>  [783,]  529  407  321  325  924  427  929   54  338   772 #>  [784,]  385  361  550  621  511  940  367  715  699   811 #>  [785,]  437   66  930  172   32  102  103    9  695   140 #>  [786,]  459  603  537  131  358  357  505  192  652   967 #>  [787,]  828  471  776  235  363  359  165  723  239   675 #>  [788,]  305  844  721  999  294  312  589  887  750   388 #>  [789,]   57  155  927  791  970  801  509  196  864   831 #>  [790,]  760  472  920  310   65   49  224  100  742   491 #>  [791,]  801  831  864  155  908  821  995  572  613   286 #>  [792,]   92  820  969  650  618  596  890  885  183   963 #>  [793,]  798  390  683  813  171   19  762  834  272   265 #>  [794,]  315  619  396  709  398  636  563  555  753   153 #>  [795,]  580  544  941  462  311  814  185  431  837   119 #>  [796,]  656  404  430  132  607  551  928  902  577   224 #>  [797,]  365  630  462  902  192  676  311  814  538    70 #>  [798,]  813  793  272  762  661  683  650  596  614   390 #>  [799,]  302  125  245  667  769  583  345  680  322   859 #>  [800,]   47  489  816  861  144  509  353  360  147    57 #>  [801,]  791  831  821  564  908  520  864  155  286   570 #>  [802,]   80  389  395   94  932  337  876  472  743   491 #>  [803,]  584   46  645  713  232  207  147  891  418    86 #>  [804,]  313  771  637  914  172  565  328  444  935   266 #>  [805,]  973  521  899  191  706  867  711  129  866   517 #>  [806,]  998  938  227  881  379  605  919  556  878   575 #>  [807,]  736  726  263  288  293  146  274  851  590   582 #>  [808,]  739  451   85  573   63  196  435  954  563   197 #>  [809,]  944  705  731  333  269  372  254  556  139   429 #>  [810,]  367  242  568  559  215   50  652  511  252   436 #>  [811,]  940  456  411  385  418  784  281  969   16   511 #>  [812,]  629  981  924   54  528  852  407  457  983   387 #>  [813,]  762  798  793  272  683  596  390  649  661   915 #>  [814,]  185  234  462   70  466  492  848  941  439   322 #>  [815,]  734  503   25  985  189  393  316  461  906   291 #>  [816,]  861   47   57  800  966  351  509  489  155   789 #>  [817,]  310  920   93  753   91  118  725  396  212   472 #>  [818,]  837  880  606  241  157  470  423  842  198   180 #>  [819,]  719  433  309  236  378  849   96  104  197   273 #>  [820,]  618  792  260  969  459   92  650  890  992   659 #>  [821,]  801  454  570  864  791  286  277  636  908    59 #>  [822,]  972  441  142  638   44  496  699  535  557   744 #>  [823,]  561  914  153  702  637   52  114  771  949   770 #>  [824,]    8  443  536  948  627  745  187  676  671   454 #>  [825,]  894    3  733  839  121  572  831  995  546   149 #>  [826,]  101  208  488  163  441  638  469  879  122    36 #>  [827,]  514  214  727  490  729   75  965   60  362   987 #>  [828,]  787  359  165  239  754  723  776  363  471   501 #>  [829,]  484  460  481  201  692   22  503  815  734   670 #>  [830,]  585  577  656  756  434  608  132  270  551   796 #>  [831,]  801  791  564  546  995  572  520  155  821   970 #>  [832,]  910  657  176  895  766  311  774  283  114   888 #>  [833,]  539  326  615  219  666  704  343  633   93   626 #>  [834,]  314  265  104   19  614   29  378  993  793    15 #>  [835,]  292  205  975   20  945  761  498   76   14   330 #>  [836,]  414  143  398  221  167  554   84  164  567   396 #>  [837,]  470  818  198  606  241  941  261  880  234   988 #>  [838,]  642  719  562  853  378  245  127  976  273   381 #>  [839,]  841   33  572  825  995  110  121  733  893   532 #>  [840,]  282  696  851  117   44  336  293  535  445   496 #>  [841,]   33  839  344  168  931  428   93  572  211   519 #>  [842,]  157  423  180  716  901  299  540  818  943   880 #>  [843,]  348  475  595  670  747  743  727  510   28    60 #>  [844,]  999  294  305  788  589  887  312  768  264   167 #>  [845,]  226  624  392  518  646  916  651  703  710    79 #>  [846,]  936  176   45  955  958  657  832  933  971   283 #>  [847,]  907  982  940  550   16  885  385  621  969   784 #>  [848,]  322  234  492  542  230  680  667  814  185   382 #>  [849,]  236  993  819  265  284  433  562  579  309   976 #>  [850,]  752  467  248  370  661   12  123  896   95   359 #>  [851,]  726  293  582  288  840  862  117  590  961   440 #>  [852,]  983  457   54  981  531  629  152  924  278   853 #>  [853,]  531  642  245  346  838  562  976  302  125   878 #>  [854,]  583  384  946  477  979  331  517  402  647   593 #>  [855,]   97  694  779  907  904  704  974  621  611    53 #>  [856,]  643  691  146  655  588  198  206  470  764    88 #>  [857,]  482  341  522  680  181  710  703   37  125   782 #>  [858,]  137  595  743  937  483  980  256  545   61    55 #>  [859,]  751  245   51  302  601  248  708  647  799   125 #>  [860,]  347  538  748  701  474  527  492   74  230   569 #>  [861,]  816   57  489   47  509  789  800  351  147   155 #>  [862,]  582  377  327  137  851  937  495  109  290   590 #>  [863,]  682  645  947  640  717   21  566  233   60    58 #>  [864,]  286  791  908  155  821  244  613  133  408   801 #>  [865,]  452  578  500  182  405   75  987  145  372   333 #>  [866,]  711  967  129  911  706  899  459  131  105   521 #>  [867,]  706  805  191  222  517  711  968  647  521   973 #>  [868,]  169  730  638  526  496  822  972  441  576    13 #>  [869,]   83  109  440  290  409  352  306  293  686   117 #>  [870,]  206  553  373  594  357  170   70  192  185   977 #>  [871,]  412  130  591  606  198  470  675  837  152   243 #>  [872,]  445  495  290  483  862    5  237  336  491   698 #>  [873,]  689  370  220  754   95  936  963  183  661   216 #>  [874,]  519  393  428  622  316  931  211   63   25   646 #>  [875,]  576  306  744  557  237  640  720  343  233   362 #>  [876,]  368  300  344  802    4   94  472  817   25   931 #>  [877,]  258  123  308   12   15  213  850  663  708   265 #>  [878,]  338  427  586  125  605  853  346  531  881   482 #>  [879,]  603  163  436  208  122  568  101  972  537   786 #>  [880,]  818  606  450  241  837  842  157  285  174   423 #>  [881,]  605  575  586  556  333  998  379  346  254   878 #>  [882,]  487  453  252  676  630  652  505  948    8   748 #>  [883,]  449  915  762  813  216  596  749  873  755   136 #>  [884,]  227  579  849   35  236  240  159  284  664   976 #>  [885,]  648   92  792  283  907  679  978  183  847   774 #>  [886,]  178  112  917  604  275  346  531   35  853   579 #>  [887,]  589  999  167  695  143  930  251  777  844    48 #>  [888,]  895  925  766  770  317  448  471  823  997   574 #>  [889,]  735  186  173  606  581  761  880  675  871   450 #>  [890,]  969  755  272  792  820  915  732  911  596   940 #>  [891,]   86  713  455   39  429  115   42  511  987   639 #>  [892,]   62  289  644  229  554  141  221  425  376   334 #>  [893,]  507   93  753  121  287  310  817  681  502   100 #>  [894,]    3  825  124  106  268  149  567  836  839   121 #>  [895,]  888  925  766  832  317  330  114  770  975   773 #>  [896,]  467  357  184  850  752  248  870  131  659   723 #>  [897,]  318  298  426  478   69  166  527  965   11   668 #>  [898,]  275  468  751  641   35  284  346  579  249   976 #>  [899,]  521  129  866  717  711  706  967  331  517    50 #>  [900,]  700  935  397  945  266  971  551  637  558   804 #>  [901,]  716  157  299  540  842  512  423  623  728   180 #>  [902,]  648  928  228  797   81  796  774  404   64   607 #>  [903,]  512  540  757  138  716  299   89   78  901   728 #>  [904,]  621  855  626  658  115  665  361  779  219   704 #>  [905,]  548  525  702  295   98  301  448  307   79   997 #>  [906,]  503  985  815    4  781   25  416  189  461   393 #>  [907,]  847  621  855  550  885  679   64   24  361   436 #>  [908,]  286  155  864  408  791  725  133  801  622   821 #>  [909,]  587  416  598  906  772  199  781  369  503   673 #>  [910,]  657  832  928  774  114  558  766  176  311   283 #>  [911,]  923  967  866  280  131  459  755  711  890   820 #>  [912,]  703   37  710  108  295  226  127   98  857   905 #>  [913,]  324  692  919  403   40  499  201  351  356   182 #>  [914,]  771  949  328  823  153  804  225  313  172   777 #>  [915,]  449  890  596  969  883  982  755  813  762   792 #>  [916,]  291  392  616  624  939  342  845  189  985   432 #>  [917,]  604  178  886  275  112  968  468  647  517   898 #>  [918,]  240  664  227  884  707  217  738  913  952   351 #>  [919,]  463  254  403  324  575  639  333  182  556   913 #>  [920,]  310  817  472   91   49  753  790  212  633   118 #>  [921,]  761  498  174  450  574  330   73  880  186   375 #>  [922,]   53  671  610  619  570  745  974  434  277   753 #>  [923,]  911  712  755  866  967  752  890  213  280   191 #>  [924,]   54  852  150  629  152  407  457  983  130   812 #>  [925,]  888  895  997  776  471  448  770  317  574   363 #>  [926,]  223  474  422  386  569  547  943  473  132   224 #>  [927,]  678  714  320  420  497  789  778  159  454   429 #>  [928,]  774  910  228  902  971  657  796  935  558   551 #>  [929,]  107  957  634  321  161  783  529  772   37   325 #>  [930,]    9  447  785  695  437   66  950  887  777   103 #>  [931,]  168  211  368  428  519  344  841  874   33   876 #>  [932,]  395  389  802   41  355   94  337  742  547    38 #>  [933,]  657  558  958   76  846   20  945  832  304   292 #>  [934,]  712  399  213  177  258  175  649  898  272   877 #>  [935,]  266  114  700  971  928  900  804  551  637   771 #>  [936,]   45  846  176  183  283  596  963  740  438   773 #>  [937,]  137  377  442  743  256   69  858  527  862   758 #>  [938,]  806  227  202  998  556  881  763  516  878   267 #>  [939,]  392  916  291  985  134  417  189  994  432    94 #>  [940,]  811  385   16  969  847  784  550  456  890   609 #>  [941,]  795  544  580  462  814  837  234  119  241   185 #>  [942,]  151  354  458  597  156  741  960  628  449   140 #>  [943,]  180  423  241  285  157  842  474  223  926    73 #>  [944,]  333  254  731  809  705  463  556  139  639   429 #>  [945,]  558   20  900  292   76  551    2  835  657   473 #>  [946,]  384  331  854  477  764  655  402  517  979   424 #>  [947,]  863  682  374  523  232  128  717  476  640    67 #>  [948,]    8  536  824  260  676  443  745  882  992   978 #>  [949,]  914  951   10  443  479  190  153  823   52   561 #>  [950,]  681  444  225  654  328  570    9   66  437   695 #>  [951,]   10  190   19  949   29  770   48  777  479   914 #>  [952,]  664  918  217  738  401  884  240  380  707   399 #>  [953,]  204  625  665  276   11  115  257  704  610   453 #>  [954,]  435  567  414  808   84  451  836  739  564   563 #>  [955,]  846  971  900  700  397   45  438   68  176   958 #>  [956,]  632  727  725  133  734  600  316  428  622    99 #>  [957,]  174  161   37  107  450  321  295  880  994   929 #>  [958,]  846  933  955  176  200  984  936  565   71   513 #>  [959,]  549  573  739   63   85  267  516  808   96   718 #>  [960,]  693  354  458  715  982  456  989  162  151   915 #>  [961,]   26  686  298  440  560  593   56  318  590   897 #>  [962,]  662  217  579  309   35  677  976  664  663   642 #>  [963,]  659  183  383   95  792  370  596  283   92   755 #>  [964,]  599  777  497  520  695  197   66   10  821   564 #>  [965,]  514   11  426  166  668  729  897  255  257   625 #>  [966,]  214   75  816  490  713  182  986  827  135   987 #>  [967,]  131  459  866  911  122  786  357  603  568   129 #>  [968,]  468  917  521  711  604  517  641  249  275   523 #>  [969,]  890  792  820  755  940  732  609   92  915   618 #>  [970,]  196   57  351  155  572  789  995  831  801   564 #>  [971,]  270  266  928  935   68  700  740  774  228   900 #>  [972,]  638  822  879  496  550  535  699  441  685   361 #>  [973,]  805  867  191  521  968  899  706  991  711    67 #>  [974,]  277   53   97  922  434  611  978  671  570   610 #>  [975,]  330  119  498  186  761   73   14   76  895   173 #>  [976,]  562  579   35  642  346  465  838  853  993   719 #>  [977,]   56  192  594  553  231  297   70  667  505   769 #>  [978,]  676  948    8  974  745  487  775  671   53   610 #>  [979,]  647  222  517  854  635  384  591  583  655   152 #>  [980,]  256   61  780   72  545   26   28  137  858   937 #>  [981,]  528  457  983  130  387  852   54  629  486   812 #>  [982,]  847  715  915  907  940  960  621  385  550   784 #>  [983,]  852  457   54  981  152  278  531  387  663   853 #>  [984,]  513  304  239  363  776  391  958  925  933   895 #>  [985,]  503  291  906  815  189   25  461  939  916     4 #>  [986,]  622  182  316   63  408  201  908  196  393   429 #>  [987,]  214  729   75   42  865  166  500  257  727   713 #>  [988,]  170  261  373  594  560   89  206  198  470    74 #>  [989,]  456  693  990  960  811  940  418  385  690    16 #>  [990,]  690  989  456   77  177  712  923  418  811   934 #>  [991,]  191  690  923  990  712  867  213   77  911   934 #>  [992,]  536  187  618  455  948  260  329  443    8   824 #>  [993,]  284  265  849  465  236  562  381  714  834   976 #>  [994,]  134  392  616  376  916  624  939  842  432   631 #>  [995,]  572  155  791  509  831  970   57  908  801   613 #>  [996,]  120  488  179  394  228   81  193  648  902   163 #>  [997,]  448  702  925  574  525  770  888  905  721   548 #>  [998,]  806  881  605  379  938  575  763  324  403   919 #>  [999,]  844  887  589  305  768  294   48  788   71   167 #> [1000,]  534  267  499  202  296  692  549  959  874   519 #>  #> $neighbor_distances #>               [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7] #>    [1,] 0.74562465 0.7814257 0.9265334 0.9282264 0.9570909 0.9674682 1.0403387 #>    [2,] 0.82151938 0.8484744 0.8798125 0.9322905 0.9771410 0.9950905 1.0217135 #>    [3,] 0.43024171 0.6365974 0.8655645 0.9115753 0.9486763 0.9853318 0.9928122 #>    [4,] 0.39632871 0.4760229 0.5179034 0.5734654 0.5972711 0.6510206 0.6792257 #>    [5,] 0.93194303 0.9327101 0.9362893 0.9929059 1.1575924 1.2029356 1.2122521 #>    [6,] 0.53586843 0.5830784 0.6520530 0.6819702 0.6928464 0.7597711 0.7688514 #>    [7,] 0.52613947 0.7488089 0.8320790 0.9129391 0.9300884 0.9793190 0.9910292 #>    [8,] 0.14930835 0.2469264 0.3503050 0.3579175 0.3602434 0.3709701 0.4618004 #>    [9,] 0.22664809 0.3100043 0.6086673 0.6766897 0.6785378 0.6845304 0.7448160 #>   [10,] 0.24228544 0.3273365 0.3709433 0.4607811 0.5027846 0.5490057 0.5560419 #>   [11,] 0.25384675 0.2624049 0.2770315 0.3410749 0.3635706 0.4667930 0.4792760 #>   [12,] 0.28275626 0.3464820 0.4063035 0.5328195 0.5344913 0.5373863 0.5393935 #>   [13,] 1.07566514 1.1197237 1.2694620 1.3625216 1.3838459 1.4097964 1.4391177 #>   [14,] 0.45993126 0.5067644 0.5074360 0.6592325 0.6768126 0.6885648 0.6910757 #>   [15,] 0.28275626 0.3285323 0.4806598 0.5386983 0.5961457 0.6316764 0.6385088 #>   [16,] 0.57636312 0.6662769 0.6711377 0.8091163 0.8611037 0.8987073 0.9223711 #>   [17,] 1.00954749 1.2247178 1.3143993 1.4834759 1.5217774 1.5502264 1.5638871 #>   [18,] 0.51406677 0.7326679 0.7716337 0.9481364 1.0403616 1.0409858 1.0414951 #>   [19,] 0.15640865 0.3709433 0.4099994 0.4278792 0.5239110 0.5421116 0.6216206 #>   [20,] 0.20373544 0.4281451 0.5328137 0.6668659 0.7073985 0.7907436 0.8266314 #>   [21,] 0.40302036 0.5483115 0.5485510 0.5711953 0.5763749 0.6232467 0.6344779 #>   [22,] 0.50682380 0.5914805 0.6170202 0.6178851 0.6484395 0.6693171 0.6995348 #>   [23,] 0.79341256 0.8786258 0.8798125 1.0188607 1.1358167 1.2346590 1.2979258 #>   [24,] 0.24594378 0.3758833 0.6172503 0.6300199 0.7082396 0.7089842 0.7141430 #>   [25,] 0.39632871 0.4448504 0.4461952 0.5128216 0.5389589 0.5467042 0.5468229 #>   [26,] 0.45437556 0.4792233 0.5265832 0.5435979 0.5515566 0.5665992 0.5853154 #>   [27,] 0.77433220 0.8875965 1.0719734 1.1030484 1.2324686 1.2444984 1.2718193 #>   [28,] 0.46477122 0.5055480 0.5316684 0.5698782 0.6102707 0.6119162 0.6270962 #>   [29,] 0.15640865 0.3273365 0.4198721 0.5129210 0.5449386 0.6026957 0.6063250 #>   [30,] 0.34963821 0.3840303 0.5578343 0.6131776 0.6285223 0.6311497 0.6745988 #>   [31,] 0.23679494 0.3327434 0.3360558 0.3406086 0.3798445 0.3865375 0.3991870 #>   [32,] 0.28818804 0.3602307 0.3878671 0.4603921 0.6048103 0.6435437 0.6802705 #>   [33,] 0.32659121 0.6836548 0.7282836 0.7696123 0.7881658 0.8287289 0.8348408 #>   [34,] 0.64926279 0.6819702 0.7335067 0.7691842 0.8465429 0.8967050 1.0830186 #>   [35,] 0.14445581 0.3530306 0.4987389 0.5601572 0.6268319 0.7881930 0.7948302 #>   [36,] 0.43212632 0.6320372 0.6333370 0.6572231 0.6586277 0.7131831 0.8040706 #>   [37,] 0.50564465 0.5777870 0.6149499 0.6165852 0.6487889 0.6902800 0.7224645 #>   [38,] 0.77465555 0.7893962 0.8131908 0.9149286 0.9163814 0.9847512 1.0095475 #>   [39,] 0.33637626 0.3924915 0.4445285 0.4820130 0.5680128 0.5764101 0.5828613 #>   [40,] 0.46803415 0.6144242 0.6341284 0.6676402 0.6855101 0.7163955 0.7642473 #>   [41,] 0.44668697 0.6821937 0.7895004 0.7960722 0.8267379 0.9504591 0.9513992 #>   [42,] 0.37490973 0.3806673 0.4679047 0.5175051 0.5431432 0.5514026 0.5989504 #>   [43,] 0.47443446 0.6339633 0.7905914 0.8011479 0.9405554 0.9515134 0.9744322 #>   [44,] 0.45047614 0.5299189 0.6342236 0.6384963 0.6570635 0.7377237 0.7826714 #>   [45,] 0.54382027 0.7081306 0.7208170 0.7330808 0.8008045 0.8083375 0.8096624 #>   [46,] 0.68058304 0.8295918 0.8391500 0.8572794 0.8804594 0.9264927 0.9493781 #>   [47,] 0.61779304 0.7284236 0.7331427 0.7422858 0.9357738 0.9834737 1.0022265 #>   [48,] 0.42409001 0.6186106 0.6693587 0.6862516 0.6942446 0.6966954 0.7313447 #>   [49,] 0.37466869 0.5334963 0.5438331 0.5845942 0.6469517 0.6626335 0.6692353 #>   [50,] 0.26582475 0.5541679 0.5609829 0.6344069 0.6572596 0.6847354 0.6909485 #>   [51,] 0.26840997 0.4092289 0.4457339 0.4739630 0.4749265 0.5193947 0.5373863 #>   [52,] 0.19362612 0.2461474 0.3541067 0.5235020 0.5583888 0.5749961 0.5820863 #>   [53,] 0.29721725 0.3313228 0.3581901 0.3980982 0.4235041 0.4570865 0.5163944 #>   [54,] 0.46627347 0.4815389 0.4892468 0.5688549 0.6880759 0.7651085 0.7787815 #>   [55,] 0.68407846 0.6848196 0.7463098 0.7769130 0.8505572 0.9165872 0.9515134 #>   [56,] 0.37654633 0.5170850 0.5350442 0.5785165 0.6151885 0.6195598 0.6214509 #>   [57,] 0.40509391 0.4119304 0.5696130 0.6453737 0.6732875 0.6826790 0.6867499 #>   [58,] 0.35305867 0.5266007 0.5678196 0.5970043 0.6494895 0.6870290 0.6877142 #>   [59,] 0.35639832 0.4311124 0.4603921 0.5530755 0.6220098 0.6609447 0.6611763 #>   [60,] 0.56232852 0.5702952 0.6209194 0.6561299 0.6754126 0.6979746 0.7329954 #>   [61,] 0.29844234 0.3144825 0.4290306 0.4841265 0.5481194 0.5787647 0.6082913 #>   [62,] 0.56722298 0.6410412 0.7821748 0.8678068 0.8725045 0.9257776 0.9407906 #>   [63,] 0.42126214 0.4847733 0.5172246 0.5397598 0.5880023 0.6091028 0.6128280 #>   [64,] 0.24594378 0.4897509 0.6723442 0.7186642 0.7488963 0.7524920 0.7535902 #>   [65,] 0.51870335 0.6534041 0.7175783 0.7179722 0.7878961 0.8066565 0.8078005 #>   [66,] 0.28818804 0.3564071 0.5195412 0.5530755 0.6067194 0.6123025 0.6365874 #>   [67,] 1.20356183 1.2052563 1.3387000 1.3820632 1.4349109 1.4523431 1.4544306 #>   [68,] 0.54585236 0.5926767 0.6005764 0.6142823 0.6854061 0.6904281 0.6928464 #>   [69,] 0.35660706 0.3657901 0.4056926 0.4186784 0.4549961 0.4647712 0.4692418 #>   [70,] 0.16503779 0.3434683 0.3598888 0.4857713 0.4945059 0.5051625 0.5193597 #>   [71,] 0.49502975 0.5551756 0.7198017 0.7693894 0.7710098 0.8700035 0.8753975 #>   [72,] 0.24840555 0.4019691 0.4080008 0.4841265 0.4855950 0.4883962 0.5665992 #>   [73,] 0.54127810 0.5779040 0.6458265 0.6699731 0.6762403 0.7021166 0.7238420 #>   [74,] 0.32123787 0.4130647 0.5199658 0.5354637 0.5392202 0.5625458 0.5889327 #>   [75,] 0.28037858 0.4897062 0.5085348 0.5115850 0.5791442 0.5817353 0.5991759 #>   [76,] 0.20373544 0.4558486 0.6688291 0.6761435 0.7260454 0.7329239 0.7455946 #>   [77,] 0.89234511 1.0038754 1.2121448 1.3584891 1.3685893 1.4425738 1.4579841 #>   [78,] 0.37464898 0.4456372 0.6026517 0.6768359 0.6850632 0.6863024 0.7001517 #>   [79,] 0.44546670 0.4829742 0.5089955 0.5157610 0.6049912 0.6151157 0.6298247 #>   [80,] 0.45007685 0.5234862 0.6651514 0.6786769 0.6817767 0.6954634 0.7266907 #>   [81,] 0.37724331 0.6315393 0.6572231 0.6777603 0.7113832 0.7124559 0.7348737 #>   [82,] 0.73686907 0.9027309 0.9343776 0.9482923 1.1073360 1.1293273 1.1357006 #>   [83,] 0.30767642 0.7793450 0.8283812 0.8460582 0.8522458 0.8674553 0.8774757 #>   [84,] 0.37074374 0.4507406 0.4519906 0.5658846 0.5910379 0.6096197 0.6135836 #>   [85,] 0.35626164 0.3635811 0.3968216 0.4122923 0.4354341 0.5305760 0.5457756 #>   [86,] 0.19289334 0.4820130 0.5515162 0.5683602 0.5980411 0.6181869 0.6846207 #>   [87,] 0.57399771 1.0016403 1.0868391 1.1030484 1.2806703 1.3662479 1.5304853 #>   [88,] 0.44207446 0.9978954 1.1407997 1.2627316 1.3349337 1.3355793 1.3519281 #>   [89,] 0.49404142 0.5071860 0.5480763 0.6609486 0.6671332 0.6802905 0.7214427 #>   [90,] 0.78287863 0.7935589 0.8038782 0.8516823 0.9020497 0.9145882 0.9307798 #>   [91,] 0.21684318 0.2299466 0.3677102 0.3798445 0.4660067 0.4729668 0.5402757 #>   [92,] 0.35494235 0.3688737 0.3709218 0.4555944 0.5274026 0.5353683 0.5975370 #>   [93,] 0.54350825 0.5930222 0.6060374 0.6824583 0.7391817 0.7936567 0.8194397 #>   [94,] 0.44668697 0.6332731 0.7002416 0.7013776 0.7332925 0.7556274 0.7669055 #>   [95,] 0.27024363 0.4231020 0.5544827 0.6216399 0.6418191 0.6681422 0.6760462 #>   [96,] 0.29626481 0.3886763 0.3968216 0.6202617 0.7173615 0.7278726 0.7410558 #>   [97,] 0.44407133 0.4515414 0.4705982 0.5094429 0.5278611 0.5559511 0.5680128 #>   [98,] 0.27957513 0.4266872 0.5307636 0.5367406 0.5901721 0.6005118 0.6182163 #>   [99,] 0.28029876 0.3040664 0.3327434 0.3941630 0.4644988 0.5346088 0.5400530 #>  [100,] 0.52415159 0.5406675 0.5543190 0.5984866 0.5992795 0.6125505 0.6534041 #>  [101,] 0.55781685 0.8659771 0.8686840 0.9609860 1.0568596 1.1219032 1.1343718 #>  [102,] 0.38786714 0.4839175 0.5979531 0.6067194 0.6230056 0.6469304 0.6534108 #>  [103,] 0.48577417 0.6075924 0.6558797 0.6779777 0.7004461 0.7508040 0.7579453 #>  [104,] 0.26703346 0.3900030 0.5009468 0.5239110 0.5449386 0.6243664 0.7096263 #>  [105,] 0.35305867 0.4608400 0.4875452 0.4938607 0.5599433 0.6357561 0.6758371 #>  [106,] 0.43024171 0.7041070 0.7792734 0.9330838 0.9374272 0.9913647 1.0059550 #>  [107,] 0.62028979 0.6262668 0.9542660 1.0119907 1.0467705 1.1025999 1.1913000 #>  [108,] 0.56672212 0.5901721 0.6607746 0.6850493 0.7151716 0.7836553 0.7846359 #>  [109,] 0.39268839 0.4694895 0.4925053 0.6566940 0.6824295 0.7280158 0.7782824 #>  [110,] 1.00650963 1.0722204 1.2529583 1.2901411 1.4366996 1.4920328 1.5006973 #>  [111,] 0.94200565 0.9812538 1.0565192 1.1425056 1.2064908 1.2138971 1.2152079 #>  [112,] 0.67852647 0.7296850 0.7554033 0.7719747 0.7868831 0.8527642 0.9114008 #>  [113,] 1.14869412 1.1847707 1.2669054 1.3196496 1.4435686 1.4776906 1.6068314 #>  [114,] 0.47475158 0.4999225 0.5191519 0.5305980 0.5670814 0.5927093 0.6244006 #>  [115,] 0.26121410 0.3658975 0.3684239 0.3924915 0.4363977 0.4979321 0.5103733 #>  [116,] 0.72522489 0.9762172 1.1035590 1.3094565 1.3441289 1.3517004 1.4657068 #>  [117,] 0.52991891 0.5502277 0.6218766 0.6421484 0.6762071 0.7371508 0.7470447 #>  [118,] 0.22994660 0.2697902 0.3865375 0.4084135 0.4603376 0.4980639 0.5056411 #>  [119,] 0.39691683 0.4599313 0.4704339 0.5072185 0.5474676 0.5485584 0.6099825 #>  [120,] 0.27564720 0.5986992 0.7526387 0.7695542 0.7738930 0.7930441 0.8085015 #>  [121,] 0.37340327 0.5228412 0.5492811 0.7126261 0.8883761 0.8996562 0.9225202 #>  [122,] 0.51919528 0.5648302 0.6373351 0.6666164 0.6920993 0.7404194 0.7626586 #>  [123,] 0.32853233 0.3464820 0.5284727 0.5626447 0.5703033 0.5888933 0.5931626 #>  [124,] 0.63222118 0.7651177 0.8064753 0.8684185 0.9947786 1.0229956 1.0543743 #>  [125,] 0.21517392 0.3349615 0.4342935 0.6433965 0.6704011 0.6957135 0.6975098 #>  [126,] 0.53586843 0.5458524 0.6608608 0.6712364 0.7014237 0.7709956 0.8118412 #>  [127,] 0.34732937 0.5993651 0.6499001 0.6537013 0.6563145 0.6704011 0.6785702 #>  [128,] 0.59209065 0.7211232 0.9144942 0.9643111 0.9676349 0.9708980 0.9874899 #>  [129,] 0.48196951 0.4837833 0.5218702 0.5580045 0.5779026 0.5865017 0.6711493 #>  [130,] 0.52369040 0.6028600 0.6475971 0.6648466 0.7551210 0.7801184 0.7861640 #>  [131,] 0.26742910 0.3390798 0.4374039 0.4629125 0.5873092 0.5878701 0.6920993 #>  [132,] 0.28511410 0.3141030 0.3489187 0.3563236 0.4442709 0.4879446 0.5325836 #>  [133,] 0.34946363 0.3657620 0.4265415 0.4311943 0.4499965 0.5043691 0.5056411 #>  [134,] 0.46234367 0.6699969 0.6953102 0.7746555 0.8699527 0.8969790 0.9345576 #>  [135,] 0.43965253 0.7020622 0.7491027 0.8297444 0.8324376 0.8447853 0.9365913 #>  [136,] 0.66627690 1.0691149 1.0958981 1.1012163 1.1710135 1.1994465 1.2227222 #>  [137,] 0.25303605 0.4743594 0.4867876 0.5587678 0.6029858 0.6241496 0.6768359 #>  [138,] 0.49404142 0.7110881 0.8591528 0.8904291 0.8908771 0.9003728 0.9084550 #>  [139,] 0.40570406 0.4250040 0.4392495 0.4678062 0.4775453 0.4793045 0.5256495 #>  [140,] 0.53321145 0.7241397 0.7350830 0.7579453 0.8350633 0.8460547 0.8995981 #>  [141,] 0.57935859 0.6322789 0.7179722 0.7557885 0.8678068 0.9117992 1.0113813 #>  [142,] 0.78918422 0.9284017 0.9515047 0.9747067 0.9788925 0.9849511 1.0158235 #>  [143,] 0.37464158 0.3788266 0.5168968 0.5668995 0.6807868 0.7196380 0.7225604 #>  [144,] 0.73088621 1.0305653 1.2136983 1.2562875 1.2806703 1.3571199 1.4324886 #>  [145,] 0.18384470 0.2931532 0.2985027 0.3371759 0.4151703 0.4407845 0.4470664 #>  [146,] 0.64956888 0.6496336 0.7412985 0.7557939 0.7681376 0.7793056 0.7800657 #>  [147,] 0.79439533 0.8260102 0.9046253 0.9205177 0.9237224 0.9493781 0.9515470 #>  [148,] 0.58592260 0.7047976 1.0659210 1.1223403 1.1683704 1.2012935 1.2295082 #>  [149,] 0.91080462 0.9192535 0.9657732 0.9853318 1.0106873 1.0245822 1.1307363 #>  [150,] 0.71857467 0.8545012 0.8569165 0.8608384 1.0186861 1.0228729 1.0331229 #>  [151,] 0.72503645 0.8873049 0.9389479 1.0058373 1.0222296 1.0390255 1.0591442 #>  [152,] 0.35248354 0.3778802 0.6581170 0.6791943 0.6880759 0.7151239 0.7410953 #>  [153,] 0.19362612 0.2695228 0.4129258 0.4402988 0.4765271 0.4805230 0.5276887 #>  [154,] 1.05278250 1.2761681 1.3121711 1.3123208 1.3693411 1.3813704 1.4682353 #>  [155,] 0.41011438 0.4119304 0.4315054 0.4768962 0.5013315 0.5065417 0.6223420 #>  [156,] 0.61395542 0.7340577 1.1245014 1.2338579 1.3018320 1.3155263 1.3474814 #>  [157,] 0.23551566 0.3215563 0.3449956 0.3547878 0.4359148 0.4626889 0.4967476 #>  [158,] 0.65734658 0.8167614 0.8516823 0.9219391 0.9489317 0.9763732 1.0306358 #>  [159,] 0.33818843 0.4546519 0.5064880 0.6250570 0.6265024 0.7362006 0.7372459 #>  [160,] 0.62518587 0.6424410 0.7915123 0.9533233 1.0095313 1.0292831 1.0521134 #>  [161,] 0.60312964 0.6805640 0.7370325 0.7383346 0.8305208 0.8884529 0.9074017 #>  [162,] 0.31373420 0.3496382 0.4054254 0.7069794 0.8207136 0.8521395 0.8705163 #>  [163,] 0.55781685 0.6221386 0.6905824 0.8085015 0.8408106 0.8446127 0.9391110 #>  [164,] 0.52397470 0.6056250 0.6125505 0.6135399 0.6638354 0.7205083 0.7275768 #>  [165,] 0.58887445 0.6501751 0.6670369 0.7155079 0.7313557 0.7583376 0.7869896 #>  [166,] 0.36357058 0.3832436 0.3872906 0.4521334 0.4852891 0.4936428 0.4974015 #>  [167,] 0.37464158 0.5149946 0.6282199 0.6420241 0.6576615 0.6835596 0.7151770 #>  [168,] 0.56855962 0.7320118 0.7843666 0.7855779 0.9536600 0.9695961 0.9775066 #>  [169,] 0.73447389 1.1322987 1.1892733 1.2543086 1.3015516 1.3029466 1.3230878 #>  [170,] 0.32998872 0.3446349 0.4082684 0.4205856 0.4749162 0.5519307 0.5639231 #>  [171,] 0.36434119 0.7052132 0.7084240 0.7178216 0.7321067 0.8276432 0.8958313 #>  [172,] 0.41097978 0.4655296 0.4794560 0.5180584 0.5314404 0.5352904 0.5528314 #>  [173,] 0.36880341 0.4508019 0.5745505 0.7254372 0.7450306 0.7605680 0.7844661 #>  [174,] 0.54259116 0.5777870 0.5976938 0.6002520 0.6712671 0.6805640 0.6841088 #>  [175,] 0.70139016 0.9783178 1.1329950 1.1578928 1.2121448 1.2731950 1.3755435 #>  [176,] 0.50062927 0.6025941 0.6112580 0.6385902 0.6670564 0.6700534 0.6745019 #>  [177,] 0.70139016 0.7585159 0.8158376 0.8923451 0.9475842 1.0069766 1.1293666 #>  [178,] 0.47632044 0.5490454 0.6200763 0.7660080 0.9602501 1.1406497 1.1471388 #>  [179,] 0.37724331 0.6586277 0.6808048 0.8110685 0.8239253 0.8495252 0.8932313 #>  [180,] 0.11300811 0.4238159 0.4359148 0.4441615 0.4969802 0.5366125 0.5409587 #>  [181,] 0.15954881 0.2823564 0.4554803 0.5267429 0.5526299 0.6830927 0.7305837 #>  [182,] 0.45661542 0.4904731 0.5260231 0.5265200 0.5318898 0.5791442 0.5797764 #>  [183,] 0.28750930 0.4516226 0.4533370 0.4703558 0.5274026 0.6357810 0.6760462 #>  [184,] 0.57223438 0.7891887 0.8245671 0.9007348 0.9053562 0.9259231 0.9364757 #>  [185,] 0.16503779 0.2096864 0.3823917 0.3980539 0.4997372 0.5039770 0.5149916 #>  [186,] 0.45080195 0.6458314 0.6514772 0.6639882 0.6688599 0.7195170 0.7692139 #>  [187,] 0.32824861 0.3559634 0.4382520 0.4641873 0.5073274 0.5096456 0.5111552 #>  [188,] 0.58753280 0.8320790 1.0800268 1.1491383 1.1835736 1.3160821 1.3234614 #>  [189,] 0.35601674 0.4461952 0.4843314 0.4847611 0.4920348 0.5179034 0.5266968 #>  [190,] 0.36277835 0.4506450 0.5257480 0.5490057 0.5824159 0.5892213 0.6327408 #>  [191,] 0.98690042 0.9897259 1.0782525 1.1012032 1.1589025 1.1711076 1.2124819 #>  [192,] 0.35988877 0.4322237 0.4374058 0.4571896 0.4669005 0.4997372 0.5305534 #>  [193,] 0.76955418 0.8919856 0.9088493 0.9510482 1.0307794 1.0637600 1.0748476 #>  [194,] 0.38419769 0.6933363 0.7407528 0.7716337 0.7905914 0.8278499 0.8505572 #>  [195,] 0.54928114 0.5877996 0.7189123 0.7335067 0.7412948 0.7595038 0.7790212 #>  [196,] 0.53069554 0.5574256 0.5824480 0.6301527 0.6929366 0.7018770 0.7159171 #>  [197,] 0.29626481 0.3124810 0.3635811 0.5126374 0.6524939 0.6777155 0.6817313 #>  [198,] 0.06871872 0.3147478 0.4712145 0.5633575 0.5707161 0.5836017 0.6754893 #>  [199,] 1.13997757 1.2945758 1.3144094 1.3679065 1.5089168 1.5149395 1.5419501 #>  [200,] 0.64244099 0.9102520 0.9621098 1.0141454 1.0142183 1.0208211 1.0759655 #>  [201,] 0.49711714 0.5474049 0.6138251 0.6214484 0.6533667 0.6617844 0.6658231 #>  [202,] 0.87842479 0.8821028 0.9770696 1.0912230 1.1188537 1.1383706 1.1874595 #>  [203,] 0.46060317 0.5083637 0.7117412 0.7378878 0.8557800 0.8846973 1.0111202 #>  [204,] 0.20892000 0.2770315 0.2873066 0.2986025 0.3850303 0.4446816 0.4887856 #>  [205,] 0.81448990 1.0972957 1.1911078 1.2380962 1.2859566 1.3088979 1.3185826 #>  [206,] 0.17732713 0.3454845 0.4618950 0.4667291 0.4749162 0.4861152 0.5484296 #>  [207,] 0.39011120 0.4608400 0.4821950 0.5400128 0.5678196 0.5678631 0.6255795 #>  [208,] 0.56483022 0.7051161 0.8680067 0.9609860 1.0483409 1.0531881 1.0547532 #>  [209,] 0.49470565 0.6371702 0.7326679 0.7387413 0.7585035 0.7849756 0.8161946 #>  [210,] 0.88928175 1.0652937 1.0984321 1.1007335 1.2633834 1.3209711 1.3337650 #>  [211,] 0.43776331 0.5834554 0.6006306 0.6971849 0.7175483 0.7829002 0.8073271 #>  [212,] 0.21684318 0.3406086 0.4084135 0.4486767 0.4531417 0.4664457 0.4723181 #>  [213,] 0.50786725 0.7361220 0.7777661 0.8706349 0.9428679 0.9441516 0.9759055 #>  [214,] 0.28037858 0.3465935 0.4675710 0.5733758 0.6524646 0.6581351 0.6605231 #>  [215,] 0.38708997 0.4268776 0.4420219 0.4564572 0.4838067 0.5328028 0.5477966 #>  [216,] 0.58334147 0.7244180 0.9364813 0.9855990 1.0540469 1.0713395 1.1383426 #>  [217,] 0.58495189 0.8361642 0.9980522 1.0398399 1.0574000 1.2482059 1.3199148 #>  [218,] 0.39268839 0.4608482 0.5400346 0.6056056 0.6094160 0.6232467 0.6480838 #>  [219,] 0.39941764 0.5092775 0.5728146 0.6202665 0.6262358 0.6301799 0.6768673 #>  [220,] 0.72441798 0.9127048 1.0771012 1.1256756 1.1842533 1.1844163 1.2392153 #>  [221,] 0.53797546 0.5524902 0.5910379 0.6145542 0.6464587 0.6683126 0.6754623 #>  [222,] 0.41006701 0.4596485 0.5199837 0.5218895 0.5865017 0.7919932 0.8560003 #>  [223,] 0.40660272 0.4498686 0.5393015 0.5962170 0.6056742 0.6473506 0.6584426 #>  [224,] 0.35632362 0.4162855 0.4321192 0.4979736 0.5307241 0.5334963 0.5597524 #>  [225,] 0.13843846 0.3614742 0.3729382 0.4598987 0.4733163 0.5012727 0.5144602 #>  [226,] 0.26584896 0.5095219 0.5529791 0.5539178 0.6049912 0.6217058 0.6309945 #>  [227,] 0.71326205 0.7706255 0.8169065 0.9004066 0.9980522 1.0255651 1.0260838 #>  [228,] 0.53616630 0.5657434 0.6635528 0.6777603 0.7208170 0.7270304 0.7634727 #>  [229,] 0.31228134 0.5524902 0.5658846 0.5938335 0.6255844 0.6364420 0.6665291 #>  [230,] 0.38464621 0.4440677 0.4608452 0.4632520 0.4824089 0.4867049 0.5459397 #>  [231,] 0.18794566 0.3487092 0.4191616 0.4281105 0.4427335 0.4785977 0.5004929 #>  [232,] 0.75230883 0.8391500 0.8875965 0.9213199 0.9555552 1.0016403 1.0584093 #>  [233,] 0.31897074 0.5163426 0.6120185 0.6344779 0.6644220 0.7127500 0.7260159 #>  [234,] 0.30542231 0.3220347 0.3823917 0.5024054 0.5060132 0.5193597 0.5336629 #>  [235,] 0.53869827 0.6093660 0.6319375 0.6619793 0.6680817 0.6769027 0.7523322 #>  [236,] 0.35882061 0.4341295 0.5690199 0.5826373 0.7240068 0.7431529 0.7494460 #>  [237,] 0.66756443 0.6744272 0.7237403 0.7782363 0.8012073 0.9226483 0.9319430 #>  [238,] 1.07222043 1.1035590 1.1531728 1.2790045 1.2829466 1.4000710 1.4597688 #>  [239,] 0.62097323 0.6557889 0.6648584 0.6848191 0.7103054 0.7155079 0.8946152 #>  [240,] 0.21850373 0.7967507 0.8259403 0.8521355 0.8567897 0.8812211 0.9027626 #>  [241,] 0.42950269 0.4740833 0.4969802 0.5095301 0.5124846 0.5330281 0.5558400 #>  [242,] 0.36483382 0.3904088 0.4268776 0.4751119 0.4806756 0.5106813 0.5278030 #>  [243,] 0.44397169 0.5272564 0.6606457 0.6618446 0.6791943 0.7214427 0.7565155 #>  [244,] 0.29922074 0.3920524 0.4311943 0.4363977 0.4980047 0.5197990 0.5291187 #>  [245,] 0.28327444 0.3349615 0.5070344 0.5157100 0.5316987 0.6466297 0.6567167 #>  [246,] 0.50219646 0.6339633 0.7117412 0.7575362 0.8009398 0.8248387 0.8278499 #>  [247,] 0.33130841 0.7231604 0.7871264 1.0469700 1.1149100 1.1261396 1.1392259 #>  [248,] 0.25776253 0.4063035 0.4457339 0.5031530 0.5727354 0.5961457 0.6344058 #>  [249,] 0.47776516 0.6255795 0.6465796 0.6960025 0.7168323 0.7185859 0.7299866 #>  [250,] 0.47220350 0.7846359 0.8688135 0.8846880 0.8850002 0.9420056 0.9445596 #>  [251,] 0.51499464 0.6495520 0.6562430 0.6910577 0.7204098 0.7225604 0.7374318 #>  [252,] 0.23315693 0.2579888 0.3815582 0.3824582 0.3870900 0.4332528 0.5198646 #>  [253,] 1.07714916 1.4682305 1.5264380 1.5999221 1.6936193 1.7184050 1.7429401 #>  [254,] 0.18100511 0.2331721 0.3046303 0.3602702 0.3924175 0.4330430 0.4678062 #>  [255,] 0.34746827 0.4297540 0.4806756 0.5085118 0.5242418 0.5333713 0.5350704 #>  [256,] 0.24840555 0.2672597 0.4252933 0.4290306 0.4543756 0.5587678 0.5716446 #>  [257,] 0.18647639 0.2624049 0.2986025 0.3732525 0.3832436 0.4135148 0.4982352 #>  [258,] 0.37861496 0.5078673 0.5626447 0.7784563 0.8213262 0.8573305 0.8618764 #>  [259,] 0.83243762 0.8344001 0.8541111 0.8635455 0.9475365 0.9557580 0.9804457 #>  [260,] 0.27525499 0.3585829 0.4593960 0.4610570 0.4618004 0.4619547 0.5111552 #>  [261,] 0.34759326 0.5071860 0.5229583 0.5330635 0.5572452 0.5606713 0.5660222 #>  [262,] 0.40371009 0.4183440 0.4867049 0.4940483 0.4988487 0.5211393 0.5545825 #>  [263,] 0.54907346 0.5707200 0.6167114 0.6583072 0.7556719 0.8460582 0.8734127 #>  [264,] 0.80157937 0.9903985 1.0526536 1.0652937 1.1188047 1.1406546 1.2876127 #>  [265,] 0.41450944 0.4150414 0.5573634 0.6445627 0.6485730 0.7017967 0.7604813 #>  [266,] 0.30009358 0.5454350 0.5582981 0.5908802 0.6351990 0.6452882 0.6876433 #>  [267,] 0.58388641 0.6104175 0.7251468 0.7365700 0.7947935 0.8237881 0.8613435 #>  [268,] 0.63222118 0.8615233 0.9108046 0.9158021 0.9612703 1.0747646 1.0972946 #>  [269,] 0.42469079 0.4407845 0.4432093 0.4608452 0.5550461 0.5638635 0.5827799 #>  [270,] 0.49897391 0.5288643 0.5454350 0.5830784 0.6142823 0.6653001 0.7187220 #>  [271,] 0.65406823 0.7597711 0.7639071 0.8271218 0.8948424 0.9307739 0.9684313 #>  [272,] 0.49361133 0.4983203 0.5846637 0.6739447 0.6964829 0.7420083 0.7472028 #>  [273,] 0.42448171 0.5372578 0.5601247 0.5694412 0.6243664 0.7016597 0.7467121 #>  [274,] 0.47411055 0.5255384 0.5330635 0.6766266 0.6846221 0.6863034 0.7298460 #>  [275,] 0.42363056 0.5702193 0.7040376 0.7415197 0.7660080 0.8733544 0.9083233 #>  [276,] 0.28168663 0.3363763 0.3366179 0.3658975 0.3732525 0.4446816 0.4471658 #>  [277,] 0.26893456 0.4311124 0.4316656 0.5163944 0.5240957 0.5432449 0.5559511 #>  [278,] 0.74748117 0.7817230 0.9025282 1.0538397 1.0617999 1.0618646 1.2407639 #>  [279,] 1.22471781 2.1890186 2.3325477 2.3600227 2.3601329 2.4069897 2.4591450 #>  [280,] 0.39011120 0.4030364 0.4848192 0.4938607 0.4980626 0.5380305 0.6845305 #>  [281,] 0.28582626 0.4030364 0.4608296 0.4821950 0.4875452 0.5310527 0.6545318 #>  [282,] 0.38965138 0.5048697 0.5226944 0.5647908 0.6570635 0.6650184 0.6789574 #>  [283,] 0.35203586 0.4312010 0.4516226 0.5353683 0.6108525 0.6457954 0.6605452 #>  [284,] 0.35562872 0.5573634 0.5827629 0.6265024 0.6325487 0.6528518 0.6546196 #>  [285,] 0.37958277 0.5101240 0.5412781 0.6421019 0.6622340 0.6959716 0.6998128 #>  [286,] 0.26906295 0.3589845 0.3657620 0.4127934 0.4413304 0.4644044 0.4644988 #>  [287,] 0.58021454 0.5858626 0.6713992 0.7558768 0.7631169 0.8193039 0.8412426 #>  [288,] 0.20059308 0.5256589 0.5707200 0.5909884 0.6490231 0.6656549 0.6877344 #>  [289,] 0.82055304 1.1967386 1.2131667 1.2369467 1.2657095 1.3171575 1.5072665 #>  [290,] 0.73478598 0.7376616 0.7415283 0.7540646 0.7793450 0.7803288 0.8291324 #>  [291,] 0.28344219 0.3560167 0.4276324 0.4658726 0.5359280 0.5363155 0.5753612 #>  [292,] 0.53281372 0.6584494 0.6761435 0.7860331 0.8710713 1.0140021 1.0736592 #>  [293,] 0.20059308 0.4542727 0.4858373 0.5490735 0.6421484 0.6795590 0.6846964 #>  [294,] 0.55030326 0.7928037 0.8775259 0.8892817 0.9337122 0.9550839 1.1406546 #>  [295,] 0.27957513 0.3885919 0.5043442 0.5425912 0.5852440 0.5955779 0.6079134 #>  [296,] 0.62586022 0.7564621 0.7777406 0.8072376 0.9269381 0.9346420 0.9427231 #>  [297,] 0.37294380 0.4785977 0.5148421 0.5298948 0.6465796 0.6758371 0.6877142 #>  [298,] 0.25497894 0.2583401 0.3109175 0.3566071 0.4688855 0.5052856 0.5245963 #>  [299,] 0.21859482 0.3099204 0.3312882 0.4626889 0.4712288 0.5742293 0.6371702 #>  [300,] 0.50946401 0.7013776 0.7276403 0.8472868 0.8644554 0.8850290 0.8855614 #>  [301,] 0.33505138 0.4635971 0.4932760 0.5129743 0.5367406 0.5508439 0.5923691 #>  [302,] 0.21517392 0.2832744 0.3999586 0.5957761 0.6136812 0.6741496 0.6828547 #>  [303,] 0.36637509 0.4030204 0.4746185 0.5456766 0.5591942 0.5828883 0.6250328 #>  [304,] 0.65789656 0.6985028 0.8236312 0.8432474 0.9164123 0.9170824 0.9594948 #>  [305,] 0.54141592 0.6212591 0.7590130 0.7928037 0.8404315 0.9013056 0.9576412 #>  [306,] 0.46084823 0.4694895 0.8370065 0.8375788 0.8906070 0.8945068 0.8959011 #>  [307,] 0.29858179 0.3437221 0.5955779 0.6002520 0.6200082 0.6236334 0.6344341 #>  [308,] 0.55500073 0.7386489 0.7972707 0.8067053 0.8082233 0.8390772 0.8563587 #>  [309,] 0.47861800 0.5681534 0.5694412 0.6506551 0.6979894 0.7148125 0.7227379 #>  [310,] 0.34754536 0.4313306 0.5130960 0.5241516 0.5930222 0.6344576 0.6880818 #>  [311,] 0.37327341 0.4098468 0.4462780 0.4651564 0.4881930 0.6099825 0.6302847 #>  [312,] 0.70082113 0.8015794 0.9078570 0.9336616 0.9678569 1.0337041 1.0459787 #>  [313,] 0.22963173 0.3822516 0.4470855 0.4794560 0.5335353 0.5551756 0.5643062 #>  [314,] 0.26703346 0.2969769 0.4278792 0.5129210 0.5346496 0.5871293 0.7017967 #>  [315,] 0.35565994 0.3602593 0.3991870 0.4603376 0.4723181 0.4729668 0.4812219 #>  [316,] 0.34258040 0.3634961 0.3964144 0.4998752 0.5449851 0.5880023 0.5910944 #>  [317,] 0.53320938 0.5544827 0.6210258 0.6335668 0.6745019 0.6751785 0.6787388 #>  [318,] 0.25497894 0.3104081 0.3452326 0.3663751 0.4180639 0.4692418 0.4906990 #>  [319,] 0.78436665 0.8992125 1.0910832 1.1058274 1.1288535 1.1385618 1.1760756 #>  [320,] 0.44248133 0.5064880 0.5918935 0.6166632 0.7351187 0.7421834 0.7804886 #>  [321,] 0.57261847 0.8530572 0.8597446 0.8636180 0.8638547 0.9791836 0.9925815 #>  [322,] 0.28216071 0.3110621 0.3277524 0.4389476 0.4440677 0.4829021 0.5238077 #>  [323,] 1.15952939 1.3004142 1.3849834 1.4164961 1.4450915 1.5415368 1.5965228 #>  [324,] 0.29867093 0.6144242 0.6467002 0.6493142 0.8940572 0.9183030 0.9194165 #>  [325,] 0.67323653 0.8420736 0.8608384 0.8636933 0.9511690 1.0156073 1.0219866 #>  [326,] 0.47720444 0.6950143 0.6954875 0.7165284 0.7491027 0.8393934 0.8720127 #>  [327,] 0.28124579 0.4589059 0.4814276 0.5129343 0.5138419 0.5428292 0.5603274 #>  [328,] 0.13843846 0.3337534 0.3974649 0.3988222 0.4676164 0.4843394 0.4871965 #>  [329,] 0.35639832 0.4596631 0.5360194 0.5578343 0.5967954 0.5969850 0.6276927 #>  [330,] 0.40647607 0.4585323 0.6334026 0.6699731 0.6945125 0.6985028 0.7174158 #>  [331,] 0.57980330 0.6848253 0.6897666 0.6933892 0.6941218 0.7392870 0.7496772 #>  [332,] 0.77532075 0.8006448 0.8167614 1.0637538 1.1803910 1.3004457 1.3206993 #>  [333,] 0.18100511 0.2623171 0.2840432 0.3679543 0.4522104 0.4793045 0.5287791 #>  [334,] 0.61353987 0.6410412 0.7305286 0.7363715 0.7474979 0.8896915 0.9052624 #>  [335,] 0.81107796 0.8248505 0.8495252 0.8737116 0.9557813 1.0427972 1.0541817 #>  [336,] 0.60760167 0.6681418 0.6994195 0.9212990 0.9652502 0.9953958 1.0004142 #>  [337,] 0.48195091 0.6464435 0.7165405 0.7266907 0.8644554 0.9123002 0.9309684 #>  [338,] 0.32791326 0.4169615 0.6839827 0.8108839 0.9039965 0.9056836 0.9172126 #>  [339,] 0.36579006 0.4151703 0.4313543 0.4549463 0.4727144 0.5266968 0.5359280 #>  [340,] 0.87532378 0.9027309 0.9433270 0.9815240 1.0737060 1.0839398 1.1084937 #>  [341,] 0.15954881 0.2467074 0.5107970 0.5160314 0.6019872 0.6022022 0.6644941 #>  [342,] 0.42372422 0.4763492 0.4847611 0.5363155 0.5390043 0.5684323 0.5737547 #>  [343,] 0.53902524 0.6307638 0.6797807 0.8206485 0.8635252 0.8635455 0.8779272 #>  [344,] 0.62425447 0.6413863 0.7234622 0.7409182 0.7855779 0.7936567 0.8255343 #>  [345,] 0.37294380 0.3734149 0.4191616 0.5477347 0.5666283 0.6061562 0.6274556 #>  [346,] 0.47790149 0.5601572 0.5650310 0.5888595 0.6136812 0.6437487 0.6466297 #>  [347,] 0.27345076 0.4664457 0.4724188 0.5022086 0.5367938 0.5418072 0.5584544 #>  [348,] 0.30474659 0.3460331 0.5170972 0.5859995 0.6398913 0.6532929 0.7554405 #>  [349,] 0.32027788 0.3541067 0.4070195 0.4129258 0.4177594 0.5450070 0.5874023 #>  [350,] 0.90245445 1.0527825 1.1169264 1.1647478 1.2454803 1.2649114 1.3178073 #>  [351,] 0.62665299 0.6867499 0.7422858 0.7740485 0.7932301 0.8521355 0.8609929 #>  [352,] 0.47311666 0.6846964 0.6877344 0.7470447 0.7488089 0.7702247 0.8153964 #>  [353,] 0.72522489 0.9533668 1.0014506 1.1514274 1.1585387 1.2033729 1.2694772 #>  [354,] 0.39276418 0.7340577 0.7734912 0.7943953 0.8060156 1.0404514 1.0983134 #>  [355,] 0.56600722 0.6917593 0.7557885 0.9111066 0.9321365 0.9495714 0.9883279 #>  [356,] 0.77433220 0.8940572 0.9222783 1.0565697 1.2277363 1.2341375 1.3344933 #>  [357,] 0.40388427 0.4571896 0.4629125 0.4830386 0.5459360 0.5485762 0.6327775 #>  [358,] 0.20855892 0.2914157 0.4674907 0.4813051 0.5085089 0.5222735 0.5765794 #>  [359,] 0.43053414 0.4637892 0.5678282 0.6394186 0.6501751 0.7033504 0.7494441 #>  [360,] 0.57399771 0.7308862 1.1997500 1.2718193 1.3014992 1.3433161 1.3466054 #>  [361,] 0.24572687 0.2964714 0.3877350 0.5637967 0.6620008 0.6719083 0.7116651 #>  [362,] 0.45134837 0.4957915 0.5163426 0.5998131 0.6730791 0.6736339 0.6881713 #>  [363,] 0.41059792 0.5191417 0.5457562 0.5556599 0.6379218 0.6648584 0.7254372 #>  [364,] 0.30904980 0.4338545 0.5361611 0.7240046 0.7742662 0.7861070 0.8236730 #>  [365,] 0.21608211 0.3123570 0.4669005 0.4898465 0.5355942 0.5626904 0.5650142 #>  [366,] 0.56614545 0.9711206 0.9812538 1.0906332 1.0953740 1.1138341 1.1787503 #>  [367,] 0.22341132 0.5387153 0.5495350 0.6045276 0.6478357 0.7099912 0.7116651 #>  [368,] 0.45378622 0.5468229 0.5734654 0.6242545 0.6256740 0.7276403 0.8502615 #>  [369,] 0.81358782 0.8770432 1.1777498 1.2457890 1.2484637 1.2552516 1.2858634 #>  [370,] 0.27024363 0.3380870 0.5138613 0.5352931 0.6307319 0.6448612 0.6480841 #>  [371,] 0.66870781 1.5436934 1.5452543 1.6663039 1.6942702 1.7455794 1.7492586 #>  [372,] 0.25884943 0.2931532 0.3676943 0.4246908 0.4411178 0.4728639 0.5755884 #>  [373,] 0.17732713 0.3264760 0.3446349 0.3921037 0.4057226 0.4352433 0.5021418 #>  [374,] 0.77366242 0.7828786 0.8479085 0.9343081 0.9758788 0.9795084 0.9807412 #>  [375,] 0.34372213 0.4177594 0.5175912 0.5779040 0.6037200 0.6079134 0.6227190 #>  [376,] 0.37602200 0.6293678 0.6585250 0.7152489 0.7625980 0.7893962 0.8198740 #>  [377,] 0.28124579 0.4375378 0.4743594 0.5173432 0.5393509 0.5448121 0.5457058 #>  [378,] 0.39000298 0.3934276 0.4244817 0.5871293 0.6072925 0.6240229 0.6297678 #>  [379,] 0.65405027 0.7063780 0.7444970 0.7981982 0.8821020 0.9134317 0.9331176 #>  [380,] 0.78712638 0.8637833 0.9191154 0.9388306 0.9928065 1.0681452 1.0812571 #>  [381,] 0.38316080 0.4254740 0.5784671 0.6063250 0.6136227 0.6297678 0.6312752 #>  [382,] 0.30026607 0.3110621 0.4092289 0.4382520 0.4580173 0.4652610 0.4771964 #>  [383,] 0.36788043 0.3880844 0.4321263 0.5463426 0.6055473 0.6905166 0.7274872 #>  [384,] 0.34398613 0.6227662 0.6546474 0.6670078 0.6941218 0.7740987 0.8114194 #>  [385,] 0.31207249 0.4881619 0.5458436 0.5637967 0.6558053 0.6927625 0.7368653 #>  [386,] 0.54253084 0.5804239 0.5962170 0.6098405 0.6410647 0.6412678 0.6577012 #>  [387,] 0.68824611 0.7474812 0.8273511 0.8506486 0.8815822 0.9518708 0.9834764 #>  [388,] 0.89144445 0.9200518 0.9608449 0.9850533 0.9881738 0.9929727 0.9972468 #>  [389,] 0.48195091 0.5000493 0.5487482 0.5976249 0.6817767 0.9130724 0.9815019 #>  [390,] 0.36434119 0.4440863 0.4776314 0.6523293 0.7467361 0.7969320 0.8253864 #>  [391,] 0.50790117 0.9496172 1.0301530 1.0337894 1.1279955 1.3000803 1.3045666 #>  [392,] 0.42356527 0.4457774 0.5271390 0.5746375 0.6159515 0.6194464 0.6801262 #>  [393,] 0.36349612 0.4256149 0.5016250 0.5495123 0.5583164 0.5816025 0.5832105 #>  [394,] 0.68601452 0.7366677 0.7526387 0.8096624 0.9501725 0.9775831 0.9963638 #>  [395,] 0.31628307 0.5976249 0.6205816 0.6262455 0.7222328 0.7332925 0.7895004 #>  [396,] 0.39238712 0.4224720 0.5045005 0.5239747 0.5543190 0.5759069 0.6113085 #>  [397,] 0.64343386 0.6540682 0.6999842 1.0965090 1.1194758 1.1347828 1.1368822 #>  [398,] 0.42247204 0.4603230 0.4914830 0.5311910 0.5452708 0.5668995 0.5746434 #>  [399,] 0.62505698 0.6500589 0.7112722 0.7421834 0.7585159 0.8536542 0.8932943 #>  [400,] 0.44207446 1.0771492 1.1215788 1.1715005 1.1898634 1.3880231 1.3912924 #>  [401,] 0.77132482 0.8567897 0.8770233 0.8887117 0.9202698 0.9345295 0.9827155 #>  [402,] 0.24613135 0.4606032 0.7400121 0.7575362 0.8114194 0.8369016 0.8794546 #>  [403,] 0.29867093 0.6341284 0.6417457 0.7478522 0.7981982 0.8867088 0.9222783 #>  [404,] 0.39691683 0.4336546 0.5067644 0.5421609 0.5723194 0.5750905 0.6536905 #>  [405,] 0.30236501 0.3371759 0.4411178 0.4432093 0.4549463 0.4811154 0.5025859 #>  [406,] 0.37920380 0.4070195 0.5175912 0.5508439 0.5998510 0.6651693 0.6786752 #>  [407,] 0.78932627 0.8039468 0.8361178 0.9039965 0.9363303 0.9455431 0.9939926 #>  [408,] 0.26906295 0.3040664 0.4265415 0.4417329 0.4591439 0.4660304 0.5696693 #>  [409,] 0.72112318 0.7658010 0.8713990 0.8945068 0.9209439 0.9293792 0.9807412 #>  [410,] 0.54811938 0.5571425 0.6287206 0.6981983 0.7415920 0.7544716 0.8540796 #>  [411,] 0.28582626 0.4574387 0.4848192 0.5599433 0.5678631 0.6527015 0.6870290 #>  [412,] 0.49231269 0.5146447 0.5236904 0.6581170 0.6606457 0.6733038 0.7185747 #>  [413,] 0.86369328 0.9119461 1.1062355 1.1775471 1.1850562 1.1931755 1.1940593 #>  [414,] 0.36982355 0.5168968 0.5379755 0.5999639 0.6163077 0.6512878 0.6559164 #>  [415,] 0.47103894 0.6950143 0.7507458 0.8712297 0.8883761 0.9533668 0.9665925 #>  [416,] 0.56044255 0.6827237 0.7951625 0.8321901 0.8597446 0.9711206 0.9828941 #>  [417,] 0.68408652 0.6848196 0.6933363 0.7753184 0.7908567 0.7911561 0.8907999 #>  [418,] 0.45743869 0.4608296 0.5380305 0.6690196 0.6906544 0.6939149 0.7351002 #>  [419,] 0.89213083 1.0286224 1.0637538 1.2200925 1.2613518 1.2669746 1.3027923 #>  [420,] 0.38077214 0.4217957 0.4546519 0.5399121 0.5918935 0.6203304 0.6325487 #>  [421,] 0.52613947 0.9787880 1.0844159 1.1294117 1.1571816 1.1798376 1.1835736 #>  [422,] 0.28511410 0.4162855 0.4768260 0.4801863 0.5041475 0.5225136 0.6097962 #>  [423,] 0.11300811 0.3491556 0.3547878 0.4951474 0.4999247 0.5124846 0.5212575 #>  [424,] 0.96461262 1.0029236 1.1051712 1.2669054 1.3115483 1.3168707 1.3235473 #>  [425,] 0.57935859 0.8066565 0.8624519 0.9257776 0.9644563 1.0176178 1.0280327 #>  [426,] 0.34523258 0.3531987 0.3744456 0.4150241 0.4549961 0.4688855 0.4746185 #>  [427,] 0.32791326 0.4950806 0.6280949 0.7751025 0.8420736 0.8687910 0.8731333 #>  [428,] 0.43776331 0.4818194 0.5389093 0.5932375 0.6225021 0.6787921 0.6854013 #>  [429,] 0.28082858 0.2919650 0.3319493 0.3837702 0.4425003 0.4679047 0.4983493 #>  [430,] 0.27014457 0.3141030 0.3965368 0.4435858 0.4593026 0.4979736 0.5041475 #>  [431,] 0.40984678 0.4555126 0.4704339 0.5421609 0.6461386 0.6688291 0.6765117 #>  [432,] 0.41060879 0.4552766 0.4855950 0.4874822 0.5448121 0.5716446 0.6420330 #>  [433,] 0.31248100 0.3886763 0.4341295 0.5148172 0.5305760 0.5849457 0.6280712 #>  [434,] 0.42350412 0.4416291 0.4989739 0.5177597 0.5249321 0.5518212 0.6379368 #>  [435,] 0.35479312 0.4519906 0.4909061 0.5450248 0.5778542 0.6022690 0.6471172 #>  [436,] 0.38155815 0.4564572 0.4653986 0.6029067 0.6148220 0.6406844 0.6438529 #>  [437,] 0.26503060 0.3564071 0.3602307 0.4655296 0.4839175 0.6075924 0.6429411 #>  [438,] 0.52195701 0.6230056 0.6420838 0.6854061 0.8547962 0.8585151 0.9239766 #>  [439,] 0.21314459 0.3002661 0.4389476 0.4749265 0.4866020 0.4930190 0.5425757 #>  [440,] 0.44403242 0.4925053 0.5350704 0.5502277 0.5763749 0.6052029 0.6056056 #>  [441,] 0.61757158 0.9208217 0.9649887 0.9849511 1.0228999 1.0229770 1.0483409 #>  [442,] 0.39933149 0.4313543 0.4428798 0.5467909 0.5656263 0.6186450 0.6189376 #>  [443,] 0.26107413 0.3211473 0.3579175 0.4188705 0.4383110 0.4443386 0.4908297 #>  [444,] 0.45345189 0.4871965 0.5274070 0.5311544 0.5340214 0.6269242 0.6385078 #>  [445,] 0.60760167 0.6124377 0.6744272 0.7803288 0.7996709 0.8178424 0.9219422 #>  [446,] 0.38269738 0.8006448 0.8921308 0.9343776 0.9763732 1.1274071 1.1555481 #>  [447,] 0.22664809 0.4998836 0.6564700 0.7041070 0.7078922 0.7456247 0.8425252 #>  [448,] 0.15953551 0.4683517 0.6165811 0.6403716 0.6404208 0.6429618 0.6667285 #>  [449,] 0.38476605 0.5847199 0.9225560 1.0058373 1.0265435 1.0886779 1.1191891 #>  [450,] 0.37958277 0.4738659 0.6706418 0.6762403 0.7365833 0.7472350 0.7540989 #>  [451,] 0.29533902 0.3904062 0.4059239 0.4909061 0.5157610 0.5457756 0.6537565 #>  [452,] 0.18384470 0.2574195 0.3023650 0.3676943 0.3923155 0.4727144 0.4880142 #>  [453,] 0.23315693 0.3609791 0.3686906 0.3789479 0.4420219 0.4751119 0.5400228 #>  [454,] 0.44466018 0.5328233 0.5390179 0.5696693 0.5698916 0.5723353 0.5998823 #>  [455,] 0.46418727 0.4929105 0.5296940 0.5360746 0.5422465 0.5431432 0.5573757 #>  [456,] 0.51598262 0.6939149 0.6990771 0.7921608 0.8264805 0.9204554 0.9264927 #>  [457,] 0.34140367 0.4628475 0.4815389 0.6104413 0.6600520 0.7151239 0.7551210 #>  [458,] 0.39276418 0.6139554 0.7781823 0.8076317 0.8388911 1.0022214 1.1317368 #>  [459,] 0.26742910 0.3032557 0.4038843 0.4215152 0.4813051 0.5595818 0.5599605 #>  [460,] 0.38773330 0.4136223 0.4252331 0.4680341 0.5068238 0.5474049 0.5712320 #>  [461,] 0.44706637 0.4658726 0.4728639 0.5482704 0.5574257 0.5692769 0.5699098 #>  [462,] 0.31787977 0.3960255 0.3980539 0.3986121 0.4014940 0.4651564 0.4655723 #>  [463,] 0.23317209 0.2860726 0.3679543 0.3795805 0.4600902 0.4983493 0.5318898 #>  [464,] 0.18794566 0.3734149 0.4102973 0.4602306 0.4906990 0.5148421 0.5245963 #>  [465,] 0.38316080 0.5084588 0.5256495 0.5667430 0.5888920 0.6245746 0.6425686 #>  [466,] 0.21314459 0.3958036 0.4390601 0.4652610 0.5039770 0.5238077 0.5286713 #>  [467,] 0.25776253 0.3790156 0.5072713 0.5393935 0.5979930 0.6448612 0.6681422 #>  [468,] 0.44808254 0.5342290 0.5702193 0.6992933 0.7299866 0.8022445 0.8614753 #>  [469,] 0.58753280 1.0010168 1.0115016 1.1136304 1.1461321 1.2826051 1.3319639 #>  [470,] 0.06871872 0.2665413 0.4164330 0.4986539 0.5572452 0.5992714 0.6671332 #>  [471,] 0.38440841 0.4396175 0.4941508 0.5556599 0.6093660 0.6192375 0.6265475 #>  [472,] 0.52462764 0.5737900 0.5913905 0.6351038 0.6786769 0.6824583 0.7117206 #>  [473,] 0.60979616 0.6473506 0.6620913 0.6850623 0.6952677 0.7310414 0.7359958 #>  [474,] 0.47060998 0.5004586 0.5074360 0.5225136 0.5393015 0.5699606 0.5723194 #>  [475,] 0.46699542 0.5723795 0.5991759 0.6209194 0.6403321 0.6484395 0.6532929 #>  [476,] 0.59209065 0.7777582 0.7935589 0.8319618 0.8756145 0.9209439 0.9343081 #>  [477,] 0.24613135 0.5083637 0.6348427 0.6670078 0.7928844 0.8935746 0.9435160 #>  [478,] 0.25834011 0.3903081 0.4037101 0.4056926 0.4102973 0.4180639 0.4281105 #>  [479,] 0.43831103 0.5027846 0.5079410 0.5089955 0.5507408 0.5698916 0.5749961 #>  [480,] 0.50219646 0.5140668 0.7407528 0.8011479 0.8202017 0.8820785 0.9272302 #>  [481,] 0.40673015 0.4252331 0.4816252 0.5914805 0.6129910 0.7163955 0.7701150 #>  [482,] 0.44682260 0.4950806 0.6106882 0.6732365 0.6839827 0.7192578 0.7330679 #>  [483,] 0.67102045 0.7830074 0.8474764 0.8691102 0.8699342 0.8757645 0.9474823 #>  [484,] 0.38083161 0.3877333 0.4067301 0.6170202 0.6676402 0.7525654 0.8376672 #>  [485,] 0.82673788 1.0858125 1.0874065 1.1337415 1.1967386 1.2199732 1.2831250 #>  [486,] 0.60285998 0.6600520 0.7028447 0.7787815 0.7819103 0.7881833 0.7977845 #>  [487,] 0.22976604 0.3644313 0.3789479 0.3824582 0.4117915 0.5140069 0.5218521 #>  [488,] 0.59869922 0.6273255 0.6905824 0.7366677 0.8110685 0.8677613 0.8686840 #>  [489,] 0.64622248 0.7417742 0.8260102 0.8886359 0.9251622 0.9834737 1.0181844 #>  [490,] 0.61541515 0.7009581 0.7339311 0.7358090 0.8230886 0.8319175 0.8447853 #>  [491,] 0.52348618 0.5737900 0.6675644 0.7701293 0.7837152 0.8399245 0.8676661 #>  [492,] 0.32775236 0.3493342 0.4390601 0.4432512 0.4451287 0.4632520 0.4771964 #>  [493,] 0.61401287 0.7494150 0.7727121 0.9025165 0.9145882 0.9165399 0.9219391 #>  [494,] 0.73686907 1.1235174 1.1532584 1.1701375 1.1718342 1.2240063 1.3020256 #>  [495,] 0.65274741 0.6790349 0.6868635 0.7237403 0.7347860 0.7356052 0.7802867 #>  [496,] 0.66989069 0.6906767 0.7007948 0.7377237 0.8237035 0.8813422 0.8936825 #>  [497,] 0.51263735 0.5402678 0.5751923 0.5784671 0.5791733 0.5849457 0.5991182 #>  [498,] 0.27201295 0.4585323 0.4780684 0.6431795 0.6578966 0.7321939 0.8224821 #>  [499,] 0.43562438 0.5838864 0.6214484 0.7163638 0.7564621 0.7761190 0.8286322 #>  [500,] 0.40255286 0.4050833 0.4880142 0.5115850 0.5597200 0.5623285 0.5645603 #>  [501,] 0.63111003 0.6557889 0.8755930 0.8845170 0.9007308 1.0335525 1.0353599 #>  [502,] 0.44162908 0.5534233 0.5858626 0.6355162 0.6520530 0.6653001 0.7431775 #>  [503,] 0.22929244 0.4085544 0.4226711 0.4760229 0.5128216 0.6502542 0.6730743 #>  [504,] 0.48577417 0.7357395 0.7412948 0.7817799 0.8163634 0.8244541 0.8489197 #>  [505,] 0.20855892 0.3362172 0.4322237 0.4669161 0.4795854 0.4833911 0.5198646 #>  [506,] 0.66870781 1.1541586 1.2359808 1.2620623 1.2857950 1.3119919 1.4232036 #>  [507,] 0.43377472 0.5092976 0.5110235 0.5534233 0.5802145 0.6594024 0.6982721 #>  [508,] 0.43965253 0.7165284 0.8344001 0.8635252 0.9182352 0.9357682 1.0244202 #>  [509,] 0.55319359 0.6190071 0.6416964 0.6732875 0.7114571 0.7211128 0.7314383 #>  [510,] 0.56987824 0.6140129 0.8038782 0.8057024 0.8074941 0.8140909 0.8146708 #>  [511,] 0.53871531 0.5453961 0.6181869 0.6415747 0.6479790 0.6545318 0.6842146 #>  [512,] 0.34366163 0.3840401 0.5279982 0.5548366 0.5549901 0.5656759 0.5725950 #>  [513,] 0.50790117 0.8495410 0.9382667 1.1364125 1.1378713 1.1403451 1.2673691 #>  [514,] 0.33828070 0.4722096 0.4862113 0.5578821 0.5595346 0.5637704 0.5942126 #>  [515,] 0.68407846 0.7753184 0.7815542 0.8629894 0.8813935 1.0101130 1.0902911 #>  [516,] 0.45953273 0.6695041 0.7173615 0.7580533 0.7726073 0.7742768 0.8050179 #>  [517,] 0.41006701 0.5493585 0.5779026 0.6229081 0.6816669 0.6933892 0.7153722 #>  [518,] 0.31228134 0.4432113 0.4507406 0.5012716 0.5129743 0.5293531 0.5311910 #>  [519,] 0.19873601 0.5389093 0.5621557 0.5832105 0.6006306 0.6327554 0.6895884 #>  [520,] 0.25243580 0.5519172 0.6252349 0.6798965 0.6888640 0.7018770 0.7048297 #>  [521,] 0.28680174 0.6187497 0.6711493 0.7060571 0.7501878 0.7658995 0.8050180 #>  [522,] 0.24670742 0.2823564 0.5006840 0.5297542 0.6106882 0.6378847 0.6618446 #>  [523,] 0.74102777 0.7938500 0.8308033 0.8409959 0.9049392 0.9144393 0.9771665 #>  [524,] 1.47899359 1.6833734 1.8080974 1.8229951 1.8568608 1.9084404 1.9907289 #>  [525,] 0.23526534 0.2568780 0.2974816 0.4635971 0.5852440 0.6005118 0.6418710 #>  [526,] 0.70079479 0.7341477 0.7344739 0.7875244 0.8146621 0.8854445 0.9012452 #>  [527,] 0.39933149 0.4641364 0.5022086 0.5153069 0.5456251 0.5561802 0.5585575 #>  [528,] 0.45513529 0.7946556 0.9518708 1.0326596 1.0358790 1.0819044 1.0839585 #>  [529,] 0.23825973 0.8361178 0.9511690 1.0039775 1.1385537 1.1548919 1.2606214 #>  [530,] 0.73788785 0.7751025 0.9119461 1.0095212 1.0190723 1.0219866 1.0313053 #>  [531,] 0.30934577 0.7261464 0.7309213 0.7514681 0.7664130 0.7719747 0.7793311 #>  [532,] 0.62586022 0.6469281 0.8427676 0.9984122 1.0097829 1.0351610 1.0400281 #>  [533,] 1.20223233 1.3962126 1.4361488 1.4828528 1.5077060 1.5168453 1.5306282 #>  [534,] 0.48708689 0.7761190 0.7777406 0.7947935 0.9170826 1.0681241 1.1188537 #>  [535,] 0.43300081 0.4504761 0.4675766 0.5226944 0.5328028 0.6906767 0.7204733 #>  [536,] 0.26107413 0.3059713 0.3316848 0.3426753 0.3559634 0.3602434 0.4610570 #>  [537,] 0.36788043 0.4009039 0.5223831 0.5878701 0.6187649 0.6320372 0.6447293 #>  [538,] 0.29980146 0.4432512 0.5077859 0.5295990 0.5367938 0.5650142 0.6005759 #>  [539,] 0.25091231 0.4427903 0.4837330 0.5092775 0.6797807 0.6954875 0.7104353 #>  [540,] 0.30992044 0.3436616 0.3493345 0.4620443 0.4947056 0.5101990 0.5391502 #>  [541,] 0.37466869 0.4724188 0.5879572 0.6018173 0.6031142 0.6293678 0.6372477 #>  [542,] 0.29858179 0.3841931 0.3959561 0.5024054 0.5496862 0.5731698 0.5993651 #>  [543,] 1.09122300 1.2347260 1.3839958 1.4158339 1.5642849 1.6381827 1.7041840 #>  [544,] 0.23216586 0.2989698 0.3003554 0.3732734 0.3986121 0.4555126 0.5072185 #>  [545,] 0.31448253 0.5571425 0.5670071 0.7084213 0.7101988 0.7662521 0.7701152 #>  [546,] 0.55327432 0.6533902 0.7034590 0.7314383 0.7467353 0.7906846 0.8735177 #>  [547,] 0.37602200 0.5890256 0.6262455 0.6372477 0.6692353 0.7670251 0.7704583 #>  [548,] 0.17055557 0.2568780 0.3764121 0.3885919 0.4266872 0.4932760 0.6227190 #>  [549,] 0.42126214 0.5711409 0.6929366 0.7206858 0.7365700 0.7650172 0.7692440 #>  [550,] 0.24572687 0.3023789 0.4329745 0.4881619 0.5891457 0.6581368 0.7207245 #>  [551,] 0.27014457 0.4039112 0.4442709 0.4600719 0.5462964 0.6244631 0.6419228 #>  [552,] 0.94120429 1.0206974 1.1854617 1.2392153 1.2794817 1.2925755 1.3045666 #>  [553,] 0.36649316 0.4205856 0.4352433 0.4629009 0.4798423 0.4861152 0.5170850 #>  [554,] 0.61630773 0.6464587 0.7471850 0.9493585 0.9895451 0.9947786 1.0148594 #>  [555,] 0.33505138 0.4603230 0.4808423 0.4829742 0.5012716 0.5242530 0.5861207 #>  [556,] 0.28404324 0.3869230 0.4330430 0.5391003 0.5842189 0.5940960 0.6073446 #>  [557,] 0.31897074 0.6730791 0.6787728 0.7245034 0.7959046 0.8250744 0.8318133 #>  [558,] 0.42814509 0.4558486 0.5061070 0.5179251 0.5978410 0.6767150 0.7419622 #>  [559,] 0.36483382 0.4297540 0.5250047 0.5266007 0.5378445 0.5483115 0.5609829 #>  [560,] 0.32123787 0.3568809 0.4652210 0.4667588 0.5145179 0.5211393 0.5265832 #>  [561,] 0.24614741 0.2695228 0.3202779 0.4285492 0.5191519 0.5962803 0.5979310 #>  [562,] 0.20251638 0.2799276 0.4987389 0.5005967 0.5407187 0.5667430 0.5771283 #>  [563,] 0.35565994 0.3904062 0.4451036 0.4454667 0.4808423 0.5016936 0.5064944 #>  [564,] 0.25243580 0.4890801 0.5082224 0.5831605 0.7242099 0.7650629 0.7750805 #>  [565,] 0.22963173 0.4222940 0.4950298 0.5180584 0.5600844 0.6693587 0.6940636 #>  [566,] 0.47776516 0.5356855 0.7355553 0.7810252 0.7876475 0.8005719 0.8296864 #>  [567,] 0.46007073 0.5831605 0.5999639 0.6282199 0.6798965 0.6807868 0.6912538 #>  [568,] 0.26582475 0.4811257 0.5085089 0.5552474 0.5575716 0.6045276 0.6362629 #>  [569,] 0.40276195 0.4498686 0.4814276 0.5004586 0.5475348 0.5804239 0.6139438 #>  [570,] 0.26932775 0.3158727 0.4316656 0.4682757 0.4951716 0.5012727 0.5676047 #>  [571,] 0.79341256 0.8078005 0.9136499 1.0113813 1.0559976 1.1513116 1.1536827 #>  [572,] 0.22259778 0.5065417 0.5770693 0.6354614 0.6668660 0.6896168 0.7224890 #>  [573,] 0.36791223 0.4122923 0.4595327 0.5260961 0.6202617 0.6280712 0.6299681 #>  [574,] 0.61923747 0.6235464 0.6404208 0.7029254 0.7074519 0.7076574 0.7456894 #>  [575,] 0.51581018 0.5356855 0.5639575 0.5841314 0.6540503 0.6622870 0.7394152 #>  [576,] 0.61155007 1.0643215 1.1799902 1.2827125 1.3692239 1.4027675 1.4384864 #>  [577,] 0.38838918 0.4593026 0.4600719 0.4981046 0.5307241 0.5325836 0.5518212 #>  [578,] 0.25741949 0.2588494 0.2985027 0.4013169 0.4811154 0.5574257 0.5645603 #>  [579,] 0.14445581 0.3293962 0.5005967 0.6316085 0.6437487 0.7351557 0.7672171 #>  [580,] 0.22227698 0.2989698 0.3784022 0.4462780 0.4655723 0.5745505 0.6622061 #>  [581,] 0.76857307 0.8555977 0.8583291 0.9202982 0.9232950 0.9285631 0.9397371 #>  [582,] 0.40276195 0.4736238 0.4749825 0.4815856 0.5138419 0.6577012 0.6584426 #>  [583,] 0.56301149 0.5660296 0.5666283 0.5916877 0.6019872 0.6378847 0.6659717 #>  [584,] 0.53991209 0.5513235 0.5722022 0.6198958 0.6233297 0.7087775 0.7761518 #>  [585,] 0.33079576 0.3585361 0.6016411 0.6063733 0.7240046 0.7542947 0.7640651 #>  [586,] 0.34960552 0.5268097 0.6284385 0.6659717 0.6741496 0.6870306 0.7203728 #>  [587,] 0.66117014 0.8135878 0.8735863 0.9008797 0.9718377 1.0200797 1.0463206 #>  [588,] 0.74098244 1.0311799 1.0696305 1.0787288 1.0977374 1.1030121 1.1464051 #>  [589,] 0.33567944 0.5710056 0.7567425 0.7641611 0.7783857 0.7814257 0.8805795 #>  [590,] 0.47411055 0.5229583 0.5435979 0.5759595 0.6384306 0.6497304 0.6691283 #>  [591,] 0.37788018 0.4131396 0.4923127 0.5272564 0.6780589 0.7772605 0.7801184 #>  [592,] 0.27568943 0.6374282 0.6608608 0.7204369 0.7561525 0.7691842 0.8341228 #>  [593,] 0.51147071 0.5591942 0.6151885 0.6220170 0.6680380 0.7142468 0.7146571 #>  [594,] 0.32647603 0.4002646 0.4082684 0.4459497 0.4667291 0.4798423 0.4847773 #>  [595,] 0.47522410 0.5305030 0.5576496 0.5859995 0.6446899 0.7463098 0.7516393 #>  [596,] 0.36887368 0.4703558 0.4928247 0.5676640 0.6502985 0.6605452 0.6795289 #>  [597,] 0.64693037 0.7241397 0.7250365 0.7834253 0.8254954 0.8416811 0.8771203 #>  [598,] 0.38419769 0.7908567 0.9110621 0.9331033 0.9420567 0.9744322 0.9850823 #>  [599,] 0.19194975 0.3549080 0.4847166 0.5751923 0.5822978 0.6365874 0.6523293 #>  [600,] 0.23679494 0.2697902 0.2802988 0.3267035 0.3677102 0.4274454 0.4417329 #>  [601,] 0.26840997 0.4029775 0.4580173 0.4930190 0.5328195 0.5727354 0.5993160 #>  [602,] 0.64926279 0.7561525 0.7790212 0.8712297 0.9304713 0.9457155 0.9989658 #>  [603,] 0.39067918 0.5191953 0.5223831 0.5507284 0.5552474 0.5599605 0.5873092 #>  [604,] 0.38643289 0.5490454 0.7040376 0.7129595 0.8772913 0.9544903 0.9985656 #>  [605,] 0.34960552 0.4426196 0.7100649 0.7197331 0.7413757 0.7610869 0.7744358 #>  [606,] 0.34238692 0.3484683 0.4091261 0.4164330 0.4712145 0.6215695 0.6733038 #>  [607,] 0.54037225 0.5750905 0.6412678 0.6843614 0.7200962 0.7364964 0.7373633 #>  [608,] 0.40616005 0.5361611 0.6063733 0.6768673 0.7274576 0.7341477 0.7804462 #>  [609,] 0.31373420 0.3519379 0.3840303 0.5453961 0.6918925 0.7013035 0.7131944 #>  [610,] 0.26253131 0.2972172 0.4027192 0.4331056 0.5407542 0.5452302 0.5463969 #>  [611,] 0.43193201 0.4440713 0.5599040 0.5612971 0.6131776 0.6204931 0.6669378 #>  [612,] 0.56272462 0.5924629 0.7912805 0.8123456 0.8914444 0.9364813 0.9381215 #>  [613,] 0.55319359 0.5936286 0.5993656 0.6533902 0.6745842 0.7123065 0.7449902 #>  [614,] 0.48065979 0.5346496 0.5888933 0.5924629 0.6120017 0.6377695 0.6772254 #>  [615,] 0.39941764 0.4427903 0.4685511 0.4904197 0.4985346 0.5088349 0.5918809 #>  [616,] 0.40539792 0.4106088 0.4940483 0.5098037 0.5403574 0.5924506 0.6108573 #>  [617,] 0.37588327 0.4897509 0.4975662 0.5305807 0.5418255 0.5598245 0.6148220 #>  [618,] 0.27525499 0.2852425 0.4553605 0.5073274 0.5303449 0.5463784 0.5509223 #>  [619,] 0.39070136 0.4237964 0.4833103 0.5276887 0.5416028 0.5455169 0.5556988 #>  [620,] 0.64692811 0.8072376 0.8073271 0.8905062 0.9775066 1.0965314 1.1288535 #>  [621,] 0.29647137 0.3023789 0.5223479 0.5493785 0.5611849 0.6799060 0.6927625 #>  [622,] 0.34258040 0.3451054 0.4818194 0.5621557 0.5771702 0.5984875 0.6009925 #>  [623,] 0.52553840 0.5511338 0.5958806 0.6422688 0.6465385 0.6935539 0.7352222 #>  [624,] 0.36170999 0.5143135 0.5539178 0.5556967 0.6129203 0.6194464 0.6277288 #>  [625,] 0.18647639 0.2089200 0.2538467 0.2816866 0.3901090 0.3921817 0.4095019 #>  [626,] 0.36842388 0.3835802 0.3920524 0.5996906 0.6255293 0.6316222 0.6424831 #>  [627,] 0.40295242 0.4095019 0.4135148 0.4219809 0.4852891 0.4887856 0.5055020 #>  [628,] 0.58592260 0.8740884 0.9389479 0.9970515 1.1053635 1.1506112 1.1671298 #>  [629,] 0.38022212 0.7801091 0.7918028 0.8723989 0.8840553 0.9371566 0.9660638 #>  [630,] 0.31235702 0.3644313 0.4362924 0.4567398 0.4669161 0.4853134 0.5305534 #>  [631,] 0.38898967 0.4053979 0.4375378 0.4535000 0.4874822 0.5129343 0.5488556 #>  [632,] 0.32670353 0.3360558 0.3941630 0.4237242 0.4314217 0.4531417 0.4660067 #>  [633,] 0.46855112 0.4889158 0.6251171 0.6351038 0.6445371 0.6659036 0.6735982 #>  [634,] 0.88845289 0.9865532 1.1986253 1.2825214 1.4162551 1.4249784 1.4538816 #>  [635,] 0.35248354 0.4131396 0.4439717 0.7267293 0.7535572 0.7640429 0.7906645 #>  [636,] 0.26932775 0.3729382 0.4451036 0.4676164 0.4762525 0.4812219 0.5039377 #>  [637,] 0.46792616 0.4999225 0.5174634 0.5643062 0.5703449 0.6503833 0.6597913 #>  [638,] 0.61757158 0.7718967 0.8936825 1.0167757 1.0659219 1.0930037 1.1271880 #>  [639,] 0.28607264 0.2919650 0.3602702 0.3608428 0.3781624 0.4102742 0.5046580 #>  [640,] 0.53359119 0.7166567 0.7245034 0.7703228 0.7736624 0.7771155 0.8469208 #>  [641,] 0.49806255 0.5342290 0.5400128 0.7185859 0.7410278 0.7764238 0.8156705 #>  [642,] 0.20251638 0.3928256 0.4368952 0.5099912 0.5242157 0.6268319 0.6316085 #>  [643,] 0.56468011 0.6186397 0.6559560 0.6933958 0.7409824 0.7557939 0.7830869 #>  [644,] 0.56722298 0.5938335 0.7152489 0.7476812 0.7686076 0.7692327 0.7725579 #>  [645,] 0.62912616 0.7358090 0.7523088 0.7634878 0.7639136 0.7926669 0.8802196 #>  [646,] 0.42561491 0.5095219 0.5487187 0.5871833 0.6067683 0.6135836 0.6234271 #>  [647,] 0.39173828 0.4596485 0.5493585 0.6986404 0.7576601 0.8181481 0.8273262 #>  [648,] 0.49334852 0.5174027 0.6055473 0.6333370 0.6457954 0.6635528 0.6823659 #>  [649,] 0.49361133 0.6500589 0.7843365 0.8129484 0.8335110 0.8417339 0.8459063 #>  [650,] 0.37092177 0.4506450 0.4596631 0.4928247 0.5038665 0.5500431 0.6208559 #>  [651,] 0.37074374 0.4432113 0.5684323 0.5759069 0.5871833 0.6000562 0.6022690 #>  [652,] 0.25798880 0.2914157 0.3362172 0.3686906 0.4653986 0.4709355 0.5106813 #>  [653,] 0.37464898 0.5121838 0.5511338 0.6846221 0.7020155 0.8174959 0.8332641 #>  [654,] 0.50398041 0.5503058 0.5612971 0.6116081 0.6264787 0.6331322 0.7272709 #>  [655,] 0.46189505 0.5021418 0.5646801 0.6546474 0.7276895 0.7406296 0.7496772 #>  [656,] 0.34891868 0.3596010 0.3883892 0.3965368 0.4039112 0.5026503 0.5597524 #>  [657,] 0.19891288 0.3909543 0.5061070 0.5892227 0.6700534 0.6727410 0.6879035 #>  [658,] 0.49579153 0.5827191 0.5975187 0.6262358 0.6489795 0.7177882 0.7204733 #>  [659,] 0.19454324 0.3880844 0.4533370 0.6562980 0.6939102 0.7131831 0.7181921 #>  [660,] 0.64208379 0.7047976 0.8489197 0.8740884 0.9350032 0.9652756 0.9685336 #>  [661,] 0.33808699 0.4231020 0.5344913 0.5703033 0.5723971 0.6265653 0.6316764 #>  [662,] 0.75608282 0.8361642 1.1188677 1.2515525 1.2635873 1.2923658 1.3417487 #>  [663,] 0.55500073 0.8300306 0.8391487 0.8506486 0.8537514 0.8890706 0.9189336 #>  [664,] 0.58495189 0.9179552 1.0198029 1.1589834 1.2095960 1.3490982 1.3510106 #>  [665,] 0.26121410 0.2992207 0.3366179 0.3835802 0.4407288 0.4445285 0.4658098 #>  [666,] 0.47181434 0.4837330 0.4889158 0.4904197 0.5390252 0.6254468 0.7596698 #>  [667,] 0.34870918 0.3597367 0.4423320 0.4602306 0.4667588 0.4829021 0.4847773 #>  [668,] 0.34746827 0.4440324 0.4510174 0.4792760 0.5427146 0.5487355 0.6455158 #>  [669,] 0.34732937 0.4029775 0.4254740 0.4907092 0.5642491 0.5717344 0.5888920 #>  [670,] 0.30474659 0.4946807 0.5723795 0.6961557 0.7304045 0.7866039 0.7973382 #>  [671,] 0.18541205 0.2625313 0.3821534 0.3980982 0.5005270 0.5025101 0.5175117 #>  [672,] 0.46757659 0.4838067 0.4894314 0.5305807 0.5647908 0.5975187 0.6221353 #>  [673,] 0.47443446 0.7727121 0.8770432 0.9110621 0.9197471 1.0237278 1.0463206 #>  [674,] 0.38269738 0.6573466 0.7753207 0.8074941 0.9025165 0.9307798 0.9482923 #>  [675,] 0.36880341 0.4941508 0.5191417 0.5657945 0.6688599 0.6825721 0.7029254 #>  [676,] 0.37097007 0.3896532 0.4117915 0.4368704 0.4401067 0.4593960 0.4853134 #>  [677,] 0.56012471 0.7227379 0.7913330 0.8514997 0.8591216 0.9627421 1.0910988 #>  [678,] 0.31492120 0.4680132 0.6419843 0.6567722 0.6835868 0.7211285 0.7327304 #>  [679,] 0.66181525 0.6724057 0.7186642 0.7709835 0.7942240 0.8041100 0.8121943 #>  [680,] 0.39595615 0.4355838 0.4778087 0.4824089 0.4988487 0.5484624 0.5746557 #>  [681,] 0.31587273 0.4043314 0.4762525 0.5039804 0.5092976 0.5340214 0.5921218 #>  [682,] 0.27369054 0.5335912 0.7040808 0.7260159 0.7639136 0.7959046 0.8274999 #>  [683,] 0.46838242 0.4776314 0.5969850 0.6414778 0.6739447 0.7169093 0.7178216 #>  [684,] 0.40195591 0.4710389 0.5228412 0.7189123 0.8909322 0.9304713 1.0830186 #>  [685,] 0.97320823 1.0759608 1.0814383 1.0838180 1.1684576 1.2642926 1.2875050 #>  [686,] 0.47311666 0.5114707 0.5202134 0.6214509 0.8008426 0.8085097 0.8188319 #>  [687,] 0.62518587 1.0142183 1.1102467 1.2616921 1.2959055 1.3544186 1.3881356 #>  [688,] 0.43211918 0.4800244 0.4801863 0.5438331 0.5456330 0.5623026 0.5984866 #>  [689,] 0.51386130 0.5243615 0.5712827 0.6884083 0.7107914 0.7549853 0.7688077 #>  [690,] 0.85219655 1.1329950 1.2284359 1.2753920 1.3045172 1.3916325 1.4006011 #>  [691,] 0.56392310 0.5935264 0.6250122 0.6357300 0.6495689 0.6933958 0.7054782 #>  [692,] 0.43562438 0.4971171 0.5712320 0.6129910 0.6767155 0.6855101 0.7525654 #>  [693,] 0.66768544 0.7921608 0.8060156 0.8076317 0.8369106 1.0263400 1.0943109 #>  [694,] 0.27568943 0.5265766 0.6370648 0.7014237 0.7918485 0.8064955 0.8071469 #>  [695,] 0.26583370 0.3614742 0.3974649 0.4847166 0.5615323 0.5681733 0.6123025 #>  [696,] 0.38965138 0.4330008 0.4894314 0.4975662 0.5432121 0.6342236 0.6698907 #>  [697,] 0.72316040 0.8817976 1.0326011 1.0814038 1.1383426 1.1830434 1.2175697 #>  [698,] 0.30904980 0.5655277 0.6994195 0.7338952 0.7804462 0.8486074 0.8568070 #>  [699,] 0.67190831 0.7453602 0.8269042 0.8320179 0.8842499 0.9486394 0.9616040 #>  [700,] 0.30230057 0.5496038 0.5908802 0.6434339 0.6793311 0.7315332 0.8035920 #>  [701,] 0.35688086 0.4130647 0.4183440 0.4535000 0.4589059 0.5393509 0.5403574 #>  [702,] 0.23526534 0.3764121 0.4222072 0.4683517 0.5123467 0.5553042 0.6075889 #>  [703,] 0.24131026 0.4105790 0.5529791 0.6008261 0.6081150 0.6165852 0.6277288 #>  [704,] 0.45708648 0.4658098 0.4985346 0.5452302 0.5572833 0.5742512 0.5952502 #>  [705,] 0.15454845 0.3639775 0.3663625 0.3749097 0.3837702 0.4250040 0.5118959 #>  [706,] 0.48196951 0.5218895 0.6230399 0.6699747 0.6816669 0.7132474 0.7658995 #>  [707,] 0.21850373 0.6567722 0.7206858 0.7713248 0.7740485 0.7916856 0.8262894 #>  [708,] 0.47396301 0.5993160 0.6119358 0.6291567 0.6302315 0.6445627 0.6768719 #>  [709,] 0.37920380 0.4718768 0.4800244 0.4833103 0.5045005 0.5450070 0.5452708 #>  [710,] 0.24131026 0.4778087 0.5213058 0.5556967 0.5638635 0.5691927 0.6184840 #>  [711,] 0.34492994 0.5218702 0.6187497 0.6497222 0.6699747 0.7075857 0.7277532 #>  [712,] 0.63010472 0.6563953 0.7361220 0.8838718 0.9431716 0.9583055 0.9869870 #>  [713,] 0.33194932 0.3608428 0.4196159 0.5455854 0.5514026 0.5515162 0.5591812 #>  [714,] 0.33818843 0.3807721 0.4040420 0.4424813 0.4680132 0.5827629 0.6486918 #>  [715,] 0.72496892 0.7333666 0.7587846 0.8294172 0.8388911 0.8690308 0.8704726 #>  [716,] 0.19575535 0.2185948 0.3449956 0.3493345 0.4532861 0.5549901 0.6443132 #>  [717,] 0.59700433 0.6493034 0.6572596 0.7060571 0.7075857 0.7197512 0.7555640 #>  [718,] 0.47220350 0.7874865 0.8873804 0.9693774 0.9903985 1.0013281 1.0437978 #>  [719,] 0.39342764 0.4341347 0.4641094 0.4786180 0.5099912 0.5372578 0.5771283 #>  [720,] 0.45134837 0.4718143 0.5827191 0.6307638 0.6735982 0.6818074 0.6907728 #>  [721,] 0.76661307 0.8404315 0.8945749 0.9027076 0.9110840 0.9594948 1.0005631 #>  [722,] 0.99525743 1.2344243 1.3163724 1.3807828 1.3838733 1.3892503 1.3892537 #>  [723,] 0.54575618 0.5678282 0.5935447 0.6216399 0.6519747 0.6808117 0.6829226 #>  [724,] 0.33130841 0.7604885 0.8276432 0.8637833 0.8643892 0.8817976 0.9392670 #>  [725,] 0.34946363 0.4274454 0.4413304 0.4660304 0.4968979 0.4980639 0.5236413 #>  [726,] 0.36107150 0.4736238 0.4858373 0.5256589 0.5329801 0.6156671 0.6497304 #>  [727,] 0.34659348 0.4469336 0.5595346 0.5817353 0.5988571 0.6095950 0.6156672 #>  [728,] 0.38404007 0.4456372 0.4951474 0.5121838 0.5366125 0.5428292 0.5737572 #>  [729,] 0.40508328 0.4150241 0.4633293 0.4708687 0.4974015 0.5464413 0.5702952 #>  [730,] 0.97970308 1.0651456 1.1271880 1.1549018 1.3407770 1.3493498 1.3945841 #>  [731,] 0.15454845 0.2808286 0.3135673 0.3781624 0.3806673 0.3924175 0.4195085 #>  [732,] 0.35193786 0.4054254 0.5310527 0.6311497 0.6906544 0.7105873 0.7465266 #>  [733,] 0.37340327 0.4019559 0.5877996 0.7507458 0.9072452 0.9379109 0.9930015 #>  [734,] 0.30295237 0.3964144 0.5193700 0.5305299 0.5389589 0.5583164 0.5637291 #>  [735,] 0.58739288 0.8258461 0.9262523 0.9822617 0.9857795 0.9869800 1.0086526 #>  [736,] 0.27176732 0.5329801 0.6167114 0.6490231 0.6766266 0.7018026 0.7412334 #>  [737,] 0.96013279 1.2368028 1.3036926 1.3338213 1.3968447 1.4396550 1.4861015 #>  [738,] 1.29570492 1.4158466 1.4741778 1.4808552 1.6323843 1.6403881 1.6920905 #>  [739,] 0.26139017 0.3679122 0.4059239 0.4354341 0.4847733 0.6067683 0.6471172 #>  [740,] 0.41097978 0.5219570 0.5979531 0.6005764 0.6217967 0.6527975 0.6940636 #>  [741,] 0.53321145 0.9968703 1.0017805 1.2267598 1.2705076 1.2767387 1.2806194 #>  [742,] 0.51870335 0.5660072 0.6322789 0.8332795 0.8420854 0.8618306 0.8714739 #>  [743,] 0.28240465 0.5305030 0.5682972 0.5807117 0.6241496 0.6398913 0.6954634 #>  [744,] 0.67877278 0.7166567 0.8895267 0.9435860 1.0940484 1.1285886 1.1481164 #>  [745,] 0.18541205 0.3503050 0.4168380 0.4331056 0.4443386 0.4752165 0.4943220 #>  [746,] 0.62872061 0.7269724 0.8040823 0.8286635 0.8729134 0.8879324 0.9129391 #>  [747,] 0.28240465 0.5170972 0.6446899 0.6651514 0.6806494 0.6959925 0.7945297 #>  [748,] 0.28730656 0.3901090 0.4219809 0.4856136 0.4988773 0.5140069 0.5153069 #>  [749,] 1.08119583 1.1829954 1.2320565 1.2371661 1.2550925 1.2673814 1.3097924 #>  [750,] 0.84954104 1.0337894 1.1290629 1.2742173 1.3051842 1.3224751 1.3247368 #>  [751,] 0.38557902 0.6522377 0.6707700 0.6768719 0.6988030 0.7351250 0.7374333 #>  [752,] 0.28714966 0.5979930 0.6307319 0.6567797 0.7333325 0.7500483 0.7549853 #>  [753,] 0.51102351 0.5130960 0.5258883 0.5394474 0.5406675 0.5455169 0.5556994 #>  [754,] 0.43053414 0.5712827 0.5935447 0.6311100 0.7479698 0.7869896 0.8245671 #>  [755,] 0.46215540 0.6103496 0.7241140 0.7549684 0.7753535 0.7815392 0.8188241 #>  [756,] 0.35853614 0.4061601 0.4338545 0.5655277 0.5934138 0.7524920 0.7875244 #>  [757,] 0.57498517 0.8202017 0.8591528 0.9708208 1.0414791 1.0414951 1.0547489 #>  [758,] 0.38898967 0.4428798 0.4552766 0.5457058 0.5924506 0.6271732 0.6384452 #>  [759,] 0.99136469 0.9928122 1.1980658 1.2705076 1.4114515 1.4170329 1.4327293 #>  [760,] 0.57430770 0.7631169 0.8192483 0.8711415 0.8786258 0.9048916 0.9577153 #>  [761,] 0.27201295 0.4573538 0.6334026 0.6514772 0.6791145 0.7517277 0.7800899 #>  [762,] 0.28431591 0.6243325 0.7322672 0.7358673 0.8254954 0.8458020 0.8781915 #>  [763,] 0.61356709 0.6178851 0.6877835 0.7196846 0.7610869 0.7701150 0.7713208 #>  [764,] 0.72697240 0.7740987 0.8007380 0.8762298 0.8813425 0.9793190 1.0388307 #>  [765,] 0.56272462 0.5833415 0.8659824 1.0206974 1.0260444 1.0301530 1.0326011 #>  [766,] 0.43450535 0.4991901 0.5670814 0.5714151 0.5868668 0.6210258 0.6257238 #>  [767,] 1.27242641 1.2949795 1.3204468 1.4092781 1.4827540 1.5589666 1.5725815 #>  [768,] 0.65624296 0.6986558 0.7008211 0.7449331 0.7588010 0.7600650 0.7907169 #>  [769,] 0.35973670 0.4427335 0.4652210 0.5064786 0.5313650 0.5477347 0.5481954 #>  [770,] 0.42409001 0.4625718 0.5287340 0.5728231 0.6165811 0.6216206 0.6272535 #>  [771,] 0.26287039 0.3337534 0.4267490 0.4402988 0.4598987 0.5274070 0.5533264 #>  [772,] 0.57261847 0.6827237 0.9331033 1.0784160 1.1189187 1.1589660 1.1864878 #>  [773,] 0.42229402 0.4470855 0.5006293 0.5332094 0.5757347 0.5824159 0.5868668 #>  [774,] 0.35203586 0.3758350 0.5098550 0.5298628 0.6461105 0.6479607 0.6621913 #>  [775,] 0.37583497 0.4312010 0.4555944 0.5500431 0.5714151 0.5892213 0.5902856 #>  [776,] 0.38440841 0.4105979 0.5170785 0.5657945 0.6113019 0.6848191 0.7971585 #>  [777,] 0.26583370 0.3549080 0.4733163 0.4843394 0.4858312 0.5560419 0.5685269 #>  [778,] 0.41027422 0.4217957 0.4425003 0.4652717 0.4775453 0.5118959 0.5454844 #>  [779,] 0.43193201 0.4705982 0.5445946 0.6370648 0.6374282 0.6740839 0.6745842 #>  [780,] 0.39778319 0.4080008 0.4252933 0.5055480 0.5119954 0.5267429 0.5787647 #>  [781,] 0.56044255 0.5661454 0.6974976 0.7953226 0.8143988 0.8277417 0.8840274 #>  [782,] 0.45548032 0.4883962 0.5006840 0.5119954 0.5160314 0.5692641 0.6646882 #>  [783,] 0.23825973 0.7893263 1.0389320 1.1424194 1.2114754 1.2691265 1.2713520 #>  [784,] 0.31207249 0.3877350 0.4329745 0.5223479 0.6842146 0.7041812 0.7261041 #>  [785,] 0.26503060 0.5195412 0.5238832 0.5314404 0.6048103 0.6534108 0.6779777 #>  [786,] 0.30325568 0.3906792 0.4009039 0.4374039 0.4674907 0.4830386 0.4833911 #>  [787,] 0.39765401 0.4396175 0.5170785 0.6319375 0.6379218 0.6394186 0.6670369 #>  [788,] 0.54141592 0.6986009 0.9027076 0.9326818 0.9337122 1.1513244 1.3054668 #>  [789,] 0.40509391 0.6223420 0.6538429 0.6597675 0.6902638 0.7005959 0.7114571 #>  [790,] 0.57430770 0.5913905 0.6296407 0.6344576 0.7175783 0.8033505 0.8040477 #>  [791,] 0.32493733 0.3875218 0.4267677 0.4315054 0.4822567 0.5380610 0.5667390 #>  [792,] 0.35494235 0.3710229 0.4595098 0.5038665 0.5463784 0.5676640 0.5957466 #>  [793,] 0.42153361 0.4440863 0.4683824 0.5947308 0.7084240 0.7099423 0.7322672 #>  [794,] 0.36025929 0.3907014 0.3923871 0.4718768 0.4914830 0.5039377 0.5064944 #>  [795,] 0.22227698 0.2321659 0.2715647 0.3960255 0.4881930 0.5835307 0.5994003 #>  [796,] 0.35960099 0.4336546 0.4435858 0.4879446 0.5403723 0.5462964 0.5935394 #>  [797,] 0.21608211 0.4362924 0.5353076 0.5716946 0.6004058 0.6548469 0.6585765 #>  [798,] 0.40594170 0.4215336 0.4983203 0.6243325 0.6265653 0.6414778 0.7541610 #>  [799,] 0.39995864 0.4342935 0.5157100 0.5683219 0.5726571 0.5916877 0.6274556 #>  [800,] 0.72842358 0.7417742 0.8000376 0.8241129 1.0305653 1.1493383 1.2923722 #>  [801,] 0.32493733 0.3328211 0.4367829 0.4890801 0.5581619 0.6252349 0.6310147 #>  [802,] 0.45007685 0.5487482 0.6205816 0.6332731 0.6350165 0.6464435 0.7222226 #>  [803,] 0.55132345 0.6805830 0.7634878 0.9088521 0.9213199 0.9266511 0.9515470 #>  [804,] 0.38225156 0.4267490 0.4679262 0.4906115 0.5352904 0.5600844 0.6196626 #>  [805,] 0.80744691 0.9112644 0.9767514 0.9869004 0.9906952 1.0125822 1.2871137 #>  [806,] 0.51784776 0.6613392 0.8169065 0.8340746 0.9134317 0.9941348 1.1263396 #>  [807,] 0.27176732 0.6156671 0.6583072 0.6656549 0.7654425 0.8253512 0.8290164 #>  [808,] 0.26139017 0.2953390 0.3562616 0.5260961 0.5397598 0.5574256 0.5778542 #>  [809,] 0.34608660 0.3663625 0.4195085 0.5296506 0.5827799 0.5938688 0.6072119 #>  [810,] 0.22341132 0.3904088 0.4811257 0.5250047 0.5494786 0.5541679 0.6223947 #>  [811,] 0.38123235 0.5159826 0.6527015 0.6558053 0.6690196 0.7704745 0.7786174 #>  [812,] 0.38022212 0.9744054 0.9768292 1.0021315 1.0839585 1.0980944 1.1896244 #>  [813,] 0.28431591 0.4059417 0.5947308 0.6964829 0.7169093 0.7854173 0.8397998 #>  [814,] 0.20968638 0.3054223 0.3178798 0.3434683 0.3958036 0.4451287 0.4727254 #>  [815,] 0.30295237 0.4226711 0.4448504 0.4471537 0.4920348 0.5016250 0.5449851 #>  [816,] 0.36010471 0.6177930 0.7597948 0.8000376 0.8317231 0.8874271 0.9102303 #>  [817,] 0.34754536 0.4551196 0.5435082 0.5830661 0.5929682 0.6520846 0.6873685 #>  [818,] 0.29858231 0.3428687 0.3484683 0.4295027 0.4967476 0.4986539 0.5212575 #>  [819,] 0.46410943 0.5148172 0.5681534 0.5690199 0.6072925 0.6323082 0.7278726 #>  [820,] 0.28524251 0.3710229 0.4619547 0.5871148 0.6547934 0.6745945 0.6821269 #>  [821,] 0.43678295 0.4446602 0.4951716 0.5250052 0.5380610 0.5393921 0.5686576 #>  [822,] 0.82983811 0.9208217 0.9284017 1.0659219 1.0795379 1.1698854 1.1932182 #>  [823,] 0.42854925 0.4561653 0.4805230 0.5123467 0.5174634 0.5235020 0.5305980 #>  [824,] 0.24692641 0.3211473 0.3426753 0.3449894 0.4029524 0.4168380 0.5096456 #>  [825,] 0.75185883 0.8655645 0.9072452 0.9910932 1.0474969 1.0481153 1.0724946 #>  [826,] 1.57124794 1.8040877 1.8198941 2.0349062 2.0692814 2.1172224 2.1855152 #>  [827,] 0.47220959 0.5733758 0.6095950 0.6154152 0.6509401 0.6774735 0.6836576 #>  [828,] 0.39765401 0.4637892 0.5888744 0.6209732 0.7479698 0.7879663 0.8137139 #>  [829,] 0.38083161 0.4136223 0.4816252 0.6138251 0.6767155 0.7035545 0.7537164 #>  [830,] 0.33079576 0.4981046 0.5026503 0.5934138 0.6379368 0.7274576 0.7641580 #>  [831,] 0.33282114 0.3875218 0.5082224 0.5532743 0.6217412 0.6354614 0.6888640 #>  [832,] 0.36559025 0.3909543 0.6025941 0.6086781 0.6423751 0.6590358 0.7370316 #>  [833,] 0.25091231 0.4772044 0.5088349 0.5728146 0.6254468 0.7841563 0.8206485 #>  [834,] 0.29697690 0.4145094 0.5009468 0.5421116 0.6120017 0.6142651 0.6769252 #>  [835,] 0.65844937 0.8144899 0.8276061 0.8474620 0.8601236 0.8871239 0.8955709 #>  [836,] 0.36982355 0.3788266 0.5746434 0.6754623 0.7151770 0.7471850 0.7512232 #>  [837,] 0.26654134 0.2985823 0.3147478 0.3423869 0.4740833 0.5145277 0.5606713 #>  [838,] 0.39282562 0.4341347 0.5407187 0.5876252 0.6240229 0.6697078 0.6785702 #>  [839,] 0.58261113 0.6836548 0.8930638 0.9910932 0.9989823 1.0065096 1.0449560 #>  [840,] 0.50486974 0.5432121 0.5924737 0.6218766 0.6384963 0.6681418 0.6795590 #>  [841,] 0.32659121 0.5826111 0.7234622 0.7320118 0.7433259 0.8941189 0.9557841 #>  [842,] 0.32155629 0.3491556 0.4238159 0.4532861 0.4690902 0.4712288 0.5101990 #>  [843,] 0.34603308 0.4669954 0.4752241 0.4946807 0.6806494 0.7308033 0.7875342 #>  [844,] 0.40389894 0.5503033 0.6212591 0.6986009 0.7641611 0.8127076 0.9678569 #>  [845,] 0.26584896 0.3617100 0.5271390 0.5293531 0.5487187 0.5586517 0.6000562 #>  [846,] 0.58208061 0.6385902 0.8083375 0.8329688 0.8833041 0.9857811 1.0019130 #>  [847,] 0.51631950 0.5296485 0.6233947 0.6581368 0.6711377 0.6986609 0.7368653 #>  [848,] 0.28216071 0.3220347 0.3493342 0.3841931 0.3846462 0.4355838 0.4423320 #>  [849,] 0.35882061 0.4772453 0.6323082 0.6485730 0.6546196 0.6958074 0.7271717 #>  [850,] 0.28714966 0.3790156 0.5031530 0.5352931 0.5723971 0.5764384 0.5931626 #>  [851,] 0.36107150 0.4542727 0.4749825 0.5909884 0.5924737 0.6168903 0.6762071 #>  [852,] 0.24426581 0.4628475 0.4662735 0.7540798 0.7664130 0.7801091 0.7953002 #>  [853,] 0.30934577 0.5242157 0.5316987 0.5650310 0.5876252 0.6261337 0.6856158 #>  [854,] 0.56301149 0.6227662 0.6310043 0.6348427 0.6584787 0.6848253 0.7153722 #>  [855,] 0.50944293 0.5265766 0.5445946 0.5657191 0.5668777 0.5952502 0.6529225 #>  [856,] 0.61863970 0.9375368 0.9526831 1.0903172 1.0977374 1.1539677 1.1628571 #>  [857,] 0.44682260 0.5107970 0.5297542 0.5484624 0.5526299 0.5691927 0.6081150 #>  [858,] 0.48678762 0.5576496 0.5682972 0.6333892 0.6710205 0.7290125 0.7533678 #>  [859,] 0.38557902 0.5070344 0.5193947 0.5957761 0.6282400 0.6604020 0.6905525 #>  [860,] 0.27345076 0.2998015 0.5339085 0.5826461 0.6031065 0.6146501 0.6161670 #>  [861,] 0.36010471 0.6453737 0.6462225 0.7331427 0.7948138 0.8092513 0.8241129 #>  [862,] 0.48158559 0.5648616 0.5688620 0.6029858 0.6168903 0.6688306 0.6790349 #>  [863,] 0.27369054 0.6291262 0.7357172 0.7703228 0.8107766 0.8116765 0.8644989 #>  [864,] 0.41279336 0.4267677 0.4414945 0.5013315 0.5250052 0.5291187 0.5936286 #>  [865,] 0.39231554 0.4013169 0.4025529 0.4566154 0.5025859 0.5085348 0.5229862 #>  [866,] 0.34492994 0.4325407 0.4837833 0.5769936 0.6230399 0.6444568 0.6749318 #>  [867,] 0.97101743 1.0125822 1.1012032 1.1154127 1.2370989 1.2771541 1.2823782 #>  [868,] 1.45779383 1.5975725 1.7037410 1.7739268 1.8171425 1.9969699 2.0561768 #>  [869,] 0.30767642 0.6566940 0.7519419 0.7540646 0.7658010 0.7702247 0.8375788 #>  [870,] 0.34548453 0.3664932 0.4057226 0.5048972 0.5485762 0.5519307 0.5610929 #>  [871,] 0.51464467 0.6475971 0.6780589 0.7178691 0.8147825 0.8197354 0.8667851 #>  [872,] 0.61243769 0.6527474 0.7376616 0.8691102 0.9046136 0.9362893 0.9683798 #>  [873,] 0.52436146 0.8519197 0.9127048 0.9282329 0.9665956 1.0018557 1.0074944 #>  [874,] 0.19873601 0.5816025 0.6923993 0.6995515 0.7307105 0.7531525 0.7829002 #>  [875,] 0.61155007 1.0904290 1.1481164 1.1550948 1.2184639 1.2982066 1.3046752 #>  [876,] 0.45378622 0.5094640 0.6413863 0.7222226 0.7234314 0.7669055 0.8211111 #>  [877,] 0.37861496 0.5284727 0.7386489 0.7953673 0.7961054 0.8706349 0.8872985 #>  [878,] 0.41696154 0.6280949 0.6284385 0.6957135 0.7197331 0.7376195 0.7392565 #>  [879,] 0.55072841 0.6221386 0.6668246 0.7051161 0.7404194 0.8476079 0.8659771 #>  [880,] 0.34286870 0.4091261 0.4738659 0.5687167 0.5709049 0.5955270 0.6594058 #>  [881,] 0.44261965 0.5158102 0.5268097 0.5940960 0.6544819 0.6646710 0.7063780 #>  [882,] 0.22976604 0.3609791 0.4332528 0.4401067 0.4567398 0.4709355 0.4795854 #>  [883,] 0.38476605 0.8147427 1.0202173 1.1035196 1.2285650 1.2613826 1.3097924 #>  [884,] 0.71326205 0.7672171 0.7929117 0.8221912 0.8422719 0.8812211 0.8890495 #>  [885,] 0.51740273 0.5975370 0.6024179 0.6108525 0.6437706 0.6724057 0.6910148 #>  [886,] 0.62007629 0.6785265 0.7114238 0.7129595 0.9083233 0.9773497 0.9778301 #>  [887,] 0.33567944 0.5497600 0.6420241 0.7253421 0.7442867 0.7698959 0.7923649 #>  [888,] 0.31007765 0.4095876 0.4345053 0.5287340 0.6335668 0.6667285 0.6812188 #>  [889,] 0.58739288 0.6639882 0.9434274 0.9612717 0.9834970 0.9856135 1.1002708 #>  [890,] 0.30950375 0.4621554 0.5846637 0.5957466 0.6852824 0.7167209 0.7504833 #>  [891,] 0.19289334 0.4196159 0.5296940 0.5764101 0.5948038 0.6605457 0.6611780 #>  [892,] 0.78217482 0.8205530 0.9732663 1.1413036 1.2688192 1.3038584 1.3222195 #>  [893,] 0.43377472 0.6060374 0.6790057 0.7126261 0.7558768 0.7607970 0.7849830 #>  [894,] 0.63659742 0.7518588 0.7651177 0.9330838 0.9612703 1.1594973 1.2259059 #>  [895,] 0.31007765 0.4629966 0.4991901 0.6086781 0.6796109 0.6945125 0.7221610 #>  [896,] 0.50727126 0.5459360 0.5722344 0.6562227 0.6567797 0.7113081 0.7142587 #>  [897,] 0.31040814 0.3109175 0.3744456 0.3903081 0.4186784 0.4521334 0.4641364 #>  [898,] 0.42363056 0.4480825 0.7374333 0.7764238 0.7948302 0.8216796 0.8655829 #>  [899,] 0.28680174 0.5580045 0.6444568 0.6493034 0.6497222 0.7132474 0.8453371 #>  [900,] 0.30230057 0.6146060 0.6999842 0.7396486 0.7650911 0.7675740 0.8522812 #>  [901,] 0.19575535 0.2355157 0.3312882 0.4620443 0.4690902 0.5548366 0.5624170 #>  [902,] 0.49334852 0.5372705 0.5657434 0.5716946 0.6315393 0.6378715 0.6461105 #>  [903,] 0.52799823 0.5391502 0.5749852 0.7110881 0.7318667 0.7328162 0.7518124 #>  [904,] 0.54937852 0.5668777 0.6255293 0.6489795 0.6585237 0.6587402 0.6620008 #>  [905,] 0.17055557 0.2974816 0.4222072 0.5043442 0.5307636 0.5923691 0.6768686 #>  [906,] 0.22929244 0.4388147 0.5740741 0.6843572 0.6974976 0.7056370 0.7951625 #>  [907,] 0.51631950 0.5611849 0.5657191 0.5891457 0.6437706 0.6618153 0.7535902 #>  [908,] 0.35898447 0.4101144 0.4414945 0.4591439 0.4822567 0.4968979 0.5043691 #>  [909,] 0.66117014 0.9904792 1.0694952 1.0752254 1.1189187 1.1399776 1.1760953 #>  [910,] 0.19891288 0.3655903 0.5273751 0.5298628 0.5927093 0.5978410 0.6741126 #>  [911,] 0.46387149 0.5766752 0.5769936 0.6845305 0.6950652 0.7369952 0.7753535 #>  [912,] 0.41057903 0.5056446 0.5213058 0.5667221 0.6997054 0.7136920 0.7306110 #>  [913,] 0.64931424 0.7839864 0.8257690 0.8867088 0.9715150 0.9769651 0.9913479 #>  [914,] 0.26287039 0.3780350 0.3988222 0.4561653 0.4765271 0.4906115 0.5144602 #>  [915,] 0.58471985 0.7167209 0.7340013 0.7588912 0.8147427 0.8511704 0.8547641 #>  [916,] 0.28344219 0.4457774 0.5098037 0.5143135 0.5217253 0.5390043 0.5586517 #>  [917,] 0.38643289 0.4763204 0.7114238 0.7415197 0.7554033 0.7774071 0.8953007 #>  [918,] 1.04679979 1.1589834 1.1675302 1.2100593 1.2455096 1.2482059 1.2957049 #>  [919,] 0.58161791 0.6209577 0.6417457 0.6467002 0.6622870 0.7124353 0.7127021 #>  [920,] 0.43133063 0.4551196 0.5246276 0.5402757 0.5845942 0.6131318 0.6296407 #>  [921,] 0.45735377 0.4780684 0.6841088 0.7365833 0.7487317 0.7806495 0.8530018 #>  [922,] 0.33132281 0.3821534 0.4027192 0.4237964 0.4682757 0.4943220 0.5012658 #>  [923,] 0.46387149 0.6563953 0.7815392 0.8946729 0.9052434 0.9150835 0.9151730 #>  [924,] 0.48924682 0.8046619 0.8545012 0.8723989 0.9218899 0.9455431 0.9493147 #>  [925,] 0.40958761 0.4629966 0.6088189 0.6113019 0.6265475 0.6403716 0.6583667 #>  [926,] 0.40660272 0.4706100 0.4768260 0.5425308 0.5475348 0.5890256 0.6444982 #>  [927,] 0.31492120 0.4040420 0.6166632 0.6203304 0.6455357 0.6538429 0.7215854 #>  [928,] 0.50985504 0.5273751 0.5361663 0.5372705 0.5583199 0.5892227 0.5935394 #>  [929,] 0.62626677 0.9770041 0.9865532 1.0686429 1.1182030 1.2713520 1.2980642 #>  [930,] 0.31000426 0.4998836 0.5238832 0.5681733 0.6650614 0.7535964 0.7605821 #>  [931,] 0.56855962 0.5834554 0.6256740 0.6787921 0.6895884 0.7409182 0.7433259 #>  [932,] 0.31628307 0.5000493 0.6350165 0.6821937 0.6917593 0.7002416 0.7165405 #>  [933,] 0.98697697 1.0036337 1.0110435 1.0264382 1.0659414 1.0762697 1.0836627 #>  [934,] 0.63010472 0.7112722 0.7777661 0.8158376 0.9366966 0.9783178 0.9995610 #>  [935,] 0.30009358 0.4747516 0.5496038 0.5752965 0.5953248 0.6146060 0.6401412 #>  [936,] 0.54382027 0.5820806 0.6112580 0.7074353 0.7512383 0.8867167 0.9151501 #>  [937,] 0.25303605 0.5173432 0.5467909 0.5807117 0.6006125 0.6047239 0.6333892 #>  [938,] 0.66133919 0.7706255 0.8821028 0.8942605 1.0453453 1.1038097 1.1065271 #>  [939,] 0.42356527 0.5217253 0.5753612 0.5790417 0.6699969 0.6840865 0.7088166 #>  [940,] 0.38123235 0.5458436 0.5763631 0.6221603 0.6233947 0.7041812 0.8007546 #>  [941,] 0.27156473 0.3003554 0.3784022 0.4014940 0.5030616 0.5145277 0.5336629 #>  [942,] 0.88730494 1.2259470 1.2721403 1.2805288 1.3474814 1.3933579 1.4390406 #>  [943,] 0.44416147 0.4999247 0.5095301 0.5101240 0.5420888 0.5933982 0.6013085 #>  [944,] 0.26231712 0.3046303 0.3135673 0.3460866 0.3639775 0.3795805 0.3869230 #>  [945,] 0.51792510 0.6668659 0.7396486 0.7860331 0.8016409 0.8084013 0.8484744 #>  [946,] 0.34398613 0.5798033 0.6310043 0.7928844 0.8813425 0.8903715 0.9378345 #>  [947,] 0.73571720 0.8481944 0.9758788 0.9771665 1.0584093 1.1017545 1.1058127 #>  [948,] 0.14930835 0.3316848 0.3449894 0.3585829 0.3896532 0.4188705 0.4752165 #>  [949,] 0.37803497 0.4191876 0.4607811 0.4908297 0.5079410 0.5257480 0.5426763 #>  [950,] 0.40433141 0.4534519 0.5448165 0.5503058 0.5622107 0.5676047 0.6086673 #>  [951,] 0.24228544 0.3627783 0.4099994 0.4191876 0.4198721 0.4625718 0.6186106 #>  [952,] 1.01980295 1.3407258 1.3606688 1.6959213 1.7044909 1.7576927 1.8340084 #>  [953,] 0.38503026 0.3921817 0.4407288 0.4471658 0.4667930 0.4979321 0.4982352 #>  [954,] 0.35479312 0.4600707 0.6559164 0.6644028 0.6912263 0.7010985 0.7904912 #>  [955,] 0.83296881 0.9060832 0.9790140 1.0379812 1.1194758 1.1341329 1.1354753 #>  [956,] 0.43142173 0.4469336 0.5236413 0.5285373 0.5305299 0.5630950 0.5910944 #>  [957,] 0.59769382 0.6031296 0.6149499 0.6202898 0.8122574 0.8636180 0.8985642 #>  [958,] 0.88330405 1.0110435 1.1737487 1.2570640 1.2653497 1.3392785 1.3934378 #>  [959,] 0.57114094 0.6526783 0.6674419 0.6753309 0.7249588 0.7251468 0.7726073 #>  [960,] 0.66768544 0.7734912 0.7781823 0.8294172 0.9108354 0.9542970 1.0086117 #>  [961,] 0.47922328 0.5202134 0.5882998 0.6052029 0.6168076 0.6220170 0.6436435 #>  [962,] 0.75608282 1.0398399 1.0777336 1.1164654 1.1464406 1.2388079 1.3226870 #>  [963,] 0.19454324 0.2875093 0.5463426 0.6418191 0.6471777 0.6480841 0.6502985 #>  [964,] 0.19194975 0.4858312 0.5402678 0.5519172 0.5615323 0.6777155 0.7002374 #>  [965,] 0.33828070 0.3410749 0.3531987 0.3872906 0.4510174 0.4633293 0.4873556 #>  [966,] 0.77400984 0.7805723 0.8317231 0.8495409 0.9216323 0.9378973 0.9461420 #>  [967,] 0.33907979 0.4215152 0.4325407 0.5766752 0.6373351 0.6626709 0.6946426 #>  [968,] 0.69929329 0.7774071 0.8451894 0.8551433 0.8772913 0.9173922 0.9615590 #>  [969,] 0.30950375 0.4595098 0.5871148 0.6103496 0.6221603 0.7105873 0.7131944 #>  [970,] 0.53069554 0.5696130 0.6266530 0.6647212 0.6896168 0.6902638 0.6933046 #>  [971,] 0.52886427 0.5582981 0.5583199 0.5752965 0.5926767 0.7315332 0.7440227 #>  [972,] 0.77189668 0.8298381 0.8670633 0.8813422 0.9187294 0.9362743 0.9486394 #>  [973,] 0.80744691 1.3359951 1.4678302 1.5100563 1.6371535 1.6596548 1.7249261 #>  [974,] 0.26893456 0.3581901 0.4515414 0.5012658 0.5249321 0.5599040 0.5599703 #>  [975,] 0.40647607 0.6351254 0.6431795 0.6458314 0.6791145 0.7238420 0.7441360 #>  [976,] 0.27992759 0.3293962 0.3530306 0.4368952 0.4779015 0.6550288 0.6853249 #>  [977,] 0.37654633 0.4374058 0.4459497 0.4629009 0.5257215 0.5298948 0.5551871 #>  [978,] 0.43687039 0.5241761 0.5369367 0.5599703 0.5710005 0.5784653 0.5902856 #>  [979,] 0.39173828 0.5199837 0.6229081 0.6584787 0.8239511 0.8781887 0.9095357 #>  [980,] 0.26725966 0.2984423 0.3977832 0.4019691 0.5670071 0.5881627 0.6119162 #>  [981,] 0.45513529 0.6104413 0.6639075 0.6648466 0.6882461 0.7540798 0.7651085 #>  [982,] 0.52964853 0.7249689 0.8511704 0.8558972 0.8917161 0.9108354 0.9110739 #>  [983,] 0.24426581 0.3414037 0.5688549 0.6639075 0.7410953 0.7817230 0.7972555 #>  [984,] 1.13787133 1.2185037 1.2733126 1.2890878 1.3025983 1.3142836 1.3392785 #>  [985,] 0.40855438 0.4276324 0.4388147 0.4471537 0.4843314 0.5467042 0.5699098 #>  [986,] 0.34510545 0.4904731 0.4998752 0.5172246 0.6020208 0.6658231 0.6914333 #>  [987,] 0.46757105 0.4708687 0.4897062 0.5175051 0.5229862 0.5255329 0.5597200 #>  [988,] 0.32998872 0.3475933 0.3921037 0.4002646 0.5339803 0.5480763 0.5484296 #>  [989,] 0.69907708 0.8369106 0.8643086 1.0086117 1.0952652 1.2850135 1.3275181 #>  [990,] 0.85219655 0.8643086 0.9506871 1.0038754 1.0069766 1.0657045 1.0860067 #>  [991,] 1.15890250 1.2753920 1.3273210 1.3281533 1.4027323 1.5348931 1.5642514 #>  [992,] 0.30597130 0.3282486 0.4553605 0.4929105 0.5178784 0.5335103 0.5360194 #>  [993,] 0.35562872 0.4150414 0.4772453 0.5084588 0.5826373 0.5990440 0.6350657 #>  [994,] 0.46234367 0.5746375 0.6108573 0.6585250 0.6818464 0.7013253 0.7126181 #>  [995,] 0.22259778 0.4768962 0.5667390 0.6190071 0.6217412 0.6933046 0.7468091 #>  [996,] 0.27564720 0.6273255 0.6808048 0.6860145 0.7270304 0.7348737 0.9088493 #>  [997,] 0.15953551 0.5553042 0.6088189 0.6235464 0.7109132 0.7124459 0.7250279 #>  [998,] 0.51784776 0.6646710 0.7100649 0.7444970 0.8942605 0.8943465 0.8966044 #>  [999,] 0.40389894 0.5497600 0.5710056 0.7590130 0.8727946 0.8775259 0.9069244 #> [1000,] 0.48708689 0.6104175 0.7163638 0.9770696 1.0100658 1.1076678 1.1137205 #>              [,8]      [,9]     [,10] #>    [1,] 1.0679368 1.0756082 1.0791730 #>    [2,] 1.0289922 1.0434755 1.0559976 #>    [3,] 1.0706012 1.1162420 1.1358185 #>    [4,] 0.6843572 0.7234314 0.7304045 #>    [5,] 1.2383689 1.3277427 1.3813704 #>    [6,] 0.7918485 0.8341228 0.9213934 #>    [7,] 1.0115016 1.0684760 1.1094307 #>    [8,] 0.5005270 0.5065874 0.5168428 #>    [9,] 0.7612910 0.7786650 0.7792734 #>   [10,] 0.5791733 0.5822978 0.6189781 #>   [11,] 0.4856136 0.4862113 0.5106334 #>   [12,] 0.5764384 0.6119358 0.6377695 #>   [13,] 1.4467300 1.4705584 1.4926215 #>   [14,] 0.6952677 0.7073985 0.7329239 #>   [15,] 0.6937362 0.7380849 0.7392339 #>   [16,] 0.9247378 0.9800097 0.9907218 #>   [17,] 1.5816169 1.5889022 1.5950732 #>   [18,] 1.0803088 1.1738052 1.1848510 #>   [19,] 0.6772254 0.6814578 0.6950702 #>   [20,] 0.8283159 0.8292192 0.8474620 #>   [21,] 0.6561299 0.6751973 0.6843720 #>   [22,] 0.7035545 0.7128742 0.7393274 #>   [23,] 1.3065377 1.3176641 1.3624401 #>   [24,] 0.7227567 0.7260365 0.7350979 #>   [25,] 0.5495123 0.6234271 0.6336261 #>   [26,] 0.5881627 0.5911886 0.6082913 #>   [27,] 1.2793869 1.3488796 1.4341524 #>   [28,] 0.6432910 0.6512719 0.6584774 #>   [29,] 0.6142651 0.6351406 0.6725560 #>   [30,] 0.7293638 0.7539744 0.8047619 #>   [31,] 0.5016936 0.5421366 0.5861845 #>   [32,] 0.6893521 0.7004461 0.7394554 #>   [33,] 0.8571821 0.9218761 0.9273137 #>   [34,] 1.1025246 1.1149424 1.1450503 #>   [35,] 0.8174624 0.8221912 0.8522968 #>   [36,] 0.8677613 0.9250909 0.9337041 #>   [37,] 0.7370325 0.7894029 0.8120356 #>   [38,] 1.0376174 1.0390549 1.0828364 #>   [39,] 0.5870136 0.5912035 0.5984957 #>   [40,] 0.7951300 0.8151834 0.8208052 #>   [41,] 0.9609007 0.9720214 0.9947124 #>   [42,] 0.6093081 0.6112998 0.6295516 #>   [43,] 1.0227588 1.0404591 1.0489808 #>   [44,] 0.7835024 0.8430347 0.8586513 #>   [45,] 0.8578457 0.8774396 0.9083317 #>   [46,] 0.9675823 0.9996266 1.0104179 #>   [47,] 1.0068433 1.1053830 1.1341687 #>   [48,] 0.7358463 0.7687327 0.7710098 #>   [49,] 0.6880818 0.7028457 0.7102125 #>   [50,] 0.7099912 0.7213934 0.7473291 #>   [51,] 0.5599255 0.6042177 0.6578583 #>   [52,] 0.5904330 0.6195605 0.6266495 #>   [53,] 0.5321233 0.5846024 0.6163291 #>   [54,] 0.7861640 0.7918028 0.8039468 #>   [55,] 0.9811059 0.9830065 1.0426076 #>   [56,] 0.6436435 0.6911843 0.6935693 #>   [57,] 0.7096490 0.7208081 0.7468091 #>   [58,] 0.6881740 0.6982089 0.7136643 #>   [59,] 0.6669378 0.6745988 0.6970045 #>   [60,] 0.7451104 0.7526757 0.8146708 #>   [61,] 0.6863024 0.7727800 0.7753520 #>   [62,] 0.9451083 0.9882103 1.0287428 #>   [63,] 0.6299681 0.6301527 0.6753309 #>   [64,] 0.7640651 0.7690596 0.7711342 #>   [65,] 0.8711415 0.8870035 0.9052624 #>   [66,] 0.6416593 0.6558797 0.6681355 #>   [67,] 1.4789936 1.4841229 1.5023634 #>   [68,] 0.7925178 0.8611093 0.8640481 #>   [69,] 0.5141916 0.5448332 0.5561802 #>   [70,] 0.5286713 0.5493330 0.5551871 #>   [71,] 0.9090732 0.9305828 0.9389481 #>   [72,] 0.6353334 0.6448151 0.6840135 #>   [73,] 0.7287922 0.7315292 0.7321939 #>   [74,] 0.6006142 0.6169807 0.6296481 #>   [75,] 0.6195113 0.6774735 0.7451104 #>   [76,] 0.7823300 0.7920571 0.8016409 #>   [77,] 1.4846261 1.4972073 1.5421034 #>   [78,] 0.7084213 0.7206843 0.7299960 #>   [79,] 0.6404274 0.6558512 0.6600644 #>   [80,] 0.8420441 0.8727299 0.9902039 #>   [81,] 0.7930441 0.7948539 0.8248505 #>   [82,] 1.2826569 1.2889695 1.2981945 #>   [83,] 0.9128009 0.9293792 0.9302257 #>   [84,] 0.6512878 0.6912263 0.7015280 #>   [85,] 0.5824480 0.6887330 0.6945500 #>   [86,] 0.7270254 0.7394242 0.7738896 #>   [87,] 1.5895223 1.6158257 1.6473701 #>   [88,] 1.4079634 1.4351694 1.4621724 #>   [89,] 0.7518124 0.7807029 0.7827092 #>   [90,] 1.1073360 1.1378995 1.1436320 #>   [91,] 0.5556994 0.5737547 0.5929682 #>   [92,] 0.6276927 0.6745945 0.6813236 #>   [93,] 0.8784208 0.8909051 0.9169018 #>   [94,] 0.7723765 0.8637840 0.8809335 #>   [95,] 0.6884083 0.6983475 0.7024387 #>   [96,] 0.7767992 0.7792326 0.7874865 #>   [97,] 0.5846024 0.6069424 0.6285223 #>   [98,] 0.6364420 0.6512162 0.6672787 #>   [99,] 0.5483874 0.5506939 0.5776410 #>  [100,] 0.6594024 0.6642506 0.6713992 #>  [101,] 1.1720750 1.2024375 1.2279911 #>  [102,] 0.6724396 0.7252953 0.7925178 #>  [103,] 0.7612910 0.7884250 0.8451586 #>  [104,] 0.7367583 0.7392894 0.8000209 #>  [105,] 0.7197512 0.7228793 0.7542130 #>  [106,] 1.0245822 1.0328285 1.1134525 #>  [107,] 1.1953060 1.1966468 1.1986253 #>  [108,] 0.8120356 0.8305208 0.8530572 #>  [109,] 0.7931385 0.7944301 0.8127295 #>  [110,] 1.6855839 1.7043541 1.7386679 #>  [111,] 1.3337266 1.3764884 1.3976187 #>  [112,] 0.9416995 0.9508667 0.9597699 #>  [113,] 1.6223815 1.6231878 1.6267501 #>  [114,] 0.6299497 0.6621913 0.6643520 #>  [115,] 0.5257646 0.5980411 0.6355559 #>  [116,] 1.4832989 1.5547696 1.5831486 #>  [117,] 0.7549314 0.7632290 0.7689495 #>  [118,] 0.5168930 0.5191856 0.5394474 #>  [119,] 0.6271390 0.6351254 0.6786620 #>  [120,] 0.8239253 0.8847691 0.8981028 #>  [121,] 1.0266549 1.0435349 1.0449560 #>  [122,] 0.7867359 0.7996246 0.8878790 #>  [123,] 0.6430860 0.7127873 0.7313557 #>  [124,] 1.0706012 1.1134525 1.1399733 #>  [125,] 0.7081040 0.7135882 0.7164694 #>  [126,] 0.8154674 0.8163634 0.8412337 #>  [127,] 0.7003657 0.7028447 0.7170069 #>  [128,] 1.0170875 1.0307784 1.0553983 #>  [129,] 0.6897666 0.7435194 0.7455222 #>  [130,] 0.7946556 0.7978979 0.9291604 #>  [131,] 0.6922695 0.6950652 0.7390997 #>  [132,] 0.5623026 0.5699606 0.6098405 #>  [133,] 0.5285373 0.5483874 0.5952842 #>  [134,] 0.9510521 1.0082751 1.0100748 #>  [135,] 0.9430874 0.9496712 0.9636836 #>  [136,] 1.2427295 1.2427512 1.2474588 #>  [137,] 0.6794945 0.6868635 0.6969108 #>  [138,] 0.9339491 0.9375315 0.9496301 #>  [139,] 0.5731096 0.5842189 0.6057397 #>  [140,] 0.9152868 0.9519537 0.9772968 #>  [141,] 1.1466267 1.2131667 1.2258150 #>  [142,] 1.0688840 1.0736123 1.0996153 #>  [143,] 0.7442867 0.7694772 0.7783857 #>  [144,] 1.4580009 1.5061917 1.5226149 #>  [145,] 0.5448332 0.5594867 0.5998484 #>  [146,] 0.8007380 0.8040823 0.8151421 #>  [147,] 0.9932836 1.0022214 1.0121305 #>  [148,] 1.2452348 1.2635522 1.3035959 #>  [149,] 1.1594973 1.1980658 1.2285099 #>  [150,] 1.0340092 1.0352596 1.0467705 #>  [151,] 1.1026948 1.1317368 1.1458222 #>  [152,] 0.7568967 0.7793311 0.7953002 #>  [153,] 0.5426763 0.5635818 0.5861207 #>  [154,] 1.4683350 1.4858067 1.4910056 #>  [155,] 0.6416964 0.6493601 0.6647212 #>  [156,] 1.3571199 1.3932434 1.4238619 #>  [157,] 0.5330281 0.5395305 0.5420888 #>  [158,] 1.1436140 1.1813830 1.2916942 #>  [159,] 0.7986821 0.8179851 0.8303587 #>  [160,] 1.0746088 1.0817119 1.0946297 #>  [161,] 0.9444131 0.9542660 0.9738579 #>  [162,] 0.8764202 0.8909896 0.8933247 #>  [163,] 0.9851333 0.9966284 1.0007435 #>  [164,] 0.7523899 0.7655103 0.7826342 #>  [165,] 0.7905515 0.7912805 0.8116461 #>  [166,] 0.5079853 0.5130766 0.5141916 #>  [167,] 0.7567425 0.7600650 0.7626744 #>  [168,] 1.0152523 1.0435643 1.0702424 #>  [169,] 1.3250453 1.3270752 1.3295280 #>  [170,] 0.5660222 0.6489407 0.6496336 #>  [171,] 0.9040442 0.9342601 0.9519537 #>  [172,] 0.5757347 0.6435437 0.6724396 #>  [173,] 0.8210128 0.8349810 0.8561700 #>  [174,] 0.7076574 0.7365311 0.7398859 #>  [175,] 1.4142410 1.4234922 1.4406958 #>  [176,] 0.6983619 0.7661060 0.7816502 #>  [177,] 1.1977510 1.2284359 1.3179865 #>  [178,] 1.1486941 1.1600623 1.1628200 #>  [179,] 0.9339661 0.9819075 1.0205034 #>  [180,] 0.5488556 0.5787698 0.6026166 #>  [181,] 0.7330679 0.7577721 0.7582757 #>  [182,] 0.5834202 0.6126656 0.6129473 #>  [183,] 0.6915555 0.6929959 0.7074353 #>  [184,] 0.9682972 0.9817834 0.9857601 #>  [185,] 0.5228817 0.5230416 0.5289853 #>  [186,] 0.7868616 0.8059799 0.8060334 #>  [187,] 0.5524786 0.5599255 0.5778280 #>  [188,] 1.3351668 1.3559853 1.3951274 #>  [189,] 0.5637291 0.5726487 0.6186450 #>  [190,] 0.6712987 0.6751785 0.6795289 #>  [191,] 1.2164806 1.3358452 1.3411023 #>  [192,] 0.5615982 0.5739805 0.5824093 #>  [193,] 1.0973799 1.1065011 1.1080511 #>  [194,] 0.8896961 0.9197471 0.9802652 #>  [195,] 0.9065478 0.9213934 0.9241461 #>  [196,] 0.7208081 0.7329744 0.7470093 #>  [197,] 0.7240068 0.7433975 0.7490146 #>  [198,] 0.6802905 0.6826938 0.6937205 #>  [199,] 1.5889856 1.6608601 1.6799105 #>  [200,] 1.0769687 1.0883407 1.1276827 #>  [201,] 0.6971849 0.7492438 0.7597547 #>  [202,] 1.2199149 1.3830011 1.3976187 #>  [203,] 1.0357845 1.0382290 1.0404591 #>  [204,] 0.5130766 0.5407542 0.5585575 #>  [205,] 1.3601476 1.3873536 1.4559632 #>  [206,] 0.5935264 0.6559560 0.6937205 #>  [207,] 0.7087775 0.7351002 0.7355553 #>  [208,] 1.0814383 1.0850697 1.0930037 #>  [209,] 0.8486258 0.8699527 0.8820785 #>  [210,] 1.3854143 1.4397661 1.5024043 #>  [211,] 0.8427676 0.8792093 0.9003333 #>  [212,] 0.4763492 0.5879572 0.6174619 #>  [213,] 0.9943103 0.9994756 1.0361230 #>  [214,] 0.6670292 0.6770034 0.6988117 #>  [215,] 0.5494786 0.6338419 0.6478357 #>  [216,] 1.1670337 1.2058582 1.2285650 #>  [217,] 1.3606688 1.3852136 1.4158466 #>  [218,] 0.7526757 0.7657394 0.7738747 #>  [219,] 0.6774418 0.7596698 0.7894116 #>  [220,] 1.2457294 1.2743977 1.2747569 #>  [221,] 0.7196380 0.7417397 0.7599866 #>  [222,] 0.8689624 0.8728159 0.9062452 #>  [223,] 0.6592325 0.6935539 0.7623949 #>  [224,] 0.6419498 0.6704794 0.6778821 #>  [225,] 0.5311544 0.5448165 0.5921218 #>  [226,] 0.6607746 0.6672787 0.7136920 #>  [227,] 1.0944559 1.1018918 1.1123996 #>  [228,] 0.7738930 0.8041100 0.8073674 #>  [229,] 0.6795673 0.6816907 0.7350521 #>  [230,] 0.5496862 0.5562109 0.5866514 #>  [231,] 0.5052856 0.5257215 0.5797760 #>  [232,] 1.0758004 1.1073832 1.1698396 #>  [233,] 0.7339311 0.7771155 0.7873237 #>  [234,] 0.5516273 0.5583391 0.5625458 #>  [235,] 0.7707006 0.7881833 0.7911970 #>  [236,] 0.7521219 0.7742768 0.7767992 #>  [237,] 0.9591522 0.9683798 0.9732644 #>  [238,] 1.4668690 1.5031568 1.6011319 #>  [239,] 0.8946815 0.9136095 0.9515484 #>  [240,] 1.0000930 1.0255651 1.0467998 #>  [241,] 0.5687167 0.6215695 0.6623485 #>  [242,] 0.5495350 0.6120185 0.6568056 #>  [243,] 0.7671719 0.7785466 0.8222776 #>  [244,] 0.5596514 0.5742512 0.5814183 #>  [245,] 0.6697078 0.6707700 0.6962068 #>  [246,] 0.8440968 0.8497161 0.9481364 #>  [247,] 1.1585337 1.1685562 1.1785068 #>  [248,] 0.6430860 0.6604020 0.6619793 #>  [249,] 0.7351250 0.7395767 0.7542130 #>  [250,] 0.9652840 0.9980052 1.0015057 #>  [251,] 0.7485923 0.7490146 0.7566881 #>  [252,] 0.5222735 0.5278030 0.5387954 #>  [253,] 1.7886947 1.8603907 1.9089121 #>  [254,] 0.5124730 0.5260231 0.5323387 #>  [255,] 0.5468722 0.5485510 0.5500821 #>  [256,] 0.5802861 0.6006125 0.6270962 #>  [257,] 0.4988773 0.5257646 0.5314283 #>  [258,] 0.8868968 0.9214425 0.9366966 #>  [259,] 1.1242684 1.1425219 1.1526598 #>  [260,] 0.5335103 0.5593500 0.5649726 #>  [261,] 0.5665504 0.5707161 0.6369702 #>  [262,] 0.5692641 0.5804196 0.5990013 #>  [263,] 0.9542462 0.9641804 0.9691467 #>  [264,] 1.2949795 1.3158773 1.3619317 #>  [265,] 0.7913948 0.7924050 0.8094812 #>  [266,] 0.6904281 0.7039872 0.7154582 #>  [267,] 0.8784248 0.9088926 0.9505660 #>  [268,] 1.0983617 1.1983194 1.2049876 #>  [269,] 0.5990013 0.6048907 0.6112259 #>  [270,] 0.7462513 0.7689575 0.7709956 #>  [271,] 1.0079135 1.0172752 1.0292243 #>  [272,] 0.7563445 0.8194536 0.8264564 #>  [273,] 0.7972707 0.8049131 0.8518018 #>  [274,] 0.7418994 0.7754920 0.7807029 #>  [275,] 0.9171369 0.9675008 1.0067052 #>  [276,] 0.4980047 0.5055020 0.5175117 #>  [277,] 0.5686576 0.5736968 0.6023168 #>  [278,] 1.2893997 1.3075844 1.3192005 #>  [279,] 2.4662679 2.5175043 2.5442563 #>  [280,] 0.7667677 0.7674485 0.8023252 #>  [281,] 0.6881740 0.6918925 0.7786174 #>  [282,] 0.7742662 0.7782363 0.7946667 #>  [283,] 0.6670564 0.6874232 0.7081306 #>  [284,] 0.6653326 0.6705089 0.6921540 #>  [285,] 0.7815431 0.7898622 0.8137523 #>  [286,] 0.5197990 0.5390179 0.5393921 #>  [287,] 0.8500362 0.8948424 0.8953602 #>  [288,] 0.7632290 0.8570481 0.9025553 #>  [289,] 1.5148842 1.5412093 1.5435828 #>  [290,] 0.8699342 1.0048491 1.0055757 #>  [291,] 0.5949132 0.6159515 0.6429082 #>  [292,] 1.1161143 1.1169264 1.1739467 #>  [293,] 0.7018026 0.7654425 0.8522458 #>  [294,] 1.1419196 1.2513037 1.2977312 #>  [295,] 0.6754195 0.6850493 0.6859367 #>  [296,] 0.9753170 1.0031247 1.0100658 #>  [297,] 0.6935693 0.7125536 0.7142468 #>  [298,] 0.5316684 0.5456766 0.5515566 #>  [299,] 0.6611206 0.6994753 0.7328162 #>  [300,] 0.9720214 1.0225832 1.0909757 #>  [301,] 0.5966126 0.6075889 0.6291981 #>  [302,] 0.6964311 0.6975517 0.6988030 #>  [303,] 0.6252093 0.6820353 0.6932590 #>  [304,] 1.0016906 1.0855935 1.0868469 #>  [305,] 1.1208192 1.2368147 1.2388867 #>  [306,] 0.9372777 0.9546968 0.9619879 #>  [307,] 0.6419774 0.6723784 0.6832552 #>  [308,] 0.8603807 0.8734431 0.9183953 #>  [309,] 0.7483951 0.7541283 0.8067053 #>  [310,] 0.7117206 0.7199932 0.7337812 #>  [311,] 0.6585765 0.6590358 0.7123181 #>  [312,] 1.0582719 1.0684127 1.0754960 #>  [313,] 0.6127651 0.6244006 0.6411907 #>  [314,] 0.7632450 0.7926466 0.8010777 #>  [315,] 0.5025101 0.5107768 0.5273193 #>  [316,] 0.6327554 0.6530828 0.6533667 #>  [317,] 0.6796109 0.7421339 0.7787352 #>  [318,] 0.5004929 0.5464413 0.5578290 #>  [319,] 1.1880571 1.2597029 1.2953162 #>  [320,] 0.8417339 0.8434774 0.8770233 #>  [321,] 0.9977909 1.0039775 1.0246449 #>  [322,] 0.5583391 0.5642491 0.5731698 #>  [323,] 1.6768160 1.7251493 1.7810508 #>  [324,] 0.9331176 0.9469623 1.0051359 #>  [325,] 1.0232424 1.0246449 1.0289924 #>  [326,] 0.8909322 0.8972442 0.9172200 #>  [327,] 0.5688620 0.5759595 0.5853154 #>  [328,] 0.5622107 0.5679686 0.6120968 #>  [329,] 0.6696982 0.6735785 0.7013035 #>  [330,] 0.7789891 0.7806495 0.8089933 #>  [331,] 0.8008426 0.8560003 0.8579224 #>  [332,] 1.3331690 1.4143912 1.4688789 #>  [333,] 0.5296506 0.5362648 0.5834202 #>  [334,] 0.9239479 0.9240393 0.9245959 #>  [335,] 1.1027667 1.1407997 1.1818150 #>  [336,] 1.0100438 1.0200329 1.0324834 #>  [337,] 0.9321365 1.0627596 1.0684684 #>  [338,] 0.9383175 0.9466207 1.0082260 #>  [339,] 0.5385712 0.5962842 0.6048907 #>  [340,] 1.1206375 1.1277824 1.1414288 #>  [341,] 0.6870306 0.7007023 0.7107588 #>  [342,] 0.6004564 0.6281631 0.6336261 #>  [343,] 0.8945625 0.9496712 0.9576539 #>  [344,] 0.8571821 0.8850290 0.9750930 #>  [345,] 0.6400614 0.6500613 0.6690223 #>  [346,] 0.6522377 0.6740404 0.7079906 #>  [347,] 0.6282902 0.6351370 0.6419498 #>  [348,] 0.8255415 0.9467787 0.9539639 #>  [349,] 0.6291981 0.6419774 0.6781839 #>  [350,] 1.3372587 1.3835489 1.4117487 #>  [351,] 0.8645594 0.8874271 0.9316418 #>  [352,] 0.8226014 0.8774757 0.9140918 #>  [353,] 1.2790045 1.2923722 1.3296015 #>  [354,] 1.1166933 1.1458222 1.2259470 #>  [355,] 0.9947124 1.0120883 1.0176178 #>  [356,] 1.3435220 1.3781086 1.4583914 #>  [357,] 0.6447293 0.6468146 0.6679639 #>  [358,] 0.5785165 0.5961103 0.6105599 #>  [359,] 0.8038557 0.8460921 0.8582533 #>  [360,] 1.3801625 1.3901274 1.4671062 #>  [361,] 0.7493593 0.7684679 0.8597646 #>  [362,] 0.7009581 0.7181653 0.7345723 #>  [363,] 0.7758347 0.8195287 0.8483467 #>  [364,] 0.8271313 0.8888524 0.9212990 #>  [365,] 0.5883478 0.5886464 0.6081756 #>  [366,] 1.1815077 1.1885868 1.1961058 #>  [367,] 0.7207245 0.7249398 0.7261041 #>  [368,] 0.8578286 0.8579711 0.8641785 #>  [369,] 1.2976499 1.3002465 1.3717881 #>  [370,] 0.6519747 0.7208997 0.7398764 #>  [371,] 1.7521013 1.7640467 1.7649354 #>  [372,] 0.5938688 0.6800918 0.6877835 #>  [373,] 0.6357300 0.6390329 0.6754893 #>  [374,] 1.0170875 1.1354417 1.1357006 #>  [375,] 0.6246683 0.6255007 0.6326536 #>  [376,] 0.8473774 0.8494887 0.8605276 #>  [377,] 0.5644085 0.5648616 0.5802861 #>  [378,] 0.6769252 0.6979894 0.7046394 #>  [379,] 0.9366731 0.9491613 1.0630154 #>  [380,] 1.1503422 1.1899946 1.1994725 #>  [381,] 0.6350657 0.6537013 0.7149436 #>  [382,] 0.4907092 0.5385816 0.5649726 #>  [383,] 0.7432502 0.7748556 0.8199214 #>  [384,] 0.8781887 0.9646126 1.0489171 #>  [385,] 0.8033615 0.8269042 0.8690308 #>  [386,] 0.6995996 0.7020091 0.7310414 #>  [387,] 1.0399906 1.0829693 1.1769053 #>  [388,] 1.0501096 1.1248941 1.1279955 #>  [389,] 0.9883279 1.0331949 1.0368296 #>  [390,] 0.8291119 0.8397998 0.8424534 #>  [391,] 1.3142836 1.3466464 1.3868015 #>  [392,] 0.6953102 0.7042052 0.7523025 #>  [393,] 0.6066467 0.6128280 0.6690706 #>  [394,] 1.0250262 1.0379152 1.1305072 #>  [395,] 0.8568308 0.8618306 0.8678709 #>  [396,] 0.6692238 0.7032394 0.7060836 #>  [397,] 1.1502840 1.1771637 1.2225512 #>  [398,] 0.5966126 0.6056250 0.6096197 #>  [399,] 0.9314647 0.9391627 0.9392670 #>  [400,] 1.4789040 1.4816582 1.4827902 #>  [401,] 0.9984303 1.0654922 1.0911127 #>  [402,] 0.8904291 0.9255702 0.9303700 #>  [403,] 0.9437538 0.9696896 0.9709952 #>  [404,] 0.6630922 0.7114350 0.7215821 #>  [405,] 0.5193700 0.5277083 0.5776410 #>  [406,] 0.6858919 0.6993019 0.7058211 #>  [407,] 1.0269857 1.0832790 1.0842907 #>  [408,] 0.5771702 0.5861845 0.6020208 #>  [409,] 0.9898554 1.0052475 1.0057273 #>  [410,] 0.8897499 0.8951691 0.9017576 #>  [411,] 0.6878224 0.7612008 0.7694176 #>  [412,] 0.7535572 0.7819103 0.8519891 #>  [413,] 1.2772002 1.2797737 1.3075844 #>  [414,] 0.6835596 0.6882167 0.7333496 #>  [415,] 0.9747102 0.9762172 1.0662142 #>  [416,] 0.9850823 0.9904792 1.0172393 #>  [417,] 0.9257544 0.9448650 0.9513992 #>  [418,] 0.8294363 0.8295918 0.8874117 #>  [419,] 1.3210259 1.3492791 1.3678601 #>  [420,] 0.6835868 0.7151561 0.7487499 #>  [421,] 1.2331992 1.2718642 1.3108536 #>  [422,] 0.6244631 0.6262568 0.6410647 #>  [423,] 0.5624170 0.5693944 0.5725950 #>  [424,] 1.3350839 1.3500110 1.3651389 #>  [425,] 1.0646769 1.0948907 1.1497128 #>  [426,] 0.5079853 0.5085118 0.5400346 #>  [427,] 0.9277051 0.9363303 0.9527059 #>  [428,] 0.6923993 0.7026853 0.7282836 #>  [429,] 0.5315649 0.5323387 0.5360746 #>  [430,] 0.5456330 0.6420069 0.6630922 #>  [431,] 0.6768126 0.6948558 0.6996022 #>  [432,] 0.6518538 0.6794945 0.7080091 #>  [433,] 0.6695041 0.6958074 0.7511208 #>  [434,] 0.6427884 0.6468726 0.6876433 #>  [435,] 0.6534425 0.6667067 0.6751430 #>  [436,] 0.6558580 0.6668246 0.6718545 #>  [437,] 0.6527975 0.6650614 0.7138278 #>  [438,] 0.9381842 0.9621098 0.9787644 #>  [439,] 0.5712490 0.5717344 0.6079599 #>  [440,] 0.6672112 0.6701591 0.6932590 #>  [441,] 1.0568596 1.1136304 1.1392861 #>  [442,] 0.6281631 0.6595251 0.6634116 #>  [443,] 0.5328233 0.5487932 0.5778280 #>  [444,] 0.6564700 0.6785378 0.6882218 #>  [445,] 0.9344418 0.9827101 0.9929059 #>  [446,] 1.1956258 1.2196376 1.2509474 #>  [447,] 0.8607418 0.8700938 0.8820128 #>  [448,] 0.6768686 0.6934646 0.8119746 #>  [449,] 1.1643355 1.2190535 1.2320565 #>  [450,] 0.7800899 0.7913520 0.8122574 #>  [451,] 0.6580311 0.6793878 0.6870897 #>  [452,] 0.5482704 0.5550461 0.5777003 #>  [453,] 0.5500821 0.5616141 0.5752044 #>  [454,] 0.6090492 0.6137801 0.6240492 #>  [455,] 0.5617725 0.5683602 0.5891856 #>  [456,] 0.9287359 0.9506871 0.9542970 #>  [457,] 0.8300306 0.8620008 0.8684561 #>  [458,] 1.1912156 1.2034733 1.2721403 #>  [459,] 0.6187649 0.6309340 0.6535335 #>  [460,] 0.7454744 0.7568933 0.8228165 #>  [461,] 0.6056025 0.6101223 0.6135671 #>  [462,] 0.5051625 0.5353076 0.5355942 #>  [463,] 0.5391003 0.5454844 0.5731096 #>  [464,] 0.5481954 0.5866514 0.5909665 #>  [465,] 0.6428756 0.6433965 0.6550288 #>  [466,] 0.5565284 0.5797909 0.5958238 #>  [467,] 0.6808117 0.6898619 0.6937362 #>  [468,] 0.8953007 0.9523561 0.9544903 #>  [469,] 1.3521702 1.3652874 1.3721088 #>  [470,] 0.6788469 0.6791664 0.7178522 #>  [471,] 0.6812188 0.6955994 0.8008150 #>  [472,] 0.7456374 0.7618184 0.8211111 #>  [473,] 0.8519029 0.8688327 0.8708684 #>  [474,] 0.6013085 0.6031065 0.6271390 #>  [475,] 0.6670292 0.6964720 0.7454744 #>  [476,] 0.9388739 0.9393335 0.9423537 #>  [477,] 0.9649712 0.9685415 0.9818598 #>  [478,] 0.5313650 0.5360949 0.5562109 #>  [479,] 0.5991182 0.6223214 0.6227540 #>  [480,] 1.0586673 1.0779516 1.0860865 #>  [481,] 0.8108355 0.8378676 0.8735863 #>  [482,] 0.7617117 0.7894029 0.7906645 #>  [483,] 1.0014871 1.0101130 1.0243672 #>  [484,] 0.8599161 0.8823005 0.9836362 #>  [485,] 1.3189722 1.3530901 1.4104662 #>  [486,] 0.8126845 0.8256230 0.8433529 #>  [487,] 0.5418255 0.5754217 0.5762106 #>  [488,] 0.9639050 1.0560591 1.0565516 #>  [489,] 1.0404514 1.0639316 1.1320289 #>  [490,] 0.8495409 0.8712406 0.9085534 #>  [491,] 0.9058002 0.9086143 0.9327101 #>  [492,] 0.4866020 0.5060132 0.5289853 #>  [493,] 0.9405554 0.9604681 0.9958383 #>  [494,] 1.3054707 1.4101108 1.4179282 #>  [495,] 0.7830074 0.7837152 0.7944301 #>  [496,] 0.9103006 0.9169557 0.9797031 #>  [497,] 0.6026957 0.6455357 0.6814578 #>  [498,] 0.8955709 0.9050834 0.9256630 #>  [499,] 0.8378676 0.8429177 0.8839123 #>  [500,] 0.6295516 0.6403321 0.6471051 #>  [501,] 1.0401011 1.1061794 1.1374030 #>  [502,] 0.7603324 0.7619168 0.7639071 #>  [503,] 0.7374112 0.7537164 0.7720334 #>  [504,] 0.8814341 0.8922805 0.8996765 #>  [505,] 0.5350442 0.5595818 0.5754217 #>  [506,] 1.4783537 1.5583341 1.6053566 #>  [507,] 0.7198703 0.7370967 0.7614986 #>  [508,] 1.0744856 1.1531728 1.1545275 #>  [509,] 0.7948138 0.8154670 0.8235367 #>  [510,] 0.8216318 0.8294088 0.9055382 #>  [511,] 0.6878224 0.6912585 0.7218512 #>  [512,] 0.5742293 0.6026517 0.6046363 #>  [513,] 1.3113232 1.3181359 1.3438919 #>  [514,] 0.5998131 0.6558266 0.6659036 #>  [515,] 1.1103013 1.1162948 1.1732769 #>  [516,] 0.8182025 0.8206238 0.8434631 #>  [517,] 0.7277532 0.8050180 0.8873180 #>  [518,] 0.6129203 0.6145542 0.6182163 #>  [519,] 0.7727295 0.7758941 0.7918196 #>  [520,] 0.8007117 0.8063838 0.8138400 #>  [521,] 0.8451894 0.9112644 0.9227359 #>  [522,] 0.6733906 0.7640429 0.7715002 #>  [523,] 1.0019570 1.0216043 1.0326926 #>  [524,] 1.9986121 2.0373619 2.0466746 #>  [525,] 0.6429618 0.6760485 0.7046827 #>  [526,] 0.9266812 0.9752333 1.0261324 #>  [527,] 0.5644085 0.5843785 0.5952650 #>  [528,] 1.0961734 1.1064796 1.1364529 #>  [529,] 1.2619918 1.2772002 1.2828758 #>  [530,] 1.0623860 1.0950939 1.1515615 #>  [531,] 0.7972555 0.8108839 0.8186874 #>  [532,] 1.0676919 1.0816212 1.0889873 #>  [533,] 1.5599703 1.5637740 1.6262017 #>  [534,] 1.1601845 1.1677939 1.1915643 #>  [535,] 0.7437512 0.7768562 0.7780390 #>  [536,] 0.5385816 0.5509223 0.5617725 #>  [537,] 0.6939102 0.7043898 0.7301105 #>  [538,] 0.6296481 0.6408286 0.6764420 #>  [539,] 0.8117176 0.8398326 0.8969707 #>  [540,] 0.5395305 0.5737572 0.6747855 #>  [541,] 0.6384452 0.6424399 0.6464334 #>  [542,] 0.6037200 0.6184840 0.6427250 #>  [543,] 1.7389397 1.7432314 1.7605225 #>  [544,] 0.6549810 0.7048363 0.7605680 #>  [545,] 0.8459038 0.8829730 0.8856645 #>  [546,] 0.8840377 0.9180951 0.9242806 #>  [547,] 0.7847372 0.8010704 0.8131908 #>  [548,] 0.6236334 0.6934646 0.7143313 #>  [549,] 0.7873519 0.8059979 0.8069110 #>  [550,] 0.7689770 0.7703480 0.8007546 #>  [551,] 0.6778821 0.6904580 0.7140602 #>  [552,] 1.3050743 1.3174856 1.3245004 #>  [553,] 0.5739805 0.6327775 0.6762927 #>  [554,] 1.0983617 1.1007335 1.1150497 #>  [555,] 0.5904330 0.5907322 0.6223214 #>  [556,] 0.6749934 0.7234557 0.7310857 #>  [557,] 0.8743692 0.8849347 0.8906070 #>  [558,] 0.8210579 0.8339558 0.8358573 #>  [559,] 0.6362629 0.6452187 0.6644220 #>  [560,] 0.5339803 0.5603274 0.5638867 #>  [561,] 0.6117608 0.6255007 0.6764420 #>  [562,] 0.5888595 0.5990440 0.6261337 #>  [563,] 0.5450248 0.5507408 0.5843693 #>  [564,] 0.8036016 0.8047433 0.8095797 #>  [565,] 0.7281262 0.7313658 0.7628992 #>  [566,] 0.8644989 0.8671357 0.8806064 #>  [567,] 0.7552830 0.8330571 0.8431302 #>  [568,] 0.6535335 0.6558580 0.6652348 #>  [569,] 0.6395264 0.6573256 0.6623413 #>  [570,] 0.5679686 0.5798006 0.5855622 #>  [571,] 1.2268012 1.2354872 1.2887981 #>  [572,] 0.7696123 0.8168017 0.8235367 #>  [573,] 0.6524939 0.6526783 0.6537565 #>  [574,] 0.7487317 0.7649604 0.8059799 #>  [575,] 0.7395767 0.7398610 0.7440935 #>  [576,] 1.4391799 1.4708825 1.4709662 #>  [577,] 0.6162172 0.6338708 0.6493104 #>  [578,] 0.6112259 0.6762352 0.6951589 #>  [579,] 0.8065056 0.8434935 0.8492122 #>  [580,] 0.6786620 0.6825721 0.6948558 #>  [581,] 0.9528192 0.9530200 0.9536042 #>  [582,] 0.6961684 0.7005153 0.7200962 #>  [583,] 0.6964311 0.7305837 0.7375307 #>  [584,] 0.7953558 0.8005790 0.8179851 #>  [585,] 0.8183849 0.8200502 0.8415363 #>  [586,] 0.7296850 0.7548720 0.7718743 #>  [587,] 1.0785649 1.0910164 1.1045277 #>  [588,] 1.1486131 1.2054843 1.2569678 #>  [589,] 0.8834156 0.9013056 0.9252945 #>  [590,] 0.6705622 0.7005153 0.7161061 #>  [591,] 0.9030430 0.9095357 0.9156253 #>  [592,] 0.8750487 0.9364926 0.9416197 #>  [593,] 0.7196849 0.7375307 0.7392870 #>  [594,] 0.4857713 0.5048972 0.5064786 #>  [595,] 0.7901913 0.8093104 0.8167210 #>  [596,] 0.6957880 0.7340013 0.7358673 #>  [597,] 0.8860218 0.9015235 0.9340972 #>  [598,] 1.0209397 1.0384102 1.0409858 #>  [599,] 0.6986558 0.7048297 0.7052132 #>  [600,] 0.4486767 0.4499965 0.4644044 #>  [601,] 0.6136227 0.6245746 0.6282400 #>  [602,] 1.0287512 1.0528400 1.1279718 #>  [603,] 0.6406844 0.6690390 0.6909485 #>  [604,] 1.0706229 1.1468348 1.2382435 #>  [605,] 0.8337829 0.8356623 0.8498903 #>  [606,] 0.7112152 0.7178691 0.7525727 #>  [607,] 0.7662232 0.7878505 0.8152720 #>  [608,] 0.8432071 0.9130115 0.9134965 #>  [609,] 0.7294285 0.7394242 0.8061877 #>  [610,] 0.5484994 0.5668749 0.5726566 #>  [611,] 0.6712364 0.6946237 0.7123065 #>  [612,] 0.9382667 0.9442659 0.9496172 #>  [613,] 0.7452738 0.7831081 0.8200878 #>  [614,] 0.6844116 0.7367583 0.8030428 #>  [615,] 0.5996906 0.6805434 0.6907728 #>  [616,] 0.6448831 0.6465416 0.6646882 #>  [617,] 0.6330853 0.6338419 0.6492601 #>  [618,] 0.6581534 0.6624720 0.6782377 #>  [619,] 0.5785262 0.5992795 0.6004985 #>  [620,] 1.1733083 1.1949105 1.2032782 #>  [621,] 0.7480387 0.7581511 0.7587846 #>  [622,] 0.6066467 0.6091028 0.6357692 #>  [623,] 0.7574095 0.7750165 0.7750993 #>  [624,] 0.6404274 0.6464334 0.6512162 #>  [625,] 0.4936428 0.5103733 0.5193264 #>  [626,] 0.6651575 0.7020622 0.7105529 #>  [627,] 0.5168428 0.5313965 0.5346088 #>  [628,] 1.1969643 1.2550925 1.2755433 #>  [629,] 0.9939926 1.1064796 1.1888797 #>  [630,] 0.5387954 0.5750941 0.6330853 #>  [631,] 0.5584544 0.6024155 0.6031142 #>  [632,] 0.5168930 0.5277083 0.5375306 #>  [633,] 0.7092947 0.7104353 0.7559999 #>  [634,] 1.5329647 1.5543975 1.5634955 #>  [635,] 0.8239511 0.8424172 0.8468338 #>  [636,] 0.5691435 0.5785262 0.6071647 #>  [637,] 0.6921431 0.7186866 0.7496286 #>  [638,] 1.1684576 1.1720750 1.2815534 #>  [639,] 0.5226410 0.5265200 0.5287791 #>  [640,] 0.9272855 1.0091640 1.0295797 #>  [641,] 0.8376052 0.8647237 0.8855559 #>  [642,] 0.6506551 0.6553010 0.6567167 #>  [643,] 0.8437098 0.9360267 0.9416733 #>  [644,] 0.8313149 0.8624519 0.8815605 #>  [645,] 0.8804594 0.8838989 0.8878144 #>  [646,] 0.6667067 0.6814557 0.6893700 #>  [647,] 0.8415679 0.8527642 0.9171935 #>  [648,] 0.7124559 0.7301105 0.7330808 #>  [649,] 0.8566197 0.8909896 0.9475842 #>  [650,] 0.6581534 0.6609447 0.6667060 #>  [651,] 0.6255844 0.6518966 0.6765430 #>  [652,] 0.5218521 0.5378445 0.5477966 #>  [653,] 0.8436011 0.8554253 0.8595510 #>  [654,] 0.7314720 0.7467353 0.7578659 #>  [655,] 0.7577839 0.7600927 0.7681376 #>  [656,] 0.6016411 0.6262568 0.7451286 #>  [657,] 0.7854676 0.8077895 0.8103925 #>  [658,] 0.7926088 0.8093795 0.8230118 #>  [659,] 0.7241140 0.7398764 0.7581030 #>  [660,] 1.0346138 1.0575992 1.0842958 #>  [661,] 0.6844116 0.7234940 0.7333325 #>  [662,] 1.3510106 1.4042872 1.4452742 #>  [663,] 0.9276341 0.9611789 0.9810257 #>  [664,] 1.3571994 1.3684642 1.4009844 #>  [665,] 0.5193264 0.5278611 0.5542983 #>  [666,] 0.7984033 0.8072558 0.8220592 #>  [667,] 0.4945059 0.5199658 0.5230416 #>  [668,] 0.6480838 0.6555913 0.6568056 #>  [669,] 0.6042177 0.6725560 0.6829031 #>  [670,] 0.8167210 0.8217891 0.8454277 #>  [671,] 0.5191856 0.5588236 0.5713235 #>  [672,] 0.6301799 0.7082396 0.7084019 #>  [673,] 1.1047607 1.1290818 1.1427840 #>  [674,] 1.0286224 1.0489808 1.1980335 #>  [675,] 0.7582187 0.8295305 0.8506862 #>  [676,] 0.4898465 0.5077859 0.5569960 #>  [677,] 1.1265926 1.1345218 1.1718851 #>  [678,] 0.7329744 0.7372459 0.7431529 #>  [679,] 0.8222470 0.8549426 0.8578457 #>  [680,] 0.6001333 0.6251796 0.6305219 #>  [681,] 0.6023168 0.6023326 0.6355162 #>  [682,] 0.8479085 0.8481944 0.9064674 #>  [683,] 0.7300708 0.7351187 0.7679004 #>  [684,] 1.1181226 1.1514274 1.1520443 #>  [685,] 1.3081986 1.3511665 1.3546523 #>  [686,] 0.8223941 0.8485594 0.8596713 #>  [687,] 1.4075839 1.4083701 1.4198596 #>  [688,] 0.5998510 0.6018173 0.6698119 #>  [689,] 0.8100292 0.8132382 0.8290019 #>  [690,] 1.4425738 1.4767449 1.4852187 #>  [691,] 0.7187549 0.7231538 0.7616374 #>  [692,] 0.7839864 0.9088926 0.9183030 #>  [693,] 1.1245014 1.1299580 1.1779799 #>  [694,] 0.8502838 0.8607838 0.8634507 #>  [695,] 0.6370685 0.6576615 0.6661744 #>  [696,] 0.6707645 0.6913080 0.7488963 #>  [697,] 1.2274986 1.2299970 1.2731950 #>  [698,] 0.8681527 0.8798386 0.8812853 #>  [699,] 1.0413015 1.0756651 1.1580812 #>  [700,] 0.8271218 0.8861557 0.9005656 #>  [701,] 0.5409587 0.5693944 0.5826461 #>  [702,] 0.6246683 0.6272535 0.6723784 #>  [703,] 0.6862989 0.7151716 0.7282951 #>  [704,] 0.6069424 0.6202665 0.6316222 #>  [705,] 0.5124730 0.5226410 0.5362648 #>  [706,] 0.8468311 0.9024582 0.9621088 #>  [707,] 0.9068786 0.9137429 0.9769217 #>  [708,] 0.6905525 0.6921540 0.6954956 #>  [709,] 0.6029503 0.6361513 0.6433054 #>  [710,] 0.6217058 0.6365584 0.6902800 #>  [711,] 0.7614537 0.7667677 0.7703144 #>  [712,] 1.0364992 1.0387321 1.0657045 #>  [713,] 0.6046865 0.6198958 0.6384032 #>  [714,] 0.6731939 0.8080229 0.8415477 #>  [715,] 0.8829191 0.9003761 0.9946490 #>  [716,] 0.6938717 0.7077167 0.7318667 #>  [717,] 0.7602650 0.8107766 0.8163540 #>  [718,] 1.0565192 1.0684127 1.0869709 #>  [719,] 0.6312752 0.7096263 0.7278098 #>  [720,] 0.8012073 0.8117176 0.8313351 #>  [721,] 1.0271835 1.0479994 1.0815893 #>  [722,] 1.4393498 1.4457478 1.4535853 #>  [723,] 0.6955994 0.7107914 0.7879663 #>  [724,] 0.9564275 0.9664683 0.9939665 #>  [725,] 0.5375306 0.5506939 0.6009925 #>  [726,] 0.7494753 0.7556719 0.7822650 #>  [727,] 0.6468575 0.6961557 0.6964720 #>  [728,] 0.5997664 0.6001591 0.6155722 #>  [729,] 0.5942126 0.6073632 0.6195113 #>  [730,] 1.3983351 1.4051475 1.4555884 #>  [731,] 0.4392495 0.4522104 0.4600902 #>  [732,] 0.7472028 0.7504833 0.7585133 #>  [733,] 1.0460179 1.0499655 1.0528400 #>  [734,] 0.6156672 0.6564138 0.6567264 #>  [735,] 1.0697011 1.0902501 1.1232930 #>  [736,] 0.7800657 0.8364514 0.8879324 #>  [737,] 1.4933881 1.5076791 1.5260360 #>  [738,] 1.6959213 1.7622650 1.7781693 #>  [739,] 0.6674419 0.6690706 0.7151769 #>  [740,] 0.7168509 0.7284899 0.7440227 #>  [741,] 1.3005457 1.3145368 1.3352531 #>  [742,] 0.8940356 0.9136499 0.9644563 #>  [743,] 0.7308033 0.7802867 0.7915027 #>  [744,] 1.1698396 1.1926072 1.2033719 #>  [745,] 0.5273193 0.5321233 0.5331231 #>  [746,] 0.9375876 0.9787880 1.0135702 #>  [747,] 0.7973382 0.8081416 0.8129155 #>  [748,] 0.5278877 0.5295990 0.5339085 #>  [749,] 1.3259474 1.3926687 1.4938601 #>  [750,] 1.3443883 1.3517436 1.3695591 #>  [751,] 0.7403285 0.7476519 0.7476944 #>  [752,] 0.8038557 0.8188241 0.8361449 #>  [753,] 0.5830661 0.5896243 0.6131318 #>  [754,] 0.8295862 0.8794088 0.8817272 #>  [755,] 0.8281127 0.8547641 0.8724939 #>  [756,] 0.8145100 0.8354554 0.8498277 #>  [757,] 1.0595367 1.0669674 1.0762475 #>  [758,] 0.6692728 0.6750074 0.6969108 #>  [759,] 1.4425588 1.4450915 1.4485554 #>  [760,] 0.9614825 1.0145686 1.0325010 #>  [761,] 0.8236312 0.8367278 0.8871239 #>  [762,] 0.8817379 0.9044000 0.9225560 #>  [763,] 0.8572320 0.8702495 0.8882137 #>  [764,] 1.0525668 1.1076135 1.1188842 #>  [765,] 1.0771012 1.0965720 1.1008531 #>  [766,] 0.6423751 0.6479607 0.6653010 #>  [767,] 1.6922143 1.7899635 1.7920328 #>  [768,] 0.8161390 0.8400865 0.8727946 #>  [769,] 0.5660296 0.5680735 0.5726571 #>  [770,] 0.6327408 0.6351406 0.6470458 #>  [771,] 0.5556988 0.5703449 0.5999381 #>  [772,] 1.2256447 1.2333862 1.2719175 #>  [773,] 0.6217967 0.6700012 0.6851077 #>  [774,] 0.6712884 0.6823659 0.6879035 #>  [775,] 0.6194800 0.6852188 0.6856381 #>  [776,] 0.8137139 0.8504918 0.8506675 #>  [777,] 0.6087419 0.6231945 0.6413940 #>  [778,] 0.5573757 0.5591812 0.5722022 #>  [779,] 0.7539744 0.7675742 0.7819436 #>  [780,] 0.6022022 0.6272123 0.6733906 #>  [781,] 0.9667655 0.9761289 0.9791836 #>  [782,] 0.6873836 0.6874926 0.7085655 #>  [783,] 1.3426498 1.3448036 1.3594939 #>  [784,] 0.7333666 0.7453602 0.7704745 #>  [785,] 0.6845304 0.7195870 0.7350830 #>  [786,] 0.5615982 0.6482300 0.6626709 #>  [787,] 0.6829226 0.7103054 0.7582187 #>  [788,] 1.3111110 1.3443883 1.3508512 #>  [789,] 0.7159171 0.7409698 0.7432327 #>  [790,] 0.8231925 0.8420854 0.8676661 #>  [791,] 0.5770693 0.5993656 0.6586113 #>  [792,] 0.6024179 0.6357810 0.6471777 #>  [793,] 0.7362208 0.7563445 0.7604813 #>  [794,] 0.5242530 0.5896243 0.6221925 #>  [795,] 0.6765117 0.6808698 0.6860621 #>  [796,] 0.6378715 0.6493104 0.7154337 #>  [797,] 0.6942018 0.6975285 0.6987087 #>  [798,] 0.8170461 0.8170992 0.8253864 #>  [799,] 0.6305219 0.6799923 0.7012488 #>  [800,] 1.3014992 1.3042135 1.3436557 #>  [801,] 0.6493601 0.6958777 0.7171059 #>  [802,] 0.7456374 0.7915027 0.8399245 #>  [803,] 0.9624949 1.0048730 1.0134325 #>  [804,] 0.6385078 0.6401412 0.6452882 #>  [805,] 1.2882328 1.3116221 1.3530189 #>  [806,] 1.1315468 1.1543534 1.1842663 #>  [807,] 0.9449775 0.9523550 1.0305026 #>  [808,] 0.6644028 0.6782536 0.6817313 #>  [809,] 0.6073446 0.6080299 0.6371655 #>  [810,] 0.6479790 0.6849452 0.7069055 #>  [811,] 0.8197661 0.8611037 0.8831020 #>  [812,] 1.2020665 1.2276773 1.3645757 #>  [813,] 0.8459063 0.8858263 0.9043877 #>  [814,] 0.5030616 0.5425757 0.5832610 #>  [815,] 0.5692769 0.5740741 0.5949132 #>  [816,] 0.9251622 0.9861523 1.0485725 #>  [817,] 0.7455969 0.7520157 0.7618184 #>  [818,] 0.5359281 0.5633575 0.5787698 #>  [819,] 0.7392894 0.7433975 0.7467121 #>  [820,] 0.6852824 0.6936329 0.7181921 #>  [821,] 0.5691435 0.6463727 0.6611763 #>  [822,] 1.2069003 1.2512975 1.3098555 #>  [823,] 0.5533264 0.5571266 0.5728231 #>  [824,] 0.5569960 0.5713235 0.5723353 #>  [825,] 1.0763169 1.2100524 1.2285099 #>  [826,] 2.2350899 2.2409299 2.2762731 #>  [827,] 0.6979746 0.7433342 0.7928800 #>  [828,] 0.8195287 0.8230827 0.8755930 #>  [829,] 0.7736600 0.7757537 0.8217891 #>  [830,] 0.7803848 0.7871981 0.8020304 #>  [831,] 0.6982709 0.7102531 0.7376757 #>  [832,] 0.7935244 0.7980322 0.8237117 #>  [833,] 0.8345448 0.8784208 0.8797097 #>  [834,] 0.6832902 0.7362208 0.7471694 #>  [835,] 0.9260811 0.9793206 1.0038276 #>  [836,] 0.7523899 0.7552830 0.7849001 #>  [837,] 0.5709049 0.6433156 0.6480446 #>  [838,] 0.6853249 0.7016597 0.7149436 #>  [839,] 1.0767440 1.1315852 1.1317125 #>  [840,] 0.7780390 0.7996709 0.8237035 #>  [841,] 1.0104470 1.0193453 1.0306852 #>  [842,] 0.5359281 0.5933982 0.5955270 #>  [843,] 0.8057024 0.8107597 0.8248156 #>  [844,] 0.9828862 1.0526536 1.1172094 #>  [845,] 0.6008261 0.6365584 0.6558512 #>  [846,] 1.0659414 1.0937044 1.0962502 #>  [847,] 0.7480387 0.8049348 0.8428658 #>  [848,] 0.4727254 0.5228817 0.5653482 #>  [849,] 0.7351557 0.7483951 0.7516727 #>  [850,] 0.6562227 0.6983475 0.7033504 #>  [851,] 0.7464592 0.7484533 0.7577953 #>  [852,] 0.8046619 0.9025282 0.9054467 #>  [853,] 0.6975517 0.7332359 0.7376195 #>  [854,] 0.7400121 0.8415679 0.8646007 #>  [855,] 0.6799060 0.6946237 0.7078478 #>  [856,] 1.2124760 1.2249589 1.2627316 #>  [857,] 0.6487889 0.6975098 0.7085655 #>  [858,] 0.7662521 0.7753520 0.7769130 #>  [859,] 0.6986404 0.7012488 0.7207712 #>  [860,] 0.6329787 0.6340854 0.6395264 #>  [861,] 0.8645594 0.9205177 0.9581222 #>  [862,] 0.7280158 0.7415283 0.7464137 #>  [863,] 0.8814485 0.9013198 0.9029114 #>  [864,] 0.5952842 0.6220791 0.6310147 #>  [865,] 0.5594867 0.5755884 0.6002305 #>  [866,] 0.6922695 0.7228793 0.7501878 #>  [867,] 1.3238489 1.3318104 1.3359951 #>  [868,] 2.0938201 2.1759249 2.2363200 #>  [869,] 0.8587993 0.8596713 0.8720597 #>  [870,] 0.5824093 0.6160518 0.6176777 #>  [871,] 0.8977000 0.9656369 0.9848920 #>  [872,] 1.0004142 1.0859541 1.1271155 #>  [873,] 1.0587168 1.0671328 1.0713395 #>  [874,] 0.7917424 0.8059509 0.8291018 #>  [875,] 1.3798552 1.3975421 1.4330199 #>  [876,] 0.8406873 0.8438542 0.8726854 #>  [877,] 0.9276341 0.9394095 0.9531893 #>  [878,] 0.7514681 0.7553204 0.7617117 #>  [879,] 0.8670633 0.8715225 0.8907002 #>  [880,] 0.6622340 0.6712671 0.7151238 #>  [881,] 0.7079906 0.7542690 0.7553204 #>  [882,] 0.4877730 0.5065874 0.5278877 #>  [883,] 1.3287780 1.3347759 1.3527689 #>  [884,] 0.9110121 0.9179552 0.9406995 #>  [885,] 0.6915555 0.6986609 0.7335975 #>  [886,] 1.0725903 1.0912648 1.1683286 #>  [887,] 0.7975048 0.8127076 0.8222194 #>  [888,] 0.7077427 0.7250279 0.7456894 #>  [889,] 1.1297581 1.1312305 1.1394487 #>  [890,] 0.7838813 0.8078125 0.8374231 #>  [891,] 0.6912585 0.7060671 0.7436832 #>  [892,] 1.3497003 1.3843818 1.3957093 #>  [893,] 0.8079237 0.8239971 0.9187535 #>  [894,] 1.3010207 1.3202480 1.3840435 #>  [895,] 0.7423832 0.7586647 0.7629645 #>  [896,] 0.7583483 0.8294024 0.8423330 #>  [897,] 0.4873556 0.5106334 0.5427146 #>  [898,] 0.9114773 0.9677365 0.9751615 #>  [899,] 0.8579224 0.8873180 0.9327680 #>  [900,] 0.8523723 0.8536145 0.8751137 #>  [901,] 0.5958806 0.6395537 0.6474215 #>  [902,] 0.6536905 0.6723442 0.6843614 #>  [903,] 0.7743039 0.7848989 0.8095011 #>  [904,] 0.6740839 0.6774418 0.6948049 #>  [905,] 0.7517759 0.7596784 0.7607250 #>  [906,] 0.8120114 0.8240332 0.8493727 #>  [907,] 0.7651825 0.7684679 0.8344002 #>  [908,] 0.5581619 0.6357692 0.6463727 #>  [909,] 1.2552516 1.2894161 1.4014495 #>  [910,] 0.6983619 0.7123181 0.7157420 #>  [911,] 0.7779926 0.7838813 0.7953267 #>  [912,] 0.7469488 0.7561940 0.7917113 #>  [913,] 1.0456704 1.0565697 1.0791441 #>  [914,] 0.5335353 0.5528314 0.5685269 #>  [915,] 0.9043877 0.9044000 0.9234265 #>  [916,] 0.5726487 0.6157351 0.6518538 #>  [917,] 0.9639577 0.9865454 1.0618379 #>  [918,] 1.3353390 1.3407258 1.4583411 #>  [919,] 0.8058079 0.8074721 0.8257690 #>  [920,] 0.6434831 0.6445371 0.6710401 #>  [921,] 0.8859339 0.9063786 0.9278227 #>  [922,] 0.5177597 0.5240957 0.5258883 #>  [923,] 0.9441516 0.9572038 0.9897259 #>  [924,] 0.9575865 0.9611610 0.9768292 #>  [925,] 0.7421339 0.7649604 0.7758347 #>  [926,] 0.6620913 0.6637599 0.7113020 #>  [927,] 0.7362006 0.7530223 0.7667630 #>  [928,] 0.5953248 0.6767150 0.7140602 #>  [929,] 1.3149177 1.4582563 1.4785938 #>  [930,] 0.7698959 0.7787466 0.7884250 #>  [931,] 0.7531525 0.7881658 0.8726854 #>  [932,] 0.8332795 0.8685852 0.9847512 #>  [933,] 1.1035690 1.1049963 1.1739467 #>  [934,] 1.0212143 1.0530628 1.1257466 #>  [935,] 0.6419228 0.6597913 0.6703373 #>  [936,] 0.9759065 0.9787644 0.9893842 #>  [937,] 0.6529818 0.6688306 0.6750074 #>  [938,] 1.1182387 1.1460388 1.1722318 #>  [939,] 0.7126181 0.7237446 0.7556274 #>  [940,] 0.8264805 0.8374231 0.8483188 #>  [941,] 0.5485584 0.5558400 0.5640248 #>  [942,] 1.5104229 1.5773552 1.6275313 #>  [943,] 0.6056742 0.6444982 0.6458265 #>  [944,] 0.4057041 0.5046580 0.5315649 #>  [945,] 0.8601236 0.9394321 0.9615208 #>  [946,] 0.9699007 0.9880152 1.0029236 #>  [947,] 1.1539035 1.1911263 1.2035618 #>  [948,] 0.4877730 0.5178784 0.5241761 #>  [949,] 0.5571266 0.5820863 0.5979310 #>  [950,] 0.6416593 0.6429411 0.6661744 #>  [951,] 0.6413940 0.6657719 0.6692390 #>  [952,] 1.8717218 1.9705702 2.0201102 #>  [953,] 0.5572833 0.5726566 0.5752044 #>  [954,] 0.7944742 0.8047433 0.8217995 #>  [955,] 1.1411584 1.1675026 1.1737487 #>  [956,] 0.5932375 0.5984875 0.6203243 #>  [957,] 0.9186787 0.9197014 0.9770041 #>  [958,] 1.4827187 1.4925126 1.5241503 #>  [959,] 0.7888984 0.8005664 0.8873804 #>  [960,] 1.0134409 1.0390255 1.0734165 #>  [961,] 0.6659207 0.6691283 0.6785518 #>  [962,] 1.3684642 1.3841783 1.3898888 #>  [963,] 0.6874232 0.6887425 0.7549684 #>  [964,] 0.7041669 0.7060752 0.7242099 #>  [965,] 0.5242418 0.5314283 0.5878722 #>  [966,] 0.9632909 0.9636836 0.9801186 #>  [967,] 0.7097354 0.7197167 0.7435194 #>  [968,] 0.9954296 1.0142245 1.0533314 #>  [969,] 0.7476518 0.7588912 0.7990075 #>  [970,] 0.7376757 0.7853892 0.8036016 #>  [971,] 0.7458449 0.7634727 0.7675740 #>  [972,] 0.9649887 0.9732082 0.9911097 #>  [973,] 1.8502705 1.8824446 1.8993484 #>  [974,] 0.5832059 0.5855622 0.6061136 #>  [975,] 0.7455946 0.7586647 0.7844661 #>  [976,] 0.6856158 0.6974566 0.7278098 #>  [977,] 0.5735395 0.5765693 0.5857709 #>  [978,] 0.6047392 0.6163291 0.6246626 #>  [979,] 0.9309714 0.9339775 0.9375701 #>  [980,] 0.6982157 0.7290125 0.7488442 #>  [981,] 0.8840553 0.9560712 0.9744054 #>  [982,] 0.9207602 0.9395595 0.9775374 #>  [983,] 0.8273511 0.8537514 0.8625426 #>  [984,] 1.3635695 1.3787229 1.5197958 #>  [985,] 0.5790417 0.6157351 0.6510206 #>  [986,] 0.7859600 0.7861077 0.7880168 #>  [987,] 0.5929386 0.5988571 0.6046865 #>  [988,] 0.5836017 0.5992714 0.6328221 #>  [989,] 1.3617419 1.4767449 1.4772797 #>  [990,] 1.1262244 1.2135532 1.2879895 #>  [991,] 1.7301178 1.7765340 1.7947605 #>  [992,] 0.5487932 0.6073665 0.6086256 #>  [993,] 0.6731939 0.6832902 0.6974566 #>  [994,] 0.7308436 0.8339786 0.8482979 #>  [995,] 0.7554116 0.7687887 0.8449323 #>  [996,] 0.9477374 0.9824898 0.9966284 #>  [997,] 0.7607250 0.7666131 0.7709543 #>  [998,] 0.9194165 0.9437538 0.9733749 #>  [999,] 0.9326818 0.9466905 1.0140477 #> [1000,] 1.1367346 1.1499117 1.1919870 #>   # Find the 10 approximate nearest neighbors tof_find_knn(     .data = sim_data,     k = 10,     distance_function = \"euclidean\", ) #> $neighbor_ids #>         [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] #>    [1,]  447  589    9  804  887  444  700  930   71   164 #>    [2,]  551  945   23  656  473  585  132  830  900   571 #>    [3,]  106  894  825  447    9  149  759  124  567   564 #>    [4,]   25  503  189  368  815  985  734  906  876   670 #>    [5,]  237  491  872  445  495   80  364  698  336   154 #>    [6,]  126  270  502   34   68  271  434  694  592   195 #>    [7,]  421  352  188  746  686  764  869  469   83   410 #>    [8,]  948  824  745  443  536  676  260  671  882   627 #>    [9,]  447  930  950  695  444  785  437  103  225   106 #>   [10,]  951   29   19  949  479  190  777  497  599   443 #>   [11,]  625  257  204  965  166  953  668  748  514   897 #>   [12,]   15  123  248  601  661   51  467  850  708   614 #>   [13,]  699  658  343  361  744  904  169  219  720   362 #>   [14,]  119  404  474  223  431  241  943  473   20    76 #>   [15,]   12  123  614  235  248  661  601  467   51   850 #>   [16,]  940  136  847  969  811  755  122  385  890   982 #>   [17,]   38  279  299  716  901  540  209  134  653   285 #>   [18,]  480  209  194  246  903  598  757  540  417    43 #>   [19,]   29   10  951  314  104  834  770  614  497   190 #>   [20,]   76  558  292  945   14  431  657  404  975   835 #>   [21,]  303  559  255  426  440  218  233   60  318   729 #>   [22,]  460  481  484  763  475  461  815  829  734   578 #>   [23,]  571  760    2  287   65  830  790  585  271   100 #>   [24,]   64  617  487  978  672  855  252  630  902   436 #>   [25,]    4  815  189  503  734  985  368  393  646   342 #>   [26,]  256  961  560  590  298   72  327  980  377    61 #>   [27,]  356  232  803   87  645  966  360  816   46   403 #>   [28,]   69  780  298  510  318  980  256  145  426   452 #>   [29,]   19   10  951  314  104  497  381  834  770   669 #>   [30,]  162  609  329  611   97  732   59   39  779   511 #>   [31,]  600   99  632  212   91  118  315  563  627   408 #>   [32,]   66  437  102   59  785  172  277  950  103   611 #>   [33,]  841  839  428  572  931  519  874  344  954   725 #>   [34,]  602    6  195  592  126  694  684  502  121   504 #>   [35,]  579  976  562  346  642  853  898  849  884   284 #>   [36,]  383  537  648   81  179  659  963  488  183   902 #>   [37,]  912  174  957  703  857  710  295  161  482   108 #>   [38,]  134  376  547  994  395  932   17   41  299   842 #>   [39,]  276  115  665   86   97  891  453  948  625   455 #>   [40,]  460  324  403  484  692  481   22  201  475    75 #>   [41,]   94  932  395  939  485  392  417  802  300   355 #>   [42,]  705  731  429  987  455  713  639  464  865   500 #>   [43,]  673  246  194  480  493   55  598  780  203   674 #>   [44,]  535  117  696  840  282  496  215  440  436   242 #>   [45,]  936  283  228  648  183  846  394  679  176   971 #>   [46,]  803  418  232  411  645  456  147  281  511   784 #>   [47,]  816  800  861  351   57  489  970  509  995   155 #>   [48,]  770  951  565  313  777   19   10   29  823    71 #>   [49,]  541  224  688  920  212  347  547  310  100    91 #>   [50,]  568  810  559  358  717  652  603  367   58   242 #>   [51,]  601  382  248  708  439  859   12  187  669   322 #>   [52,]  153  561  349  823  315  479  949  555  914   771 #>   [53,]  610  922  974  671  434  704  277  745   97   978 #>   [54,]  852  457  924  983  152  981  486  130  629   407 #>   [55,]  515  417  595  858  194  980   43  545   61   598 #>   [56,]  977  553  505  358  593  192  686  961  786   297 #>   [57,]  789  155  970  861  509  908  351  791  196   995 #>   [58,]  105  559  207  717  358  411  297  281  242   652 #>   [59,]  329  277   32   66  974  650  821  611   30   949 #>   [60,]  500  729  475   21  426  827  303   75  218   510 #>   [61,]  980  545  256   72  410  780   26   78  137   858 #>   [62,]  644  334  892  141  164  425  709  406  229   688 #>   [63,]  549  739  986  808  316  622  393  573  196   959 #>   [64,]   24  617  902  679  696  756  907  585  672   436 #>   [65,]  742  100  790  141  310  425  571  760   49   334 #>   [66,]   32  437  785   59  102  695  599  950  103   777 #>   [67,]  947  968  476  128   90  374  158  524  521   604 #>   [68,]  126  971  740  270  438  266    6  102  172    32 #>   [69,]  298  339  478  897  426   28  318  166  145   527 #>   [70,]  185  814  192  594  667  462  234  466  492   977 #>   [71,]  565  313  804  637   48  773  887  770  823   172 #>   [72,]  256  980  780   61  432  782   26  512  377   616 #>   [73,]  285  375  943  330  450  241  975  406  349   498 #>   [74,]  560  701  667  594  185  234   70  814  327   538 #>   [75,]  214  987  865  500  182  727  475  729  827    60 #>   [76,]   20  558  431  292  657   14  975  119  910   945 #>   [77,]  177  990  175  712  934  690  418  456  989   641 #>   [78,]  653  728  512  137  377   61   72  545  327   256 #>   [79,]  563  555  479  451  226  315   31  624  845   301 #>   [80,]  802  491  747  472  389  743  337  495  876   395 #>   [81,]  179  902   36  228  431  648  996  120  311   335 #>   [82,]  494  340  446  674   90  510  374  595  306   843 #>   [83,]  869  290  109  263  293  840  352  117  409   440 #>   [84,]  651  518  435  229  221  398  646  414  954   845 #>   [85,]  808  197   96  573  739  433  451  196   63   497 #>   [86,]  891   39  713  455  115  511  429  276  609   665 #>   [87,]  360  232   46   27  144  803  693  645  147   699 #>   [88,]  400  184  335  856  179  173  691  311  588   643 #>   [89,]  138  261  988  512  470  198  243  903  274   837 #>   [90,]  374  476  510  158   60  493  674   82  682   475 #>   [91,]  212  118  600   31  632  315  920  753  342   817 #>   [92,]  792  596  650  775  183  283  885  329  820   190 #>   [93,]  817  310  893  472  920  344  753  833  633   507 #>   [94,]   41  802  932  300  395  939  876    4  189   368 #>   [95,]  370  661  317  723  963  467  183  689  850    12 #>   [96,]  197  433   85  573  516  819  808  236  739   718 #>   [97,]  611  974  779  855  665  277   39   53  704    30 #>   [98,]  295  548  905  301  108  525  518  229  624   226 #>   [99,]  600  408   31  632  286  627  118  133  725   405 #>  [100,]  310  753  396  688  619  164   65  507  709   287 #>  [101,]  163  879  488  208  441  603  288  638  120   293 #>  [102,]   32  437  740   66  438  597  785  172   59    68 #>  [103,]  504  437   66  785   32  950  140    9  930   102 #>  [104,]  314  378  834   19   29  273  719  614  819   381 #>  [105,]   58  207  281  280  411  358  297  717  866   249 #>  [106,]    3  447    9  894  930  759  143  149  167   124 #>  [107,]  957  929  161  450  150  174   37  321  921   634 #>  [108,]  912   98  226  295  703  845  250   37  161   321 #>  [109,]  218  306  440  869  668  862  426  937  495    21 #>  [110,]  839  238  841  168  532   33  620  931  825   508 #>  [111,]  250  366  718  108  959  781  416  516  321   202 #>  [112,]  886  586  917  531  346  647  853  881  605   979 #>  [113,]  178  917  424  604  886  112  946  517  979   968 #>  [114,]  935  637  561  823  766  910  313  914  774   153 #>  [115,]  665  276  626   39  244  953  625  257   86    11 #>  [116,]  353  415  238  684  508  326  135  509  733   613 #>  [117,]   44  440  840  293  851  436  352  696  288   652 #>  [118,]   91  600   31  212  315  725  133  632  671   753 #>  [119,]  404   14  431  544  462  941  311  474  975   580 #>  [120,]  996  488  394  193  228   81  163  179  648   902 #>  [121,]  733  684  195  893  415  654  507  502  681   839 #>  [122,]  603  208  967  568  131  879   50  459  786   537 #>  [123,]   15   12  877  258  661  614  850  248  467   165 #>  [124,]  268  894  836  414  554  567  143    3  106   954 #>  [125,]  302  245  799  465  127  878  857  346  669   680 #>  [126,]    6   68  592  611  694  270  779  654  504   974 #>  [127,]  669  542  601  381  680  125  838  245  486   322 #>  [128,]  476  409  717  899  593  521  686  374  682    21 #>  [129,]  706  866  711  899  517  222  521  331  967    56 #>  [130,]  412  486  871  981  457  591   54  528  152   983 #>  [131,]  459  967  786  357  603  537  122  866  911   358 #>  [132,]  422  430  656  224  551  796  577  688  474   386 #>  [133,]  725  286  408  244  600  908  118  956   99   864 #>  [134,]  994  939  392   38  209  376  916  616  842    41 #>  [135,]  508  626  326  666  259  490  833  244  343   966 #>  [136,]   16  755  915  847  394  940  659  969  982   963 #>  [137,]  937  377  858  256  862  743   78  432  495   758 #>  [138,]   89  903  757  402  243  540  512  716  470   261 #>  [139,]  944  705  731  254  778  333  465  463  556   639 #>  [140,]  741  597  785  103   66  437  930  390  171    32 #>  [141,]  425  742   65  355   62  644  571  334  289   100 #>  [142,]   50  822  568   44  810  441  972  367  122   559 #>  [143,]  167  836  414  398  567  221  251  887  225   589 #>  [144,]  360  800  489  147   87  156  861  354  816   693 #>  [145,]  452  372  578  405  339  269  461   69  865   478 #>  [146,]  691  170  988  643  655  373  736  764  746   206 #>  [147,]  354  489  162  861  320   46  803  732  458   418 #>  [148,]  628  660  504  126  602   34  438  151   68     6 #>  [149,]  268  567  564    3  520  106  167  894  759   825 #>  [150,]  412  924  243  325  957  635  130  606  591   107 #>  [151,]  597  942  628  449  102  960  982  915  458   354 #>  [152,]  635  591  412  243   54  457  983  245  531   852 #>  [153,]   52  561  349  771  914  823  619  949  315   555 #>  [154,]  350  473  872  698  386    5  223  571  926   364 #>  [155,]  908   57  791  995  864  572  789  509  801   970 #>  [156,]  458  354  693  489  960  147  942  144  715   800 #>  [157,]  901  842  716  423  180  299  818  241  540   943 #>  [158,]  674  332   90  493  510  446  476  203   43   605 #>  [159,]  714  420  320  399  284  927  678  778  584   993 #>  [160,]  687  200  785  930  437  565  172  438    9   140 #>  [161,]  957  174   37  295  108  634   98  912  107   921 #>  [162,]  609   30  732  329  511  969  683  281  649    86 #>  [163,]  101  879  488  120  537  603   36  288  996    81 #>  [164,]  396  398  100  334  709  444  619  836  794   507 #>  [165,]  828  359  787  239  123   15  754  723  612   614 #>  [166,]   11  257  965  897  627  625  729  426  204    69 #>  [167,]  143  251  567  887  695  414  836  589  768   225 #>  [168,]  931  841  319  344  211   33  620  368  876   428 #>  [169,]  526  496  972  608  694  550  535  621  361   672 #>  [170,]  988  373  594  553  206  870  691  261   74   146 #>  [171,]  390  599  793  683  964  724  497  320  768   140 #>  [172,]  740  437  313  565  785  804  914  773   32   102 #>  [173,]  675  186  580  363  795  544  975  471  941   311 #>  [174,]  295   37  957  307  880  161  921  574  375   542 #>  [175,]  177  934  690  399   77  697  990  712  649   213 #>  [176,]  773  832  936  846  283  657  317  910  740   766 #>  [177,]  175  399  934   77  649  990  712  159  690   147 #>  [178,]  917  604  886  275  112  647  468  113  968   898 #>  [179,]   81   36  996  488  120  335  228  648  902   431 #>  [180,]  423  842  157  943  241  728  701  631  818   327 #>  [181,]  341  522  782  780  857  262  583  482  461    72 #>  [182,]  865  986  254  639  463   75  429  333  731   987 #>  [183,]  963  283  659  596   92  792   95  885  775   936 #>  [184,]  896  723  754  689  359  467  311   36  383   870 #>  [185,]   70  814  234  462  192  466  594  848  667   492 #>  [186,]  173  975  761  889  675  580  941  606  574   544 #>  [187,]  992  536  382  455  618  824  260  948   51   443 #>  [188,]  469    7  352  128  421  686  899  409  331   142 #>  [189,]  291   25  985  342  815    4  339  734  916   442 #>  [190,]  951  650  949   10  773  775  770  766  317   596 #>  [191,]  805  923  706  867  991  967  866  911  899   131 #>  [192,]   70  505  977  357  365  185  630  786  553   870 #>  [193,]  120  607  996  698  756  902  336  163  228    81 #>  [194,]  598  417  480   18   43  246   55  209  673   939 #>  [195,]  121  733  684   34  504  654  602  126    6   502 #>  [196,]  970  808   85   63  549  520  789   57  678   739 #>  [197,]   96  433   85  497  573  964  808  236  819   251 #>  [198,]  470  837  606  818  261  988  373   89  941   206 #>  [199,]  909  772  598  413  369  587  194  673   18   416 #>  [200,]  160  565  438  740  687  785  172  773   71   313 #>  [201,]  692  460  829  499  316  622  986  211  182   734 #>  [202,]  267  938 1000  543  534  959  499  549  516   111 #>  [203,]  402  477  246  530  522  854  583  181  341    43 #>  [204,]  625   11  748  257  953  276  627  166  610   527 #>  [205,]  835  285  761  498   73  292  450  943  735   376 #>  [206,]  373  870  655  594  170  553  988  691  643   198 #>  [207,]  280  105  281  641   58  411  249  584  418   566 #>  [208,]  122  879  603  101  441  163   16  685  972   638 #>  [209,]  540  299   18  716  512  842  903  782  134   480 #>  [210,]  294  264  718  554  844  250  268  414  221   167 #>  [211,]  428  931  519  201  622  874  620  532  316   956 #>  [212,]   91   31  118  600  632  347  315  342  541   794 #>  [213,]  258  712  934  877  752  923  272  123  850   661 #>  [214,]   75  727  987  827  956  865  729  475  500   514 #>  [215,]  252  242  453  436  672  535  652  810  617   367 #>  [216,]  765  220  612  762  813  873  697  661  798   883 #>  [217,]  664  662  227  962  884  918  579  952   35   738 #>  [218,]  109  306  426  440  965   21  668   60  514   937 #>  [219,]  615  539  833  704  658  672  608  904  666   953 #>  [220,]  216  873  765  689  165  501  552  754  370   661 #>  [221,]  414  229   84  518  554  398  836  143  301   251 #>  [222,]  517  647  979  706  129  711  331  866  859   854 #>  [223,]  926  569  474  386  943  473  582   14  623   180 #>  [224,]  132  422  688  430  577   49  656  347  541   551 #>  [225,]  328  695  636  771  777  570  914  444  950   681 #>  [226,]  845  646  703  624   79  710  518  108   98   912 #>  [227,]  884  938  806  919  217  240  579   35  998   556 #>  [228,]  928  902  648   81   45  996  971  120  679   910 #>  [229,]  518  221   84  644  651   98  301  398  845   406 #>  [230,]  848  322  269  492  680  262  667  542  478   464 #>  [231,]  464  667  345  478  769  297  318  298  977   897 #>  [232,]  645   46   27  803  863   87  947  682  523   744 #>  [233,]  557  362  242   21  559  255  682  490  640   668 #>  [234,]  814  848  185  542  492   70  941  667  322    74 #>  [235,]   15  471  787  248   12  601  123  467  486   127 #>  [236,]  849  433  819  993  197  678  719  976  516    96 #>  [237,]  491  445  495  282  720  109    5  364  872   306 #>  [238,]  110  116  508  353  839  415  684  326  135   532 #>  [239,]  828  501  363  776  787  165  359  754  723   471 #>  [240,]  707  678  549  351  401  884  236  196  227   918 #>  [241,]  818  837  180  943  423  157  941  880  606   842 #>  [242,]  559  810  215  453  255  652  252  367  233   668 #>  [243,]  635  591  412  522  152   89  782  857  799   341 #>  [244,]  665  626  133  115  276  286  864  257  704   118 #>  [245,]  302  125  859  799  853  346  642  838  751   465 #>  [246,]  480   43  203  402  522  780  194  782  181    18 #>  [247,]  724  697  380  793  399  171  765  265  834   390 #>  [248,]  467   12   51  850  601   15  439  123  859   235 #>  [249,]  566  207  297  139  345  641  468  751  575   105 #>  [250,]  718  108  221   96  251  111  516  959  905   573 #>  [251,]  167  555  768  777  695  143  451   85  197   301 #>  [252,]  453  652  436  487  215  882  505  358  242   630 #>  [253,]  400   88  873  501  689  754  179  184   36   846 #>  [254,]  333  463  944  639  731  556  139  705  182   429 #>  [255,]  668  559  242  426  965   11  440  897   21   453 #>  [256,]   72  980  780   61   26  137  432  377  937    28 #>  [257,]  625   11  204  276  166  627  953  748  115   965 #>  [258,]  877  213  123  850   12  661  752   15  708   934 #>  [259,]  135  508  827  343  490  666  720  514  966   727 #>  [260,]  618  948  676  536    8  820  187  992  882   382 #>  [261,]  988   89  590  274  470  837  170  560  198   423 #>  [262,]  478  701  230  616  680  560  667  782  769   269 #>  [263,]  293  288  736  807  726   83  851  840  352   869 #>  [264,]  312  718  844  210  768  294  250  767  999   788 #>  [265,]  834  993  284  708  849  314  793  562  465    19 #>  [266,]  935  270  971  700  771  804  434   68  114   444 #>  [267,]  499 1000  959  549  534   63  393  202  692   874 #>  [268,]  124  567  149  414  894  836  954  554  143     3 #>  [269,]  372  145  405  230  452  710  809  262  339   578 #>  [270,]  434  971  266    6   68  502  935  577  928   126 #>  [271,]  397    6  502  700  287  270  266  444   68   900 #>  [272,]  649  798  890  683  813  708  732  793  969   650 #>  [273,]  378  719  677  309  104  838  819  308  314   642 #>  [274,]  590  623  261  736  653  512  728  901  157    89 #>  [275,]  898  468  604  917  178   35  886  346  751   579 #>  [276,]  625   39  665  115  257  204  953  244  627   671 #>  [277,]  974   59  570   53  922  745   97  821  671   681 #>  [278,]  387  983  852  981  457  663  528  877  979    54 #>  [279,]   17   38  299  653  737  623  716  901  205   540 #>  [280,]  207  281  411  105  641  418  911  711   58   732 #>  [281,]  411  280  418  207  105  732  511   58  609   811 #>  [282,]  696  840  535  672   44  617  668  364  237   215 #>  [283,]  774  775  183   92  885  648  596  176  963    45 #>  [284,]  993  265  714  159  420  778  849  465  139   708 #>  [285,]  450  943   73  842  880  157  241  180  423   901 #>  [286,]  408  908  133  864  725  600   99  244  454   821 #>  [287,]  507  502  100  893  760  753  577  434  271   310 #>  [288,]  293  726  263  851  736  807  352  117  840   170 #>  [289,]  892  485  141  644   62  425  229   38  376    41 #>  [290,]  495  872  862  869   83  445  109  483  137   851 #>  [291,]  916  189  985  461  339  342  939  815  392   145 #>  [292,]   20  835   76  945  558   14  473  975  350   933 #>  [293,]  288  851  726  263  117  840  352  736  807    83 #>  [294,]  844  305  999  210  788  589  264  887  554   167 #>  [295,]   98  548  905  174  525  307  375  702  108   301 #>  [296,]  532  499  534  620  201  519  211  351  692  1000 #>  [297,]  345  231  464  977  249  105   58   56  769   593 #>  [298,]  318  478  897   69  426  231  464   28  303    26 #>  [299,]  716  540  901  157  842  512  209  728  423   903 #>  [300,]  876   94  368  802  337  344    4   41   80   931 #>  [301,]  555  525  548  518   98  406  905  398  702   349 #>  [302,]  125  245  799  859  346  586  345  583  853   751 #>  [303,]  318   21  426  298  593  255  897  729  961   440 #>  [304,]  498  330  761  975  925  895  721  921  835    71 #>  [305,]  788  844  999  294  721  589  887  525   71   702 #>  [306,]  218  109  440  869  557  409   21  233  495    83 #>  [307,]  542  375  295  174  848  548  234  349  702   680 #>  [308,]  663  877  273  309  834  123  314  614   15   104 #>  [309,]  719  819  273  642  378  562  677  849  838   308 #>  [310,]  817  920  753  100   93  790   49  472  396    91 #>  [311,]  544  431  580  462  795  119  941  797  832   910 #>  [312,]  768  264  104  819  844  378   96  999  718   314 #>  [313,]  565  804  773  172  914   71  637  823  114   771 #>  [314,]  104  834   19   29  614  378  265   15   10   793 #>  [315,]  563  794   31  118  212   91  636  671  600   745 #>  [316,]  622  393  734  986  815   63  956  519  405   201 #>  [317,]  773   95  766  888  176  190  770  895  925   370 #>  [318,]  298  897  426  303  478   69  464  231  729   255 #>  [319,]  168  931  211  300  620  876  670  368    4   344 #>  [320,]  714  159  420  927  683  399  678  649  789   401 #>  [321,]  772  108  416  957   37  912  703  161  529   325 #>  [322,]  848  382  492  439  230  667  466  234  669   542 #>  [323,]  106    3    1  447  759  894    9  271  687   504 #>  [324,]  403   40  919  913  356  692  998  379  575   460 #>  [325,]  482  427  150  413  529  857  530  246  321   924 #>  [326,]  833  415  539  508  135  615  219  684  626   666 #>  [327,]  377  701  569  631  582  728  560  862  590    26 #>  [328,]  225  771  695  914  636  777  444  950  570   153 #>  [329,]   59  650  992   30  536  683   92  948  443   609 #>  [330,]  975  498  761   73  895  304  375  637  921   574 #>  [331,]  946  854  129  517  384  593  655  686  222   899 #>  [332,]  674  446  158  419   90   82  476  374  510   128 #>  [333,]  254  944  556  463  731  139  639  809  705   182 #>  [334,]  164   62  709  688  100  406   65  644  396   619 #>  [335,]  431   81  179   76   20  581  311  544   88   691 #>  [336,]  445  840  698  364  282  696  872  496  263   851 #>  [337,]  389  802  932   80  300   94  395  355  876    41 #>  [338,]  427  878  482  531  407  586  853  857  605   838 #>  [339,]   69  145  442  405  452  189  291  166  478   269 #>  [340,]  858   82  545  595  306  483   61   55  980   290 #>  [341,]  181  522  857  782  583  780  262  586  769   799 #>  [342,]  632  212  189  291  916  651   91   31  442    25 #>  [343,]  666  720  539  833  508  259  658  615  135   219 #>  [344,]  368  876  841  931  168   93  817   33  300   310 #>  [345,]  297  464  231  769  583  318  799  667  478   298 #>  [346,]  976   35  853  562  302  579  245  751  642   881 #>  [347,]  860  212  541  527  538  748  631  230  701   224 #>  [348,]  670  843  747  595  743  475  727    4  937   734 #>  [349,]  561   52  406  153  375  709  823  301  307   688 #>  [350,]  473  154  292  193   20  223    2   14  386    76 #>  [351,]  970   57   47  707  196  240  549  861  816   986 #>  [352,]  686  293  288  117    7  869   56  961   83   553 #>  [353,]  116  415  509  684  995  733  613  238  800   546 #>  [354,]  458  156  960  147  693  489  715  162  151   942 #>  [355,]  742  932  141  395  337   65  389   41  802   425 #>  [356,]   27  324  403  913  919  803   40  232  966   645 #>  [357,]  459  192  131  786  896  870  553  537  977    70 #>  [358,]  505  652  786  459  568  252  882   56  192   453 #>  [359,]  754  828  723  787  165  850  467  752  689   370 #>  [360,]   87  144   46   27  800  147  693  803  232   156 #>  [361,]  550  621  784  385  904  699  367  511  907   215 #>  [362,]  720  658  233  514  557  668  242  490  965   953 #>  [363,]  776  675  723  471  787  239  173  925  828   895 #>  [364,]  698  756  608  585  282  386  830  696  617   336 #>  [365,]  797  630  192  676  462   70  538  814  185   487 #>  [366,]  781  416  111  646   84  959  250  226  554   108 #>  [367,]  810  511  242  568  215   50  361  550  559   784 #>  [368,]  876   25    4  344  931  300  428  519  874   817 #>  [369,]  587  673  998  763  493  909  481  806   43   605 #>  [370,]   95  661  689  850  752  467  963  723   12   659 #>  [371,]  506  121  287  893   23  684  894  733  760   195 #>  [372,]  578  145  452  269  405  461  865  809  339   763 #>  [373,]  206  594  170  988  870  553  655  691  977   198 #>  [374,]  640   90  682  476  947  863  409  128   60    82 #>  [375,]  307  349  406   73  542  295  548  702  561   301 #>  [376,]  547  541  994  644   49   38  406  688  392    73 #>  [377,]  327  631  137  937  701  432  758  527  862   256 #>  [378,]  104  719  273  314  819  838  381  834  309    29 #>  [379,]  575  881  998  403  919  806  324  605  566   586 #>  [380,]  247  724  309  849  819  834  265  314  236   308 #>  [381,]  465  669  497   29  601  378  719  993  127   838 #>  [382,]  439  322   51  187  601  466  492  669  536   260 #>  [383,]  537  659   36  963  648  786  183  131  885   357 #>  [384,]  946  854  655  477  331  764  402  979  424   517 #>  [385,]  784  550  940  361  811  621  847  367  699   715 #>  [386,]  926  569  223  132  422  607  582  224  474   473 #>  [387,]  981  278  983  663  457  528  852  308  828   787 #>  [388,]  612  104  614  273  314  997  308  448  378   391 #>  [389,]  337  932  802  395   80   94  743  355  483   491 #>  [390,]  171  793  683  599  964   66  798   10  813    19 #>  [391,]  513  612  765  750  388  216  552  984  239   165 #>  [392,]  939  916  845  994  291  624  985  134  342   226 #>  [393,]  316  646  815   25  734  874  519  622   63   739 #>  [394,]  996  488  120   45  648  228  679   36  179    81 #>  [395,]  932  389  802  547  758   94   41   49  742   376 #>  [396,]  794  398  709  164  100  651  619  518   84   753 #>  [397,]  700  271  900    1  955  266    2  935  971   945 #>  [398,]  396  555  794  518  709  143  836  301  164    84 #>  [399,]  159  649  934  320  177  714  272  284  420   724 #>  [400,]   88  253  184  179  335   36   81  173  754   311 #>  [401,]  707  240  320  678  714  927  159  171  789   196 #>  [402,]  477  203  854  246  384  522  243  138   89   635 #>  [403,]  324   40  919  575  379  913  356  998   75   182 #>  [404,]  119  796   14  431  474  607  902  430  797   132 #>  [405,]  452  145  372  269  339  578  865  734  632    99 #>  [406,]  709  349  375  301  688  518   52  153  561   541 #>  [407,]  783   54  529  338  427  924  629  852  457   531 #>  [408,]  286   99  133  600  908  725  454  622   31   986 #>  [409,]  128  869   21  306  476   83  374  686  440   109 #>  [410,]   61  545  746   26  590  980  256  961  780   686 #>  [411,]  281  418  280  105  207  811   58  511  367   732 #>  [412,]  591  871  130  152  243  606  150  635  486   880 #>  [413,]  325  530  246  203  427  480   43  529  673   482 #>  [414,]  836  143  221  567  554   84  954  167  435   398 #>  [415,]  684  326  733  602  121  353  613  195  116   779 #>  [416,]  781  772  906  985  321  366  503  598  909   703 #>  [417,]  939   55  194  515  598  432   94  858  595    41 #>  [418,]  411  281  280  811  732  456  207  641   46   105 #>  [419,]  446  674  332  545  410  757  158   43  340   246 #>  [420,]  714  778  159  584  320  927  284  678  639   429 #>  [421,]    7  746  869   83  410  352  188  764  409   263 #>  [422,]  132  224  926  688  430  474  473  551  656   386 #>  [423,]  180  842  157  728  943  241  818  901  701   512 #>  [424,]  384  946  979  113  854  477  222  331  517   655 #>  [425,]  141   65  644   62  742  355  164  396  100   310 #>  [426,]  318  965  897  729   69  298  303  166  255   218 #>  [427,]  338  482  878  530  325  857  531  586  407   522 #>  [428,]  211  622  519  956  725  931  133  874  316    33 #>  [429,]  731  639  713  705  778   42  463  944  254   455 #>  [430,]  551  132  656  796  577  224  422  688  474   404 #>  [431,]  311  544  119  404  462   76  795   14  580   941 #>  [432,]  616  758   72  631  377  256  728  916  137   262 #>  [433,]  197   96  236  819   85  497  573  516  849   381 #>  [434,]   53  502  270  922  974  577  830  704  610   266 #>  [435,]  954   84  451  563  808  651  739  398  646   555 #>  [436,]  252  215  652  453  617  603  358  568  879   630 #>  [437,]  785   66   32  172  102  103  950  740  930   695 #>  [438,]  740  102  660   68  437  172  785   32  200   936 #>  [439,]  466  382  322   51  492  601  814  848  669    70 #>  [440,]  668  109  255  117   21  961  218  426  559   303 #>  [441,]  638  822  972  142  496  879  208  101  469    44 #>  [442,]  527  339  758  937   69  189  166  342  377   631 #>  [443,]  536  824    8  948  479  745  949  454  992   187 #>  [444,]  950  328  771  225  681  619  804  447    9   570 #>  [445,]  336  872  237  290  840  495  282  698  862     5 #>  [446,]  674  332  419   82  158  510  340   43  493    90 #>  [447,]    9  930  444  106  950    1  695  785  328   225 #>  [448,]  997  702  770  925  574  525  888  905  548   471 #>  [449,]  883  915  762  151  813  596  597  982  102   749 #>  [450,]  285  880  842   73  921  174  818  761  157   957 #>  [451,]  808  563  739  435   79   85  573  454  479   408 #>  [452,]  145  578  405  372  865  339  500  461  269    69 #>  [453,]  252  882  652  487  215  242  276  255  625   953 #>  [454,]  821  443  286  408  479  824  536   99  745   563 #>  [455,]  187  992  891  429  705   42  778  536   86   948 #>  [456,]  811  418  989  693  940  411   46  385  990   960 #>  [457,]  983  852   54  981  486  152  130  663  853   531 #>  [458,]  354  156  960  693  715  147  151  162  489   942 #>  [459,]  131  786  357  967  358  505  603  537  192   568 #>  [460,]  484  829  481   40   22  201  692  475  734    75 #>  [461,]  145  291  372  452  578  815  985  339  405   763 #>  [462,]  814  795  185  544  941  311  580   70  797   365 #>  [463,]  254  639  333  944  731  429  182  556  778   139 #>  [464,]  231  345  478  667  318  297  298  769  230   897 #>  [465,]  381  993  139  562  669  601  809  944  125   976 #>  [466,]  439  814  492  382  185  322   70  462  848   234 #>  [467,]  248  850  896   12  752  370   95  723   51    15 #>  [468,]  898  641  275  968  249  751  711  917  280   604 #>  [469,]  188  352    7  441  142   83  101  421  288   263 #>  [470,]  198  837  606  818  261  988   89  241  941   373 #>  [471,]  776  787  675  363  235  574  925  888  723   997 #>  [472,]  920  491  790  633   80   93  310  802  817   876 #>  [473,]  422  223  926  132   14  386  474  404  430   656 #>  [474,]  926  569   14  422  223  132  404  943  860   119 #>  [475,]  843  670   75   60  500   22  348  214  727   460 #>  [476,]  128  593   90  303   21  409  374  863  682   717 #>  [477,]  402  203  854  384  946  635  243  522  583   246 #>  [478,]  298  897  262   69  464  318  231  769  667   230 #>  [479,]  443   10  949   79  563  454   52  497  555   153 #>  [480,]  246   18  194   43  757  209  903   61   55   598 #>  [481,]  484  460  829   22  692   40  763  201  499   587 #>  [482,]  857  427  522  325  338  341  181  878   37   635 #>  [483,]  858  495   78  872  290  137  653  545  515   743 #>  [484,]  829  460  481   22   40  692  201  670  475   503 #>  [485,]   41   94  355  300  289  425  932  141  368   644 #>  [486,]  130  457  127   54  412  235  152  574   37   174 #>  [487,]  882  630  453  252  676  748  652  617  505   625 #>  [488,]  120  996  163  394  179   36  101   81  879   648 #>  [489,]  861  800  147  509  816   47  789  354   57   320 #>  [490,]  827  362  233  645  626  514  135  966  115   658 #>  [491,]   80  472  237  633  495  802  790  666  747     5 #>  [492,]  322  848  466  538  814  230  382  439  234   185 #>  [493,]  510   22  673  674   90  605  158   43  475    28 #>  [494,]   82  348  843  595  340  670  747  475  306   743 #>  [495,]  872  862  137  237  290  937  743  483  491   109 #>  [496,]  696  535  526   44  840  972  638  879  282   730 #>  [497,]  197  964  599  381   10  433  479   29  927    19 #>  [498,]  761  330  921  975  304   73  186  835  574   450 #>  [499,]  692  267  201 1000  296  534  829  481  549   460 #>  [500,]  865  729  452   75  987   60  578   42  475   145 #>  [501,]  754  239  828  359  165  723  689  363  873   787 #>  [502,]  434  507  287  681    6  270  444  266  922   271 #>  [503,]  906  985  815    4   25  189  734  393  829   291 #>  [504,]  103  950  195  654  126  437  660    9   32    68 #>  [505,]  358  652  192  630  882  786  252   56  459   487 #>  [506,]  371  121  684  195   34  733  287  893  271   502 #>  [507,]  893  681  753  502  287  100  619  570  444   922 #>  [508,]  135  326  259  343  666  833  539  626  238   415 #>  [509,]  613  995  155   57  789  791  546  861  831   572 #>  [510,]   28  493   90  843  674  980   60  475  780   595 #>  [511,]  367  609   86   39  810  281  784  411  891   242 #>  [512,]  540  728  903  901  716  157  423  299   78   842 #>  [513,]  391  750  612  765  984  200  388   71  216   317 #>  [514,]  965  827   11  166  727  257  729  362  426   633 #>  [515,]   55  417  858  595  743  483  747   94  389   337 #>  [516,]  573  433   96   85  959  236  739  819  719   197 #>  [517,]  222  647  129  979  706  331  854  711  521   899 #>  [518,]  229  651   84  555  301  845  398  624  221    98 #>  [519,]  874  428  622  393  211  316  931   63  201    25 #>  [520,]  564  964  801  567  831  196  599  197  695   167 #>  [521,]  899  711  129  717  866  706  517  968  805   331 #>  [522,]  341  181  782  857  482  583  243  780  635   799 #>  [523,]  641  207  280  411  418  717  947  281  863   711 #>  [524,]   67   90  158  379  332  374  356  403  674   324 #>  [525,]  702  548  905  301  295   98  823  448  375   555 #>  [526,]  496  608  169  756  696  672   64  535  364   585 #>  [527,]  442  897  347  748  166   69  204  377  478    11 #>  [528,]  981  130  387  983  457   54  812  852  629   871 #>  [529,]  783  407  325  321  427  924  482  338  413   772 #>  [530,]  203  427  413  482  112  325  338  477  402   531 #>  [531,]  853  245  346  878  852  112  152  983  338   838 #>  [532,]  296  620  211   33  572  428  519  841  995   931 #>  [533,]   18  480  757  150  209  325  413  722  138   903 #>  [534,] 1000  499  296  267  549  959  202  874   63   519 #>  [535,]  696   44  672  282  215  496  658  436  242   840 #>  [536,]  443  992  948  824  187    8  260  382  618   455 #>  [537,]  383  786  603  131  459   36  357  659  797   648 #>  [538,]  860  492  676  748  347  365  814   74  630   561 #>  [539,]  833  615  666  219  343  326  633  720  704   658 #>  [540,]  299  512  716  901  209  842  903  157  728   423 #>  [541,]   49  347  212  688  631  376  547  758  342   624 #>  [542,]  307  848  680  234  230  322  127  375  710   492 #>  [543,]  202  938  369  806  587  998  227  662  267  1000 #>  [544,]  795  580  941  311  462  431  119  814  185   173 #>  [545,]   61  410  980   78  256  858   72   26  780   137 #>  [546,]  831  613  791  509  654  801  103  995  789   611 #>  [547,]  376  926  395  541   49  631  943  422  758    38 #>  [548,]  905  525  702  295   98  301  375  307  448   555 #>  [549,]   63  959  196  707  267  573  739   85  986   808 #>  [550,]  361  621  784  385  907  847  367  904  511   940 #>  [551,]  430  656  132  577  796  422  935  224  688   928 #>  [552,]  165  765  612  220  828  239  391  614  388   258 #>  [553,]  870  170  373  977  594  206   56  192  357   988 #>  [554,]  414  221  836  143   84  124  229  268  210   398 #>  [555,]  301  398  563   79  518  794  153   52  315   479 #>  [556,]  333  944  254  463  139  881  809  731  705   976 #>  [557,]  233  362  744  640  682   21  242  559   44   306 #>  [558,]   20   76  657  945  910  928  404  551  119    14 #>  [559,]  242  255  810   58  652   21   50  568  358   233 #>  [560,]   74  701  769  667  594  262   26  988  327   478 #>  [561,]   52  153  349  823  114  914  949  771  375   538 #>  [562,]  642  976   35  579  838  465  719  346  993   853 #>  [563,]  315  451  636   79  555   31  794  435  479   600 #>  [564,]  520  801  831  567  964  196  791  970  954   821 #>  [565,]  313  773   71  172  804   48  740  914  770   637 #>  [566,]  249  575  207   42   58  500  345  863  297   254 #>  [567,]  954  564  414  167  520  143  435  836  251   808 #>  [568,]   50  810  358  603  652  367  559  459  436   786 #>  [569,]  582  223  327  474  926  386  180  860  631   701 #>  [570,]  636  681  277  922  821  225  950  328  315   974 #>  [571,]   23   65  742  141    2  334  760  790  422   100 #>  [572,]  995  155  791  831  908  970  801   33   57   509 #>  [573,]  739   85  516  808   96  433   63  197  959   451 #>  [574,]  471  997  448  675  307  174  888  921  925   186 #>  [575,]  881  566  254  333  379  919  139  249  556   463 #>  [576,]  875  237  445  306  557  720  282   44    5    83 #>  [577,]  656  430  551  830  224  132  434  922  619   796 #>  [578,]  452  372  145  865  405  461  500  269  333   339 #>  [579,]   35  976  562  642  346  849  884  236  853   993 #>  [580,]  795  544  941  311  462  173  814  119  675   431 #>  [581,]  241  623   14  470  198  157  837  901  274   943 #>  [582,]  569  726  851  862  327  386  223  377  590   607 #>  [583,]  854  769  345  799  341  522  586  302  181   593 #>  [584,]  420  803  778  713  639  207  429  463  891   159 #>  [585,]  830  756  656  608  364  577   64   24  796   270 #>  [586,]  605  881  878  583  302  341  125  112  346   522 #>  [587,]  909  369  481  906  763  416  673  503  484   598 #>  [588,]  643  184  706  896  856  655  870  206  691   553 #>  [589,]  887  999  167  844  143    1  930  447  305     9 #>  [590,]  274  261   26  327  988  726  961  560  582   170 #>  [591,]  152  635  412  243  871  799  130  245  979   486 #>  [592,]  694  779  126  855  602   34    6  611  621   904 #>  [593,]  686  303   56  961  977  297  769  345  583   331 #>  [594,]  373  988  170  977  206  553  667   70  870   769 #>  [595,]  843  743  858  348  747   55  937  137  980   670 #>  [596,]   92  183  650  792  963  283  190  775  915   762 #>  [597,]  102  140  151   32  762   66  390  437  683   103 #>  [598,]  194  417  673  772  939   43  416  906  985    18 #>  [599,]  964  777  695  497   10   66  390  768  520   171 #>  [600,]   31  118   99  632   91  725  408  212  133   286 #>  [601,]   51  669  382  439   12  248  708  381  465   859 #>  [602,]   34  592  195  415  684  126  694  779  733     6 #>  [603,]  786  122  537  879  568  459  131  436  358    50 #>  [604,]  917  178  275  886  968  468  112  898  379   346 #>  [605,]  586  881  998  878  578  763  575  372  341   556 #>  [606,]  837  818  880  470  198  241  412  941  871   157 #>  [607,]  796  404  386  902  582  617  569  656  797    64 #>  [608,]  756  364  585  219  830  526  698  672  539   615 #>  [609,]  162  732   30  511  281  329  969   39   86   792 #>  [610,]  671   53  922  745  204  704  276  748  118   953 #>  [611,]  779   97  974  654   30  277   59  126  855   613 #>  [612,]  765  614  165  317  388  216  661  513   15   391 #>  [613,]  509  864  791  546  779  611  155   97  654   831 #>  [614,]   15  314  123  612  834   12   19  661  104   793 #>  [615,]  219  539  633  666  704  833  953  626  665   720 #>  [616,]  631  432  262  916  701  758  994  423  180   782 #>  [617,]   24   64  696  672  487  252  436  630  215   953 #>  [618,]  260  820  992  187  948  792  536  650    8   455 #>  [619,]  794  922  709  153  315  753  771  636  100   570 #>  [620,]  532  296  211  931  168  519  319  428  874   841 #>  [621,]  361  550  784  904  907  855  385  847  511   715 #>  [622,]  316  986  428  519  408  956  725  393   63   908 #>  [623,]  274  653  901  157  728  223  943  423  716   180 #>  [624,]  845  916  226  710  518  392  703   79  541    98 #>  [625,]  257  204   11  276  748  953  627  166  115   665 #>  [626,]  115  665  244  615  904  704  953  276  135    39 #>  [627,]  824  625  257  748  166  204  276    8   11    99 #>  [628,]  148  660  151  126  438   68  982  602  749   592 #>  [629,]  812  852   54  924  981  983  457  407  528   387 #>  [630,]  365  487  797  882  505  676  192  252  652   617 #>  [631,]  758  616  377  701  432  327  180  347  423   541 #>  [632,]  600   31   99  342  956  212   91  118  405   725 #>  [633,]  615  666  953  472  920  514  720  204  539    11 #>  [634,]  161  929  107  957  321  783  108  174  921   295 #>  [635,]  152  591  243  799  412  522  482  979  857   245 #>  [636,]  570  225  563  328  681  315  794  821  619   922 #>  [637,]  804  114  823  313  771  914  935  561  153   349 #>  [638,]  441  972  496  879  822  208  730  685  101   163 #>  [639,]  463  429  254  713  731  778  944  705  182   333 #>  [640,]  682  744  557  863  374  233   60   21  306   827 #>  [641,]  280  468  207  249  523  898  711  281  105   584 #>  [642,]  562  838  976  719  853   35  579  309  465   245 #>  [643,]  655  856  206  691  588  146  373  870  170   553 #>  [644,]   62  229  376  518  406  396  709  651  425   398 #>  [645,]  863  490  232  803  682  891   58   46  713   233 #>  [646,]  393  226  845  651  739   84   25  435  342   316 #>  [647,]  979  222  517  859  751  245  302  854  112   799 #>  [648,]  902  885  383   36  283  228  774   81  537    45 #>  [649,]  272  399  683  732  798  320  813  890  162   177 #>  [650,]   92  190  329  596  792  775  992  618   59   536 #>  [651,]   84  518  342  396  646  845  435  229  794   398 #>  [652,]  252  358  505  453  436  882  242  487  559   215 #>  [653,]   78  728  623  274  512  903  327  901  540   590 #>  [654,]  681  950  611  277  974  570  821   97  546   791 #>  [655,]  206  373  643  384  988  170  331  553  870   146 #>  [656,]  132  796  577  430  551  830  224  585  422   386 #>  [657,]  910  832  558  928  176  114  774  935  228   895 #>  [658,]  362  720  672  219  904  615  535  215  626   666 #>  [659,]  963  383  183  792  537   36  820  755  370    95 #>  [660,]  438  148  504  628   68  103  102  740  437   126 #>  [661,]  370   95   12  123  850  798   15  614  467   752 #>  [662,]  962  217  227  938  806  579   35  664  886   884 #>  [663,]  308  457  309  387  983  642  273  877  853   852 #>  [664,]  217  884  952  918  227  849  662  579  962    35 #>  [665,]  115  244  276  626  953   39  704  625   97   257 #>  [666,]  720  539  633  615  343  833  219  626  514   362 #>  [667,]  231  769  848  464  560  322  594   70   74   185 #>  [668,]  255  440  965   11  897  426  204  218  453   242 #>  [669,]  127  601  381  382  322  439  465   51   29   542 #>  [670,]  348  843  475  727    4  734  747  595  829   214 #>  [671,]  745  610  922   53    8  315  276  118  748   824 #>  [672,]  535  215  696  617  282  658  953  219   24   904 #>  [673,]   43  493  369  598  194  246  587   22   55   510 #>  [674,]  446  158  332  510  493   90   82  419   43   673 #>  [675,]  173  471  363  776  186  580  574  787  723   795 #>  [676,]    8  948  487  978  882  260  630  365  538   824 #>  [677,]  273  309  719  819  378  838  104  312  642   663 #>  [678,]  927  714  463  707  420  639  778  196  159   236 #>  [679,]  907  885   64  648  270  228  971   24  855    45 #>  [680,]  542  848  710  230  262  857  322  667  234   799 #>  [681,]  570  950  636  654  507  444  225  277  922   502 #>  [682,]  863  640   21  233  645  557   60  374  947   559 #>  [683,]  793  390  329  798  272  813  171  650  320    59 #>  [684,]  733  415  121  195  326  602   34  893  353   839 #>  [685,]  972   16  208  385  638  940  550  847  136   122 #>  [686,]  352  593  961   56  331  553  977  440  303   869 #>  [687,]  160  200  660  438  785    1  447  740  930     9 #>  [688,]  224  709  422   49  430  132  100  406  541   619 #>  [689,]  370  873  754   95  723  752  963  661  850   659 #>  [690,]  990  175  177  991  213  712  934   77  989   649 #>  [691,]  170  206  870  373  146  643  198  553  795   544 #>  [692,]  499  201  460  481  829   40  484  913  267   324 #>  [693,]  960  456  354  458  989  147  715  156   46   811 #>  [694,]  592  855  779  126    6  704  904  907  219   611 #>  [695,]  777  225  328  599  964  930   66  914  167   950 #>  [696,]  282  535  672  617  840   44  496  215  436    64 #>  [697,]  247  724  765  213  216  813  798  934  258   175 #>  [698,]  364  756  336  386  608  607  585  282  840   696 #>  [699,]  361  784  385  550  367  972  621  810   13   658 #>  [700,]  900  935  266  397  804  971  637  271  313   114 #>  [701,]  560   74  262  631  327  377  616  180  423   860 #>  [702,]  525  548  905  448  823  997  301  375  770   307 #>  [703,]  710  912  226  845  857   37  624  680  108   916 #>  [704,]   53  665  615  610  953  244  855   97  219   626 #>  [705,]  731  944  809   42  429  139  778  254  639   333 #>  [706,]  129  222  866  711  517  899  521  967  331   647 #>  [707,]  240  678  549  401  351  196  236  927  433   884 #>  [708,]   51  601   12  992  187  265  751  859  284   618 #>  [709,]  406  794  688  619  396  349  398  153  555   301 #>  [710,]  703  680  912  624  269  857  542  226  845    37 #>  [711,]  866  129  521  899  706  717  517  249  280   105 #>  [712,]  934  923  213  911  641  258  280  898  468   990 #>  [713,]  429  639  891  731   42   86  778  987  584   182 #>  [714,]  159  420  927  320  678  284  778  993  849   584 #>  [715,]  982  784  621  960  458  385  361  779  550   162 #>  [716,]  901  299  157  540  842  512  423  818  728   903 #>  [717,]   58  899   50  521  711  105  559  866  863   129 #>  [718,]  250   96  959  251  264   85  197  111  312   221 #>  [719,]  378  838  819  309  642  273  562  381  104   976 #>  [720,]  362  666  658  343  633  514  615  237  539   827 #>  [721,]  997  305  448  788  925  304  702   71  525   921 #>  [722,]  138  150  856   89  871  470  198  606  735   889 #>  [723,]  363  359  754   95  370  467  787  471  689   828 #>  [724,]  247  793  171  380  390  697  399  798  265   813 #>  [725,]  133  600  286  408  908  118  956  632   99   622 #>  [726,]  851  582  293  288  736  807  590  862  263   274 #>  [727,]  214  956  514   75  987  827  734  166  670   475 #>  [728,]  512   78  423  653  180  327  540  377  157   842 #>  [729,]  500  426  965  987  166  318   60  514  255    75 #>  [730,]  496  336  638  441  840  101  263  193  526   163 #>  [731,]  705  429  944  639   42  254  809  139  333   463 #>  [732,]  609  162  281   30  418  969  511  272  890   992 #>  [733,]  121  684  195  415  825  546  654  995  893   602 #>  [734,]  815  316  405  956   25  393  189  727  452   622 #>  [735,]  889  450  285  880  761  186  606  716  901   157 #>  [736,]  807  726  263  288  274  293  590  146  851   746 #>  [737,]  581  889  735  623  901  274  807  716  722   157 #>  [738,]  918  217  202  240  227  707  664  952  938   534 #>  [739,]  808  573  451   85   63  646  435  959  393    79 #>  [740,]  172  438  102   68  773  437  565  313  266   971 #>  [741,]  140  597  103  785  759  171   66  930  437   390 #>  [742,]   65  355  141  932  790  395  547   49  571   425 #>  [743,]  747  595  858  937  137  348   80  843  495   802 #>  [744,]  557  640  233  682  490  863  875  232  645   362 #>  [745,]  671    8  824  610  443  948  922  315   53   276 #>  [746,]  410  764  146  590  274  736    7   89  421   545 #>  [747,]  743  348  595   80  843  937  858  670  137   495 #>  [748,]  204  625  627   11  257  487  527  882  538   860 #>  [749,]  438  936  449  660  628  846  883  955   45   200 #>  [750,]  513  391  999  844  388  612  200  788   48    71 #>  [751,]  859  346  245  708  302  249  898  139  465    51 #>  [752,]  850  467  370  896  661  248  689  359  755   123 #>  [753,]  507  310  922  118  100  619   91  817  794   920 #>  [754,]  359  689  723  501  828  165  184  370  850   752 #>  [755,]  890  969  659  963  911  923  752  792  915   820 #>  [756,]  585  608  364  698  830   64  526  656   24   617 #>  [757,]  903  480  138  545  246   18  746  410   61   540 #>  [758,]  631  442  432  377  616  527  541  916  937   137 #>  [759,]  106    3  149  741    9  894  447  825  323   930 #>  [760,]  790  287  830   65   23  310  100  472  585    93 #>  [761,]  498  921  330  186  975   73  450  304  285   835 #>  [762,]  813  798  793  596  597  683  102  390  915   449 #>  [763,]  461   22  372  578  605  481  815  145  452   985 #>  [764,]  746  384  146  655  946    7  643  331   89   138 #>  [765,]  612  216  614  552  165  391  697  220  762   661 #>  [766,]  888  895  114  775  773  317  466  832  774   770 #>  [767,]  380  264  312  247  724  171  768  750  819   390 #>  [768,]  251  599  312  777  964  167  695  197  887   999 #>  [769,]  667  231  560  594  478  345  464  583  298   799 #>  [770,]   48  951  888  823  448   19  702  190   29    10 #>  [771,]  914  328  804  153  225  444  823  619  637   949 #>  [772,]  321  416  598  134  909  781  194  108  939   325 #>  [773,]  565  313  176  317  172  190  766  740  114   770 #>  [774,]  283  775  928  910  902  766  114  978  648   657 #>  [775,]  774  283   92  650  766  190  978  949  773   676 #>  [776,]  471  363  787  675  925  239  723  828  888   574 #>  [777,]  695  599  225  328  964   10  914  949  479   951 #>  [778,]  639  420  429  731  139  705  463  455  713   584 #>  [779,]  611   97  855  694  592  904  613   30  621   974 #>  [780,]  980   72  256   28  782  181   61  341   26   522 #>  [781,]  416  366  906  985  503  646  393  267  226   815 #>  [782,]  181   72  522  780  341  262  616  512  256   857 #>  [783,]  529  407  321  325  924  427  929   54  338   772 #>  [784,]  385  361  550  621  511  940  367  715  699   811 #>  [785,]  437   66  930  172   32  102  103    9  695   140 #>  [786,]  459  603  537  131  358  357  505  192  652   967 #>  [787,]  828  471  776  235  363  359  165  723  239   675 #>  [788,]  305  844  721  999  294  312  589  887  750   388 #>  [789,]   57  155  927  791  970  801  509  196  864   831 #>  [790,]  760  472  920  310   65   49  224  100  742   491 #>  [791,]  801  831  864  155  908  821  995  572  613   286 #>  [792,]   92  820  969  650  618  596  890  885  183   963 #>  [793,]  798  390  683  813  171   19  762  834  272   265 #>  [794,]  315  619  396  709  398  636  563  555  753   153 #>  [795,]  580  544  941  462  311  814  185  431  837   119 #>  [796,]  656  404  430  132  607  551  928  902  577   224 #>  [797,]  365  630  462  902  192  676  311  814  538    70 #>  [798,]  813  793  272  762  661  683  650  596  614   390 #>  [799,]  302  125  245  667  769  583  345  680  322   859 #>  [800,]   47  489  816  861  144  509  353  360  147    57 #>  [801,]  791  831  821  564  908  520  864  155  286   570 #>  [802,]   80  389  395   94  932  337  876  472  743   491 #>  [803,]  584   46  645  713  232  207  147  891  418    86 #>  [804,]  313  771  637  914  172  565  328  444  935   266 #>  [805,]  973  521  899  191  706  867  711  129  866   517 #>  [806,]  998  938  227  881  379  605  919  556  878   575 #>  [807,]  736  726  263  288  293  146  274  851  590   582 #>  [808,]  739  451   85  573   63  196  435  954  563   197 #>  [809,]  944  705  731  333  269  372  254  556  139   429 #>  [810,]  367  242  568  559  215   50  652  511  252   436 #>  [811,]  940  456  411  385  418  784  281  969   16   511 #>  [812,]  629  981  924   54  528  852  407  457  983   387 #>  [813,]  762  798  793  272  683  596  390  649  661   915 #>  [814,]  185  234  462   70  466  492  848  941  439   322 #>  [815,]  734  503   25  985  189  393  316  461  906   291 #>  [816,]  861   47   57  800  966  351  509  489  155   789 #>  [817,]  310  920   93  753   91  118  725  396  212   472 #>  [818,]  837  880  606  241  157  470  423  842  198   180 #>  [819,]  719  433  309  236  378  849   96  104  197   273 #>  [820,]  618  792  260  969  459   92  650  890  992   659 #>  [821,]  801  454  570  864  791  286  277  636  908    59 #>  [822,]  972  441  142  638   44  496  699  535  557   744 #>  [823,]  561  914  153  702  637   52  114  771  949   770 #>  [824,]    8  443  536  948  627  745  187  676  671   454 #>  [825,]  894    3  733  839  121  572  831  995  546   149 #>  [826,]  101  208  488  163  441  638  469  879  122    36 #>  [827,]  514  214  727  490  729   75  965   60  362   987 #>  [828,]  787  359  165  239  754  723  776  363  471   501 #>  [829,]  484  460  481  201  692   22  503  815  734   670 #>  [830,]  585  577  656  756  434  608  132  270  551   796 #>  [831,]  801  791  564  546  995  572  520  155  821   970 #>  [832,]  910  657  176  895  766  311  774  283  114   888 #>  [833,]  539  326  615  219  666  704  343  633   93   626 #>  [834,]  314  265  104   19  614   29  378  993  793    15 #>  [835,]  292  205  975   20  945  761  498   76   14   330 #>  [836,]  414  143  398  221  167  554   84  164  567   396 #>  [837,]  470  818  198  606  241  941  261  880  234   988 #>  [838,]  642  719  562  853  378  245  127  976  273   381 #>  [839,]  841   33  572  825  995  110  121  733  893   532 #>  [840,]  282  696  851  117   44  336  293  535  445   496 #>  [841,]   33  839  344  168  931  428   93  572  211   519 #>  [842,]  157  423  180  716  901  299  540  818  943   880 #>  [843,]  348  475  595  670  747  743  727  510   28    60 #>  [844,]  999  294  305  788  589  887  312  768  264   167 #>  [845,]  226  624  392  518  646  916  651  703  710    79 #>  [846,]  936  176   45  955  958  657  832  933  971   283 #>  [847,]  907  982  940  550   16  885  385  621  969   784 #>  [848,]  322  234  492  542  230  680  667  814  185   382 #>  [849,]  236  993  819  265  284  433  562  579  309   976 #>  [850,]  752  467  248  370  661   12  123  896   95   359 #>  [851,]  726  293  582  288  840  862  117  590  961   440 #>  [852,]  983  457   54  981  531  629  152  924  278   853 #>  [853,]  531  642  245  346  838  562  976  302  125   878 #>  [854,]  583  384  946  477  979  331  517  402  647   593 #>  [855,]   97  694  779  907  904  704  974  621  611    53 #>  [856,]  643  691  146  655  588  198  206  470  764    88 #>  [857,]  482  341  522  680  181  710  703   37  125   782 #>  [858,]  137  595  743  937  483  980  256  545   61    55 #>  [859,]  751  245   51  302  601  248  708  647  799   125 #>  [860,]  347  538  748  701  474  527  492   74  230   569 #>  [861,]  816   57  489   47  509  789  800  351  147   155 #>  [862,]  582  377  327  137  851  937  495  109  290   590 #>  [863,]  682  645  947  640  717   21  566  233   60    58 #>  [864,]  286  791  908  155  821  244  613  133  408   801 #>  [865,]  452  578  500  182  405   75  987  145  372   333 #>  [866,]  711  967  129  911  706  899  459  131  105   521 #>  [867,]  706  805  191  222  517  711  968  647  521   973 #>  [868,]  169  730  638  526  496  822  972  441  576    13 #>  [869,]   83  109  440  290  409  352  306  293  686   117 #>  [870,]  206  553  373  594  357  170   70  192  185   977 #>  [871,]  412  130  591  606  198  470  675  837  152   243 #>  [872,]  445  495  290  483  862    5  237  336  491   698 #>  [873,]  689  370  220  754   95  936  963  183  661   216 #>  [874,]  519  393  428  622  316  931  211   63   25   646 #>  [875,]  576  306  744  557  237  640  720  343  233   362 #>  [876,]  368  300  344  802    4   94  472  817   25   931 #>  [877,]  258  123  308   12   15  213  850  663  708   265 #>  [878,]  338  427  586  125  605  853  346  531  881   482 #>  [879,]  603  163  436  208  122  568  101  972  537   786 #>  [880,]  818  606  450  241  837  842  157  285  174   423 #>  [881,]  605  575  586  556  333  998  379  346  254   878 #>  [882,]  487  453  252  676  630  652  505  948    8   748 #>  [883,]  449  915  762  813  216  596  749  873  755   136 #>  [884,]  227  579  849   35  236  240  159  284  664   976 #>  [885,]  648   92  792  283  907  679  978  183  847   774 #>  [886,]  178  112  917  604  275  346  531   35  853   579 #>  [887,]  589  999  167  695  143  930  251  777  844    48 #>  [888,]  895  925  766  770  317  448  471  823  997   574 #>  [889,]  735  186  173  606  581  761  880  675  871   450 #>  [890,]  969  755  272  792  820  915  732  911  596   940 #>  [891,]   86  713  455   39  429  115   42  511  987   639 #>  [892,]   62  289  644  229  554  141  221  425  376   334 #>  [893,]  507   93  753  121  287  310  817  681  502   100 #>  [894,]    3  825  124  106  268  149  567  836  839   121 #>  [895,]  888  925  766  832  317  330  114  770  975   773 #>  [896,]  467  357  184  850  752  248  870  131  659   723 #>  [897,]  318  298  426  478   69  166  527  965   11   668 #>  [898,]  275  468  751  641   35  284  346  579  249   976 #>  [899,]  521  129  866  717  711  706  967  331  517    50 #>  [900,]  700  935  397  945  266  971  551  637  558   804 #>  [901,]  716  157  299  540  842  512  423  623  728   180 #>  [902,]  648  928  228  797   81  796  774  404   64   607 #>  [903,]  512  540  757  138  716  299   89   78  901   728 #>  [904,]  621  855  626  658  115  665  361  779  219   704 #>  [905,]  548  525  702  295   98  301  448  307   79   997 #>  [906,]  503  985  815    4  781   25  416  189  461   393 #>  [907,]  847  621  855  550  885  679   64   24  361   436 #>  [908,]  286  155  864  408  791  725  133  801  622   821 #>  [909,]  587  416  598  906  772  199  781  369  503   673 #>  [910,]  657  832  928  774  114  558  766  176  311   283 #>  [911,]  923  967  866  280  131  459  755  711  890   820 #>  [912,]  703   37  710  108  295  226  127   98  857   905 #>  [913,]  324  692  919  403   40  499  201  351  356   182 #>  [914,]  771  949  328  823  153  804  225  313  172   777 #>  [915,]  449  890  596  969  883  982  755  813  762   792 #>  [916,]  291  392  616  624  939  342  845  189  985   432 #>  [917,]  604  178  886  275  112  968  468  647  517   898 #>  [918,]  240  664  227  884  707  217  738  913  952   351 #>  [919,]  463  254  403  324  575  639  333  182  556   913 #>  [920,]  310  817  472   91   49  753  790  212  633   118 #>  [921,]  761  498  174  450  574  330   73  880  186   375 #>  [922,]   53  671  610  619  570  745  974  434  277   753 #>  [923,]  911  712  755  866  967  752  890  213  280   191 #>  [924,]   54  852  150  629  152  407  457  983  130   812 #>  [925,]  888  895  997  776  471  448  770  317  574   363 #>  [926,]  223  474  422  386  569  547  943  473  132   224 #>  [927,]  678  714  320  420  497  789  778  159  454   429 #>  [928,]  774  910  228  902  971  657  796  935  558   551 #>  [929,]  107  957  634  321  161  783  529  772   37   325 #>  [930,]    9  447  785  695  437   66  950  887  777   103 #>  [931,]  168  211  368  428  519  344  841  874   33   876 #>  [932,]  395  389  802   41  355   94  337  742  547    38 #>  [933,]  657  558  958   76  846   20  945  832  304   292 #>  [934,]  712  399  213  177  258  175  649  898  272   877 #>  [935,]  266  114  700  971  928  900  804  551  637   771 #>  [936,]   45  846  176  183  283  596  963  740  438   773 #>  [937,]  137  377  442  743  256   69  858  527  862   758 #>  [938,]  806  227  202  998  556  881  763  516  878   267 #>  [939,]  392  916  291  985  134  417  189  994  432    94 #>  [940,]  811  385   16  969  847  784  550  456  890   609 #>  [941,]  795  544  580  462  814  837  234  119  241   185 #>  [942,]  151  354  458  597  156  741  960  628  449   140 #>  [943,]  180  423  241  285  157  842  474  223  926    73 #>  [944,]  333  254  731  809  705  463  556  139  639   429 #>  [945,]  558   20  900  292   76  551    2  835  657   473 #>  [946,]  384  331  854  477  764  655  402  517  979   424 #>  [947,]  863  682  374  523  232  128  717  476  640    67 #>  [948,]    8  536  824  260  676  443  745  882  992   978 #>  [949,]  914  951   10  443  479  190  153  823   52   561 #>  [950,]  681  444  225  654  328  570    9   66  437   695 #>  [951,]   10  190   19  949   29  770   48  777  479   914 #>  [952,]  664  918  217  738  401  884  240  380  707   399 #>  [953,]  204  625  665  276   11  115  257  704  610   453 #>  [954,]  435  567  414  808   84  451  836  739  564   563 #>  [955,]  846  971  900  700  397   45  438   68  176   958 #>  [956,]  632  727  725  133  734  600  316  428  622    99 #>  [957,]  174  161   37  107  450  321  295  880  994   929 #>  [958,]  846  933  955  176  200  984  936  565   71   513 #>  [959,]  549  573  739   63   85  267  516  808   96   718 #>  [960,]  693  354  458  715  982  456  989  162  151   915 #>  [961,]   26  686  298  440  560  593   56  318  590   897 #>  [962,]  662  217  579  309   35  677  976  664  663   642 #>  [963,]  659  183  383   95  792  370  596  283   92   755 #>  [964,]  599  777  497  520  695  197   66   10  821   564 #>  [965,]  514   11  426  166  668  729  897  255  257   625 #>  [966,]  214   75  816  490  713  182  986  827  135   987 #>  [967,]  131  459  866  911  122  786  357  603  568   129 #>  [968,]  468  917  521  711  604  517  641  249  275   523 #>  [969,]  890  792  820  755  940  732  609   92  915   618 #>  [970,]  196   57  351  155  572  789  995  831  801   564 #>  [971,]  270  266  928  935   68  700  740  774  228   900 #>  [972,]  638  822  879  496  550  535  699  441  685   361 #>  [973,]  805  867  191  521  968  899  706  991  711    67 #>  [974,]  277   53   97  922  434  611  978  671  570   610 #>  [975,]  330  119  498  186  761   73   14   76  895   173 #>  [976,]  562  579   35  642  346  465  838  853  993   719 #>  [977,]   56  192  594  553  231  297   70  667  505   769 #>  [978,]  676  948    8  974  745  487  775  671   53   610 #>  [979,]  647  222  517  854  635  384  591  583  655   152 #>  [980,]  256   61  780   72  545   26   28  137  858   937 #>  [981,]  528  457  983  130  387  852   54  629  486   812 #>  [982,]  847  715  915  907  940  960  621  385  550   784 #>  [983,]  852  457   54  981  152  278  531  387  663   853 #>  [984,]  513  304  239  363  776  391  958  925  933   895 #>  [985,]  503  291  906  815  189   25  461  939  916     4 #>  [986,]  622  182  316   63  408  201  908  196  393   429 #>  [987,]  214  729   75   42  865  166  500  257  727   713 #>  [988,]  170  261  373  594  560   89  206  198  470    74 #>  [989,]  456  693  990  960  811  940  418  385  690    16 #>  [990,]  690  989  456   77  177  712  923  418  811   934 #>  [991,]  191  690  923  990  712  867  213   77  911   934 #>  [992,]  536  187  618  455  948  260  329  443    8   824 #>  [993,]  284  265  849  465  236  562  381  714  834   976 #>  [994,]  134  392  616  376  916  624  939  842  432   631 #>  [995,]  572  155  791  509  831  970   57  908  801   613 #>  [996,]  120  488  179  394  228   81  193  648  902   163 #>  [997,]  448  702  925  574  525  770  888  905  721   548 #>  [998,]  806  881  605  379  938  575  763  324  403   919 #>  [999,]  844  887  589  305  768  294   48  788   71   167 #> [1000,]  534  267  499  202  296  692  549  959  874   519 #>  #> $neighbor_distances #>               [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7] #>    [1,] 0.74562465 0.7814257 0.9265334 0.9282264 0.9570909 0.9674682 1.0403387 #>    [2,] 0.82151938 0.8484744 0.8798125 0.9322905 0.9771410 0.9950905 1.0217135 #>    [3,] 0.43024171 0.6365974 0.8655645 0.9115753 0.9486763 0.9853318 0.9928122 #>    [4,] 0.39632871 0.4760229 0.5179034 0.5734654 0.5972711 0.6510206 0.6792257 #>    [5,] 0.93194303 0.9327101 0.9362893 0.9929059 1.1575924 1.2029356 1.2122521 #>    [6,] 0.53586843 0.5830784 0.6520530 0.6819702 0.6928464 0.7597711 0.7688514 #>    [7,] 0.52613947 0.7488089 0.8320790 0.9129391 0.9300884 0.9793190 0.9910292 #>    [8,] 0.14930835 0.2469264 0.3503050 0.3579175 0.3602434 0.3709701 0.4618004 #>    [9,] 0.22664809 0.3100043 0.6086673 0.6766897 0.6785378 0.6845304 0.7448160 #>   [10,] 0.24228544 0.3273365 0.3709433 0.4607811 0.5027846 0.5490057 0.5560419 #>   [11,] 0.25384675 0.2624049 0.2770315 0.3410749 0.3635706 0.4667930 0.4792760 #>   [12,] 0.28275626 0.3464820 0.4063035 0.5328195 0.5344913 0.5373863 0.5393935 #>   [13,] 1.07566514 1.1197237 1.2694620 1.3625216 1.3838459 1.4097964 1.4391177 #>   [14,] 0.45993126 0.5067644 0.5074360 0.6592325 0.6768126 0.6885648 0.6910757 #>   [15,] 0.28275626 0.3285323 0.4806598 0.5386983 0.5961457 0.6316764 0.6385088 #>   [16,] 0.57636312 0.6662769 0.6711377 0.8091163 0.8611037 0.8987073 0.9223711 #>   [17,] 1.00954749 1.2247178 1.3143993 1.4834759 1.5217774 1.5502264 1.5638871 #>   [18,] 0.51406677 0.7326679 0.7716337 0.9481364 1.0403616 1.0409858 1.0414951 #>   [19,] 0.15640865 0.3709433 0.4099994 0.4278792 0.5239110 0.5421116 0.6216206 #>   [20,] 0.20373544 0.4281451 0.5328137 0.6668659 0.7073985 0.7907436 0.8266314 #>   [21,] 0.40302036 0.5483115 0.5485510 0.5711953 0.5763749 0.6232467 0.6344779 #>   [22,] 0.50682380 0.5914805 0.6170202 0.6178851 0.6484395 0.6693171 0.6995348 #>   [23,] 0.79341256 0.8786258 0.8798125 1.0188607 1.1358167 1.2346590 1.2979258 #>   [24,] 0.24594378 0.3758833 0.6172503 0.6300199 0.7082396 0.7089842 0.7141430 #>   [25,] 0.39632871 0.4448504 0.4461952 0.5128216 0.5389589 0.5467042 0.5468229 #>   [26,] 0.45437556 0.4792233 0.5265832 0.5435979 0.5515566 0.5665992 0.5853154 #>   [27,] 0.77433220 0.8875965 1.0719734 1.1030484 1.2324686 1.2444984 1.2718193 #>   [28,] 0.46477122 0.5055480 0.5316684 0.5698782 0.6102707 0.6119162 0.6270962 #>   [29,] 0.15640865 0.3273365 0.4198721 0.5129210 0.5449386 0.6026957 0.6063250 #>   [30,] 0.34963821 0.3840303 0.5578343 0.6131776 0.6285223 0.6311497 0.6745988 #>   [31,] 0.23679494 0.3327434 0.3360558 0.3406086 0.3798445 0.3865375 0.3991870 #>   [32,] 0.28818804 0.3602307 0.3878671 0.4603921 0.6048103 0.6435437 0.6802705 #>   [33,] 0.32659121 0.6836548 0.7282836 0.7696123 0.7881658 0.8287289 0.8348408 #>   [34,] 0.64926279 0.6819702 0.7335067 0.7691842 0.8465429 0.8967050 1.0830186 #>   [35,] 0.14445581 0.3530306 0.4987389 0.5601572 0.6268319 0.7881930 0.7948302 #>   [36,] 0.43212632 0.6320372 0.6333370 0.6572231 0.6586277 0.7131831 0.8040706 #>   [37,] 0.50564465 0.5777870 0.6149499 0.6165852 0.6487889 0.6902800 0.7224645 #>   [38,] 0.77465555 0.7893962 0.8131908 0.9149286 0.9163814 0.9847512 1.0095475 #>   [39,] 0.33637626 0.3924915 0.4445285 0.4820130 0.5680128 0.5764101 0.5828613 #>   [40,] 0.46803415 0.6144242 0.6341284 0.6676402 0.6855101 0.7163955 0.7642473 #>   [41,] 0.44668697 0.6821937 0.7895004 0.7960722 0.8267379 0.9504591 0.9513992 #>   [42,] 0.37490973 0.3806673 0.4679047 0.5175051 0.5431432 0.5514026 0.5989504 #>   [43,] 0.47443446 0.6339633 0.7905914 0.8011479 0.9405554 0.9515134 0.9744322 #>   [44,] 0.45047614 0.5299189 0.6342236 0.6384963 0.6570635 0.7377237 0.7826714 #>   [45,] 0.54382027 0.7081306 0.7208170 0.7330808 0.8008045 0.8083375 0.8096624 #>   [46,] 0.68058304 0.8295918 0.8391500 0.8572794 0.8804594 0.9264927 0.9493781 #>   [47,] 0.61779304 0.7284236 0.7331427 0.7422858 0.9357738 0.9834737 1.0022265 #>   [48,] 0.42409001 0.6186106 0.6693587 0.6862516 0.6942446 0.6966954 0.7313447 #>   [49,] 0.37466869 0.5334963 0.5438331 0.5845942 0.6469517 0.6626335 0.6692353 #>   [50,] 0.26582475 0.5541679 0.5609829 0.6344069 0.6572596 0.6847354 0.6909485 #>   [51,] 0.26840997 0.4092289 0.4457339 0.4739630 0.4749265 0.5193947 0.5373863 #>   [52,] 0.19362612 0.2461474 0.3541067 0.5235020 0.5583888 0.5749961 0.5820863 #>   [53,] 0.29721725 0.3313228 0.3581901 0.3980982 0.4235041 0.4570865 0.5163944 #>   [54,] 0.46627347 0.4815389 0.4892468 0.5688549 0.6880759 0.7651085 0.7787815 #>   [55,] 0.68407846 0.6848196 0.7463098 0.7769130 0.8505572 0.9165872 0.9515134 #>   [56,] 0.37654633 0.5170850 0.5350442 0.5785165 0.6151885 0.6195598 0.6214509 #>   [57,] 0.40509391 0.4119304 0.5696130 0.6453737 0.6732875 0.6826790 0.6867499 #>   [58,] 0.35305867 0.5266007 0.5678196 0.5970043 0.6494895 0.6870290 0.6877142 #>   [59,] 0.35639832 0.4311124 0.4603921 0.5530755 0.6220098 0.6609447 0.6611763 #>   [60,] 0.56232852 0.5702952 0.6209194 0.6561299 0.6754126 0.6979746 0.7329954 #>   [61,] 0.29844234 0.3144825 0.4290306 0.4841265 0.5481194 0.5787647 0.6082913 #>   [62,] 0.56722298 0.6410412 0.7821748 0.8678068 0.8725045 0.9257776 0.9407906 #>   [63,] 0.42126214 0.4847733 0.5172246 0.5397598 0.5880023 0.6091028 0.6128280 #>   [64,] 0.24594378 0.4897509 0.6723442 0.7186642 0.7488963 0.7524920 0.7535902 #>   [65,] 0.51870335 0.6534041 0.7175783 0.7179722 0.7878961 0.8066565 0.8078005 #>   [66,] 0.28818804 0.3564071 0.5195412 0.5530755 0.6067194 0.6123025 0.6365874 #>   [67,] 1.20356183 1.2052563 1.3387000 1.3820632 1.4349109 1.4523431 1.4544306 #>   [68,] 0.54585236 0.5926767 0.6005764 0.6142823 0.6854061 0.6904281 0.6928464 #>   [69,] 0.35660706 0.3657901 0.4056926 0.4186784 0.4549961 0.4647712 0.4692418 #>   [70,] 0.16503779 0.3434683 0.3598888 0.4857713 0.4945059 0.5051625 0.5193597 #>   [71,] 0.49502975 0.5551756 0.7198017 0.7693894 0.7710098 0.8700035 0.8753975 #>   [72,] 0.24840555 0.4019691 0.4080008 0.4841265 0.4855950 0.4883962 0.5665992 #>   [73,] 0.54127810 0.5779040 0.6458265 0.6699731 0.6762403 0.7021166 0.7238420 #>   [74,] 0.32123787 0.4130647 0.5199658 0.5354637 0.5392202 0.5625458 0.5889327 #>   [75,] 0.28037858 0.4897062 0.5085348 0.5115850 0.5791442 0.5817353 0.5991759 #>   [76,] 0.20373544 0.4558486 0.6688291 0.6761435 0.7260454 0.7329239 0.7455946 #>   [77,] 0.89234511 1.0038754 1.2121448 1.3584891 1.3685893 1.4425738 1.4579841 #>   [78,] 0.37464898 0.4456372 0.6026517 0.6768359 0.6850632 0.6863024 0.7001517 #>   [79,] 0.44546670 0.4829742 0.5089955 0.5157610 0.6049912 0.6151157 0.6298247 #>   [80,] 0.45007685 0.5234862 0.6651514 0.6786769 0.6817767 0.6954634 0.7266907 #>   [81,] 0.37724331 0.6315393 0.6572231 0.6777603 0.7113832 0.7124559 0.7348737 #>   [82,] 0.73686907 0.9027309 0.9343776 0.9482923 1.1073360 1.1293273 1.1357006 #>   [83,] 0.30767642 0.7793450 0.8283812 0.8460582 0.8522458 0.8674553 0.8774757 #>   [84,] 0.37074374 0.4507406 0.4519906 0.5658846 0.5910379 0.6096197 0.6135836 #>   [85,] 0.35626164 0.3635811 0.3968216 0.4122923 0.4354341 0.5305760 0.5457756 #>   [86,] 0.19289334 0.4820130 0.5515162 0.5683602 0.5980411 0.6181869 0.6846207 #>   [87,] 0.57399771 1.0016403 1.0868391 1.1030484 1.2806703 1.3662479 1.5304853 #>   [88,] 0.44207446 0.9978954 1.1407997 1.2627316 1.3349337 1.3355793 1.3519281 #>   [89,] 0.49404142 0.5071860 0.5480763 0.6609486 0.6671332 0.6802905 0.7214427 #>   [90,] 0.78287863 0.7935589 0.8038782 0.8516823 0.9020497 0.9145882 0.9307798 #>   [91,] 0.21684318 0.2299466 0.3677102 0.3798445 0.4660067 0.4729668 0.5402757 #>   [92,] 0.35494235 0.3688737 0.3709218 0.4555944 0.5274026 0.5353683 0.5975370 #>   [93,] 0.54350825 0.5930222 0.6060374 0.6824583 0.7391817 0.7936567 0.8194397 #>   [94,] 0.44668697 0.6332731 0.7002416 0.7013776 0.7332925 0.7556274 0.7669055 #>   [95,] 0.27024363 0.4231020 0.5544827 0.6216399 0.6418191 0.6681422 0.6760462 #>   [96,] 0.29626481 0.3886763 0.3968216 0.6202617 0.7173615 0.7278726 0.7410558 #>   [97,] 0.44407133 0.4515414 0.4705982 0.5094429 0.5278611 0.5559511 0.5680128 #>   [98,] 0.27957513 0.4266872 0.5307636 0.5367406 0.5901721 0.6005118 0.6182163 #>   [99,] 0.28029876 0.3040664 0.3327434 0.3941630 0.4644988 0.5346088 0.5400530 #>  [100,] 0.52415159 0.5406675 0.5543190 0.5984866 0.5992795 0.6125505 0.6534041 #>  [101,] 0.55781685 0.8659771 0.8686840 0.9609860 1.0568596 1.1219032 1.1343718 #>  [102,] 0.38786714 0.4839175 0.5979531 0.6067194 0.6230056 0.6469304 0.6534108 #>  [103,] 0.48577417 0.6075924 0.6558797 0.6779777 0.7004461 0.7508040 0.7579453 #>  [104,] 0.26703346 0.3900030 0.5009468 0.5239110 0.5449386 0.6243664 0.7096263 #>  [105,] 0.35305867 0.4608400 0.4875452 0.4938607 0.5599433 0.6357561 0.6758371 #>  [106,] 0.43024171 0.7041070 0.7792734 0.9330838 0.9374272 0.9913647 1.0059550 #>  [107,] 0.62028979 0.6262668 0.9542660 1.0119907 1.0467705 1.1025999 1.1913000 #>  [108,] 0.56672212 0.5901721 0.6607746 0.6850493 0.7151716 0.7836553 0.7846359 #>  [109,] 0.39268839 0.4694895 0.4925053 0.6566940 0.6824295 0.7280158 0.7782824 #>  [110,] 1.00650963 1.0722204 1.2529583 1.2901411 1.4366996 1.4920328 1.5006973 #>  [111,] 0.94200565 0.9812538 1.0565192 1.1425056 1.2064908 1.2138971 1.2152079 #>  [112,] 0.67852647 0.7296850 0.7554033 0.7719747 0.7868831 0.8527642 0.9114008 #>  [113,] 1.14869412 1.1847707 1.2669054 1.3196496 1.4435686 1.4776906 1.6068314 #>  [114,] 0.47475158 0.4999225 0.5191519 0.5305980 0.5670814 0.5927093 0.6244006 #>  [115,] 0.26121410 0.3658975 0.3684239 0.3924915 0.4363977 0.4979321 0.5103733 #>  [116,] 0.72522489 0.9762172 1.1035590 1.3094565 1.3441289 1.3517004 1.4657068 #>  [117,] 0.52991891 0.5502277 0.6218766 0.6421484 0.6762071 0.7371508 0.7470447 #>  [118,] 0.22994660 0.2697902 0.3865375 0.4084135 0.4603376 0.4980639 0.5056411 #>  [119,] 0.39691683 0.4599313 0.4704339 0.5072185 0.5474676 0.5485584 0.6099825 #>  [120,] 0.27564720 0.5986992 0.7526387 0.7695542 0.7738930 0.7930441 0.8085015 #>  [121,] 0.37340327 0.5228412 0.5492811 0.7126261 0.8883761 0.8996562 0.9225202 #>  [122,] 0.51919528 0.5648302 0.6373351 0.6666164 0.6920993 0.7404194 0.7626586 #>  [123,] 0.32853233 0.3464820 0.5284727 0.5626447 0.5703033 0.5888933 0.5931626 #>  [124,] 0.63222118 0.7651177 0.8064753 0.8684185 0.9947786 1.0229956 1.0543743 #>  [125,] 0.21517392 0.3349615 0.4342935 0.6433965 0.6704011 0.6957135 0.6975098 #>  [126,] 0.53586843 0.5458524 0.6608608 0.6712364 0.7014237 0.7709956 0.8118412 #>  [127,] 0.34732937 0.5993651 0.6499001 0.6537013 0.6563145 0.6704011 0.6785702 #>  [128,] 0.59209065 0.7211232 0.9144942 0.9643111 0.9676349 0.9708980 0.9874899 #>  [129,] 0.48196951 0.4837833 0.5218702 0.5580045 0.5779026 0.5865017 0.6711493 #>  [130,] 0.52369040 0.6028600 0.6475971 0.6648466 0.7551210 0.7801184 0.7861640 #>  [131,] 0.26742910 0.3390798 0.4374039 0.4629125 0.5873092 0.5878701 0.6920993 #>  [132,] 0.28511410 0.3141030 0.3489187 0.3563236 0.4442709 0.4879446 0.5325836 #>  [133,] 0.34946363 0.3657620 0.4265415 0.4311943 0.4499965 0.5043691 0.5056411 #>  [134,] 0.46234367 0.6699969 0.6953102 0.7746555 0.8699527 0.8969790 0.9345576 #>  [135,] 0.43965253 0.7020622 0.7491027 0.8297444 0.8324376 0.8447853 0.9365913 #>  [136,] 0.66627690 1.0691149 1.0958981 1.1012163 1.1710135 1.1994465 1.2227222 #>  [137,] 0.25303605 0.4743594 0.4867876 0.5587678 0.6029858 0.6241496 0.6768359 #>  [138,] 0.49404142 0.7110881 0.8591528 0.8904291 0.8908771 0.9003728 0.9084550 #>  [139,] 0.40570406 0.4250040 0.4392495 0.4678062 0.4775453 0.4793045 0.5256495 #>  [140,] 0.53321145 0.7241397 0.7350830 0.7579453 0.8350633 0.8460547 0.8995981 #>  [141,] 0.57935859 0.6322789 0.7179722 0.7557885 0.8678068 0.9117992 1.0113813 #>  [142,] 0.78918422 0.9284017 0.9515047 0.9747067 0.9788925 0.9849511 1.0158235 #>  [143,] 0.37464158 0.3788266 0.5168968 0.5668995 0.6807868 0.7196380 0.7225604 #>  [144,] 0.73088621 1.0305653 1.2136983 1.2562875 1.2806703 1.3571199 1.4324886 #>  [145,] 0.18384470 0.2931532 0.2985027 0.3371759 0.4151703 0.4407845 0.4470664 #>  [146,] 0.64956888 0.6496336 0.7412985 0.7557939 0.7681376 0.7793056 0.7800657 #>  [147,] 0.79439533 0.8260102 0.9046253 0.9205177 0.9237224 0.9493781 0.9515470 #>  [148,] 0.58592260 0.7047976 1.0659210 1.1223403 1.1683704 1.2012935 1.2295082 #>  [149,] 0.91080462 0.9192535 0.9657732 0.9853318 1.0106873 1.0245822 1.1307363 #>  [150,] 0.71857467 0.8545012 0.8569165 0.8608384 1.0186861 1.0228729 1.0331229 #>  [151,] 0.72503645 0.8873049 0.9389479 1.0058373 1.0222296 1.0390255 1.0591442 #>  [152,] 0.35248354 0.3778802 0.6581170 0.6791943 0.6880759 0.7151239 0.7410953 #>  [153,] 0.19362612 0.2695228 0.4129258 0.4402988 0.4765271 0.4805230 0.5276887 #>  [154,] 1.05278250 1.2761681 1.3121711 1.3123208 1.3693411 1.3813704 1.4682353 #>  [155,] 0.41011438 0.4119304 0.4315054 0.4768962 0.5013315 0.5065417 0.6223420 #>  [156,] 0.61395542 0.7340577 1.1245014 1.2338579 1.3018320 1.3155263 1.3474814 #>  [157,] 0.23551566 0.3215563 0.3449956 0.3547878 0.4359148 0.4626889 0.4967476 #>  [158,] 0.65734658 0.8167614 0.8516823 0.9219391 0.9489317 0.9763732 1.0306358 #>  [159,] 0.33818843 0.4546519 0.5064880 0.6250570 0.6265024 0.7362006 0.7372459 #>  [160,] 0.62518587 0.6424410 0.7915123 0.9533233 1.0095313 1.0292831 1.0521134 #>  [161,] 0.60312964 0.6805640 0.7370325 0.7383346 0.8305208 0.8884529 0.9074017 #>  [162,] 0.31373420 0.3496382 0.4054254 0.7069794 0.8207136 0.8521395 0.8705163 #>  [163,] 0.55781685 0.6221386 0.6905824 0.8085015 0.8408106 0.8446127 0.9391110 #>  [164,] 0.52397470 0.6056250 0.6125505 0.6135399 0.6638354 0.7205083 0.7275768 #>  [165,] 0.58887445 0.6501751 0.6670369 0.7155079 0.7313557 0.7583376 0.7869896 #>  [166,] 0.36357058 0.3832436 0.3872906 0.4521334 0.4852891 0.4936428 0.4974015 #>  [167,] 0.37464158 0.5149946 0.6282199 0.6420241 0.6576615 0.6835596 0.7151770 #>  [168,] 0.56855962 0.7320118 0.7843666 0.7855779 0.9536600 0.9695961 0.9775066 #>  [169,] 0.73447389 1.1322987 1.1892733 1.2543086 1.3015516 1.3029466 1.3230878 #>  [170,] 0.32998872 0.3446349 0.4082684 0.4205856 0.4749162 0.5519307 0.5639231 #>  [171,] 0.36434119 0.7052132 0.7084240 0.7178216 0.7321067 0.8276432 0.8958313 #>  [172,] 0.41097978 0.4655296 0.4794560 0.5180584 0.5314404 0.5352904 0.5528314 #>  [173,] 0.36880341 0.4508019 0.5745505 0.7254372 0.7450306 0.7605680 0.7844661 #>  [174,] 0.54259116 0.5777870 0.5976938 0.6002520 0.6712671 0.6805640 0.6841088 #>  [175,] 0.70139016 0.9783178 1.1329950 1.1578928 1.2121448 1.2731950 1.3755435 #>  [176,] 0.50062927 0.6025941 0.6112580 0.6385902 0.6670564 0.6700534 0.6745019 #>  [177,] 0.70139016 0.7585159 0.8158376 0.8923451 0.9475842 1.0069766 1.1293666 #>  [178,] 0.47632044 0.5490454 0.6200763 0.7660080 0.9602501 1.1406497 1.1471388 #>  [179,] 0.37724331 0.6586277 0.6808048 0.8110685 0.8239253 0.8495252 0.8932313 #>  [180,] 0.11300811 0.4238159 0.4359148 0.4441615 0.4969802 0.5366125 0.5409587 #>  [181,] 0.15954881 0.2823564 0.4554803 0.5267429 0.5526299 0.6830927 0.7305837 #>  [182,] 0.45661542 0.4904731 0.5260231 0.5265200 0.5318898 0.5791442 0.5797764 #>  [183,] 0.28750930 0.4516226 0.4533370 0.4703558 0.5274026 0.6357810 0.6760462 #>  [184,] 0.57223438 0.7891887 0.8245671 0.9007348 0.9053562 0.9259231 0.9364757 #>  [185,] 0.16503779 0.2096864 0.3823917 0.3980539 0.4997372 0.5039770 0.5149916 #>  [186,] 0.45080195 0.6458314 0.6514772 0.6639882 0.6688599 0.7195170 0.7692139 #>  [187,] 0.32824861 0.3559634 0.4382520 0.4641873 0.5073274 0.5096456 0.5111552 #>  [188,] 0.58753280 0.8320790 1.0800268 1.1491383 1.1835736 1.3160821 1.3234614 #>  [189,] 0.35601674 0.4461952 0.4843314 0.4847611 0.4920348 0.5179034 0.5266968 #>  [190,] 0.36277835 0.4506450 0.5257480 0.5490057 0.5824159 0.5892213 0.6327408 #>  [191,] 0.98690042 0.9897259 1.0782525 1.1012032 1.1589025 1.1711076 1.2124819 #>  [192,] 0.35988877 0.4322237 0.4374058 0.4571896 0.4669005 0.4997372 0.5305534 #>  [193,] 0.76955418 0.8919856 0.9088493 0.9510482 1.0307794 1.0637600 1.0748476 #>  [194,] 0.38419769 0.6933363 0.7407528 0.7716337 0.7905914 0.8278499 0.8505572 #>  [195,] 0.54928114 0.5877996 0.7189123 0.7335067 0.7412948 0.7595038 0.7790212 #>  [196,] 0.53069554 0.5574256 0.5824480 0.6301527 0.6929366 0.7018770 0.7159171 #>  [197,] 0.29626481 0.3124810 0.3635811 0.5126374 0.6524939 0.6777155 0.6817313 #>  [198,] 0.06871872 0.3147478 0.4712145 0.5633575 0.5707161 0.5836017 0.6754893 #>  [199,] 1.13997757 1.2945758 1.3144094 1.3679065 1.5089168 1.5149395 1.5419501 #>  [200,] 0.64244099 0.9102520 0.9621098 1.0141454 1.0142183 1.0208211 1.0759655 #>  [201,] 0.49711714 0.5474049 0.6138251 0.6214484 0.6533667 0.6617844 0.6658231 #>  [202,] 0.87842479 0.8821028 0.9770696 1.0912230 1.1188537 1.1383706 1.1874595 #>  [203,] 0.46060317 0.5083637 0.7117412 0.7378878 0.8557800 0.8846973 1.0111202 #>  [204,] 0.20892000 0.2770315 0.2873066 0.2986025 0.3850303 0.4446816 0.4887856 #>  [205,] 0.81448990 1.0972957 1.1911078 1.2380962 1.2859566 1.3088979 1.3185826 #>  [206,] 0.17732713 0.3454845 0.4618950 0.4667291 0.4749162 0.4861152 0.5484296 #>  [207,] 0.39011120 0.4608400 0.4821950 0.5400128 0.5678196 0.5678631 0.6255795 #>  [208,] 0.56483022 0.7051161 0.8680067 0.9609860 1.0483409 1.0531881 1.0547532 #>  [209,] 0.49470565 0.6371702 0.7326679 0.7387413 0.7585035 0.7849756 0.8161946 #>  [210,] 0.88928175 1.0652937 1.0984321 1.1007335 1.2633834 1.3209711 1.3337650 #>  [211,] 0.43776331 0.5834554 0.6006306 0.6971849 0.7175483 0.7829002 0.8073271 #>  [212,] 0.21684318 0.3406086 0.4084135 0.4486767 0.4531417 0.4664457 0.4723181 #>  [213,] 0.50786725 0.7361220 0.7777661 0.8706349 0.9428679 0.9441516 0.9759055 #>  [214,] 0.28037858 0.3465935 0.4675710 0.5733758 0.6524646 0.6581351 0.6605231 #>  [215,] 0.38708997 0.4268776 0.4420219 0.4564572 0.4838067 0.5328028 0.5477966 #>  [216,] 0.58334147 0.7244180 0.9364813 0.9855990 1.0540469 1.0713395 1.1383426 #>  [217,] 0.58495189 0.8361642 0.9980522 1.0398399 1.0574000 1.2482059 1.3199148 #>  [218,] 0.39268839 0.4608482 0.5400346 0.6056056 0.6094160 0.6232467 0.6480838 #>  [219,] 0.39941764 0.5092775 0.5728146 0.6202665 0.6262358 0.6301799 0.6768673 #>  [220,] 0.72441798 0.9127048 1.0771012 1.1256756 1.1842533 1.1844163 1.2392153 #>  [221,] 0.53797546 0.5524902 0.5910379 0.6145542 0.6464587 0.6683126 0.6754623 #>  [222,] 0.41006701 0.4596485 0.5199837 0.5218895 0.5865017 0.7919932 0.8560003 #>  [223,] 0.40660272 0.4498686 0.5393015 0.5962170 0.6056742 0.6473506 0.6584426 #>  [224,] 0.35632362 0.4162855 0.4321192 0.4979736 0.5307241 0.5334963 0.5597524 #>  [225,] 0.13843846 0.3614742 0.3729382 0.4598987 0.4733163 0.5012727 0.5144602 #>  [226,] 0.26584896 0.5095219 0.5529791 0.5539178 0.6049912 0.6217058 0.6309945 #>  [227,] 0.71326205 0.7706255 0.8169065 0.9004066 0.9980522 1.0255651 1.0260838 #>  [228,] 0.53616630 0.5657434 0.6635528 0.6777603 0.7208170 0.7270304 0.7634727 #>  [229,] 0.31228134 0.5524902 0.5658846 0.5938335 0.6255844 0.6364420 0.6665291 #>  [230,] 0.38464621 0.4440677 0.4608452 0.4632520 0.4824089 0.4867049 0.5459397 #>  [231,] 0.18794566 0.3487092 0.4191616 0.4281105 0.4427335 0.4785977 0.5004929 #>  [232,] 0.75230883 0.8391500 0.8875965 0.9213199 0.9555552 1.0016403 1.0584093 #>  [233,] 0.31897074 0.5163426 0.6120185 0.6344779 0.6644220 0.7127500 0.7260159 #>  [234,] 0.30542231 0.3220347 0.3823917 0.5024054 0.5060132 0.5193597 0.5336629 #>  [235,] 0.53869827 0.6093660 0.6319375 0.6619793 0.6680817 0.6769027 0.7523322 #>  [236,] 0.35882061 0.4341295 0.5690199 0.5826373 0.7240068 0.7431529 0.7494460 #>  [237,] 0.66756443 0.6744272 0.7237403 0.7782363 0.8012073 0.9226483 0.9319430 #>  [238,] 1.07222043 1.1035590 1.1531728 1.2790045 1.2829466 1.4000710 1.4597688 #>  [239,] 0.62097323 0.6557889 0.6648584 0.6848191 0.7103054 0.7155079 0.8946152 #>  [240,] 0.21850373 0.7967507 0.8259403 0.8521355 0.8567897 0.8812211 0.9027626 #>  [241,] 0.42950269 0.4740833 0.4969802 0.5095301 0.5124846 0.5330281 0.5558400 #>  [242,] 0.36483382 0.3904088 0.4268776 0.4751119 0.4806756 0.5106813 0.5278030 #>  [243,] 0.44397169 0.5272564 0.6606457 0.6618446 0.6791943 0.7214427 0.7565155 #>  [244,] 0.29922074 0.3920524 0.4311943 0.4363977 0.4980047 0.5197990 0.5291187 #>  [245,] 0.28327444 0.3349615 0.5070344 0.5157100 0.5316987 0.6466297 0.6567167 #>  [246,] 0.50219646 0.6339633 0.7117412 0.7575362 0.8009398 0.8248387 0.8278499 #>  [247,] 0.33130841 0.7231604 0.7871264 1.0469700 1.1149100 1.1261396 1.1392259 #>  [248,] 0.25776253 0.4063035 0.4457339 0.5031530 0.5727354 0.5961457 0.6344058 #>  [249,] 0.47776516 0.6255795 0.6465796 0.6960025 0.7168323 0.7185859 0.7299866 #>  [250,] 0.47220350 0.7846359 0.8688135 0.8846880 0.8850002 0.9420056 0.9445596 #>  [251,] 0.51499464 0.6495520 0.6562430 0.6910577 0.7204098 0.7225604 0.7374318 #>  [252,] 0.23315693 0.2579888 0.3815582 0.3824582 0.3870900 0.4332528 0.5198646 #>  [253,] 1.07714916 1.4682305 1.5264380 1.5999221 1.6936193 1.7184050 1.7429401 #>  [254,] 0.18100511 0.2331721 0.3046303 0.3602702 0.3924175 0.4330430 0.4678062 #>  [255,] 0.34746827 0.4297540 0.4806756 0.5085118 0.5242418 0.5333713 0.5350704 #>  [256,] 0.24840555 0.2672597 0.4252933 0.4290306 0.4543756 0.5587678 0.5716446 #>  [257,] 0.18647639 0.2624049 0.2986025 0.3732525 0.3832436 0.4135148 0.4982352 #>  [258,] 0.37861496 0.5078673 0.5626447 0.7784563 0.8213262 0.8573305 0.8618764 #>  [259,] 0.83243762 0.8344001 0.8541111 0.8635455 0.9475365 0.9557580 0.9804457 #>  [260,] 0.27525499 0.3585829 0.4593960 0.4610570 0.4618004 0.4619547 0.5111552 #>  [261,] 0.34759326 0.5071860 0.5229583 0.5330635 0.5572452 0.5606713 0.5660222 #>  [262,] 0.40371009 0.4183440 0.4867049 0.4940483 0.4988487 0.5211393 0.5545825 #>  [263,] 0.54907346 0.5707200 0.6167114 0.6583072 0.7556719 0.8460582 0.8734127 #>  [264,] 0.80157937 0.9903985 1.0526536 1.0652937 1.1188047 1.1406546 1.2876127 #>  [265,] 0.41450944 0.4150414 0.5573634 0.6445627 0.6485730 0.7017967 0.7604813 #>  [266,] 0.30009358 0.5454350 0.5582981 0.5908802 0.6351990 0.6452882 0.6876433 #>  [267,] 0.58388641 0.6104175 0.7251468 0.7365700 0.7947935 0.8237881 0.8613435 #>  [268,] 0.63222118 0.8615233 0.9108046 0.9158021 0.9612703 1.0747646 1.0972946 #>  [269,] 0.42469079 0.4407845 0.4432093 0.4608452 0.5550461 0.5638635 0.5827799 #>  [270,] 0.49897391 0.5288643 0.5454350 0.5830784 0.6142823 0.6653001 0.7187220 #>  [271,] 0.65406823 0.7597711 0.7639071 0.8271218 0.8948424 0.9307739 0.9684313 #>  [272,] 0.49361133 0.4983203 0.5846637 0.6739447 0.6964829 0.7420083 0.7472028 #>  [273,] 0.42448171 0.5372578 0.5601247 0.5694412 0.6243664 0.7016597 0.7467121 #>  [274,] 0.47411055 0.5255384 0.5330635 0.6766266 0.6846221 0.6863034 0.7298460 #>  [275,] 0.42363056 0.5702193 0.7040376 0.7415197 0.7660080 0.8733544 0.9083233 #>  [276,] 0.28168663 0.3363763 0.3366179 0.3658975 0.3732525 0.4446816 0.4471658 #>  [277,] 0.26893456 0.4311124 0.4316656 0.5163944 0.5240957 0.5432449 0.5559511 #>  [278,] 0.74748117 0.7817230 0.9025282 1.0538397 1.0617999 1.0618646 1.2407639 #>  [279,] 1.22471781 2.1890186 2.3325477 2.3600227 2.3601329 2.4069897 2.4591450 #>  [280,] 0.39011120 0.4030364 0.4848192 0.4938607 0.4980626 0.5380305 0.6845305 #>  [281,] 0.28582626 0.4030364 0.4608296 0.4821950 0.4875452 0.5310527 0.6545318 #>  [282,] 0.38965138 0.5048697 0.5226944 0.5647908 0.6570635 0.6650184 0.6789574 #>  [283,] 0.35203586 0.4312010 0.4516226 0.5353683 0.6108525 0.6457954 0.6605452 #>  [284,] 0.35562872 0.5573634 0.5827629 0.6265024 0.6325487 0.6528518 0.6546196 #>  [285,] 0.37958277 0.5101240 0.5412781 0.6421019 0.6622340 0.6959716 0.6998128 #>  [286,] 0.26906295 0.3589845 0.3657620 0.4127934 0.4413304 0.4644044 0.4644988 #>  [287,] 0.58021454 0.5858626 0.6713992 0.7558768 0.7631169 0.8193039 0.8412426 #>  [288,] 0.20059308 0.5256589 0.5707200 0.5909884 0.6490231 0.6656549 0.6877344 #>  [289,] 0.82055304 1.1967386 1.2131667 1.2369467 1.2657095 1.3171575 1.5072665 #>  [290,] 0.73478598 0.7376616 0.7415283 0.7540646 0.7793450 0.7803288 0.8291324 #>  [291,] 0.28344219 0.3560167 0.4276324 0.4658726 0.5359280 0.5363155 0.5753612 #>  [292,] 0.53281372 0.6584494 0.6761435 0.7860331 0.8710713 1.0140021 1.0736592 #>  [293,] 0.20059308 0.4542727 0.4858373 0.5490735 0.6421484 0.6795590 0.6846964 #>  [294,] 0.55030326 0.7928037 0.8775259 0.8892817 0.9337122 0.9550839 1.1406546 #>  [295,] 0.27957513 0.3885919 0.5043442 0.5425912 0.5852440 0.5955779 0.6079134 #>  [296,] 0.62586022 0.7564621 0.7777406 0.8072376 0.9269381 0.9346420 0.9427231 #>  [297,] 0.37294380 0.4785977 0.5148421 0.5298948 0.6465796 0.6758371 0.6877142 #>  [298,] 0.25497894 0.2583401 0.3109175 0.3566071 0.4688855 0.5052856 0.5245963 #>  [299,] 0.21859482 0.3099204 0.3312882 0.4626889 0.4712288 0.5742293 0.6371702 #>  [300,] 0.50946401 0.7013776 0.7276403 0.8472868 0.8644554 0.8850290 0.8855614 #>  [301,] 0.33505138 0.4635971 0.4932760 0.5129743 0.5367406 0.5508439 0.5923691 #>  [302,] 0.21517392 0.2832744 0.3999586 0.5957761 0.6136812 0.6741496 0.6828547 #>  [303,] 0.36637509 0.4030204 0.4746185 0.5456766 0.5591942 0.5828883 0.6250328 #>  [304,] 0.65789656 0.6985028 0.8236312 0.8432474 0.9164123 0.9170824 0.9594948 #>  [305,] 0.54141592 0.6212591 0.7590130 0.7928037 0.8404315 0.9013056 0.9576412 #>  [306,] 0.46084823 0.4694895 0.8370065 0.8375788 0.8906070 0.8945068 0.8959011 #>  [307,] 0.29858179 0.3437221 0.5955779 0.6002520 0.6200082 0.6236334 0.6344341 #>  [308,] 0.55500073 0.7386489 0.7972707 0.8067053 0.8082233 0.8390772 0.8563587 #>  [309,] 0.47861800 0.5681534 0.5694412 0.6506551 0.6979894 0.7148125 0.7227379 #>  [310,] 0.34754536 0.4313306 0.5130960 0.5241516 0.5930222 0.6344576 0.6880818 #>  [311,] 0.37327341 0.4098468 0.4462780 0.4651564 0.4881930 0.6099825 0.6302847 #>  [312,] 0.70082113 0.8015794 0.9078570 0.9336616 0.9678569 1.0337041 1.0459787 #>  [313,] 0.22963173 0.3822516 0.4470855 0.4794560 0.5335353 0.5551756 0.5643062 #>  [314,] 0.26703346 0.2969769 0.4278792 0.5129210 0.5346496 0.5871293 0.7017967 #>  [315,] 0.35565994 0.3602593 0.3991870 0.4603376 0.4723181 0.4729668 0.4812219 #>  [316,] 0.34258040 0.3634961 0.3964144 0.4998752 0.5449851 0.5880023 0.5910944 #>  [317,] 0.53320938 0.5544827 0.6210258 0.6335668 0.6745019 0.6751785 0.6787388 #>  [318,] 0.25497894 0.3104081 0.3452326 0.3663751 0.4180639 0.4692418 0.4906990 #>  [319,] 0.78436665 0.8992125 1.0910832 1.1058274 1.1288535 1.1385618 1.1760756 #>  [320,] 0.44248133 0.5064880 0.5918935 0.6166632 0.7351187 0.7421834 0.7804886 #>  [321,] 0.57261847 0.8530572 0.8597446 0.8636180 0.8638547 0.9791836 0.9925815 #>  [322,] 0.28216071 0.3110621 0.3277524 0.4389476 0.4440677 0.4829021 0.5238077 #>  [323,] 1.15952939 1.3004142 1.3849834 1.4164961 1.4450915 1.5415368 1.5965228 #>  [324,] 0.29867093 0.6144242 0.6467002 0.6493142 0.8940572 0.9183030 0.9194165 #>  [325,] 0.67323653 0.8420736 0.8608384 0.8636933 0.9511690 1.0156073 1.0219866 #>  [326,] 0.47720444 0.6950143 0.6954875 0.7165284 0.7491027 0.8393934 0.8720127 #>  [327,] 0.28124579 0.4589059 0.4814276 0.5129343 0.5138419 0.5428292 0.5603274 #>  [328,] 0.13843846 0.3337534 0.3974649 0.3988222 0.4676164 0.4843394 0.4871965 #>  [329,] 0.35639832 0.4596631 0.5360194 0.5578343 0.5967954 0.5969850 0.6276927 #>  [330,] 0.40647607 0.4585323 0.6334026 0.6699731 0.6945125 0.6985028 0.7174158 #>  [331,] 0.57980330 0.6848253 0.6897666 0.6933892 0.6941218 0.7392870 0.7496772 #>  [332,] 0.77532075 0.8006448 0.8167614 1.0637538 1.1803910 1.3004457 1.3206993 #>  [333,] 0.18100511 0.2623171 0.2840432 0.3679543 0.4522104 0.4793045 0.5287791 #>  [334,] 0.61353987 0.6410412 0.7305286 0.7363715 0.7474979 0.8896915 0.9052624 #>  [335,] 0.81107796 0.8248505 0.8495252 0.8737116 0.9557813 1.0427972 1.0541817 #>  [336,] 0.60760167 0.6681418 0.6994195 0.9212990 0.9652502 0.9953958 1.0004142 #>  [337,] 0.48195091 0.6464435 0.7165405 0.7266907 0.8644554 0.9123002 0.9309684 #>  [338,] 0.32791326 0.4169615 0.6839827 0.8108839 0.9039965 0.9056836 0.9172126 #>  [339,] 0.36579006 0.4151703 0.4313543 0.4549463 0.4727144 0.5266968 0.5359280 #>  [340,] 0.87532378 0.9027309 0.9433270 0.9815240 1.0737060 1.0839398 1.1084937 #>  [341,] 0.15954881 0.2467074 0.5107970 0.5160314 0.6019872 0.6022022 0.6644941 #>  [342,] 0.42372422 0.4763492 0.4847611 0.5363155 0.5390043 0.5684323 0.5737547 #>  [343,] 0.53902524 0.6307638 0.6797807 0.8206485 0.8635252 0.8635455 0.8779272 #>  [344,] 0.62425447 0.6413863 0.7234622 0.7409182 0.7855779 0.7936567 0.8255343 #>  [345,] 0.37294380 0.3734149 0.4191616 0.5477347 0.5666283 0.6061562 0.6274556 #>  [346,] 0.47790149 0.5601572 0.5650310 0.5888595 0.6136812 0.6437487 0.6466297 #>  [347,] 0.27345076 0.4664457 0.4724188 0.5022086 0.5367938 0.5418072 0.5584544 #>  [348,] 0.30474659 0.3460331 0.5170972 0.5859995 0.6398913 0.6532929 0.7554405 #>  [349,] 0.32027788 0.3541067 0.4070195 0.4129258 0.4177594 0.5450070 0.5874023 #>  [350,] 0.90245445 1.0527825 1.1169264 1.1647478 1.2454803 1.2649114 1.3178073 #>  [351,] 0.62665299 0.6867499 0.7422858 0.7740485 0.7932301 0.8521355 0.8609929 #>  [352,] 0.47311666 0.6846964 0.6877344 0.7470447 0.7488089 0.7702247 0.8153964 #>  [353,] 0.72522489 0.9533668 1.0014506 1.1514274 1.1585387 1.2033729 1.2694772 #>  [354,] 0.39276418 0.7340577 0.7734912 0.7943953 0.8060156 1.0404514 1.0983134 #>  [355,] 0.56600722 0.6917593 0.7557885 0.9111066 0.9321365 0.9495714 0.9883279 #>  [356,] 0.77433220 0.8940572 0.9222783 1.0565697 1.2277363 1.2341375 1.3344933 #>  [357,] 0.40388427 0.4571896 0.4629125 0.4830386 0.5459360 0.5485762 0.6327775 #>  [358,] 0.20855892 0.2914157 0.4674907 0.4813051 0.5085089 0.5222735 0.5765794 #>  [359,] 0.43053414 0.4637892 0.5678282 0.6394186 0.6501751 0.7033504 0.7494441 #>  [360,] 0.57399771 0.7308862 1.1997500 1.2718193 1.3014992 1.3433161 1.3466054 #>  [361,] 0.24572687 0.2964714 0.3877350 0.5637967 0.6620008 0.6719083 0.7116651 #>  [362,] 0.45134837 0.4957915 0.5163426 0.5998131 0.6730791 0.6736339 0.6881713 #>  [363,] 0.41059792 0.5191417 0.5457562 0.5556599 0.6379218 0.6648584 0.7254372 #>  [364,] 0.30904980 0.4338545 0.5361611 0.7240046 0.7742662 0.7861070 0.8236730 #>  [365,] 0.21608211 0.3123570 0.4669005 0.4898465 0.5355942 0.5626904 0.5650142 #>  [366,] 0.56614545 0.9711206 0.9812538 1.0906332 1.0953740 1.1138341 1.1787503 #>  [367,] 0.22341132 0.5387153 0.5495350 0.6045276 0.6478357 0.7099912 0.7116651 #>  [368,] 0.45378622 0.5468229 0.5734654 0.6242545 0.6256740 0.7276403 0.8502615 #>  [369,] 0.81358782 0.8770432 1.1777498 1.2457890 1.2484637 1.2552516 1.2858634 #>  [370,] 0.27024363 0.3380870 0.5138613 0.5352931 0.6307319 0.6448612 0.6480841 #>  [371,] 0.66870781 1.5436934 1.5452543 1.6663039 1.6942702 1.7455794 1.7492586 #>  [372,] 0.25884943 0.2931532 0.3676943 0.4246908 0.4411178 0.4728639 0.5755884 #>  [373,] 0.17732713 0.3264760 0.3446349 0.3921037 0.4057226 0.4352433 0.5021418 #>  [374,] 0.77366242 0.7828786 0.8479085 0.9343081 0.9758788 0.9795084 0.9807412 #>  [375,] 0.34372213 0.4177594 0.5175912 0.5779040 0.6037200 0.6079134 0.6227190 #>  [376,] 0.37602200 0.6293678 0.6585250 0.7152489 0.7625980 0.7893962 0.8198740 #>  [377,] 0.28124579 0.4375378 0.4743594 0.5173432 0.5393509 0.5448121 0.5457058 #>  [378,] 0.39000298 0.3934276 0.4244817 0.5871293 0.6072925 0.6240229 0.6297678 #>  [379,] 0.65405027 0.7063780 0.7444970 0.7981982 0.8821020 0.9134317 0.9331176 #>  [380,] 0.78712638 0.8637833 0.9191154 0.9388306 0.9928065 1.0681452 1.0812571 #>  [381,] 0.38316080 0.4254740 0.5784671 0.6063250 0.6136227 0.6297678 0.6312752 #>  [382,] 0.30026607 0.3110621 0.4092289 0.4382520 0.4580173 0.4652610 0.4771964 #>  [383,] 0.36788043 0.3880844 0.4321263 0.5463426 0.6055473 0.6905166 0.7274872 #>  [384,] 0.34398613 0.6227662 0.6546474 0.6670078 0.6941218 0.7740987 0.8114194 #>  [385,] 0.31207249 0.4881619 0.5458436 0.5637967 0.6558053 0.6927625 0.7368653 #>  [386,] 0.54253084 0.5804239 0.5962170 0.6098405 0.6410647 0.6412678 0.6577012 #>  [387,] 0.68824611 0.7474812 0.8273511 0.8506486 0.8815822 0.9518708 0.9834764 #>  [388,] 0.89144445 0.9200518 0.9608449 0.9850533 0.9881738 0.9929727 0.9972468 #>  [389,] 0.48195091 0.5000493 0.5487482 0.5976249 0.6817767 0.9130724 0.9815019 #>  [390,] 0.36434119 0.4440863 0.4776314 0.6523293 0.7467361 0.7969320 0.8253864 #>  [391,] 0.50790117 0.9496172 1.0301530 1.0337894 1.1279955 1.3000803 1.3045666 #>  [392,] 0.42356527 0.4457774 0.5271390 0.5746375 0.6159515 0.6194464 0.6801262 #>  [393,] 0.36349612 0.4256149 0.5016250 0.5495123 0.5583164 0.5816025 0.5832105 #>  [394,] 0.68601452 0.7366677 0.7526387 0.8096624 0.9501725 0.9775831 0.9963638 #>  [395,] 0.31628307 0.5976249 0.6205816 0.6262455 0.7222328 0.7332925 0.7895004 #>  [396,] 0.39238712 0.4224720 0.5045005 0.5239747 0.5543190 0.5759069 0.6113085 #>  [397,] 0.64343386 0.6540682 0.6999842 1.0965090 1.1194758 1.1347828 1.1368822 #>  [398,] 0.42247204 0.4603230 0.4914830 0.5311910 0.5452708 0.5668995 0.5746434 #>  [399,] 0.62505698 0.6500589 0.7112722 0.7421834 0.7585159 0.8536542 0.8932943 #>  [400,] 0.44207446 1.0771492 1.1215788 1.1715005 1.1898634 1.3880231 1.3912924 #>  [401,] 0.77132482 0.8567897 0.8770233 0.8887117 0.9202698 0.9345295 0.9827155 #>  [402,] 0.24613135 0.4606032 0.7400121 0.7575362 0.8114194 0.8369016 0.8794546 #>  [403,] 0.29867093 0.6341284 0.6417457 0.7478522 0.7981982 0.8867088 0.9222783 #>  [404,] 0.39691683 0.4336546 0.5067644 0.5421609 0.5723194 0.5750905 0.6536905 #>  [405,] 0.30236501 0.3371759 0.4411178 0.4432093 0.4549463 0.4811154 0.5025859 #>  [406,] 0.37920380 0.4070195 0.5175912 0.5508439 0.5998510 0.6651693 0.6786752 #>  [407,] 0.78932627 0.8039468 0.8361178 0.9039965 0.9363303 0.9455431 0.9939926 #>  [408,] 0.26906295 0.3040664 0.4265415 0.4417329 0.4591439 0.4660304 0.5696693 #>  [409,] 0.72112318 0.7658010 0.8713990 0.8945068 0.9209439 0.9293792 0.9807412 #>  [410,] 0.54811938 0.5571425 0.6287206 0.6981983 0.7415920 0.7544716 0.8540796 #>  [411,] 0.28582626 0.4574387 0.4848192 0.5599433 0.5678631 0.6527015 0.6870290 #>  [412,] 0.49231269 0.5146447 0.5236904 0.6581170 0.6606457 0.6733038 0.7185747 #>  [413,] 0.86369328 0.9119461 1.1062355 1.1775471 1.1850562 1.1931755 1.1940593 #>  [414,] 0.36982355 0.5168968 0.5379755 0.5999639 0.6163077 0.6512878 0.6559164 #>  [415,] 0.47103894 0.6950143 0.7507458 0.8712297 0.8883761 0.9533668 0.9665925 #>  [416,] 0.56044255 0.6827237 0.7951625 0.8321901 0.8597446 0.9711206 0.9828941 #>  [417,] 0.68408652 0.6848196 0.6933363 0.7753184 0.7908567 0.7911561 0.8907999 #>  [418,] 0.45743869 0.4608296 0.5380305 0.6690196 0.6906544 0.6939149 0.7351002 #>  [419,] 0.89213083 1.0286224 1.0637538 1.2200925 1.2613518 1.2669746 1.3027923 #>  [420,] 0.38077214 0.4217957 0.4546519 0.5399121 0.5918935 0.6203304 0.6325487 #>  [421,] 0.52613947 0.9787880 1.0844159 1.1294117 1.1571816 1.1798376 1.1835736 #>  [422,] 0.28511410 0.4162855 0.4768260 0.4801863 0.5041475 0.5225136 0.6097962 #>  [423,] 0.11300811 0.3491556 0.3547878 0.4951474 0.4999247 0.5124846 0.5212575 #>  [424,] 0.96461262 1.0029236 1.1051712 1.2669054 1.3115483 1.3168707 1.3235473 #>  [425,] 0.57935859 0.8066565 0.8624519 0.9257776 0.9644563 1.0176178 1.0280327 #>  [426,] 0.34523258 0.3531987 0.3744456 0.4150241 0.4549961 0.4688855 0.4746185 #>  [427,] 0.32791326 0.4950806 0.6280949 0.7751025 0.8420736 0.8687910 0.8731333 #>  [428,] 0.43776331 0.4818194 0.5389093 0.5932375 0.6225021 0.6787921 0.6854013 #>  [429,] 0.28082858 0.2919650 0.3319493 0.3837702 0.4425003 0.4679047 0.4983493 #>  [430,] 0.27014457 0.3141030 0.3965368 0.4435858 0.4593026 0.4979736 0.5041475 #>  [431,] 0.40984678 0.4555126 0.4704339 0.5421609 0.6461386 0.6688291 0.6765117 #>  [432,] 0.41060879 0.4552766 0.4855950 0.4874822 0.5448121 0.5716446 0.6420330 #>  [433,] 0.31248100 0.3886763 0.4341295 0.5148172 0.5305760 0.5849457 0.6280712 #>  [434,] 0.42350412 0.4416291 0.4989739 0.5177597 0.5249321 0.5518212 0.6379368 #>  [435,] 0.35479312 0.4519906 0.4909061 0.5450248 0.5778542 0.6022690 0.6471172 #>  [436,] 0.38155815 0.4564572 0.4653986 0.6029067 0.6148220 0.6406844 0.6438529 #>  [437,] 0.26503060 0.3564071 0.3602307 0.4655296 0.4839175 0.6075924 0.6429411 #>  [438,] 0.52195701 0.6230056 0.6420838 0.6854061 0.8547962 0.8585151 0.9239766 #>  [439,] 0.21314459 0.3002661 0.4389476 0.4749265 0.4866020 0.4930190 0.5425757 #>  [440,] 0.44403242 0.4925053 0.5350704 0.5502277 0.5763749 0.6052029 0.6056056 #>  [441,] 0.61757158 0.9208217 0.9649887 0.9849511 1.0228999 1.0229770 1.0483409 #>  [442,] 0.39933149 0.4313543 0.4428798 0.5467909 0.5656263 0.6186450 0.6189376 #>  [443,] 0.26107413 0.3211473 0.3579175 0.4188705 0.4383110 0.4443386 0.4908297 #>  [444,] 0.45345189 0.4871965 0.5274070 0.5311544 0.5340214 0.6269242 0.6385078 #>  [445,] 0.60760167 0.6124377 0.6744272 0.7803288 0.7996709 0.8178424 0.9219422 #>  [446,] 0.38269738 0.8006448 0.8921308 0.9343776 0.9763732 1.1274071 1.1555481 #>  [447,] 0.22664809 0.4998836 0.6564700 0.7041070 0.7078922 0.7456247 0.8425252 #>  [448,] 0.15953551 0.4683517 0.6165811 0.6403716 0.6404208 0.6429618 0.6667285 #>  [449,] 0.38476605 0.5847199 0.9225560 1.0058373 1.0265435 1.0886779 1.1191891 #>  [450,] 0.37958277 0.4738659 0.6706418 0.6762403 0.7365833 0.7472350 0.7540989 #>  [451,] 0.29533902 0.3904062 0.4059239 0.4909061 0.5157610 0.5457756 0.6537565 #>  [452,] 0.18384470 0.2574195 0.3023650 0.3676943 0.3923155 0.4727144 0.4880142 #>  [453,] 0.23315693 0.3609791 0.3686906 0.3789479 0.4420219 0.4751119 0.5400228 #>  [454,] 0.44466018 0.5328233 0.5390179 0.5696693 0.5698916 0.5723353 0.5998823 #>  [455,] 0.46418727 0.4929105 0.5296940 0.5360746 0.5422465 0.5431432 0.5573757 #>  [456,] 0.51598262 0.6939149 0.6990771 0.7921608 0.8264805 0.9204554 0.9264927 #>  [457,] 0.34140367 0.4628475 0.4815389 0.6104413 0.6600520 0.7151239 0.7551210 #>  [458,] 0.39276418 0.6139554 0.7781823 0.8076317 0.8388911 1.0022214 1.1317368 #>  [459,] 0.26742910 0.3032557 0.4038843 0.4215152 0.4813051 0.5595818 0.5599605 #>  [460,] 0.38773330 0.4136223 0.4252331 0.4680341 0.5068238 0.5474049 0.5712320 #>  [461,] 0.44706637 0.4658726 0.4728639 0.5482704 0.5574257 0.5692769 0.5699098 #>  [462,] 0.31787977 0.3960255 0.3980539 0.3986121 0.4014940 0.4651564 0.4655723 #>  [463,] 0.23317209 0.2860726 0.3679543 0.3795805 0.4600902 0.4983493 0.5318898 #>  [464,] 0.18794566 0.3734149 0.4102973 0.4602306 0.4906990 0.5148421 0.5245963 #>  [465,] 0.38316080 0.5084588 0.5256495 0.5667430 0.5888920 0.6245746 0.6425686 #>  [466,] 0.21314459 0.3958036 0.4390601 0.4652610 0.5039770 0.5238077 0.5286713 #>  [467,] 0.25776253 0.3790156 0.5072713 0.5393935 0.5979930 0.6448612 0.6681422 #>  [468,] 0.44808254 0.5342290 0.5702193 0.6992933 0.7299866 0.8022445 0.8614753 #>  [469,] 0.58753280 1.0010168 1.0115016 1.1136304 1.1461321 1.2826051 1.3319639 #>  [470,] 0.06871872 0.2665413 0.4164330 0.4986539 0.5572452 0.5992714 0.6671332 #>  [471,] 0.38440841 0.4396175 0.4941508 0.5556599 0.6093660 0.6192375 0.6265475 #>  [472,] 0.52462764 0.5737900 0.5913905 0.6351038 0.6786769 0.6824583 0.7117206 #>  [473,] 0.60979616 0.6473506 0.6620913 0.6850623 0.6952677 0.7310414 0.7359958 #>  [474,] 0.47060998 0.5004586 0.5074360 0.5225136 0.5393015 0.5699606 0.5723194 #>  [475,] 0.46699542 0.5723795 0.5991759 0.6209194 0.6403321 0.6484395 0.6532929 #>  [476,] 0.59209065 0.7777582 0.7935589 0.8319618 0.8756145 0.9209439 0.9343081 #>  [477,] 0.24613135 0.5083637 0.6348427 0.6670078 0.7928844 0.8935746 0.9435160 #>  [478,] 0.25834011 0.3903081 0.4037101 0.4056926 0.4102973 0.4180639 0.4281105 #>  [479,] 0.43831103 0.5027846 0.5079410 0.5089955 0.5507408 0.5698916 0.5749961 #>  [480,] 0.50219646 0.5140668 0.7407528 0.8011479 0.8202017 0.8820785 0.9272302 #>  [481,] 0.40673015 0.4252331 0.4816252 0.5914805 0.6129910 0.7163955 0.7701150 #>  [482,] 0.44682260 0.4950806 0.6106882 0.6732365 0.6839827 0.7192578 0.7330679 #>  [483,] 0.67102045 0.7830074 0.8474764 0.8691102 0.8699342 0.8757645 0.9474823 #>  [484,] 0.38083161 0.3877333 0.4067301 0.6170202 0.6676402 0.7525654 0.8376672 #>  [485,] 0.82673788 1.0858125 1.0874065 1.1337415 1.1967386 1.2199732 1.2831250 #>  [486,] 0.60285998 0.6600520 0.7028447 0.7787815 0.7819103 0.7881833 0.7977845 #>  [487,] 0.22976604 0.3644313 0.3789479 0.3824582 0.4117915 0.5140069 0.5218521 #>  [488,] 0.59869922 0.6273255 0.6905824 0.7366677 0.8110685 0.8677613 0.8686840 #>  [489,] 0.64622248 0.7417742 0.8260102 0.8886359 0.9251622 0.9834737 1.0181844 #>  [490,] 0.61541515 0.7009581 0.7339311 0.7358090 0.8230886 0.8319175 0.8447853 #>  [491,] 0.52348618 0.5737900 0.6675644 0.7701293 0.7837152 0.8399245 0.8676661 #>  [492,] 0.32775236 0.3493342 0.4390601 0.4432512 0.4451287 0.4632520 0.4771964 #>  [493,] 0.61401287 0.7494150 0.7727121 0.9025165 0.9145882 0.9165399 0.9219391 #>  [494,] 0.73686907 1.1235174 1.1532584 1.1701375 1.1718342 1.2240063 1.3020256 #>  [495,] 0.65274741 0.6790349 0.6868635 0.7237403 0.7347860 0.7356052 0.7802867 #>  [496,] 0.66989069 0.6906767 0.7007948 0.7377237 0.8237035 0.8813422 0.8936825 #>  [497,] 0.51263735 0.5402678 0.5751923 0.5784671 0.5791733 0.5849457 0.5991182 #>  [498,] 0.27201295 0.4585323 0.4780684 0.6431795 0.6578966 0.7321939 0.8224821 #>  [499,] 0.43562438 0.5838864 0.6214484 0.7163638 0.7564621 0.7761190 0.8286322 #>  [500,] 0.40255286 0.4050833 0.4880142 0.5115850 0.5597200 0.5623285 0.5645603 #>  [501,] 0.63111003 0.6557889 0.8755930 0.8845170 0.9007308 1.0335525 1.0353599 #>  [502,] 0.44162908 0.5534233 0.5858626 0.6355162 0.6520530 0.6653001 0.7431775 #>  [503,] 0.22929244 0.4085544 0.4226711 0.4760229 0.5128216 0.6502542 0.6730743 #>  [504,] 0.48577417 0.7357395 0.7412948 0.7817799 0.8163634 0.8244541 0.8489197 #>  [505,] 0.20855892 0.3362172 0.4322237 0.4669161 0.4795854 0.4833911 0.5198646 #>  [506,] 0.66870781 1.1541586 1.2359808 1.2620623 1.2857950 1.3119919 1.4232036 #>  [507,] 0.43377472 0.5092976 0.5110235 0.5534233 0.5802145 0.6594024 0.6982721 #>  [508,] 0.43965253 0.7165284 0.8344001 0.8635252 0.9182352 0.9357682 1.0244202 #>  [509,] 0.55319359 0.6190071 0.6416964 0.6732875 0.7114571 0.7211128 0.7314383 #>  [510,] 0.56987824 0.6140129 0.8038782 0.8057024 0.8074941 0.8140909 0.8146708 #>  [511,] 0.53871531 0.5453961 0.6181869 0.6415747 0.6479790 0.6545318 0.6842146 #>  [512,] 0.34366163 0.3840401 0.5279982 0.5548366 0.5549901 0.5656759 0.5725950 #>  [513,] 0.50790117 0.8495410 0.9382667 1.1364125 1.1378713 1.1403451 1.2673691 #>  [514,] 0.33828070 0.4722096 0.4862113 0.5578821 0.5595346 0.5637704 0.5942126 #>  [515,] 0.68407846 0.7753184 0.7815542 0.8629894 0.8813935 1.0101130 1.0902911 #>  [516,] 0.45953273 0.6695041 0.7173615 0.7580533 0.7726073 0.7742768 0.8050179 #>  [517,] 0.41006701 0.5493585 0.5779026 0.6229081 0.6816669 0.6933892 0.7153722 #>  [518,] 0.31228134 0.4432113 0.4507406 0.5012716 0.5129743 0.5293531 0.5311910 #>  [519,] 0.19873601 0.5389093 0.5621557 0.5832105 0.6006306 0.6327554 0.6895884 #>  [520,] 0.25243580 0.5519172 0.6252349 0.6798965 0.6888640 0.7018770 0.7048297 #>  [521,] 0.28680174 0.6187497 0.6711493 0.7060571 0.7501878 0.7658995 0.8050180 #>  [522,] 0.24670742 0.2823564 0.5006840 0.5297542 0.6106882 0.6378847 0.6618446 #>  [523,] 0.74102777 0.7938500 0.8308033 0.8409959 0.9049392 0.9144393 0.9771665 #>  [524,] 1.47899359 1.6833734 1.8080974 1.8229951 1.8568608 1.9084404 1.9907289 #>  [525,] 0.23526534 0.2568780 0.2974816 0.4635971 0.5852440 0.6005118 0.6418710 #>  [526,] 0.70079479 0.7341477 0.7344739 0.7875244 0.8146621 0.8854445 0.9012452 #>  [527,] 0.39933149 0.4641364 0.5022086 0.5153069 0.5456251 0.5561802 0.5585575 #>  [528,] 0.45513529 0.7946556 0.9518708 1.0326596 1.0358790 1.0819044 1.0839585 #>  [529,] 0.23825973 0.8361178 0.9511690 1.0039775 1.1385537 1.1548919 1.2606214 #>  [530,] 0.73788785 0.7751025 0.9119461 1.0095212 1.0190723 1.0219866 1.0313053 #>  [531,] 0.30934577 0.7261464 0.7309213 0.7514681 0.7664130 0.7719747 0.7793311 #>  [532,] 0.62586022 0.6469281 0.8427676 0.9984122 1.0097829 1.0351610 1.0400281 #>  [533,] 1.20223233 1.3962126 1.4361488 1.4828528 1.5077060 1.5168453 1.5306282 #>  [534,] 0.48708689 0.7761190 0.7777406 0.7947935 0.9170826 1.0681241 1.1188537 #>  [535,] 0.43300081 0.4504761 0.4675766 0.5226944 0.5328028 0.6906767 0.7204733 #>  [536,] 0.26107413 0.3059713 0.3316848 0.3426753 0.3559634 0.3602434 0.4610570 #>  [537,] 0.36788043 0.4009039 0.5223831 0.5878701 0.6187649 0.6320372 0.6447293 #>  [538,] 0.29980146 0.4432512 0.5077859 0.5295990 0.5367938 0.5650142 0.6005759 #>  [539,] 0.25091231 0.4427903 0.4837330 0.5092775 0.6797807 0.6954875 0.7104353 #>  [540,] 0.30992044 0.3436616 0.3493345 0.4620443 0.4947056 0.5101990 0.5391502 #>  [541,] 0.37466869 0.4724188 0.5879572 0.6018173 0.6031142 0.6293678 0.6372477 #>  [542,] 0.29858179 0.3841931 0.3959561 0.5024054 0.5496862 0.5731698 0.5993651 #>  [543,] 1.09122300 1.2347260 1.3839958 1.4158339 1.5642849 1.6381827 1.7041840 #>  [544,] 0.23216586 0.2989698 0.3003554 0.3732734 0.3986121 0.4555126 0.5072185 #>  [545,] 0.31448253 0.5571425 0.5670071 0.7084213 0.7101988 0.7662521 0.7701152 #>  [546,] 0.55327432 0.6533902 0.7034590 0.7314383 0.7467353 0.7906846 0.8735177 #>  [547,] 0.37602200 0.5890256 0.6262455 0.6372477 0.6692353 0.7670251 0.7704583 #>  [548,] 0.17055557 0.2568780 0.3764121 0.3885919 0.4266872 0.4932760 0.6227190 #>  [549,] 0.42126214 0.5711409 0.6929366 0.7206858 0.7365700 0.7650172 0.7692440 #>  [550,] 0.24572687 0.3023789 0.4329745 0.4881619 0.5891457 0.6581368 0.7207245 #>  [551,] 0.27014457 0.4039112 0.4442709 0.4600719 0.5462964 0.6244631 0.6419228 #>  [552,] 0.94120429 1.0206974 1.1854617 1.2392153 1.2794817 1.2925755 1.3045666 #>  [553,] 0.36649316 0.4205856 0.4352433 0.4629009 0.4798423 0.4861152 0.5170850 #>  [554,] 0.61630773 0.6464587 0.7471850 0.9493585 0.9895451 0.9947786 1.0148594 #>  [555,] 0.33505138 0.4603230 0.4808423 0.4829742 0.5012716 0.5242530 0.5861207 #>  [556,] 0.28404324 0.3869230 0.4330430 0.5391003 0.5842189 0.5940960 0.6073446 #>  [557,] 0.31897074 0.6730791 0.6787728 0.7245034 0.7959046 0.8250744 0.8318133 #>  [558,] 0.42814509 0.4558486 0.5061070 0.5179251 0.5978410 0.6767150 0.7419622 #>  [559,] 0.36483382 0.4297540 0.5250047 0.5266007 0.5378445 0.5483115 0.5609829 #>  [560,] 0.32123787 0.3568809 0.4652210 0.4667588 0.5145179 0.5211393 0.5265832 #>  [561,] 0.24614741 0.2695228 0.3202779 0.4285492 0.5191519 0.5962803 0.5979310 #>  [562,] 0.20251638 0.2799276 0.4987389 0.5005967 0.5407187 0.5667430 0.5771283 #>  [563,] 0.35565994 0.3904062 0.4451036 0.4454667 0.4808423 0.5016936 0.5064944 #>  [564,] 0.25243580 0.4890801 0.5082224 0.5831605 0.7242099 0.7650629 0.7750805 #>  [565,] 0.22963173 0.4222940 0.4950298 0.5180584 0.5600844 0.6693587 0.6940636 #>  [566,] 0.47776516 0.5356855 0.7355553 0.7810252 0.7876475 0.8005719 0.8296864 #>  [567,] 0.46007073 0.5831605 0.5999639 0.6282199 0.6798965 0.6807868 0.6912538 #>  [568,] 0.26582475 0.4811257 0.5085089 0.5552474 0.5575716 0.6045276 0.6362629 #>  [569,] 0.40276195 0.4498686 0.4814276 0.5004586 0.5475348 0.5804239 0.6139438 #>  [570,] 0.26932775 0.3158727 0.4316656 0.4682757 0.4951716 0.5012727 0.5676047 #>  [571,] 0.79341256 0.8078005 0.9136499 1.0113813 1.0559976 1.1513116 1.1536827 #>  [572,] 0.22259778 0.5065417 0.5770693 0.6354614 0.6668660 0.6896168 0.7224890 #>  [573,] 0.36791223 0.4122923 0.4595327 0.5260961 0.6202617 0.6280712 0.6299681 #>  [574,] 0.61923747 0.6235464 0.6404208 0.7029254 0.7074519 0.7076574 0.7456894 #>  [575,] 0.51581018 0.5356855 0.5639575 0.5841314 0.6540503 0.6622870 0.7394152 #>  [576,] 0.61155007 1.0643215 1.1799902 1.2827125 1.3692239 1.4027675 1.4384864 #>  [577,] 0.38838918 0.4593026 0.4600719 0.4981046 0.5307241 0.5325836 0.5518212 #>  [578,] 0.25741949 0.2588494 0.2985027 0.4013169 0.4811154 0.5574257 0.5645603 #>  [579,] 0.14445581 0.3293962 0.5005967 0.6316085 0.6437487 0.7351557 0.7672171 #>  [580,] 0.22227698 0.2989698 0.3784022 0.4462780 0.4655723 0.5745505 0.6622061 #>  [581,] 0.76857307 0.8555977 0.8583291 0.9202982 0.9232950 0.9285631 0.9397371 #>  [582,] 0.40276195 0.4736238 0.4749825 0.4815856 0.5138419 0.6577012 0.6584426 #>  [583,] 0.56301149 0.5660296 0.5666283 0.5916877 0.6019872 0.6378847 0.6659717 #>  [584,] 0.53991209 0.5513235 0.5722022 0.6198958 0.6233297 0.7087775 0.7761518 #>  [585,] 0.33079576 0.3585361 0.6016411 0.6063733 0.7240046 0.7542947 0.7640651 #>  [586,] 0.34960552 0.5268097 0.6284385 0.6659717 0.6741496 0.6870306 0.7203728 #>  [587,] 0.66117014 0.8135878 0.8735863 0.9008797 0.9718377 1.0200797 1.0463206 #>  [588,] 0.74098244 1.0311799 1.0696305 1.0787288 1.0977374 1.1030121 1.1464051 #>  [589,] 0.33567944 0.5710056 0.7567425 0.7641611 0.7783857 0.7814257 0.8805795 #>  [590,] 0.47411055 0.5229583 0.5435979 0.5759595 0.6384306 0.6497304 0.6691283 #>  [591,] 0.37788018 0.4131396 0.4923127 0.5272564 0.6780589 0.7772605 0.7801184 #>  [592,] 0.27568943 0.6374282 0.6608608 0.7204369 0.7561525 0.7691842 0.8341228 #>  [593,] 0.51147071 0.5591942 0.6151885 0.6220170 0.6680380 0.7142468 0.7146571 #>  [594,] 0.32647603 0.4002646 0.4082684 0.4459497 0.4667291 0.4798423 0.4847773 #>  [595,] 0.47522410 0.5305030 0.5576496 0.5859995 0.6446899 0.7463098 0.7516393 #>  [596,] 0.36887368 0.4703558 0.4928247 0.5676640 0.6502985 0.6605452 0.6795289 #>  [597,] 0.64693037 0.7241397 0.7250365 0.7834253 0.8254954 0.8416811 0.8771203 #>  [598,] 0.38419769 0.7908567 0.9110621 0.9331033 0.9420567 0.9744322 0.9850823 #>  [599,] 0.19194975 0.3549080 0.4847166 0.5751923 0.5822978 0.6365874 0.6523293 #>  [600,] 0.23679494 0.2697902 0.2802988 0.3267035 0.3677102 0.4274454 0.4417329 #>  [601,] 0.26840997 0.4029775 0.4580173 0.4930190 0.5328195 0.5727354 0.5993160 #>  [602,] 0.64926279 0.7561525 0.7790212 0.8712297 0.9304713 0.9457155 0.9989658 #>  [603,] 0.39067918 0.5191953 0.5223831 0.5507284 0.5552474 0.5599605 0.5873092 #>  [604,] 0.38643289 0.5490454 0.7040376 0.7129595 0.8772913 0.9544903 0.9985656 #>  [605,] 0.34960552 0.4426196 0.7100649 0.7197331 0.7413757 0.7610869 0.7744358 #>  [606,] 0.34238692 0.3484683 0.4091261 0.4164330 0.4712145 0.6215695 0.6733038 #>  [607,] 0.54037225 0.5750905 0.6412678 0.6843614 0.7200962 0.7364964 0.7373633 #>  [608,] 0.40616005 0.5361611 0.6063733 0.6768673 0.7274576 0.7341477 0.7804462 #>  [609,] 0.31373420 0.3519379 0.3840303 0.5453961 0.6918925 0.7013035 0.7131944 #>  [610,] 0.26253131 0.2972172 0.4027192 0.4331056 0.5407542 0.5452302 0.5463969 #>  [611,] 0.43193201 0.4440713 0.5599040 0.5612971 0.6131776 0.6204931 0.6669378 #>  [612,] 0.56272462 0.5924629 0.7912805 0.8123456 0.8914444 0.9364813 0.9381215 #>  [613,] 0.55319359 0.5936286 0.5993656 0.6533902 0.6745842 0.7123065 0.7449902 #>  [614,] 0.48065979 0.5346496 0.5888933 0.5924629 0.6120017 0.6377695 0.6772254 #>  [615,] 0.39941764 0.4427903 0.4685511 0.4904197 0.4985346 0.5088349 0.5918809 #>  [616,] 0.40539792 0.4106088 0.4940483 0.5098037 0.5403574 0.5924506 0.6108573 #>  [617,] 0.37588327 0.4897509 0.4975662 0.5305807 0.5418255 0.5598245 0.6148220 #>  [618,] 0.27525499 0.2852425 0.4553605 0.5073274 0.5303449 0.5463784 0.5509223 #>  [619,] 0.39070136 0.4237964 0.4833103 0.5276887 0.5416028 0.5455169 0.5556988 #>  [620,] 0.64692811 0.8072376 0.8073271 0.8905062 0.9775066 1.0965314 1.1288535 #>  [621,] 0.29647137 0.3023789 0.5223479 0.5493785 0.5611849 0.6799060 0.6927625 #>  [622,] 0.34258040 0.3451054 0.4818194 0.5621557 0.5771702 0.5984875 0.6009925 #>  [623,] 0.52553840 0.5511338 0.5958806 0.6422688 0.6465385 0.6935539 0.7352222 #>  [624,] 0.36170999 0.5143135 0.5539178 0.5556967 0.6129203 0.6194464 0.6277288 #>  [625,] 0.18647639 0.2089200 0.2538467 0.2816866 0.3901090 0.3921817 0.4095019 #>  [626,] 0.36842388 0.3835802 0.3920524 0.5996906 0.6255293 0.6316222 0.6424831 #>  [627,] 0.40295242 0.4095019 0.4135148 0.4219809 0.4852891 0.4887856 0.5055020 #>  [628,] 0.58592260 0.8740884 0.9389479 0.9970515 1.1053635 1.1506112 1.1671298 #>  [629,] 0.38022212 0.7801091 0.7918028 0.8723989 0.8840553 0.9371566 0.9660638 #>  [630,] 0.31235702 0.3644313 0.4362924 0.4567398 0.4669161 0.4853134 0.5305534 #>  [631,] 0.38898967 0.4053979 0.4375378 0.4535000 0.4874822 0.5129343 0.5488556 #>  [632,] 0.32670353 0.3360558 0.3941630 0.4237242 0.4314217 0.4531417 0.4660067 #>  [633,] 0.46855112 0.4889158 0.6251171 0.6351038 0.6445371 0.6659036 0.6735982 #>  [634,] 0.88845289 0.9865532 1.1986253 1.2825214 1.4162551 1.4249784 1.4538816 #>  [635,] 0.35248354 0.4131396 0.4439717 0.7267293 0.7535572 0.7640429 0.7906645 #>  [636,] 0.26932775 0.3729382 0.4451036 0.4676164 0.4762525 0.4812219 0.5039377 #>  [637,] 0.46792616 0.4999225 0.5174634 0.5643062 0.5703449 0.6503833 0.6597913 #>  [638,] 0.61757158 0.7718967 0.8936825 1.0167757 1.0659219 1.0930037 1.1271880 #>  [639,] 0.28607264 0.2919650 0.3602702 0.3608428 0.3781624 0.4102742 0.5046580 #>  [640,] 0.53359119 0.7166567 0.7245034 0.7703228 0.7736624 0.7771155 0.8469208 #>  [641,] 0.49806255 0.5342290 0.5400128 0.7185859 0.7410278 0.7764238 0.8156705 #>  [642,] 0.20251638 0.3928256 0.4368952 0.5099912 0.5242157 0.6268319 0.6316085 #>  [643,] 0.56468011 0.6186397 0.6559560 0.6933958 0.7409824 0.7557939 0.7830869 #>  [644,] 0.56722298 0.5938335 0.7152489 0.7476812 0.7686076 0.7692327 0.7725579 #>  [645,] 0.62912616 0.7358090 0.7523088 0.7634878 0.7639136 0.7926669 0.8802196 #>  [646,] 0.42561491 0.5095219 0.5487187 0.5871833 0.6067683 0.6135836 0.6234271 #>  [647,] 0.39173828 0.4596485 0.5493585 0.6986404 0.7576601 0.8181481 0.8273262 #>  [648,] 0.49334852 0.5174027 0.6055473 0.6333370 0.6457954 0.6635528 0.6823659 #>  [649,] 0.49361133 0.6500589 0.7843365 0.8129484 0.8335110 0.8417339 0.8459063 #>  [650,] 0.37092177 0.4506450 0.4596631 0.4928247 0.5038665 0.5500431 0.6208559 #>  [651,] 0.37074374 0.4432113 0.5684323 0.5759069 0.5871833 0.6000562 0.6022690 #>  [652,] 0.25798880 0.2914157 0.3362172 0.3686906 0.4653986 0.4709355 0.5106813 #>  [653,] 0.37464898 0.5121838 0.5511338 0.6846221 0.7020155 0.8174959 0.8332641 #>  [654,] 0.50398041 0.5503058 0.5612971 0.6116081 0.6264787 0.6331322 0.7272709 #>  [655,] 0.46189505 0.5021418 0.5646801 0.6546474 0.7276895 0.7406296 0.7496772 #>  [656,] 0.34891868 0.3596010 0.3883892 0.3965368 0.4039112 0.5026503 0.5597524 #>  [657,] 0.19891288 0.3909543 0.5061070 0.5892227 0.6700534 0.6727410 0.6879035 #>  [658,] 0.49579153 0.5827191 0.5975187 0.6262358 0.6489795 0.7177882 0.7204733 #>  [659,] 0.19454324 0.3880844 0.4533370 0.6562980 0.6939102 0.7131831 0.7181921 #>  [660,] 0.64208379 0.7047976 0.8489197 0.8740884 0.9350032 0.9652756 0.9685336 #>  [661,] 0.33808699 0.4231020 0.5344913 0.5703033 0.5723971 0.6265653 0.6316764 #>  [662,] 0.75608282 0.8361642 1.1188677 1.2515525 1.2635873 1.2923658 1.3417487 #>  [663,] 0.55500073 0.8300306 0.8391487 0.8506486 0.8537514 0.8890706 0.9189336 #>  [664,] 0.58495189 0.9179552 1.0198029 1.1589834 1.2095960 1.3490982 1.3510106 #>  [665,] 0.26121410 0.2992207 0.3366179 0.3835802 0.4407288 0.4445285 0.4658098 #>  [666,] 0.47181434 0.4837330 0.4889158 0.4904197 0.5390252 0.6254468 0.7596698 #>  [667,] 0.34870918 0.3597367 0.4423320 0.4602306 0.4667588 0.4829021 0.4847773 #>  [668,] 0.34746827 0.4440324 0.4510174 0.4792760 0.5427146 0.5487355 0.6455158 #>  [669,] 0.34732937 0.4029775 0.4254740 0.4907092 0.5642491 0.5717344 0.5888920 #>  [670,] 0.30474659 0.4946807 0.5723795 0.6961557 0.7304045 0.7866039 0.7973382 #>  [671,] 0.18541205 0.2625313 0.3821534 0.3980982 0.5005270 0.5025101 0.5175117 #>  [672,] 0.46757659 0.4838067 0.4894314 0.5305807 0.5647908 0.5975187 0.6221353 #>  [673,] 0.47443446 0.7727121 0.8770432 0.9110621 0.9197471 1.0237278 1.0463206 #>  [674,] 0.38269738 0.6573466 0.7753207 0.8074941 0.9025165 0.9307798 0.9482923 #>  [675,] 0.36880341 0.4941508 0.5191417 0.5657945 0.6688599 0.6825721 0.7029254 #>  [676,] 0.37097007 0.3896532 0.4117915 0.4368704 0.4401067 0.4593960 0.4853134 #>  [677,] 0.56012471 0.7227379 0.7913330 0.8514997 0.8591216 0.9627421 1.0910988 #>  [678,] 0.31492120 0.4680132 0.6419843 0.6567722 0.6835868 0.7211285 0.7327304 #>  [679,] 0.66181525 0.6724057 0.7186642 0.7709835 0.7942240 0.8041100 0.8121943 #>  [680,] 0.39595615 0.4355838 0.4778087 0.4824089 0.4988487 0.5484624 0.5746557 #>  [681,] 0.31587273 0.4043314 0.4762525 0.5039804 0.5092976 0.5340214 0.5921218 #>  [682,] 0.27369054 0.5335912 0.7040808 0.7260159 0.7639136 0.7959046 0.8274999 #>  [683,] 0.46838242 0.4776314 0.5969850 0.6414778 0.6739447 0.7169093 0.7178216 #>  [684,] 0.40195591 0.4710389 0.5228412 0.7189123 0.8909322 0.9304713 1.0830186 #>  [685,] 0.97320823 1.0759608 1.0814383 1.0838180 1.1684576 1.2642926 1.2875050 #>  [686,] 0.47311666 0.5114707 0.5202134 0.6214509 0.8008426 0.8085097 0.8188319 #>  [687,] 0.62518587 1.0142183 1.1102467 1.2616921 1.2959055 1.3544186 1.3881356 #>  [688,] 0.43211918 0.4800244 0.4801863 0.5438331 0.5456330 0.5623026 0.5984866 #>  [689,] 0.51386130 0.5243615 0.5712827 0.6884083 0.7107914 0.7549853 0.7688077 #>  [690,] 0.85219655 1.1329950 1.2284359 1.2753920 1.3045172 1.3916325 1.4006011 #>  [691,] 0.56392310 0.5935264 0.6250122 0.6357300 0.6495689 0.6933958 0.7054782 #>  [692,] 0.43562438 0.4971171 0.5712320 0.6129910 0.6767155 0.6855101 0.7525654 #>  [693,] 0.66768544 0.7921608 0.8060156 0.8076317 0.8369106 1.0263400 1.0943109 #>  [694,] 0.27568943 0.5265766 0.6370648 0.7014237 0.7918485 0.8064955 0.8071469 #>  [695,] 0.26583370 0.3614742 0.3974649 0.4847166 0.5615323 0.5681733 0.6123025 #>  [696,] 0.38965138 0.4330008 0.4894314 0.4975662 0.5432121 0.6342236 0.6698907 #>  [697,] 0.72316040 0.8817976 1.0326011 1.0814038 1.1383426 1.1830434 1.2175697 #>  [698,] 0.30904980 0.5655277 0.6994195 0.7338952 0.7804462 0.8486074 0.8568070 #>  [699,] 0.67190831 0.7453602 0.8269042 0.8320179 0.8842499 0.9486394 0.9616040 #>  [700,] 0.30230057 0.5496038 0.5908802 0.6434339 0.6793311 0.7315332 0.8035920 #>  [701,] 0.35688086 0.4130647 0.4183440 0.4535000 0.4589059 0.5393509 0.5403574 #>  [702,] 0.23526534 0.3764121 0.4222072 0.4683517 0.5123467 0.5553042 0.6075889 #>  [703,] 0.24131026 0.4105790 0.5529791 0.6008261 0.6081150 0.6165852 0.6277288 #>  [704,] 0.45708648 0.4658098 0.4985346 0.5452302 0.5572833 0.5742512 0.5952502 #>  [705,] 0.15454845 0.3639775 0.3663625 0.3749097 0.3837702 0.4250040 0.5118959 #>  [706,] 0.48196951 0.5218895 0.6230399 0.6699747 0.6816669 0.7132474 0.7658995 #>  [707,] 0.21850373 0.6567722 0.7206858 0.7713248 0.7740485 0.7916856 0.8262894 #>  [708,] 0.47396301 0.5993160 0.6119358 0.6291567 0.6302315 0.6445627 0.6768719 #>  [709,] 0.37920380 0.4718768 0.4800244 0.4833103 0.5045005 0.5450070 0.5452708 #>  [710,] 0.24131026 0.4778087 0.5213058 0.5556967 0.5638635 0.5691927 0.6184840 #>  [711,] 0.34492994 0.5218702 0.6187497 0.6497222 0.6699747 0.7075857 0.7277532 #>  [712,] 0.63010472 0.6563953 0.7361220 0.8838718 0.9431716 0.9583055 0.9869870 #>  [713,] 0.33194932 0.3608428 0.4196159 0.5455854 0.5514026 0.5515162 0.5591812 #>  [714,] 0.33818843 0.3807721 0.4040420 0.4424813 0.4680132 0.5827629 0.6486918 #>  [715,] 0.72496892 0.7333666 0.7587846 0.8294172 0.8388911 0.8690308 0.8704726 #>  [716,] 0.19575535 0.2185948 0.3449956 0.3493345 0.4532861 0.5549901 0.6443132 #>  [717,] 0.59700433 0.6493034 0.6572596 0.7060571 0.7075857 0.7197512 0.7555640 #>  [718,] 0.47220350 0.7874865 0.8873804 0.9693774 0.9903985 1.0013281 1.0437978 #>  [719,] 0.39342764 0.4341347 0.4641094 0.4786180 0.5099912 0.5372578 0.5771283 #>  [720,] 0.45134837 0.4718143 0.5827191 0.6307638 0.6735982 0.6818074 0.6907728 #>  [721,] 0.76661307 0.8404315 0.8945749 0.9027076 0.9110840 0.9594948 1.0005631 #>  [722,] 0.99525743 1.2344243 1.3163724 1.3807828 1.3838733 1.3892503 1.3892537 #>  [723,] 0.54575618 0.5678282 0.5935447 0.6216399 0.6519747 0.6808117 0.6829226 #>  [724,] 0.33130841 0.7604885 0.8276432 0.8637833 0.8643892 0.8817976 0.9392670 #>  [725,] 0.34946363 0.4274454 0.4413304 0.4660304 0.4968979 0.4980639 0.5236413 #>  [726,] 0.36107150 0.4736238 0.4858373 0.5256589 0.5329801 0.6156671 0.6497304 #>  [727,] 0.34659348 0.4469336 0.5595346 0.5817353 0.5988571 0.6095950 0.6156672 #>  [728,] 0.38404007 0.4456372 0.4951474 0.5121838 0.5366125 0.5428292 0.5737572 #>  [729,] 0.40508328 0.4150241 0.4633293 0.4708687 0.4974015 0.5464413 0.5702952 #>  [730,] 0.97970308 1.0651456 1.1271880 1.1549018 1.3407770 1.3493498 1.3945841 #>  [731,] 0.15454845 0.2808286 0.3135673 0.3781624 0.3806673 0.3924175 0.4195085 #>  [732,] 0.35193786 0.4054254 0.5310527 0.6311497 0.6906544 0.7105873 0.7465266 #>  [733,] 0.37340327 0.4019559 0.5877996 0.7507458 0.9072452 0.9379109 0.9930015 #>  [734,] 0.30295237 0.3964144 0.5193700 0.5305299 0.5389589 0.5583164 0.5637291 #>  [735,] 0.58739288 0.8258461 0.9262523 0.9822617 0.9857795 0.9869800 1.0086526 #>  [736,] 0.27176732 0.5329801 0.6167114 0.6490231 0.6766266 0.7018026 0.7412334 #>  [737,] 0.96013279 1.2368028 1.3036926 1.3338213 1.3968447 1.4396550 1.4861015 #>  [738,] 1.29570492 1.4158466 1.4741778 1.4808552 1.6323843 1.6403881 1.6920905 #>  [739,] 0.26139017 0.3679122 0.4059239 0.4354341 0.4847733 0.6067683 0.6471172 #>  [740,] 0.41097978 0.5219570 0.5979531 0.6005764 0.6217967 0.6527975 0.6940636 #>  [741,] 0.53321145 0.9968703 1.0017805 1.2267598 1.2705076 1.2767387 1.2806194 #>  [742,] 0.51870335 0.5660072 0.6322789 0.8332795 0.8420854 0.8618306 0.8714739 #>  [743,] 0.28240465 0.5305030 0.5682972 0.5807117 0.6241496 0.6398913 0.6954634 #>  [744,] 0.67877278 0.7166567 0.8895267 0.9435860 1.0940484 1.1285886 1.1481164 #>  [745,] 0.18541205 0.3503050 0.4168380 0.4331056 0.4443386 0.4752165 0.4943220 #>  [746,] 0.62872061 0.7269724 0.8040823 0.8286635 0.8729134 0.8879324 0.9129391 #>  [747,] 0.28240465 0.5170972 0.6446899 0.6651514 0.6806494 0.6959925 0.7945297 #>  [748,] 0.28730656 0.3901090 0.4219809 0.4856136 0.4988773 0.5140069 0.5153069 #>  [749,] 1.08119583 1.1829954 1.2320565 1.2371661 1.2550925 1.2673814 1.3097924 #>  [750,] 0.84954104 1.0337894 1.1290629 1.2742173 1.3051842 1.3224751 1.3247368 #>  [751,] 0.38557902 0.6522377 0.6707700 0.6768719 0.6988030 0.7351250 0.7374333 #>  [752,] 0.28714966 0.5979930 0.6307319 0.6567797 0.7333325 0.7500483 0.7549853 #>  [753,] 0.51102351 0.5130960 0.5258883 0.5394474 0.5406675 0.5455169 0.5556994 #>  [754,] 0.43053414 0.5712827 0.5935447 0.6311100 0.7479698 0.7869896 0.8245671 #>  [755,] 0.46215540 0.6103496 0.7241140 0.7549684 0.7753535 0.7815392 0.8188241 #>  [756,] 0.35853614 0.4061601 0.4338545 0.5655277 0.5934138 0.7524920 0.7875244 #>  [757,] 0.57498517 0.8202017 0.8591528 0.9708208 1.0414791 1.0414951 1.0547489 #>  [758,] 0.38898967 0.4428798 0.4552766 0.5457058 0.5924506 0.6271732 0.6384452 #>  [759,] 0.99136469 0.9928122 1.1980658 1.2705076 1.4114515 1.4170329 1.4327293 #>  [760,] 0.57430770 0.7631169 0.8192483 0.8711415 0.8786258 0.9048916 0.9577153 #>  [761,] 0.27201295 0.4573538 0.6334026 0.6514772 0.6791145 0.7517277 0.7800899 #>  [762,] 0.28431591 0.6243325 0.7322672 0.7358673 0.8254954 0.8458020 0.8781915 #>  [763,] 0.61356709 0.6178851 0.6877835 0.7196846 0.7610869 0.7701150 0.7713208 #>  [764,] 0.72697240 0.7740987 0.8007380 0.8762298 0.8813425 0.9793190 1.0388307 #>  [765,] 0.56272462 0.5833415 0.8659824 1.0206974 1.0260444 1.0301530 1.0326011 #>  [766,] 0.43450535 0.4991901 0.5670814 0.5714151 0.5868668 0.6210258 0.6257238 #>  [767,] 1.27242641 1.2949795 1.3204468 1.4092781 1.4827540 1.5589666 1.5725815 #>  [768,] 0.65624296 0.6986558 0.7008211 0.7449331 0.7588010 0.7600650 0.7907169 #>  [769,] 0.35973670 0.4427335 0.4652210 0.5064786 0.5313650 0.5477347 0.5481954 #>  [770,] 0.42409001 0.4625718 0.5287340 0.5728231 0.6165811 0.6216206 0.6272535 #>  [771,] 0.26287039 0.3337534 0.4267490 0.4402988 0.4598987 0.5274070 0.5533264 #>  [772,] 0.57261847 0.6827237 0.9331033 1.0784160 1.1189187 1.1589660 1.1864878 #>  [773,] 0.42229402 0.4470855 0.5006293 0.5332094 0.5757347 0.5824159 0.5868668 #>  [774,] 0.35203586 0.3758350 0.5098550 0.5298628 0.6461105 0.6479607 0.6621913 #>  [775,] 0.37583497 0.4312010 0.4555944 0.5500431 0.5714151 0.5892213 0.5902856 #>  [776,] 0.38440841 0.4105979 0.5170785 0.5657945 0.6113019 0.6848191 0.7971585 #>  [777,] 0.26583370 0.3549080 0.4733163 0.4843394 0.4858312 0.5560419 0.5685269 #>  [778,] 0.41027422 0.4217957 0.4425003 0.4652717 0.4775453 0.5118959 0.5454844 #>  [779,] 0.43193201 0.4705982 0.5445946 0.6370648 0.6374282 0.6740839 0.6745842 #>  [780,] 0.39778319 0.4080008 0.4252933 0.5055480 0.5119954 0.5267429 0.5787647 #>  [781,] 0.56044255 0.5661454 0.6974976 0.7953226 0.8143988 0.8277417 0.8840274 #>  [782,] 0.45548032 0.4883962 0.5006840 0.5119954 0.5160314 0.5692641 0.6646882 #>  [783,] 0.23825973 0.7893263 1.0389320 1.1424194 1.2114754 1.2691265 1.2713520 #>  [784,] 0.31207249 0.3877350 0.4329745 0.5223479 0.6842146 0.7041812 0.7261041 #>  [785,] 0.26503060 0.5195412 0.5238832 0.5314404 0.6048103 0.6534108 0.6779777 #>  [786,] 0.30325568 0.3906792 0.4009039 0.4374039 0.4674907 0.4830386 0.4833911 #>  [787,] 0.39765401 0.4396175 0.5170785 0.6319375 0.6379218 0.6394186 0.6670369 #>  [788,] 0.54141592 0.6986009 0.9027076 0.9326818 0.9337122 1.1513244 1.3054668 #>  [789,] 0.40509391 0.6223420 0.6538429 0.6597675 0.6902638 0.7005959 0.7114571 #>  [790,] 0.57430770 0.5913905 0.6296407 0.6344576 0.7175783 0.8033505 0.8040477 #>  [791,] 0.32493733 0.3875218 0.4267677 0.4315054 0.4822567 0.5380610 0.5667390 #>  [792,] 0.35494235 0.3710229 0.4595098 0.5038665 0.5463784 0.5676640 0.5957466 #>  [793,] 0.42153361 0.4440863 0.4683824 0.5947308 0.7084240 0.7099423 0.7322672 #>  [794,] 0.36025929 0.3907014 0.3923871 0.4718768 0.4914830 0.5039377 0.5064944 #>  [795,] 0.22227698 0.2321659 0.2715647 0.3960255 0.4881930 0.5835307 0.5994003 #>  [796,] 0.35960099 0.4336546 0.4435858 0.4879446 0.5403723 0.5462964 0.5935394 #>  [797,] 0.21608211 0.4362924 0.5353076 0.5716946 0.6004058 0.6548469 0.6585765 #>  [798,] 0.40594170 0.4215336 0.4983203 0.6243325 0.6265653 0.6414778 0.7541610 #>  [799,] 0.39995864 0.4342935 0.5157100 0.5683219 0.5726571 0.5916877 0.6274556 #>  [800,] 0.72842358 0.7417742 0.8000376 0.8241129 1.0305653 1.1493383 1.2923722 #>  [801,] 0.32493733 0.3328211 0.4367829 0.4890801 0.5581619 0.6252349 0.6310147 #>  [802,] 0.45007685 0.5487482 0.6205816 0.6332731 0.6350165 0.6464435 0.7222226 #>  [803,] 0.55132345 0.6805830 0.7634878 0.9088521 0.9213199 0.9266511 0.9515470 #>  [804,] 0.38225156 0.4267490 0.4679262 0.4906115 0.5352904 0.5600844 0.6196626 #>  [805,] 0.80744691 0.9112644 0.9767514 0.9869004 0.9906952 1.0125822 1.2871137 #>  [806,] 0.51784776 0.6613392 0.8169065 0.8340746 0.9134317 0.9941348 1.1263396 #>  [807,] 0.27176732 0.6156671 0.6583072 0.6656549 0.7654425 0.8253512 0.8290164 #>  [808,] 0.26139017 0.2953390 0.3562616 0.5260961 0.5397598 0.5574256 0.5778542 #>  [809,] 0.34608660 0.3663625 0.4195085 0.5296506 0.5827799 0.5938688 0.6072119 #>  [810,] 0.22341132 0.3904088 0.4811257 0.5250047 0.5494786 0.5541679 0.6223947 #>  [811,] 0.38123235 0.5159826 0.6527015 0.6558053 0.6690196 0.7704745 0.7786174 #>  [812,] 0.38022212 0.9744054 0.9768292 1.0021315 1.0839585 1.0980944 1.1896244 #>  [813,] 0.28431591 0.4059417 0.5947308 0.6964829 0.7169093 0.7854173 0.8397998 #>  [814,] 0.20968638 0.3054223 0.3178798 0.3434683 0.3958036 0.4451287 0.4727254 #>  [815,] 0.30295237 0.4226711 0.4448504 0.4471537 0.4920348 0.5016250 0.5449851 #>  [816,] 0.36010471 0.6177930 0.7597948 0.8000376 0.8317231 0.8874271 0.9102303 #>  [817,] 0.34754536 0.4551196 0.5435082 0.5830661 0.5929682 0.6520846 0.6873685 #>  [818,] 0.29858231 0.3428687 0.3484683 0.4295027 0.4967476 0.4986539 0.5212575 #>  [819,] 0.46410943 0.5148172 0.5681534 0.5690199 0.6072925 0.6323082 0.7278726 #>  [820,] 0.28524251 0.3710229 0.4619547 0.5871148 0.6547934 0.6745945 0.6821269 #>  [821,] 0.43678295 0.4446602 0.4951716 0.5250052 0.5380610 0.5393921 0.5686576 #>  [822,] 0.82983811 0.9208217 0.9284017 1.0659219 1.0795379 1.1698854 1.1932182 #>  [823,] 0.42854925 0.4561653 0.4805230 0.5123467 0.5174634 0.5235020 0.5305980 #>  [824,] 0.24692641 0.3211473 0.3426753 0.3449894 0.4029524 0.4168380 0.5096456 #>  [825,] 0.75185883 0.8655645 0.9072452 0.9910932 1.0474969 1.0481153 1.0724946 #>  [826,] 1.57124794 1.8040877 1.8198941 2.0349062 2.0692814 2.1172224 2.1855152 #>  [827,] 0.47220959 0.5733758 0.6095950 0.6154152 0.6509401 0.6774735 0.6836576 #>  [828,] 0.39765401 0.4637892 0.5888744 0.6209732 0.7479698 0.7879663 0.8137139 #>  [829,] 0.38083161 0.4136223 0.4816252 0.6138251 0.6767155 0.7035545 0.7537164 #>  [830,] 0.33079576 0.4981046 0.5026503 0.5934138 0.6379368 0.7274576 0.7641580 #>  [831,] 0.33282114 0.3875218 0.5082224 0.5532743 0.6217412 0.6354614 0.6888640 #>  [832,] 0.36559025 0.3909543 0.6025941 0.6086781 0.6423751 0.6590358 0.7370316 #>  [833,] 0.25091231 0.4772044 0.5088349 0.5728146 0.6254468 0.7841563 0.8206485 #>  [834,] 0.29697690 0.4145094 0.5009468 0.5421116 0.6120017 0.6142651 0.6769252 #>  [835,] 0.65844937 0.8144899 0.8276061 0.8474620 0.8601236 0.8871239 0.8955709 #>  [836,] 0.36982355 0.3788266 0.5746434 0.6754623 0.7151770 0.7471850 0.7512232 #>  [837,] 0.26654134 0.2985823 0.3147478 0.3423869 0.4740833 0.5145277 0.5606713 #>  [838,] 0.39282562 0.4341347 0.5407187 0.5876252 0.6240229 0.6697078 0.6785702 #>  [839,] 0.58261113 0.6836548 0.8930638 0.9910932 0.9989823 1.0065096 1.0449560 #>  [840,] 0.50486974 0.5432121 0.5924737 0.6218766 0.6384963 0.6681418 0.6795590 #>  [841,] 0.32659121 0.5826111 0.7234622 0.7320118 0.7433259 0.8941189 0.9557841 #>  [842,] 0.32155629 0.3491556 0.4238159 0.4532861 0.4690902 0.4712288 0.5101990 #>  [843,] 0.34603308 0.4669954 0.4752241 0.4946807 0.6806494 0.7308033 0.7875342 #>  [844,] 0.40389894 0.5503033 0.6212591 0.6986009 0.7641611 0.8127076 0.9678569 #>  [845,] 0.26584896 0.3617100 0.5271390 0.5293531 0.5487187 0.5586517 0.6000562 #>  [846,] 0.58208061 0.6385902 0.8083375 0.8329688 0.8833041 0.9857811 1.0019130 #>  [847,] 0.51631950 0.5296485 0.6233947 0.6581368 0.6711377 0.6986609 0.7368653 #>  [848,] 0.28216071 0.3220347 0.3493342 0.3841931 0.3846462 0.4355838 0.4423320 #>  [849,] 0.35882061 0.4772453 0.6323082 0.6485730 0.6546196 0.6958074 0.7271717 #>  [850,] 0.28714966 0.3790156 0.5031530 0.5352931 0.5723971 0.5764384 0.5931626 #>  [851,] 0.36107150 0.4542727 0.4749825 0.5909884 0.5924737 0.6168903 0.6762071 #>  [852,] 0.24426581 0.4628475 0.4662735 0.7540798 0.7664130 0.7801091 0.7953002 #>  [853,] 0.30934577 0.5242157 0.5316987 0.5650310 0.5876252 0.6261337 0.6856158 #>  [854,] 0.56301149 0.6227662 0.6310043 0.6348427 0.6584787 0.6848253 0.7153722 #>  [855,] 0.50944293 0.5265766 0.5445946 0.5657191 0.5668777 0.5952502 0.6529225 #>  [856,] 0.61863970 0.9375368 0.9526831 1.0903172 1.0977374 1.1539677 1.1628571 #>  [857,] 0.44682260 0.5107970 0.5297542 0.5484624 0.5526299 0.5691927 0.6081150 #>  [858,] 0.48678762 0.5576496 0.5682972 0.6333892 0.6710205 0.7290125 0.7533678 #>  [859,] 0.38557902 0.5070344 0.5193947 0.5957761 0.6282400 0.6604020 0.6905525 #>  [860,] 0.27345076 0.2998015 0.5339085 0.5826461 0.6031065 0.6146501 0.6161670 #>  [861,] 0.36010471 0.6453737 0.6462225 0.7331427 0.7948138 0.8092513 0.8241129 #>  [862,] 0.48158559 0.5648616 0.5688620 0.6029858 0.6168903 0.6688306 0.6790349 #>  [863,] 0.27369054 0.6291262 0.7357172 0.7703228 0.8107766 0.8116765 0.8644989 #>  [864,] 0.41279336 0.4267677 0.4414945 0.5013315 0.5250052 0.5291187 0.5936286 #>  [865,] 0.39231554 0.4013169 0.4025529 0.4566154 0.5025859 0.5085348 0.5229862 #>  [866,] 0.34492994 0.4325407 0.4837833 0.5769936 0.6230399 0.6444568 0.6749318 #>  [867,] 0.97101743 1.0125822 1.1012032 1.1154127 1.2370989 1.2771541 1.2823782 #>  [868,] 1.45779383 1.5975725 1.7037410 1.7739268 1.8171425 1.9969699 2.0561768 #>  [869,] 0.30767642 0.6566940 0.7519419 0.7540646 0.7658010 0.7702247 0.8375788 #>  [870,] 0.34548453 0.3664932 0.4057226 0.5048972 0.5485762 0.5519307 0.5610929 #>  [871,] 0.51464467 0.6475971 0.6780589 0.7178691 0.8147825 0.8197354 0.8667851 #>  [872,] 0.61243769 0.6527474 0.7376616 0.8691102 0.9046136 0.9362893 0.9683798 #>  [873,] 0.52436146 0.8519197 0.9127048 0.9282329 0.9665956 1.0018557 1.0074944 #>  [874,] 0.19873601 0.5816025 0.6923993 0.6995515 0.7307105 0.7531525 0.7829002 #>  [875,] 0.61155007 1.0904290 1.1481164 1.1550948 1.2184639 1.2982066 1.3046752 #>  [876,] 0.45378622 0.5094640 0.6413863 0.7222226 0.7234314 0.7669055 0.8211111 #>  [877,] 0.37861496 0.5284727 0.7386489 0.7953673 0.7961054 0.8706349 0.8872985 #>  [878,] 0.41696154 0.6280949 0.6284385 0.6957135 0.7197331 0.7376195 0.7392565 #>  [879,] 0.55072841 0.6221386 0.6668246 0.7051161 0.7404194 0.8476079 0.8659771 #>  [880,] 0.34286870 0.4091261 0.4738659 0.5687167 0.5709049 0.5955270 0.6594058 #>  [881,] 0.44261965 0.5158102 0.5268097 0.5940960 0.6544819 0.6646710 0.7063780 #>  [882,] 0.22976604 0.3609791 0.4332528 0.4401067 0.4567398 0.4709355 0.4795854 #>  [883,] 0.38476605 0.8147427 1.0202173 1.1035196 1.2285650 1.2613826 1.3097924 #>  [884,] 0.71326205 0.7672171 0.7929117 0.8221912 0.8422719 0.8812211 0.8890495 #>  [885,] 0.51740273 0.5975370 0.6024179 0.6108525 0.6437706 0.6724057 0.6910148 #>  [886,] 0.62007629 0.6785265 0.7114238 0.7129595 0.9083233 0.9773497 0.9778301 #>  [887,] 0.33567944 0.5497600 0.6420241 0.7253421 0.7442867 0.7698959 0.7923649 #>  [888,] 0.31007765 0.4095876 0.4345053 0.5287340 0.6335668 0.6667285 0.6812188 #>  [889,] 0.58739288 0.6639882 0.9434274 0.9612717 0.9834970 0.9856135 1.1002708 #>  [890,] 0.30950375 0.4621554 0.5846637 0.5957466 0.6852824 0.7167209 0.7504833 #>  [891,] 0.19289334 0.4196159 0.5296940 0.5764101 0.5948038 0.6605457 0.6611780 #>  [892,] 0.78217482 0.8205530 0.9732663 1.1413036 1.2688192 1.3038584 1.3222195 #>  [893,] 0.43377472 0.6060374 0.6790057 0.7126261 0.7558768 0.7607970 0.7849830 #>  [894,] 0.63659742 0.7518588 0.7651177 0.9330838 0.9612703 1.1594973 1.2259059 #>  [895,] 0.31007765 0.4629966 0.4991901 0.6086781 0.6796109 0.6945125 0.7221610 #>  [896,] 0.50727126 0.5459360 0.5722344 0.6562227 0.6567797 0.7113081 0.7142587 #>  [897,] 0.31040814 0.3109175 0.3744456 0.3903081 0.4186784 0.4521334 0.4641364 #>  [898,] 0.42363056 0.4480825 0.7374333 0.7764238 0.7948302 0.8216796 0.8655829 #>  [899,] 0.28680174 0.5580045 0.6444568 0.6493034 0.6497222 0.7132474 0.8453371 #>  [900,] 0.30230057 0.6146060 0.6999842 0.7396486 0.7650911 0.7675740 0.8522812 #>  [901,] 0.19575535 0.2355157 0.3312882 0.4620443 0.4690902 0.5548366 0.5624170 #>  [902,] 0.49334852 0.5372705 0.5657434 0.5716946 0.6315393 0.6378715 0.6461105 #>  [903,] 0.52799823 0.5391502 0.5749852 0.7110881 0.7318667 0.7328162 0.7518124 #>  [904,] 0.54937852 0.5668777 0.6255293 0.6489795 0.6585237 0.6587402 0.6620008 #>  [905,] 0.17055557 0.2974816 0.4222072 0.5043442 0.5307636 0.5923691 0.6768686 #>  [906,] 0.22929244 0.4388147 0.5740741 0.6843572 0.6974976 0.7056370 0.7951625 #>  [907,] 0.51631950 0.5611849 0.5657191 0.5891457 0.6437706 0.6618153 0.7535902 #>  [908,] 0.35898447 0.4101144 0.4414945 0.4591439 0.4822567 0.4968979 0.5043691 #>  [909,] 0.66117014 0.9904792 1.0694952 1.0752254 1.1189187 1.1399776 1.1760953 #>  [910,] 0.19891288 0.3655903 0.5273751 0.5298628 0.5927093 0.5978410 0.6741126 #>  [911,] 0.46387149 0.5766752 0.5769936 0.6845305 0.6950652 0.7369952 0.7753535 #>  [912,] 0.41057903 0.5056446 0.5213058 0.5667221 0.6997054 0.7136920 0.7306110 #>  [913,] 0.64931424 0.7839864 0.8257690 0.8867088 0.9715150 0.9769651 0.9913479 #>  [914,] 0.26287039 0.3780350 0.3988222 0.4561653 0.4765271 0.4906115 0.5144602 #>  [915,] 0.58471985 0.7167209 0.7340013 0.7588912 0.8147427 0.8511704 0.8547641 #>  [916,] 0.28344219 0.4457774 0.5098037 0.5143135 0.5217253 0.5390043 0.5586517 #>  [917,] 0.38643289 0.4763204 0.7114238 0.7415197 0.7554033 0.7774071 0.8953007 #>  [918,] 1.04679979 1.1589834 1.1675302 1.2100593 1.2455096 1.2482059 1.2957049 #>  [919,] 0.58161791 0.6209577 0.6417457 0.6467002 0.6622870 0.7124353 0.7127021 #>  [920,] 0.43133063 0.4551196 0.5246276 0.5402757 0.5845942 0.6131318 0.6296407 #>  [921,] 0.45735377 0.4780684 0.6841088 0.7365833 0.7487317 0.7806495 0.8530018 #>  [922,] 0.33132281 0.3821534 0.4027192 0.4237964 0.4682757 0.4943220 0.5012658 #>  [923,] 0.46387149 0.6563953 0.7815392 0.8946729 0.9052434 0.9150835 0.9151730 #>  [924,] 0.48924682 0.8046619 0.8545012 0.8723989 0.9218899 0.9455431 0.9493147 #>  [925,] 0.40958761 0.4629966 0.6088189 0.6113019 0.6265475 0.6403716 0.6583667 #>  [926,] 0.40660272 0.4706100 0.4768260 0.5425308 0.5475348 0.5890256 0.6444982 #>  [927,] 0.31492120 0.4040420 0.6166632 0.6203304 0.6455357 0.6538429 0.7215854 #>  [928,] 0.50985504 0.5273751 0.5361663 0.5372705 0.5583199 0.5892227 0.5935394 #>  [929,] 0.62626677 0.9770041 0.9865532 1.0686429 1.1182030 1.2713520 1.2980642 #>  [930,] 0.31000426 0.4998836 0.5238832 0.5681733 0.6650614 0.7535964 0.7605821 #>  [931,] 0.56855962 0.5834554 0.6256740 0.6787921 0.6895884 0.7409182 0.7433259 #>  [932,] 0.31628307 0.5000493 0.6350165 0.6821937 0.6917593 0.7002416 0.7165405 #>  [933,] 0.98697697 1.0036337 1.0110435 1.0264382 1.0659414 1.0762697 1.0836627 #>  [934,] 0.63010472 0.7112722 0.7777661 0.8158376 0.9366966 0.9783178 0.9995610 #>  [935,] 0.30009358 0.4747516 0.5496038 0.5752965 0.5953248 0.6146060 0.6401412 #>  [936,] 0.54382027 0.5820806 0.6112580 0.7074353 0.7512383 0.8867167 0.9151501 #>  [937,] 0.25303605 0.5173432 0.5467909 0.5807117 0.6006125 0.6047239 0.6333892 #>  [938,] 0.66133919 0.7706255 0.8821028 0.8942605 1.0453453 1.1038097 1.1065271 #>  [939,] 0.42356527 0.5217253 0.5753612 0.5790417 0.6699969 0.6840865 0.7088166 #>  [940,] 0.38123235 0.5458436 0.5763631 0.6221603 0.6233947 0.7041812 0.8007546 #>  [941,] 0.27156473 0.3003554 0.3784022 0.4014940 0.5030616 0.5145277 0.5336629 #>  [942,] 0.88730494 1.2259470 1.2721403 1.2805288 1.3474814 1.3933579 1.4390406 #>  [943,] 0.44416147 0.4999247 0.5095301 0.5101240 0.5420888 0.5933982 0.6013085 #>  [944,] 0.26231712 0.3046303 0.3135673 0.3460866 0.3639775 0.3795805 0.3869230 #>  [945,] 0.51792510 0.6668659 0.7396486 0.7860331 0.8016409 0.8084013 0.8484744 #>  [946,] 0.34398613 0.5798033 0.6310043 0.7928844 0.8813425 0.8903715 0.9378345 #>  [947,] 0.73571720 0.8481944 0.9758788 0.9771665 1.0584093 1.1017545 1.1058127 #>  [948,] 0.14930835 0.3316848 0.3449894 0.3585829 0.3896532 0.4188705 0.4752165 #>  [949,] 0.37803497 0.4191876 0.4607811 0.4908297 0.5079410 0.5257480 0.5426763 #>  [950,] 0.40433141 0.4534519 0.5448165 0.5503058 0.5622107 0.5676047 0.6086673 #>  [951,] 0.24228544 0.3627783 0.4099994 0.4191876 0.4198721 0.4625718 0.6186106 #>  [952,] 1.01980295 1.3407258 1.3606688 1.6959213 1.7044909 1.7576927 1.8340084 #>  [953,] 0.38503026 0.3921817 0.4407288 0.4471658 0.4667930 0.4979321 0.4982352 #>  [954,] 0.35479312 0.4600707 0.6559164 0.6644028 0.6912263 0.7010985 0.7904912 #>  [955,] 0.83296881 0.9060832 0.9790140 1.0379812 1.1194758 1.1341329 1.1354753 #>  [956,] 0.43142173 0.4469336 0.5236413 0.5285373 0.5305299 0.5630950 0.5910944 #>  [957,] 0.59769382 0.6031296 0.6149499 0.6202898 0.8122574 0.8636180 0.8985642 #>  [958,] 0.88330405 1.0110435 1.1737487 1.2570640 1.2653497 1.3392785 1.3934378 #>  [959,] 0.57114094 0.6526783 0.6674419 0.6753309 0.7249588 0.7251468 0.7726073 #>  [960,] 0.66768544 0.7734912 0.7781823 0.8294172 0.9108354 0.9542970 1.0086117 #>  [961,] 0.47922328 0.5202134 0.5882998 0.6052029 0.6168076 0.6220170 0.6436435 #>  [962,] 0.75608282 1.0398399 1.0777336 1.1164654 1.1464406 1.2388079 1.3226870 #>  [963,] 0.19454324 0.2875093 0.5463426 0.6418191 0.6471777 0.6480841 0.6502985 #>  [964,] 0.19194975 0.4858312 0.5402678 0.5519172 0.5615323 0.6777155 0.7002374 #>  [965,] 0.33828070 0.3410749 0.3531987 0.3872906 0.4510174 0.4633293 0.4873556 #>  [966,] 0.77400984 0.7805723 0.8317231 0.8495409 0.9216323 0.9378973 0.9461420 #>  [967,] 0.33907979 0.4215152 0.4325407 0.5766752 0.6373351 0.6626709 0.6946426 #>  [968,] 0.69929329 0.7774071 0.8451894 0.8551433 0.8772913 0.9173922 0.9615590 #>  [969,] 0.30950375 0.4595098 0.5871148 0.6103496 0.6221603 0.7105873 0.7131944 #>  [970,] 0.53069554 0.5696130 0.6266530 0.6647212 0.6896168 0.6902638 0.6933046 #>  [971,] 0.52886427 0.5582981 0.5583199 0.5752965 0.5926767 0.7315332 0.7440227 #>  [972,] 0.77189668 0.8298381 0.8670633 0.8813422 0.9187294 0.9362743 0.9486394 #>  [973,] 0.80744691 1.3359951 1.4678302 1.5100563 1.6371535 1.6596548 1.7249261 #>  [974,] 0.26893456 0.3581901 0.4515414 0.5012658 0.5249321 0.5599040 0.5599703 #>  [975,] 0.40647607 0.6351254 0.6431795 0.6458314 0.6791145 0.7238420 0.7441360 #>  [976,] 0.27992759 0.3293962 0.3530306 0.4368952 0.4779015 0.6550288 0.6853249 #>  [977,] 0.37654633 0.4374058 0.4459497 0.4629009 0.5257215 0.5298948 0.5551871 #>  [978,] 0.43687039 0.5241761 0.5369367 0.5599703 0.5710005 0.5784653 0.5902856 #>  [979,] 0.39173828 0.5199837 0.6229081 0.6584787 0.8239511 0.8781887 0.9095357 #>  [980,] 0.26725966 0.2984423 0.3977832 0.4019691 0.5670071 0.5881627 0.6119162 #>  [981,] 0.45513529 0.6104413 0.6639075 0.6648466 0.6882461 0.7540798 0.7651085 #>  [982,] 0.52964853 0.7249689 0.8511704 0.8558972 0.8917161 0.9108354 0.9110739 #>  [983,] 0.24426581 0.3414037 0.5688549 0.6639075 0.7410953 0.7817230 0.7972555 #>  [984,] 1.13787133 1.2185037 1.2733126 1.2890878 1.3025983 1.3142836 1.3392785 #>  [985,] 0.40855438 0.4276324 0.4388147 0.4471537 0.4843314 0.5467042 0.5699098 #>  [986,] 0.34510545 0.4904731 0.4998752 0.5172246 0.6020208 0.6658231 0.6914333 #>  [987,] 0.46757105 0.4708687 0.4897062 0.5175051 0.5229862 0.5255329 0.5597200 #>  [988,] 0.32998872 0.3475933 0.3921037 0.4002646 0.5339803 0.5480763 0.5484296 #>  [989,] 0.69907708 0.8369106 0.8643086 1.0086117 1.0952652 1.2850135 1.3275181 #>  [990,] 0.85219655 0.8643086 0.9506871 1.0038754 1.0069766 1.0657045 1.0860067 #>  [991,] 1.15890250 1.2753920 1.3273210 1.3281533 1.4027323 1.5348931 1.5642514 #>  [992,] 0.30597130 0.3282486 0.4553605 0.4929105 0.5178784 0.5335103 0.5360194 #>  [993,] 0.35562872 0.4150414 0.4772453 0.5084588 0.5826373 0.5990440 0.6350657 #>  [994,] 0.46234367 0.5746375 0.6108573 0.6585250 0.6818464 0.7013253 0.7126181 #>  [995,] 0.22259778 0.4768962 0.5667390 0.6190071 0.6217412 0.6933046 0.7468091 #>  [996,] 0.27564720 0.6273255 0.6808048 0.6860145 0.7270304 0.7348737 0.9088493 #>  [997,] 0.15953551 0.5553042 0.6088189 0.6235464 0.7109132 0.7124459 0.7250279 #>  [998,] 0.51784776 0.6646710 0.7100649 0.7444970 0.8942605 0.8943465 0.8966044 #>  [999,] 0.40389894 0.5497600 0.5710056 0.7590130 0.8727946 0.8775259 0.9069244 #> [1000,] 0.48708689 0.6104175 0.7163638 0.9770696 1.0100658 1.1076678 1.1137205 #>              [,8]      [,9]     [,10] #>    [1,] 1.0679368 1.0756082 1.0791730 #>    [2,] 1.0289922 1.0434755 1.0559976 #>    [3,] 1.0706012 1.1162420 1.1358185 #>    [4,] 0.6843572 0.7234314 0.7304045 #>    [5,] 1.2383689 1.3277427 1.3813704 #>    [6,] 0.7918485 0.8341228 0.9213934 #>    [7,] 1.0115016 1.0684760 1.1094307 #>    [8,] 0.5005270 0.5065874 0.5168428 #>    [9,] 0.7612910 0.7786650 0.7792734 #>   [10,] 0.5791733 0.5822978 0.6189781 #>   [11,] 0.4856136 0.4862113 0.5106334 #>   [12,] 0.5764384 0.6119358 0.6377695 #>   [13,] 1.4467300 1.4705584 1.4926215 #>   [14,] 0.6952677 0.7073985 0.7329239 #>   [15,] 0.6937362 0.7380849 0.7392339 #>   [16,] 0.9247378 0.9800097 0.9907218 #>   [17,] 1.5816169 1.5889022 1.5950732 #>   [18,] 1.0803088 1.1738052 1.1848510 #>   [19,] 0.6772254 0.6814578 0.6950702 #>   [20,] 0.8283159 0.8292192 0.8474620 #>   [21,] 0.6561299 0.6751973 0.6843720 #>   [22,] 0.7035545 0.7128742 0.7393274 #>   [23,] 1.3065377 1.3176641 1.3624401 #>   [24,] 0.7227567 0.7260365 0.7350979 #>   [25,] 0.5495123 0.6234271 0.6336261 #>   [26,] 0.5881627 0.5911886 0.6082913 #>   [27,] 1.2793869 1.3488796 1.4341524 #>   [28,] 0.6432910 0.6512719 0.6584774 #>   [29,] 0.6142651 0.6351406 0.6725560 #>   [30,] 0.7293638 0.7539744 0.8047619 #>   [31,] 0.5016936 0.5421366 0.5861845 #>   [32,] 0.6893521 0.7004461 0.7394554 #>   [33,] 0.8571821 0.9218761 0.9273137 #>   [34,] 1.1025246 1.1149424 1.1450503 #>   [35,] 0.8174624 0.8221912 0.8522968 #>   [36,] 0.8677613 0.9250909 0.9337041 #>   [37,] 0.7370325 0.7894029 0.8120356 #>   [38,] 1.0376174 1.0390549 1.0828364 #>   [39,] 0.5870136 0.5912035 0.5984957 #>   [40,] 0.7951300 0.8151834 0.8208052 #>   [41,] 0.9609007 0.9720214 0.9947124 #>   [42,] 0.6093081 0.6112998 0.6295516 #>   [43,] 1.0227588 1.0404591 1.0489808 #>   [44,] 0.7835024 0.8430347 0.8586513 #>   [45,] 0.8578457 0.8774396 0.9083317 #>   [46,] 0.9675823 0.9996266 1.0104179 #>   [47,] 1.0068433 1.1053830 1.1341687 #>   [48,] 0.7358463 0.7687327 0.7710098 #>   [49,] 0.6880818 0.7028457 0.7102125 #>   [50,] 0.7099912 0.7213934 0.7473291 #>   [51,] 0.5599255 0.6042177 0.6578583 #>   [52,] 0.5904330 0.6195605 0.6266495 #>   [53,] 0.5321233 0.5846024 0.6163291 #>   [54,] 0.7861640 0.7918028 0.8039468 #>   [55,] 0.9811059 0.9830065 1.0426076 #>   [56,] 0.6436435 0.6911843 0.6935693 #>   [57,] 0.7096490 0.7208081 0.7468091 #>   [58,] 0.6881740 0.6982089 0.7136643 #>   [59,] 0.6669378 0.6745988 0.6970045 #>   [60,] 0.7451104 0.7526757 0.8146708 #>   [61,] 0.6863024 0.7727800 0.7753520 #>   [62,] 0.9451083 0.9882103 1.0287428 #>   [63,] 0.6299681 0.6301527 0.6753309 #>   [64,] 0.7640651 0.7690596 0.7711342 #>   [65,] 0.8711415 0.8870035 0.9052624 #>   [66,] 0.6416593 0.6558797 0.6681355 #>   [67,] 1.4789936 1.4841229 1.5023634 #>   [68,] 0.7925178 0.8611093 0.8640481 #>   [69,] 0.5141916 0.5448332 0.5561802 #>   [70,] 0.5286713 0.5493330 0.5551871 #>   [71,] 0.9090732 0.9305828 0.9389481 #>   [72,] 0.6353334 0.6448151 0.6840135 #>   [73,] 0.7287922 0.7315292 0.7321939 #>   [74,] 0.6006142 0.6169807 0.6296481 #>   [75,] 0.6195113 0.6774735 0.7451104 #>   [76,] 0.7823300 0.7920571 0.8016409 #>   [77,] 1.4846261 1.4972073 1.5421034 #>   [78,] 0.7084213 0.7206843 0.7299960 #>   [79,] 0.6404274 0.6558512 0.6600644 #>   [80,] 0.8420441 0.8727299 0.9902039 #>   [81,] 0.7930441 0.7948539 0.8248505 #>   [82,] 1.2826569 1.2889695 1.2981945 #>   [83,] 0.9128009 0.9293792 0.9302257 #>   [84,] 0.6512878 0.6912263 0.7015280 #>   [85,] 0.5824480 0.6887330 0.6945500 #>   [86,] 0.7270254 0.7394242 0.7738896 #>   [87,] 1.5895223 1.6158257 1.6473701 #>   [88,] 1.4079634 1.4351694 1.4621724 #>   [89,] 0.7518124 0.7807029 0.7827092 #>   [90,] 1.1073360 1.1378995 1.1436320 #>   [91,] 0.5556994 0.5737547 0.5929682 #>   [92,] 0.6276927 0.6745945 0.6813236 #>   [93,] 0.8784208 0.8909051 0.9169018 #>   [94,] 0.7723765 0.8637840 0.8809335 #>   [95,] 0.6884083 0.6983475 0.7024387 #>   [96,] 0.7767992 0.7792326 0.7874865 #>   [97,] 0.5846024 0.6069424 0.6285223 #>   [98,] 0.6364420 0.6512162 0.6672787 #>   [99,] 0.5483874 0.5506939 0.5776410 #>  [100,] 0.6594024 0.6642506 0.6713992 #>  [101,] 1.1720750 1.2024375 1.2279911 #>  [102,] 0.6724396 0.7252953 0.7925178 #>  [103,] 0.7612910 0.7884250 0.8451586 #>  [104,] 0.7367583 0.7392894 0.8000209 #>  [105,] 0.7197512 0.7228793 0.7542130 #>  [106,] 1.0245822 1.0328285 1.1134525 #>  [107,] 1.1953060 1.1966468 1.1986253 #>  [108,] 0.8120356 0.8305208 0.8530572 #>  [109,] 0.7931385 0.7944301 0.8127295 #>  [110,] 1.6855839 1.7043541 1.7386679 #>  [111,] 1.3337266 1.3764884 1.3976187 #>  [112,] 0.9416995 0.9508667 0.9597699 #>  [113,] 1.6223815 1.6231878 1.6267501 #>  [114,] 0.6299497 0.6621913 0.6643520 #>  [115,] 0.5257646 0.5980411 0.6355559 #>  [116,] 1.4832989 1.5547696 1.5831486 #>  [117,] 0.7549314 0.7632290 0.7689495 #>  [118,] 0.5168930 0.5191856 0.5394474 #>  [119,] 0.6271390 0.6351254 0.6786620 #>  [120,] 0.8239253 0.8847691 0.8981028 #>  [121,] 1.0266549 1.0435349 1.0449560 #>  [122,] 0.7867359 0.7996246 0.8878790 #>  [123,] 0.6430860 0.7127873 0.7313557 #>  [124,] 1.0706012 1.1134525 1.1399733 #>  [125,] 0.7081040 0.7135882 0.7164694 #>  [126,] 0.8154674 0.8163634 0.8412337 #>  [127,] 0.7003657 0.7028447 0.7170069 #>  [128,] 1.0170875 1.0307784 1.0553983 #>  [129,] 0.6897666 0.7435194 0.7455222 #>  [130,] 0.7946556 0.7978979 0.9291604 #>  [131,] 0.6922695 0.6950652 0.7390997 #>  [132,] 0.5623026 0.5699606 0.6098405 #>  [133,] 0.5285373 0.5483874 0.5952842 #>  [134,] 0.9510521 1.0082751 1.0100748 #>  [135,] 0.9430874 0.9496712 0.9636836 #>  [136,] 1.2427295 1.2427512 1.2474588 #>  [137,] 0.6794945 0.6868635 0.6969108 #>  [138,] 0.9339491 0.9375315 0.9496301 #>  [139,] 0.5731096 0.5842189 0.6057397 #>  [140,] 0.9152868 0.9519537 0.9772968 #>  [141,] 1.1466267 1.2131667 1.2258150 #>  [142,] 1.0688840 1.0736123 1.0996153 #>  [143,] 0.7442867 0.7694772 0.7783857 #>  [144,] 1.4580009 1.5061917 1.5226149 #>  [145,] 0.5448332 0.5594867 0.5998484 #>  [146,] 0.8007380 0.8040823 0.8151421 #>  [147,] 0.9932836 1.0022214 1.0121305 #>  [148,] 1.2452348 1.2635522 1.3035959 #>  [149,] 1.1594973 1.1980658 1.2285099 #>  [150,] 1.0340092 1.0352596 1.0467705 #>  [151,] 1.1026948 1.1317368 1.1458222 #>  [152,] 0.7568967 0.7793311 0.7953002 #>  [153,] 0.5426763 0.5635818 0.5861207 #>  [154,] 1.4683350 1.4858067 1.4910056 #>  [155,] 0.6416964 0.6493601 0.6647212 #>  [156,] 1.3571199 1.3932434 1.4238619 #>  [157,] 0.5330281 0.5395305 0.5420888 #>  [158,] 1.1436140 1.1813830 1.2916942 #>  [159,] 0.7986821 0.8179851 0.8303587 #>  [160,] 1.0746088 1.0817119 1.0946297 #>  [161,] 0.9444131 0.9542660 0.9738579 #>  [162,] 0.8764202 0.8909896 0.8933247 #>  [163,] 0.9851333 0.9966284 1.0007435 #>  [164,] 0.7523899 0.7655103 0.7826342 #>  [165,] 0.7905515 0.7912805 0.8116461 #>  [166,] 0.5079853 0.5130766 0.5141916 #>  [167,] 0.7567425 0.7600650 0.7626744 #>  [168,] 1.0152523 1.0435643 1.0702424 #>  [169,] 1.3250453 1.3270752 1.3295280 #>  [170,] 0.5660222 0.6489407 0.6496336 #>  [171,] 0.9040442 0.9342601 0.9519537 #>  [172,] 0.5757347 0.6435437 0.6724396 #>  [173,] 0.8210128 0.8349810 0.8561700 #>  [174,] 0.7076574 0.7365311 0.7398859 #>  [175,] 1.4142410 1.4234922 1.4406958 #>  [176,] 0.6983619 0.7661060 0.7816502 #>  [177,] 1.1977510 1.2284359 1.3179865 #>  [178,] 1.1486941 1.1600623 1.1628200 #>  [179,] 0.9339661 0.9819075 1.0205034 #>  [180,] 0.5488556 0.5787698 0.6026166 #>  [181,] 0.7330679 0.7577721 0.7582757 #>  [182,] 0.5834202 0.6126656 0.6129473 #>  [183,] 0.6915555 0.6929959 0.7074353 #>  [184,] 0.9682972 0.9817834 0.9857601 #>  [185,] 0.5228817 0.5230416 0.5289853 #>  [186,] 0.7868616 0.8059799 0.8060334 #>  [187,] 0.5524786 0.5599255 0.5778280 #>  [188,] 1.3351668 1.3559853 1.3951274 #>  [189,] 0.5637291 0.5726487 0.6186450 #>  [190,] 0.6712987 0.6751785 0.6795289 #>  [191,] 1.2164806 1.3358452 1.3411023 #>  [192,] 0.5615982 0.5739805 0.5824093 #>  [193,] 1.0973799 1.1065011 1.1080511 #>  [194,] 0.8896961 0.9197471 0.9802652 #>  [195,] 0.9065478 0.9213934 0.9241461 #>  [196,] 0.7208081 0.7329744 0.7470093 #>  [197,] 0.7240068 0.7433975 0.7490146 #>  [198,] 0.6802905 0.6826938 0.6937205 #>  [199,] 1.5889856 1.6608601 1.6799105 #>  [200,] 1.0769687 1.0883407 1.1276827 #>  [201,] 0.6971849 0.7492438 0.7597547 #>  [202,] 1.2199149 1.3830011 1.3976187 #>  [203,] 1.0357845 1.0382290 1.0404591 #>  [204,] 0.5130766 0.5407542 0.5585575 #>  [205,] 1.3601476 1.3873536 1.4559632 #>  [206,] 0.5935264 0.6559560 0.6937205 #>  [207,] 0.7087775 0.7351002 0.7355553 #>  [208,] 1.0814383 1.0850697 1.0930037 #>  [209,] 0.8486258 0.8699527 0.8820785 #>  [210,] 1.3854143 1.4397661 1.5024043 #>  [211,] 0.8427676 0.8792093 0.9003333 #>  [212,] 0.4763492 0.5879572 0.6174619 #>  [213,] 0.9943103 0.9994756 1.0361230 #>  [214,] 0.6670292 0.6770034 0.6988117 #>  [215,] 0.5494786 0.6338419 0.6478357 #>  [216,] 1.1670337 1.2058582 1.2285650 #>  [217,] 1.3606688 1.3852136 1.4158466 #>  [218,] 0.7526757 0.7657394 0.7738747 #>  [219,] 0.6774418 0.7596698 0.7894116 #>  [220,] 1.2457294 1.2743977 1.2747569 #>  [221,] 0.7196380 0.7417397 0.7599866 #>  [222,] 0.8689624 0.8728159 0.9062452 #>  [223,] 0.6592325 0.6935539 0.7623949 #>  [224,] 0.6419498 0.6704794 0.6778821 #>  [225,] 0.5311544 0.5448165 0.5921218 #>  [226,] 0.6607746 0.6672787 0.7136920 #>  [227,] 1.0944559 1.1018918 1.1123996 #>  [228,] 0.7738930 0.8041100 0.8073674 #>  [229,] 0.6795673 0.6816907 0.7350521 #>  [230,] 0.5496862 0.5562109 0.5866514 #>  [231,] 0.5052856 0.5257215 0.5797760 #>  [232,] 1.0758004 1.1073832 1.1698396 #>  [233,] 0.7339311 0.7771155 0.7873237 #>  [234,] 0.5516273 0.5583391 0.5625458 #>  [235,] 0.7707006 0.7881833 0.7911970 #>  [236,] 0.7521219 0.7742768 0.7767992 #>  [237,] 0.9591522 0.9683798 0.9732644 #>  [238,] 1.4668690 1.5031568 1.6011319 #>  [239,] 0.8946815 0.9136095 0.9515484 #>  [240,] 1.0000930 1.0255651 1.0467998 #>  [241,] 0.5687167 0.6215695 0.6623485 #>  [242,] 0.5495350 0.6120185 0.6568056 #>  [243,] 0.7671719 0.7785466 0.8222776 #>  [244,] 0.5596514 0.5742512 0.5814183 #>  [245,] 0.6697078 0.6707700 0.6962068 #>  [246,] 0.8440968 0.8497161 0.9481364 #>  [247,] 1.1585337 1.1685562 1.1785068 #>  [248,] 0.6430860 0.6604020 0.6619793 #>  [249,] 0.7351250 0.7395767 0.7542130 #>  [250,] 0.9652840 0.9980052 1.0015057 #>  [251,] 0.7485923 0.7490146 0.7566881 #>  [252,] 0.5222735 0.5278030 0.5387954 #>  [253,] 1.7886947 1.8603907 1.9089121 #>  [254,] 0.5124730 0.5260231 0.5323387 #>  [255,] 0.5468722 0.5485510 0.5500821 #>  [256,] 0.5802861 0.6006125 0.6270962 #>  [257,] 0.4988773 0.5257646 0.5314283 #>  [258,] 0.8868968 0.9214425 0.9366966 #>  [259,] 1.1242684 1.1425219 1.1526598 #>  [260,] 0.5335103 0.5593500 0.5649726 #>  [261,] 0.5665504 0.5707161 0.6369702 #>  [262,] 0.5692641 0.5804196 0.5990013 #>  [263,] 0.9542462 0.9641804 0.9691467 #>  [264,] 1.2949795 1.3158773 1.3619317 #>  [265,] 0.7913948 0.7924050 0.8094812 #>  [266,] 0.6904281 0.7039872 0.7154582 #>  [267,] 0.8784248 0.9088926 0.9505660 #>  [268,] 1.0983617 1.1983194 1.2049876 #>  [269,] 0.5990013 0.6048907 0.6112259 #>  [270,] 0.7462513 0.7689575 0.7709956 #>  [271,] 1.0079135 1.0172752 1.0292243 #>  [272,] 0.7563445 0.8194536 0.8264564 #>  [273,] 0.7972707 0.8049131 0.8518018 #>  [274,] 0.7418994 0.7754920 0.7807029 #>  [275,] 0.9171369 0.9675008 1.0067052 #>  [276,] 0.4980047 0.5055020 0.5175117 #>  [277,] 0.5686576 0.5736968 0.6023168 #>  [278,] 1.2893997 1.3075844 1.3192005 #>  [279,] 2.4662679 2.5175043 2.5442563 #>  [280,] 0.7667677 0.7674485 0.8023252 #>  [281,] 0.6881740 0.6918925 0.7786174 #>  [282,] 0.7742662 0.7782363 0.7946667 #>  [283,] 0.6670564 0.6874232 0.7081306 #>  [284,] 0.6653326 0.6705089 0.6921540 #>  [285,] 0.7815431 0.7898622 0.8137523 #>  [286,] 0.5197990 0.5390179 0.5393921 #>  [287,] 0.8500362 0.8948424 0.8953602 #>  [288,] 0.7632290 0.8570481 0.9025553 #>  [289,] 1.5148842 1.5412093 1.5435828 #>  [290,] 0.8699342 1.0048491 1.0055757 #>  [291,] 0.5949132 0.6159515 0.6429082 #>  [292,] 1.1161143 1.1169264 1.1739467 #>  [293,] 0.7018026 0.7654425 0.8522458 #>  [294,] 1.1419196 1.2513037 1.2977312 #>  [295,] 0.6754195 0.6850493 0.6859367 #>  [296,] 0.9753170 1.0031247 1.0100658 #>  [297,] 0.6935693 0.7125536 0.7142468 #>  [298,] 0.5316684 0.5456766 0.5515566 #>  [299,] 0.6611206 0.6994753 0.7328162 #>  [300,] 0.9720214 1.0225832 1.0909757 #>  [301,] 0.5966126 0.6075889 0.6291981 #>  [302,] 0.6964311 0.6975517 0.6988030 #>  [303,] 0.6252093 0.6820353 0.6932590 #>  [304,] 1.0016906 1.0855935 1.0868469 #>  [305,] 1.1208192 1.2368147 1.2388867 #>  [306,] 0.9372777 0.9546968 0.9619879 #>  [307,] 0.6419774 0.6723784 0.6832552 #>  [308,] 0.8603807 0.8734431 0.9183953 #>  [309,] 0.7483951 0.7541283 0.8067053 #>  [310,] 0.7117206 0.7199932 0.7337812 #>  [311,] 0.6585765 0.6590358 0.7123181 #>  [312,] 1.0582719 1.0684127 1.0754960 #>  [313,] 0.6127651 0.6244006 0.6411907 #>  [314,] 0.7632450 0.7926466 0.8010777 #>  [315,] 0.5025101 0.5107768 0.5273193 #>  [316,] 0.6327554 0.6530828 0.6533667 #>  [317,] 0.6796109 0.7421339 0.7787352 #>  [318,] 0.5004929 0.5464413 0.5578290 #>  [319,] 1.1880571 1.2597029 1.2953162 #>  [320,] 0.8417339 0.8434774 0.8770233 #>  [321,] 0.9977909 1.0039775 1.0246449 #>  [322,] 0.5583391 0.5642491 0.5731698 #>  [323,] 1.6768160 1.7251493 1.7810508 #>  [324,] 0.9331176 0.9469623 1.0051359 #>  [325,] 1.0232424 1.0246449 1.0289924 #>  [326,] 0.8909322 0.8972442 0.9172200 #>  [327,] 0.5688620 0.5759595 0.5853154 #>  [328,] 0.5622107 0.5679686 0.6120968 #>  [329,] 0.6696982 0.6735785 0.7013035 #>  [330,] 0.7789891 0.7806495 0.8089933 #>  [331,] 0.8008426 0.8560003 0.8579224 #>  [332,] 1.3331690 1.4143912 1.4688789 #>  [333,] 0.5296506 0.5362648 0.5834202 #>  [334,] 0.9239479 0.9240393 0.9245959 #>  [335,] 1.1027667 1.1407997 1.1818150 #>  [336,] 1.0100438 1.0200329 1.0324834 #>  [337,] 0.9321365 1.0627596 1.0684684 #>  [338,] 0.9383175 0.9466207 1.0082260 #>  [339,] 0.5385712 0.5962842 0.6048907 #>  [340,] 1.1206375 1.1277824 1.1414288 #>  [341,] 0.6870306 0.7007023 0.7107588 #>  [342,] 0.6004564 0.6281631 0.6336261 #>  [343,] 0.8945625 0.9496712 0.9576539 #>  [344,] 0.8571821 0.8850290 0.9750930 #>  [345,] 0.6400614 0.6500613 0.6690223 #>  [346,] 0.6522377 0.6740404 0.7079906 #>  [347,] 0.6282902 0.6351370 0.6419498 #>  [348,] 0.8255415 0.9467787 0.9539639 #>  [349,] 0.6291981 0.6419774 0.6781839 #>  [350,] 1.3372587 1.3835489 1.4117487 #>  [351,] 0.8645594 0.8874271 0.9316418 #>  [352,] 0.8226014 0.8774757 0.9140918 #>  [353,] 1.2790045 1.2923722 1.3296015 #>  [354,] 1.1166933 1.1458222 1.2259470 #>  [355,] 0.9947124 1.0120883 1.0176178 #>  [356,] 1.3435220 1.3781086 1.4583914 #>  [357,] 0.6447293 0.6468146 0.6679639 #>  [358,] 0.5785165 0.5961103 0.6105599 #>  [359,] 0.8038557 0.8460921 0.8582533 #>  [360,] 1.3801625 1.3901274 1.4671062 #>  [361,] 0.7493593 0.7684679 0.8597646 #>  [362,] 0.7009581 0.7181653 0.7345723 #>  [363,] 0.7758347 0.8195287 0.8483467 #>  [364,] 0.8271313 0.8888524 0.9212990 #>  [365,] 0.5883478 0.5886464 0.6081756 #>  [366,] 1.1815077 1.1885868 1.1961058 #>  [367,] 0.7207245 0.7249398 0.7261041 #>  [368,] 0.8578286 0.8579711 0.8641785 #>  [369,] 1.2976499 1.3002465 1.3717881 #>  [370,] 0.6519747 0.7208997 0.7398764 #>  [371,] 1.7521013 1.7640467 1.7649354 #>  [372,] 0.5938688 0.6800918 0.6877835 #>  [373,] 0.6357300 0.6390329 0.6754893 #>  [374,] 1.0170875 1.1354417 1.1357006 #>  [375,] 0.6246683 0.6255007 0.6326536 #>  [376,] 0.8473774 0.8494887 0.8605276 #>  [377,] 0.5644085 0.5648616 0.5802861 #>  [378,] 0.6769252 0.6979894 0.7046394 #>  [379,] 0.9366731 0.9491613 1.0630154 #>  [380,] 1.1503422 1.1899946 1.1994725 #>  [381,] 0.6350657 0.6537013 0.7149436 #>  [382,] 0.4907092 0.5385816 0.5649726 #>  [383,] 0.7432502 0.7748556 0.8199214 #>  [384,] 0.8781887 0.9646126 1.0489171 #>  [385,] 0.8033615 0.8269042 0.8690308 #>  [386,] 0.6995996 0.7020091 0.7310414 #>  [387,] 1.0399906 1.0829693 1.1769053 #>  [388,] 1.0501096 1.1248941 1.1279955 #>  [389,] 0.9883279 1.0331949 1.0368296 #>  [390,] 0.8291119 0.8397998 0.8424534 #>  [391,] 1.3142836 1.3466464 1.3868015 #>  [392,] 0.6953102 0.7042052 0.7523025 #>  [393,] 0.6066467 0.6128280 0.6690706 #>  [394,] 1.0250262 1.0379152 1.1305072 #>  [395,] 0.8568308 0.8618306 0.8678709 #>  [396,] 0.6692238 0.7032394 0.7060836 #>  [397,] 1.1502840 1.1771637 1.2225512 #>  [398,] 0.5966126 0.6056250 0.6096197 #>  [399,] 0.9314647 0.9391627 0.9392670 #>  [400,] 1.4789040 1.4816582 1.4827902 #>  [401,] 0.9984303 1.0654922 1.0911127 #>  [402,] 0.8904291 0.9255702 0.9303700 #>  [403,] 0.9437538 0.9696896 0.9709952 #>  [404,] 0.6630922 0.7114350 0.7215821 #>  [405,] 0.5193700 0.5277083 0.5776410 #>  [406,] 0.6858919 0.6993019 0.7058211 #>  [407,] 1.0269857 1.0832790 1.0842907 #>  [408,] 0.5771702 0.5861845 0.6020208 #>  [409,] 0.9898554 1.0052475 1.0057273 #>  [410,] 0.8897499 0.8951691 0.9017576 #>  [411,] 0.6878224 0.7612008 0.7694176 #>  [412,] 0.7535572 0.7819103 0.8519891 #>  [413,] 1.2772002 1.2797737 1.3075844 #>  [414,] 0.6835596 0.6882167 0.7333496 #>  [415,] 0.9747102 0.9762172 1.0662142 #>  [416,] 0.9850823 0.9904792 1.0172393 #>  [417,] 0.9257544 0.9448650 0.9513992 #>  [418,] 0.8294363 0.8295918 0.8874117 #>  [419,] 1.3210259 1.3492791 1.3678601 #>  [420,] 0.6835868 0.7151561 0.7487499 #>  [421,] 1.2331992 1.2718642 1.3108536 #>  [422,] 0.6244631 0.6262568 0.6410647 #>  [423,] 0.5624170 0.5693944 0.5725950 #>  [424,] 1.3350839 1.3500110 1.3651389 #>  [425,] 1.0646769 1.0948907 1.1497128 #>  [426,] 0.5079853 0.5085118 0.5400346 #>  [427,] 0.9277051 0.9363303 0.9527059 #>  [428,] 0.6923993 0.7026853 0.7282836 #>  [429,] 0.5315649 0.5323387 0.5360746 #>  [430,] 0.5456330 0.6420069 0.6630922 #>  [431,] 0.6768126 0.6948558 0.6996022 #>  [432,] 0.6518538 0.6794945 0.7080091 #>  [433,] 0.6695041 0.6958074 0.7511208 #>  [434,] 0.6427884 0.6468726 0.6876433 #>  [435,] 0.6534425 0.6667067 0.6751430 #>  [436,] 0.6558580 0.6668246 0.6718545 #>  [437,] 0.6527975 0.6650614 0.7138278 #>  [438,] 0.9381842 0.9621098 0.9787644 #>  [439,] 0.5712490 0.5717344 0.6079599 #>  [440,] 0.6672112 0.6701591 0.6932590 #>  [441,] 1.0568596 1.1136304 1.1392861 #>  [442,] 0.6281631 0.6595251 0.6634116 #>  [443,] 0.5328233 0.5487932 0.5778280 #>  [444,] 0.6564700 0.6785378 0.6882218 #>  [445,] 0.9344418 0.9827101 0.9929059 #>  [446,] 1.1956258 1.2196376 1.2509474 #>  [447,] 0.8607418 0.8700938 0.8820128 #>  [448,] 0.6768686 0.6934646 0.8119746 #>  [449,] 1.1643355 1.2190535 1.2320565 #>  [450,] 0.7800899 0.7913520 0.8122574 #>  [451,] 0.6580311 0.6793878 0.6870897 #>  [452,] 0.5482704 0.5550461 0.5777003 #>  [453,] 0.5500821 0.5616141 0.5752044 #>  [454,] 0.6090492 0.6137801 0.6240492 #>  [455,] 0.5617725 0.5683602 0.5891856 #>  [456,] 0.9287359 0.9506871 0.9542970 #>  [457,] 0.8300306 0.8620008 0.8684561 #>  [458,] 1.1912156 1.2034733 1.2721403 #>  [459,] 0.6187649 0.6309340 0.6535335 #>  [460,] 0.7454744 0.7568933 0.8228165 #>  [461,] 0.6056025 0.6101223 0.6135671 #>  [462,] 0.5051625 0.5353076 0.5355942 #>  [463,] 0.5391003 0.5454844 0.5731096 #>  [464,] 0.5481954 0.5866514 0.5909665 #>  [465,] 0.6428756 0.6433965 0.6550288 #>  [466,] 0.5565284 0.5797909 0.5958238 #>  [467,] 0.6808117 0.6898619 0.6937362 #>  [468,] 0.8953007 0.9523561 0.9544903 #>  [469,] 1.3521702 1.3652874 1.3721088 #>  [470,] 0.6788469 0.6791664 0.7178522 #>  [471,] 0.6812188 0.6955994 0.8008150 #>  [472,] 0.7456374 0.7618184 0.8211111 #>  [473,] 0.8519029 0.8688327 0.8708684 #>  [474,] 0.6013085 0.6031065 0.6271390 #>  [475,] 0.6670292 0.6964720 0.7454744 #>  [476,] 0.9388739 0.9393335 0.9423537 #>  [477,] 0.9649712 0.9685415 0.9818598 #>  [478,] 0.5313650 0.5360949 0.5562109 #>  [479,] 0.5991182 0.6223214 0.6227540 #>  [480,] 1.0586673 1.0779516 1.0860865 #>  [481,] 0.8108355 0.8378676 0.8735863 #>  [482,] 0.7617117 0.7894029 0.7906645 #>  [483,] 1.0014871 1.0101130 1.0243672 #>  [484,] 0.8599161 0.8823005 0.9836362 #>  [485,] 1.3189722 1.3530901 1.4104662 #>  [486,] 0.8126845 0.8256230 0.8433529 #>  [487,] 0.5418255 0.5754217 0.5762106 #>  [488,] 0.9639050 1.0560591 1.0565516 #>  [489,] 1.0404514 1.0639316 1.1320289 #>  [490,] 0.8495409 0.8712406 0.9085534 #>  [491,] 0.9058002 0.9086143 0.9327101 #>  [492,] 0.4866020 0.5060132 0.5289853 #>  [493,] 0.9405554 0.9604681 0.9958383 #>  [494,] 1.3054707 1.4101108 1.4179282 #>  [495,] 0.7830074 0.7837152 0.7944301 #>  [496,] 0.9103006 0.9169557 0.9797031 #>  [497,] 0.6026957 0.6455357 0.6814578 #>  [498,] 0.8955709 0.9050834 0.9256630 #>  [499,] 0.8378676 0.8429177 0.8839123 #>  [500,] 0.6295516 0.6403321 0.6471051 #>  [501,] 1.0401011 1.1061794 1.1374030 #>  [502,] 0.7603324 0.7619168 0.7639071 #>  [503,] 0.7374112 0.7537164 0.7720334 #>  [504,] 0.8814341 0.8922805 0.8996765 #>  [505,] 0.5350442 0.5595818 0.5754217 #>  [506,] 1.4783537 1.5583341 1.6053566 #>  [507,] 0.7198703 0.7370967 0.7614986 #>  [508,] 1.0744856 1.1531728 1.1545275 #>  [509,] 0.7948138 0.8154670 0.8235367 #>  [510,] 0.8216318 0.8294088 0.9055382 #>  [511,] 0.6878224 0.6912585 0.7218512 #>  [512,] 0.5742293 0.6026517 0.6046363 #>  [513,] 1.3113232 1.3181359 1.3438919 #>  [514,] 0.5998131 0.6558266 0.6659036 #>  [515,] 1.1103013 1.1162948 1.1732769 #>  [516,] 0.8182025 0.8206238 0.8434631 #>  [517,] 0.7277532 0.8050180 0.8873180 #>  [518,] 0.6129203 0.6145542 0.6182163 #>  [519,] 0.7727295 0.7758941 0.7918196 #>  [520,] 0.8007117 0.8063838 0.8138400 #>  [521,] 0.8451894 0.9112644 0.9227359 #>  [522,] 0.6733906 0.7640429 0.7715002 #>  [523,] 1.0019570 1.0216043 1.0326926 #>  [524,] 1.9986121 2.0373619 2.0466746 #>  [525,] 0.6429618 0.6760485 0.7046827 #>  [526,] 0.9266812 0.9752333 1.0261324 #>  [527,] 0.5644085 0.5843785 0.5952650 #>  [528,] 1.0961734 1.1064796 1.1364529 #>  [529,] 1.2619918 1.2772002 1.2828758 #>  [530,] 1.0623860 1.0950939 1.1515615 #>  [531,] 0.7972555 0.8108839 0.8186874 #>  [532,] 1.0676919 1.0816212 1.0889873 #>  [533,] 1.5599703 1.5637740 1.6262017 #>  [534,] 1.1601845 1.1677939 1.1915643 #>  [535,] 0.7437512 0.7768562 0.7780390 #>  [536,] 0.5385816 0.5509223 0.5617725 #>  [537,] 0.6939102 0.7043898 0.7301105 #>  [538,] 0.6296481 0.6408286 0.6764420 #>  [539,] 0.8117176 0.8398326 0.8969707 #>  [540,] 0.5395305 0.5737572 0.6747855 #>  [541,] 0.6384452 0.6424399 0.6464334 #>  [542,] 0.6037200 0.6184840 0.6427250 #>  [543,] 1.7389397 1.7432314 1.7605225 #>  [544,] 0.6549810 0.7048363 0.7605680 #>  [545,] 0.8459038 0.8829730 0.8856645 #>  [546,] 0.8840377 0.9180951 0.9242806 #>  [547,] 0.7847372 0.8010704 0.8131908 #>  [548,] 0.6236334 0.6934646 0.7143313 #>  [549,] 0.7873519 0.8059979 0.8069110 #>  [550,] 0.7689770 0.7703480 0.8007546 #>  [551,] 0.6778821 0.6904580 0.7140602 #>  [552,] 1.3050743 1.3174856 1.3245004 #>  [553,] 0.5739805 0.6327775 0.6762927 #>  [554,] 1.0983617 1.1007335 1.1150497 #>  [555,] 0.5904330 0.5907322 0.6223214 #>  [556,] 0.6749934 0.7234557 0.7310857 #>  [557,] 0.8743692 0.8849347 0.8906070 #>  [558,] 0.8210579 0.8339558 0.8358573 #>  [559,] 0.6362629 0.6452187 0.6644220 #>  [560,] 0.5339803 0.5603274 0.5638867 #>  [561,] 0.6117608 0.6255007 0.6764420 #>  [562,] 0.5888595 0.5990440 0.6261337 #>  [563,] 0.5450248 0.5507408 0.5843693 #>  [564,] 0.8036016 0.8047433 0.8095797 #>  [565,] 0.7281262 0.7313658 0.7628992 #>  [566,] 0.8644989 0.8671357 0.8806064 #>  [567,] 0.7552830 0.8330571 0.8431302 #>  [568,] 0.6535335 0.6558580 0.6652348 #>  [569,] 0.6395264 0.6573256 0.6623413 #>  [570,] 0.5679686 0.5798006 0.5855622 #>  [571,] 1.2268012 1.2354872 1.2887981 #>  [572,] 0.7696123 0.8168017 0.8235367 #>  [573,] 0.6524939 0.6526783 0.6537565 #>  [574,] 0.7487317 0.7649604 0.8059799 #>  [575,] 0.7395767 0.7398610 0.7440935 #>  [576,] 1.4391799 1.4708825 1.4709662 #>  [577,] 0.6162172 0.6338708 0.6493104 #>  [578,] 0.6112259 0.6762352 0.6951589 #>  [579,] 0.8065056 0.8434935 0.8492122 #>  [580,] 0.6786620 0.6825721 0.6948558 #>  [581,] 0.9528192 0.9530200 0.9536042 #>  [582,] 0.6961684 0.7005153 0.7200962 #>  [583,] 0.6964311 0.7305837 0.7375307 #>  [584,] 0.7953558 0.8005790 0.8179851 #>  [585,] 0.8183849 0.8200502 0.8415363 #>  [586,] 0.7296850 0.7548720 0.7718743 #>  [587,] 1.0785649 1.0910164 1.1045277 #>  [588,] 1.1486131 1.2054843 1.2569678 #>  [589,] 0.8834156 0.9013056 0.9252945 #>  [590,] 0.6705622 0.7005153 0.7161061 #>  [591,] 0.9030430 0.9095357 0.9156253 #>  [592,] 0.8750487 0.9364926 0.9416197 #>  [593,] 0.7196849 0.7375307 0.7392870 #>  [594,] 0.4857713 0.5048972 0.5064786 #>  [595,] 0.7901913 0.8093104 0.8167210 #>  [596,] 0.6957880 0.7340013 0.7358673 #>  [597,] 0.8860218 0.9015235 0.9340972 #>  [598,] 1.0209397 1.0384102 1.0409858 #>  [599,] 0.6986558 0.7048297 0.7052132 #>  [600,] 0.4486767 0.4499965 0.4644044 #>  [601,] 0.6136227 0.6245746 0.6282400 #>  [602,] 1.0287512 1.0528400 1.1279718 #>  [603,] 0.6406844 0.6690390 0.6909485 #>  [604,] 1.0706229 1.1468348 1.2382435 #>  [605,] 0.8337829 0.8356623 0.8498903 #>  [606,] 0.7112152 0.7178691 0.7525727 #>  [607,] 0.7662232 0.7878505 0.8152720 #>  [608,] 0.8432071 0.9130115 0.9134965 #>  [609,] 0.7294285 0.7394242 0.8061877 #>  [610,] 0.5484994 0.5668749 0.5726566 #>  [611,] 0.6712364 0.6946237 0.7123065 #>  [612,] 0.9382667 0.9442659 0.9496172 #>  [613,] 0.7452738 0.7831081 0.8200878 #>  [614,] 0.6844116 0.7367583 0.8030428 #>  [615,] 0.5996906 0.6805434 0.6907728 #>  [616,] 0.6448831 0.6465416 0.6646882 #>  [617,] 0.6330853 0.6338419 0.6492601 #>  [618,] 0.6581534 0.6624720 0.6782377 #>  [619,] 0.5785262 0.5992795 0.6004985 #>  [620,] 1.1733083 1.1949105 1.2032782 #>  [621,] 0.7480387 0.7581511 0.7587846 #>  [622,] 0.6066467 0.6091028 0.6357692 #>  [623,] 0.7574095 0.7750165 0.7750993 #>  [624,] 0.6404274 0.6464334 0.6512162 #>  [625,] 0.4936428 0.5103733 0.5193264 #>  [626,] 0.6651575 0.7020622 0.7105529 #>  [627,] 0.5168428 0.5313965 0.5346088 #>  [628,] 1.1969643 1.2550925 1.2755433 #>  [629,] 0.9939926 1.1064796 1.1888797 #>  [630,] 0.5387954 0.5750941 0.6330853 #>  [631,] 0.5584544 0.6024155 0.6031142 #>  [632,] 0.5168930 0.5277083 0.5375306 #>  [633,] 0.7092947 0.7104353 0.7559999 #>  [634,] 1.5329647 1.5543975 1.5634955 #>  [635,] 0.8239511 0.8424172 0.8468338 #>  [636,] 0.5691435 0.5785262 0.6071647 #>  [637,] 0.6921431 0.7186866 0.7496286 #>  [638,] 1.1684576 1.1720750 1.2815534 #>  [639,] 0.5226410 0.5265200 0.5287791 #>  [640,] 0.9272855 1.0091640 1.0295797 #>  [641,] 0.8376052 0.8647237 0.8855559 #>  [642,] 0.6506551 0.6553010 0.6567167 #>  [643,] 0.8437098 0.9360267 0.9416733 #>  [644,] 0.8313149 0.8624519 0.8815605 #>  [645,] 0.8804594 0.8838989 0.8878144 #>  [646,] 0.6667067 0.6814557 0.6893700 #>  [647,] 0.8415679 0.8527642 0.9171935 #>  [648,] 0.7124559 0.7301105 0.7330808 #>  [649,] 0.8566197 0.8909896 0.9475842 #>  [650,] 0.6581534 0.6609447 0.6667060 #>  [651,] 0.6255844 0.6518966 0.6765430 #>  [652,] 0.5218521 0.5378445 0.5477966 #>  [653,] 0.8436011 0.8554253 0.8595510 #>  [654,] 0.7314720 0.7467353 0.7578659 #>  [655,] 0.7577839 0.7600927 0.7681376 #>  [656,] 0.6016411 0.6262568 0.7451286 #>  [657,] 0.7854676 0.8077895 0.8103925 #>  [658,] 0.7926088 0.8093795 0.8230118 #>  [659,] 0.7241140 0.7398764 0.7581030 #>  [660,] 1.0346138 1.0575992 1.0842958 #>  [661,] 0.6844116 0.7234940 0.7333325 #>  [662,] 1.3510106 1.4042872 1.4452742 #>  [663,] 0.9276341 0.9611789 0.9810257 #>  [664,] 1.3571994 1.3684642 1.4009844 #>  [665,] 0.5193264 0.5278611 0.5542983 #>  [666,] 0.7984033 0.8072558 0.8220592 #>  [667,] 0.4945059 0.5199658 0.5230416 #>  [668,] 0.6480838 0.6555913 0.6568056 #>  [669,] 0.6042177 0.6725560 0.6829031 #>  [670,] 0.8167210 0.8217891 0.8454277 #>  [671,] 0.5191856 0.5588236 0.5713235 #>  [672,] 0.6301799 0.7082396 0.7084019 #>  [673,] 1.1047607 1.1290818 1.1427840 #>  [674,] 1.0286224 1.0489808 1.1980335 #>  [675,] 0.7582187 0.8295305 0.8506862 #>  [676,] 0.4898465 0.5077859 0.5569960 #>  [677,] 1.1265926 1.1345218 1.1718851 #>  [678,] 0.7329744 0.7372459 0.7431529 #>  [679,] 0.8222470 0.8549426 0.8578457 #>  [680,] 0.6001333 0.6251796 0.6305219 #>  [681,] 0.6023168 0.6023326 0.6355162 #>  [682,] 0.8479085 0.8481944 0.9064674 #>  [683,] 0.7300708 0.7351187 0.7679004 #>  [684,] 1.1181226 1.1514274 1.1520443 #>  [685,] 1.3081986 1.3511665 1.3546523 #>  [686,] 0.8223941 0.8485594 0.8596713 #>  [687,] 1.4075839 1.4083701 1.4198596 #>  [688,] 0.5998510 0.6018173 0.6698119 #>  [689,] 0.8100292 0.8132382 0.8290019 #>  [690,] 1.4425738 1.4767449 1.4852187 #>  [691,] 0.7187549 0.7231538 0.7616374 #>  [692,] 0.7839864 0.9088926 0.9183030 #>  [693,] 1.1245014 1.1299580 1.1779799 #>  [694,] 0.8502838 0.8607838 0.8634507 #>  [695,] 0.6370685 0.6576615 0.6661744 #>  [696,] 0.6707645 0.6913080 0.7488963 #>  [697,] 1.2274986 1.2299970 1.2731950 #>  [698,] 0.8681527 0.8798386 0.8812853 #>  [699,] 1.0413015 1.0756651 1.1580812 #>  [700,] 0.8271218 0.8861557 0.9005656 #>  [701,] 0.5409587 0.5693944 0.5826461 #>  [702,] 0.6246683 0.6272535 0.6723784 #>  [703,] 0.6862989 0.7151716 0.7282951 #>  [704,] 0.6069424 0.6202665 0.6316222 #>  [705,] 0.5124730 0.5226410 0.5362648 #>  [706,] 0.8468311 0.9024582 0.9621088 #>  [707,] 0.9068786 0.9137429 0.9769217 #>  [708,] 0.6905525 0.6921540 0.6954956 #>  [709,] 0.6029503 0.6361513 0.6433054 #>  [710,] 0.6217058 0.6365584 0.6902800 #>  [711,] 0.7614537 0.7667677 0.7703144 #>  [712,] 1.0364992 1.0387321 1.0657045 #>  [713,] 0.6046865 0.6198958 0.6384032 #>  [714,] 0.6731939 0.8080229 0.8415477 #>  [715,] 0.8829191 0.9003761 0.9946490 #>  [716,] 0.6938717 0.7077167 0.7318667 #>  [717,] 0.7602650 0.8107766 0.8163540 #>  [718,] 1.0565192 1.0684127 1.0869709 #>  [719,] 0.6312752 0.7096263 0.7278098 #>  [720,] 0.8012073 0.8117176 0.8313351 #>  [721,] 1.0271835 1.0479994 1.0815893 #>  [722,] 1.4393498 1.4457478 1.4535853 #>  [723,] 0.6955994 0.7107914 0.7879663 #>  [724,] 0.9564275 0.9664683 0.9939665 #>  [725,] 0.5375306 0.5506939 0.6009925 #>  [726,] 0.7494753 0.7556719 0.7822650 #>  [727,] 0.6468575 0.6961557 0.6964720 #>  [728,] 0.5997664 0.6001591 0.6155722 #>  [729,] 0.5942126 0.6073632 0.6195113 #>  [730,] 1.3983351 1.4051475 1.4555884 #>  [731,] 0.4392495 0.4522104 0.4600902 #>  [732,] 0.7472028 0.7504833 0.7585133 #>  [733,] 1.0460179 1.0499655 1.0528400 #>  [734,] 0.6156672 0.6564138 0.6567264 #>  [735,] 1.0697011 1.0902501 1.1232930 #>  [736,] 0.7800657 0.8364514 0.8879324 #>  [737,] 1.4933881 1.5076791 1.5260360 #>  [738,] 1.6959213 1.7622650 1.7781693 #>  [739,] 0.6674419 0.6690706 0.7151769 #>  [740,] 0.7168509 0.7284899 0.7440227 #>  [741,] 1.3005457 1.3145368 1.3352531 #>  [742,] 0.8940356 0.9136499 0.9644563 #>  [743,] 0.7308033 0.7802867 0.7915027 #>  [744,] 1.1698396 1.1926072 1.2033719 #>  [745,] 0.5273193 0.5321233 0.5331231 #>  [746,] 0.9375876 0.9787880 1.0135702 #>  [747,] 0.7973382 0.8081416 0.8129155 #>  [748,] 0.5278877 0.5295990 0.5339085 #>  [749,] 1.3259474 1.3926687 1.4938601 #>  [750,] 1.3443883 1.3517436 1.3695591 #>  [751,] 0.7403285 0.7476519 0.7476944 #>  [752,] 0.8038557 0.8188241 0.8361449 #>  [753,] 0.5830661 0.5896243 0.6131318 #>  [754,] 0.8295862 0.8794088 0.8817272 #>  [755,] 0.8281127 0.8547641 0.8724939 #>  [756,] 0.8145100 0.8354554 0.8498277 #>  [757,] 1.0595367 1.0669674 1.0762475 #>  [758,] 0.6692728 0.6750074 0.6969108 #>  [759,] 1.4425588 1.4450915 1.4485554 #>  [760,] 0.9614825 1.0145686 1.0325010 #>  [761,] 0.8236312 0.8367278 0.8871239 #>  [762,] 0.8817379 0.9044000 0.9225560 #>  [763,] 0.8572320 0.8702495 0.8882137 #>  [764,] 1.0525668 1.1076135 1.1188842 #>  [765,] 1.0771012 1.0965720 1.1008531 #>  [766,] 0.6423751 0.6479607 0.6653010 #>  [767,] 1.6922143 1.7899635 1.7920328 #>  [768,] 0.8161390 0.8400865 0.8727946 #>  [769,] 0.5660296 0.5680735 0.5726571 #>  [770,] 0.6327408 0.6351406 0.6470458 #>  [771,] 0.5556988 0.5703449 0.5999381 #>  [772,] 1.2256447 1.2333862 1.2719175 #>  [773,] 0.6217967 0.6700012 0.6851077 #>  [774,] 0.6712884 0.6823659 0.6879035 #>  [775,] 0.6194800 0.6852188 0.6856381 #>  [776,] 0.8137139 0.8504918 0.8506675 #>  [777,] 0.6087419 0.6231945 0.6413940 #>  [778,] 0.5573757 0.5591812 0.5722022 #>  [779,] 0.7539744 0.7675742 0.7819436 #>  [780,] 0.6022022 0.6272123 0.6733906 #>  [781,] 0.9667655 0.9761289 0.9791836 #>  [782,] 0.6873836 0.6874926 0.7085655 #>  [783,] 1.3426498 1.3448036 1.3594939 #>  [784,] 0.7333666 0.7453602 0.7704745 #>  [785,] 0.6845304 0.7195870 0.7350830 #>  [786,] 0.5615982 0.6482300 0.6626709 #>  [787,] 0.6829226 0.7103054 0.7582187 #>  [788,] 1.3111110 1.3443883 1.3508512 #>  [789,] 0.7159171 0.7409698 0.7432327 #>  [790,] 0.8231925 0.8420854 0.8676661 #>  [791,] 0.5770693 0.5993656 0.6586113 #>  [792,] 0.6024179 0.6357810 0.6471777 #>  [793,] 0.7362208 0.7563445 0.7604813 #>  [794,] 0.5242530 0.5896243 0.6221925 #>  [795,] 0.6765117 0.6808698 0.6860621 #>  [796,] 0.6378715 0.6493104 0.7154337 #>  [797,] 0.6942018 0.6975285 0.6987087 #>  [798,] 0.8170461 0.8170992 0.8253864 #>  [799,] 0.6305219 0.6799923 0.7012488 #>  [800,] 1.3014992 1.3042135 1.3436557 #>  [801,] 0.6493601 0.6958777 0.7171059 #>  [802,] 0.7456374 0.7915027 0.8399245 #>  [803,] 0.9624949 1.0048730 1.0134325 #>  [804,] 0.6385078 0.6401412 0.6452882 #>  [805,] 1.2882328 1.3116221 1.3530189 #>  [806,] 1.1315468 1.1543534 1.1842663 #>  [807,] 0.9449775 0.9523550 1.0305026 #>  [808,] 0.6644028 0.6782536 0.6817313 #>  [809,] 0.6073446 0.6080299 0.6371655 #>  [810,] 0.6479790 0.6849452 0.7069055 #>  [811,] 0.8197661 0.8611037 0.8831020 #>  [812,] 1.2020665 1.2276773 1.3645757 #>  [813,] 0.8459063 0.8858263 0.9043877 #>  [814,] 0.5030616 0.5425757 0.5832610 #>  [815,] 0.5692769 0.5740741 0.5949132 #>  [816,] 0.9251622 0.9861523 1.0485725 #>  [817,] 0.7455969 0.7520157 0.7618184 #>  [818,] 0.5359281 0.5633575 0.5787698 #>  [819,] 0.7392894 0.7433975 0.7467121 #>  [820,] 0.6852824 0.6936329 0.7181921 #>  [821,] 0.5691435 0.6463727 0.6611763 #>  [822,] 1.2069003 1.2512975 1.3098555 #>  [823,] 0.5533264 0.5571266 0.5728231 #>  [824,] 0.5569960 0.5713235 0.5723353 #>  [825,] 1.0763169 1.2100524 1.2285099 #>  [826,] 2.2350899 2.2409299 2.2762731 #>  [827,] 0.6979746 0.7433342 0.7928800 #>  [828,] 0.8195287 0.8230827 0.8755930 #>  [829,] 0.7736600 0.7757537 0.8217891 #>  [830,] 0.7803848 0.7871981 0.8020304 #>  [831,] 0.6982709 0.7102531 0.7376757 #>  [832,] 0.7935244 0.7980322 0.8237117 #>  [833,] 0.8345448 0.8784208 0.8797097 #>  [834,] 0.6832902 0.7362208 0.7471694 #>  [835,] 0.9260811 0.9793206 1.0038276 #>  [836,] 0.7523899 0.7552830 0.7849001 #>  [837,] 0.5709049 0.6433156 0.6480446 #>  [838,] 0.6853249 0.7016597 0.7149436 #>  [839,] 1.0767440 1.1315852 1.1317125 #>  [840,] 0.7780390 0.7996709 0.8237035 #>  [841,] 1.0104470 1.0193453 1.0306852 #>  [842,] 0.5359281 0.5933982 0.5955270 #>  [843,] 0.8057024 0.8107597 0.8248156 #>  [844,] 0.9828862 1.0526536 1.1172094 #>  [845,] 0.6008261 0.6365584 0.6558512 #>  [846,] 1.0659414 1.0937044 1.0962502 #>  [847,] 0.7480387 0.8049348 0.8428658 #>  [848,] 0.4727254 0.5228817 0.5653482 #>  [849,] 0.7351557 0.7483951 0.7516727 #>  [850,] 0.6562227 0.6983475 0.7033504 #>  [851,] 0.7464592 0.7484533 0.7577953 #>  [852,] 0.8046619 0.9025282 0.9054467 #>  [853,] 0.6975517 0.7332359 0.7376195 #>  [854,] 0.7400121 0.8415679 0.8646007 #>  [855,] 0.6799060 0.6946237 0.7078478 #>  [856,] 1.2124760 1.2249589 1.2627316 #>  [857,] 0.6487889 0.6975098 0.7085655 #>  [858,] 0.7662521 0.7753520 0.7769130 #>  [859,] 0.6986404 0.7012488 0.7207712 #>  [860,] 0.6329787 0.6340854 0.6395264 #>  [861,] 0.8645594 0.9205177 0.9581222 #>  [862,] 0.7280158 0.7415283 0.7464137 #>  [863,] 0.8814485 0.9013198 0.9029114 #>  [864,] 0.5952842 0.6220791 0.6310147 #>  [865,] 0.5594867 0.5755884 0.6002305 #>  [866,] 0.6922695 0.7228793 0.7501878 #>  [867,] 1.3238489 1.3318104 1.3359951 #>  [868,] 2.0938201 2.1759249 2.2363200 #>  [869,] 0.8587993 0.8596713 0.8720597 #>  [870,] 0.5824093 0.6160518 0.6176777 #>  [871,] 0.8977000 0.9656369 0.9848920 #>  [872,] 1.0004142 1.0859541 1.1271155 #>  [873,] 1.0587168 1.0671328 1.0713395 #>  [874,] 0.7917424 0.8059509 0.8291018 #>  [875,] 1.3798552 1.3975421 1.4330199 #>  [876,] 0.8406873 0.8438542 0.8726854 #>  [877,] 0.9276341 0.9394095 0.9531893 #>  [878,] 0.7514681 0.7553204 0.7617117 #>  [879,] 0.8670633 0.8715225 0.8907002 #>  [880,] 0.6622340 0.6712671 0.7151238 #>  [881,] 0.7079906 0.7542690 0.7553204 #>  [882,] 0.4877730 0.5065874 0.5278877 #>  [883,] 1.3287780 1.3347759 1.3527689 #>  [884,] 0.9110121 0.9179552 0.9406995 #>  [885,] 0.6915555 0.6986609 0.7335975 #>  [886,] 1.0725903 1.0912648 1.1683286 #>  [887,] 0.7975048 0.8127076 0.8222194 #>  [888,] 0.7077427 0.7250279 0.7456894 #>  [889,] 1.1297581 1.1312305 1.1394487 #>  [890,] 0.7838813 0.8078125 0.8374231 #>  [891,] 0.6912585 0.7060671 0.7436832 #>  [892,] 1.3497003 1.3843818 1.3957093 #>  [893,] 0.8079237 0.8239971 0.9187535 #>  [894,] 1.3010207 1.3202480 1.3840435 #>  [895,] 0.7423832 0.7586647 0.7629645 #>  [896,] 0.7583483 0.8294024 0.8423330 #>  [897,] 0.4873556 0.5106334 0.5427146 #>  [898,] 0.9114773 0.9677365 0.9751615 #>  [899,] 0.8579224 0.8873180 0.9327680 #>  [900,] 0.8523723 0.8536145 0.8751137 #>  [901,] 0.5958806 0.6395537 0.6474215 #>  [902,] 0.6536905 0.6723442 0.6843614 #>  [903,] 0.7743039 0.7848989 0.8095011 #>  [904,] 0.6740839 0.6774418 0.6948049 #>  [905,] 0.7517759 0.7596784 0.7607250 #>  [906,] 0.8120114 0.8240332 0.8493727 #>  [907,] 0.7651825 0.7684679 0.8344002 #>  [908,] 0.5581619 0.6357692 0.6463727 #>  [909,] 1.2552516 1.2894161 1.4014495 #>  [910,] 0.6983619 0.7123181 0.7157420 #>  [911,] 0.7779926 0.7838813 0.7953267 #>  [912,] 0.7469488 0.7561940 0.7917113 #>  [913,] 1.0456704 1.0565697 1.0791441 #>  [914,] 0.5335353 0.5528314 0.5685269 #>  [915,] 0.9043877 0.9044000 0.9234265 #>  [916,] 0.5726487 0.6157351 0.6518538 #>  [917,] 0.9639577 0.9865454 1.0618379 #>  [918,] 1.3353390 1.3407258 1.4583411 #>  [919,] 0.8058079 0.8074721 0.8257690 #>  [920,] 0.6434831 0.6445371 0.6710401 #>  [921,] 0.8859339 0.9063786 0.9278227 #>  [922,] 0.5177597 0.5240957 0.5258883 #>  [923,] 0.9441516 0.9572038 0.9897259 #>  [924,] 0.9575865 0.9611610 0.9768292 #>  [925,] 0.7421339 0.7649604 0.7758347 #>  [926,] 0.6620913 0.6637599 0.7113020 #>  [927,] 0.7362006 0.7530223 0.7667630 #>  [928,] 0.5953248 0.6767150 0.7140602 #>  [929,] 1.3149177 1.4582563 1.4785938 #>  [930,] 0.7698959 0.7787466 0.7884250 #>  [931,] 0.7531525 0.7881658 0.8726854 #>  [932,] 0.8332795 0.8685852 0.9847512 #>  [933,] 1.1035690 1.1049963 1.1739467 #>  [934,] 1.0212143 1.0530628 1.1257466 #>  [935,] 0.6419228 0.6597913 0.6703373 #>  [936,] 0.9759065 0.9787644 0.9893842 #>  [937,] 0.6529818 0.6688306 0.6750074 #>  [938,] 1.1182387 1.1460388 1.1722318 #>  [939,] 0.7126181 0.7237446 0.7556274 #>  [940,] 0.8264805 0.8374231 0.8483188 #>  [941,] 0.5485584 0.5558400 0.5640248 #>  [942,] 1.5104229 1.5773552 1.6275313 #>  [943,] 0.6056742 0.6444982 0.6458265 #>  [944,] 0.4057041 0.5046580 0.5315649 #>  [945,] 0.8601236 0.9394321 0.9615208 #>  [946,] 0.9699007 0.9880152 1.0029236 #>  [947,] 1.1539035 1.1911263 1.2035618 #>  [948,] 0.4877730 0.5178784 0.5241761 #>  [949,] 0.5571266 0.5820863 0.5979310 #>  [950,] 0.6416593 0.6429411 0.6661744 #>  [951,] 0.6413940 0.6657719 0.6692390 #>  [952,] 1.8717218 1.9705702 2.0201102 #>  [953,] 0.5572833 0.5726566 0.5752044 #>  [954,] 0.7944742 0.8047433 0.8217995 #>  [955,] 1.1411584 1.1675026 1.1737487 #>  [956,] 0.5932375 0.5984875 0.6203243 #>  [957,] 0.9186787 0.9197014 0.9770041 #>  [958,] 1.4827187 1.4925126 1.5241503 #>  [959,] 0.7888984 0.8005664 0.8873804 #>  [960,] 1.0134409 1.0390255 1.0734165 #>  [961,] 0.6659207 0.6691283 0.6785518 #>  [962,] 1.3684642 1.3841783 1.3898888 #>  [963,] 0.6874232 0.6887425 0.7549684 #>  [964,] 0.7041669 0.7060752 0.7242099 #>  [965,] 0.5242418 0.5314283 0.5878722 #>  [966,] 0.9632909 0.9636836 0.9801186 #>  [967,] 0.7097354 0.7197167 0.7435194 #>  [968,] 0.9954296 1.0142245 1.0533314 #>  [969,] 0.7476518 0.7588912 0.7990075 #>  [970,] 0.7376757 0.7853892 0.8036016 #>  [971,] 0.7458449 0.7634727 0.7675740 #>  [972,] 0.9649887 0.9732082 0.9911097 #>  [973,] 1.8502705 1.8824446 1.8993484 #>  [974,] 0.5832059 0.5855622 0.6061136 #>  [975,] 0.7455946 0.7586647 0.7844661 #>  [976,] 0.6856158 0.6974566 0.7278098 #>  [977,] 0.5735395 0.5765693 0.5857709 #>  [978,] 0.6047392 0.6163291 0.6246626 #>  [979,] 0.9309714 0.9339775 0.9375701 #>  [980,] 0.6982157 0.7290125 0.7488442 #>  [981,] 0.8840553 0.9560712 0.9744054 #>  [982,] 0.9207602 0.9395595 0.9775374 #>  [983,] 0.8273511 0.8537514 0.8625426 #>  [984,] 1.3635695 1.3787229 1.5197958 #>  [985,] 0.5790417 0.6157351 0.6510206 #>  [986,] 0.7859600 0.7861077 0.7880168 #>  [987,] 0.5929386 0.5988571 0.6046865 #>  [988,] 0.5836017 0.5992714 0.6328221 #>  [989,] 1.3617419 1.4767449 1.4772797 #>  [990,] 1.1262244 1.2135532 1.2879895 #>  [991,] 1.7301178 1.7765340 1.7947605 #>  [992,] 0.5487932 0.6073665 0.6086256 #>  [993,] 0.6731939 0.6832902 0.6974566 #>  [994,] 0.7308436 0.8339786 0.8482979 #>  [995,] 0.7554116 0.7687887 0.8449323 #>  [996,] 0.9477374 0.9824898 0.9966284 #>  [997,] 0.7607250 0.7666131 0.7709543 #>  [998,] 0.9194165 0.9437538 0.9733749 #>  [999,] 0.9326818 0.9466905 1.0140477 #> [1000,] 1.1367346 1.1499117 1.1919870 #>"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_log_rank_threshold.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"Compute log-rank test p-value difference two survival curves obtained splitting dataset \"low\" \"high\" risk group using possible relative-risk thresholds.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_log_rank_threshold.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"","code":"tof_find_log_rank_threshold(input_data, relative_risk_col, time_col, event_col)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_log_rank_threshold.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"input_data tbl_df data.frame observation row. relative_risk_col unquote column name indicating column contains relative-risk estimates observation. time_col unquoted column name indicating column contains true time--event information observation. event_col unquoted column name indicating column contains outcome (event censorship). Must binary column - values  either 0 1 (1 indicating adverse event 0 indicating  censorship) FALSE TRUE (TRUE indicating adverse event FALSE indicating censorship).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_log_rank_threshold.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"tibble 3 columns: \"candidate_thresholds\" (relative-risk threshold used log-rank test), \"log_rank_p_val\" (p-values log-rank tests) \"is_best\" (logical value indicating candidate threshold gave optimal, .e. smallest, p-value).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_panel_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Use tidytof's opinionated heuristic for extracted a high-dimensional cytometry panel's metal-antigen pairs\nfrom a flowFrame (read from a .fcs file.) — tof_find_panel_info","title":"Use tidytof's opinionated heuristic for extracted a high-dimensional cytometry panel's metal-antigen pairs\nfrom a flowFrame (read from a .fcs file.) — tof_find_panel_info","text":"Using character vectors obtained `name` `desc` columns parameters data flowFrame, figure high-dimensional cytometry panel used collect data return tidy tibble.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_panel_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use tidytof's opinionated heuristic for extracted a high-dimensional cytometry panel's metal-antigen pairs\nfrom a flowFrame (read from a .fcs file.) — tof_find_panel_info","text":"","code":"tof_find_panel_info(input_flowFrame)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_panel_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use tidytof's opinionated heuristic for extracted a high-dimensional cytometry panel's metal-antigen pairs\nfrom a flowFrame (read from a .fcs file.) — tof_find_panel_info","text":"input_flowFrame raw flowFrame (just read .fcs file) high-dimensional cytometry panel extracted","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_panel_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use tidytof's opinionated heuristic for extracted a high-dimensional cytometry panel's metal-antigen pairs\nfrom a flowFrame (read from a .fcs file.) — tof_find_panel_info","text":"tibble 2 columns (`metals` `antigens`) correspond metals antigens high-dimensional cytometry panel used data acquisition.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_fit_split.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a glmnet model and calculate performance metrics using a single rsplit object — tof_fit_split","title":"Fit a glmnet model and calculate performance metrics using a single rsplit object — tof_fit_split","text":"function trains glmnet model training set rsplit object, calculates performance metrics model validation/holdout set combinations mixture penalty hyperparameters provided hyperparameter grid.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_fit_split.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a glmnet model and calculate performance metrics using a single rsplit object — tof_fit_split","text":"","code":"tof_fit_split(   split_data,   prepped_recipe,   hyperparameter_grid,   model_type,   outcome_colnames )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_fit_split.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a glmnet model and calculate performance metrics using a single rsplit object — tof_fit_split","text":"split_data `rsplit` object rsample package. Alternatively, unsplit tbl_df can provided, though recommended. prepped_recipe trained recipe hyperparameter_grid tibble containing hyperparameter values tune. Can created using tof_create_grid model_type string representing type glmnet model fit. outcome_colnames Quoted column names indicating columns data fit represent outcome variables (others assumed predictors).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_fit_split.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit a glmnet model and calculate performance metrics using a single rsplit object — tof_fit_split","text":"tibble number rows input hyperparameter grid. row represents combination mixture penalty, column contains performance metric fitted glmnet model `split_data`'s holdout set. specific performance metrics depend type model fit: \"linear\" mean-squared error (`mse`) mean absolute error (`mae`) \"two-class\" binomial deviance (`binomial_deviance`); misclassification error rate `misclassification_error`; area receiver-operating curve (`roc_auc`); `mse` `mse` \"multiclass\" multinomial deviance (`multinomial_deviance`); misclassification error rate `misclassification_error`; area receiver-operating curve (`roc_auc`) computed using Hand-Till method roc_auc; `mse` `mse` \"survival\" negative log2-transformed partial likelihood (`neg_log_partial_likelihood`) Harrel's concordance index (often simply called \"C\"; `concordance_index`)","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_fit_split.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fit a glmnet model and calculate performance metrics using a single rsplit object — tof_fit_split","text":"Harrel Jr, F. E. Lee, K. L. Mark, D. B. (1996) Tutorial biostatistics: multivariable prognostic models: issues developing models, evaluating assumptions adequacy, measuring reducing error, Statistics Medicine, 15, pages 361–387.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_generate_palette.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a color palette using tidytof. — tof_generate_palette","title":"Generate a color palette using tidytof. — tof_generate_palette","text":"function generates color palette based color palette author's favorite pokemon.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_generate_palette.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a color palette using tidytof. — tof_generate_palette","text":"","code":"tof_generate_palette(num_colors)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_generate_palette.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a color palette using tidytof. — tof_generate_palette","text":"num_colors integer specifying number colors like generate.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_generate_palette.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a color palette using tidytof. — tof_generate_palette","text":"character vector hex codes specifying colors palette.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_generate_palette.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a color palette using tidytof. — tof_generate_palette","text":"","code":"tof_generate_palette(num_colors = 5L) #> [1] \"#D86020\" \"#28A8B8\" \"#F89040\" \"#D0D0D0\" \"#903000\""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_mixture.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s optimal mixture (alpha) value — tof_get_model_mixture","title":"Get a `tof_model`'s optimal mixture (alpha) value — tof_get_model_mixture","text":"Get `tof_model`'s optimal mixture (alpha) value","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_mixture.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s optimal mixture (alpha) value — tof_get_model_mixture","text":"","code":"tof_get_model_mixture(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_mixture.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s optimal mixture (alpha) value — tof_get_model_mixture","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_mixture.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s optimal mixture (alpha) value — tof_get_model_mixture","text":"numeric value","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_mixture.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s optimal mixture (alpha) value — tof_get_model_mixture","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_mixture(regression_model) #> [1] 0"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_outcomes.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s outcome variable name(s) — tof_get_model_outcomes","title":"Get a `tof_model`'s outcome variable name(s) — tof_get_model_outcomes","text":"Get `tof_model`'s outcome variable name(s)","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_outcomes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s outcome variable name(s) — tof_get_model_outcomes","text":"","code":"tof_get_model_outcomes(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_outcomes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s outcome variable name(s) — tof_get_model_outcomes","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_outcomes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s outcome variable name(s) — tof_get_model_outcomes","text":"character vector","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_outcomes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s outcome variable name(s) — tof_get_model_outcomes","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_outcomes(regression_model) #> [1] \"outcome\""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_penalty.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s optimal penalty (lambda) value — tof_get_model_penalty","title":"Get a `tof_model`'s optimal penalty (lambda) value — tof_get_model_penalty","text":"Get `tof_model`'s optimal penalty (lambda) value","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_penalty.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s optimal penalty (lambda) value — tof_get_model_penalty","text":"","code":"tof_get_model_penalty(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_penalty.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s optimal penalty (lambda) value — tof_get_model_penalty","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_penalty.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s optimal penalty (lambda) value — tof_get_model_penalty","text":"numeric value","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_penalty.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s optimal penalty (lambda) value — tof_get_model_penalty","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_penalty(regression_model) #> [1] 1e-10"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_training_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s training data — tof_get_model_training_data","title":"Get a `tof_model`'s training data — tof_get_model_training_data","text":"Get `tof_model`'s training data","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_training_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s training data — tof_get_model_training_data","text":"","code":"tof_get_model_training_data(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_training_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s training data — tof_get_model_training_data","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_training_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s training data — tof_get_model_training_data","text":"tibble (non-preprocessed) training data used fit model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_training_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s training data — tof_get_model_training_data","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_training_data(regression_model) #> # A tibble: 100 × 9 #>    sample   cd45 pstat5  cd34 outcome class  multiclass event time_to_event #>    <chr>   <dbl>  <dbl> <dbl>   <dbl> <fct>  <fct>      <dbl>         <dbl> #>  1 47     0.309   0.836 0.545   4.30  class1 class2         1         11.4  #>  2 48     0.0700  0.338 0.252   2.20  class2 class2         1          9.18 #>  3 22     0.533   0.432 0.261   5.08  class1 class1         0          7.14 #>  4 86     0.921   0.102 0.590   3.58  class1 class3         1          9.64 #>  5 76     0.248   0.141 0.245   0.872 class2 class3         1         13.4  #>  6 88     0.193   0.383 0.125   3.13  class2 class3         1         12.1  #>  7 30     0.0451  0.991 0.756   4.61  class1 class1         0          9.77 #>  8 78     0.595   0.664 0.146   3.65  class1 class3         1          7.48 #>  9 4      0.621   0.245 0.897   3.36  class2 class1         0         14.1  #> 10 19     0.599   0.419 0.581   4.72  class1 class1         0         10.4  #> # ℹ 90 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s model type — tof_get_model_type","title":"Get a `tof_model`'s model type — tof_get_model_type","text":"Get `tof_model`'s model type","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s model type — tof_get_model_type","text":"","code":"tof_get_model_type(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s model type — tof_get_model_type","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s model type — tof_get_model_type","text":"string","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_type.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s model type — tof_get_model_type","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_type(regression_model) #> [1] \"linear\""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_x.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s processed predictor matrix (for glmnet) — tof_get_model_x","title":"Get a `tof_model`'s processed predictor matrix (for glmnet) — tof_get_model_x","text":"Get `tof_model`'s processed predictor matrix (glmnet)","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_x.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s processed predictor matrix (for glmnet) — tof_get_model_x","text":"","code":"tof_get_model_x(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_x.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s processed predictor matrix (for glmnet) — tof_get_model_x","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_x.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s processed predictor matrix (for glmnet) — tof_get_model_x","text":"x value formatted glmnet","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_x.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s processed predictor matrix (for glmnet) — tof_get_model_x","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_x(regression_model) #>               cd45       pstat5        cd34 #>   [1,]  0.84123941 -1.546612341  0.02193973 #>   [2,] -0.16152645 -1.020930027 -1.15599729 #>   [3,] -0.26451467 -0.792585586  0.62250868 #>   [4,] -1.58414460 -0.300957284 -0.17627421 #>   [5,] -1.41588873 -0.554332035 -0.97006138 #>   [6,] -1.63173027  1.685129510  0.10883552 #>   [7,]  0.17810623  1.507029166 -0.32923966 #>   [8,]  0.96910085 -0.407394815 -1.05367497 #>   [9,] -0.10842096  1.456565647  0.61392901 #>  [10,]  1.37051178 -0.262285459 -0.37998232 #>  [11,]  1.37916434  0.613917217 -0.51139152 #>  [12,]  1.70570957 -0.643696332 -1.80679687 #>  [13,] -0.32129146  0.847293595 -0.82261200 #>  [14,] -1.13578875  0.286946429 -0.02802933 #>  [15,] -0.32048067 -1.669469632 -1.86902984 #>  [16,]  0.83816550  0.513274355  0.11244613 #>  [17,] -0.82658642  0.059524510 -0.26266715 #>  [18,] -0.18422203  0.460887168 -0.89225765 #>  [19,] -1.04040992  0.332794700  0.47154595 #>  [20,]  0.83308944 -0.253066244  0.17216449 #>  [21,] -0.98289342  1.394433934 -1.64114817 #>  [22,]  0.71617434 -0.494023667 -0.39923513 #>  [23,] -1.53413338  1.195961374  1.53726784 #>  [24,]  1.52667922  0.842552564 -1.62940142 #>  [25,] -1.24497900  0.599054476 -0.19759533 #>  [26,]  0.23751009  0.257602468  0.57389957 #>  [27,] -1.51070884  1.491533921  1.10853163 #>  [28,] -0.36740414 -0.858537870 -0.19708034 #>  [29,]  0.45124361  1.007193252 -1.06979365 #>  [30,] -1.14932622 -0.437647062  0.43116967 #>  [31,]  0.64893257  0.553689622  0.48643296 #>  [32,]  0.59085867 -1.760052854  0.96849795 #>  [33,]  1.13016971  1.595478442  0.34620420 #>  [34,] -0.81322426 -1.254230190 -0.08039570 #>  [35,]  1.35993539 -0.106666109  1.83464490 #>  [36,]  1.30527999 -1.231124440 -1.79134858 #>  [37,]  1.64271759 -0.401088947 -1.48359250 #>  [38,]  1.21316534  1.363391270 -0.97095367 #>  [39,] -0.16286426  1.047904371 -0.13471378 #>  [40,] -1.36701659 -1.110219030  0.29804184 #>  [41,]  0.69827481 -0.111192848  0.29790216 #>  [42,] -1.13500226  1.510689191  0.78098597 #>  [43,]  0.65880743 -1.636983081 -0.78926362 #>  [44,] -0.17724678  0.087944972  1.11695536 #>  [45,] -0.71624244  1.160832492 -1.77158425 #>  [46,]  1.21417955  0.782446542 -1.10912475 #>  [47,]  0.79340147 -1.749939812 -0.81166098 #>  [48,] -0.88254544  0.293156924  0.66469109 #>  [49,]  1.12513912 -0.661584819  1.50415918 #>  [50,] -0.89799051 -0.004119285  1.21623216 #>  [51,]  0.46046514 -1.134711354 -1.65631015 #>  [52,]  1.13356913 -1.875489366 -0.99563724 #>  [53,]  0.36135682  0.777676405  0.19620134 #>  [54,] -0.28123197 -1.727369546 -0.61190361 #>  [55,]  0.29195310 -0.659666013 -0.56818175 #>  [56,] -0.92595459  0.065133951 -0.90220133 #>  [57,] -0.55441961 -1.134278556  1.67875251 #>  [58,] -0.86401625 -0.577306692  1.19032577 #>  [59,] -0.15484649  0.680608918  0.60088436 #>  [60,] -1.57884380  0.605785176  1.61360136 #>  [61,]  0.35821382 -1.821218238  1.33318225 #>  [62,] -0.06267037  1.261564921  1.63644646 #>  [63,] -0.13603448  1.562028800  0.10970610 #>  [64,] -1.62583446 -0.710591238  0.47727270 #>  [65,] -1.03848840 -1.062792659  0.04407718 #>  [66,] -0.93002649  0.237576872  0.46586204 #>  [67,] -1.55133929  1.570167566 -0.65192189 #>  [68,] -1.53490851 -0.176162239 -1.25995026 #>  [69,] -0.08092952  0.256342017  1.41328303 #>  [70,]  1.59334648  0.179037420 -0.64187268 #>  [71,] -0.30131681  0.859954143 -0.65711102 #>  [72,]  1.21687642  0.283313676 -0.63618716 #>  [73,]  0.15195406 -0.177130154 -0.59220932 #>  [74,] -1.59602876  0.168547829  0.40989931 #>  [75,] -0.29472171 -0.980836630 -0.39179272 #>  [76,]  1.64582801 -0.949064693 -1.57890020 #>  [77,]  0.97034911  0.232668797  1.46181025 #>  [78,] -0.16626065  0.395717877  1.05763695 #>  [79,]  1.38257621  1.151968016 -1.47616034 #>  [80,] -0.20424155 -0.905637870  1.32555187 #>  [81,] -1.53217991  0.616791219 -0.10017456 #>  [82,]  0.03060032 -1.234503847 -1.28437245 #>  [83,] -0.52958701  0.467710760  0.05861454 #>  [84,] -0.24004460 -0.258513830  0.30467496 #>  [85,]  0.39404115 -1.442515787  1.74448354 #>  [86,] -1.02685484 -1.545830283 -0.09216733 #>  [87,]  0.88479708  0.504350707  0.54357489 #>  [88,]  1.68500473  1.123631731  0.89494738 #>  [89,]  1.04412638  1.617335845  0.79822239 #>  [90,]  1.23127693 -0.399422216 -1.25787442 #>  [91,] -0.34037214  1.342835484  0.96999191 #>  [92,] -0.39905678  0.960744895  0.31018354 #>  [93,]  1.36310094 -0.599006571 -0.06141873 #>  [94,] -0.05213757 -0.786657424 -0.40177473 #>  [95,] -1.11645226  1.418258282  0.64881304 #>  [96,]  0.85176110 -1.637263862 -1.15245232 #>  [97,]  1.09141511 -0.097523372 -0.12363892 #>  [98,]  1.12604860 -0.308820929  1.74425761 #>  [99,] -0.21074515  1.014685818  1.50082017 #> [100,] -1.43009021 -0.830612098  1.60705570"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_y.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s processed outcome variable matrix (for glmnet) — tof_get_model_y","title":"Get a `tof_model`'s processed outcome variable matrix (for glmnet) — tof_get_model_y","text":"Get `tof_model`'s processed outcome variable matrix (glmnet)","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_y.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s processed outcome variable matrix (for glmnet) — tof_get_model_y","text":"","code":"tof_get_model_y(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_y.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s processed outcome variable matrix (for glmnet) — tof_get_model_y","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_y.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s processed outcome variable matrix (for glmnet) — tof_get_model_y","text":"y value formatted glmnet","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_y.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s processed outcome variable matrix (for glmnet) — tof_get_model_y","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_y(regression_model) #>   [1]  3.68691531  2.45946656  1.17454043  5.36195184  1.37479441  4.74935285 #>   [7]  2.49929601  6.30765356  5.07454702  4.38372272  2.79090193 -0.36580127 #>  [13]  3.31373176  0.79312289  3.27172472  4.17435711  3.56076776  4.89585855 #>  [19]  2.68206146  5.41634495  2.29325734  3.22647651  5.16107960  3.82111655 #>  [25]  1.07761966  0.96332275  6.49933376  1.08103908 -0.30848452  6.08700363 #>  [31]  2.12787795  1.82148374  2.48049647  4.65579985  2.32252366  2.55247704 #>  [37]  2.14254667  2.87385856  5.71059399  2.53357172  2.09816690  2.69683407 #>  [43]  2.95427565 -0.06090805  4.82090236  1.87095739  1.62476933  3.62197526 #>  [49]  2.64219298  1.23746352  4.06267469  2.93712068  6.53214842  6.92413819 #>  [55]  2.68729873  2.78041130  2.24160885  5.01436212  2.39298485  0.95637343 #>  [61]  3.55314689  3.02851730  4.26284661  1.72496534  3.92330611  2.39025810 #>  [67]  0.51604262  2.66847401  1.00401279  5.41342298  4.28761768  5.11694546 #>  [73]  6.68509331  4.17396453  5.77319203  3.94013887  4.03115219  4.13582188 #>  [79]  4.56201423  0.36974273  1.96156899  0.75523554  3.91446161  4.51091048 #>  [85] -0.41803417  2.10440993  3.20491165  1.24120000  5.94702292  5.09763871 #>  [91]  4.14037867  1.77700921  3.41845756  5.34744927  1.16281070  4.74382844 #>  [97]  3.10880145  4.14612224  3.81391544  2.79628768"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_panel.html","id":null,"dir":"Reference","previous_headings":"","what":"Get panel information from a tof_tibble — tof_get_panel","title":"Get panel information from a tof_tibble — tof_get_panel","text":"Get panel information tof_tibble","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_panel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get panel information from a tof_tibble — tof_get_panel","text":"","code":"tof_get_panel(tof_tibble)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_panel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get panel information from a tof_tibble — tof_get_panel","text":"tof_tibble `tof_tbl`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_panel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get panel information from a tof_tibble — tof_get_panel","text":"tibble containing information CyTOF panel used data acquisition data contained `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_panel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get panel information from a tof_tibble — tof_get_panel","text":"","code":"input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]] tof_tibble <- tof_read_data(input_file) tof_get_panel(tof_tibble) #> # A tibble: 59 × 2 #>    metals       antigens     #>    <chr>        <chr>        #>  1 Time         Time         #>  2 Event_length Event_length #>  3 Y89          CD45         #>  4 Pd102        empty        #>  5 Pd104        empty        #>  6 Pd105        empty        #>  7 Pd106        empty        #>  8 Pd108        empty        #>  9 Pd110        empty        #> 10 In113        CD61         #> # ℹ 49 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_is_numeric.html","id":null,"dir":"Reference","previous_headings":"","what":"Find if a vector is numeric — tof_is_numeric","title":"Find if a vector is numeric — tof_is_numeric","text":"function takes input vector `.vec` checks either integer double (.e. type vector might encode high-dimensional cytometry measurements).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_is_numeric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find if a vector is numeric — tof_is_numeric","text":"","code":"tof_is_numeric(.vec)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_is_numeric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find if a vector is numeric — tof_is_numeric","text":".vec vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_is_numeric.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find if a vector is numeric — tof_is_numeric","text":"boolean value indicating .vec type integer double.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_knn_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate cells' local densities using K-nearest-neighbor density estimation — tof_knn_density","title":"Estimate cells' local densities using K-nearest-neighbor density estimation — tof_knn_density","text":"function uses distances cell K nearest neighbors estimate local density cell `tof_tbl` `tibble` containing high-dimensional cytometry data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_knn_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate cells' local densities using K-nearest-neighbor density estimation — tof_knn_density","text":"","code":"tof_knn_density(   tof_tibble,   distance_cols = where(tof_is_numeric),   num_neighbors = min(15L, nrow(tof_tibble)),   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\"),   estimation_method = c(\"mean_distance\", \"sum_distance\"),   normalize = TRUE,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_knn_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate cells' local densities using K-nearest-neighbor density estimation — tof_knn_density","text":"tof_tibble `tof_tbl` `tibble`. distance_cols Unquoted names columns `tof_tibble` use calculating cell--cell distances local density estimation cell. Defaults numeric columns `tof_tibble`. num_neighbors integer indicating number nearest neighbors use estimating local density cell. Defaults minimum 15 number rows `tof_tibble`. distance_function string indicating distance function use calculating cell--cell distances local density estimation. Options include \"euclidean\" (default) \"cosine\". estimation_method string indicating relative density cell calculated distances k nearest neighbors. Options \"mean_distance\" (default; estimates relative density cell's neighborhood taking negative average distances nearest neighbors) \"sum_distance\" (estimates relative density cell's neighborhood taking negative sum distances nearest neighbors). normalize boolean value indicating vector local density estimates normalized values 0 1. Defaults TRUE. ... Additional optional arguments pass tof_find_knn.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_knn_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate cells' local densities using K-nearest-neighbor density estimation — tof_knn_density","text":"tibble single column named \".knn_density\" containing local density estimates input cell `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_log_rank_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"Compute log-rank test p-value difference two survival curves obtained splitting dataset \"low\" \"high\" risk group using given relative-risk threshold.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_log_rank_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"","code":"tof_log_rank_test(   input_data,   relative_risk_col,   time_col,   event_col,   threshold )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_log_rank_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"input_data tbl_df data.frame observation row. relative_risk_col unquote column name indicating column contains relative-risk estimates observation. time_col unquoted column name indicating column contains true time--event information observation. event_col unquoted column name indicating column contains outcome (event censorship). Must binary column - values  either 0 1 (1 indicating adverse event 0 indicating  censorship) FALSE TRUE (TRUE indicating adverse event FALSE indicating censorship). threshold numeric value indicating relative-risk threshold used split observations low- high-risk groups.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_log_rank_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"numeric value <1, p-value log-rank test.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_log_rank_test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_knn_graph.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — tof_make_knn_graph","title":"Title — tof_make_knn_graph","text":"Title","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_knn_graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — tof_make_knn_graph","text":"","code":"tof_make_knn_graph(   tof_tibble,   knn_cols,   num_neighbors,   distance_function = c(\"euclidean\", \"cosine\"),   graph_type = c(\"weighted\", \"unweighted\"),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_knn_graph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — tof_make_knn_graph","text":"tof_tibble tibble tof_tbl. knn_cols Unquoted column names indicating columns tof_tibble used KNN calculation. num_neighbors integer number neighbors find cell ( including ). distance_function string indicating distance function use nearest-neighbor calculation. Options include \"euclidean\" (default) \"cosine\" distances. graph_type string indicating graph's edges weights (\"weighted\"; default) (\"unweighted\"). ... Optional additional arguments pass tof_find_knn","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_knn_graph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — tof_make_knn_graph","text":"tbl_graph.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_knn_graph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title — tof_make_knn_graph","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_roc_curve.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute a receiver-operating curve (ROC) for a two-class or multiclass dataset — tof_make_roc_curve","title":"Compute a receiver-operating curve (ROC) for a two-class or multiclass dataset — tof_make_roc_curve","text":"Compute receiver-operating curve (ROC) two-class multiclass dataset","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_roc_curve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute a receiver-operating curve (ROC) for a two-class or multiclass dataset — tof_make_roc_curve","text":"","code":"tof_make_roc_curve(input_data, truth_col, prob_cols)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_roc_curve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute a receiver-operating curve (ROC) for a two-class or multiclass dataset — tof_make_roc_curve","text":"input_data tof_tbl, tbl_df, data.frame row observation. truth_col unquoted column name indicating column `input_data` contains true class labels observation. Must factor. prob_cols Unquoted column names indicating columns `input_data` contain probability estimates class `truth_col`. columns must specified order factor levels `truth_col`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_roc_curve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute a receiver-operating curve (ROC) for a two-class or multiclass dataset — tof_make_roc_curve","text":"tibble can used plot ROC classification task. candidate probability threshold, following reported: specificity, sensitivity, true-positive rate (tpr), false-positive rate (fpr).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_roc_curve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute a receiver-operating curve (ROC) for a two-class or multiclass dataset — tof_make_roc_curve","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             )     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a logistic regression classifier log_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = class,         model_type = \"two-class\"     )  # make predictions predictions <-     tof_predict(         log_model,         new_data = feature_tibble,         prediction_type = \"response\"     ) prediction_tibble <-     dplyr::tibble(         truth = feature_tibble$class,         prediction = predictions$.pred     )  # make ROC curve tof_make_roc_curve(     input_data = prediction_tibble,     truth_col = truth,     prob_cols = prediction )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster.html","id":null,"dir":"Reference","previous_headings":"","what":"Metacluster clustered CyTOF data. — tof_metacluster","title":"Metacluster clustered CyTOF data. — tof_metacluster","text":"function wrapper around tidytof's tof_metacluster_* function family. performs metaclustering CyTOF data using user-specified method (5 choices) method's corresponding input parameters.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metacluster clustered CyTOF data. — tof_metacluster","text":"","code":"tof_metacluster(   tof_tibble,   cluster_col,   metacluster_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   ...,   augment = TRUE,   method = c(\"consensus\", \"hierarchical\", \"kmeans\", \"phenograph\", \"flowsom\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metacluster clustered CyTOF data. — tof_metacluster","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. metacluster_cols Unquoted column names indicating columns `tof_tibble` use computing metaclusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster metaclustering. function used compute summary statistic input cluster `cluster_col` across columns specified `metacluster_cols`, resulting vector (one cluster) used input metaclustering. Defaults median. ... Additional arguments pass `tof_metacluster_*` function family member corresponding chosen `method`. augment boolean value indicating output column-bind metacluster ids cell new column `tof_tibble` (TRUE; default) single-column tibble including metacluster ids returned (FALSE). method string indicating clustering method used. Valid values include \"consensus\", \"hierarchical\", \"kmeans\", \"phenograph\", \"flowsom\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metacluster clustered CyTOF data. — tof_metacluster","text":"`tof_tbl` `tibble` augment = FALSE, single column encoding metacluster ids cell `tof_tibble`. augment = TRUE, ncol(tof_tibble) + 1 columns: (unaltered) columns `tof_tibble` plus additional column encoding metacluster ids.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metacluster clustered CyTOF data. — tof_metacluster","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  tof_metacluster(     tof_tibble = sim_data,     cluster_col = cluster_id,     clustering_algorithm = \"consensus\",     method = \"flowsom\" ) #> # A tibble: 1,000 × 6 #>       cd45    cd38    cd34   cd19 cluster_id .flowsom_metacluster #>      <dbl>   <dbl>   <dbl>  <dbl> <chr>      <chr>                #>  1 -0.292  -0.235   0.0411  0.386 c          3                    #>  2 -0.297   1.76    0.751   1.39  j          1                    #>  3  1.02   -0.153   0.486   0.831 z          2                    #>  4 -1.53   -0.0284 -0.805   0.706 r          6                    #>  5 -0.0567 -0.0575  0.0875  1.24  w          2                    #>  6  0.124  -0.418   0.0250  1.28  d          2                    #>  7  1.91   -0.166  -1.99   -0.569 g          3                    #>  8  0.446  -0.552  -0.725  -0.571 a          1                    #>  9  1.50    0.142  -0.313   2.02  a          1                    #> 10 -0.166  -0.553  -0.923   0.348 h          2                    #> # ℹ 990 more rows  tof_metacluster(     tof_tibble = sim_data,     cluster_col = cluster_id,     method = \"phenograph\" ) #> # A tibble: 1,000 × 6 #>       cd45    cd38    cd34   cd19 cluster_id .phenograph_metacluster #>      <dbl>   <dbl>   <dbl>  <dbl> <chr>      <chr>                   #>  1 -0.292  -0.235   0.0411  0.386 c          1                       #>  2 -0.297   1.76    0.751   1.39  j          2                       #>  3  1.02   -0.153   0.486   0.831 z          3                       #>  4 -1.53   -0.0284 -0.805   0.706 r          2                       #>  5 -0.0567 -0.0575  0.0875  1.24  w          4                       #>  6  0.124  -0.418   0.0250  1.28  d          3                       #>  7  1.91   -0.166  -1.99   -0.569 g          1                       #>  8  0.446  -0.552  -0.725  -0.571 a          2                       #>  9  1.50    0.142  -0.313   2.02  a          2                       #> 10 -0.166  -0.553  -0.923   0.348 h          3                       #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_consensus.html","id":null,"dir":"Reference","previous_headings":"","what":"Metacluster clustered CyTOF data using consensus clustering — tof_metacluster_consensus","title":"Metacluster clustered CyTOF data using consensus clustering — tof_metacluster_consensus","text":"function performs consensus metaclustering `tof_tbl` containing CyTOF data using user-specified selection input variables/CyTOF measurements number desired metaclusters. See ConsensusClusterPlus additional details.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_consensus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metacluster clustered CyTOF data using consensus clustering — tof_metacluster_consensus","text":"","code":"tof_metacluster_consensus(   tof_tibble,   cluster_col,   metacluster_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   num_metaclusters = 10L,   proportion_clusters = 0.9,   proportion_features = 1,   num_reps = 20L,   clustering_algorithm = c(\"hierarchical\", \"pam\", \"kmeans\"),   distance_function = c(\"euclidean\", \"minkowski\", \"pearson\", \"spearman\", \"maximum\",     \"binary\", \"canberra\"),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_consensus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metacluster clustered CyTOF data using consensus clustering — tof_metacluster_consensus","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. metacluster_cols Unquoted column names indicating columns `tof_tibble` use computing metaclusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster metaclustering. function used compute summary statistic input cluster `cluster_col` across columns specified `metacluster_cols`, resulting vector (one cluster) used input metaclustering. Defaults median. num_metaclusters integer indicating number clusters returned. Defaults 10. proportion_clusters numeric value 0 1 indicating proportion clusters subsample (total number clusters `cluster_col`) iteration consensus clustering. Defaults 0.9 proportion_features numeric value 0 1 indicating proportion features (.e. proportion columns specified `metacluster_cols`) subsample iteration consensus clustering. Defaults 1 (features included). num_reps integer indicating many subsampled replicates run consensus clustering. Defaults 20. clustering_algorithm string indicating clustering algorithm ConsensusClusterPlus use metacluster subsampled clusters resampling. Options \"hierarchical\" (default), \"pam\" (partitioning around medoids), \"kmeans\". distance_function string indicating distance function used compute distances clusters consensus clustering. Options \"euclidean\" (default), \"manhattan\", \"minkowski\", \"pearson\", \"spearman\", \"maximum\", \"binary\", \"canberra\". See ConsensusClusterPlus. ... Optional additional arguments pass ConsensusClusterPlus.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_consensus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metacluster clustered CyTOF data using consensus clustering — tof_metacluster_consensus","text":"tibble single column (`.consensus_metacluster`) number rows input `tof_tibble`. entry column indicates metacluster label assigned row `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_consensus.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metacluster clustered CyTOF data using consensus clustering — tof_metacluster_consensus","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  tof_metacluster_consensus(tof_tibble = sim_data, cluster_col = cluster_id) #> # A tibble: 1,000 × 1 #>    .consensus_metacluster #>    <chr>                  #>  1 1                      #>  2 1                      #>  3 8                      #>  4 3                      #>  5 9                      #>  6 3                      #>  7 8                      #>  8 1                      #>  9 3                      #> 10 8                      #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_flowsom.html","id":null,"dir":"Reference","previous_headings":"","what":"Metacluster clustered CyTOF data using FlowSOM's built-in metaclustering algorithm — tof_metacluster_flowsom","title":"Metacluster clustered CyTOF data using FlowSOM's built-in metaclustering algorithm — tof_metacluster_flowsom","text":"function performs metaclustering `tof_tbl` containing CyTOF data using user-specified selection input variables/CyTOF measurements number desired metaclusters. takes advantage FlowSOM package's built-functionality automatically detecting number metaclusters can use several strategies adapted FlowSOM team: consensus metaclustering, hierarchical metaclustering, k-means metaclustering, metaclustering using FlowSOM algorithm . See MetaClustering additional details.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_flowsom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metacluster clustered CyTOF data using FlowSOM's built-in metaclustering algorithm — tof_metacluster_flowsom","text":"","code":"tof_metacluster_flowsom(   tof_tibble,   cluster_col,   metacluster_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   num_metaclusters = 10L,   clustering_algorithm = c(\"consensus\", \"hierarchical\", \"kmeans\", \"som\"),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_flowsom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metacluster clustered CyTOF data using FlowSOM's built-in metaclustering algorithm — tof_metacluster_flowsom","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. metacluster_cols Unquoted column names indicating columns `tof_tibble` use computing metaclusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster metaclustering. function used compute summary statistic input cluster `cluster_col` across columns specified `metacluster_cols`, resulting vector (one cluster) used input metaclustering. Defaults median. num_metaclusters integer indicating maximum number clusters returned. Defaults 10. Note function, output may provide small number metaclusters requested. MetaClustering uses \"Elbow method\" automatically detect optimal number metaclusters. clustering_algorithm string indicating clustering algorithm MetaClustering use perform metaclustering. Options \"consensus\" (default), \"hierarchical\", \"kmeans\", \"som\" (.e. self-organizing map; FlowSOM algorithm ). ... Optional additional arguments pass MetaClustering.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_flowsom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metacluster clustered CyTOF data using FlowSOM's built-in metaclustering algorithm — tof_metacluster_flowsom","text":"tibble single column (`.flowsom_metacluster`) number rows input `tof_tibble`. entry column indicates metacluster label assigned row `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_flowsom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metacluster clustered CyTOF data using FlowSOM's built-in metaclustering algorithm — tof_metacluster_flowsom","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  tof_metacluster_flowsom(     tof_tibble = sim_data,     cluster_col = cluster_id,     clustering_algorithm = \"consensus\" ) #> # A tibble: 1,000 × 1 #>    .flowsom_metacluster #>    <chr>                #>  1 2                    #>  2 2                    #>  3 2                    #>  4 1                    #>  5 1                    #>  6 4                    #>  7 2                    #>  8 1                    #>  9 4                    #> 10 1                    #> # ℹ 990 more rows  tof_metacluster_flowsom(     tof_tibble = sim_data,     cluster_col = cluster_id,     clustering_algorithm = \"som\" ) #> # A tibble: 1,000 × 1 #>    .flowsom_metacluster #>    <chr>                #>  1 3                    #>  2 4                    #>  3 3                    #>  4 2                    #>  5 2                    #>  6 1                    #>  7 3                    #>  8 2                    #>  9 1                    #> 10 2                    #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_hierarchical.html","id":null,"dir":"Reference","previous_headings":"","what":"Metacluster clustered CyTOF data using hierarchical agglomerative clustering — tof_metacluster_hierarchical","title":"Metacluster clustered CyTOF data using hierarchical agglomerative clustering — tof_metacluster_hierarchical","text":"function performs hierarchical metaclustering `tof_tbl` containing CyTOF data using user-specified selection input variables/CyTOF measurements number desired metaclusters. See hclust.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_hierarchical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metacluster clustered CyTOF data using hierarchical agglomerative clustering — tof_metacluster_hierarchical","text":"","code":"tof_metacluster_hierarchical(   tof_tibble,   cluster_col,   metacluster_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   num_metaclusters = 10L,   distance_function = c(\"euclidean\", \"manhattan\", \"minkowski\", \"maximum\", \"canberra\",     \"binary\"),   agglomeration_method = c(\"complete\", \"single\", \"average\", \"median\", \"centroid\",     \"ward.D\", \"ward.D2\", \"mcquitty\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_hierarchical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metacluster clustered CyTOF data using hierarchical agglomerative clustering — tof_metacluster_hierarchical","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. metacluster_cols Unquoted column names indicating columns `tof_tibble` use computing metaclusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster metaclustering. function used compute summary statistic input cluster `cluster_col` across columns specified `metacluster_cols`, resulting vector (one cluster) used input metaclustering. Defaults median. num_metaclusters integer indicating number clusters returned. Defaults 10. distance_function string indicating distance function used compute distances clusters hierarchical metaclustering. Options \"euclidean\" (default), \"manhattan\", \"minkowski\", \"maximum\", \"canberra\", \"binary\". See dist additional details. agglomeration_method string indicating agglomeration algorithm used hierarchical cluster combination. Options \"complete\" (default), \"single\", \"average\", \"median\", \"centroid\", \"ward.D\", \"ward.D2\", \"mcquitty\". See hclust details.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_hierarchical.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metacluster clustered CyTOF data using hierarchical agglomerative clustering — tof_metacluster_hierarchical","text":"tibble single column (`.hierarchical_metacluster`) number rows input `tof_tibble`. entry column indicates metacluster label assigned row `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_hierarchical.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metacluster clustered CyTOF data using hierarchical agglomerative clustering — tof_metacluster_hierarchical","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  tof_metacluster_hierarchical(tof_tibble = sim_data, cluster_col = cluster_id) #> # A tibble: 1,000 × 1 #>    .hierarchical_metacluster #>    <chr>                     #>  1 4                         #>  2 8                         #>  3 8                         #>  4 3                         #>  5 3                         #>  6 3                         #>  7 4                         #>  8 1                         #>  9 7                         #> 10 6                         #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_kmeans.html","id":null,"dir":"Reference","previous_headings":"","what":"Metacluster clustered CyTOF data using k-means clustering — tof_metacluster_kmeans","title":"Metacluster clustered CyTOF data using k-means clustering — tof_metacluster_kmeans","text":"function performs k-means metaclustering `tof_tbl` containing CyTOF data using user-specified selection input variables/CyTOF measurements number desired metaclusters. See hclust.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_kmeans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metacluster clustered CyTOF data using k-means clustering — tof_metacluster_kmeans","text":"","code":"tof_metacluster_kmeans(   tof_tibble,   cluster_col,   metacluster_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   num_metaclusters = 10L,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_kmeans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metacluster clustered CyTOF data using k-means clustering — tof_metacluster_kmeans","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. metacluster_cols Unquoted column names indicating columns `tof_tibble` use computing metaclusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster metaclustering. function used compute summary statistic input cluster `cluster_col` across columns specified `metacluster_cols`, resulting vector (one cluster) used input metaclustering. Defaults median. num_metaclusters integer indicating number clusters returned. Defaults 10. ... Optional additional method specifications pass tof_cluster_kmeans.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_kmeans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metacluster clustered CyTOF data using k-means clustering — tof_metacluster_kmeans","text":"tibble single column (`.kmeans_metacluster`) number rows input `tof_tibble`. entry column indicates metacluster label assigned row `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_kmeans.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metacluster clustered CyTOF data using k-means clustering — tof_metacluster_kmeans","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  tof_metacluster_kmeans(tof_tibble = sim_data, cluster_col = cluster_id) #> # A tibble: 1,000 × 1 #>    .kmeans_metacluster #>    <chr>               #>  1 9                   #>  2 2                   #>  3 1                   #>  4 4                   #>  5 7                   #>  6 7                   #>  7 4                   #>  8 4                   #>  9 1                   #> 10 3                   #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_phenograph.html","id":null,"dir":"Reference","previous_headings":"","what":"Metacluster clustered CyTOF data using PhenoGraph clustering — tof_metacluster_phenograph","title":"Metacluster clustered CyTOF data using PhenoGraph clustering — tof_metacluster_phenograph","text":"function performs PhenoGraph metaclustering `tof_tbl` containing CyTOF data using user-specified selection input variables/CyTOF measurements. number metaclusters automatically detected PhenoGraph algorithm. See tof_cluster_phenograph.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_phenograph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metacluster clustered CyTOF data using PhenoGraph clustering — tof_metacluster_phenograph","text":"","code":"tof_metacluster_phenograph(   tof_tibble,   cluster_col,   metacluster_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   num_neighbors = 5L,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_phenograph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metacluster clustered CyTOF data using PhenoGraph clustering — tof_metacluster_phenograph","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. metacluster_cols Unquoted column names indicating columns `tof_tibble` use computing metaclusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster metaclustering. function used compute summary statistic input cluster `cluster_col` across columns specified `metacluster_cols`, resulting vector (one cluster) used input metaclustering. Defaults median. num_neighbors integer indicating number neighbors use constructing PhenoGraph's k-nearest-neighbor graph. Smaller values emphasize local graph structure; larger values emphasize global graph structure (add time computation). Defaults 5. ... Optional additional method specifications pass tof_cluster_phenograph.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_phenograph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metacluster clustered CyTOF data using PhenoGraph clustering — tof_metacluster_phenograph","text":"tibble single column (`.phenograph_metacluster`) number rows input `tof_tibble`. entry column indicates metacluster label assigned row `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_phenograph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metacluster clustered CyTOF data using PhenoGraph clustering — tof_metacluster_phenograph","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  tof_metacluster_phenograph(tof_tibble = sim_data, cluster_col = cluster_id) #> # A tibble: 1,000 × 1 #>    .phenograph_metacluster #>    <chr>                   #>  1 1                       #>  2 3                       #>  3 4                       #>  4 1                       #>  5 2                       #>  6 2                       #>  7 4                       #>  8 1                       #>  9 1                       #> 10 3                       #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot marker expression density plots — tof_plot_cells_density","title":"Plot marker expression density plots — tof_plot_cells_density","text":"function plots marker expression density plots user-specified column tof_tbl. Optionally, cells can grouped plot multiple vertically-arranged density plots","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot marker expression density plots — tof_plot_cells_density","text":"","code":"tof_plot_cells_density(   tof_tibble,   marker_col,   group_col,   num_points = 512,   theme = ggplot2::theme_bw(),   use_ggridges = FALSE,   scale = 1,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot marker expression density plots — tof_plot_cells_density","text":"tof_tibble `tof_tbl` `tibble`. marker_col unquoted column name representing column `tof_tibble` (.e. CyTOF protein measurement) included feature extraction calculation. group_col Unquoted column names representing column `tof_tibble` used break rows `tof_tibble` subgroups plotted separate histograms. Defaults plotting without subgroups. num_points number points along full range `marker_col` density calculated theme ggplot2 theme plot. Defaults theme_bw use_ggridges boolean value indicting geom_ridgeline used plot overlain histograms. Defaults FALSE. TRUE, ggridges package must installed. scale Use set `scale` argument geom_ridgeline, controls far apart (vertically) density plots arranged along y-axis. Defaults 1. ... Additional optional arguments send geom_ridgeline.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot marker expression density plots — tof_plot_cells_density","text":"ggplot object","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot marker expression density plots — tof_plot_cells_density","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(c(\"a\", \"b\"), size = 1000, replace = TRUE)     )  density_plot <-     tof_plot_cells_density(         tof_tibble = sim_data,         marker_col = cd45,         group_col = cluster_id     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_embedding.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot scatterplots of single-cell data using low-dimensional feature embeddings — tof_plot_cells_embedding","title":"Plot scatterplots of single-cell data using low-dimensional feature embeddings — tof_plot_cells_embedding","text":"function makes scatterplots using single-cell data embedded low-dimensional space (generated tof_reduce_dimensions, point colored using user-specified variable.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_embedding.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot scatterplots of single-cell data using low-dimensional feature embeddings — tof_plot_cells_embedding","text":"","code":"tof_plot_cells_embedding(   tof_tibble,   embedding_cols,   color_col,   facet_cols,   compute_embedding_cols = where(tof_is_numeric),   embedding_method = c(\"pca\", \"tsne\", \"umap\"),   embedding_args = list(),   theme = ggplot2::theme_bw(),   ...,   method = c(\"ggplot2\", \"scattermore\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_embedding.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot scatterplots of single-cell data using low-dimensional feature embeddings — tof_plot_cells_embedding","text":"tof_tibble `tof_tbl` `tibble`. embedding_cols Unquoted column names indicating columns `tof_tibble` used x y axes scatterplot. Supports tidyselect helpers. Must select exactly 2 columns. provided, feature embedding can computed scratch using method provided using `embedding_method` argument tof_reduce_dimensions arguments passed `embedding_args`. color_col unquoted column name specifying column `tof_tibble` used color point scatterplot. facet_cols unquoted column name specifying column `tof_tibble` used break scatterplot facets using facet_wrap. compute_embedding_cols Unquoted column names indicating columns 'tof_tibble' use computing embeddings method specified `embedding_method`. Defaults numeric columns 'tof_tibble'. Supports tidyselect helpers. embedding_method string indicating method used feature embedding (`embedding_cols` provided). Options (passed tof_reduce_dimensions) \"pca\" (default), \"tsne\", \"umap\". embedding_args Optional additional arguments pass tof_reduce_dimensions. example, `method = \"tsne\"`, might include `num_comp`, `perplexity`, `theta`. theme ggplot2 theme apply scatterplot. Defaults theme_bw. ... Optional additional arguments pass tof_plot_cells_scatter. method string indicating plotting engine used. Valid values include \"ggplot2\" (default) \"scattermore\" (recommended 100K cells plotted). Note method = \"scattermore\" requires scattermore package installed.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_embedding.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot scatterplots of single-cell data using low-dimensional feature embeddings — tof_plot_cells_embedding","text":"ggplot object.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_embedding.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot scatterplots of single-cell data using low-dimensional feature embeddings — tof_plot_cells_embedding","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = c(rnorm(n = 500), rnorm(n = 500, mean = 2)),         cd34 = c(rnorm(n = 500), rnorm(n = 500, mean = 4)),         cd19 = rnorm(n = 1000),         cluster_id = c(rep(\"a\", 500), rep(\"b\", 500))     )  # embed with pca pca_plot <-     tof_plot_cells_embedding(         tof_tibble = sim_data,         color_col = cd38,         embedding_method = \"pca\",         compute_embedding_cols = starts_with(\"cd\")     )  # embed with tsne tsne_plot <-     tof_plot_cells_embedding(         tof_tibble = sim_data,         color_col = cluster_id,         embedding_method = \"tsne\",         compute_embedding_cols = starts_with(\"cd\")     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_layout.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot force-directed layouts of single-cell data — tof_plot_cells_layout","title":"Plot force-directed layouts of single-cell data — tof_plot_cells_layout","text":"function makes force-directed layouts using single-cell data embedded 2-dimensional space representing k-nearest-neighbor graph constructed using cell--cell similarities. node force-directed layout represents single cell colored using user-specified variable.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_layout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot force-directed layouts of single-cell data — tof_plot_cells_layout","text":"","code":"tof_plot_cells_layout(   tof_tibble,   knn_cols = where(tof_is_numeric),   color_col,   facet_cols,   num_neighbors = 5,   graph_type = c(\"weighted\", \"unweighted\"),   graph_layout = \"fr\",   distance_function = c(\"euclidean\", \"cosine\"),   edge_alpha = 0.25,   node_size = 2,   theme = ggplot2::theme_void(),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_layout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot force-directed layouts of single-cell data — tof_plot_cells_layout","text":"tof_tibble `tof_tbl` `tibble`. knn_cols Unquoted column names indicating columns `tof_tibble` used compute cell--cell distances used construct k-nearest-neighbor graph. Supports tidyselect helpers. Defaults numeric columns. color_col Unquoted column name indicating column `tof_tibble` used color nodes force-directed layout. facet_cols Unquoted column names indicating columns `tof_tibble` used separate nodes different force-directed layouts. num_neighbors integer specifying many neighbors used construct k-nearest neighbor graph. graph_type string specifying k-nearest neighbor graph \"weighted\" (default) \"unweighted\". graph_layout string specifying algorithm used compute force-directed layout. Passed ggraph. Defaults \"fr\", Fruchterman-Reingold algorithm. examples include \"nicely\", \"gem\", \"kk\", many others. See layout_tbl_graph_igraph examples. distance_function string indicating distance function use computing cell--cell distances. Valid options include \"euclidean\" (default) \"cosine\". edge_alpha numeric value 0 1 specifying transparency edges drawn force-directed layout. Defaults 0.25. node_size numeric value specifying size nodes force-directed layout. Defaults 2. theme ggplot2 theme apply force-directed layout. Defaults theme_void ... hnsw_knn","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_layout.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot force-directed layouts of single-cell data — tof_plot_cells_layout","text":"ggraph/ggplot object.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_layout.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot force-directed layouts of single-cell data — tof_plot_cells_layout","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = c(rnorm(n = 500), rnorm(n = 500, mean = 2)),         cd34 = c(rnorm(n = 500), rnorm(n = 500, mean = 4)),         cd19 = rnorm(n = 1000),         cluster_id = c(rep(\"a\", 500), rep(\"b\", 500))     )  # make a layout colored by a marker layout_cd38 <-     tof_plot_cells_layout(         tof_tibble = sim_data,         color_col = cd38     )  # make a layout colored by cluster id layout_cluster <-     tof_plot_cells_layout(         tof_tibble = sim_data,         color_col = cluster_id,     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_scatter.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot scatterplots of single-cell data. — tof_plot_cells_scatter","title":"Plot scatterplots of single-cell data. — tof_plot_cells_scatter","text":"function makes scatterplots single-cell data using user-specified x- y-axes. Additionally, point scatterplot can colored using user-specified variable.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_scatter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot scatterplots of single-cell data. — tof_plot_cells_scatter","text":"","code":"tof_plot_cells_scatter(   tof_tibble,   x_col,   y_col,   color_col,   facet_cols,   theme = ggplot2::theme_bw(),   ...,   method = c(\"ggplot2\", \"scattermore\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_scatter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot scatterplots of single-cell data. — tof_plot_cells_scatter","text":"tof_tibble `tof_tbl` `tibble`. x_col unquoted column name specifying column `tof_tibble` used x-axis. y_col unquoted column name specifying column `tof_tibble` used y-axis. color_col unquoted column name specifying column `tof_tibble` used color point scatterplot. facet_cols unquoted column name specifying column `tof_tibble` used break scatterplot facets using facet_wrap. theme ggplot2 theme apply scatterplot. Defaults theme_bw. ... Optional additional arguments pass geom_point method = \"ggplot2\" geom_scattermore method = \"scattermore\". method string indicating plotting engine used. Valid values include \"ggplot2\" (default) \"scattermore\" (recommended 100K cells plotted). Note method = \"scattermore\" requires scattermore package installed.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_scatter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot scatterplots of single-cell data. — tof_plot_cells_scatter","text":"ggplot object.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_scatter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot scatterplots of single-cell data. — tof_plot_cells_scatter","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = c(rnorm(n = 500), rnorm(n = 500, mean = 2)),         cd34 = c(rnorm(n = 500), rnorm(n = 500, mean = 4)),         cd19 = rnorm(n = 1000),         cluster_id = c(rep(\"a\", 500), rep(\"b\", 500))     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a heatmap summarizing cluster marker expression patterns in CyTOF data — tof_plot_clusters_heatmap","title":"Make a heatmap summarizing cluster marker expression patterns in CyTOF data — tof_plot_clusters_heatmap","text":"function makes heatmap cluster--cluster marker expression patterns single-cell data. Markers plotted along horizontal (x-) axis heatmap cluster IDs plotted along vertical (y-) axis heatmap.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a heatmap summarizing cluster marker expression patterns in CyTOF data — tof_plot_clusters_heatmap","text":"","code":"tof_plot_clusters_heatmap(   tof_tibble,   cluster_col,   marker_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   scale_markerwise = FALSE,   scale_clusterwise = FALSE,   cluster_markers = TRUE,   cluster_clusters = TRUE,   line_width = 0.25,   theme = ggplot2::theme_minimal() )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a heatmap summarizing cluster marker expression patterns in CyTOF data — tof_plot_clusters_heatmap","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names indicating column `tof_tibble` interpreted markers plotted along x-axis heatmap. Supports tidyselect helpers. central_tendency_function function use computing measure central tendency aggregated cluster cluster_col. Defaults median. scale_markerwise boolean value indicating heatmap rescale columns heatmap maximum value marker 1 minimum value 0. Defaults FALSE. scale_clusterwise boolean value indicating heatmap rescale rows heatmap maximum value cluster 1 minimum value 0. Defaults FALSE. cluster_markers boolean value indicating heatmap order columns (.e. markers) using hierarchical clustering. Defaults TRUE. cluster_clusters boolean value indicating heatmap order rows (.e. clusters) using hierarchical clustering. Defaults TRUE. line_width numeric value indicating thick lines separating tiles heatmap . Defaults 0.25. theme ggplot2 theme apply heatmap. Defaults theme_minimal","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a heatmap summarizing cluster marker expression patterns in CyTOF data — tof_plot_clusters_heatmap","text":"ggplot object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_heatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a heatmap summarizing cluster marker expression patterns in CyTOF data — tof_plot_clusters_heatmap","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  heatmap <-     tof_plot_clusters_heatmap(         tof_tibble = sim_data,         cluster_col = cluster_id     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_mst.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize clusters in CyTOF data using a minimum spanning tree (MST). — tof_plot_clusters_mst","title":"Visualize clusters in CyTOF data using a minimum spanning tree (MST). — tof_plot_clusters_mst","text":"function plots minimum-spanning tree using clustered single-cell data order summarize cluster-level characteristics. node MST represents single cluster colored using user-specified variable (either continuous discrete).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_mst.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize clusters in CyTOF data using a minimum spanning tree (MST). — tof_plot_clusters_mst","text":"","code":"tof_plot_clusters_mst(   tof_tibble,   cluster_col,   knn_cols = where(tof_is_numeric),   color_col,   num_neighbors = 5L,   graph_type = c(\"unweighted\", \"weighted\"),   graph_layout = \"nicely\",   central_tendency_function = stats::median,   distance_function = c(\"euclidean\", \"cosine\"),   edge_alpha = 0.4,   node_size = \"cluster_size\",   theme = ggplot2::theme_void(),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_mst.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize clusters in CyTOF data using a minimum spanning tree (MST). — tof_plot_clusters_mst","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. knn_cols Unquoted column names indicating columns `tof_tibble` used compute cluster--cluster distances used construct k-nearest-neighbor graph. Supports tidyselect helpers. Defaults numeric columns. color_col Unquoted column name indicating column `tof_tibble` used color nodes MST. num_neighbors integer specifying many neighbors used construct k-nearest neighbor graph. graph_type string specifying k-nearest neighbor graph \"weighted\" (default) \"unweighted\". graph_layout argument specifies layout MST one two ways. Option 1: Provide string specifying algorithm used compute force-directed layout. Passed ggraph. Defaults \"nicely\", tries automatically select visually-appealing layout. examples include \"fr\", \"gem\", \"kk\", many others. See layout_tbl_graph_igraph examples. Option 2: Provide ggraph object previously generated function. layout used plot ggraph object used template new plot. Using option, number clusters (labels) must identical template. option useful want make multiple plots tof_tibble colored different protein markers, example. central_tendency_function function use computing measure central tendency aggregated cluster cluster_col. Defaults median. distance_function string indicating distance function use computing cluster--clusters distances constructing MST. Valid options include \"euclidean\" (default) \"cosine\". edge_alpha numeric value 0 1 specifying transparency edges drawn force-directed layout. Defaults 0.25. node_size Either numeric value specifying size nodes MST string \"cluster_size\", case size node representing cluster scaled according number cells cluster (default). theme ggplot2 theme apply force-directed layout. Defaults theme_void ... Optional additional arguments hnsw_knn","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_mst.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize clusters in CyTOF data using a minimum spanning tree (MST). — tof_plot_clusters_mst","text":"ggraph/ggplot object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_mst.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize clusters in CyTOF data using a minimum spanning tree (MST). — tof_plot_clusters_mst","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  # make a layout colored by a marker layout_cd38 <-     tof_plot_clusters_mst(         tof_tibble = sim_data,         cluster_col = cluster_id,         color_col = cd38     )  # use the same layout as the plot above to color the same # tree using a different marker layout_cd45 <-     tof_plot_clusters_mst(         tof_tibble = sim_data,         cluster_col = cluster_id,         color_col = cd45,         graph_layout = layout_cd38     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_volcano.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a volcano plot from differential expression analysis results — tof_plot_clusters_volcano","title":"Create a volcano plot from differential expression analysis results — tof_plot_clusters_volcano","text":"function makes volcano plot using results differential expression analysis (DEA) produced one `tof_dea_*` verbs. point volcano plot represents single cluster-marker pair, colored significance level direction marker expression difference.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_volcano.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a volcano plot from differential expression analysis results — tof_plot_clusters_volcano","text":"","code":"tof_plot_clusters_volcano(   dea_result,   num_top_pairs = 10L,   alpha = 0.05,   point_size = 2,   label_size = 3,   nudge_x = 0,   nudge_y = 0.25,   increase_color = \"#207394\",   decrease_color = \"#cd5241\",   insignificant_color = \"#cdcdcd\",   use_ggrepel = FALSE,   theme = ggplot2::theme_bw() )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_volcano.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a volcano plot from differential expression analysis results — tof_plot_clusters_volcano","text":"dea_result tibble containing differential expression analysis (DEA) results produced one members `tof_dea_*` function family. num_top_pairs integer representing number significant cluster-marker pairs labeled volcano plot. alpha numeric value 0 1 representing significance level p-value considered statistically significant. Defaults 0.05. point_size numeric value specifying size points volcano plot. label_size numeric value specifying size text labeling cluster-marker pairs. nudge_x numeric value specifying far cluster-marker pair labels adjusted left (`nudge_x` negative) right (`nudge_x` positive) avoid overlap plotted points. Passed  geom_text, ignored `use_ggrepel` = TRUE. Defaults 0. nudge_y numeric value specifying far cluster-marker pair labels adjusted downwards (`nudge_y` negative) upwards (`nudge_y` positive) avoid overlap plotted points. Passed  geom_text, ignored `use_ggrepel` = TRUE. Defaults 0.25. increase_color hex code specifying fill color used points corresponding cluster-marker pairs significant increases detected. decrease_color hex code specifying fill color used points corresponding cluster-marker pairs significant decreases detected. insignificant_color hex code specifying fill color used points corresponding cluster-marker pairs significant differences detected. use_ggrepel boolean value indicting geom_text_repel used plot labels cluster-marker pairs. Defaults FALSE. TRUE, ggrepel package must installed. theme ggplot2 theme apply volcano plot. Defaults theme_bw","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_volcano.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a volcano plot from differential expression analysis results — tof_plot_clusters_volcano","text":"ggplot object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_volcano.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a volcano plot from differential expression analysis results — tof_plot_clusters_volcano","text":"","code":"# create a mock differential expression analysis result sim_dea_result <-     dplyr::tibble(         cluster_id = rep(letters, 2),         marker = rep(c(\"cd45\", \"cd34\"), times = length(letters)),         p_adj = runif(n = 2 * length(letters), min = 0, max = 0.5),         mean_fc = runif(n = 2 * length(letters), min = 0.01, max = 10),         significant = dplyr::if_else(p_adj < 0.05, \"*\", \"\")     )  attr(sim_dea_result, which = \"dea_method\") <- \"t_unpaired\"  # create the volcano plot volcano <- tof_plot_clusters_volcano(dea_result = sim_dea_result)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a heatmap summarizing group marker expression patterns in high-dimensional cytometry data — tof_plot_heatmap","title":"Make a heatmap summarizing group marker expression patterns in high-dimensional cytometry data — tof_plot_heatmap","text":"function makes heatmap group--group marker expression patterns single-cell data. Markers plotted along horizontal (x-) axis heatmap groups plotted along vertical (y-) axis heatmap.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a heatmap summarizing group marker expression patterns in high-dimensional cytometry data — tof_plot_heatmap","text":"","code":"tof_plot_heatmap(   tof_tibble,   y_col,   marker_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   scale_markerwise = FALSE,   scale_ywise = FALSE,   cluster_markers = TRUE,   cluster_groups = TRUE,   line_width = 0.25,   theme = ggplot2::theme_minimal() )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a heatmap summarizing group marker expression patterns in high-dimensional cytometry data — tof_plot_heatmap","text":"tof_tibble `tof_tbl` `tibble`. y_col unquoted column name indicating column `tof_tibble` stores ids group cell belongs. marker_cols Unquoted column names indicating column `tof_tibble` interpreted markers plotted along x-axis heatmap. Supports tidyselect helpers. central_tendency_function function use computing measure central tendency aggregated cluster cluster_col. Defaults median. scale_markerwise boolean value indicating heatmap rescale columns heatmap maximum value marker 1 minimum value 0. Defaults FALSE. scale_ywise boolean value indicating heatmap rescale rows heatmap maximum value group 1 minimum value 0. Defaults FALSE. cluster_markers boolean value indicating heatmap order columns (.e. markers) using hierarchical clustering. Defaults TRUE. cluster_groups boolean value indicating heatmap order rows (.e. groups) using hierarchical clustering. Defaults TRUE. line_width numeric value indicating thick lines separating tiles heatmap . Defaults 0.25. theme ggplot2 theme apply heatmap. Defaults theme_minimal","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a heatmap summarizing group marker expression patterns in high-dimensional cytometry data — tof_plot_heatmap","text":"ggplot object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the results of a glmnet model fit on sample-level data. — tof_plot_model","title":"Plot the results of a glmnet model fit on sample-level data. — tof_plot_model","text":"Plot results glmnet model fit sample-level data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the results of a glmnet model fit on sample-level data. — tof_plot_model","text":"","code":"tof_plot_model(tof_model, new_data, theme = ggplot2::theme_bw())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the results of a glmnet model fit on sample-level data. — tof_plot_model","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations plot made. new_data provided, plot made using training data used fit model. Alternatively, string \"tuning_data\" can provided, plot generated using predictions generated model tuning. theme ggplot2 theme apply plot Defaults theme_bw","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the results of a glmnet model fit on sample-level data. — tof_plot_model","text":"ggplot object. `tof_model` linear model, scatterplot predicted outcome vs. true outcome returned. `tof_model` two-class model, ROC curve returned. `tof_model` multiclass model, one-versus-ROC curve returned class. `tof_model` survival model, Kaplan-Meier curve returned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the results of a glmnet model fit on sample-level data. — tof_plot_model","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             )     )  new_tibble <-     dplyr::tibble(         sample = as.character(1:20),         cd45 = runif(n = 20),         pstat5 = runif(n = 20),         cd34 = runif(n = 20),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(20),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             )     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  # make the plot plot_1 <- tof_plot_model(tof_model = regression_model, new_data = new_tibble)  # train a logistic regression classifier logistic_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = class,         model_type = \"two-class\"     )  # make the plot  plot_2 <- tof_plot_model(tof_model = logistic_model, new_data = new_tibble)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_linear.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the results of a linear glmnet model fit on sample-level data. — tof_plot_model_linear","title":"Plot the results of a linear glmnet model fit on sample-level data. — tof_plot_model_linear","text":"Plot results linear glmnet model fit sample-level data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_linear.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the results of a linear glmnet model fit on sample-level data. — tof_plot_model_linear","text":"","code":"tof_plot_model_linear(tof_model, new_data, theme = ggplot2::theme_bw())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_linear.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the results of a linear glmnet model fit on sample-level data. — tof_plot_model_linear","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations plot made. new_data provided, plot made using training data used fit model. Alternatively, string \"tuning_data\" can provided, plot generated using predictions generated model tuning. theme ggplot2 theme apply plot Defaults theme_bw","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_linear.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the results of a linear glmnet model fit on sample-level data. — tof_plot_model_linear","text":"ggplot object. Specifically, scatterplot predicted outcome vs. true outcome returned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_logistic.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the results of a two-class glmnet model fit on sample-level data. — tof_plot_model_logistic","title":"Plot the results of a two-class glmnet model fit on sample-level data. — tof_plot_model_logistic","text":"Plot results two-class glmnet model fit sample-level data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_logistic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the results of a two-class glmnet model fit on sample-level data. — tof_plot_model_logistic","text":"","code":"tof_plot_model_logistic(tof_model, new_data, theme = ggplot2::theme_bw())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_logistic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the results of a two-class glmnet model fit on sample-level data. — tof_plot_model_logistic","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations plot made. new_data provided, plot made using training data used fit model. Alternatively, string \"tuning_data\" can provided, plot generated using predictions generated model tuning. theme ggplot2 theme apply plot. Defaults theme_bw","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_logistic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the results of a two-class glmnet model fit on sample-level data. — tof_plot_model_logistic","text":"ggplot object. Specifically, ROC curve..","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_multinomial.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the results of a multiclass glmnet model fit on sample-level data. — tof_plot_model_multinomial","title":"Plot the results of a multiclass glmnet model fit on sample-level data. — tof_plot_model_multinomial","text":"Plot results multiclass glmnet model fit sample-level data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_multinomial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the results of a multiclass glmnet model fit on sample-level data. — tof_plot_model_multinomial","text":"","code":"tof_plot_model_multinomial(tof_model, new_data, theme = ggplot2::theme_bw())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_multinomial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the results of a multiclass glmnet model fit on sample-level data. — tof_plot_model_multinomial","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations plot made. new_data provided, plot made using training data used fit model. Alternatively, string \"tuning_data\" can provided, plot generated using predictions generated model tuning. theme ggplot2 theme apply plot. Defaults theme_bw.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_multinomial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the results of a multiclass glmnet model fit on sample-level data. — tof_plot_model_multinomial","text":"ggplot object. Specifically, one-versus-ROC curve (one class).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_survival.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the results of a survival glmnet model fit on sample-level data. — tof_plot_model_survival","title":"Plot the results of a survival glmnet model fit on sample-level data. — tof_plot_model_survival","text":"Plot results survival glmnet model fit sample-level data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_survival.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the results of a survival glmnet model fit on sample-level data. — tof_plot_model_survival","text":"","code":"tof_plot_model_survival(   tof_model,   new_data,   censor_size = 2.5,   theme = ggplot2::theme_bw() )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_survival.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the results of a survival glmnet model fit on sample-level data. — tof_plot_model_survival","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations plot made. new_data provided, plot made using training data used fit model. Alternatively, string \"tuning_data\" can provided, plot generated using predictions generated model tuning. censor_size numeric value indicating large plot tick marks representing censored values Kaplan-Meier curve. theme ggplot2 theme apply plot. Defaults theme_bw","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_survival.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the results of a survival glmnet model fit on sample-level data. — tof_plot_model_survival","text":"ggplot object. Specifically, Kaplan-Meier curve.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_features","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_features","text":"function makes heatmap sample--sample marker expression patterns single-cell data. Markers plotted along horizontal (x-) axis heatmap sample IDs plotted along vertical (y-) axis heatmap.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_features","text":"","code":"tof_plot_sample_features(   feature_tibble,   sample_col,   feature_cols = where(tof_is_numeric),   scale_featurewise = FALSE,   scale_samplewise = FALSE,   line_width = 0.25,   theme = ggplot2::theme_minimal() )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_features","text":"feature_tibble tbl_df data.frame aggregated sample-level features, generated tof_extract_features. sample_col unquoted column name indicating column `tof_tibble` stores IDs sample. sample IDs present, numeric ID assigned row `feature_tibble` based row index. feature_cols Unquoted column names indicating column `feature_tibble` interpreted features plotted along x-axis heatmap. Supports tidyselect helpers. scale_featurewise boolean value indicating heatmap rescale columns heatmap maximum value marker 1 minimum value 0. Defaults FALSE. scale_samplewise boolean value indicating heatmap rescale rows heatmap maximum value sample 1 minimum value 0. Defaults FALSE. line_width numeric value indicating thick lines separating tiles heatmap . Defaults 0.25. theme ggplot2 theme apply heatmap. Defaults theme_minimal","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_features","text":"ggplot object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_features.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_features","text":"","code":"# simulate single-cell data sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         sample_id = sample(paste0(\"sample\", 1:5), size = 1000, replace = TRUE)     )  # extract cluster proportions in each simulated patient feature_data <-     tof_extract_proportion(         tof_tibble = sim_data,         cluster_col = cluster_id,         group_cols = sample_id     )  # plot the heatmap heatmap <- tof_plot_sample_features(feature_tibble = feature_data)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_heatmap","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_heatmap","text":"function makes heatmap sample--sample marker expression patterns single-cell data. Markers plotted along horizontal (x-) axis heatmap sample IDs plotted along vertical (y-) axis heatmap.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_heatmap","text":"","code":"tof_plot_sample_heatmap(   tof_tibble,   sample_col,   marker_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   scale_markerwise = FALSE,   scale_samplewise = FALSE,   line_width = 0.25,   theme = ggplot2::theme_minimal() )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_heatmap","text":"tof_tibble `tof_tbl` `tibble`. sample_col unquoted column name indicating column `tof_tibble` stores ids sample cell belongs. marker_cols Unquoted column names indicating column `tof_tibble` interpreted markers plotted along x-axis heatmap. Supports tidyselect helpers. central_tendency_function function use computing measure central tendency aggregated sample cluster_col. Defaults median. scale_markerwise boolean value indicating heatmap rescale columns heatmap maximum value marker 1 minimum value 0. Defaults FALSE. scale_samplewise boolean value indicating heatmap rescale rows heatmap maximum value sample 1 minimum value 0. Defaults FALSE. line_width numeric value indicating thick lines separating tiles heatmap . Defaults 0.25. theme ggplot2 theme apply heatmap. Defaults theme_minimal","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_heatmap","text":"ggplot object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_heatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_heatmap","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         sample_id = sample(paste0(\"sample\", 1:5), size = 1000, replace = TRUE)     )  heatmap <-     tof_plot_sample_heatmap(         tof_tibble = sim_data,         sample_col = sample_id     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_postprocess.html","id":null,"dir":"Reference","previous_headings":"","what":"Post-process transformed CyTOF data. — tof_postprocess","title":"Post-process transformed CyTOF data. — tof_postprocess","text":"function transforms `tof_tibble` transformed ion counts mass cytometer back something looks like .fcs file Fluidigm software generates.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_postprocess.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Post-process transformed CyTOF data. — tof_postprocess","text":"","code":"tof_postprocess(   tof_tibble = NULL,   channel_cols = where(tof_is_numeric),   redo_noise = FALSE,   transform_fun = function(x) rev_asinh(x, shift_factor = 0, scale_factor = 0.2) )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_postprocess.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Post-process transformed CyTOF data. — tof_postprocess","text":"tof_tibble `tof_tibble` `tibble`. channel_cols vector non-quoted column names indicating columns `tof_tibble` contain protein measurements. Supports tidyselect helpers. nothing specified, default transform numeric columns. redo_noise boolean value indicating whether add  uniform noise CyTOF measurement aesthetic visualization purposes. See paper. Defaults FALSE transform_fun vectorized function apply column specified `channel_cols` post-processing. Defaults rev_asinh transformation (cofactor 5).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_postprocess.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Post-process transformed CyTOF data. — tof_postprocess","text":"`tof_tbl` identical dimensions input `tof_tibble`, columns specified channel_cols transformed using `transform_fun` (noise added removed depending `redo_noise`).","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_postprocess.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Post-process transformed CyTOF data. — tof_postprocess","text":"","code":"# read in an example .fcs file from tidytof's internal datasets input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]] tof_tibble <- tof_read_data(input_file)  # preprocess all numeric columns with default behavior # arcsinh transformation with a cofactor of 5 preprocessed_tof_tibble <- tof_preprocess(tof_tibble)  # postprocess all numeric columns to reverse the preprocessing tof_postprocess(tof_tibble) #> # A tibble: 100 × 59 #>     Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>    <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1   Inf    22215276.   6.00e224          8.82      1411688.    Inf        #>  2   Inf   446205752. Inf               135.         859679.    Inf        #>  3   Inf    22215276. Inf              2634.            321.      8.51e277 #>  4   Inf    22215276.   2.24e254          3.47         1383.      8.29e254 #>  5   Inf   164149923. Inf               127.          38726.      3.70e280 #>  6   Inf   446205752.   1.14e211        163.            116.      3.29e272 #>  7   Inf    22215276.   2.62e219         79.1           175.      1.82e246 #>  8   Inf   164149923.   5.35e246       1876.         291228.      5.64e305 #>  9   Inf   446205752. Inf                55.3         24727.    Inf        #> 10   Inf    22215276.   2.38e236          5.05      2010273.    Inf        #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_predict.html","id":null,"dir":"Reference","previous_headings":"","what":"Use a trained elastic net model to predict fitted values from new data — tof_predict","title":"Use a trained elastic net model to predict fitted values from new data — tof_predict","text":"function uses trained `tof_model` make predictions new data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_predict.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use a trained elastic net model to predict fitted values from new data — tof_predict","text":"","code":"tof_predict(   tof_model,   new_data,   prediction_type = c(\"response\", \"class\", \"link\", \"survival curve\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_predict.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use a trained elastic net model to predict fitted values from new data — tof_predict","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations predictions made. new_data provided, predictions made training data used fit model. prediction_type string indicating type prediction provided model: \"response\" (default) \"linear\" models, predicted response observation. \"two-class\" \"multiclass\" models, fitted probabilities class observation. \"survival\" models, fitted relative-risk observation. \"class\" applies \"two-class\" \"multiclass\" models. , class label corresponding class maximum fitted probability. \"link\" linear predictions model (output link function model family.) \"survival curve\" applies \"survival\" models. Returns tibble indicating patient's probability survival (1 - probability(event)) timepoint dataset. Obtained using survfit function.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_predict.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use a trained elastic net model to predict fitted values from new data — tof_predict","text":"tibble single column (`.pred`) containing predictions , multiclass models `prediction_type` == \"response\", tibble one column class. row output corresponds row `new_data` ( , `new_data` provided, row `tof_model`'s training data). latter case, sure check `tof_model$training_data` confirm order observations, resampling procedure can change ordering relative original input data.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_predict.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Use a trained elastic net model to predict fitted values from new data — tof_predict","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100)     )  new_tibble <-     dplyr::tibble(         sample = as.character(1:20),         cd45 = runif(n = 20),         pstat5 = runif(n = 20),         cd34 = runif(n = 20),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(20)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  # apply the model to new data tof_predict(tof_model = regression_model, new_data = new_tibble) #> # A tibble: 20 × 1 #>    .pred #>    <dbl> #>  1  3.21 #>  2  4.49 #>  3  3.63 #>  4  3.19 #>  5  4.52 #>  6  5.05 #>  7  2.25 #>  8  3.82 #>  9  2.60 #> 10  4.62 #> 11  3.43 #> 12  2.11 #> 13  2.34 #> 14  1.74 #> 15  3.58 #> 16  3.93 #> 17  3.59 #> 18  4.99 #> 19  5.26 #> 20  4.77"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_prep_recipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Train a recipe or list of recipes for preprocessing sample-level cytometry data — tof_prep_recipe","title":"Train a recipe or list of recipes for preprocessing sample-level cytometry data — tof_prep_recipe","text":"Train recipe list recipes preprocessing sample-level cytometry data","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_prep_recipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Train a recipe or list of recipes for preprocessing sample-level cytometry data — tof_prep_recipe","text":"","code":"tof_prep_recipe(split_data, unprepped_recipe)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_prep_recipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Train a recipe or list of recipes for preprocessing sample-level cytometry data — tof_prep_recipe","text":"split_data `rsplit` `rset` object rsample package containing sample-level data use modeling. easiest way generate use tof_split_data. Alternatively, unsplit tbl_df, though recommended. unprepped_recipe recipe object (`split_data` `rsplit` object `tbl_df`) list recipes (`split_data` `rset` object).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_prep_recipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Train a recipe or list of recipes for preprocessing sample-level cytometry data — tof_prep_recipe","text":"split_data \"rsplit\" \"tbl_df\" object, return single prepped recipe. split_data \"rset\" object, return list prepped recipes specific fold resampling procedure.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_preprocess.html","id":null,"dir":"Reference","previous_headings":"","what":"Preprocess raw high-dimensional cytometry data. — tof_preprocess","title":"Preprocess raw high-dimensional cytometry data. — tof_preprocess","text":"function transforms `tof_tbl` raw ion counts, reads, fluorescence intensity units directly measured cytometer using user-provided function. can used perform standard pre-processing steps (.e. arcsinh transformation) cytometry data analysis.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_preprocess.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preprocess raw high-dimensional cytometry data. — tof_preprocess","text":"","code":"tof_preprocess(   tof_tibble = NULL,   channel_cols = where(tof_is_numeric),   undo_noise = FALSE,   transform_fun = function(x) asinh(x/5) )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_preprocess.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preprocess raw high-dimensional cytometry data. — tof_preprocess","text":"tof_tibble `tof_tbl` `tibble`. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. nothing specified, default transform numeric columns. undo_noise boolean value indicating whether remove uniform noise Fluidigm software adds CyTOF measurements aesthetic visualization purposes. See paper. Defaults FALSE. transform_fun vectorized function apply protein value variance stabilization. Defaults asinh transformation (co-factor 5).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_preprocess.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preprocess raw high-dimensional cytometry data. — tof_preprocess","text":"`tof_tbl` identical dimensions input `tof_tibble`, columns specified channel_cols transformed using `transform_fun` (noise removed removed depending `undo_noise`).","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_preprocess.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Preprocess raw high-dimensional cytometry data. — tof_preprocess","text":"","code":"# read in an example .fcs file from tidytof's internal datasets input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]] tof_tibble <- tof_read_data(input_file)  # preprocess all numeric columns with default behavior # arcsinh transformation with a cofactor of 5 tof_preprocess(tof_tibble) #> # A tibble: 100 × 59 #>     Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>    <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1 15.3          1.88       5.33         0.263         1.70           5.85 #>  2 14.9          2.05       5.83         0.731         1.67           5.71 #>  3 15.2          1.88       5.70         1.13          0.861          5.54 #>  4 13.7          1.88       5.45         0.129         1.06           5.46 #>  5 15.2          1.99       5.73         0.721         1.41           5.55 #>  6 14.4          2.05       5.27         0.760         0.708          5.52 #>  7 13.9          1.88       5.31         0.645         0.771          5.42 #>  8 14.2          1.99       5.42         1.09          1.58           5.64 #>  9 15.6          2.05       6.03         0.586         1.37           5.83 #> 10  9.75         1.88       5.38         0.177         1.73           5.78 #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …  # preprocess all numeric columns using the log base 10 tranformation tof_preprocess(tof_tibble, transform_fun = log10) #> # A tibble: 100 × 59 #>     Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>    <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1  7.04         1.20       2.71        0.125          1.12           2.94 #>  2  6.85         1.28       2.93        0.601          1.11           2.88 #>  3  6.99         1.20       2.87        0.843          0.686          2.81 #>  4  6.36         1.20       2.77       -0.189          0.800          2.77 #>  5  6.98         1.26       2.89        0.594          0.984          2.81 #>  6  6.65         1.28       2.69        0.621          0.584          2.80 #>  7  6.44         1.20       2.70        0.539          0.628          2.75 #>  8  6.57         1.26       2.75        0.821          1.07           2.85 #>  9  7.18         1.28       3.02        0.491          0.964          2.93 #> 10  4.63         1.20       2.74       -0.0515         1.13           2.91 #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Read high-dimensional cytometry data from a .csv file into a tidy tibble. — tof_read_csv","title":"Read high-dimensional cytometry data from a .csv file into a tidy tibble. — tof_read_csv","text":"Read high-dimensional cytometry data .csv file tidy tibble.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read high-dimensional cytometry data from a .csv file into a tidy tibble. — tof_read_csv","text":"","code":"tof_read_csv(file_path = NULL, panel_info = dplyr::tibble())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read high-dimensional cytometry data from a .csv file into a tidy tibble. — tof_read_csv","text":"file_path file path single .csv file. panel_info Optional. tibble data.frame containing information panel used high-dimensional cytometry data acquisition. Two columns required: \"metals\" \"antigens\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_csv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read high-dimensional cytometry data from a .csv file into a tidy tibble. — tof_read_csv","text":"`tof_tbl` row represents single cell column represents high-dimensional cytometry antigen channel. `tof_tbl` S3 class extends \"tibble\" class storing one additional attribute: \"panel\" (tibble storing information panel used data acquisition). panel information obvious data read .csv file, information must provided manually user (unlike `tof_read_fcs`).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Read data from an .fcs/.csv file or a directory of .fcs/.csv files. — tof_read_data","title":"Read data from an .fcs/.csv file or a directory of .fcs/.csv files. — tof_read_data","text":"Read data .fcs/.csv file directory .fcs/.csv files.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read data from an .fcs/.csv file or a directory of .fcs/.csv files. — tof_read_data","text":"","code":"tof_read_data(path = NULL, sep = \"|\", panel_info = dplyr::tibble())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read data from an .fcs/.csv file or a directory of .fcs/.csv files. — tof_read_data","text":"path file path single file directory files. valid file types .fcs files .csv files containing high-dimensional cytometry data. sep Optional. string use separate antigen name associated metal column names output tibble. Defaults \"|\". used input file .fcs file. panel_info Optional. tibble data.frame containing information panel used high-dimensional cytometry data acquisition. Two columns required: \"metals\" \"antigens\". used input file .csv file.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read data from an .fcs/.csv file or a directory of .fcs/.csv files. — tof_read_data","text":"[c m+1] tibble row represents single cell (c total dataset) column represents high-dimensional cytometry measurement (m total dataset). one .fcs read , last column tibble (`file_name`) represent file name .fcs file cell read.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read data from an .fcs/.csv file or a directory of .fcs/.csv files. — tof_read_data","text":"","code":"input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]] tof_read_data(input_file) #> # A tibble: 100 × 59 #>         Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>        <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1 11021370            16       517.         1.33          13.2           865. #>  2  7112446.           19       850.         3.99          12.7           756. #>  3  9722098            16       747.         6.96           4.85          639. #>  4  2267279.           16       585.         0.648          6.32          586. #>  5  9624729            18       773.         3.93           9.65          645. #>  6  4439897            19       485.         4.18           3.84          627. #>  7  2762526.           16       504.         3.46           4.25          566. #>  8  3746682.           18       567.         6.62          11.7           703. #>  9 15214280            19      1043.         3.10           9.20          853. #> 10    42699.           16       543.         0.888         13.6           813. #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_fcs.html","id":null,"dir":"Reference","previous_headings":"","what":"Read high-dimensional cytometry data from an .fcs file into a tidy tibble. — tof_read_fcs","title":"Read high-dimensional cytometry data from an .fcs file into a tidy tibble. — tof_read_fcs","text":"function reads high-dimensional cytometry data single .fcs file tidy data structure called `tof_tbl` (\"tof_tibble\"). tof_tibbles identical normal tibbles except additional attribute (\"panel\") stores information high-dimensional cytometry panel used data acquisition.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_fcs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read high-dimensional cytometry data from an .fcs file into a tidy tibble. — tof_read_fcs","text":"","code":"tof_read_fcs(file_path = NULL, sep = \"|\")"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_fcs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read high-dimensional cytometry data from an .fcs file into a tidy tibble. — tof_read_fcs","text":"file_path file path single .fcs file. sep string use separate antigen name associated metal column names output tibble. Defaults \"|\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_fcs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read high-dimensional cytometry data from an .fcs file into a tidy tibble. — tof_read_fcs","text":"`tof_tbl` row represents single cell column represents high-dimensional cytometry antigen channel. `tof_tbl` S3 class extends \"tibble\" class storing one additional attribute: \"panel\" (tibble storing information panel used data acquisition).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Read high-dimensional cytometry data from a single .fcs or .csv file into a tidy tibble. — tof_read_file","title":"Read high-dimensional cytometry data from a single .fcs or .csv file into a tidy tibble. — tof_read_file","text":"Read high-dimensional cytometry data single .fcs .csv file tidy tibble.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read high-dimensional cytometry data from a single .fcs or .csv file into a tidy tibble. — tof_read_file","text":"","code":"tof_read_file(file_path = NULL, sep = \"|\", panel_info = dplyr::tibble())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read high-dimensional cytometry data from a single .fcs or .csv file into a tidy tibble. — tof_read_file","text":"file_path file path single .fcs .csv file. sep string use separate antigen name associated metal column names output tibble. Defaults \"|\". used input file .fcs file. panel_info Optional. tibble data.frame containing information panel used high-dimensional cytometry data acquisition. Two columns required: \"metals\" \"antigens\". used input file .csv file.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read high-dimensional cytometry data from a single .fcs or .csv file into a tidy tibble. — tof_read_file","text":"`tof_tbl` row represents single cell column represents high-dimensional cytometry antigen channel. `tof_tbl` S3 class extends \"tibble\" class storing one additional attribute: \"panel\" (tibble storing information panel used data acquisition). panel information obvious data read .csv file, information must provided manually user.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_dimensions.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply dimensionality reduction to a single-cell dataset. — tof_reduce_dimensions","title":"Apply dimensionality reduction to a single-cell dataset. — tof_reduce_dimensions","text":"function wrapper around tidytof's tof_reduce_* function family. performs dimensionality reduction single-cell data using user-specified method (3 choices) method's corresponding input parameters","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_dimensions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply dimensionality reduction to a single-cell dataset. — tof_reduce_dimensions","text":"","code":"tof_reduce_dimensions(   tof_tibble,   ...,   augment = TRUE,   method = c(\"pca\", \"tsne\", \"umap\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_dimensions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply dimensionality reduction to a single-cell dataset. — tof_reduce_dimensions","text":"tof_tibble `tof_tbl` `tibble`. ... Arguments passed tof_reduce_* function corresponding embedding method. See tof_reduce_pca, tof_reduce_tsne, tof_reduce_umap. augment boolean value indicating output column-bind dimensionality-reduced embedding vectors cell new column `tof_tibble` (TRUE, default) tibble including low-dimensionality embeddings returned (FALSE). method method dimensionality reduction. Currently, PCA, tSNE, UMAP embedding supported.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_dimensions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply dimensionality reduction to a single-cell dataset. — tof_reduce_dimensions","text":"tibble number rows `tof_tibble`, representing single cell. `num_comp` columns represents cell's embedding calculated embedding space.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_dimensions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply dimensionality reduction to a single-cell dataset. — tof_reduce_dimensions","text":"","code":"# simulate single-cell data sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 100),         cd38 = rnorm(n = 100),         cd34 = rnorm(n = 100),         cd19 = rnorm(n = 100)     )  # calculate pca tof_reduce_dimensions(tof_tibble = sim_data, method = \"pca\") #> # A tibble: 100 × 8 #>       cd45   cd38   cd34    cd19    .pc1    .pc2    .pc3   .pc4 #>      <dbl>  <dbl>  <dbl>   <dbl>   <dbl>   <dbl>   <dbl>  <dbl> #>  1 -0.115  -1.19   0.664 -0.968  -0.141  -0.630   1.21   -0.703 #>  2  0.428  -1.01  -0.799  0.469  -1.26    0.483   0.534   0.577 #>  3 -1.20   -1.61  -0.459  1.12   -2.23   -0.0461 -0.0817 -0.819 #>  4  0.327  -1.39   0.326 -1.52   -0.113  -0.704   1.77   -0.163 #>  5 -0.858   2.16   1.22   1.10    0.944  -0.222  -2.22   -0.819 #>  6 -0.690  -1.57   0.797  0.0566 -0.792  -0.272   0.706  -1.42  #>  7 -0.798  -1.57  -0.159  0.377  -1.60   -0.239   0.445  -0.723 #>  8 -0.800   1.09  -0.388 -0.516  -0.193  -1.26   -0.821   0.532 #>  9  0.0203  1.89  -0.271  1.41    0.0652  0.445  -1.91    0.715 #> 10  1.08   -0.492  1.42  -2.44    1.69   -0.818   2.05   -0.248 #> # ℹ 90 more rows  # calculate tsne tof_reduce_dimensions(tof_tibble = sim_data, method = \"tsne\") #> # A tibble: 100 × 6 #>       cd45   cd38   cd34    cd19 .tsne1 .tsne2 #>      <dbl>  <dbl>  <dbl>   <dbl>  <dbl>  <dbl> #>  1 -0.115  -1.19   0.664 -0.968   0.955  0.743 #>  2  0.428  -1.01  -0.799  0.469  -0.985 -1.22  #>  3 -1.20   -1.61  -0.459  1.12    0.671 -3.50  #>  4  0.327  -1.39   0.326 -1.52    0.665  1.51  #>  5 -0.858   2.16   1.22   1.10    4.70  -0.421 #>  6 -0.690  -1.57   0.797  0.0566  1.35  -1.87  #>  7 -0.798  -1.57  -0.159  0.377   0.688 -2.76  #>  8 -0.800   1.09  -0.388 -0.516  -1.88   2.46  #>  9  0.0203  1.89  -0.271  1.41   -3.32  -2.85  #> 10  1.08   -0.492  1.42  -2.44    1.90   4.32  #> # ℹ 90 more rows  # calculate umap tof_reduce_dimensions(tof_tibble = sim_data, method = \"umap\") #> Found more than one class \"dist\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘spam’ #> Found more than one class \"dist\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘spam’ #> # A tibble: 100 × 6 #>       cd45   cd38   cd34    cd19 .umap1 .umap2 #>      <dbl>  <dbl>  <dbl>   <dbl>  <dbl>  <dbl> #>  1 -0.115  -1.19   0.664 -0.968   1.51  -2.61  #>  2  0.428  -1.01  -0.799  0.469  -4.38   0.518 #>  3 -1.20   -1.61  -0.459  1.12   -1.60  -1.26  #>  4  0.327  -1.39   0.326 -1.52    2.09  -2.11  #>  5 -0.858   2.16   1.22   1.10    2.06   1.08  #>  6 -0.690  -1.57   0.797  0.0566  0.212 -2.71  #>  7 -0.798  -1.57  -0.159  0.377  -1.79  -1.47  #>  8 -0.800   1.09  -0.388 -0.516  -1.11   1.87  #>  9  0.0203  1.89  -0.271  1.41   -2.72  -0.354 #> 10  1.08   -0.492  1.42  -2.44    3.07  -0.759 #> # ℹ 90 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_pca.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform principal component analysis on single-cell data — tof_reduce_pca","title":"Perform principal component analysis on single-cell data — tof_reduce_pca","text":"function calculates principal components using single-cell data `tof_tibble`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_pca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform principal component analysis on single-cell data — tof_reduce_pca","text":"","code":"tof_reduce_pca(   tof_tibble,   pca_cols = where(tof_is_numeric),   num_comp = 5,   threshold = NA,   center = TRUE,   scale = TRUE,   return_recipe = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_pca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform principal component analysis on single-cell data — tof_reduce_pca","text":"tof_tibble `tof_tbl` `tibble`. pca_cols Unquoted column names indicating columns `tof_tibble` use computing principal components. Defaults numeric columns. Supports tidyselect helpers. num_comp number PCA components calculate. Defaults 5. See step_pca. threshold double 0 1 representing fraction total variance covered components returned output. See step_pca. center boolean value indicating column centered mean 0 PCA analysis. Defaults TRUE. scale boolean value indicating column scaled standard deviation = 1 PCA analysis. Defaults TRUE. return_recipe boolean value indicating instead UMAP result, prepped recipe object containing PCA embedding returned. Set option TRUE want create PCA embedding using one dataset also want project new observations onto embedding space later.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_pca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform principal component analysis on single-cell data — tof_reduce_pca","text":"tibble number rows `tof_tibble`, representing single cell. `num_comp` columns represents cell's embedding calculated principal component space.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_pca.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform principal component analysis on single-cell data — tof_reduce_pca","text":"","code":"# simulate single-cell data sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200)     ) new_data <-     dplyr::tibble(         cd45 = rnorm(n = 50),         cd38 = rnorm(n = 50),         cd34 = rnorm(n = 50),         cd19 = rnorm(n = 50)     )  # calculate pca tof_reduce_pca(tof_tibble = sim_data, num_comp = 2) #> # A tibble: 200 × 2 #>       .pc1    .pc2 #>      <dbl>   <dbl> #>  1 -0.0110  0.0863 #>  2 -0.767  -1.41   #>  3 -0.706  -1.19   #>  4 -0.846  -1.48   #>  5  0.752  -0.737  #>  6  2.56   -1.35   #>  7 -1.19    0.826  #>  8  1.83    0.843  #>  9  1.62    0.830  #> 10  0.633  -0.117  #> # ℹ 190 more rows  # return recipe instead of embeddings pca_recipe <- tof_reduce_pca(tof_tibble = sim_data, return_recipe = TRUE)  # apply recipe to new data recipes::bake(pca_recipe, new_data = new_data) #> # A tibble: 50 × 4 #>       PC1     PC2     PC3    PC4 #>     <dbl>   <dbl>   <dbl>  <dbl> #>  1 -0.255 -0.356   0.154  -0.614 #>  2 -0.541  0.462  -0.594  -0.984 #>  3  0.837  0.0693  0.0383 -0.721 #>  4 -0.893 -1.09    0.585  -1.02  #>  5  0.848 -0.327   0.194   0.207 #>  6 -2.96   0.345   0.425   0.297 #>  7 -0.640 -2.25    0.605   0.370 #>  8  1.66  -0.0142  0.350   0.435 #>  9 -2.29  -0.739  -0.785  -0.557 #> 10 -0.530 -1.41    0.151   1.45  #> # ℹ 40 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_tsne.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform t-distributed stochastic neighborhood embedding on single-cell data — tof_reduce_tsne","title":"Perform t-distributed stochastic neighborhood embedding on single-cell data — tof_reduce_tsne","text":"function calculates tSNE embedding using single-cell data `tof_tibble`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_tsne.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform t-distributed stochastic neighborhood embedding on single-cell data — tof_reduce_tsne","text":"","code":"tof_reduce_tsne(   tof_tibble,   tsne_cols = where(tof_is_numeric),   num_comp = 2,   perplexity = 30,   theta = 0.5,   max_iterations = 1000,   verbose = FALSE,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_tsne.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform t-distributed stochastic neighborhood embedding on single-cell data — tof_reduce_tsne","text":"tof_tibble `tof_tbl` `tibble`. tsne_cols Unquoted column names indicating columns `tof_tibble` use computing tSNE embedding. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. num_comp number tSNE components calculate embedding. Defaults 2. perplexity positive numeric value represents represents rough balance input data’s local global structure emphasized embedding. Smaller values emphasize local structure; larger values emphasize global structure. recommended range generally 5-50. Defaults 30. theta numeric value representing speed/accuracy tradeoff embedding. Set 0 exact tSNE; increase faster approximation. Defaults 0.5 max_iterations integer number iterations use embedding calculation. Defaults 1000. verbose boolean value indicating whether progress updates printed embedding calculation. Default FALSE. ... Additional arguments pass Rtsne.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_tsne.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform t-distributed stochastic neighborhood embedding on single-cell data — tof_reduce_tsne","text":"tibble number rows `tof_tibble`, representing single cell. `num_comp` columns represents cell's embedding calculated tSNE space.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_tsne.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform t-distributed stochastic neighborhood embedding on single-cell data — tof_reduce_tsne","text":"","code":"# simulate single-cell data sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200)     )  # calculate tsne tof_reduce_tsne(tof_tibble = sim_data) #> # A tibble: 200 × 2 #>    .tsne1  .tsne2 #>     <dbl>   <dbl> #>  1  -2.91  4.66   #>  2   2.83  2.63   #>  3  -4.68  1.04   #>  4  -4.65  3.13   #>  5   2.56  2.85   #>  6  -6.33  3.25   #>  7  -2.88 -1.29   #>  8   1.46  3.77   #>  9   4.36 -1.18   #> 10  -4.51  0.0256 #> # ℹ 190 more rows  # calculate tsne with only 2 columns tof_reduce_tsne(tof_tibble = sim_data, tsne_cols = c(cd34, cd38)) #> # A tibble: 200 × 2 #>    .tsne1 .tsne2 #>     <dbl>  <dbl> #>  1  0.688  4.34  #>  2 -3.22   4.86  #>  3 -5.94   2.89  #>  4 -5.02   1.32  #>  5 -4.59   4.11  #>  6 -6.18  -2.23  #>  7 -6.96  -1.07  #>  8 -6.48   1.95  #>  9  3.43  -5.86  #> 10 -3.88   0.164 #> # ℹ 190 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_umap.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply uniform manifold approximation and projection (UMAP) to single-cell data — tof_reduce_umap","title":"Apply uniform manifold approximation and projection (UMAP) to single-cell data — tof_reduce_umap","text":"function calculates UMAP embedding single-cell data `tof_tibble`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_umap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply uniform manifold approximation and projection (UMAP) to single-cell data — tof_reduce_umap","text":"","code":"tof_reduce_umap(   tof_tibble,   umap_cols = where(tof_is_numeric),   num_comp = 2,   neighbors = 5,   min_dist = 0.01,   learn_rate = 1,   epochs = NULL,   verbose = FALSE,   n_threads = 1,   return_recipe = FALSE,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_umap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply uniform manifold approximation and projection (UMAP) to single-cell data — tof_reduce_umap","text":"tof_tibble `tof_tbl` `tibble`. umap_cols Unquoted column names indicating columns `tof_tibble` use computing UMAP embedding. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. num_comp integer number UMAP components. neighbors integer number nearest neighbors used construct target simplicial set. min_dist effective minimum distance embedded points. learn_rate Positive number learning rate optimization process. epochs Number iterations neighbor optimization. See umap details. verbose boolean indicating run details logged console. Defaults FALSE. n_threads Number threads use UMAP calculation. Defaults 1. return_recipe boolean value indicating instead UMAP result, prepped recipe object containing UMAP embedding returned. Set option TRUE want create UMAP embedding using one dataset also want project new observations onto embedding space later. ... Optional. options passed arguments umap.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_umap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply uniform manifold approximation and projection (UMAP) to single-cell data — tof_reduce_umap","text":"tibble number rows `tof_tibble`, representing single cell. `num_comp` columns represents cell's embedding calculated UMAP space.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_umap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply uniform manifold approximation and projection (UMAP) to single-cell data — tof_reduce_umap","text":"","code":"# simulate single-cell data sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200)     ) new_data <-     dplyr::tibble(         cd45 = rnorm(n = 50),         cd38 = rnorm(n = 50),         cd34 = rnorm(n = 50),         cd19 = rnorm(n = 50)     )  # calculate umap tof_reduce_umap(tof_tibble = sim_data) #> Found more than one class \"dist\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘spam’ #> Found more than one class \"dist\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘spam’ #> # A tibble: 200 × 2 #>    .umap1 .umap2 #>     <dbl>  <dbl> #>  1 -1.97  -3.20  #>  2  5.03   2.59  #>  3 -3.46  -5.48  #>  4  5.08   2.23  #>  5 -1.67   2.32  #>  6 -1.96  -3.79  #>  7  0.224  1.13  #>  8  1.23   2.17  #>  9  3.36  -0.912 #> 10 -4.46  -0.856 #> # ℹ 190 more rows  # calculate umap with only 2 columns tof_reduce_tsne(tof_tibble = sim_data, umap_cols = c(cd34, cd38)) #> # A tibble: 200 × 2 #>    .tsne1 .tsne2 #>     <dbl>  <dbl> #>  1 -0.199  9.75  #>  2  2.08  -1.67  #>  3  4.73  -7.74  #>  4  1.69  -0.158 #>  5 -5.87  -4.90  #>  6  0.939  9.59  #>  7  1.74   6.75  #>  8  3.58   3.55  #>  9 -1.66   1.21  #> 10 -4.07  -7.11  #> # ℹ 190 more rows  # return recipe umap_recipe <- tof_reduce_umap(tof_tibble = sim_data, return_recipe = TRUE) #> Found more than one class \"dist\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘spam’ #> Found more than one class \"dist\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘spam’  # apply recipe to new data recipes::bake(umap_recipe, new_data = new_data) #> # A tibble: 50 × 2 #>     UMAP1   UMAP2 #>     <dbl>   <dbl> #>  1 -0.333  1.40   #>  2  3.65  -1.39   #>  3 -4.56   0.300  #>  4  1.51   2.04   #>  5 -3.82  -1.47   #>  6  3.27  -0.993  #>  7  0.866  0.0149 #>  8  0.467 -3.22   #>  9 -1.61   3.63   #> 10  3.66  -2.90   #> # ℹ 40 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_set_panel.html","id":null,"dir":"Reference","previous_headings":"","what":"Set panel information from a tof_tibble — tof_set_panel","title":"Set panel information from a tof_tibble — tof_set_panel","text":"Set panel information tof_tibble","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_set_panel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set panel information from a tof_tibble — tof_set_panel","text":"","code":"tof_set_panel(tof_tibble, panel)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_set_panel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set panel information from a tof_tibble — tof_set_panel","text":"tof_tibble `tof_tbl`. panel tibble containing two columns (`metals` `antigens`) representing information panel","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_set_panel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set panel information from a tof_tibble — tof_set_panel","text":"`tof_tibble` containing information CyTOF panel used data acquisition data contained input `tof_tibble`. Two columns required: \"metals\" \"antigens\".","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_set_panel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set panel information from a tof_tibble — tof_set_panel","text":"","code":"# get current panel from an .fcs file input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]] tof_tibble <- tof_read_data(input_file) current_panel <- tof_get_panel(tof_tibble)  # create a new panel (remove empty channels) new_panel <- dplyr::filter(current_panel, antigens != \"empty\") tof_set_panel(tof_tibble = tof_tibble, panel = new_panel) #> # A tibble: 100 × 59 #>         Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>        <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1 11021370            16       517.         1.33          13.2           865. #>  2  7112446.           19       850.         3.99          12.7           756. #>  3  9722098            16       747.         6.96           4.85          639. #>  4  2267279.           16       585.         0.648          6.32          586. #>  5  9624729            18       773.         3.93           9.65          645. #>  6  4439897            19       485.         4.18           3.84          627. #>  7  2762526.           16       504.         3.46           4.25          566. #>  8  3746682.           18       567.         6.62          11.7           703. #>  9 15214280            19      1043.         3.10           9.20          853. #> 10    42699.           16       543.         0.888         13.6           813. #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_spade_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate cells' local densities as done in Spanning-tree Progression Analysis of Density-normalized Events (SPADE) — tof_spade_density","title":"Estimate cells' local densities as done in Spanning-tree Progression Analysis of Density-normalized Events (SPADE) — tof_spade_density","text":"function uses algorithm described Qiu et al., (2011) estimate local density cell `tof_tbl` `tibble` containing high-dimensional cytometry data. Briefly, algorithm involves counting number neighboring cells within  sphere radius alpha surrounding cell. , using nn2 function.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_spade_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate cells' local densities as done in Spanning-tree Progression Analysis of Density-normalized Events (SPADE) — tof_spade_density","text":"","code":"tof_spade_density(   tof_tibble,   distance_cols = where(tof_is_numeric),   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\"),   num_alpha_cells = 2000L,   alpha_multiplier = 5,   max_neighbors = round(0.01 * nrow(tof_tibble)),   normalize = TRUE,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_spade_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate cells' local densities as done in Spanning-tree Progression Analysis of Density-normalized Events (SPADE) — tof_spade_density","text":"tof_tibble `tof_tbl` `tibble`. distance_cols Unquoted names columns `tof_tibble` use calculating cell--cell distances local density estimation cell. Defaults numeric columns `tof_tibble`. distance_function string indicating distance function use calculating cell--cell distances local density estimation. Options include \"euclidean\" (default) \"cosine\". num_alpha_cells integer indicating many cells `tof_tibble` randomly sampled `tof_tibble` order estimate `alpha`, radius sphere constructed around cell local density estimation. Alpha calculated taking median nearest-neighbor distance `num_alpha_cells` randomly-sampled cells multiplying `alpha_multiplier`. Defaults 2000. alpha_multiplier numeric value indicating multiplier used calculating `alpha`, radius sphere constructed around cell local density estimation. Alpha calculated taking median nearest-neighbor distance `num_alpha_cells` cells randomly-sampled `tof_tibble` multiplying `alpha_multiplier`. Defaults 5. max_neighbors integer indicating maximum number neighbors can counted within sphere surrounding given cell. Implemented reduce density estimation procedure's speed memory requirements. Defaults 1% number rows `tof_tibble`. normalize boolean value indicating vector local density estimates normalized values 0 1. Defaults TRUE. ... Additional optional arguments pass tof_find_knn.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_spade_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate cells' local densities as done in Spanning-tree Progression Analysis of Density-normalized Events (SPADE) — tof_spade_density","text":"tibble single column named \".spade_density\" containing local density estimates input cell `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_spade_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate cells' local densities as done in Spanning-tree Progression Analysis of Density-normalized Events (SPADE) — tof_spade_density","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  # perform the density estimation tof_spade_density(tof_tibble = sim_data) #> # A tibble: 1,000 × 1 #>    .spade_density #>             <dbl> #>  1              1 #>  2              1 #>  3              1 #>  4              1 #>  5              1 #>  6              1 #>  7              1 #>  8              1 #>  9              1 #> 10              1 #> # ℹ 990 more rows  # perform the density estimation using cosine distance tof_spade_density(     tof_tibble = sim_data,     distance_function = \"cosine\",     alpha_multiplier = 2 ) #> # A tibble: 1,000 × 1 #>    .spade_density #>             <dbl> #>  1          0.143 #>  2          0     #>  3          0.143 #>  4          0     #>  5          0.571 #>  6          0.143 #>  7          0.571 #>  8          0.143 #>  9          0.571 #> 10          0.429 #> # ℹ 990 more rows  # perform the density estimation with a smaller search radius around # each cell tof_spade_density(     tof_tibble = sim_data,     alpha_multiplier = 2 ) #> # A tibble: 1,000 × 1 #>    .spade_density #>             <dbl> #>  1            1   #>  2            1   #>  3            0.2 #>  4            1   #>  5            1   #>  6            1   #>  7            0.9 #>  8            0   #>  9            0.6 #> 10            0.2 #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Split high-dimensional cytometry data into a training and test set — tof_split_data","title":"Split high-dimensional cytometry data into a training and test set — tof_split_data","text":"Split high-dimensional cytometry data training test set","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split high-dimensional cytometry data into a training and test set — tof_split_data","text":"","code":"tof_split_data(   feature_tibble,   split_method = c(\"k-fold\", \"bootstrap\", \"simple\"),   split_col,   simple_prop = 3/4,   num_cv_folds = 10,   num_cv_repeats = 1L,   num_bootstraps = 10,   strata = NULL,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split high-dimensional cytometry data into a training and test set — tof_split_data","text":"feature_tibble tibble row represents sample- patient- level observation, produced tof_extract_features. split_method Either string logical vector specifying perform split. string, valid options include k-fold cross validation (\"k-fold\"; default), bootstrapping (\"bootstrap\"), single binary split (\"simple\"). logical vector, contain one entry row `feature_tibble` indicating row included training set (TRUE) excluded validation/test set (FALSE). Ignored entirely `split_col` specified. split_col unquoted column name logical column `feature_tibble` indicating row included training set (TRUE) excluded validation/test set (FALSE). simple_prop numeric value 0 1 indicating proportion data used training. Defaults 3/4. Ignored split_method \"simple\". num_cv_folds integer indicating many cross-validation folds used. Defaults 10. Ignored split_method \"k-fold\". num_cv_repeats integer indicating many independent cross-validation replicates used (.e. many num_cv_fold splits performed). Defaults 1. Ignored split_method \"k-fold\". num_bootstraps integer indicating many independent bootstrap replicates used. Defaults 25. Ignored split_method \"bootstrap\". strata unquoted column name representing column feature_tibble used stratify data splitting. Defaults NULL (stratification). ... Optional additional arguments pass vfold_cv k-fold cross validation, bootstraps bootstrapping, initial_split simple splitting.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split high-dimensional cytometry data into a training and test set — tof_split_data","text":"k-fold cross validation bootstrapping, \"rset\" object; simple splitting, \"rsplit\" object. details, see rsample.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split high-dimensional cytometry data into a training and test set — tof_split_data","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 50), rep(1, times = 50)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  # split the dataset into 10 CV folds tof_split_data(     feature_tibble = feature_tibble,     split_method = \"k-fold\" ) #> #  10-fold cross-validation  #> # A tibble: 10 × 2 #>    splits          id     #>    <list>          <chr>  #>  1 <split [90/10]> Fold01 #>  2 <split [90/10]> Fold02 #>  3 <split [90/10]> Fold03 #>  4 <split [90/10]> Fold04 #>  5 <split [90/10]> Fold05 #>  6 <split [90/10]> Fold06 #>  7 <split [90/10]> Fold07 #>  8 <split [90/10]> Fold08 #>  9 <split [90/10]> Fold09 #> 10 <split [90/10]> Fold10  # split the dataset into 10 bootstrap resamplings tof_split_data(     feature_tibble = feature_tibble,     split_method = \"bootstrap\" ) #> # Bootstrap sampling  #> # A tibble: 10 × 2 #>    splits           id          #>    <list>           <chr>       #>  1 <split [100/39]> Bootstrap01 #>  2 <split [100/36]> Bootstrap02 #>  3 <split [100/37]> Bootstrap03 #>  4 <split [100/41]> Bootstrap04 #>  5 <split [100/39]> Bootstrap05 #>  6 <split [100/38]> Bootstrap06 #>  7 <split [100/35]> Bootstrap07 #>  8 <split [100/35]> Bootstrap08 #>  9 <split [100/36]> Bootstrap09 #> 10 <split [100/36]> Bootstrap10  # split the dataset into a single training/test set # stratified by the \"class\" column tof_split_data(     feature_tibble = feature_tibble,     split_method = \"simple\",     strata = class ) #> <Training/Testing/Total> #> <74/26/100>"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_tidytof_reduced_dimensions.html","id":null,"dir":"Reference","previous_headings":"","what":"Split the dimensionality reduction data that tidytof combines during SingleCellExperiment conversion — tof_split_tidytof_reduced_dimensions","title":"Split the dimensionality reduction data that tidytof combines during SingleCellExperiment conversion — tof_split_tidytof_reduced_dimensions","text":"Split dimensionality reduction data tidytof combines SingleCellExperiment conversion","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_tidytof_reduced_dimensions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split the dimensionality reduction data that tidytof combines during SingleCellExperiment conversion — tof_split_tidytof_reduced_dimensions","text":"","code":"tof_split_tidytof_reduced_dimensions(sce)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_tidytof_reduced_dimensions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split the dimensionality reduction data that tidytof combines during SingleCellExperiment conversion — tof_split_tidytof_reduced_dimensions","text":"sce SingleCellExperiment entry named \"tidytof_reduced_dimensions\" reducedDims slot.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_tidytof_reduced_dimensions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split the dimensionality reduction data that tidytof combines during SingleCellExperiment conversion — tof_split_tidytof_reduced_dimensions","text":"SingleCellExperiment separate entries named \"tidytof_pca\", \"tidytof_umap\", \"tidytof_tsne\" reducedDims slots (one dimensionality reduction methods tidytof native support).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_tidytof_reduced_dimensions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split the dimensionality reduction data that tidytof combines during SingleCellExperiment conversion — tof_split_tidytof_reduced_dimensions","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_train_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Train an elastic net model to predict sample-level phenomena using high-dimensional cytometry data. — tof_train_model","title":"Train an elastic net model to predict sample-level phenomena using high-dimensional cytometry data. — tof_train_model","text":"function uses training set/test set paradigm tune fit elastic net model using variety user-specified details. Tuning can performed using either simple training vs. test set split, k-fold cross-validation, bootstrapping, multiple preprocessing options available.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_train_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Train an elastic net model to predict sample-level phenomena using high-dimensional cytometry data. — tof_train_model","text":"","code":"tof_train_model(   split_data,   unsplit_data,   predictor_cols,   response_col = NULL,   time_col = NULL,   event_col = NULL,   model_type = c(\"linear\", \"two-class\", \"multiclass\", \"survival\"),   hyperparameter_grid = tof_create_grid(),   standardize_predictors = TRUE,   remove_zv_predictors = FALSE,   impute_missing_predictors = FALSE,   optimization_metric = \"tidytof_default\",   best_model_type = c(\"best\", \"best with sparsity\"),   num_cores = 1 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_train_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Train an elastic net model to predict sample-level phenomena using high-dimensional cytometry data. — tof_train_model","text":"split_data `rsplit` `rset` object rsample package containing sample-level data use modeling. easiest way generate use tof_split_data. unsplit_data tibble containing sample-level data use modeling without resampling. using resampling method advised, argument provides interface fit model without using cross-validation bootstrap resampling. Ignored split_data provided. predictor_cols Unquoted column names indicating columns data contained `split_data` used predictors elastic net model. Supports tidyselect helpers. response_col Unquoted column name indicating column data contained `split_data` used outcome \"two-class\", \"multiclass\", \"linear\" elastic net model. Must factor \"two-class\" \"multiclass\" models must numeric \"linear\" models. Ignored `model_type` \"survival\". time_col Unquoted column name indicating column data contained `split_data` represents time--event outcome \"survival\" elastic net model. Must numeric. Ignored `model_type` \"two-class\", \"multiclass\", \"linear\". event_col Unquoted column name indicating column data contained `split_data` represents time--event outcome \"survival\" elastic net model. Must binary column - values either 0 1 (1 indicating adverse event) FALSE TRUE (TRUE indicating adverse event). Ignored `model_type` \"two-class\", \"multiclass\", \"linear\". model_type string indicating kind elastic net model build. continuous response predicted, use \"linear\" linear regression; categorical response 2 classes predicted, use \"two-class\" logistic regression; categorical response 2 levels predicted, use \"multiclass\" multinomial regression; time--event outcome predicted, use \"survival\" Cox regression. hyperparameter_grid hyperparameter grid indicating values elastic net penalty (lambda) elastic net mixture (alpha) hyperparamters used model tuning. Generate grid using tof_create_grid. standardize_predictors logical value indicating numeric predictor columns standardized (centered scaled) model fitting, standard practice elastic net regularization. Defaults TRUE. remove_zv_predictors logical value indicating predictor columns near-zero variance removed model fitting using step_nzv. Defaults FALSE. impute_missing_predictors logical value indicating predictor columns missing values imputed using k-nearest neighbors model fitting (see step_impute_knn). Imputation performed using observation's 5 nearest-neighbors. Defaults FALSE. optimization_metric string indicating optimization metric used hyperparameter selection model tuning. Valid values depend model_type. \"linear\" models, choices \"mse\" (mean squared error predictions; default) \"mae\" (mean absolute error predictions). \"two-class\" models, choices \"roc_auc\" (area Receiver-Operating Curve classification; default), \"misclassification error\" (proportion misclassified observations), \"binomial_deviance\" (see deviance.glmnet), \"mse\" (mean squared error logit function), \"mae\" (mean absolute error logit function). \"multiclass\" models, choices \"roc_auc\" (area Receiver-Operating Curve classification using Hand-Till generalization ROC AUC multiclass models roc_auc; default), \"misclassification error\" (proportion misclassified observations), \"multinomial_deviance\" (see deviance.glmnet), \"mse\" \"mae\" . \"survival\" models, choices \"concordance_index\" (Harrel's C index; see deviance.glmnet) \"partial_likelihood_deviance\" (see deviance.glmnet). best_model_type Currently unused. num_cores Integer indicating many cores used parallel processing fitting multiple models. Defaults 1. Overhead separate models across multiple cores can high, significant speedup unlikely observed unless many large models fit.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_train_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Train an elastic net model to predict sample-level phenomena using high-dimensional cytometry data. — tof_train_model","text":"`tof_model`, S3 class includes elastic net model best performance (assessed via cross-validation, bootstrapping, simple splitting depending `split_data`) across tested hyperparameter value combinations. `tof_models` store following information: model final elastic net (\"glmnet\") model, chosen selecting elastic net hyperparameters best `optimization_metric` performance validation sets resample used train model (average) recipe recipe used data preprocessing mixture optimal mixture hyperparameter (alpha) glmnet model penalty optimal penalty hyperparameter (lambda) glmnet model model_type string indicating type glmnet model fit outcome_colnames character vector representing names columns training data modeled outcome variables training_data tibble containing (preprocessed) data used train model tuning_metrics tibble containing validation set performance metrics (model predictions) resample fold model tuning. log_rank_thresholds survival models , tibble containing information relative-risk thresholds can used split training data 2 risk groups (low- high-risk) based final model's predictions. relative-risk threshold, log-rank test p-value indicator threshold gives significant separation provided. best_log_rank_threshold survival models , numeric value representing relative-risk threshold yields significant log-rank test separating training data low- high-risk groups.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_train_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Train an elastic net model to predict sample-level phenomena using high-dimensional cytometry data. — tof_train_model","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model tof_train_model(     split_data = split_data,     predictor_cols = c(cd45, pstat5, cd34),     response_col = outcome,     model_type = \"linear\" ) #> A linear `tof_model` with a mixture parameter (alpha) of 1 and a penalty parameter (lambda) of 3.162e-03  #> # A tibble: 4 × 2 #>   feature     coefficient #>   <chr>             <dbl> #> 1 (Intercept)     3.34    #> 2 pstat5          1.47    #> 3 cd45            0.932   #> 4 cd34            0.00156  # train a logistic regression classifier tof_train_model(     split_data = split_data,     predictor_cols = c(cd45, pstat5, cd34),     response_col = class,     model_type = \"two-class\" ) #> A two-class `tof_model` with a mixture parameter (alpha) of 1 and a penalty parameter (lambda) of 3.162e-03  #> # A tibble: 4 × 2 #>   feature     coefficient #>   <chr>             <dbl> #> 1 pstat5          -1.90   #> 2 cd45            -1.08   #> 3 cd34            -0.150  #> 4 (Intercept)     -0.0192  # train a cox regression survival model tof_train_model(     split_data = split_data,     predictor_cols = c(cd45, pstat5, cd34),     time_col = time_to_event,     event_col = event,     model_type = \"survival\" ) #> A survival `tof_model` with a mixture parameter (alpha) of 1 and a penalty parameter (lambda) of 1e+00  #> # A tibble: 0 × 2 #> # ℹ 2 variables: feature <chr>, coefficient <dbl>"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_transform.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform raw high-dimensional cytometry data. — tof_transform","title":"Transform raw high-dimensional cytometry data. — tof_transform","text":"function transforms `tof_tbl` raw ion counts, reads, fluorescence intensity units directly measured cytometer using user-provided function.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_transform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform raw high-dimensional cytometry data. — tof_transform","text":"","code":"tof_transform(   tof_tibble = NULL,   channel_cols = where(tof_is_numeric),   transform_fun )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_transform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform raw high-dimensional cytometry data. — tof_transform","text":"tof_tibble `tof_tbl` `tibble`. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. nothing specified, default transform numeric columns. transform_fun vectorized function apply protein value variance stabilization.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_transform.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform raw high-dimensional cytometry data. — tof_transform","text":"`tof_tbl` identical dimensions input `tof_tibble`, columns specified channel_cols transformed using `transform_fun`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_transform.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform raw high-dimensional cytometry data. — tof_transform","text":"","code":"# read in an example .fcs file from tidytof's internal datasets input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]] tof_tibble <- tof_read_data(input_file)  # preprocess all numeric columns with default behavior # arcsinh transformation with a cofactor of 5 tof_preprocess(tof_tibble) #> # A tibble: 100 × 59 #>     Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>    <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1 15.3          1.88       5.33         0.263         1.70           5.85 #>  2 14.9          2.05       5.83         0.731         1.67           5.71 #>  3 15.2          1.88       5.70         1.13          0.861          5.54 #>  4 13.7          1.88       5.45         0.129         1.06           5.46 #>  5 15.2          1.99       5.73         0.721         1.41           5.55 #>  6 14.4          2.05       5.27         0.760         0.708          5.52 #>  7 13.9          1.88       5.31         0.645         0.771          5.42 #>  8 14.2          1.99       5.42         1.09          1.58           5.64 #>  9 15.6          2.05       6.03         0.586         1.37           5.83 #> 10  9.75         1.88       5.38         0.177         1.73           5.78 #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …  # preprocess all numeric columns using the log base 10 tranformation tof_preprocess(tof_tibble, transform_fun = log10) #> # A tibble: 100 × 59 #>     Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>    <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1  7.04         1.20       2.71        0.125          1.12           2.94 #>  2  6.85         1.28       2.93        0.601          1.11           2.88 #>  3  6.99         1.20       2.87        0.843          0.686          2.81 #>  4  6.36         1.20       2.77       -0.189          0.800          2.77 #>  5  6.98         1.26       2.89        0.594          0.984          2.81 #>  6  6.65         1.28       2.69        0.621          0.584          2.80 #>  7  6.44         1.20       2.70        0.539          0.628          2.75 #>  8  6.57         1.26       2.75        0.821          1.07           2.85 #>  9  7.18         1.28       3.02        0.491          0.964          2.93 #> 10  4.63         1.20       2.74       -0.0515         1.13           2.91 #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_tune_glmnet.html","id":null,"dir":"Reference","previous_headings":"","what":"Tune an elastic net model's hyperparameters over multiple resamples — tof_tune_glmnet","title":"Tune an elastic net model's hyperparameters over multiple resamples — tof_tune_glmnet","text":"Tune elastic net model's hyperparameters multiple resamples","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_tune_glmnet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tune an elastic net model's hyperparameters over multiple resamples — tof_tune_glmnet","text":"","code":"tof_tune_glmnet(   split_data,   prepped_recipe,   hyperparameter_grid,   model_type,   outcome_cols,   optimization_metric = \"tidytof_default\",   num_cores = 1 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_tune_glmnet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tune an elastic net model's hyperparameters over multiple resamples — tof_tune_glmnet","text":"split_data `rsplit` `rset` object rsample package. easiest way generate use tof_split_data. Alternatively, unsplit tbl_df can provided, though recommended. prepped_recipe Either single recipe object (`split_data` `rsplit` object `tbl_df`) list recipes (`split_data` `rset` object) entry list corresponds resample `split_data`. hyperparameter_grid hyperparameter grid indicating values elastic net penalty (lambda) elastic net mixture (alpha) hyperparameters used model tuning. Generate grid using tof_create_grid. model_type string indicating kind elastic net model build. continuous response predicted, use \"linear\" linear regression; categorical response 2 classes predicted, use \"two-class\" logistic regression; categorical response 2 levels predicted, use \"multiclass\" multinomial regression; time--event outcome predicted, use \"survival\" Cox regression. outcome_cols Unquoted column name(s) indicating column(s) data contained `split_data` used outcome elastic net model. survival models, two columns selected; others, one column selected. optimization_metric string indicating optimization metric used hyperparameter selection model tuning. Valid values depend model_type. num_cores Integer indicating many cores used parallel processing fitting multiple models. Defaults 1. Overhead separate models across multiple cores can high, significant speedup unlikely observed unless many large models fit.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_tune_glmnet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tune an elastic net model's hyperparameters over multiple resamples — tof_tune_glmnet","text":"tibble containing summary model's performance resampling iteration across hyperparameter combinations. contain 3 columns: \"splits\" (list-col containing resampling iteration's `rsplit` object), \"id\" (name resampling iteration), \"performance_metrics\" (list-col containing performance metrics resampling iteration. row \"performance_metrics\" tibble columns \"mixture\" \"penalty\" several additional columns containing performance metrics model mixture/penalty combination). See tof_fit_split additional details.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample.html","id":null,"dir":"Reference","previous_headings":"","what":"Upsample cells into the closest cluster in a reference dataset — tof_upsample","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample","text":"function performs distance-based upsampling CyTOF data sorting single cells (passed function `tof_tibble`) phenotypically similar cell subpopulation reference dataset (passed function `reference_tibble`). calculating distance (either mahalanobis, cosine, pearson) cell `tof_tibble` centroid cluster `reference_tibble`, sorting cells cluster corresponding closest centroid.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample","text":"","code":"tof_upsample(   tof_tibble,   reference_tibble,   reference_cluster_col,   upsample_cols = where(tof_is_numeric),   ...,   augment = TRUE,   method = c(\"distance\", \"neighbor\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample","text":"tof_tibble `tibble` `tof_tbl` containing cells upsampled nearest reference subpopulation. reference_tibble `tibble` `tof_tibble` containing cells already clustered manually gated subpopulations. reference_cluster_col unquoted column name indicating column `reference_tibble` contains subpopulation label (cluster id) cell `reference_tibble`. upsample_cols Unquoted column names indicating columns `tof_tibble` use computing distances used upsampling. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. ... Additional arguments pass `tof_upsample_*` function family member corresponding chosen method. augment boolean value indicating output column-bind cluster ids cell new column `tof_tibble` (TRUE, default) single-column tibble including cluster ids returned (FALSE). method string indicating clustering methods used. Valid values include \"distance\" (default) \"neighbor\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample","text":"`tof_tbl` `tibble` augment = FALSE, single column encoding upsampled cluster ids cell `tof_tibble`. augment = TRUE, ncol(tof_tibble) + 1 columns: (unaltered) columns `tof_tibble` plus additional column encoding cluster ids.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample","text":"","code":"# simulate single-cell data (and reference data with clusters to upsample # into sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     ) reference_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200),         cluster_id = c(rep(\"a\", times = 100), rep(\"b\", times = 100))     )  # upsample using distance to cluster centroids tof_upsample(     tof_tibble = sim_data,     reference_tibble = reference_data,     reference_cluster_col = cluster_id,     method = \"distance\" ) #> # A tibble: 1,000 × 5 #>       cd45   cd38   cd34    cd19 .upsample_cluster #>      <dbl>  <dbl>  <dbl>   <dbl> <chr>             #>  1  0.372  -0.285 -0.246 -0.554  b                 #>  2 -1.10    0.196  0.782 -1.63   b                 #>  3  0.0616  0.347 -1.67  -1.38   b                 #>  4  0.321   0.732 -0.295  0.791  b                 #>  5 -1.31   -0.272 -0.609 -1.90   a                 #>  6  0.971   0.488  0.190  0.814  a                 #>  7 -0.518   0.390 -1.31  -1.78   b                 #>  8  0.334  -0.716 -1.04   0.681  a                 #>  9  1.36    0.937  0.332 -1.50   a                 #> 10 -2.85   -0.209 -2.79   0.0777 a                 #> # ℹ 990 more rows  # upsample using distance to nearest neighbor tof_upsample(     tof_tibble = sim_data,     reference_tibble = reference_data,     reference_cluster_col = cluster_id,     method = \"neighbor\" ) #> # A tibble: 1,000 × 5 #>       cd45   cd38   cd34    cd19 .upsample_cluster #>      <dbl>  <dbl>  <dbl>   <dbl> <chr>             #>  1  0.372  -0.285 -0.246 -0.554  b                 #>  2 -1.10    0.196  0.782 -1.63   b                 #>  3  0.0616  0.347 -1.67  -1.38   a                 #>  4  0.321   0.732 -0.295  0.791  a                 #>  5 -1.31   -0.272 -0.609 -1.90   a                 #>  6  0.971   0.488  0.190  0.814  b                 #>  7 -0.518   0.390 -1.31  -1.78   b                 #>  8  0.334  -0.716 -1.04   0.681  a                 #>  9  1.36    0.937  0.332 -1.50   b                 #> 10 -2.85   -0.209 -2.79   0.0777 b                 #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_distance.html","id":null,"dir":"Reference","previous_headings":"","what":"Upsample cells into the closest cluster in a reference dataset — tof_upsample_distance","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample_distance","text":"function performs distance-based upsampling CyTOF data sorting single cells (passed function `tof_tibble`) phenotypically similar cell subpopulation reference dataset (passed function `reference_tibble`). calculating distance (either mahalanobis, cosine, pearson) cell `tof_tibble` centroid cluster `reference_tibble`, sorting cells cluster corresponding closest centroid.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample_distance","text":"","code":"tof_upsample_distance(   tof_tibble,   reference_tibble,   reference_cluster_col,   upsample_cols = where(tof_is_numeric),   parallel_cols,   distance_function = c(\"mahalanobis\", \"cosine\", \"pearson\"),   num_cores = 1L,   return_distances = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_distance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample_distance","text":"tof_tibble `tibble` `tof_tbl` containing cells upsampled nearest reference subpopulation. reference_tibble `tibble` `tof_tibble` containing cells already clustered manually gated subpopulations. reference_cluster_col unquoted column name indicating column `reference_tibble` contains subpopulation label (cluster id) cell `reference_tibble`. upsample_cols Unquoted column names indicating columns `tof_tibble` use computing distances used upsampling. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. parallel_cols Optional. Unquoted column names indicating columns `tof_tibble` use breaking data order parallelize upsampling using `foreach` `doParallel` backend. Supports tidyselect helpers. distance_function string indicating distance function used perform upsampling. Options \"mahalanobis\" (default), \"cosine\", \"pearson\". num_cores integer indicating number CPU cores used parallelize classification. Defaults 1 (single core). return_distances boolean value indicating whether returned result include one column, cluster ids corresponding row `tof_tibble` (return_distances = FALSE, default), returned result include additional columns representing distance row `tof_tibble` reference subpopulation centroids (return_distances = TRUE).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_distance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample_distance","text":"`return_distances = FALSE`, tibble one column named `.upsample_cluster`, character vector length `nrow(tof_tibble)` indicating id reference cluster cell (.e. row) `tof_tibble` assigned. `return_distances = TRUE`, tibble `nrow(tof_tibble)` rows num_clusters + 1 columns, num_clusters number clusters `reference_tibble`. row represents cell `tof_tibble`, num_clusters columns represent distance cell reference subpopulations' cluster centroids. final column represents cluster id reference subpopulation minimum distance cell represented row.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_distance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample_distance","text":"","code":"# simulate single-cell data (and reference data with clusters to upsample # into sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  reference_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200),         cluster_id = c(rep(\"a\", times = 100), rep(\"b\", times = 100))     )  # upsample using mahalanobis distance tof_upsample_distance(     tof_tibble = sim_data,     reference_tibble = reference_data,     reference_cluster_col = cluster_id ) #> # A tibble: 1,000 × 1 #>    .upsample_cluster #>    <chr>             #>  1 a                 #>  2 a                 #>  3 b                 #>  4 a                 #>  5 b                 #>  6 a                 #>  7 a                 #>  8 a                 #>  9 a                 #> 10 b                 #> # ℹ 990 more rows  # upsample using cosine distance tof_upsample_distance(     tof_tibble = sim_data,     reference_tibble = reference_data,     reference_cluster_col = cluster_id,     distance_function = \"cosine\" ) #> # A tibble: 1,000 × 1 #>    .upsample_cluster #>    <chr>             #>  1 a                 #>  2 a                 #>  3 a                 #>  4 b                 #>  5 a                 #>  6 b                 #>  7 a                 #>  8 b                 #>  9 b                 #> 10 b                 #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_neighbor.html","id":null,"dir":"Reference","previous_headings":"","what":"Upsample cells into the cluster of their nearest neighbor a reference dataset — tof_upsample_neighbor","title":"Upsample cells into the cluster of their nearest neighbor a reference dataset — tof_upsample_neighbor","text":"function performs upsampling CyTOF data sorting single cells (passed function `tof_tibble`) phenotypically similar cell subpopulation reference dataset (passed function `reference_tibble`). finding cell `tof_tibble`'s nearest neighbor `reference_tibble` assigning cluster nearest neighbor belongs. nearest neighbor calculation can performed either euclidean cosine distance.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_neighbor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upsample cells into the cluster of their nearest neighbor a reference dataset — tof_upsample_neighbor","text":"","code":"tof_upsample_neighbor(   tof_tibble,   reference_tibble,   reference_cluster_col,   upsample_cols = where(tof_is_numeric),   num_neighbors = 1L,   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_neighbor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upsample cells into the cluster of their nearest neighbor a reference dataset — tof_upsample_neighbor","text":"tof_tibble `tibble` `tof_tbl` containing cells upsampled nearest reference subpopulation. reference_tibble `tibble` `tof_tibble` containing cells already clustered manually gated subpopulations. reference_cluster_col unquoted column name indicating column `reference_tibble` contains subpopulation label (cluster id) cell `reference_tibble`. upsample_cols Unquoted column names indicating columns `tof_tibble` use computing distances used upsampling. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. num_neighbors integer indicating many neighbors used nearest neighbor calculation. Clusters assigned based majority vote. distance_function string indicating distance function used perform upsampling. Options \"euclidean\" (default) \"cosine\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_neighbor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Upsample cells into the cluster of their nearest neighbor a reference dataset — tof_upsample_neighbor","text":"tibble one column named `.upsample_cluster`, character vector length `nrow(tof_tibble)` indicating id reference cluster cell (.e. row) `tof_tibble` assigned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_neighbor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Upsample cells into the cluster of their nearest neighbor a reference dataset — tof_upsample_neighbor","text":"","code":"# simulate single-cell data (and reference data with clusters to upsample # into sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  reference_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200),         cluster_id = c(rep(\"a\", times = 100), rep(\"b\", times = 100))     )  # upsample using euclidean distance tof_upsample_neighbor(     tof_tibble = sim_data,     reference_tibble = reference_data,     reference_cluster_col = cluster_id ) #> # A tibble: 1,000 × 1 #>    .upsample_cluster #>    <chr>             #>  1 b                 #>  2 a                 #>  3 a                 #>  4 b                 #>  5 a                 #>  6 b                 #>  7 b                 #>  8 b                 #>  9 a                 #> 10 b                 #> # ℹ 990 more rows  # upsample using cosine distance tof_upsample_neighbor(     tof_tibble = sim_data,     reference_tibble = reference_data,     reference_cluster_col = cluster_id,     distance_function = \"cosine\" ) #> # A tibble: 1,000 × 1 #>    .upsample_cluster #>    <chr>             #>  1 b                 #>  2 b                 #>  3 b                 #>  4 b                 #>  5 a                 #>  6 a                 #>  7 b                 #>  8 b                 #>  9 b                 #> 10 b                 #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a series of .csv files from a tof_tbl — tof_write_csv","title":"Write a series of .csv files from a tof_tbl — tof_write_csv","text":"function takes given `tof_tbl` writes single-cell data contains .csv files within directory located `out_path`. `group_cols` argument specifies rows `tof_tbl` (cell) broken separate .csv files","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a series of .csv files from a tof_tbl — tof_write_csv","text":"","code":"tof_write_csv(tof_tibble, group_cols, out_path, sep = \"_\", file_name)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a series of .csv files from a tof_tbl — tof_write_csv","text":"tof_tibble `tof_tbl` `tibble`. group_cols Optional. Unquoted names columns `tof_tibble` used group cells separate files. Supports tidyselect helpers. Defaults NULL (cells written single file). out_path system path indicating directory output .csv files saved. directory exist, created. sep Delimiter used values `group_cols` create output .csv file names. Defaults \"_\". file_name `group_cols` specified, name (without extension) used saved .csv file.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_csv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write a series of .csv files from a tof_tbl — tof_write_csv","text":"function return anything. Instead, side-effect saving .csv files `out_path`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Write high-dimensional cytometry data to a file or to a directory of files — tof_write_data","title":"Write high-dimensional cytometry data to a file or to a directory of files — tof_write_data","text":"Write data (form `tof_tbl`) either .csv .fcs file storage.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write high-dimensional cytometry data to a file or to a directory of files — tof_write_data","text":"","code":"tof_write_data(   tof_tibble = NULL,   group_cols,   out_path = NULL,   format = c(\"fcs\", \"csv\"),   sep = \"_\",   file_name )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write high-dimensional cytometry data to a file or to a directory of files — tof_write_data","text":"tof_tibble `tof_tbl` `tibble`. group_cols Optional. Unquoted names columns `tof_tibble` used group cells separate files. Supports tidyselect helpers. Defaults grouping (cells written single file). out_path Path directory output files saved. format format files written. Currently supports .csv .fcs files sep Delimiter used values `group_cols` create output .csv/.fcs file names. Defaults \"_\". file_name `group_cols` specified, name (without extension) used saved file.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write high-dimensional cytometry data to a file or to a directory of files — tof_write_data","text":"function explicitly return values. Instead, writes .csv /.fcs files specified `out_path`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write high-dimensional cytometry data to a file or to a directory of files — tof_write_data","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_fcs.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a series of .fcs files from a tof_tbl — tof_write_fcs","title":"Write a series of .fcs files from a tof_tbl — tof_write_fcs","text":"function takes given `tof_tbl` writes single-cell data contains .fcs files within directory located `out_path`. `group_cols` argument specifies rows `tof_tbl` (cell) broken separate .fcs files","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_fcs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a series of .fcs files from a tof_tbl — tof_write_fcs","text":"","code":"tof_write_fcs(tof_tibble, group_cols, out_path, sep = \"_\", file_name)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_fcs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a series of .fcs files from a tof_tbl — tof_write_fcs","text":"tof_tibble `tof_tbl` `tibble`. group_cols Unquoted names columns `tof_tibble` used group cells separate files. Supports tidyselect helpers. Defaults NULL (cells written single file). out_path system path indicating directory output .csv files saved. directory exist, created. sep Delimiter used values `group_cols` create output .fcs file names. Defaults \"_\". file_name `group_cols` specified, name (without extension) used saved .csv file.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_fcs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write a series of .fcs files from a tof_tbl — tof_write_fcs","text":"function return anything. Instead, side-effect saving .fcs files `out_path`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_fcs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write a series of .fcs files from a tof_tbl — tof_write_fcs","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":null,"dir":"Reference","previous_headings":"","what":"Select variables with a function — where","title":"Select variables with a function — where","text":"copy , selection helper selects variables predicate function returns TRUE. See  language details tidyselection.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select variables with a function — where","text":"","code":"where(fn)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select variables with a function — where","text":"fn function returns TRUE FALSE (technically, predicate function). Can also purrr-like formula.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select variables with a function — where","text":"predicate can used select columns data.frame.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Select variables with a function — where","text":"help file replicated verbatim tidyselect-package.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Select variables with a function — where","text":"Lionel Henry Hadley Wickham (2021). tidyselect: Select Set Strings. R package version 1.1.1. https://CRAN.R-project.org/package=tidyselect","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select variables with a function — where","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/news/index.html","id":"tidytof-0990","dir":"Changelog","previous_headings":"","what":"tidytof 0.99.0","title":"tidytof 0.99.0","text":"NEW FEATURES Added NEWS.md file track changes package. SIGNIFICANT USER-VISIBLE CHANGES Submitted Bioconductor BUG FIXES None","code":""}]
