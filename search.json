[{"path":"https://keyes-timothy.github.io/tidytof/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to tidytof","title":"Contributing to tidytof","text":"outlines propose change tidytof. detailed info contributing , tidyverse packages, please see development contributing guide.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to tidytof","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to tidytof","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to tidytof","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"keyes-timothy/tidytof\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to tidytof","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to tidytof","text":"Please note tidytof project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2020 Timothy Keyes Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/clustering.html","id":"clustering-with-tof_cluster","dir":"Articles","previous_headings":"","what":"Clustering with tof_cluster()","title":"Clustering and metaclustering","text":"demonstrate, can apply PhenoGraph clustering algorithm tidytof’s built-phenograph_data. Note phenograph_data contains 3000 total cells (1000 3 clusters identified original PhenoGraph publication). demonstration purposes, also metacluster PhenoGraph clusters using k-means clustering. outputs tof_cluster() tof_metacluster() tof_tbl identical input tibble, now addition additional column (case, “.phenograph_cluster” “.kmeans_metacluster”) encodes cluster id cell input tof_tbl. Note output columns added tibble tof_tbl tidytof begin full-stop (“.”) reduce likelihood collisions existing column names. output tof_cluster tof_tbl, can use dplyr’s count method assess accuracy clustering procedure compared original clustering PhenoGraph paper. , can see clustering procedure groups cells PhenoGraph cluster one another (small number mistakes). change clustering algorithm tof_cluster uses, alter method flag. change columns used compute clusters, change cluster_cols flag. finally, want return one-column tibble includes cluster labels (opposed cluster labels added new column input tof_tbl), set augment FALSE.","code":"data(phenograph_data)  set.seed(203L)  phenograph_clusters <-     phenograph_data |>     tof_preprocess() |>     tof_cluster(         cluster_cols = starts_with(\"cd\"),         num_neighbors = 50L,         distance_function = \"cosine\",         method = \"phenograph\"     ) |>     tof_metacluster(         cluster_col = .phenograph_cluster,         metacluster_cols = starts_with(\"cd\"),         num_metaclusters = 3L,         method = \"kmeans\"     )  phenograph_clusters |>     dplyr::select(sample_name, .phenograph_cluster, .kmeans_metacluster) |>     head() #> # A tibble: 6 × 3 #>   sample_name            .phenograph_cluster .kmeans_metacluster #>   <chr>                  <chr>               <chr>               #> 1 H1_PhenoGraph_cluster1 6                   2                   #> 2 H1_PhenoGraph_cluster1 1                   2                   #> 3 H1_PhenoGraph_cluster1 6                   2                   #> 4 H1_PhenoGraph_cluster1 6                   2                   #> 5 H1_PhenoGraph_cluster1 6                   2                   #> 6 H1_PhenoGraph_cluster1 6                   2 phenograph_clusters |>     dplyr::count(phenograph_cluster, .kmeans_metacluster, sort = TRUE) #> # A tibble: 4 × 3 #>   phenograph_cluster .kmeans_metacluster     n #>   <chr>              <chr>               <int> #> 1 cluster2           3                    1000 #> 2 cluster3           1                    1000 #> 3 cluster1           2                     995 #> 4 cluster1           1                       5 # use the kmeans algorithm phenograph_data |>     tof_preprocess() |>     tof_cluster(         cluster_cols = contains(\"cd\"),         method = \"kmeans\"     )  # use the flowsom algorithm phenograph_data |>     tof_preprocess() |>     tof_cluster(         cluster_cols = contains(\"cd\"),         method = \"flowsom\"     ) # will result in a tibble with only 1 column (the cluster labels) phenograph_data |>     tof_preprocess() |>     tof_cluster(         cluster_cols = contains(\"cd\"),         method = \"kmeans\",         augment = FALSE     ) |>     head() #> # A tibble: 6 × 1 #>   .kmeans_cluster #>   <chr>           #> 1 2               #> 2 1               #> 3 19              #> 4 9               #> 5 2               #> 6 9"},{"path":"https://keyes-timothy.github.io/tidytof/articles/clustering.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Clustering and metaclustering","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] dplyr_1.1.4    tidytof_0.99.1 #>  #> loaded via a namespace (and not attached): #>   [1] tidyselect_1.2.1    viridisLite_0.4.2   timeDate_4032.109   #>   [4] farver_2.1.1        viridis_0.6.5       ggraph_2.2.1        #>   [7] fastmap_1.1.1       tweenr_2.0.3        rpart_4.1.23        #>  [10] digest_0.6.35       timechange_0.3.0    lifecycle_1.0.4     #>  [13] yardstick_1.3.1     survival_3.5-8      magrittr_2.0.3      #>  [16] compiler_4.3.3      rlang_1.1.3         sass_0.4.9          #>  [19] tools_4.3.3         igraph_2.0.3        utf8_1.2.4          #>  [22] yaml_2.3.8          data.table_1.15.2   knitr_1.45          #>  [25] graphlayouts_1.1.1  withr_3.0.0         purrr_1.0.2         #>  [28] RProtoBufLib_2.14.1 BiocGenerics_0.48.1 desc_1.4.3          #>  [31] nnet_7.3-19         grid_4.3.3          polyclip_1.10-6     #>  [34] stats4_4.3.3        fansi_1.0.6         RcppHNSW_0.6.0      #>  [37] future_1.33.1       colorspace_2.1-0    ggplot2_3.5.0       #>  [40] globals_0.16.3      scales_1.3.0        iterators_1.0.14    #>  [43] MASS_7.3-60.0.1     cli_3.6.2           rmarkdown_2.26      #>  [46] ragg_1.3.0          generics_0.1.3      future.apply_1.11.1 #>  [49] tzdb_0.4.0          cachem_1.0.8        flowCore_2.14.2     #>  [52] ggforce_0.4.2       stringr_1.5.1       splines_4.3.3       #>  [55] parallel_4.3.3      matrixStats_1.2.0   vctrs_0.6.5         #>  [58] hardhat_1.3.1       glmnet_4.1-8        Matrix_1.6-5        #>  [61] jsonlite_1.8.8      cytolib_2.14.1      hms_1.1.3           #>  [64] S4Vectors_0.40.2    ggrepel_0.9.5       listenv_0.9.1       #>  [67] systemfonts_1.0.6   foreach_1.5.2       gower_1.0.1         #>  [70] tidyr_1.3.1         jquerylib_0.1.4     recipes_1.0.10      #>  [73] parallelly_1.37.1   glue_1.7.0          pkgdown_2.0.7       #>  [76] codetools_0.2-19    stringi_1.8.3       lubridate_1.9.3     #>  [79] gtable_0.3.4        shape_1.4.6.1       munsell_0.5.0       #>  [82] tibble_3.2.1        pillar_1.9.0        htmltools_0.5.7     #>  [85] ipred_0.9-14        lava_1.8.0          R6_2.5.1            #>  [88] textshaping_0.3.7   doParallel_1.0.17   tidygraph_1.3.1     #>  [91] evaluate_0.23       Biobase_2.62.0      lattice_0.22-5      #>  [94] readr_2.1.5         memoise_2.0.1       bslib_0.6.2         #>  [97] class_7.3-22        Rcpp_1.0.12         prodlim_2023.08.28  #> [100] gridExtra_2.3       xfun_0.42           fs_1.6.3            #> [103] pkgconfig_2.0.3"},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"general-guidelines","dir":"Articles","previous_headings":"","what":"General Guidelines","title":"How to contribute code","text":"extend tidytof include new algorithm - example, one ’ve just developed - can take 1 2 general strategies (cases, may take !). first write tidytof-style verb algorithm can included standalone package. case, benefit writing tidytof-style verb algorithm taking advantage tidytof’s design schema make algorithm easy users access without learning much () new syntax still allowing maintain code base independently team. second approach write tidytof-style function ’d like team add tidytof next release. case, code review process take bit time, also allow teams collaborate provide greater degree critical feedback one another well share burden code maintenance future. either case, ’re welcome contact tidytof team review code via pull request /issue tidytof GitHub page. tutorial may helpful don’t lot experience collaborating programmers via GitHub. open request, can submit code team reviewed. Whether want method incorporated tidytof ’re simply looking external code review/feedback team, please mention request.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"code-style","dir":"Articles","previous_headings":"","what":"Code style","title":"How to contribute code","text":"tidytof uses tidyverse style guide. Adhering tidyverse style something team expect code incorporated tidytof, ’s also something encourage functions write analysis packages. experience, best code written just executed, also read humans! also many tools can use lint automatically style R code, {lintr} {styler} packages.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"testing","dir":"Articles","previous_headings":"","what":"Testing","title":"How to contribute code","text":"addition written well-styled code, encourage write unit tests every function write. common practice software engineering world, common probably (!) bioinformatics community. tidytof team uses {testthat} package unit tests, ’s great tutorial .","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"general-principles","dir":"Articles","previous_headings":"How to contribute","what":"General principles","title":"How to contribute code","text":"important part writing function extends tidytof adhere tidytof verb syntax. exceptions, tidytof functions follow specific, shared syntax involves 3 types arguments always occur order. argument types follows: almost tidytof functions, first argument data frame (tibble). enables use pipe (|>) multi-step calculations, means first argument functions implicit (passed previous function using pipe). second group arguments called column specifications, end suffix _col _cols. Column specifications unquoted column names tell tidytof verb columns compute particular operation. example, cluster_cols argument tof_cluster allows user specify column input data frames used perform clustering. Regardless verb requires , column specifications support tidyselect helpers follow rules tidyselection tidyverse verbs like dplyr::select() tidyr::pivot_longer(). Finally, third group arguments tidytof verb called method specifications, ’re comprised every argument isn’t input data frame column specification. Whereas column specifications represent columns used perform operation, method specifications represent details operation performed. example, tof_cluster_phenograph() function requires method specification num_neighbors, specifies many nearest neighbors used construct PhenoGraph algorithm’s k-nearest-neighbor graph. exceptions, tidytof extension include 3 argument types (order). addition, functions extend tidytof name starts prefix tof_. make easier users find tidytof functions using text completion functionality included development environments.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"contributing-a-new-method-to-an-existing-tidytof-verb","dir":"Articles","previous_headings":"How to contribute","what":"Contributing a new method to an existing {tidytof} verb","title":"How to contribute code","text":"tidytof currently includes multiple verbs perform fundamental single-cell data manipulation tasks. Currently, tidytof’s extensible verbs following: tof_analyze_abundance: Perform differential cluster abundance analysis tof_analyze_expression: Perform differential marker expression analysis tof_annotate_clusters: Annotate clusters manual IDs tof_batch_correct: Perform batch correction tof_cluster: Cluster cells subpopulations tof_downsample: Subsample dataset smaller number cells tof_extract: Calculate sample-level summary statistics tof_metacluster: Metacluster clusters smaller number subpopulations tof_plot_cells: Plot cell-level data tof_plot_clusters: Plot cluster-level data tof_plot_model: Plot results sample-level model tof_read_data: Read data memory disk tof_reduce_dimensions: Perform dimensionality reduction tof_transform: Transform marker expression values vectorized fashion tof_upsample: Assign new cells existing clusters (defined downsample dataset) tof_write_data: Write data memory disk tidytof verb wraps family related functions perform basic task. example, tof_cluster verb wrapper following functions: tof_cluster_ddpr, tof_cluster_flowsom, tof_cluster_kmeans, tof_cluster_phenograph. functions implement different clustering algorithm, share underlying logic standardized tof_cluster abstraction. practice, means users can apply DDPR, FlowSOM, K-means, PhenoGraph clustering algorithms datasets either calling one tof_cluster_* functions directly, calling tof_cluster method argument set appropriate value (“ddpr”, “flowsom”, “kmeans”, “phenograph”, respectively). extend existing tidytof verb, write function whose name fits pattern tof_{verb name}_*, “*” represents name algorithm used perform computation. function definition, try share many arguments possible tidytof verb ’re extending, return output object described “Value” heading help file verb extended. example, suppose wanted write tidytof-style interface new clustering algorithm “supercluster”, performs k-means clustering dataset twice outputs final cluster assignment equal two k-means cluster assignments spliced together. add supercluster algorithm tidytof, might write function like : example , note tof_cluster_supercluster named using tof_{verb name}_* style, function definition uses tof_tibble cluster_cols arguments tof_cluster, returned output object tof_tbl single column encoding cluster ids cells tof_tibble.","code":"#' Perform superclustering on high-dimensional cytometry data. #' #' This function applies the silly, hypothetical clustering algorithm #' \"supercluster\" to high-dimensional cytometry data using user-specified #' input variables/cytometry measurements. #' #' @param tof_tibble A `tof_tbl` or `tibble`. #' #' @param cluster_cols Unquoted column names indicating which columns in #' `tof_tibble` to use in computing the supercluster clusters. #' Supports tidyselect helpers. #' #' @param num_kmeans_clusters An integer indicating how many clusters should be #' used for the two k-means clustering steps. #' #' @param sep A string to use when splicing the 2 k-means clustering assignments #' to one another. #' #' @param ... Optional additional parameters to pass to #' \\code{\\link[tidytof]{tof_cluster_kmeans}} #' #' @return A tibble with one column named `.supercluster_cluster` containing #' a character vector of length `nrow(tof_tibble)` indicating the id of the #' supercluster cluster to which each cell (i.e. each row) in `tof_tibble` was #' assigned. #' #' @importFrom dplyr tibble #' tof_cluster_supercluster <-     function(tof_tibble, cluster_cols, num_kmeans_clusters = 10L, sep = \"_\", ...) {         kmeans_1 <-             tof_tibble |>             tof_cluster_kmeans(                 cluster_cols = {{ cluster_cols }},                 num_clusters = num_kmeans_clusters,                 ...             )          kmeans_2 <-             tof_tibble |>             tof_cluster_kmeans(                 cluster_cols = {{ cluster_cols }},                 num_clusters = num_kmeans_clusters,                 ...             )          final_result <-             dplyr::tibble(                 .supercluster_cluster =                     paste(kmeans_1$.kmeans_cluster, kmeans_2$.kmeans_cluster, sep = sep)             )          return(final_result)     }"},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"creating-a-new-tidytof-verb","dir":"Articles","previous_headings":"How to contribute","what":"Creating a new {tidytof} verb","title":"How to contribute code","text":"want contribute function tidytof represents new operation encompassed existing verbs , include suggestion create new verb pull request tidytof team. case, ’ll considerably flexibility define interface tidytof use implement new verb, tidytof team happy work figure makes sense (least brainstorm together).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"a-note-about-modeling-functions","dir":"Articles","previous_headings":"How to contribute","what":"A note about modeling functions","title":"How to contribute code","text":"point development, don’t recommend extending tidytof’s modeling functionality, likely abstracted standalone package (emphasis interoperability tidymodels ecosystem) point future.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"contact-us","dir":"Articles","previous_headings":"","what":"Contact us","title":"How to contribute code","text":"general questions/comments/concerns tidytof, feel free reach team GitHub .","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"How to contribute code","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> loaded via a namespace (and not attached): #>  [1] digest_0.6.35     desc_1.4.3        R6_2.5.1          fastmap_1.1.1     #>  [5] xfun_0.42         magrittr_2.0.3    cachem_1.0.8      knitr_1.45        #>  [9] memoise_2.0.1     htmltools_0.5.7   rmarkdown_2.26    lifecycle_1.0.4   #> [13] cli_3.6.2         vctrs_0.6.5       sass_0.4.9        pkgdown_2.0.7     #> [17] textshaping_0.3.7 jquerylib_0.1.4   systemfonts_1.0.6 compiler_4.3.3    #> [21] purrr_1.0.2       tools_4.3.3       ragg_1.3.0        bslib_0.6.2       #> [25] evaluate_0.23     yaml_2.3.8        jsonlite_1.8.8    rlang_1.1.3       #> [29] fs_1.6.3"},{"path":"https://keyes-timothy.github.io/tidytof/articles/differential-discovery-analysis.html","id":"accessing-the-data-for-this-vignette","dir":"Articles","previous_headings":"","what":"Accessing the data for this vignette","title":"Differential discovery analysis","text":"demonstrate use verbs, ’ll first download dataset originally collected development CITRUS algorithm. data available HDCytoData package, available Bioconductor can downloaded following command: load CITRUS data current R session, can call function HDCytoData, provide us format {flowCore} package (called “flowSet”). convert tidy tibble, can use tidytof built-method converting flowCore objects tof_tbl’s . Thus, can see citrus_data tof_tbl 172791 cells (one row) 39 pieces information cell (one column). can also extract metadata raw data join single-cell data using functions tidyverse: Thus, now sample-level information patient sample collected stimulation condition (“Basal” “BCR-XL”) sample exposed data acquisition. Finally, can join metadata single-cell tof_tbl obtain cleaned dataset. data cleaning steps, now citrus_data, tof_tbl containing cells collected 8 patients. Specifically, 2 samples taken patient: one cells’ B-cell receptors stimulated (BCR-XL) one (Basal). citrus_data, cell’s patient origin stored patient column, cell’s stimulation condition stored stimulation column. addition, population_id column stores information cluster labels applied cell using combination FlowSOM clustering manual merging (details, run ?HDCytoData::Bodenmiller_BCR_XL R console).","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE)) {     install.packages(\"BiocManager\") }  BiocManager::install(\"HDCytoData\") citrus_raw <- HDCytoData::Bodenmiller_BCR_XL_flowSet()  citrus_data <-     citrus_raw |>     as_tof_tbl(sep = \"_\") citrus_metadata <-     tibble(         file_name = as.character(flowCore::pData(citrus_raw)[[1]]),         sample_id = 1:length(file_name),         patient = stringr::str_extract(file_name, \"patient[:digit:]\"),         stimulation = stringr::str_extract(file_name, \"(BCR-XL)|Reference\")     ) |>     mutate(         stimulation = if_else(stimulation == \"Reference\", \"Basal\", stimulation)     )  citrus_metadata |>     head() #> # A tibble: 6 × 4 #>   file_name                          sample_id patient  stimulation #>   <chr>                                  <int> <chr>    <chr>       #> 1 PBMC8_30min_patient1_BCR-XL.fcs            1 patient1 BCR-XL      #> 2 PBMC8_30min_patient1_Reference.fcs         2 patient1 Basal       #> 3 PBMC8_30min_patient2_BCR-XL.fcs            3 patient2 BCR-XL      #> 4 PBMC8_30min_patient2_Reference.fcs         4 patient2 Basal       #> 5 PBMC8_30min_patient3_BCR-XL.fcs            5 patient3 BCR-XL      #> 6 PBMC8_30min_patient3_Reference.fcs         6 patient3 Basal citrus_data <-     citrus_data |>     left_join(citrus_metadata, by = \"sample_id\")"},{"path":"https://keyes-timothy.github.io/tidytof/articles/differential-discovery-analysis.html","id":"differential-abundance-analysis-using-tof_analyze_abundance","dir":"Articles","previous_headings":"","what":"Differential abundance analysis using tof_analyze_abundance()","title":"Differential discovery analysis","text":"might wonder certain clusters expand deplete within patients two stimulation conditions described - question requires differential abundance analysis (DAA). tidytof’s tof_analyze_abundance() verb supports use 3 statistical approaches performing DAA: diffcyt, generalized-linear mixed modeling (GLMMs), simple t-tests. setup described uses paired design 2 experimental conditions interest (Basal vs. BCR-XL), can use paired t-test method: Based output, can see 6 8 clusters statistically different abundance two stimulation conditions. Using tidytof easy integration tidyverse packages, can use result visualize fold-changes cluster (within patient) BCR-XL condition compared Basal condition using ggplot2:  Importantly, output tof_analyze_abundance depends slightly underlying statistical method used, details can found documentation tof_analyze_abundance_* function family member: tof_analyze_abundance_diffcyt tof_analyze_abundance_glmm tof_analyze_abundance_ttest","code":"daa_result <-     citrus_data |>     tof_analyze_abundance(         cluster_col = population_id,         effect_col = stimulation,         group_cols = patient,         test_type = \"paired\",         method = \"ttest\"     )  daa_result #> # A tibble: 8 × 8 #>   population_id    p_val   p_adj significant      t    df mean_diff mean_fc #>   <chr>            <dbl>   <dbl> <chr>        <dbl> <dbl>     <dbl>   <dbl> #> 1 1             0.000924 0.00535 \"*\"         -5.48      7  -0.00743   0.644 #> 2 2             0.00623  0.0166  \"*\"         -3.86      7  -0.0156    0.674 #> 3 3             0.0235   0.0314  \"*\"         -2.88      7  -0.0638    0.849 #> 4 4             0.0235   0.0314  \"*\"          2.88      7   0.0832    1.38  #> 5 5             0.0116   0.0232  \"*\"          3.39      7   0.00246   1.08  #> 6 6             0.371    0.371   \"\"          -0.955     7  -0.0168    0.919 #> 7 7             0.00134  0.00535 \"*\"          5.14      7   0.0202    1.14  #> 8 8             0.236    0.270   \"\"          -1.30      7  -0.00228   0.901 plot_data <-     citrus_data |>     mutate(population_id = as.character(population_id)) |>     left_join(         select(daa_result, population_id, significant, mean_fc),         by = \"population_id\"     ) |>     dplyr::count(patient, stimulation, population_id, significant, mean_fc, name = \"n\") |>     group_by(patient, stimulation) |>     mutate(prop = n / sum(n)) |>     ungroup() |>     pivot_wider(         names_from = stimulation,         values_from = c(prop, n),     ) |>     mutate(         diff = `prop_BCR-XL` - prop_Basal,         fc = `prop_BCR-XL` / prop_Basal,         population_id = fct_reorder(population_id, diff),         direction =             case_when(                 mean_fc > 1 & significant == \"*\" ~ \"increase\",                 mean_fc < 1 & significant == \"*\" ~ \"decrease\",                 TRUE ~ NA_character_             )     )  significance_data <-     plot_data |>     group_by(population_id, significant, direction) |>     summarize(diff = max(diff), fc = max(fc)) |>     ungroup()  plot_data |>     ggplot(aes(x = population_id, y = fc, fill = direction)) +     geom_violin(trim = FALSE) +     geom_hline(yintercept = 1, color = \"red\", linetype = \"dotted\", size = 0.5) +     geom_point() +     geom_text(         aes(x = population_id, y = fc, label = significant),         data = significance_data,         size = 8,         nudge_x = 0.2,         nudge_y = 0.06     ) +     scale_x_discrete(labels = function(x) str_c(\"cluster \", x)) +     scale_fill_manual(         values = c(\"decrease\" = \"#cd5241\", \"increase\" = \"#207394\"),         na.translate = FALSE     ) +     labs(         x = NULL,         y = \"Abundance fold-change (stimulated / basal)\",         fill = \"Effect\",         caption = \"Asterisks indicate significance at an adjusted p-value of 0.05\"     ) #> Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0. #> ℹ Please use `linewidth` instead. #> This warning is displayed once every 8 hours. #> Call `lifecycle::last_lifecycle_warnings()` to see where this warning was #> generated."},{"path":"https://keyes-timothy.github.io/tidytof/articles/differential-discovery-analysis.html","id":"differential-expression-analysis-with-tof_analyze_expression","dir":"Articles","previous_headings":"","what":"Differential expression analysis with tof_analyze_expression()","title":"Differential discovery analysis","text":"Similarly, suppose ’re interested intracellular signaling proteins change expression levels two stimulation conditions clusters. Differential Expression Analysis (DEA) can performed using tidytof’s tof_analyze_expression verb. , can use paired t-tests multiple-hypothesis correction test significant differences cluster’s expression signaling markers stimulation conditions. output tof_analyze_expression() also depends underlying test used, can see result looks relatively similar output tof_analyze_abundance(). , output tibble row represents differential expression results single cluster-marker pair - example, first row represents difference expression pS6 cluster 1 BCR-XL Basal conditions. row includes raw p-value multiple-hypothesis-corrected p-value cluster-marker pair. result can used make volcano plot visualize results cluster-marker pairs:  , details can found documentation tof_analyze_expression_* function family member: tof_analyze_expression_diffcyt tof_analyze_expression_lmm tof_analyze_expression_ttest","code":"signaling_markers <-     c(         \"pNFkB_Nd142\", \"pStat5_Nd150\", \"pAkt_Sm152\", \"pStat1_Eu153\", \"pStat3_Gd158\",         \"pSlp76_Dy164\", \"pBtk_Er166\", \"pErk_Er168\", \"pS6_Yb172\", \"pZap70_Gd156\"     )  dea_result <-     citrus_data |>     tof_preprocess(channel_cols = any_of(signaling_markers)) |>     tof_analyze_expression(         method = \"ttest\",         cluster_col = population_id,         marker_cols = any_of(signaling_markers),         effect_col = stimulation,         group_cols = patient,         test_type = \"paired\"     )  dea_result |>     head() #> # A tibble: 6 × 9 #>   population_id marker   p_val   p_adj significant     t    df mean_diff mean_fc #>   <chr>         <chr>    <dbl>   <dbl> <chr>       <dbl> <dbl>     <dbl>   <dbl> #> 1 1             pS6_Y… 7.58e-8 2.12e-6 *            22.9     7     2.56    4.31  #> 2 2             pS6_Y… 1.16e-7 2.12e-6 *            21.6     7     2.13    2.49  #> 3 3             pBtk_… 1.32e-7 2.12e-6 *           -21.2     7    -0.475   0.289 #> 4 7             pBtk_… 1.18e-7 2.12e-6 *           -21.5     7    -0.518   0.286 #> 5 8             pBtk_… 1.30e-7 2.12e-6 *           -21.2     7    -0.516   0.324 #> 6 4             pBtk_… 7.85e-7 1.05e-5 *           -16.3     7    -0.462   0.296 volcano_data <-     dea_result |>     mutate(         log2_fc = log(mean_fc, base = 2),         log_p = -log(p_adj),         significance =             case_when(                 p_adj < 0.05 & mean_fc > 1 ~ \"increased\",                 p_adj < 0.05 & mean_fc < 1 ~ \"decreased\",                 TRUE ~ NA_character_             ),         marker =             str_extract(marker, \".+_\") |>                 str_remove(\"_\"),         pair = str_c(marker, str_c(\"cluster \", population_id), sep = \"@\")     )  volcano_data |>     ggplot(aes(x = log2_fc, y = log_p, fill = significance)) +     geom_vline(xintercept = 0, linetype = \"dashed\", color = \"gray50\") +     geom_hline(yintercept = -log(0.05), linetype = \"dashed\", color = \"red\") +     geom_point(shape = 21, size = 2) +     ggrepel::geom_text_repel(         aes(label = pair),         data = slice_head(volcano_data, n = 10L),         size = 2     ) +     scale_fill_manual(         values = c(\"decreased\" = \"#cd5241\", \"increased\" = \"#207394\"),         na.value = \"#cdcdcd\"     ) +     labs(         x = \"log2(Fold-change)\",         y = \"-log10(p-value)\",         fill = NULL,         caption = \"Labels indicate the 10 most significant marker-cluster pairs\"     )"},{"path":"https://keyes-timothy.github.io/tidytof/articles/differential-discovery-analysis.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Differential discovery analysis","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats4    stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #>  [1] HDCytoData_1.22.1           flowCore_2.14.2             #>  [3] SummarizedExperiment_1.32.0 Biobase_2.62.0              #>  [5] GenomicRanges_1.54.1        GenomeInfoDb_1.38.8         #>  [7] IRanges_2.36.0              S4Vectors_0.40.2            #>  [9] MatrixGenerics_1.14.0       matrixStats_1.2.0           #> [11] ExperimentHub_2.10.0        AnnotationHub_3.10.0        #> [13] BiocFileCache_2.10.1        dbplyr_2.5.0                #> [15] BiocGenerics_0.48.1         forcats_1.0.0               #> [17] tidyr_1.3.1                 ggplot2_3.5.0               #> [19] stringr_1.5.1               dplyr_1.1.4                 #> [21] tidytof_0.99.1              #>  #> loaded via a namespace (and not attached): #>   [1] jsonlite_1.8.8                shape_1.4.6.1                 #>   [3] magrittr_2.0.3                farver_2.1.1                  #>   [5] rmarkdown_2.26                fs_1.6.3                      #>   [7] zlibbioc_1.48.2               ragg_1.3.0                    #>   [9] vctrs_0.6.5                   memoise_2.0.1                 #>  [11] RCurl_1.98-1.14               htmltools_0.5.7               #>  [13] S4Arrays_1.2.1                curl_5.2.1                    #>  [15] SparseArray_1.2.4             sass_0.4.9                    #>  [17] parallelly_1.37.1             bslib_0.6.2                   #>  [19] desc_1.4.3                    lubridate_1.9.3               #>  [21] cachem_1.0.8                  igraph_2.0.3                  #>  [23] mime_0.12                     lifecycle_1.0.4               #>  [25] iterators_1.0.14              pkgconfig_2.0.3               #>  [27] Matrix_1.6-5                  R6_2.5.1                      #>  [29] fastmap_1.1.1                 shiny_1.8.0                   #>  [31] GenomeInfoDbData_1.2.11       future_1.33.1                 #>  [33] digest_0.6.35                 colorspace_2.1-0              #>  [35] AnnotationDbi_1.64.1          textshaping_0.3.7             #>  [37] RSQLite_2.3.5                 labeling_0.4.3                #>  [39] filelock_1.0.3                cytolib_2.14.1                #>  [41] fansi_1.0.6                   yardstick_1.3.1               #>  [43] timechange_0.3.0              httr_1.4.7                    #>  [45] polyclip_1.10-6               abind_1.4-5                   #>  [47] compiler_4.3.3                bit64_4.0.5                   #>  [49] withr_3.0.0                   doParallel_1.0.17             #>  [51] viridis_0.6.5                 DBI_1.2.2                     #>  [53] highr_0.10                    ggforce_0.4.2                 #>  [55] MASS_7.3-60.0.1               lava_1.8.0                    #>  [57] rappdirs_0.3.3                DelayedArray_0.28.0           #>  [59] tools_4.3.3                   interactiveDisplayBase_1.40.0 #>  [61] httpuv_1.6.14                 future.apply_1.11.1           #>  [63] nnet_7.3-19                   glue_1.7.0                    #>  [65] promises_1.2.1                grid_4.3.3                    #>  [67] generics_0.1.3                recipes_1.0.10                #>  [69] gtable_0.3.4                  tzdb_0.4.0                    #>  [71] class_7.3-22                  data.table_1.15.2             #>  [73] hms_1.1.3                     tidygraph_1.3.1               #>  [75] utf8_1.2.4                    XVector_0.42.0                #>  [77] ggrepel_0.9.5                 BiocVersion_3.18.1            #>  [79] foreach_1.5.2                 pillar_1.9.0                  #>  [81] RcppHNSW_0.6.0                later_1.3.2                   #>  [83] splines_4.3.3                 tweenr_2.0.3                  #>  [85] lattice_0.22-5                survival_3.5-8                #>  [87] bit_4.0.5                     RProtoBufLib_2.14.1           #>  [89] tidyselect_1.2.1              Biostrings_2.70.3             #>  [91] knitr_1.45                    gridExtra_2.3                 #>  [93] xfun_0.42                     graphlayouts_1.1.1            #>  [95] hardhat_1.3.1                 timeDate_4032.109             #>  [97] stringi_1.8.3                 yaml_2.3.8                    #>  [99] evaluate_0.23                 codetools_0.2-19              #> [101] ggraph_2.2.1                  tibble_3.2.1                  #> [103] BiocManager_1.30.22           cli_3.6.2                     #> [105] rpart_4.1.23                  xtable_1.8-4                  #> [107] systemfonts_1.0.6             munsell_0.5.0                 #> [109] jquerylib_0.1.4               Rcpp_1.0.12                   #> [111] globals_0.16.3                png_0.1-8                     #> [113] parallel_4.3.3                ellipsis_0.3.2                #> [115] pkgdown_2.0.7                 gower_1.0.1                   #> [117] readr_2.1.5                   blob_1.2.4                    #> [119] bitops_1.0-7                  listenv_0.9.1                 #> [121] glmnet_4.1-8                  viridisLite_0.4.2             #> [123] ipred_0.9-14                  scales_1.3.0                  #> [125] prodlim_2023.08.28            purrr_1.0.2                   #> [127] crayon_1.5.2                  rlang_1.1.3                   #> [129] KEGGREST_1.42.0"},{"path":"https://keyes-timothy.github.io/tidytof/articles/dimensionality-reduction.html","id":"dimensionality-reduction-with-tof_reduce_dimensions-","dir":"Articles","previous_headings":"","what":"Dimensionality reduction with tof_reduce_dimensions().","title":"Dimensionality reduction","text":"example call tof_reduce_dimensions() use tSNE visualize data tidytof’s built-phenograph_data dataset. default, tof_reduce_dimensions add reduced-dimension feature embeddings input tof_tbl return augmented tof_tbl (, tof_tbl new columns embedding dimension) result. return features embeddings , set augment FALSE (tof_cluster). Changing method argument results different low-dimensional embeddings:","code":"data(phenograph_data)  # perform the dimensionality reduction phenograph_tsne <-     phenograph_data |>     tof_preprocess() |>     tof_reduce_dimensions(method = \"tsne\") #> Loading required namespace: Rtsne  # select only the tsne embedding columns phenograph_tsne |>     select(contains(\"tsne\")) |>     head() #> # A tibble: 6 × 2 #>   .tsne1 .tsne2 #>    <dbl>  <dbl> #> 1   2.12  17.4  #> 2  -6.78  12.2  #> 3 -28.1    9.70 #> 4 -11.5   19.6  #> 5  -1.33  21.4  #> 6 -16.7   16.0 phenograph_data |>     tof_preprocess() |>     tof_reduce_dimensions(method = \"tsne\", augment = FALSE) #> # A tibble: 3,000 × 2 #>    .tsne1 .tsne2 #>     <dbl>  <dbl> #>  1  0.660  10.4  #>  2  3.61   14.8  #>  3  7.97   39.5  #>  4  5.03   24.7  #>  5  1.20   14.1  #>  6 -2.34   26.8  #>  7 -3.73   16.6  #>  8 -8.61   27.6  #>  9 -1.32   23.5  #> 10  8.17    8.95 #> # ℹ 2,990 more rows phenograph_data |>     tof_reduce_dimensions(method = \"umap\", augment = FALSE) #> # A tibble: 3,000 × 2 #>    .umap1 .umap2 #>     <dbl>  <dbl> #>  1 -9.86   3.61  #>  2 -8.62   3.27  #>  3 -6.13   0.892 #>  4 -3.06  -2.08  #>  5 -9.86   3.42  #>  6 -0.744 -3.17  #>  7 -9.52   2.82  #>  8 -5.78   0.429 #>  9 -4.97   2.03  #> 10 -9.21   5.58  #> # ℹ 2,990 more rows  phenograph_data |>     tof_reduce_dimensions(method = \"pca\", augment = FALSE) #> # A tibble: 3,000 × 5 #>       .pc1     .pc2   .pc3    .pc4   .pc5 #>      <dbl>    <dbl>  <dbl>   <dbl>  <dbl> #>  1 -2.77    1.23    -0.868  0.978   3.49  #>  2 -0.969  -1.02    -0.787  1.22    0.329 #>  3 -2.36    2.54    -1.95  -0.882  -1.30  #>  4 -3.68   -0.00565  0.962  0.410   0.788 #>  5 -4.03    2.07    -0.829  1.59    5.39  #>  6 -2.59   -0.108    1.32  -1.41   -1.24  #>  7 -1.55   -0.651   -0.233  1.08    0.129 #>  8 -1.18   -0.446    0.134 -0.771  -0.932 #>  9 -2.00   -0.485    0.593 -0.0416 -0.658 #> 10 -0.0356 -0.924   -0.692  1.45    0.270 #> # ℹ 2,990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/dimensionality-reduction.html","id":"method-specifications-for-tof_reduce_-functions","dir":"Articles","previous_headings":"","what":"Method specifications for tof_reduce_*() functions","title":"Dimensionality reduction","text":"tof_reduce_dimensions() provides high-level API three lower-level functions: tof_reduce_pca(), tof_reduce_umap(), tof_reduce_tsne(). help files functions provide details algorithm-specific method specifications associated dimensionality reduction approaches. example, tof_reduce_pca takes num_comp argument determine many principal components returned: see ?tof_reduce_pca, ?tof_reduce_umap, ?tof_reduce_tsne additional details.","code":"# 2 principal components phenograph_data |>     tof_reduce_pca(num_comp = 2) #> # A tibble: 3,000 × 2 #>       .pc1     .pc2 #>      <dbl>    <dbl> #>  1 -2.77    1.23    #>  2 -0.969  -1.02    #>  3 -2.36    2.54    #>  4 -3.68   -0.00565 #>  5 -4.03    2.07    #>  6 -2.59   -0.108   #>  7 -1.55   -0.651   #>  8 -1.18   -0.446   #>  9 -2.00   -0.485   #> 10 -0.0356 -0.924   #> # ℹ 2,990 more rows # 3 principal components phenograph_data |>     tof_reduce_pca(num_comp = 3) #> # A tibble: 3,000 × 3 #>       .pc1     .pc2   .pc3 #>      <dbl>    <dbl>  <dbl> #>  1 -2.77    1.23    -0.868 #>  2 -0.969  -1.02    -0.787 #>  3 -2.36    2.54    -1.95  #>  4 -3.68   -0.00565  0.962 #>  5 -4.03    2.07    -0.829 #>  6 -2.59   -0.108    1.32  #>  7 -1.55   -0.651   -0.233 #>  8 -1.18   -0.446    0.134 #>  9 -2.00   -0.485    0.593 #> 10 -0.0356 -0.924   -0.692 #> # ℹ 2,990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/dimensionality-reduction.html","id":"visualization-using-tof_plot_cells_embedding","dir":"Articles","previous_headings":"","what":"Visualization using tof_plot_cells_embedding()","title":"Dimensionality reduction","text":"Regardless method used, reduced-dimension feature embeddings can visualized using ggplot2 (graphics package). tidytof also provides helper functions easily generating dimensionality reduction plots tof_tbl tibble columns representing embedding dimensions:   visualizations can helpful qualitatively describing phenotypic differences clusters dataset. example, example , can see one clusters high CD11b expression, whereas others lower CD11b expression.","code":"# plot the tsne embeddings using color to distinguish between clusters phenograph_tsne |>     tof_plot_cells_embedding(         embedding_cols = contains(\".tsne\"),         color_col = phenograph_cluster     ) # plot the tsne embeddings using color to represent CD11b expression phenograph_tsne |>     tof_plot_cells_embedding(         embedding_cols = contains(\".tsne\"),         color_col = cd11b     ) +     ggplot2::scale_fill_viridis_c()"},{"path":"https://keyes-timothy.github.io/tidytof/articles/dimensionality-reduction.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Dimensionality reduction","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] ggplot2_3.5.0  dplyr_1.1.4    tidytof_0.99.1 #>  #> loaded via a namespace (and not attached): #>   [1] gridExtra_2.3       rlang_1.1.3         magrittr_2.0.3      #>   [4] RcppAnnoy_0.0.22    matrixStats_1.2.0   compiler_4.3.3      #>   [7] systemfonts_1.0.6   vctrs_0.6.5         stringr_1.5.1       #>  [10] pkgconfig_2.0.3     shape_1.4.6.1       fastmap_1.1.1       #>  [13] ellipsis_0.3.2      labeling_0.4.3      ggraph_2.2.1        #>  [16] utf8_1.2.4          rmarkdown_2.26      prodlim_2023.08.28  #>  [19] tzdb_0.4.0          ragg_1.3.0          purrr_1.0.2         #>  [22] xfun_0.42           glmnet_4.1-8        cachem_1.0.8        #>  [25] jsonlite_1.8.8      recipes_1.0.10      highr_0.10          #>  [28] tweenr_2.0.3        irlba_2.3.5.1       parallel_4.3.3      #>  [31] R6_2.5.1            bslib_0.6.2         stringi_1.8.3       #>  [34] parallelly_1.37.1   rpart_4.1.23        lubridate_1.9.3     #>  [37] jquerylib_0.1.4     Rcpp_1.0.12         iterators_1.0.14    #>  [40] knitr_1.45          future.apply_1.11.1 readr_2.1.5         #>  [43] flowCore_2.14.2     Matrix_1.6-5        splines_4.3.3       #>  [46] nnet_7.3-19         igraph_2.0.3        timechange_0.3.0    #>  [49] tidyselect_1.2.1    yaml_2.3.8          viridis_0.6.5       #>  [52] timeDate_4032.109   doParallel_1.0.17   codetools_0.2-19    #>  [55] listenv_0.9.1       lattice_0.22-5      tibble_3.2.1        #>  [58] Biobase_2.62.0      withr_3.0.0         evaluate_0.23       #>  [61] Rtsne_0.17          future_1.33.1       desc_1.4.3          #>  [64] survival_3.5-8      polyclip_1.10-6     embed_1.1.4         #>  [67] pillar_1.9.0        foreach_1.5.2       stats4_4.3.3        #>  [70] generics_0.1.3      RcppHNSW_0.6.0      S4Vectors_0.40.2    #>  [73] hms_1.1.3           munsell_0.5.0       scales_1.3.0        #>  [76] globals_0.16.3      class_7.3-22        glue_1.7.0          #>  [79] tools_4.3.3         data.table_1.15.2   gower_1.0.1         #>  [82] fs_1.6.3            graphlayouts_1.1.1  tidygraph_1.3.1     #>  [85] grid_4.3.3          yardstick_1.3.1     tidyr_1.3.1         #>  [88] RProtoBufLib_2.14.1 ipred_0.9-14        colorspace_2.1-0    #>  [91] ggforce_0.4.2       cli_3.6.2           textshaping_0.3.7   #>  [94] fansi_1.0.6         cytolib_2.14.1      viridisLite_0.4.2   #>  [97] lava_1.8.0          uwot_0.1.16         gtable_0.3.4        #> [100] sass_0.4.9          digest_0.6.35       BiocGenerics_0.48.1 #> [103] ggrepel_0.9.5       farver_2.1.1        memoise_2.0.1       #> [106] htmltools_0.5.7     pkgdown_2.0.7       lifecycle_1.0.4     #> [109] hardhat_1.3.1       MASS_7.3-60.0.1"},{"path":"https://keyes-timothy.github.io/tidytof/articles/downsampling.html","id":"downsampling-with-tof_downsample","dir":"Articles","previous_headings":"","what":"Downsampling with tof_downsample()","title":"Downsampling","text":"Using tidytof’s built-dataset phenograph_data, can see original size dataset 1000 cells per cluster, 3000 cells total: randomly sample 200 cells per cluster, can use tof_downsample() using “constant” method: Alternatively, wanted sample 50% cells cluster, use “prop” method: finally, might also interested taking slightly different approach downsampling reduces number cells fixed constant proportion, fixed density phenotypic space. example, following scatterplot demonstrates certain areas phenotypic density phenograph_data contain cells others along cd34/cd38 axes:  reduce number cells dataset local density around cell dataset relatively constant, can use “density” method tof_downsample:  Thus, can see density downsampling uniform (though exactly uniform) across range cd34/cd38 values phenograph_data.","code":"data(phenograph_data)  phenograph_data |>     dplyr::count(phenograph_cluster) #> # A tibble: 3 × 2 #>   phenograph_cluster     n #>   <chr>              <int> #> 1 cluster1            1000 #> 2 cluster2            1000 #> 3 cluster3            1000 phenograph_data |>     # downsample     tof_downsample(         group_cols = phenograph_cluster,         method = \"constant\",         num_cells = 200     ) |>     # count the number of downsampled cells in each cluster     count(phenograph_cluster) #> # A tibble: 3 × 2 #>   phenograph_cluster     n #>   <chr>              <int> #> 1 cluster1             200 #> 2 cluster2             200 #> 3 cluster3             200 phenograph_data |>     # downsample     tof_downsample(         group_cols = phenograph_cluster,         method = \"prop\",         prop_cells = 0.5     ) |>     # count the number of downsampled cells in each cluster     count(phenograph_cluster) #> # A tibble: 3 × 2 #>   phenograph_cluster     n #>   <chr>              <int> #> 1 cluster1             500 #> 2 cluster2             500 #> 3 cluster3             500 rescale_max <-     function(x, to = c(0, 1), from = range(x, na.rm = TRUE)) {         x / from[2] * to[2]     }  phenograph_data |>     # preprocess all numeric columns in the dataset     tof_preprocess(undo_noise = FALSE) |>     # plot     ggplot(aes(x = cd34, y = cd38)) +     geom_hex() +     coord_fixed(ratio = 0.4) +     scale_x_continuous(limits = c(NA, 1.5)) +     scale_y_continuous(limits = c(NA, 4)) +     scale_fill_viridis_c(         labels = function(x) round(rescale_max(x), 2)     ) +     labs(         fill = \"relative density\"     ) phenograph_data |>     tof_preprocess(undo_noise = FALSE) |>     tof_downsample(method = \"density\", density_cols = c(cd34, cd38)) |>     # plot     ggplot(aes(x = cd34, y = cd38)) +     geom_hex() +     coord_fixed(ratio = 0.4) +     scale_x_continuous(limits = c(NA, 1.5)) +     scale_y_continuous(limits = c(NA, 4)) +     scale_fill_viridis_c(         labels = function(x) round(rescale_max(x), 2)     ) +     labs(         fill = \"relative density\"     )"},{"path":"https://keyes-timothy.github.io/tidytof/articles/downsampling.html","id":"additional-documentation","dir":"Articles","previous_headings":"","what":"Additional documentation","title":"Downsampling","text":"details, check documentation 3 underlying members tof_downsample_* function family (wrapped tof_downsample): tof_downsample_constant tof_downsample_prop tof_downsample_density","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/downsampling.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Downsampling","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] ggplot2_3.5.0  dplyr_1.1.4    tidytof_0.99.1 #>  #> loaded via a namespace (and not attached): #>   [1] gridExtra_2.3       rlang_1.1.3         magrittr_2.0.3      #>   [4] matrixStats_1.2.0   compiler_4.3.3      systemfonts_1.0.6   #>   [7] vctrs_0.6.5         stringr_1.5.1       pkgconfig_2.0.3     #>  [10] shape_1.4.6.1       fastmap_1.1.1       ggraph_2.2.1        #>  [13] utf8_1.2.4          rmarkdown_2.26      prodlim_2023.08.28  #>  [16] tzdb_0.4.0          ragg_1.3.0          purrr_1.0.2         #>  [19] xfun_0.42           glmnet_4.1-8        cachem_1.0.8        #>  [22] jsonlite_1.8.8      recipes_1.0.10      highr_0.10          #>  [25] tweenr_2.0.3        parallel_4.3.3      R6_2.5.1            #>  [28] bslib_0.6.2         stringi_1.8.3       parallelly_1.37.1   #>  [31] rpart_4.1.23        lubridate_1.9.3     jquerylib_0.1.4     #>  [34] Rcpp_1.0.12         iterators_1.0.14    knitr_1.45          #>  [37] future.apply_1.11.1 readr_2.1.5         flowCore_2.14.2     #>  [40] Matrix_1.6-5        splines_4.3.3       nnet_7.3-19         #>  [43] igraph_2.0.3        timechange_0.3.0    tidyselect_1.2.1    #>  [46] yaml_2.3.8          viridis_0.6.5       timeDate_4032.109   #>  [49] doParallel_1.0.17   codetools_0.2-19    listenv_0.9.1       #>  [52] lattice_0.22-5      tibble_3.2.1        Biobase_2.62.0      #>  [55] withr_3.0.0         evaluate_0.23       future_1.33.1       #>  [58] desc_1.4.3          survival_3.5-8      polyclip_1.10-6     #>  [61] pillar_1.9.0        foreach_1.5.2       stats4_4.3.3        #>  [64] generics_0.1.3      RcppHNSW_0.6.0      S4Vectors_0.40.2    #>  [67] hms_1.1.3           munsell_0.5.0       scales_1.3.0        #>  [70] globals_0.16.3      class_7.3-22        glue_1.7.0          #>  [73] tools_4.3.3         data.table_1.15.2   gower_1.0.1         #>  [76] fs_1.6.3            graphlayouts_1.1.1  tidygraph_1.3.1     #>  [79] grid_4.3.3          yardstick_1.3.1     tidyr_1.3.1         #>  [82] RProtoBufLib_2.14.1 ipred_0.9-14        colorspace_2.1-0    #>  [85] ggforce_0.4.2       cli_3.6.2           textshaping_0.3.7   #>  [88] fansi_1.0.6         cytolib_2.14.1      viridisLite_0.4.2   #>  [91] lava_1.8.0          gtable_0.3.4        sass_0.4.9          #>  [94] digest_0.6.35       BiocGenerics_0.48.1 ggrepel_0.9.5       #>  [97] farver_2.1.1        memoise_2.0.1       htmltools_0.5.7     #> [100] pkgdown_2.0.7       lifecycle_1.0.4     hardhat_1.3.1       #> [103] MASS_7.3-60.0.1"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"accessing-the-data-for-this-vignette","dir":"Articles","previous_headings":"","what":"Accessing the data for this vignette","title":"Feature extraction","text":"demonstrate use verbs, ’ll first download dataset originally collected development CITRUS algorithm. data available HDCytoData package, available Bioconductor can downloaded following command: load CITRUS data current R session, can call function HDCytoData, provide us format {flowCore} package (called “flowSet”). convert tidy tibble, can use tidytof built-method converting flowCore objects tof_tbl’s . Thus, can see citrus_data tof_tbl 172791 cells (one row) 39 pieces information cell (one column). can also extract metadata raw data join single-cell data using functions tidyverse: Thus, now sample-level information patient sample collected stimulation condition (“Basal” “BCR-XL”) sample exposed data acquisition. Finally, can join metadata single-cell tof_tbl obtain cleaned dataset. data cleaning steps, now citrus_data, tof_tbl containing cells collected 8 patients. Specifically, 2 samples taken patient: one cells’ B-cell receptors stimulated (BCR-XL) one (Basal). citrus_data, cell’s patient origin stored patient column, cell’s stimulation condition stored stimulation column. addition, population_id column stores information cluster labels applied cell using combination FlowSOM clustering manual merging (details, run ?HDCytoData::Bodenmiller_BCR_XL R console).","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE)) {     install.packages(\"BiocManager\") }  BiocManager::install(\"HDCytoData\") citrus_raw <- HDCytoData::Bodenmiller_BCR_XL_flowSet()  citrus_data <-     citrus_raw |>     as_tof_tbl(sep = \"_\") citrus_metadata <-     tibble(         file_name = as.character(flowCore::pData(citrus_raw)[[1]]),         sample_id = 1:length(file_name),         patient = stringr::str_extract(file_name, \"patient[:digit:]\"),         stimulation = stringr::str_extract(file_name, \"(BCR-XL)|Reference\")     ) |>     mutate(         stimulation = if_else(stimulation == \"Reference\", \"Basal\", stimulation)     )  citrus_metadata |>     head() #> # A tibble: 6 × 4 #>   file_name                          sample_id patient  stimulation #>   <chr>                                  <int> <chr>    <chr>       #> 1 PBMC8_30min_patient1_BCR-XL.fcs            1 patient1 BCR-XL      #> 2 PBMC8_30min_patient1_Reference.fcs         2 patient1 Basal       #> 3 PBMC8_30min_patient2_BCR-XL.fcs            3 patient2 BCR-XL      #> 4 PBMC8_30min_patient2_Reference.fcs         4 patient2 Basal       #> 5 PBMC8_30min_patient3_BCR-XL.fcs            5 patient3 BCR-XL      #> 6 PBMC8_30min_patient3_Reference.fcs         6 patient3 Basal citrus_data <-     citrus_data |>     left_join(citrus_metadata, by = \"sample_id\")"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"calculating-cluster-proportions-using-tof_extract_proportion","dir":"Articles","previous_headings":"","what":"Calculating cluster proportions using tof_extract_proportion()","title":"Feature extraction","text":"First, tof_extract_proportion(), extracts proportion cells cluster within sample (samples defined using group_cols argument): Like members tof_extract_* function family, tof_extract_proportion() returns one row sample (defined unique combination values columns specified group_cols) one column extracted feature (, one column proportion 8 clusters citrus_data). values can also returned “long” format changing format argument:","code":"# preprocess the numeric columns in the citrus dataset citrus_data <-     citrus_data |>     mutate(cluster = str_c(\"cluster\", population_id)) |>     tof_preprocess()  citrus_data |>     tof_extract_proportion(         cluster_col = cluster,         group_cols = c(patient, stimulation)     ) |>     head() #> # A tibble: 6 × 10 #>   patient  stimulation `prop@cluster1` `prop@cluster2` `prop@cluster3` #>   <chr>    <chr>                 <dbl>           <dbl>           <dbl> #> 1 patient1 Basal                0.0190          0.0482           0.447 #> 2 patient1 BCR-XL               0.0109          0.0395           0.268 #> 3 patient2 Basal                0.0130          0.0280           0.491 #> 4 patient2 BCR-XL               0.0101          0.0143           0.358 #> 5 patient3 Basal                0.0326          0.0830           0.397 #> 6 patient3 BCR-XL               0.0200          0.0412           0.323 #> # ℹ 5 more variables: `prop@cluster4` <dbl>, `prop@cluster5` <dbl>, #> #   `prop@cluster6` <dbl>, `prop@cluster7` <dbl>, `prop@cluster8` <dbl> citrus_data |>     tof_extract_proportion(         cluster_col = cluster,         group_cols = c(patient, stimulation),         format = \"long\"     ) |>     head() #> # A tibble: 6 × 4 #>   patient  stimulation cluster     prop #>   <chr>    <chr>       <chr>      <dbl> #> 1 patient1 Basal       cluster1 0.0190  #> 2 patient1 Basal       cluster2 0.0482  #> 3 patient1 Basal       cluster3 0.447   #> 4 patient1 Basal       cluster4 0.237   #> 5 patient1 Basal       cluster5 0.00219 #> 6 patient1 Basal       cluster6 0.0759"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"calculating-cluster-marker-expression-measures-using-tof_extract_central_tendency","dir":"Articles","previous_headings":"","what":"Calculating cluster marker expression measures using tof_extract_central_tendency()","title":"Feature extraction","text":"Another member tof_extract_*() function family, tof_extract_central_tendency(), computes central tendency (e.g. mean median) user-specified markers cluster. argument central_tendency_function can used compute summary statistic. example, following choice central_tendency_function compute 75th percentile marker-cluster pair citrus_data:","code":"citrus_data |>     tof_extract_central_tendency(         cluster_col = cluster,         group_cols = c(patient, stimulation),         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         central_tendency_function = mean     ) |>     head() #> # A tibble: 6 × 26 #>   patient  stimulation `CD45_In115@cluster1_ct` `CD4_Nd145@cluster1_ct` #>   <chr>    <chr>                          <dbl>                   <dbl> #> 1 patient1 BCR-XL                          4.80                  0.0967 #> 2 patient1 Basal                           4.68                  0.765  #> 3 patient2 BCR-XL                          5.00                 -0.0579 #> 4 patient2 Basal                           4.88                  0.808  #> 5 patient3 BCR-XL                          5.04                 -0.0432 #> 6 patient3 Basal                           4.98                  0.745  #> # ℹ 22 more variables: `CD20_Sm147@cluster1_ct` <dbl>, #> #   `CD45_In115@cluster2_ct` <dbl>, `CD4_Nd145@cluster2_ct` <dbl>, #> #   `CD20_Sm147@cluster2_ct` <dbl>, `CD45_In115@cluster3_ct` <dbl>, #> #   `CD4_Nd145@cluster3_ct` <dbl>, `CD20_Sm147@cluster3_ct` <dbl>, #> #   `CD45_In115@cluster4_ct` <dbl>, `CD4_Nd145@cluster4_ct` <dbl>, #> #   `CD20_Sm147@cluster4_ct` <dbl>, `CD45_In115@cluster5_ct` <dbl>, #> #   `CD4_Nd145@cluster5_ct` <dbl>, `CD20_Sm147@cluster5_ct` <dbl>, … citrus_data |>     tof_extract_central_tendency(         cluster_col = cluster,         group_cols = c(patient, stimulation),         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         central_tendency_function = function(x) quantile(x = x, probs = 0.75)     ) |>     head() #> # A tibble: 6 × 26 #>   patient  stimulation `CD45_In115@cluster1_ct` `CD4_Nd145@cluster1_ct` #>   <chr>    <chr>                          <dbl>                   <dbl> #> 1 patient1 BCR-XL                          5.30                 -0.0186 #> 2 patient1 Basal                           5.18                  1.32   #> 3 patient2 BCR-XL                          5.41                 -0.0201 #> 4 patient2 Basal                           5.28                  1.39   #> 5 patient3 BCR-XL                          5.42                 -0.0362 #> 6 patient3 Basal                           5.41                  1.27   #> # ℹ 22 more variables: `CD20_Sm147@cluster1_ct` <dbl>, #> #   `CD45_In115@cluster2_ct` <dbl>, `CD4_Nd145@cluster2_ct` <dbl>, #> #   `CD20_Sm147@cluster2_ct` <dbl>, `CD45_In115@cluster3_ct` <dbl>, #> #   `CD4_Nd145@cluster3_ct` <dbl>, `CD20_Sm147@cluster3_ct` <dbl>, #> #   `CD45_In115@cluster4_ct` <dbl>, `CD4_Nd145@cluster4_ct` <dbl>, #> #   `CD20_Sm147@cluster4_ct` <dbl>, `CD45_In115@cluster5_ct` <dbl>, #> #   `CD4_Nd145@cluster5_ct` <dbl>, `CD20_Sm147@cluster5_ct` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"calculating-the-proportion-of-cells-with-marker-expression-above-a-threshold-using-tof_extract_proportion","dir":"Articles","previous_headings":"","what":"Calculating the proportion of cells with marker expression above a threshold using tof_extract_proportion()","title":"Feature extraction","text":"tof_extract_threshold() similar tof_extract_central_tendency(), calculates proportion cells user-specified expression value marker instead measure central tendency:","code":"citrus_data |>     tof_extract_threshold(         cluster_col = cluster,         group_cols = c(patient, stimulation),         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         threshold = 5     ) |>     head() #> # A tibble: 6 × 26 #>   patient  stimulation `CD45_In115@cluster1_threshold` CD4_Nd145@cluster1_thre…¹ #>   <chr>    <chr>                                 <dbl>                     <dbl> #> 1 patient1 BCR-XL                                0.516                         0 #> 2 patient1 Basal                                 0.365                         0 #> 3 patient2 BCR-XL                                0.554                         0 #> 4 patient2 Basal                                 0.452                         0 #> 5 patient3 BCR-XL                                0.547                         0 #> 6 patient3 Basal                                 0.549                         0 #> # ℹ abbreviated name: ¹​`CD4_Nd145@cluster1_threshold` #> # ℹ 22 more variables: `CD20_Sm147@cluster1_threshold` <dbl>, #> #   `CD45_In115@cluster2_threshold` <dbl>, #> #   `CD4_Nd145@cluster2_threshold` <dbl>, #> #   `CD20_Sm147@cluster2_threshold` <dbl>, #> #   `CD45_In115@cluster3_threshold` <dbl>, #> #   `CD4_Nd145@cluster3_threshold` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"calculating-differences-in-marker-distributions-using-tof_extract_emd-and-tof_extract_jsd","dir":"Articles","previous_headings":"","what":"Calculating differences in marker distributions using tof_extract_emd() and tof_extract_jsd()","title":"Feature extraction","text":"two final members tof_extract_* function family – tof_extract_emd tof_extract_jsd – designed specifically comparing distributions marker expression stimulation conditions. , must given stimulation column (using emd_col jsd_col argument) identifies stimulation condition cell , reference_level specifies reference (.e. unstimulated) condition within emd_col jsd_col. additional arguments, tof_extract_emd computes Earth-mover’s distance marker’s distribution stimulation conditions (within cluster) basal condition; similarly, tof_extract_jsd computes Jensen-Shannon divergence index distributions. values ways compare different 2 distributions one another computationally expensive (also higher-resolution) simply comparing measures central tendency.","code":"# Earth-mover's distance citrus_data |>     tof_extract_emd(         cluster_col = cluster,         group_cols = patient,         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         emd_col = stimulation,         reference_level = \"Basal\"     ) |>     head() #> # A tibble: 6 × 25 #>   patient  BCR-XL_CD45_In115@clu…¹ BCR-XL_CD4_Nd145@clu…² BCR-XL_CD20_Sm147@cl…³ #>   <chr>                      <dbl>                  <dbl>                  <dbl> #> 1 patient1                   0.864                   2.47                  13.0  #> 2 patient2                   1.11                    7.05                  10.8  #> 3 patient3                   0.670                   6.23                  10.5  #> 4 patient4                   2.64                    5.86                   9.90 #> 5 patient5                   0.594                   7.56                   8.13 #> 6 patient6                   0.661                   4.77                   7.97 #> # ℹ abbreviated names: ¹​`BCR-XL_CD45_In115@cluster3_emd`, #> #   ²​`BCR-XL_CD4_Nd145@cluster3_emd`, ³​`BCR-XL_CD20_Sm147@cluster3_emd` #> # ℹ 21 more variables: `BCR-XL_CD45_In115@cluster7_emd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster7_emd` <dbl>, #> #   `BCR-XL_CD20_Sm147@cluster7_emd` <dbl>, #> #   `BCR-XL_CD45_In115@cluster4_emd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster4_emd` <dbl>, … # Jensen-Shannon Divergence citrus_data |>     tof_extract_jsd(         cluster_col = cluster,         group_cols = patient,         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         jsd_col = stimulation,         reference_level = \"Basal\"     ) |>     head() #> # A tibble: 6 × 25 #>   patient  BCR-XL_CD45_In115@clu…¹ BCR-XL_CD4_Nd145@clu…² BCR-XL_CD20_Sm147@cl…³ #>   <chr>                      <dbl>                  <dbl>                  <dbl> #> 1 patient1                 0.0367                  0.0513                  0.347 #> 2 patient2                 0.00831                 0.168                   0.401 #> 3 patient3                 0.0104                  0.115                   0.357 #> 4 patient4                 0.0301                  0.135                   0.205 #> 5 patient5                 0.00911                 0.0789                  0.274 #> 6 patient6                 0.00972                 0.0346                  0.214 #> # ℹ abbreviated names: ¹​`BCR-XL_CD45_In115@cluster3_jsd`, #> #   ²​`BCR-XL_CD4_Nd145@cluster3_jsd`, ³​`BCR-XL_CD20_Sm147@cluster3_jsd` #> # ℹ 21 more variables: `BCR-XL_CD45_In115@cluster7_jsd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster7_jsd` <dbl>, #> #   `BCR-XL_CD20_Sm147@cluster7_jsd` <dbl>, #> #   `BCR-XL_CD45_In115@cluster4_jsd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster4_jsd` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"putting-it-all-together-with-tof_extract_features","dir":"Articles","previous_headings":"","what":"Putting it all together with tof_extract_features()","title":"Feature extraction","text":"Finally, tof_extract_features() verb provides wrapper members function family, allowing users extract multiple features types . example, following code extracts proportion cluster, median several markers cluster, EMD basal condition stimulated condition cluster patients citrus_data.","code":"signaling_markers <-     c(         \"pNFkB_Nd142\", \"pStat5_Nd150\", \"pAkt_Sm152\", \"pStat1_Eu153\", \"pStat3_Gd158\",         \"pSlp76_Dy164\", \"pBtk_Er166\", \"pErk_Er168\", \"pS6_Yb172\", \"pZap70_Gd156\"     )  citrus_data |>     tof_extract_features(         cluster_col = cluster,         group_cols = patient,         stimulation_col = stimulation,         lineage_cols = any_of(c(\"CD45_In115\", \"CD20_Sm147\", \"CD33_Nd148\")),         signaling_cols = any_of(signaling_markers),         signaling_method = \"emd\",         basal_level = \"Basal\"     ) |>     head() #> # A tibble: 6 × 193 #>   patient  `prop@cluster1` `prop@cluster2` `prop@cluster3` `prop@cluster4` #>   <chr>              <dbl>           <dbl>           <dbl>           <dbl> #> 1 patient1          0.0149          0.0438           0.356           0.351 #> 2 patient2          0.0115          0.0212           0.425           0.323 #> 3 patient3          0.0255          0.0594           0.355           0.217 #> 4 patient4          0.0127          0.0418           0.320           0.223 #> 5 patient5          0.0207          0.0423           0.377           0.269 #> 6 patient6          0.0183          0.0493           0.459           0.250 #> # ℹ 188 more variables: `prop@cluster5` <dbl>, `prop@cluster6` <dbl>, #> #   `prop@cluster7` <dbl>, `prop@cluster8` <dbl>, #> #   `CD45_In115@cluster1_ct` <dbl>, `CD20_Sm147@cluster1_ct` <dbl>, #> #   `CD33_Nd148@cluster1_ct` <dbl>, `CD45_In115@cluster2_ct` <dbl>, #> #   `CD20_Sm147@cluster2_ct` <dbl>, `CD33_Nd148@cluster2_ct` <dbl>, #> #   `CD45_In115@cluster3_ct` <dbl>, `CD20_Sm147@cluster3_ct` <dbl>, #> #   `CD33_Nd148@cluster3_ct` <dbl>, `CD45_In115@cluster4_ct` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Feature extraction","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats4    stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #>  [1] HDCytoData_1.22.1           flowCore_2.14.2             #>  [3] SummarizedExperiment_1.32.0 Biobase_2.62.0              #>  [5] GenomicRanges_1.54.1        GenomeInfoDb_1.38.8         #>  [7] IRanges_2.36.0              S4Vectors_0.40.2            #>  [9] MatrixGenerics_1.14.0       matrixStats_1.2.0           #> [11] ExperimentHub_2.10.0        AnnotationHub_3.10.0        #> [13] BiocFileCache_2.10.1        dbplyr_2.5.0                #> [15] BiocGenerics_0.48.1         stringr_1.5.1               #> [17] dplyr_1.1.4                 tidytof_0.99.1              #>  #> loaded via a namespace (and not attached): #>   [1] jsonlite_1.8.8                shape_1.4.6.1                 #>   [3] magrittr_2.0.3                farver_2.1.1                  #>   [5] rmarkdown_2.26                fs_1.6.3                      #>   [7] zlibbioc_1.48.2               ragg_1.3.0                    #>   [9] vctrs_0.6.5                   memoise_2.0.1                 #>  [11] RCurl_1.98-1.14               htmltools_0.5.7               #>  [13] S4Arrays_1.2.1                curl_5.2.1                    #>  [15] SparseArray_1.2.4             sass_0.4.9                    #>  [17] parallelly_1.37.1             bslib_0.6.2                   #>  [19] desc_1.4.3                    lubridate_1.9.3               #>  [21] cachem_1.0.8                  igraph_2.0.3                  #>  [23] mime_0.12                     lifecycle_1.0.4               #>  [25] iterators_1.0.14              pkgconfig_2.0.3               #>  [27] Matrix_1.6-5                  R6_2.5.1                      #>  [29] fastmap_1.1.1                 shiny_1.8.0                   #>  [31] GenomeInfoDbData_1.2.11       future_1.33.1                 #>  [33] digest_0.6.35                 colorspace_2.1-0              #>  [35] AnnotationDbi_1.64.1          textshaping_0.3.7             #>  [37] RSQLite_2.3.5                 philentropy_0.8.0             #>  [39] filelock_1.0.3                cytolib_2.14.1                #>  [41] fansi_1.0.6                   yardstick_1.3.1               #>  [43] timechange_0.3.0              httr_1.4.7                    #>  [45] polyclip_1.10-6               abind_1.4-5                   #>  [47] compiler_4.3.3                bit64_4.0.5                   #>  [49] withr_3.0.0                   doParallel_1.0.17             #>  [51] viridis_0.6.5                 DBI_1.2.2                     #>  [53] ggforce_0.4.2                 MASS_7.3-60.0.1               #>  [55] lava_1.8.0                    rappdirs_0.3.3                #>  [57] DelayedArray_0.28.0           tools_4.3.3                   #>  [59] interactiveDisplayBase_1.40.0 httpuv_1.6.14                 #>  [61] future.apply_1.11.1           nnet_7.3-19                   #>  [63] glue_1.7.0                    promises_1.2.1                #>  [65] grid_4.3.3                    generics_0.1.3                #>  [67] recipes_1.0.10                gtable_0.3.4                  #>  [69] tzdb_0.4.0                    class_7.3-22                  #>  [71] tidyr_1.3.1                   data.table_1.15.2             #>  [73] hms_1.1.3                     tidygraph_1.3.1               #>  [75] utf8_1.2.4                    XVector_0.42.0                #>  [77] ggrepel_0.9.5                 BiocVersion_3.18.1            #>  [79] foreach_1.5.2                 pillar_1.9.0                  #>  [81] RcppHNSW_0.6.0                later_1.3.2                   #>  [83] splines_4.3.3                 tweenr_2.0.3                  #>  [85] lattice_0.22-5                survival_3.5-8                #>  [87] bit_4.0.5                     emdist_0.3-3                  #>  [89] RProtoBufLib_2.14.1           tidyselect_1.2.1              #>  [91] Biostrings_2.70.3             knitr_1.45                    #>  [93] gridExtra_2.3                 xfun_0.42                     #>  [95] graphlayouts_1.1.1            hardhat_1.3.1                 #>  [97] timeDate_4032.109             stringi_1.8.3                 #>  [99] yaml_2.3.8                    evaluate_0.23                 #> [101] codetools_0.2-19              ggraph_2.2.1                  #> [103] tibble_3.2.1                  BiocManager_1.30.22           #> [105] cli_3.6.2                     rpart_4.1.23                  #> [107] xtable_1.8-4                  systemfonts_1.0.6             #> [109] munsell_0.5.0                 jquerylib_0.1.4               #> [111] Rcpp_1.0.12                   globals_0.16.3                #> [113] png_0.1-8                     parallel_4.3.3                #> [115] ellipsis_0.3.2                pkgdown_2.0.7                 #> [117] gower_1.0.1                   ggplot2_3.5.0                 #> [119] readr_2.1.5                   blob_1.2.4                    #> [121] bitops_1.0-7                  listenv_0.9.1                 #> [123] glmnet_4.1-8                  viridisLite_0.4.2             #> [125] ipred_0.9-14                  scales_1.3.0                  #> [127] prodlim_2023.08.28            purrr_1.0.2                   #> [129] crayon_1.5.2                  rlang_1.1.3                   #> [131] KEGGREST_1.42.0"},{"path":"https://keyes-timothy.github.io/tidytof/articles/modeling.html","id":"accessing-the-data-for-this-vignette","dir":"Articles","previous_headings":"","what":"Accessing the data for this vignette","title":"Building predictive models","text":"illustrate work, first download patient-level data paper combine sample-level clinical annotations one tidytof’s built-datasets (ddpr_metadata). data processing steps result tibble called ddpr_patients. numeric columns ddpr_patients represent aggregated cell population features sample (see Supplementary Table 5 paper details). non-numeric columns represent clinical metadata sample (run ?ddpr_metadata information). metadata columns, important ones indicate patient develop refractory disease (“relapse”), /happen. information stored relapse_status time_to_relapse columns, respectively. also preprocessing steps might want perform now save us headaches ’re fitting models later. next part vignette, ’ll use patient-level data build predictive models using resampling procedures like k-fold cross-validation bootstrapping.","code":"data(ddpr_metadata)  # link for downloading the sample-level data from the Nature Medicine website data_link <-     \"https://static-content.springer.com/esm/art%3A10.1038%2Fnm.4505/MediaObjects/41591_2018_BFnm4505_MOESM3_ESM.csv\"  # download the data and combine it with clinical annotations ddpr_patients <-     readr::read_csv(data_link, skip = 2L, n_max = 78L, show_col_types = FALSE) |>     dplyr::rename(patient_id = Patient_ID) |>     dplyr::left_join(ddpr_metadata, by = \"patient_id\") |>     dplyr::filter(!str_detect(patient_id, \"Healthy\"))  # preview only the metadata (i.e. non-numeric) columns ddpr_patients |>     dplyr::select(where(~ !is.numeric(.x))) |>     head() #> # A tibble: 6 × 8 #>   patient_id gender mrd_risk nci_rome_risk relapse_status type_of_relapse cohort #>   <chr>      <chr>  <chr>    <chr>         <chr>          <chr>           <chr>  #> 1 UPN1       Male   Interme… Standard      Yes            Early           Train… #> 2 UPN1-Rx    Male   Interme… Standard      Yes            Early           Train… #> 3 UPN2       Male   Interme… Standard      No             NA              Train… #> 4 UPN3       Female Standard Standard      No             NA              Train… #> 5 UPN4       Male   Standard Standard      No             NA              Valid… #> 6 UPN5       Female Standard High          No             NA              Valid… #> # ℹ 1 more variable: ddpr_risk <chr> ddpr_patients <-     ddpr_patients |>     # convert the relapse_status variable to a factor     # and create the time_to_event and event columns for survival modeling     dplyr::mutate(         relapse_status = as.factor(relapse_status),         time_to_event = dplyr::if_else(relapse_status == \"Yes\", time_to_relapse, ccr),         event = dplyr::if_else(relapse_status == \"Yes\", 1, 0)     )"},{"path":"https://keyes-timothy.github.io/tidytof/articles/modeling.html","id":"building-a-classifier-using-elastic-net-regularized-logistic-regression","dir":"Articles","previous_headings":"","what":"Building a classifier using elastic net-regularized logistic regression","title":"Building predictive models","text":"First, can build elastic net classifier predict patients relapse patients won’t (ignoring time--event data now). , can use relapse_status column ddpr_patients outcome variable: can see samples annotated, can throw away samples don’t clinical outcome associated . original DDPR paper, 10-fold cross-validation used tune glmnet model estimate error model new datasets. , can use tof_split_data() function split cohort training test set either 10 times using k-fold cross-validation bootstrapping. Reading documentation tof_split_data() demonstrates use resampling methods (like bootstrapping). output tof_split_data() varies depending split_method used. cross-validation, result rset object rsample package. rset objects type tibble two columns: splits - column entry rsplit object (contains single resample full dataset) id - character column entry represents name fold entry splits belongs . can inspect one resamples splits column see contain: Note can use rsample::training rsample::testing return training test observations resampling: , can feed training_split tof_train_model function tune logistic regression model predicts relapse_status leukemia patient. sure check tof_create_grid documentation learn make hyperparameter search grid model tuning (case, limit mixture parameter value 1, fits sparse lasso model). Also note , case, illustrative purposes ’re incorporating features one populations interest (population 2) model, whereas original model incorporated features 12 populations (likely required quite bit computational power result). output tof_train_model tof_model, object containing information trained model (can passed tof_predict tof_assess_model verbs). tof_model printed, information optimal hyperparamters printed, table nonzero model coefficients model. training model, might interested seeing performs. One way assess classification model see well works applied directly back data trained (model’s “training data”). , can use tof_assess_model() function arguments: tof_assess_model() returns list several model assessment metrics differ depending kind tof_model trained. two-class classifier models, among useful confusion_matrix, shows classifier classified observation relative true class assignment. case, can see model performed perfectly training data (expected, model optimized using data !). can also visualize model’s performance using tof_plot_model() verb, case two-class model give us Receiver-Operating Characteristic (ROC) curve:  shown , tof_plot_model() return receiver-operating curve two-class model. ’s unusual get AUC 1 machine learning world, can note case, classification problem wasn’t particularly difficult (lot input features work ). training model, generally isn’t sufficient evaluate model performs training data alone, provide overly-optimistic representation model perform data ’s never seen (problem often called “overfitting” model training data). get fairer estimate model’s performance new datasets, can also evaluate cross-validation error calling tof_assess_model() tof_plot_model() new_data argument set “tuning”.  case, plot ROC Curve using predictions observation excluded model training cross-validation, approach gives accurate estimate model’s performance new data simple evaluation training dataset.","code":"# find how many of each outcome we have in our cohort ddpr_patients |>     dplyr::count(relapse_status) #> # A tibble: 3 × 2 #>   relapse_status     n #>   <fct>          <int> #> 1 No                37 #> 2 Yes               24 #> 3 NA                12 ddpr_patients_unannotated <-     ddpr_patients |>     dplyr::filter(is.na(relapse_status))  ddpr_patients <-     ddpr_patients |>     dplyr::filter(!is.na(relapse_status)) set.seed(3000L)  training_split <-     ddpr_patients |>     tof_split_data(         split_method = \"k-fold\",         num_cv_folds = 10,         strata = relapse_status     )  training_split #> #  10-fold cross-validation using stratification  #> # A tibble: 10 × 2 #>    splits         id     #>    <list>         <chr>  #>  1 <split [54/7]> Fold01 #>  2 <split [54/7]> Fold02 #>  3 <split [54/7]> Fold03 #>  4 <split [54/7]> Fold04 #>  5 <split [55/6]> Fold05 #>  6 <split [55/6]> Fold06 #>  7 <split [55/6]> Fold07 #>  8 <split [56/5]> Fold08 #>  9 <split [56/5]> Fold09 #> 10 <split [56/5]> Fold10 my_resample <- training_split$splits[[1]]  print(my_resample) #> <Analysis/Assess/Total> #> <54/7/61> my_resample |>     rsample::training() |>     head() #> # A tibble: 6 × 1,854 #>   patient_id Pop_P_Pop1 CD19_Pop1 CD20_Pop1 CD24_Pop1 CD34_Pop1 CD38_Pop1 #>   <chr>           <dbl>     <dbl>     <dbl>     <dbl>     <dbl>     <dbl> #> 1 UPN1           3.06      0.583    0.00449    0.164       1.94     0.416 #> 2 UPN1-Rx        0.0395    0.618    0.0634     0.572       2.93     0.944 #> 3 UPN2           0.139     0.0662   0.0221     0.0825      2.25     0.454 #> 4 UPN3           0.633     0.0234   0.0165     0.0327      2.25     0.226 #> 5 UPN4           0.0443    0.129    0.0447     0.232       2.47     0.336 #> 6 UPN5           0.0647    0.0577   0.0163     0.162       2.89     0.406 #> # ℹ 1,847 more variables: CD127_Pop1 <dbl>, CD179a_Pop1 <dbl>, #> #   CD179b_Pop1 <dbl>, IgMi_Pop1 <dbl>, IgMs_Pop1 <dbl>, TdT_Pop1 <dbl>, #> #   CD22_Pop1 <dbl>, tIkaros_Pop1 <dbl>, CD79b_Pop1 <dbl>, Ki67_Pop1 <dbl>, #> #   TSLPr_Pop1 <dbl>, RAG1_Pop1 <dbl>, CD123_Pop1 <dbl>, CD45_Pop1 <dbl>, #> #   CD10_Pop1 <dbl>, Pax5_Pop1 <dbl>, CD43_Pop1 <dbl>, CD58_Pop1 <dbl>, #> #   HLADR_Pop1 <dbl>, p4EBP1_FC_Basal_Pop1 <dbl>, pSTAT5_FC_Basal_Pop1 <dbl>, #> #   pPLCg1_2_FC_Basal_Pop1 <dbl>, pAkt_FC_Basal_Pop1 <dbl>, … my_resample |>     rsample::testing() |>     head() #> # A tibble: 6 × 1,854 #>   patient_id Pop_P_Pop1 CD19_Pop1 CD20_Pop1 CD24_Pop1 CD34_Pop1 CD38_Pop1 #>   <chr>           <dbl>     <dbl>     <dbl>     <dbl>     <dbl>     <dbl> #> 1 UPN6          5.62      0.550     0.00374     0.622      2.86     0.342 #> 2 UPN10-Rx      0.00240   0.167     0.203       0.802      2.57     0.822 #> 3 UPN13         0.0634    0.0300    0.0219      0.109      2.34     0.314 #> 4 UPN22-Rx      0.0643    1.68      0.0804      1.56       3.06     0.529 #> 5 UPN58         0.00546   0.00918   0.0168      0.480      2.70     0.112 #> 6 UPN95         0.300     0.389     0.00454     0.697      2.45     0.247 #> # ℹ 1,847 more variables: CD127_Pop1 <dbl>, CD179a_Pop1 <dbl>, #> #   CD179b_Pop1 <dbl>, IgMi_Pop1 <dbl>, IgMs_Pop1 <dbl>, TdT_Pop1 <dbl>, #> #   CD22_Pop1 <dbl>, tIkaros_Pop1 <dbl>, CD79b_Pop1 <dbl>, Ki67_Pop1 <dbl>, #> #   TSLPr_Pop1 <dbl>, RAG1_Pop1 <dbl>, CD123_Pop1 <dbl>, CD45_Pop1 <dbl>, #> #   CD10_Pop1 <dbl>, Pax5_Pop1 <dbl>, CD43_Pop1 <dbl>, CD58_Pop1 <dbl>, #> #   HLADR_Pop1 <dbl>, p4EBP1_FC_Basal_Pop1 <dbl>, pSTAT5_FC_Basal_Pop1 <dbl>, #> #   pPLCg1_2_FC_Basal_Pop1 <dbl>, pAkt_FC_Basal_Pop1 <dbl>, … hyperparams <- tof_create_grid(mixture_values = 1)  class_mod <-     training_split |>     tof_train_model(         predictor_cols = c(contains(\"Pop2\")),         response_col = relapse_status,         model_type = \"two-class\",         hyperparameter_grid = hyperparams,         impute_missing_predictors = TRUE,         remove_zv_predictors = TRUE # often a smart decision     ) print(class_mod) #> A two-class `tof_model` with a mixture parameter (alpha) of 1 and a penalty parameter (lambda) of 1e-10  #> # A tibble: 28 × 2 #>    feature               coefficient #>    <chr>                       <dbl> #>  1 p4EBP1_dP_IL7_Pop2          -3.10 #>  2 pCreb_dP_PVO4_Pop2          -2.66 #>  3 TSLPr_Pop2                   2.07 #>  4 CD43_Pop2                    2.00 #>  5 pSTAT5_FC_PVO4_Pop2         -1.80 #>  6 pS6_dP_IL7_Pop2              1.56 #>  7 pPLCg1_2_dP_PVO4_Pop2        1.44 #>  8 (Intercept)                 -1.43 #>  9 pSTAT5_FC_BCR_Pop2           1.24 #> 10 pErk_dP_IL7_Pop2            -1.23 #> # ℹ 18 more rows training_classifier_metrics <-     class_mod |>     tof_assess_model() training_classifier_metrics$confusion_matrix #> # A tibble: 4 × 3 #>   true_outcome predicted_outcome num_observations #>   <chr>        <chr>                        <int> #> 1 No           No                              37 #> 2 No           Yes                              0 #> 3 Yes          No                               0 #> 4 Yes          Yes                             24 class_mod |>     tof_plot_model() cv_classifier_metrics <-     class_mod |>     tof_assess_model(new_data = \"tuning\")  class_mod |>     tof_plot_model(new_data = \"tuning\")"},{"path":"https://keyes-timothy.github.io/tidytof/articles/modeling.html","id":"building-a-survival-model-using-elastic-net-regularized-cox-regression","dir":"Articles","previous_headings":"","what":"Building a survival model using elastic net-regularized cox regression","title":"Building predictive models","text":"Building ideas , sophisticated way model data simply predict relapse won’t, build time--event model estimates patients’ probabilities relapse function time since diagnosis. approach called “survival modeling” (specifically, case use Cox-proportional hazards modeling) takes account patients adverse events different times course disease (.e. everyone relapses time). build survival model using tidytof, use tof_train_model() verb setting model_type flag “survival”. addition, need provide two outcome columns. first columns (event_col) indicates patient relapsed (.e. experienced event--interest) censored certain amount follow-time. second (time_col) indicates much time took patient relapse censored analysis. survival model trained, can used predict patient’s probability event--interest different times post-diagnosis. However, common way survival models applied practice use patient’s predicted relative risk event--interest divide patients low- high-risk subgroups. tidytof can automatically according optimal split obtained using log-rank test possible split points dataset tof_assess_model(). addition, return predicted survival curve patient time: survival models, tof_plot_model() plots average survival curves low- high-risk groups:","code":"hyperparams <- tof_create_grid(mixture_values = 1)  survival_mod <-     training_split |>     tof_train_model(         predictor_cols = c(contains(\"Pop2\")),         time_col = time_to_event,         event_col = event,         model_type = \"survival\",         hyperparameter_grid = hyperparams,         impute_missing_predictors = TRUE,         remove_zv_predictors = TRUE # often a smart decision     )  print(survival_mod) #> A survival `tof_model` with a mixture parameter (alpha) of 1 and a penalty parameter (lambda) of 3.162e-03  #> # A tibble: 40 × 2 #>    feature               coefficient #>    <chr>                       <dbl> #>  1 pErk_dP_TSLP_Pop2           -7.03 #>  2 pCreb_dP_PVO4_Pop2          -5.47 #>  3 CD19_Pop2                   -3.73 #>  4 CD34_Pop2                    3.63 #>  5 pSTAT5_FC_BCR_Pop2           3.40 #>  6 HLADR_Pop2                  -3.38 #>  7 pPLCg1_2_dP_IL7_Pop2         3.33 #>  8 pPLCg1_2_dP_PVO4_Pop2        3.14 #>  9 pSyk_dP_TSLP_Pop2            2.88 #> 10 CD123_Pop2                   2.77 #> # ℹ 30 more rows survival_metrics <-     survival_mod |>     tof_assess_model()  survival_metrics #> $model_metrics #> # A tibble: 3 × 2 #>   metric                        value #>   <chr>                         <dbl> #> 1 neg_log_partial_likelihood 1.76e+ 1 #> 2 concordance_index          1   e+ 0 #> 3 log_rank_p_value           1.47e-22 #>  #> $survival_curves #> # A tibble: 61 × 6 #>    row_index survival_curve    relative_risk time_to_event event risk_group #>    <chr>     <list>                    <dbl>         <dbl> <dbl> <chr>      #>  1 1         <tibble [54 × 2]>       2.83e+3          1043     1 low        #>  2 2         <tibble [54 × 2]>       2.61e+3          1043     1 low        #>  3 3         <tibble [54 × 2]>       1.58e-8          5406     0 low        #>  4 4         <tibble [54 × 2]>       2.09e-4          4917     0 low        #>  5 5         <tibble [54 × 2]>       9.98e-3          4538     0 low        #>  6 6         <tibble [54 × 2]>       6.62e-1          4490     0 low        #>  7 7         <tibble [54 × 2]>       4.09e+9           136     1 high       #>  8 8         <tibble [54 × 2]>       2.57e+8           364     1 high       #>  9 9         <tibble [54 × 2]>       1.27e+9           237     1 high       #> 10 10        <tibble [54 × 2]>       2.31e+4           886     1 low        #> # ℹ 51 more rows survival_mod |>     tof_plot_model() cv_survival_metrics <-     survival_mod |>     tof_assess_model(new_data = \"tuning\") survival_mod |>     tof_plot_model(new_data = \"tuning\")"},{"path":"https://keyes-timothy.github.io/tidytof/articles/modeling.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Building predictive models","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] stringr_1.5.1  tidytof_0.99.1 #>  #> loaded via a namespace (and not attached): #>   [1] gridExtra_2.3       rlang_1.1.3         magrittr_2.0.3      #>   [4] furrr_0.3.1         matrixStats_1.2.0   compiler_4.3.3      #>   [7] systemfonts_1.0.6   vctrs_0.6.5         crayon_1.5.2        #>  [10] pkgconfig_2.0.3     shape_1.4.6.1       fastmap_1.1.1       #>  [13] ellipsis_0.3.2      labeling_0.4.3      ggraph_2.2.1        #>  [16] utf8_1.2.4          rmarkdown_2.26      prodlim_2023.08.28  #>  [19] tzdb_0.4.0          ragg_1.3.0          bit_4.0.5           #>  [22] purrr_1.0.2         xfun_0.42           glmnet_4.1-8        #>  [25] cachem_1.0.8        jsonlite_1.8.8      recipes_1.0.10      #>  [28] highr_0.10          tweenr_2.0.3        parallel_4.3.3      #>  [31] R6_2.5.1            rsample_1.2.0       bslib_0.6.2         #>  [34] stringi_1.8.3       parallelly_1.37.1   rpart_4.1.23        #>  [37] lubridate_1.9.3     jquerylib_0.1.4     Rcpp_1.0.12         #>  [40] iterators_1.0.14    knitr_1.45          future.apply_1.11.1 #>  [43] readr_2.1.5         flowCore_2.14.2     Matrix_1.6-5        #>  [46] splines_4.3.3       nnet_7.3-19         igraph_2.0.3        #>  [49] timechange_0.3.0    tidyselect_1.2.1    yaml_2.3.8          #>  [52] viridis_0.6.5       timeDate_4032.109   doParallel_1.0.17   #>  [55] codetools_0.2-19    curl_5.2.1          listenv_0.9.1       #>  [58] lattice_0.22-5      tibble_3.2.1        Biobase_2.62.0      #>  [61] withr_3.0.0         evaluate_0.23       future_1.33.1       #>  [64] desc_1.4.3          survival_3.5-8      polyclip_1.10-6     #>  [67] pillar_1.9.0        foreach_1.5.2       stats4_4.3.3        #>  [70] generics_0.1.3      vroom_1.6.5         RcppHNSW_0.6.0      #>  [73] S4Vectors_0.40.2    hms_1.1.3           ggplot2_3.5.0       #>  [76] munsell_0.5.0       scales_1.3.0        globals_0.16.3      #>  [79] class_7.3-22        glue_1.7.0          tools_4.3.3         #>  [82] data.table_1.15.2   gower_1.0.1         fs_1.6.3            #>  [85] graphlayouts_1.1.1  tidygraph_1.3.1     grid_4.3.3          #>  [88] yardstick_1.3.1     tidyr_1.3.1         RProtoBufLib_2.14.1 #>  [91] ipred_0.9-14        colorspace_2.1-0    ggforce_0.4.2       #>  [94] cli_3.6.2           textshaping_0.3.7   fansi_1.0.6         #>  [97] cytolib_2.14.1      viridisLite_0.4.2   lava_1.8.0          #> [100] dplyr_1.1.4         gtable_0.3.4        sass_0.4.9          #> [103] digest_0.6.35       BiocGenerics_0.48.1 ggrepel_0.9.5       #> [106] farver_2.1.1        memoise_2.0.1       htmltools_0.5.7     #> [109] pkgdown_2.0.7       lifecycle_1.0.4     hardhat_1.3.1       #> [112] bit64_4.0.5         MASS_7.3-60.0.1"},{"path":"https://keyes-timothy.github.io/tidytof/articles/preprocessing.html","id":"preprocessing-with-tof_preprocess","dir":"Articles","previous_headings":"","what":"Preprocessing with tof_preprocess","title":"Preprocessing","text":"Generally speaking, raw ion counts measured analyte mass cytometer (content raw FCS files obtained directly mass cytometer) need transformed CyTOF data analysis. Common preprocessing steps may include variance-stabilizing transformations - hyperbolic arcsine (arcsinh) transformation log transformation - scaling/centering, /denoising. perform standard preprocessing tasks tidytof, use tof_preprocess. tof_preprocess’s default behavior apply arcsinh transformation (cofactor 5) numeric column input tof_tibble well remove gaussian noise Fluidigm software adds ion count (noise added visualization purposes, analyses, removing recommended). example, can preprocess tidytof’s built-phenograph_data tof_tibble see first measurements change . alter tof_preprocess’s default behavior, change channel_cols argument specify columns tof_tibble transformed. Alter transform_fun argument specify vector-valued function used transform channel_cols. example, suppose want center scale numeric columns instead arcsinh-transforming : keep gaussian noise added Fluidigm software (working dataset noise), set undo_noise argument FALSE.","code":"data(phenograph_data)  # before preprocessing phenograph_data %>%     select(cd45, cd34, cd38) %>%     head() #> # A tibble: 6 × 3 #>    cd45   cd34  cd38 #>   <dbl>  <dbl> <dbl> #> 1  131.  3.23   1.51 #> 2  230. -0.582 11.4  #> 3  293.  5.20   1.84 #> 4  431.  0.363 13.3  #> # ℹ 2 more rows phenograph_data %>%     # perform preprocessing     tof_preprocess() %>%     # inspect new values     select(cd45, cd34, cd38) %>%     head() #> # A tibble: 6 × 3 #>    cd45    cd34  cd38 #>   <dbl>   <dbl> <dbl> #> 1  3.96  0.608  0.298 #> 2  4.52 -0.116  1.56  #> 3  4.76  0.909  0.360 #> 4  5.15  0.0725 1.70  #> # ℹ 2 more rows phenograph_data %>%     # preprocess     tof_preprocess(transform_fun = scale) %>%     # inspect new values     select(cd45, cd34, cd38) %>%     head() #> # A tibble: 6 × 3 #>   cd45[,1] cd34[,1] cd38[,1] #>      <dbl>    <dbl>    <dbl> #> 1   -1.40     1.01   -0.437  #> 2   -1.15    -0.911   0.0316 #> 3   -0.999    2.00   -0.422  #> 4   -0.661   -0.436   0.120  #> # ℹ 2 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/preprocessing.html","id":"postprocessing-with-tof_postprocess","dir":"Articles","previous_headings":"","what":"Postprocessing with tof_postprocess","title":"Preprocessing","text":"final note, note built-function tof_postprocess works nearly identically tof_preprocess, provides different default behavior (namely, applying reverse arcsinh transformation cofactor 5 numeric columns. See ?tof_postprocess details).","code":"print(phenograph_data) %>%     select(cd45, cd34, cd38) %>%     head() #> # A tibble: 3,000 × 25 #>   sample_name  phenograph_cluster    cd19 cd11b   cd34  cd45  cd123   cd33  cd47 #>   <chr>        <chr>                <dbl> <dbl>  <dbl> <dbl>  <dbl>  <dbl> <dbl> #> 1 H1_PhenoGra… cluster1           -0.168  29.0   3.23   131. -0.609  1.21   13.0 #> 2 H1_PhenoGra… cluster1            1.65    4.83 -0.582  230.  2.53  -0.507  12.9 #> 3 H1_PhenoGra… cluster1            2.79   36.1   5.20   293. -0.265  3.67   27.1 #> 4 H1_PhenoGra… cluster1            0.0816 48.8   0.363  431.  2.04   9.40   41.0 #> # ℹ 2,996 more rows #> # ℹ 16 more variables: cd7 <dbl>, cd44 <dbl>, cd38 <dbl>, cd3 <dbl>, #> #   cd117 <dbl>, cd64 <dbl>, cd41 <dbl>, pstat3 <dbl>, pstat5 <dbl>, #> #   pampk <dbl>, p4ebp1 <dbl>, ps6 <dbl>, pcreb <dbl>, `pzap70-syk` <dbl>, #> #   prb <dbl>, `perk1-2` <dbl> #> # A tibble: 6 × 3 #>    cd45   cd34  cd38 #>   <dbl>  <dbl> <dbl> #> 1  131.  3.23   1.51 #> 2  230. -0.582 11.4  #> 3  293.  5.20   1.84 #> 4  431.  0.363 13.3  #> # ℹ 2 more rows  # after preprocessing and post-processing, the data are the same # except that the re-added noise component is different for each value phenograph_data %>%     tof_preprocess() %>%     tof_postprocess(redo_noise = TRUE) %>%     select(cd45, cd34, cd38) %>%     head() #> # A tibble: 6 × 3 #>    cd45    cd34  cd38 #>   <dbl>   <dbl> <dbl> #> 1  131.  2.28    1.10 #> 2  230. -0.644  10.4  #> 3  293.  4.82    1.21 #> 4  431.  0.0303 12.8  #> # ℹ 2 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/preprocessing.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Preprocessing","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] dplyr_1.1.4    tidytof_0.99.1 #>  #> loaded via a namespace (and not attached): #>   [1] tidyselect_1.2.1    viridisLite_0.4.2   timeDate_4032.109   #>   [4] farver_2.1.1        viridis_0.6.5       ggraph_2.2.1        #>   [7] fastmap_1.1.1       tweenr_2.0.3        rpart_4.1.23        #>  [10] digest_0.6.35       timechange_0.3.0    lifecycle_1.0.4     #>  [13] yardstick_1.3.1     survival_3.5-8      magrittr_2.0.3      #>  [16] compiler_4.3.3      rlang_1.1.3         sass_0.4.9          #>  [19] tools_4.3.3         igraph_2.0.3        utf8_1.2.4          #>  [22] yaml_2.3.8          data.table_1.15.2   knitr_1.45          #>  [25] graphlayouts_1.1.1  withr_3.0.0         purrr_1.0.2         #>  [28] RProtoBufLib_2.14.1 BiocGenerics_0.48.1 desc_1.4.3          #>  [31] nnet_7.3-19         grid_4.3.3          polyclip_1.10-6     #>  [34] stats4_4.3.3        fansi_1.0.6         RcppHNSW_0.6.0      #>  [37] future_1.33.1       colorspace_2.1-0    ggplot2_3.5.0       #>  [40] globals_0.16.3      scales_1.3.0        iterators_1.0.14    #>  [43] MASS_7.3-60.0.1     cli_3.6.2           rmarkdown_2.26      #>  [46] ragg_1.3.0          generics_0.1.3      future.apply_1.11.1 #>  [49] tzdb_0.4.0          cachem_1.0.8        flowCore_2.14.2     #>  [52] ggforce_0.4.2       stringr_1.5.1       splines_4.3.3       #>  [55] parallel_4.3.3      matrixStats_1.2.0   vctrs_0.6.5         #>  [58] hardhat_1.3.1       glmnet_4.1-8        Matrix_1.6-5        #>  [61] jsonlite_1.8.8      cytolib_2.14.1      hms_1.1.3           #>  [64] S4Vectors_0.40.2    ggrepel_0.9.5       listenv_0.9.1       #>  [67] systemfonts_1.0.6   foreach_1.5.2       gower_1.0.1         #>  [70] tidyr_1.3.1         jquerylib_0.1.4     recipes_1.0.10      #>  [73] parallelly_1.37.1   glue_1.7.0          pkgdown_2.0.7       #>  [76] codetools_0.2-19    stringi_1.8.3       lubridate_1.9.3     #>  [79] gtable_0.3.4        shape_1.4.6.1       munsell_0.5.0       #>  [82] tibble_3.2.1        pillar_1.9.0        htmltools_0.5.7     #>  [85] ipred_0.9-14        lava_1.8.0          R6_2.5.1            #>  [88] textshaping_0.3.7   doParallel_1.0.17   tidygraph_1.3.1     #>  [91] evaluate_0.23       Biobase_2.62.0      lattice_0.22-5      #>  [94] readr_2.1.5         memoise_2.0.1       bslib_0.6.2         #>  [97] class_7.3-22        Rcpp_1.0.12         prodlim_2023.08.28  #> [100] gridExtra_2.3       xfun_0.42           fs_1.6.3            #> [103] pkgconfig_2.0.3"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"accessing-the-data-for-this-vignette","dir":"Articles","previous_headings":"","what":"Accessing the data for this vignette","title":"Quality control","text":"demonstrate use {tidytof}’s quality control verbs, use combination simulated real data vignette. Simulated data generated --fly sections , walk download real dataset section. want download dataset originally collected development PhenoGraph algorithm. data built HDCytoData package, available Bioconductor can downloaded following command: load PhenoGraph data current R session, can call function HDCytoData, provide us format {flowCore} package (called “flowSet”). convert tidy tibble, can use tidytof built-method converting flowCore objects tof_tbl’s. also add lines dplyr code clean column names perform standard arcsinh transformation. Thus, can see levine tof_tbl 265627 cells (one row) 40 pieces information cell (one column).","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE)) {     install.packages(\"BiocManager\") }  BiocManager::install(\"HDCytoData\") levine <-     HDCytoData::Levine_32dim_flowSet() |>     as_tof_tbl() |>     # a bit of data cleaning     dplyr::mutate(population_id = as.character(population_id)) |>     dplyr::rename_with(         .fn = \\(x) stringr::str_to_lower(stringr::str_remove(x, \"\\\\|.+\"))     ) |>     dplyr::mutate(dplyr::across(c(file_number, population_id), as.character)) |>     # arcsinh transformation     tof_preprocess(         channel_cols =             c(-time, -cell_length, -event_number, -file_number, -population_id)     )"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"detect-low-expression-i-e--potentially-failed-channels-with-tof_assess_channels","dir":"Articles","previous_headings":"","what":"Detect low-expression (i.e. potentially failed) channels with tof_assess_channels()","title":"Quality control","text":"data collection, might wonder channels include downstream analyses. particular, might want exclude channels positive values, situation indicates antibody may failed, signal particular channel may weak detected. , can use tof_assess_channels(), verb calculates many cells negative (.e. use-specified threshold, negative_threshold) channel flags channels user-specified proportion negative cells (negative_proportion_flag). levine dataset, look markers 97.5% cells threshold 5 ion counts: can see two channels 97.5% cells dataset 5 counts. given experiment, might expected (.e. marker expressed rare cell population) unexpected (marker expressed many cells). case, can visualize marker negative cells manually inspect (recommend flagged channels).  case, looks like small population cells slightly positive cd14, simply measurement noise/nonspecific binding antibody. user whether include cd14 downstream analyses.","code":"# convert 5 counts to asinh value with a cofactor of 5 threshold <- asinh(5 / 5)  levine |>     tof_assess_channels(         negative_threshold = threshold,         negative_proportion_flag = 0.975     ) #> # A tibble: 38 × 3 #>    channel negative_proportion flagged_channel #>    <chr>                 <dbl> <lgl>           #>  1 cd14                  0.988 TRUE            #>  2 cd133                 0.975 TRUE            #>  3 cd117                 0.969 FALSE           #>  4 cd16                  0.967 FALSE           #>  5 flt3                  0.960 FALSE           #>  6 cd15                  0.940 FALSE           #>  7 cd41                  0.923 FALSE           #>  8 cd34                  0.909 FALSE           #>  9 cd61                  0.890 FALSE           #> 10 cd33                  0.885 FALSE           #> # ℹ 28 more rows levine |>     tof_plot_cells_density(marker_col = cd14)"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"identify-time-periods-of-abnormally-low-or-high-flow-rate-during-data-acquisition-using-tof_assess_flow_rate","dir":"Articles","previous_headings":"","what":"Identify time periods of abnormally low or high flow rate during data acquisition using tof_assess_flow_rate()","title":"Quality control","text":"Large changes flow rate cytometer can impact quality signal acquired data collection: example, abnormally low flow rates can caused partial occlusions cytometer’s flow cell, leading debris air infiltration cytometer’s microfluidics system. Thus, can useful perform quality control step explicitly interrogates flow rate course cytometry experiment order flag cells collected unusually high low rates acquisition. , {tidytof} provides tof_assess_flow_rate(), function implements simplified version FlowAI’s flow rate analysis. short, relative flow rates timestep cytometry experiment calculated, outlier timepoints particularly high low flow rates (.e. beyond extreme values t-distribution across timesteps) flagged. size timesteps user-defined parameter calculation, significance level (0 1) within t-distribution determines anomalous time step’s flow rate must cells flagged. can apply tof_assess_flow_rate() levine dataset , using  result , can see last several timesteps flagged potentially low flow rates. decision include exclude cells analyses left user. group_cols argument can also used analyze flow rates samples, patients, mass cytometry barcode plates, etc. separately.","code":"levine |>     tof_assess_flow_rate(         time_col = time,         num_timesteps = 200,         # flag timepoints in which flow rates are high or low at a signicance level         # of p = 0.01         alpha_threshold = 0.01,         # plot the number of cells in each timestep, and whether or not the         # rates were flagged as too high or too low         visualize = TRUE     ) levine |>     tof_assess_flow_rate(         time_col = time,         # analyze two files in the levine dataset separately         group_cols = file_number,         alpha_threshold = 0.01,         visualize = TRUE     )"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"flag-cells-that-are-unusually-far-from-the-centroid-of-a-cluster-to-which-they-have-been-assigned-with-tof_assess_clusters_distance","dir":"Articles","previous_headings":"","what":"Flag cells that are unusually far from the centroid of a cluster to which they have been assigned with tof_assess_clusters_distance()","title":"Quality control","text":"using favorite clustering algorithm define cell subpopulations (example, using tof_cluster()), may wonder well clustering procedure worked. example, may clusters contain outliers - , cells less similar cells cluster typical. detect cells, tidytof provides tof_assess_clusters_distance() verb, computes Mahalanobis distance cell centroid cluster assigned. , computes z-score mahalanobis distances cells cluster flags cells z-score user-specified threshold. Altogether, procedure flags cells unusually far cluster centroid - .e. candidate outliers. demonstrate use tof_assess_clusters_distance() simulated data. simulate data 3 clusters, large population cells “truly” belong cluster well small population outliers cells erroneously assigned cluster. following plots visualize simulated data described :   Using dataset, see tof_assess_clusters_distance() can successfully flag majority outlier cells cluster.","code":"set.seed(2020L)  # simulate large population of cells that truly belong in their assigned cluster sim_data_base <-     dplyr::tibble(         cd45 = c(rnorm(n = 600), rnorm(n = 500, mean = -4)),         cd38 =             c(                 rnorm(n = 100, sd = 0.5),                 rnorm(n = 500, mean = -3),                 rnorm(n = 500, mean = 8)             ),         cd34 =             c(                 rnorm(n = 100, sd = 0.2, mean = -10),                 rnorm(n = 500, mean = 4),                 rnorm(n = 500, mean = 60)             ),         cd19 = c(rnorm(n = 100, sd = 0.3, mean = 10), rnorm(n = 1000)),         cluster_id = c(rep(\"a\", 100), rep(\"b\", 500), rep(\"c\", 500)),         dataset = \"non-outlier\"     )  # simulate outlier cells that do not belong in their assigned cluster sim_data_outlier <-     dplyr::tibble(         cd45 = c(rnorm(n = 10), rnorm(50, mean = 3), rnorm(n = 50, mean = -12)),         cd38 =             c(                 rnorm(n = 10, sd = 0.5),                 rnorm(n = 50, mean = -10),                 rnorm(n = 50, mean = 10)             ),         cd34 =             c(                 rnorm(n = 10, sd = 0.2, mean = -15),                 rnorm(n = 50, mean = 15),                 rnorm(n = 50, mean = 70)             ),         cd19 = c(rnorm(n = 10, sd = 0.3, mean = 19), rnorm(n = 100)),         cluster_id = c(rep(\"a\", 10), rep(\"b\", 50), rep(\"c\", 50)),         dataset = \"outlier\"     )  # bind simulated data together sim_data <- bind_rows(sim_data_base, sim_data_outlier) sim_data |>     tof_plot_cells_embedding(color_col = cluster_id) sim_data |>     tof_plot_cells_embedding(color_col = dataset) sim_data |>     tof_assess_clusters_distance(         cluster_col = cluster_id,         # flag cells with a mahalanobis distance z-score over 3         z_threshold = 3,         augment = TRUE     ) |>     # visualize result as above     dplyr::select(-dplyr::starts_with(\".mahala\"), -z_score) |>     dplyr::mutate(flagged_cell = as.character(flagged_cell)) |>     tof_plot_cells_embedding(color_col = flagged_cell) +     scale_fill_manual(values = tof_generate_palette(num_colors = 2))"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"flag-cells-whose-cluster-assignment-is-ambiguous-with-tof_assess_clusters_entropy","dir":"Articles","previous_headings":"","what":"Flag cells whose cluster assignment is ambiguous with tof_assess_clusters_entropy()","title":"Quality control","text":"may also wish evaluate clustering result based cell’s absolute distance centroid cluster assigned, based relative distances cell cluster centroids. , order confident cell’s cluster assignment, ideally want cell close centroid cluster assigned, relatively distant clusters. contrasts scenario cell might similarly close centroids 2-3 clusters, case might think cell “ambiguous” phenotype, phenotype intermediate clusters clustering algorithm identified. flag “ambiguous” clusters, {tidytof} provides tof_assess_clusters_entropy() verb. tof_assess_clusters_entropy() computes entropy L1-scaled mahalanobis distance vector (.e. mahalanobis distance cell centroids clusters dataset) - entropy low (close 0) confident cell’s cluster assignment, high (near 1) equally close multiple cluster centroids. demonstrate use function simulated data levine dataset .","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"simulated-data","dir":"Articles","previous_headings":"Flag cells whose cluster assignment is ambiguous with tof_assess_clusters_entropy()","what":"Simulated data","title":"Quality control","text":"First, simulate fake dataset 3000 cells 4 channels. simulated dataset, two well-defined clusters (“b” “c”) dispersed cluster intermediate others (“”). data visualized :  dataset, can imagine first analysis approach might involve clustering cells 2 distinct clusters. data simulated, already know number clusters small - can calculating entropy cells resulting clusters help us realize without prior knowledge? check, can use tof_assess_clusters_entropy():   plots , can see cells middle 2 k-means clusters (correspond well ground-truth clusters “b” “c” ) high entropy values, whereas cells closer one centroids low entropy values. can also see tof_assess_clusters_entropy() flags cells potentially anomalous (.e. intermediate phenotype two clusters identified) entropy values 75th percentile (user-specified parameter) entropy values dataset. user wish recluster dataset, filter anomalous cells, processing steps.  can see , expected, intermediate cluster (“”) higher entropies either distinct clusters (“b” “c”).","code":"sim_data <-     dplyr::tibble(         cd45 =             c(                 rnorm(n = 1000, sd = 2),                 rnorm(n = 1000, mean = 2),                 rnorm(n = 1000, mean = -2)             ),         cd38 =             c(                 rnorm(n = 1000, sd = 2),                 rnorm(n = 1000, mean = 2),                 rnorm(n = 1000, mean = -2)             ),         cd34 =             c(                 rnorm(n = 1000, sd = 2),                 rnorm(n = 1000, mean = 2),                 rnorm(n = 1000, mean = -2)             ),         cd19 =             c(                 rnorm(n = 1000, sd = 2),                 rnorm(n = 1000, mean = 2),                 rnorm(n = 1000, mean = -2)             ),         cluster_id = c(rep(\"a\", 1000), rep(\"b\", 1000), rep(\"c\", 1000))     ) sim_data |>     tof_reduce_dimensions(method = \"pca\") |>     tof_plot_cells_embedding(         embedding_cols = c(.pc1, .pc2),         color_col = cluster_id     ) set.seed(17L)  entropy_result <-     sim_data |>     # cluster into 2 clusters     tof_cluster(         num_clusters = 2,         method = \"kmeans\"     ) |>     # calculate the entropy of all cells     tof_assess_clusters_entropy(         cluster_col = .kmeans_cluster,         marker_cols = starts_with(\"cd\"),         entropy_quantile = 0.8,         augment = TRUE     )  # plot the clusters in PCA space entropy_result |>     select(-starts_with(\".mahala\"), -flagged_cell) |>     tof_reduce_dimensions(pca_cols = starts_with(\"cd\"), method = \"pca\") |>     tof_plot_cells_embedding(embedding_cols = c(.pc1, .pc2), color_col = .kmeans_cluster) # show the entropy values for each cell entropy_result |>     select(-starts_with(\".mahala\"), -flagged_cell) |>     tof_reduce_dimensions(pca_cols = starts_with(\"cd\"), method = \"pca\") |>     tof_plot_cells_embedding(embedding_cols = c(.pc1, .pc2), color_col = entropy) +     scale_fill_viridis_c() entropy_result |>     select(-starts_with(\".mahala\")) |>     tof_reduce_dimensions(pca_cols = starts_with(\"cd\"), method = \"pca\") |>     tof_plot_cells_embedding(embedding_cols = c(.pc1, .pc2), color_col = flagged_cell) +     scale_fill_viridis_d() entropy_result |>     ggplot(aes(x = entropy, fill = cluster_id)) +     geom_density(alpha = 0.4) +     theme_bw()"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"real-data","dir":"Articles","previous_headings":"Flag cells whose cluster assignment is ambiguous with tof_assess_clusters_entropy()","what":"Real data","title":"Quality control","text":"can also apply tof_assess_clusters_entropy() dataset derived levine data. Suppose take 5 largest clusters levine save result small_levine tof_tbl. , can perturb dataset replacing labels cells smallest cluster (cluster 9) random labels. effectively creates population cells dataset whose “true” cluster label absent. scenario, expect cells perturbed cluster relatively distant remaining clusters, whereas unperturbed cells relatively close cluster centroid (correct centroid). Thus, can test tof_assess_clusters_entropy() successfully flags cells perturbed cluster relative others: plot , can see cells cluster 9 larger entropy values cells clusters, expected.  Similarly, can see majority cells 9 successfully flagged tof_assess_clusters_entropy() using entropy quantile threshold 0.9. Conversely, cells cluster (cluster 15) flagged.","code":"clusters_to_keep <-     levine |>     dplyr::count(population_id) |>     dplyr::slice_max(order_by = n, n = 5L) |>     dplyr::arrange(n) |>     pull(population_id)  smallest_cluster <- clusters_to_keep[1] largest_cluster <- clusters_to_keep[[length(clusters_to_keep)]]  small_levine <-     levine |>     dplyr::filter(population_id %in% clusters_to_keep) # perform the perturbation small_levine <-     small_levine |>     dplyr::mutate(         new_population_id =             dplyr::if_else(                 population_id %in% smallest_cluster,                 sample(                     clusters_to_keep[-which(clusters_to_keep %in% smallest_cluster)],                     size = nrow(small_levine),                     replace = TRUE                 ),                 population_id             )     )  # perform the entropy assessment entropy_levine <-     small_levine |>     tof_assess_clusters_entropy(         cluster_col = new_population_id,         marker_cols = starts_with(\"cd\"),         augment = TRUE     ) entropy_levine |>     mutate(population_id = fct_reorder(population_id, entropy)) |>     tof_plot_cells_density(         marker_col = entropy,         group_col = population_id,         use_ggridges = TRUE,         scale = 0.1     ) +     ggplot2::theme(legend.position = \"none\") +     ggplot2::labs(x = \"Entropy\", y = \"Cluster ID\") entropy_levine |>     mutate(flagged_cell = entropy > quantile(entropy, prob = 0.9)) |>     dplyr::count(population_id, flagged_cell) |>     group_by(population_id) |>     mutate(prop = n / sum(n)) |>     ungroup() |>     dplyr::filter(flagged_cell) #> # A tibble: 2 × 4 #>   population_id flagged_cell     n   prop #>   <chr>         <lgl>        <int>  <dbl> #> 1 15            TRUE         12888 0.0798 #> 2 9             TRUE         11666 0.706"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Quality control","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats4    stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #>  [1] HDCytoData_1.22.1           flowCore_2.14.2             #>  [3] SummarizedExperiment_1.32.0 Biobase_2.62.0              #>  [5] GenomicRanges_1.54.1        GenomeInfoDb_1.38.8         #>  [7] IRanges_2.36.0              S4Vectors_0.40.2            #>  [9] MatrixGenerics_1.14.0       matrixStats_1.2.0           #> [11] ExperimentHub_2.10.0        AnnotationHub_3.10.0        #> [13] BiocFileCache_2.10.1        dbplyr_2.5.0                #> [15] BiocGenerics_0.48.1         forcats_1.0.0               #> [17] ggplot2_3.5.0               dplyr_1.1.4                 #> [19] tidytof_0.99.1              #>  #> loaded via a namespace (and not attached): #>   [1] jsonlite_1.8.8                shape_1.4.6.1                 #>   [3] magrittr_2.0.3                farver_2.1.1                  #>   [5] rmarkdown_2.26                fs_1.6.3                      #>   [7] zlibbioc_1.48.2               ragg_1.3.0                    #>   [9] vctrs_0.6.5                   memoise_2.0.1                 #>  [11] RCurl_1.98-1.14               htmltools_0.5.7               #>  [13] S4Arrays_1.2.1                curl_5.2.1                    #>  [15] SparseArray_1.2.4             sass_0.4.9                    #>  [17] parallelly_1.37.1             bslib_0.6.2                   #>  [19] desc_1.4.3                    lubridate_1.9.3               #>  [21] cachem_1.0.8                  igraph_2.0.3                  #>  [23] mime_0.12                     lifecycle_1.0.4               #>  [25] iterators_1.0.14              pkgconfig_2.0.3               #>  [27] Matrix_1.6-5                  R6_2.5.1                      #>  [29] fastmap_1.1.1                 shiny_1.8.0                   #>  [31] GenomeInfoDbData_1.2.11       future_1.33.1                 #>  [33] digest_0.6.35                 colorspace_2.1-0              #>  [35] AnnotationDbi_1.64.1          textshaping_0.3.7             #>  [37] RSQLite_2.3.5                 labeling_0.4.3                #>  [39] filelock_1.0.3                cytolib_2.14.1                #>  [41] fansi_1.0.6                   yardstick_1.3.1               #>  [43] timechange_0.3.0              httr_1.4.7                    #>  [45] polyclip_1.10-6               abind_1.4-5                   #>  [47] compiler_4.3.3                bit64_4.0.5                   #>  [49] withr_3.0.0                   doParallel_1.0.17             #>  [51] viridis_0.6.5                 DBI_1.2.2                     #>  [53] highr_0.10                    ggforce_0.4.2                 #>  [55] MASS_7.3-60.0.1               lava_1.8.0                    #>  [57] rappdirs_0.3.3                DelayedArray_0.28.0           #>  [59] tools_4.3.3                   interactiveDisplayBase_1.40.0 #>  [61] httpuv_1.6.14                 future.apply_1.11.1           #>  [63] nnet_7.3-19                   glue_1.7.0                    #>  [65] promises_1.2.1                grid_4.3.3                    #>  [67] generics_0.1.3                recipes_1.0.10                #>  [69] gtable_0.3.4                  tzdb_0.4.0                    #>  [71] class_7.3-22                  tidyr_1.3.1                   #>  [73] data.table_1.15.2             hms_1.1.3                     #>  [75] tidygraph_1.3.1               utf8_1.2.4                    #>  [77] XVector_0.42.0                ggrepel_0.9.5                 #>  [79] BiocVersion_3.18.1            foreach_1.5.2                 #>  [81] pillar_1.9.0                  stringr_1.5.1                 #>  [83] RcppHNSW_0.6.0                later_1.3.2                   #>  [85] splines_4.3.3                 tweenr_2.0.3                  #>  [87] lattice_0.22-5                survival_3.5-8                #>  [89] bit_4.0.5                     RProtoBufLib_2.14.1           #>  [91] tidyselect_1.2.1              Biostrings_2.70.3             #>  [93] knitr_1.45                    gridExtra_2.3                 #>  [95] xfun_0.42                     graphlayouts_1.1.1            #>  [97] hardhat_1.3.1                 timeDate_4032.109             #>  [99] stringi_1.8.3                 yaml_2.3.8                    #> [101] evaluate_0.23                 codetools_0.2-19              #> [103] ggraph_2.2.1                  tibble_3.2.1                  #> [105] BiocManager_1.30.22           cli_3.6.2                     #> [107] rpart_4.1.23                  xtable_1.8-4                  #> [109] systemfonts_1.0.6             munsell_0.5.0                 #> [111] jquerylib_0.1.4               Rcpp_1.0.12                   #> [113] globals_0.16.3                png_0.1-8                     #> [115] parallel_4.3.3                ellipsis_0.3.2                #> [117] pkgdown_2.0.7                 gower_1.0.1                   #> [119] readr_2.1.5                   blob_1.2.4                    #> [121] bitops_1.0-7                  listenv_0.9.1                 #> [123] glmnet_4.1-8                  viridisLite_0.4.2             #> [125] ipred_0.9-14                  ggridges_0.5.6                #> [127] scales_1.3.0                  prodlim_2023.08.28            #> [129] purrr_1.0.2                   crayon_1.5.2                  #> [131] rlang_1.1.3                   KEGGREST_1.42.0"},{"path":"https://keyes-timothy.github.io/tidytof/articles/reading-and-writing-data.html","id":"accessing-the-data-for-this-vignette","dir":"Articles","previous_headings":"","what":"Accessing the data for this vignette","title":"Reading and writing data","text":"tidytof comes bundled several example mass cytometry datasets. access raw FCS CSV files containing data, use tidytof_example_data function. called arguments, tidytof_example_data return character vector naming datasets contained tidytof: details datasets contained directories isn’t particularly important, basic information follows: aml - one FCS file containing myeloid cells healthy bone marrow one FCS file containing myeloid cells AML patient bone marrow ddpr - two FCS files containing B-cell lineage cells paper mix - two FCS files different CyTOF antigen panels (one FCS file “aml” directory one “phenograph” directory) mix2 - three files different CyTOF antigen panels different file extensions (one FCS file “aml” directory two CSV files “phenograph_csv directory) phenograph - three FCS files containing AML cells paper phenograph_csv - cells “phenograph” directory, stored CSV files scaffold - three FCS files paper statistical_scaffold - three FCS files paper surgery - three FCS files paper obtain file path directory containing dataset, call tidytof_example_data one dataset names argument. example, obtain directory phenograph data, use following command:","code":"tidytof_example_data() #> [1] \"aml\"               \"ddpr\"              \"ddpr_metadata.csv\" #> [4] \"mix\"               \"mix2\"              \"phenograph\"        #> [7] \"phenograph_csv\"    \"surgery\" tidytof_example_data(\"phenograph\") #> [1] \"/home/runner/work/_temp/Library/tidytof/extdata/phenograph\""},{"path":"https://keyes-timothy.github.io/tidytof/articles/reading-and-writing-data.html","id":"reading-data-with-tof_read_data","dir":"Articles","previous_headings":"","what":"Reading Data with tof_read_data","title":"Reading and writing data","text":"Using one directories (directory containing CyTOF data local machine), can use tof_read_data read CyTOF data raw files. Acceptable formats include FCS files CSV files. Importantly, tof_read_data smart enough read single FCS/CSV files multiple FCS/CSV files depending whether first argument (path) leads single file directory files. , can use tof_read_data read FCS files “phenograph” example dataset bundled tidytof store phenograph variable. Regardless input data file type, tidytof reads data extended tibble class called tof_tbl (pronounced “tof tibble”). tof tibbles S3 class identical tbl_df, one additional attribute (“panel”). tidytof stores additional attribute tof_tbls , addition analyzing CyTOF data individual experiments, CyTOF users often want compare panels experiments find common markers compare metals associated particular markers across panels. retrieve panel information tof_tbl, use tof_get_panel: additional notes tof_tbls: tof_tbls contains one cell per row one CyTOF channel per column (provide data “tidy” format). tof_read_data adds additional column output tof_tbl encoding name file cell read (“file_name” column). tof_tbls inherit tbl_df class, methods available tibbles also available tof_tbls.","code":"phenograph <-     tidytof_example_data(\"phenograph\") %>%     tof_read_data()  phenograph %>%     class() #> [1] \"tof_tbl\"    \"tbl_df\"     \"tbl\"        \"data.frame\" phenograph %>%     tof_get_panel() #> # A tibble: 44 × 2 #>   metals      antigens    #>   <chr>       <chr>       #> 1 Time        Time        #> 2 Cell_length Cell_length #> 3 Ir191       DNA1        #> 4 Ir193       DNA2        #> # ℹ 40 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/reading-and-writing-data.html","id":"using-tibble-methods-with-tidytof-tibbles","dir":"Articles","previous_headings":"","what":"Using tibble methods with {tidytof} tibbles","title":"Reading and writing data","text":"extension tbl_df class, tof_tbls get access dplyr tidyr free. can useful performing variety common operations. example, phenograph object two columns - PhenoGraph Condition - encode categorical variables numeric codes. might interested converting types columns strings make sure don’t accidentally perform quantitative operations later. Thus, dplyr’s useful mutate method can applied phenograph convert two columns character vectors. note tof_tbl class preserved even transformations. Importantly, tof_read_data uses opinionated heuristic mine different keyword slots input FCS file(s) guess metals antigens used data acquisition. Thus, CSV files read using tof_read_data, recommended use panel_info argument provide panel manually (CSV files, unlike FCS files, provide built-metadata columns contain).","code":"phenograph <-     phenograph %>%     # mutate the input tof_tbl     mutate(         PhenoGraph = as.character(PhenoGraph),         Condition = as.character(Condition)     )  phenograph %>%     # use dplyr's select method to show     # that the columns have been changed     select(where(is.character)) #> # A tibble: 300 × 3 #>   file_name                  PhenoGraph Condition #>   <chr>                      <chr>      <chr>     #> 1 H1_PhenoGraph_cluster1.fcs 7          7         #> 2 H1_PhenoGraph_cluster1.fcs 6          6         #> 3 H1_PhenoGraph_cluster1.fcs 9          9         #> 4 H1_PhenoGraph_cluster1.fcs 2          2         #> # ℹ 296 more rows phenograph %>%     class() #> [1] \"tof_tbl\"    \"tbl_df\"     \"tbl\"        \"data.frame\" # when csv files are read, the tof_tibble's \"panel\" # attribute will be empty by default tidytof_example_data(\"phenograph_csv\") %>%     tof_read_data() %>%     tof_get_panel() #> # A tibble: 0 × 0  # to add a panel manually, provide it as a tibble # to tof_read_data phenograph_panel <-     phenograph %>%     tof_get_panel()  tidytof_example_data(\"phenograph_csv\") %>%     tof_read_data(panel_info = phenograph_panel) %>%     tof_get_panel() #> # A tibble: 44 × 2 #>   antigens    metals      #>   <chr>       <chr>       #> 1 Time        Time        #> 2 Cell_length Cell_length #> 3 DNA1        Ir191       #> 4 DNA2        Ir193       #> # ℹ 40 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/reading-and-writing-data.html","id":"writing-data-from-a-tof_tbl-to-disk","dir":"Articles","previous_headings":"","what":"Writing data from a tof_tbl to disk","title":"Reading and writing data","text":"Users may wish store CyTOF data FCS CSV files transformation, concatenation, filtering, data processing. write single-cell data tof_tbl FCS CSV files, use tof_write_data. illustrate use verb, use tidytof’s built-phenograph_data dataset. tof_write_data’s trickiest argument group_cols, argument used specify columns tof_tibble used group cells (rows tof_tibble) separate FCS CSV files. Simply put, argument allows tof_write_data create single FCS CSV file unique combination values group_cols columns specified user. example , cells grouped 3 output FCS files - one 3 clusters encoded phenograph_cluster column phenograph_data. files following names (derived values phenograph_cluster column): cluster1.fcs cluster2.fcs cluster3.fcs Note file names match distinct values group_cols column (phenograph_cluster): However, suppose wanted write multiple files cluster breaking cells two groups: express high levels pstat5 express low levels pstat5. can use dplyr::mutate create new column phenograph_data breaks cells high- low-pstat5 expression groups, add column group_cols specification: write 6 files following names (derived values phenograph_cluster expression_group). cluster1_low.fcs cluster1_high.fcs cluster2_low.fcs cluster2_high.fcs cluster3_low.fcs cluster3_high.fcs , note file names match distinct values group_cols columns (phenograph_cluster expression_group): useful feature tof_write_data automatically concatenate cells single FCS CSV files based specified group_cols regardless many unique files cells came . allows easy concatenation FCS CSV files containing data single sample acquired multiple CyTOF runs, example.","code":"data(phenograph_data)  print(phenograph_data) #> # A tibble: 3,000 × 25 #>   sample_name  phenograph_cluster    cd19 cd11b   cd34  cd45  cd123   cd33  cd47 #>   <chr>        <chr>                <dbl> <dbl>  <dbl> <dbl>  <dbl>  <dbl> <dbl> #> 1 H1_PhenoGra… cluster1           -0.168  29.0   3.23   131. -0.609  1.21   13.0 #> 2 H1_PhenoGra… cluster1            1.65    4.83 -0.582  230.  2.53  -0.507  12.9 #> 3 H1_PhenoGra… cluster1            2.79   36.1   5.20   293. -0.265  3.67   27.1 #> 4 H1_PhenoGra… cluster1            0.0816 48.8   0.363  431.  2.04   9.40   41.0 #> # ℹ 2,996 more rows #> # ℹ 16 more variables: cd7 <dbl>, cd44 <dbl>, cd38 <dbl>, cd3 <dbl>, #> #   cd117 <dbl>, cd64 <dbl>, cd41 <dbl>, pstat3 <dbl>, pstat5 <dbl>, #> #   pampk <dbl>, p4ebp1 <dbl>, ps6 <dbl>, pcreb <dbl>, `pzap70-syk` <dbl>, #> #   prb <dbl>, `perk1-2` <dbl> # when copying and pasting this code, feel free to change this path # to wherever you'd like to save your output files my_path <- file.path(\"~\", \"Desktop\", \"tidytof_vignette_files\")  phenograph_data %>%     tof_write_data(         group_cols = phenograph_cluster,         out_path = my_path,         format = \"fcs\"     ) phenograph_data %>%     distinct(phenograph_cluster) #> # A tibble: 3 × 1 #>   phenograph_cluster #>   <chr>              #> 1 cluster1           #> 2 cluster2           #> 3 cluster3 phenograph_data %>%     # create a variable representing if a cell is above or below     # the median expression level of pstat5     mutate(         expression_group = if_else(pstat5 > median(pstat5), \"high\", \"low\")     ) %>%     tof_write_data(         group_cols = c(phenograph_cluster, expression_group),         out_path = my_path,         format = \"fcs\"     ) phenograph_data %>%     mutate(         expression_group = if_else(pstat5 > median(pstat5), \"high\", \"low\")     ) %>%     distinct(phenograph_cluster, expression_group) #> # A tibble: 6 × 2 #>   phenograph_cluster expression_group #>   <chr>              <chr>            #> 1 cluster1           low              #> 2 cluster1           high             #> 3 cluster2           low              #> 4 cluster2           high             #> # ℹ 2 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/reading-and-writing-data.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Reading and writing data","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] dplyr_1.1.4    tidytof_0.99.1 #>  #> loaded via a namespace (and not attached): #>   [1] gridExtra_2.3       rlang_1.1.3         magrittr_2.0.3      #>   [4] matrixStats_1.2.0   compiler_4.3.3      systemfonts_1.0.6   #>   [7] vctrs_0.6.5         stringr_1.5.1       crayon_1.5.2        #>  [10] pkgconfig_2.0.3     shape_1.4.6.1       fastmap_1.1.1       #>  [13] ggraph_2.2.1        utf8_1.2.4          rmarkdown_2.26      #>  [16] prodlim_2023.08.28  tzdb_0.4.0          ragg_1.3.0          #>  [19] bit_4.0.5           purrr_1.0.2         xfun_0.42           #>  [22] glmnet_4.1-8        cachem_1.0.8        jsonlite_1.8.8      #>  [25] recipes_1.0.10      tweenr_2.0.3        parallel_4.3.3      #>  [28] R6_2.5.1            bslib_0.6.2         stringi_1.8.3       #>  [31] parallelly_1.37.1   rpart_4.1.23        lubridate_1.9.3     #>  [34] jquerylib_0.1.4     Rcpp_1.0.12         iterators_1.0.14    #>  [37] knitr_1.45          future.apply_1.11.1 readr_2.1.5         #>  [40] flowCore_2.14.2     Matrix_1.6-5        splines_4.3.3       #>  [43] nnet_7.3-19         igraph_2.0.3        timechange_0.3.0    #>  [46] tidyselect_1.2.1    yaml_2.3.8          viridis_0.6.5       #>  [49] timeDate_4032.109   doParallel_1.0.17   codetools_0.2-19    #>  [52] listenv_0.9.1       lattice_0.22-5      tibble_3.2.1        #>  [55] Biobase_2.62.0      withr_3.0.0         evaluate_0.23       #>  [58] future_1.33.1       desc_1.4.3          survival_3.5-8      #>  [61] polyclip_1.10-6     pillar_1.9.0        foreach_1.5.2       #>  [64] stats4_4.3.3        generics_0.1.3      vroom_1.6.5         #>  [67] RcppHNSW_0.6.0      S4Vectors_0.40.2    hms_1.1.3           #>  [70] ggplot2_3.5.0       munsell_0.5.0       scales_1.3.0        #>  [73] globals_0.16.3      class_7.3-22        glue_1.7.0          #>  [76] tools_4.3.3         data.table_1.15.2   gower_1.0.1         #>  [79] fs_1.6.3            graphlayouts_1.1.1  tidygraph_1.3.1     #>  [82] grid_4.3.3          yardstick_1.3.1     tidyr_1.3.1         #>  [85] RProtoBufLib_2.14.1 ipred_0.9-14        colorspace_2.1-0    #>  [88] ggforce_0.4.2       cli_3.6.2           textshaping_0.3.7   #>  [91] fansi_1.0.6         cytolib_2.14.1      viridisLite_0.4.2   #>  [94] lava_1.8.0          gtable_0.3.4        sass_0.4.9          #>  [97] digest_0.6.35       BiocGenerics_0.48.1 ggrepel_0.9.5       #> [100] farver_2.1.1        memoise_2.0.1       htmltools_0.5.7     #> [103] pkgdown_2.0.7       lifecycle_1.0.4     hardhat_1.3.1       #> [106] bit64_4.0.5         MASS_7.3-60.0.1"},{"path":"https://keyes-timothy.github.io/tidytof/articles/tidytof.html","id":"prerequisites","dir":"Articles","previous_headings":"","what":"Prerequisites","title":"Getting started with tidytof","text":"tidytof makes heavy use two concepts may unfamiliar R beginners. first pipe (|>), can read . second “grouping” data data.frame tibble using dplyr::group_by, can read . tidytof users also benefit relatively -depth understanding dplyr package, wonderful introductory vignette : Everything else self-explanatory beginner advanced R users, though zero background running R code, read chapter R Data Science Hadley Wickham.","code":"vignette(\"dplyr\")"},{"path":"https://keyes-timothy.github.io/tidytof/articles/tidytof.html","id":"workflow-basics","dir":"Articles","previous_headings":"","what":"Workflow basics","title":"Getting started with tidytof","text":"Broadly speaking, tidytof’s functionality organized support 3 levels analysis inherent single-cell data described : Reading, writing, preprocessing, visualizing data level individual cells Identifying describing cell subpopulations clusters Building models (inference prediction) level patients samples tidytof provides functions (“verbs”) operate levels analysis: Cell-level data: tof_read_data() reads single-cell data FCS CSV files disk tidy data frame called tof_tbl. tof_tbls represent cell row protein measurement (piece information associated given cell) column. tof_preprocess() transforms protein expression values using user-provided function (.e. log-transformation, centering, scaling) tof_downsample() reduces number cells tof_tibble via subsampling. tof_reduce_dimensions() performs dimensionality reduction (across columns) tof_write_data writes single-cell data tof_tibble back disk form FCS CSV file. Cluster-level data: tof_cluster() clusters cells using one several algorithms commonly applied high-dimensional cytometry data tof_metacluster() agglomerates clusters smaller number metaclusters tof_analyze_abundance() performs differential abundance analysis (DAA) clusters metaclusters across experimental groups tof_analyze_expression() performs differential expression analysis (DEA) clusters’ metaclusters’ marker expression levels across experimental groups tof_extract_features() computes summary statistics (mean marker expression) cluster. Also (optionally) pivots summary statistics sample-level tidy data frame row represents sample column represents cluster-level summary statistic. Sample-level data: tof_split_data() splits sample-level data training test set predictive modeling tof_create_grid() creates elastic net hyperparameter search grid model tuning tof_train_model() trains sample-level elastic net model saves tof_model object tof_predict() Applies trained tof_model new data predict sample-level outcomes tof_assess_model() calculates performance metrics trained tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/tidytof.html","id":"tidytof-verb-syntax","dir":"Articles","previous_headings":"","what":"{tidytof} verb syntax","title":"Getting started with tidytof","text":"exceptions, tidytof functions follow specific, shared syntax involves 3 types arguments always occur order. argument types follows: almost tidytof functions, first argument data frame (tibble). enables use pipe (|>) multi-step calculations, means first argument functions implicit (passed previous function using pipe). also means tidytof functions -called “single-table verbs,” exception tof_cluster_ddpr, “two-table verb” (details use tof_cluster_ddpr, see “clustering--metaclustering” vignette). second group arguments called column specifications, end suffix _col _cols. Column specifications unquoted column names tell tidytof verb columns compute particular operation. example, cluster_cols argument tof_cluster allows user specify column input data frames used perform clustering. Regardless verb requires , column specifications support tidyselect helpers follow rules tidyselection tidyverse verbs like dplyr::select() tidyr::pivot_longer(). Finally, third group arguments tidytof verb called method specifications, ’re comprised every argument isn’t input data frame column specification. Whereas column specifications represent columns used perform operation, method specifications represent details operation performed. example, tof_cluster_phenograph() function requires method specification num_neighbors, specifies many nearest neighbors used construct PhenoGraph algorithm’s k-nearest-neighbor graph. cases, tidytof sets reasonable defaults verb’s particular method specifications, workflows can also customized experimenting non-default values. following code demonstrates tidytof verb syntax looks practice, column method specifications explicitly pointed :","code":"data(ddpr_data)  set.seed(777L)  ddpr_data |>     tof_preprocess() |>     tof_cluster(         cluster_cols = starts_with(\"cd\"), # column specification         method = \"phenograph\", # method specification,     ) |>     tof_metacluster(         cluster_col = .phenograph_cluster, # column specification         num_metaclusters = 4, # method specification         method = \"kmeans\" # method specification     ) |>     tof_downsample(         group_cols = .kmeans_metacluster, # column specification         num_cells = 200, # method specification         method = \"constant\" # method specification     ) |>     tof_plot_cells_layout(         knn_cols = starts_with(\"cd\"), # column specification         color_col = .kmeans_metacluster, # column specification         num_neighbors = 7L, # method specification         node_size = 2L # method specification     )"},{"path":"https://keyes-timothy.github.io/tidytof/articles/tidytof.html","id":"pipelines","dir":"Articles","previous_headings":"","what":"Pipelines","title":"Getting started with tidytof","text":"tidytof verbs can used combination one another using pipe (|>) operator. example, multistep “pipeline” takes built-tidytof dataset performs following analytical steps: Arcsinh-transform column protein measurements (default behavior tof_preprocess verb Cluster cells based surface markers panel Downsample dataset 100 random cells picked cluster Perform dimensionality reduction downsampled dataset using tSNE Visualize clusters using low-dimensional tSNE embedding","code":"ddpr_data |>     # step 1     tof_preprocess() |>     # step 2     tof_cluster(         cluster_cols = starts_with(\"cd\"),         method = \"phenograph\",         # num_metaclusters = 4L,         seed = 2020L     ) |>     # step 3     tof_downsample(         group_cols = .phenograph_cluster,         method = \"constant\",         num_cells = 400     ) |>     # step 4     tof_reduce_dimensions(method = \"tsne\") |>     # step 5     tof_plot_cells_embedding(         embedding_cols = contains(\"tsne\"),         color_col = .phenograph_cluster     ) +     ggplot2::theme(legend.position = \"none\") #> Loading required namespace: Rtsne"},{"path":"https://keyes-timothy.github.io/tidytof/articles/tidytof.html","id":"other-tips","dir":"Articles","previous_headings":"","what":"Other tips","title":"Getting started with tidytof","text":"tidytof designed multidisciplinary team wet-lab biologists, bioinformaticians, physician-scientists analyze high-dimensional cytometry kinds single-cell data solve variety problems. result, tidytof’s high-level API designed great care mirror tidyverse - , human-centered, consistent, composable, inclusive wide userbase. Practically speaking, means things using tidytof. First, means tidytof designed quality--life features mind. example, may notice tidytof functions begin prefix tof_. intentional, allow use development environment’s code-completing software search tidytof functions easily (even can’t remember specific function name). reason, recommend using tidytof within RStudio development environment; however, many code editors predictive text functionality serves similar function. general, tidytof verbs organized way IDE’s code-completion tools also allow search (compare) related functions relative ease. (instance, tof_cluster_ prefix used clustering functions, tof_downsample_ prefix used downsampling functions). Second, means tidytof functions relatively intuitive use due shared logic - words, understand use one tidytof function, understand use others. example shared logic across tidytof functions argument group_cols, shows multiple verbs (tof_downsample, tof_cluster, tof_daa, tof_dea, tof_extract_features, tof_write_data). case, group_cols works way: accepts unquoted vector column names (specified manually using tidyselection) used group cells operation performed. idea generalizes throughout tidytof: see argument one place, behave identically (least similarly) wherever else encounter . Finally, means tidytof optimized first ease--use, performance. humans computers interact data differently, always trade-choosing data representation intuitive human user vs. choosing data representation optimized computational speed memory efficiency. design choices conflict one another, team tends err side choosing representation easy--understand users even expense small performance costs. Ultimately, means tidytof may optimal tool every high-dimensional cytometry analysis, though hopefully general framework provide users useful functionality.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/tidytof.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Getting started with tidytof","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] tidytof_0.99.1 #>  #> loaded via a namespace (and not attached): #>   [1] gridExtra_2.3       rlang_1.1.3         magrittr_2.0.3      #>   [4] matrixStats_1.2.0   compiler_4.3.3      systemfonts_1.0.6   #>   [7] vctrs_0.6.5         stringr_1.5.1       pkgconfig_2.0.3     #>  [10] shape_1.4.6.1       fastmap_1.1.1       labeling_0.4.3      #>  [13] ggraph_2.2.1        utf8_1.2.4          rmarkdown_2.26      #>  [16] prodlim_2023.08.28  tzdb_0.4.0          ragg_1.3.0          #>  [19] purrr_1.0.2         xfun_0.42           glmnet_4.1-8        #>  [22] cachem_1.0.8        jsonlite_1.8.8      recipes_1.0.10      #>  [25] highr_0.10          tweenr_2.0.3        parallel_4.3.3      #>  [28] R6_2.5.1            bslib_0.6.2         stringi_1.8.3       #>  [31] parallelly_1.37.1   rpart_4.1.23        lubridate_1.9.3     #>  [34] jquerylib_0.1.4     Rcpp_1.0.12         iterators_1.0.14    #>  [37] knitr_1.45          future.apply_1.11.1 readr_2.1.5         #>  [40] flowCore_2.14.2     Matrix_1.6-5        splines_4.3.3       #>  [43] nnet_7.3-19         igraph_2.0.3        timechange_0.3.0    #>  [46] tidyselect_1.2.1    yaml_2.3.8          viridis_0.6.5       #>  [49] timeDate_4032.109   doParallel_1.0.17   codetools_0.2-19    #>  [52] listenv_0.9.1       lattice_0.22-5      tibble_3.2.1        #>  [55] Biobase_2.62.0      withr_3.0.0         Rtsne_0.17          #>  [58] evaluate_0.23       future_1.33.1       desc_1.4.3          #>  [61] survival_3.5-8      polyclip_1.10-6     pillar_1.9.0        #>  [64] foreach_1.5.2       stats4_4.3.3        generics_0.1.3      #>  [67] RcppHNSW_0.6.0      S4Vectors_0.40.2    hms_1.1.3           #>  [70] ggplot2_3.5.0       munsell_0.5.0       scales_1.3.0        #>  [73] globals_0.16.3      class_7.3-22        glue_1.7.0          #>  [76] tools_4.3.3         data.table_1.15.2   gower_1.0.1         #>  [79] fs_1.6.3            graphlayouts_1.1.1  tidygraph_1.3.1     #>  [82] grid_4.3.3          yardstick_1.3.1     tidyr_1.3.1         #>  [85] RProtoBufLib_2.14.1 ipred_0.9-14        colorspace_2.1-0    #>  [88] ggforce_0.4.2       cli_3.6.2           textshaping_0.3.7   #>  [91] fansi_1.0.6         cytolib_2.14.1      viridisLite_0.4.2   #>  [94] lava_1.8.0          dplyr_1.1.4         gtable_0.3.4        #>  [97] sass_0.4.9          digest_0.6.35       BiocGenerics_0.48.1 #> [100] ggrepel_0.9.5       farver_2.1.1        memoise_2.0.1       #> [103] htmltools_0.5.7     pkgdown_2.0.7       lifecycle_1.0.4     #> [106] hardhat_1.3.1       MASS_7.3-60.0.1"},{"path":"https://keyes-timothy.github.io/tidytof/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Timothy Keyes. Maintainer. Kara Davis. Research team head, owner. Garry Nolan. Research team head, owner.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Keyes T, Davis K, Nolan G (2024). tidytof: user-friendly framework scalable reproducible high-dimensional cytometry data analysis. doi:10.18129/B9.bioc.tidytof, https://github.com/keyes-timothy/tidytof/tidytof - R package version 0.99.1, http://www.bioconductor.org/packages/tidytof. Keyes, J. T, Koladiya, Abhishek, Lo, Yu-Chen, Nolan, P. G, Davis, L. K (2023). “tidytof: user-friendly framework scalable reproducible high-dimensional cytometry data analysis.” Bioinformatics Advances, 3(1). doi:10.1093/bioadv/vbad071, https://academic.oup.com/bioinformaticsadvances/article/3/1/vbad071/7192984.","code":"@Manual{,   title = {tidytof: a user-friendly framework for scalable and reproducible high-dimensional cytometry data analysis},   author = {Timothy Keyes and Kara Davis and Garry Nolan},   year = {2024},   url = {http://www.bioconductor.org/packages/tidytof},   note = {https://github.com/keyes-timothy/tidytof/tidytof - R package version 0.99.1},   doi = {10.18129/B9.bioc.tidytof}, } @Article{,   title = {tidytof: a user-friendly framework for scalable and reproducible high-dimensional cytometry data analysis},   author = {{Keyes} and Timothy J. and {Koladiya} and {Abhishek} and {Lo} and {Yu-Chen} and {Nolan} and Garry P. and {Davis} and Kara L.},   year = {2023},   journal = {Bioinformatics Advances},   volume = {3},   number = {1},   doi = {10.1093/bioadv/vbad071},   url = {https://academic.oup.com/bioinformaticsadvances/article/3/1/vbad071/7192984}, }"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"tidytof-a-user-friendly-framework-for-interactive-and-reproducible-cytometry-data-analysis-","dir":"","previous_headings":"","what":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"tidytof R package implements open-source, integrated “grammar” single-cell data analysis high-dimensional cytometry data (.e. mass cytometry, full-spectrum flow cytometry, sequence-based cytometry). Specifically, tidytof provides easy--use pipeline handling high-dimensional cytometry data multiple levels observation - single-cell level, cell subpopulation (cluster) level, whole-sample level - automating many common data-processing tasks common “tidy data” interface. extension tidyverse ecosystem data manipulation tools R, tidytof’s functions developed internally consistent, human-centered set design principles. means using tidytof equally intuitive among scientists wide range coding experience (including beginners).","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"prerequisites","dir":"","previous_headings":"Getting started","what":"Prerequisites","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"tidytof makes heavy use two concepts R beginners may unfamiliar . first pipe (|>), can read . second “grouping” data data.frame tibble using dplyr::group_by, can read . Everything else self-explanatory beginner advanced R users, though zero background running R code, read chapter R Data Science Hadley Wickham.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"package-structure","dir":"","previous_headings":"Getting started","what":"Package structure","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"Broadly speaking, tidytof’s functionality organized support 3 levels analysis inherent single-cell data: Reading, writing, preprocessing, visualizing data level single cells Identifying describing cell subpopulations clusters Building models (inference prediction) level patients samples use tidytof levels cytometry data analysis detailed “Usage” section .","code":""},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"can install development version tidytof GitHub following command: tidytof installed, can attach current R session using following code: addition, can install load packages need vignette:","code":"if (!require(devtools)) install.packages(\"devtools\") devtools::install_github(\"keyes-timothy/tidytof\") library(tidytof) if (!require(FlowSOM)) BiocManager::install(\"FlowSOM\") library(FlowSOM)  if (!require(tidyverse)) install.packages(\"tidyverse\") library(tidyverse)"},{"path":[]},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"reading-data-with-tof_read_data","dir":"","previous_headings":"Usage > Analyzing data at the single-cell level","what":"Reading data with tof_read_data","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"tidytof comes bundled several example mass cytometry datasets. access raw .fcs .csv files containing data, use tidytof_example_data function. called arguments, tidytof_example_data return character vector naming datasets contained tidytof: obtain file path directory containing dataset, call tidytof_example_data one dataset names argument. example, obtain directory phenograph data, use following command: Using one directories (directory containing cytometry data local machine), can use tof_read_data read cytometry data raw files. Acceptable formats include .fcs files .csv files. Importantly, tof_read_data smart enough read single .fcs/.csv files multiple .fcs/.csv files depending whether first argument (path) leads single file directory files. , can use tof_read_data read .fcs files “phenograph” example dataset bundled tidytof store phenograph variable. Regardless input format, tidytof reads data extended tibble called tof_tbl (pronounced “tof tibble”), S3 class identical tbl_df, one additional attribute (“panel”). tidytof stores additional attribute tof_tbls , addition analyzing cytometry data individual experiments, cytometry users often want compare panels experiments find common markers compare metals associated particular markers across panels. notes tof_tbls: tof_tbls contains one cell per row one cytometry channel per column (provide data “tidy” format). tof_read_data adds additional column output tof_tbl encoding name file cell read (“file_name” column). tof_tbls inherit tbl_df class, methods available tibbles also available tof_tbls. example, dplyr’s useful mutate method can applied tof_tbl named phenograph convert columns encoding phenograph cluster ID stimulation condition cell belongs character vectors (instead original numeric codes uncleaned dataset). tof_tbl class preserved even transformations. Finally, retrieve panel information tof_tbl, use tof_get_panel: Importantly, tof_read_data uses opinionated heuristic mine different keyword slots input .fcs file(s) guess metals antigens used data collection. Thus, .csv files read using tof_read_data, recommended use panel_info argument provide panel manually (.csv files, unlike .fcs files, provide built-metadata columns contain).","code":"tidytof_example_data() #>  [1] \"aml\"                  \"ddpr\"                 \"ddpr_metadata.csv\"    #>  [4] \"mix\"                  \"mix2\"                 \"phenograph\"           #>  [7] \"phenograph_csv\"       \"scaffold\"             \"statistical_scaffold\" #> [10] \"surgery\" tidytof_example_data(\"phenograph\") #> [1] \"/Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/library/tidytof/extdata/phenograph\" phenograph <-     tidytof_example_data(\"phenograph\") |>     tof_read_data()  phenograph |>     class() #> [1] \"tof_tbl\"    \"tbl_df\"     \"tbl\"        \"data.frame\" phenograph <-     phenograph |>     # mutate the input tof_tbl     mutate(         PhenoGraph = as.character(PhenoGraph),         Condition = as.character(Condition)     )  phenograph |>     # use dplyr's select method to show that the columns have been changed     select(where(is.character)) |>     head() #> # A tibble: 6 × 3 #>   file_name                  PhenoGraph Condition #>   <chr>                      <chr>      <chr>     #> 1 H1_PhenoGraph_cluster1.fcs 7          7         #> 2 H1_PhenoGraph_cluster1.fcs 6          6         #> 3 H1_PhenoGraph_cluster1.fcs 9          9         #> 4 H1_PhenoGraph_cluster1.fcs 2          2         #> 5 H1_PhenoGraph_cluster1.fcs 15         15        #> 6 H1_PhenoGraph_cluster1.fcs 12         12 phenograph |>     class() #> [1] \"tof_tbl\"    \"tbl_df\"     \"tbl\"        \"data.frame\" phenograph |>     tof_get_panel() |>     head() #> # A tibble: 6 × 2 #>   metals      antigens    #>   <chr>       <chr>       #> 1 Time        Time        #> 2 Cell_length Cell_length #> 3 Ir191       DNA1        #> 4 Ir193       DNA2        #> 5 Pd104       BC1         #> 6 Pd106       BC2"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"pre-processing-with-tof_preprocess","dir":"","previous_headings":"Usage > Analyzing data at the single-cell level","what":"Pre-processing with tof_preprocess","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"Generally, raw ion counts analyte measured mass cytometer need transformed cytometry data analysis. Common preprocessing steps may include variance-stabilizing transformations - hyperbolic arcsine (arcsinh) transformation log transformation - scaling/centering, /denoising. perform standard preprocessing tasks tidytof, use tof_preprocess. tof_preprocess’s default behavior apply arcsinh transformation (cofactor 5) numeric column input tof_tibble well remove gaussian noise Fluidigm software adds ion count (noise added visualization purposes, analyses, removing recommended). example, can preprocess phenograph tof_tibble see first measurements change . alter tof_preprocess’s default behavior, change channel_cols argument (specify columns tof_tibble transformed) transform_fun argument (specify vector-valued function used transform channel_cols). keep gaussian noise added Fluidigm software (working dataset noise), set undo_noise argument FALSE. Finally, note built-function tof_postprocess works nearly identically tof_preprocess, provides different default behavior (namely, applying reverse arcsinh transformation cofactor 5 numeric columns. See ?tof_postprocess details).","code":"# before preprocessing phenograph |>     select(`CD45|Sm154`, `CD34|Nd148`, `CD38|Er167`) |>     head() #> # A tibble: 6 × 3 #>   `CD45|Sm154` `CD34|Nd148` `CD38|Er167` #>          <dbl>        <dbl>        <dbl> #> 1        440.         0.256        18.7  #> 2        705.         1.96         41.2  #> 3        383.        -0.302         6.51 #> 4         44.4        2.74         27.2  #> 5        892.         4.08         24.5  #> 6        448.         2.69         11.1 # perform preprocessing phenograph <-     phenograph |>     tof_preprocess()  # inspect new values phenograph |>     select(`CD45|Sm154`, `CD34|Nd148`, `CD38|Er167`) |>     head() #> # A tibble: 6 × 3 #>   `CD45|Sm154` `CD34|Nd148` `CD38|Er167` #>          <dbl>        <dbl>        <dbl> #> 1         5.17       0.0512         2.03 #> 2         5.64       0.382          2.81 #> 3         5.03      -0.0603         1.08 #> 4         2.88       0.524          2.40 #> 5         5.88       0.746          2.29 #> 6         5.19       0.515          1.54"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"downsampling-with-tof_downsample","dir":"","previous_headings":"Usage > Analyzing data at the single-cell level","what":"Downsampling with tof_downsample","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"Often, cytometry experiments collect tens hundreds millions cells total, can useful downsample smaller, computationally tractable number cells - either final analysis developing code. , tidytof implements tof_downsample verb, allows downsampling using 3 methods. Using tidytof’s built-dataset phenograph_data (smaller version dataset read ), can see original size dataset 1000 cells per cluster, 3000 cells total: randomly sample 200 cells per cluster, can use tof_downsample using “constant” method: Alternatively, wanted sample 50% cells cluster, use “prop” method: finally, might also interested taking slightly different approach downsampling downsamples number cells fixed constant proportion, fixed density phenotypic space. example, following scatterplot demonstrates certain areas phenotypic density phenograph_data contain cells others along cd34/cd38 axes:  reduce number cells dataset local density around cell dataset relatively constant, can use “density” method tof_downsample:  details, check documentation 3 underlying members tof_downsample_* function family (wrapped tof_downsample): tof_downsample_constant tof_downsample_prop tof_downsample_density","code":"data(phenograph_data)  phenograph_data |>     count(phenograph_cluster) #> # A tibble: 3 × 2 #>   phenograph_cluster     n #>   <chr>              <int> #> 1 cluster1            1000 #> 2 cluster2            1000 #> 3 cluster3            1000 phenograph_data |>     # downsample     tof_downsample(         method = \"constant\",         group_cols = phenograph_cluster,         num_cells = 200     ) |>     # count the number of downsampled cells in each cluster     count(phenograph_cluster) #> # A tibble: 3 × 2 #>   phenograph_cluster     n #>   <chr>              <int> #> 1 cluster1             200 #> 2 cluster2             200 #> 3 cluster3             200 phenograph_data |>     # downsample     tof_downsample(         method = \"prop\",         group_cols = phenograph_cluster,         prop_cells = 0.5     ) |>     # count the number of downsampled cells in each cluster     count(phenograph_cluster) #> # A tibble: 3 × 2 #>   phenograph_cluster     n #>   <chr>              <int> #> 1 cluster1             500 #> 2 cluster2             500 #> 3 cluster3             500 phenograph_data |>     # preprocess all numeric columns in the dataset     tof_preprocess(undo_noise = FALSE) |>     # make a scatterplot     ggplot(aes(x = cd34, y = cd38)) +     geom_point(alpha = 0.5) +     scale_x_continuous(limits = c(NA, 1.5)) +     scale_y_continuous(limits = c(NA, 4)) +     theme_bw() phenograph_data |>     tof_preprocess(undo_noise = FALSE) |>     tof_downsample(         density_cols = c(cd34, cd38),         target_prop_cells = 0.25,         method = \"density\",     ) |>     ggplot(aes(x = cd34, y = cd38)) +     geom_point(alpha = 0.5) +     scale_x_continuous(limits = c(NA, 1.5)) +     scale_y_continuous(limits = c(NA, 4)) +     theme_bw()"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"writing-data-with-tof_write_data","dir":"","previous_headings":"Usage > Analyzing data at the single-cell level","what":"Writing data with tof_write_data","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"Finally, users may wish store single-cell data .fcs .csv files transformation, concatenation, filtering, data processing steps dimensionality reduction /clustering (see ). write single-cell data tof_tbl .fcs .csv files, use tof_write_data. tof_write_data’s trickiest argument group_cols, argument used specify columns tof_tibble used group cells (.e. rows tof_tibble) separate .fcs .csv files. Simply put, argument allows tof_write_data create single .fcs .csv file unique combination values columns specified user. example , cells grouped 3 output .fcs files - one 3 clusters encoded phenograph_cluster column phenograph_data. files following names (derived values phenograph_cluster column): cluster1.fcs cluster2.fcs cluster3.fcs However, suppose wanted write multiple files cluster breaking cells two groups: express high levels pstat5 express low levels pstat5. can use dplyr::mutate create new column phenograph_data breaks cells high- low-pstat5 expression groups, add column group_cols specification: write 6 files following names (derived values phenograph_cluster expression_group). cluster1_low.fcs cluster1_high.fcs cluster2_low.fcs cluster2_high.fcs cluster3_low.fcs cluster3_high.fcs useful feature tof_write_data automatically concatenate cells single .fcs .csv files based specified group_cols regardless many unique files cells came , allowing easy concatenation .fcs .csv files containing data single sample acquired multiple cytometry runs.","code":"# when copying and pasting this code, feel free to change this path # to wherever you'd like to save your output files my_path <- file.path(\"~\", \"Desktop\", \"tidytof_vignette_files\")  phenograph_data |>     tof_write_data(         group_cols = phenograph_cluster,         out_path = my_path,         format = \"fcs\"     ) phenograph_data |>     # create a variable representing if a cell is above or below the median     # expression level of pstat5     mutate(expression_group = if_else(pstat5 > median(pstat5), \"high\", \"low\")) |>     tof_write_data(         group_cols = c(phenograph_cluster, expression_group),         out_path = my_path,         format = \"fcs\"     )"},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"identifying-clusters-with-tof_cluster","dir":"","previous_headings":"Usage > Analyzing data at the cluster-level","what":"Identifying clusters with tof_cluster","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"input files read tabular format preprocessed/downsampled, might interested clustering data define communities cells shared characteristics. , can use tof_cluster verb. Several clustering methods implemented tidytof, including FlowSOM, PhenoGraph, k-means, others. demonstrate, can apply FlowSOM clustering algorithm phenograph_data . Note phenograph_data contains 6000 total cells (2000 3 clusters identified original PhenoGraph publication). output tof_cluster tof_tbl identical input tibble, now addition additional column (“.flowsom_metacluster”) encodes cluster id cell input tof_tbl. Note output columns added tibble tof_tbl tidytof begin full-stop (“.”) reduce likelihood collisions existing column names. output tof_cluster tof_tbl, can use dplyr’s count method assess accuracy FlowSOM clustering compared original clustering PhenoGraph paper. , can see FlowSOM algorithm groups cells PhenoGraph cluster one another (small number mistakes per PhenoGraph cluster). change clustering algorithm tof_cluster uses, alter method flag; change columns used compute clusters, change cluster_cols flag. finally, want return tibble includes cluster labels (cluster labels added new column input tof_tbl), set augment FALSE.","code":"phenograph_clusters <-     phenograph_data |>     tof_preprocess() |>     tof_cluster(method = \"flowsom\", cluster_cols = contains(\"cd\"))  phenograph_clusters |>     select(sample_name, .flowsom_metacluster, everything()) |>     head() #> # A tibble: 6 × 26 #>   sample_name      .flowsom_metacluster phenograph_cluster    cd19 cd11b    cd34 #>   <chr>            <chr>                <chr>                <dbl> <dbl>   <dbl> #> 1 H1_PhenoGraph_c… 13                   cluster1           -0.0336 2.46   0.608  #> 2 H1_PhenoGraph_c… 18                   cluster1            0.324  0.856 -0.116  #> 3 H1_PhenoGraph_c… 10                   cluster1            0.532  2.67   0.909  #> 4 H1_PhenoGraph_c… 8                    cluster1            0.0163 2.97   0.0725 #> 5 H1_PhenoGraph_c… 13                   cluster1            0.144  2.98   0.128  #> 6 H1_PhenoGraph_c… 8                    cluster1            0.742  3.41   0.336  #> # ℹ 20 more variables: cd45 <dbl>, cd123 <dbl>, cd33 <dbl>, cd47 <dbl>, #> #   cd7 <dbl>, cd44 <dbl>, cd38 <dbl>, cd3 <dbl>, cd117 <dbl>, cd64 <dbl>, #> #   cd41 <dbl>, pstat3 <dbl>, pstat5 <dbl>, pampk <dbl>, p4ebp1 <dbl>, #> #   ps6 <dbl>, pcreb <dbl>, `pzap70-syk` <dbl>, prb <dbl>, `perk1-2` <dbl> phenograph_clusters |>     count(phenograph_cluster, .flowsom_metacluster, sort = TRUE) #> # A tibble: 23 × 3 #>    phenograph_cluster .flowsom_metacluster     n #>    <chr>              <chr>                <int> #>  1 cluster3           12                     323 #>  2 cluster3           15                     318 #>  3 cluster2           3                      309 #>  4 cluster1           17                     234 #>  5 cluster2           2                      218 #>  6 cluster2           4                      206 #>  7 cluster1           8                      182 #>  8 cluster1           18                     167 #>  9 cluster1           9                      162 #> 10 cluster3           20                     162 #> # ℹ 13 more rows # will result in a tibble with only 1 column (the cluster labels) phenograph_data |>     tof_preprocess() |>     tof_cluster(method = \"flowsom\", cluster_cols = contains(\"cd\"), augment = FALSE) |>     head() #> # A tibble: 6 × 1 #>   .flowsom_metacluster #>   <chr>                #> 1 13                   #> 2 3                    #> 3 10                   #> 4 11                   #> 5 10                   #> 6 11"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"dimensionality-reduction-with-tof_reduce_dimensions","dir":"","previous_headings":"Usage > Analyzing data at the cluster-level","what":"Dimensionality reduction with tof_reduce_dimensions()","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"clusters identified, useful tool visualizing dimensionality reduction, form unsupervised machine learning used represent high-dimensional datasets smaller, easier--visualize number dimensions. tidytof includes several algorithms commonly used biologists dimensionality reduction: Principal component analysis (PCA), t-distributed stochastic neighbor embedding (tSNE), uniform manifold approximation projection (UMAP). apply dataset, use tof_reduce_dimensions: default, tof_reduce_dimensions add reduced-dimension feature embeddings input tof_tbl return augmented tof_tbl (, tof_tbl new columns embedding dimension) result. return features embeddings , set augment FALSE (tof_cluster). Regardless method used, reduced-dimension feature embeddings can visualized using ggplot2 (graphics package):   visualizations can helpful qualitatively describing phenotypic differences clusters dataset. example, example , can see one clusters high CD11b expression, whereas others lower CD11b expression.","code":"# perform the dimensionality reduction phenograph_tsne <-     phenograph_clusters |>     tof_reduce_dimensions(method = \"tsne\")  # select only the tsne embedding columns using a tidyselect helper (contains) phenograph_tsne |>     select(contains(\"tsne\")) |>     head() #> # A tibble: 6 × 2 #>   .tsne1 .tsne2 #>    <dbl>  <dbl> #> 1  -8.41   17.2 #> 2   1.91   13.6 #> 3  23.9    20.1 #> 4   4.79   22.3 #> 5  -4.99   22.4 #> 6  11.0    20.2 # plot the tsne embeddings using color to distinguish between clusters phenograph_tsne |>     ggplot(aes(x = .tsne1, y = .tsne2, fill = phenograph_cluster)) +     geom_point(shape = 21) +     theme_bw() +     labs(fill = NULL) # plot the tsne embeddings using color to represent CD11b expression phenograph_tsne |>     ggplot(aes(x = .tsne1, y = .tsne2, fill = cd11b)) +     geom_point(shape = 21) +     scale_fill_viridis_c() +     theme_bw() +     labs(fill = \"CD11b expression\")"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"differential-discovery-analysis-with-tof_analyze_abundance-and-tof_analyze_expression","dir":"","previous_headings":"Usage > Analyzing data at the cluster-level","what":"Differential discovery analysis with tof_analyze_abundance and tof_analyze_expression","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"dimensionality reduction can used visualize clustering result, many cytometry users also want use statistical tools rigorously quantify clusters(s) dataset associate particular experimental clinical variable. analyses often grouped umbrella term differential discovery analysis include comparing relative size clusters experimental conditions (differential abundance analysis; DAA) well comparing marker expression patterns clusters experimental conditions (differential expression analysis; DEA). tidytof provides tof_analyze_abundance tof_analyze_expression verbs differential abundance differential expression analyses, respectively. demonstrate use verbs, ’ll first download dataset originally collected development CITRUS algorithm. data available HDCytoData package, available Bioconductor can downloaded following command: load CITRUS data current R session, can call function HDCytoData, provide us format {flowCore} package (called “flowSet”). convert tidy tibble, can use tidytof built-method converting flowCore objects tof_tbl’s . Thus, can see citrus_data tof_tbl 172791 cells (one row) 39 pieces information cell (one column). can also extract metadata raw data join single-cell data using functions tidyverse: Thus, now sample-level information patient sample collected stimulation condition (“Basal” “BCR-XL”) sample exposed data acquisition. Finally, can join metadata single-cell tof_tbl obtain cleaned dataset. data cleaning steps, now citrus_data, tof_tbl containing cells collected 8 patients. Specifically, 2 samples taken patient: one cells’ B-cell receptors stimulated (BCR-XL) one (Basal). citrus_data, cell’s patient origin stored patient column, cell’s stimulation condition stored stimulation column. addition, population_id column stores information cluster labels applied cell using combination FlowSOM clustering manual merging (details, run ?HDCytoData::Bodenmiller_BCR_XL R console). might wonder certain clusters expand deplete within patients two stimulation conditions described - question requires differential abundance analysis (DAA). tidytof’s tof_analyze_abundance verb supports use 3 statistical approaches performing DAA: diffcyt, generalized-linear mixed modeling (GLMMs), simple t-tests. setup described uses paired design 2 experimental conditions interest (Basal vs. BCR-XL), can use paired t-test method: Based output, can see 6 8 clusters statistically different abundance two stimulation conditions. Using tidytof easy integration tidyverse packages, can use result visualize fold-changes cluster (within patient) BCR-XL condition compared Basal condition using ggplot2:  Importantly, output tof_analyze_abundance depends slightly underlying statistical method used, details can found documentation tof_analyze_abundance_* function family member: tof_analyze_abundance_diffcyt tof_analyze_abundance_glmm tof_analyze_abundance_ttest Similarly, suppose ’re interested intracellular signaling proteins change expression levels two stimulation conditions clusters. Differential Expression Analysis (DEA) can performed using tidytof’s tof_analyze_expression verb. , can use paired t-tests multiple-hypothesis correction test significant differences cluster’s expression signaling markers stimulation conditions. output tof_analyze_expression() also depends underlying test used, can see result looks relatively similar output tof_analyze_abundance(). , output tibble row represents differential expression results single cluster-marker pair - example, first row represents difference expression pS6 cluster 1 BCR-XL Basal conditions. row includes raw p-value multiple-hypothesis-corrected p-value cluster-marker pair. result can used make volcano plot visualize results cluster-marker pairs:","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE)) {     install.packages(\"BiocManager\") }  BiocManager::install(\"HDCytoData\") citrus_raw <- HDCytoData::Bodenmiller_BCR_XL_flowSet()  citrus_data <-     citrus_raw |>     as_tof_tbl(sep = \"_\") citrus_metadata <-     tibble(         file_name = as.character(flowCore::pData(citrus_raw)[[1]]),         sample_id = seq_along(file_name),         patient = str_extract(file_name, \"patient[:digit:]\"),         stimulation = str_extract(file_name, \"(BCR-XL)|Reference\")     ) |>     mutate(         stimulation = if_else(stimulation == \"Reference\", \"Basal\", stimulation)     )  citrus_metadata |>     head() #> # A tibble: 6 × 4 #>   file_name                          sample_id patient  stimulation #>   <chr>                                  <int> <chr>    <chr>       #> 1 PBMC8_30min_patient1_BCR-XL.fcs            1 patient1 BCR-XL      #> 2 PBMC8_30min_patient1_Reference.fcs         2 patient1 Basal       #> 3 PBMC8_30min_patient2_BCR-XL.fcs            3 patient2 BCR-XL      #> 4 PBMC8_30min_patient2_Reference.fcs         4 patient2 Basal       #> 5 PBMC8_30min_patient3_BCR-XL.fcs            5 patient3 BCR-XL      #> 6 PBMC8_30min_patient3_Reference.fcs         6 patient3 Basal citrus_data <-     citrus_data |>     left_join(citrus_metadata, by = \"sample_id\") daa_result <-     citrus_data |>     tof_analyze_abundance(         cluster_col = population_id,         effect_col = stimulation,         group_cols = patient,         test_type = \"paired\",         method = \"ttest\"     )  daa_result #> # A tibble: 8 × 8 #>   population_id    p_val   p_adj significant      t    df mean_diff mean_fc #>   <chr>            <dbl>   <dbl> <chr>        <dbl> <dbl>     <dbl>   <dbl> #> 1 1             0.000924 0.00535 \"*\"         -5.48      7  -0.00743   0.644 #> 2 2             0.00623  0.0166  \"*\"         -3.86      7  -0.0156    0.674 #> 3 3             0.0235   0.0314  \"*\"         -2.88      7  -0.0638    0.849 #> 4 4             0.0235   0.0314  \"*\"          2.88      7   0.0832    1.38  #> 5 5             0.0116   0.0232  \"*\"          3.39      7   0.00246   1.08  #> 6 6             0.371    0.371   \"\"          -0.955     7  -0.0168    0.919 #> 7 7             0.00134  0.00535 \"*\"          5.14      7   0.0202    1.14  #> 8 8             0.236    0.270   \"\"          -1.30      7  -0.00228   0.901 plot_data <-     citrus_data |>     mutate(population_id = as.character(population_id)) |>     left_join(         select(daa_result, population_id, significant, mean_fc),         by = \"population_id\"     ) |>     dplyr::count(patient, stimulation, population_id, significant, mean_fc, name = \"n\") |>     group_by(patient, stimulation) |>     mutate(prop = n / sum(n)) |>     ungroup() |>     pivot_wider(         names_from = stimulation,         values_from = c(prop, n),     ) |>     mutate(         diff = `prop_BCR-XL` - prop_Basal,         fc = `prop_BCR-XL` / prop_Basal,         population_id = fct_reorder(population_id, diff),         direction =             case_when(                 mean_fc > 1 & significant == \"*\" ~ \"increase\",                 mean_fc < 1 & significant == \"*\" ~ \"decrease\",                 TRUE ~ NA_character_             )     )  significance_data <-     plot_data |>     group_by(population_id, significant, direction) |>     summarize(diff = max(diff), fc = max(fc)) |>     ungroup()  plot_data |>     ggplot(aes(x = population_id, y = fc, fill = direction)) +     geom_violin(trim = FALSE) +     geom_hline(yintercept = 1, color = \"red\", linetype = \"dotted\", size = 0.5) +     geom_point() +     geom_text(         aes(x = population_id, y = fc, label = significant),         data = significance_data,         size = 8,         nudge_x = 0.2,         nudge_y = 0.06     ) +     scale_x_discrete(labels = function(x) str_c(\"cluster \", x)) +     scale_fill_manual(         values = c(\"decrease\" = \"#cd5241\", \"increase\" = \"#207394\"),         na.translate = FALSE     ) +     labs(         x = NULL,         y = \"Abundance fold-change (stimulated / basal)\",         fill = \"Effect\",         caption = \"Asterisks indicate significance at an adjusted p-value of 0.05\"     ) signaling_markers <-     c(         \"pNFkB_Nd142\", \"pStat5_Nd150\", \"pAkt_Sm152\", \"pStat1_Eu153\", \"pStat3_Gd158\",         \"pSlp76_Dy164\", \"pBtk_Er166\", \"pErk_Er168\", \"pS6_Yb172\", \"pZap70_Gd156\"     )  dea_result <-     citrus_data |>     tof_preprocess(channel_cols = any_of(signaling_markers)) |>     tof_analyze_expression(         cluster_col = population_id,         marker_cols = any_of(signaling_markers),         effect_col = stimulation,         group_cols = patient,         test_type = \"paired\",         method = \"ttest\"     )  dea_result |>     head() #> # A tibble: 6 × 9 #>   population_id marker   p_val   p_adj significant     t    df mean_diff mean_fc #>   <chr>         <chr>    <dbl>   <dbl> <chr>       <dbl> <dbl>     <dbl>   <dbl> #> 1 1             pS6_Y… 7.58e-8 2.12e-6 *            22.9     7     2.56    4.31  #> 2 2             pS6_Y… 1.16e-7 2.12e-6 *            21.6     7     2.13    2.49  #> 3 3             pBtk_… 1.32e-7 2.12e-6 *           -21.2     7    -0.475   0.289 #> 4 7             pBtk_… 1.18e-7 2.12e-6 *           -21.5     7    -0.518   0.286 #> 5 8             pBtk_… 1.30e-7 2.12e-6 *           -21.2     7    -0.516   0.324 #> 6 4             pBtk_… 7.85e-7 1.05e-5 *           -16.3     7    -0.462   0.296 volcano_plot <-     dea_result |>     tof_plot_clusters_volcano(         use_ggrepel = TRUE     )  volcano_plot"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"analyzing-data-at-the-patient--and-sample-level","dir":"","previous_headings":"Usage","what":"Analyzing data at the patient- and sample-level","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"addition verbs operate single-cell data directly, tidytof implements functions aggregating single-cell measurements cluster- sample-level summary statistics can analyzed using variety statistical models.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"feature-extraction-with-tof_extract_features","dir":"","previous_headings":"Usage > Analyzing data at the patient- and sample-level","what":"Feature extraction with tof_extract_features","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"addition functions analyzing visualizing cytometry data single-cell cluster levels, tidytof’s tof_extract_features verb allows users aggregate single-cell cluster-level information order summarize whole-samples (whole-patients) cells collected. features can useful visualizing differences patients samples different experimental conditions building machine learning models. understand tof_extract_features verb works, ’s easiest look subroutines (members tof_extract_* function family) independently. First, tof_extract_proportion, extracts proportion cells cluster within sample (samples defined using group_cols argument): Like members tof_extract_* function family, tof_extract_proportion() returns one row sample (defined unique combination values group_cols) one column extracted feature (, one column proportion 8 clusters citrus_data). values can also returned “long” format changing format argument: Another member function family, tof_extract_central_tendency, computes central tendency (e.g. mean median) user-specified markers cluster. tof_extract_threshold similar tof_extract_central_tendency, calculates proportion cells user-specified expression value marker instead measure central tendency: two final members tof_extract_* function family – tof_extract_emd tof_extract_jsd designed specifically comparing distributions marker expression stimulation conditions. , must given stimulation_col identifies stimulation condition cell , basal_level specifies reference (.e. unstimulated) condition within stimulation_col. additional arguments, tof_extract_emd computes Earth-mover’s distance marker’s distribution stimulation conditions (within cluster) basal condition; similarly, tof_extract_jsd computes Jensen-Shannon divergence index distributions. values ways compare different 2 distributions one another computationally expensive (also higher-resolution) simply comparing measures central tendency. Finally, tof_extract_features verb provides wrapper members function family, allowing users extract multiple features types . example, following code extracts proportion cluster, median several markers cluster, EMD basal condition stimulated condition cluster patients citrus_data.","code":"# preprocess the numeric columns in the citrus dataset citrus_data <-     citrus_data |>     mutate(cluster = str_c(\"cluster\", population_id)) |>     tof_preprocess()  citrus_data |>     tof_extract_proportion(         cluster_col = cluster,         group_cols = c(patient, stimulation)     ) |>     head() #> # A tibble: 6 × 10 #>   patient  stimulation `prop@cluster1` `prop@cluster2` `prop@cluster3` #>   <chr>    <chr>                 <dbl>           <dbl>           <dbl> #> 1 patient1 Basal                0.0190          0.0482           0.447 #> 2 patient1 BCR-XL               0.0109          0.0395           0.268 #> 3 patient2 Basal                0.0130          0.0280           0.491 #> 4 patient2 BCR-XL               0.0101          0.0143           0.358 #> 5 patient3 Basal                0.0326          0.0830           0.397 #> 6 patient3 BCR-XL               0.0200          0.0412           0.323 #> # ℹ 5 more variables: `prop@cluster4` <dbl>, `prop@cluster5` <dbl>, #> #   `prop@cluster6` <dbl>, `prop@cluster7` <dbl>, `prop@cluster8` <dbl> citrus_data |>     tof_extract_proportion(         cluster_col = cluster,         group_cols = c(patient, stimulation),         format = \"long\"     ) |>     head() #> # A tibble: 6 × 4 #>   patient  stimulation cluster     prop #>   <chr>    <chr>       <chr>      <dbl> #> 1 patient1 Basal       cluster1 0.0190  #> 2 patient1 Basal       cluster2 0.0482  #> 3 patient1 Basal       cluster3 0.447   #> 4 patient1 Basal       cluster4 0.237   #> 5 patient1 Basal       cluster5 0.00219 #> 6 patient1 Basal       cluster6 0.0759 citrus_data |>     tof_extract_central_tendency(         cluster_col = cluster,         group_cols = c(patient, stimulation),         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         central_tendency_function = mean     ) |>     head() #> # A tibble: 6 × 26 #>   patient  stimulation `CD45_In115@cluster1_ct` `CD4_Nd145@cluster1_ct` #>   <chr>    <chr>                          <dbl>                   <dbl> #> 1 patient1 BCR-XL                          4.80                  0.0967 #> 2 patient1 Basal                           4.68                  0.765  #> 3 patient2 BCR-XL                          5.00                 -0.0579 #> 4 patient2 Basal                           4.88                  0.808  #> 5 patient3 BCR-XL                          5.04                 -0.0432 #> 6 patient3 Basal                           4.98                  0.745  #> # ℹ 22 more variables: `CD20_Sm147@cluster1_ct` <dbl>, #> #   `CD45_In115@cluster2_ct` <dbl>, `CD4_Nd145@cluster2_ct` <dbl>, #> #   `CD20_Sm147@cluster2_ct` <dbl>, `CD45_In115@cluster3_ct` <dbl>, #> #   `CD4_Nd145@cluster3_ct` <dbl>, `CD20_Sm147@cluster3_ct` <dbl>, #> #   `CD45_In115@cluster4_ct` <dbl>, `CD4_Nd145@cluster4_ct` <dbl>, #> #   `CD20_Sm147@cluster4_ct` <dbl>, `CD45_In115@cluster5_ct` <dbl>, #> #   `CD4_Nd145@cluster5_ct` <dbl>, `CD20_Sm147@cluster5_ct` <dbl>, … citrus_data |>     tof_extract_threshold(         cluster_col = cluster,         group_cols = c(patient, stimulation),         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         threshold = 5     ) |>     head() #> # A tibble: 6 × 26 #>   patient  stimulation `CD45_In115@cluster1_threshold` CD4_Nd145@cluster1_thre…¹ #>   <chr>    <chr>                                 <dbl>                     <dbl> #> 1 patient1 BCR-XL                                0.516                         0 #> 2 patient1 Basal                                 0.365                         0 #> 3 patient2 BCR-XL                                0.554                         0 #> 4 patient2 Basal                                 0.452                         0 #> 5 patient3 BCR-XL                                0.547                         0 #> 6 patient3 Basal                                 0.549                         0 #> # ℹ abbreviated name: ¹​`CD4_Nd145@cluster1_threshold` #> # ℹ 22 more variables: `CD20_Sm147@cluster1_threshold` <dbl>, #> #   `CD45_In115@cluster2_threshold` <dbl>, #> #   `CD4_Nd145@cluster2_threshold` <dbl>, #> #   `CD20_Sm147@cluster2_threshold` <dbl>, #> #   `CD45_In115@cluster3_threshold` <dbl>, #> #   `CD4_Nd145@cluster3_threshold` <dbl>, … # Earth-mover's distance citrus_data |>     tof_extract_emd(         cluster_col = cluster,         group_cols = patient,         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         emd_col = stimulation,         reference_level = \"Basal\"     ) |>     head() #> # A tibble: 6 × 25 #>   patient  BCR-XL_CD45_In115@clu…¹ BCR-XL_CD4_Nd145@clu…² BCR-XL_CD20_Sm147@cl…³ #>   <chr>                      <dbl>                  <dbl>                  <dbl> #> 1 patient1                   0.864                   2.47                  13.0  #> 2 patient2                   1.11                    7.05                  10.8  #> 3 patient3                   0.670                   6.23                  10.5  #> 4 patient4                   2.64                    5.86                   9.90 #> 5 patient5                   0.594                   7.56                   8.13 #> 6 patient6                   0.661                   4.77                   7.97 #> # ℹ abbreviated names: ¹​`BCR-XL_CD45_In115@cluster3_emd`, #> #   ²​`BCR-XL_CD4_Nd145@cluster3_emd`, ³​`BCR-XL_CD20_Sm147@cluster3_emd` #> # ℹ 21 more variables: `BCR-XL_CD45_In115@cluster7_emd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster7_emd` <dbl>, #> #   `BCR-XL_CD20_Sm147@cluster7_emd` <dbl>, #> #   `BCR-XL_CD45_In115@cluster4_emd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster4_emd` <dbl>, … # Jensen-Shannon Divergence citrus_data |>     tof_extract_jsd(         cluster_col = cluster,         group_cols = patient,         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         jsd_col = stimulation,         reference_level = \"Basal\"     ) |>     head() #> # A tibble: 6 × 25 #>   patient  BCR-XL_CD45_In115@clu…¹ BCR-XL_CD4_Nd145@clu…² BCR-XL_CD20_Sm147@cl…³ #>   <chr>                      <dbl>                  <dbl>                  <dbl> #> 1 patient1                 0.0367                  0.0513                  0.347 #> 2 patient2                 0.00831                 0.168                   0.401 #> 3 patient3                 0.0104                  0.115                   0.357 #> 4 patient4                 0.0301                  0.135                   0.205 #> 5 patient5                 0.00911                 0.0789                  0.274 #> 6 patient6                 0.00972                 0.0346                  0.214 #> # ℹ abbreviated names: ¹​`BCR-XL_CD45_In115@cluster3_jsd`, #> #   ²​`BCR-XL_CD4_Nd145@cluster3_jsd`, ³​`BCR-XL_CD20_Sm147@cluster3_jsd` #> # ℹ 21 more variables: `BCR-XL_CD45_In115@cluster7_jsd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster7_jsd` <dbl>, #> #   `BCR-XL_CD20_Sm147@cluster7_jsd` <dbl>, #> #   `BCR-XL_CD45_In115@cluster4_jsd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster4_jsd` <dbl>, … citrus_data |>     tof_extract_features(         cluster_col = cluster,         group_cols = patient,         stimulation_col = stimulation,         lineage_cols = any_of(c(\"CD45_In115\", \"CD20_Sm147\", \"CD33_Nd148\")),         signaling_cols = any_of(signaling_markers),         signaling_method = \"emd\",         basal_level = \"Basal\"     ) |>     head()"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"outcomes-modeling-with-tof_model","dir":"","previous_headings":"Usage > Analyzing data at the patient- and sample-level","what":"Outcomes modeling with tof_model","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"[brief intro building predictive models might motivated .] tidytof implements several functions building predictive models using sample- patient-level data. illustrate work, first download patient-level data paper combining sample-level clinical annotations one tidytof’s built-data objects (ddpr_metadata). data processing steps result ddpr_patients tibble. numeric columns ddpr_patients represent aggregated cell population features sample (see Supplementary Table 5 paper details). non-numeric columns represent clinical metadata sample (run ?ddpr_metadata information). also preprocessing steps might want perform now save us headaches ’re fitting models later.","code":"data(ddpr_metadata)  # link for downloading the sample-level data from the Nature Medicine website data_link <-     \"https://static-content.springer.com/esm/art%3A10.1038%2Fnm.4505/MediaObjects/41591_2018_BFnm4505_MOESM3_ESM.csv\"  # downloading the data and combining it with clinical annotations ddpr_patients <-     readr::read_csv(data_link, skip = 2L, n_max = 78L, show_col_types = FALSE) |>     dplyr::rename(patient_id = Patient_ID) |>     left_join(ddpr_metadata, by = \"patient_id\") |>     dplyr::filter(!str_detect(patient_id, \"Healthy\"))  ddpr_patients |>     select(where(~ !is.numeric(.x))) |>     head() #> # A tibble: 6 × 8 #>   patient_id gender mrd_risk nci_rome_risk relapse_status type_of_relapse cohort #>   <chr>      <chr>  <chr>    <chr>         <chr>          <chr>           <chr>  #> 1 UPN1       Male   Interme… Standard      Yes            Early           Train… #> 2 UPN1-Rx    Male   Interme… Standard      Yes            Early           Train… #> 3 UPN2       Male   Interme… Standard      No             <NA>            Train… #> 4 UPN3       Female Standard Standard      No             <NA>            Train… #> 5 UPN4       Male   Standard Standard      No             <NA>            Valid… #> 6 UPN5       Female Standard High          No             <NA>            Valid… #> # ℹ 1 more variable: ddpr_risk <chr> ddpr_patients <-     ddpr_patients |>     # convert the relapse_status variable to a factor first,     # which is something we'll want for fitting the model later     # and create the time_to_event and event columns for survival modeling     mutate(         relapse_status = as.factor(relapse_status),         time_to_event = if_else(relapse_status == \"Yes\", time_to_relapse, ccr),         event = if_else(relapse_status == \"Yes\", 1, 0)     )"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"separating-the-training-and-validation-cohorts","dir":"","previous_headings":"Usage > Analyzing data at the patient- and sample-level > Outcomes modeling with tof_model","what":"Separating the training and validation cohorts","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"original DDPR paper, patients used fit model rest used assess model tuned. can separate training validation cohorts using cohort variable ddpr_patients","code":"ddpr_training <-     ddpr_patients |>     dplyr::filter(cohort == \"Training\")  ddpr_validation <-     ddpr_patients |>     dplyr::filter(cohort == \"Validation\") nrow(ddpr_training) #> [1] 49  nrow(ddpr_validation) #> [1] 12"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"building-a-classifier-using-logistic-regression","dir":"","previous_headings":"Usage > Analyzing data at the patient- and sample-level > Outcomes modeling with tof_model","what":"Building a classifier using logistic regression","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"First, can build elastic net classifier predict patients relapse patients won’t (ignoring time--event data now). , can use relapse_status column ddpr_training outcome variable: Specifically, can use tof_split_data function split cohort training test set either (“simple” split) multiple times (using either k-fold cross-validation bootstrapping). case, use 5-fold cross-validation, reading documentation tof_split_data demonstrates use methods. output tof_split_data varies depending split_method used. cross-validation, result rset object rsample package. rset objects type tibble two columns: splits - column entry rsplit object (contains single resample full dataset) id - character column entry represents name fold entry splits belongs . can inspect one resamples splits column see contain: Note can use rsample::training rsample::testing return training test obeservations resampling: , can feed training_split tof_train_model function tune logistic regression model predicts relapse_status leukemia patient. sure check tof_create_grid documentation learn make hyperparameter search grid model tuning (case, limit mixture parameter value 1, fits sparse lasso model). Also note demonstration purposes, include features come one cell population (“Population 2”) original dataset, means probably shouldn’t expect model perform well one original paper (select many features). output tof_train_model tof_model, object containing information trained model (can passed tof_predict tof_assess_model verbs). tof_model printed, information optimal hyperparamters printed, table nonzero model coefficients model. can use trained model make predictions validation data set aside earlier: can see model gets (!) predictions correct validation set set aside. can also assess model directly using tof_assess_model can make ROC curve using metrics:  can assess model validation data…","code":"# find how many of each outcome we have in our cohort ddpr_training |>     dplyr::count(relapse_status) #> # A tibble: 2 × 2 #>   relapse_status     n #>   <fct>          <int> #> 1 No                31 #> 2 Yes               18 training_split <-     ddpr_training |>     tof_split_data(         split_method = \"k-fold\",         num_cv_folds = 5,         strata = relapse_status     )  training_split #> #  5-fold cross-validation using stratification  #> # A tibble: 5 × 2 #>   splits          id    #>   <list>          <chr> #> 1 <split [38/11]> Fold1 #> 2 <split [39/10]> Fold2 #> 3 <split [39/10]> Fold3 #> 4 <split [40/9]>  Fold4 #> 5 <split [40/9]>  Fold5 my_resample <- training_split$splits[[1]]  print(my_resample) #> <Analysis/Assess/Total> #> <38/11/49>  class(my_resample) #> [1] \"vfold_split\" \"rsplit\" my_resample |>     rsample::training() |>     head() #> # A tibble: 6 × 1,854 #>   patient_id Pop_P_Pop1 CD19_Pop1 CD20_Pop1 CD24_Pop1 CD34_Pop1 CD38_Pop1 #>   <chr>           <dbl>     <dbl>     <dbl>     <dbl>     <dbl>     <dbl> #> 1 UPN1          3.06       0.583   0.00449     0.164       1.94     0.416 #> 2 UPN1-Rx       0.0395     0.618   0.0634      0.572       2.93     0.944 #> 3 UPN3          0.633      0.0234  0.0165      0.0327      2.25     0.226 #> 4 UPN8          0.951      0.958   0.161       0.556       3.18     0.556 #> 5 UPN10         0.00374    0.761   0.000696    0.829       3.19     0.886 #> 6 UPN10-Rx      0.00240    0.167   0.203       0.802       2.57     0.822 #> # ℹ 1,847 more variables: CD127_Pop1 <dbl>, CD179a_Pop1 <dbl>, #> #   CD179b_Pop1 <dbl>, IgMi_Pop1 <dbl>, IgMs_Pop1 <dbl>, TdT_Pop1 <dbl>, #> #   CD22_Pop1 <dbl>, tIkaros_Pop1 <dbl>, CD79b_Pop1 <dbl>, Ki67_Pop1 <dbl>, #> #   TSLPr_Pop1 <dbl>, RAG1_Pop1 <dbl>, CD123_Pop1 <dbl>, CD45_Pop1 <dbl>, #> #   CD10_Pop1 <dbl>, Pax5_Pop1 <dbl>, CD43_Pop1 <dbl>, CD58_Pop1 <dbl>, #> #   HLADR_Pop1 <dbl>, p4EBP1_FC_Basal_Pop1 <dbl>, pSTAT5_FC_Basal_Pop1 <dbl>, #> #   pPLCg1_2_FC_Basal_Pop1 <dbl>, pAkt_FC_Basal_Pop1 <dbl>, …  my_resample |>     rsample::testing() |>     head() #> # A tibble: 6 × 1,854 #>   patient_id Pop_P_Pop1 CD19_Pop1 CD20_Pop1 CD24_Pop1 CD34_Pop1 CD38_Pop1 #>   <chr>           <dbl>     <dbl>     <dbl>     <dbl>     <dbl>     <dbl> #> 1 UPN2           0.139     0.0662   0.0221     0.0825      2.25     0.454 #> 2 UPN6           5.62      0.550    0.00374    0.622       2.86     0.342 #> 3 UPN7           0.474     0.966    0.124      1.24        2.59     0.243 #> 4 UPN9          15.6       0.446    0.0445     0.163       2.86     0.434 #> 5 UPN12          0.0565    0.185    0.0115     0.142       2.49     0.254 #> 6 UPN17          1.40      1.52     0.0128     0.284       3.46     0.656 #> # ℹ 1,847 more variables: CD127_Pop1 <dbl>, CD179a_Pop1 <dbl>, #> #   CD179b_Pop1 <dbl>, IgMi_Pop1 <dbl>, IgMs_Pop1 <dbl>, TdT_Pop1 <dbl>, #> #   CD22_Pop1 <dbl>, tIkaros_Pop1 <dbl>, CD79b_Pop1 <dbl>, Ki67_Pop1 <dbl>, #> #   TSLPr_Pop1 <dbl>, RAG1_Pop1 <dbl>, CD123_Pop1 <dbl>, CD45_Pop1 <dbl>, #> #   CD10_Pop1 <dbl>, Pax5_Pop1 <dbl>, CD43_Pop1 <dbl>, CD58_Pop1 <dbl>, #> #   HLADR_Pop1 <dbl>, p4EBP1_FC_Basal_Pop1 <dbl>, pSTAT5_FC_Basal_Pop1 <dbl>, #> #   pPLCg1_2_FC_Basal_Pop1 <dbl>, pAkt_FC_Basal_Pop1 <dbl>, … class_mod <-     training_split |>     tof_train_model(         predictor_cols = contains(\"Pop2\"),         response_col = relapse_status,         model_type = \"two-class\",         hyperparameter_grid = tof_create_grid(mixture_values = 1),         impute_missing_predictors = TRUE,         remove_zv_predictors = TRUE # often a smart decision     ) print(class_mod) #> A two-class `tof_model` with a mixture parameter (alpha) of 1 and a penalty parameter (lambda) of 1e-05  #> # A tibble: 25 × 2 #>    feature             coefficient #>    <chr>                     <dbl> #>  1 p4EBP1_dP_IL7_Pop2        -2.59 #>  2 CD58_Pop2                  2.23 #>  3 (Intercept)               -1.83 #>  4 pSTAT5_dP_TSLP_Pop2        1.69 #>  5 p4EBP1_FC_IL7_Pop2         1.46 #>  6 CD43_Pop2                  1.37 #>  7 HLADR_Pop2                -1.32 #>  8 pSyk_dP_TSLP_Pop2          1.08 #>  9 pErk_dP_IL7_Pop2          -1.05 #> 10 Ki67_Pop2                 -1.05 #> # ℹ 15 more rows class_predictions <-     class_mod |>     tof_predict(new_data = ddpr_validation, prediction_type = \"class\")  class_predictions |>     dplyr::mutate(         truth = ddpr_validation$relapse_status     ) #> # A tibble: 12 × 2 #>    .pred truth #>    <chr> <fct> #>  1 Yes   No    #>  2 No    No    #>  3 No    Yes   #>  4 No    No    #>  5 No    No    #>  6 Yes   Yes   #>  7 Yes   Yes   #>  8 No    No    #>  9 No    No    #> 10 No    Yes   #> 11 No    Yes   #> 12 No    Yes # calling the function with no new_data evaluates the # the nodel using its training data training_assessment <-     class_mod |>     tof_assess_model()  training_assessment #> $model_metrics #> # A tibble: 6 × 2 #>   metric                    value #>   <chr>                     <dbl> #> 1 binomial_deviance       0.0291  #> 2 misclassification_error 0       #> 3 roc_auc                 1       #> 4 mse                     0.00119 #> 5 mae                     0.0285  #> 6 accuracy                1       #>  #> $roc_curve #> # A tibble: 51 × 5 #>       .threshold specificity sensitivity   tpr   fpr #>            <dbl>       <dbl>       <dbl> <dbl> <dbl> #>  1 -Inf               0                1     1 1     #>  2    0.00000114      0                1     1 1     #>  3    0.0000955       0.0323           1     1 0.968 #>  4    0.000160        0.0645           1     1 0.935 #>  5    0.000190        0.0968           1     1 0.903 #>  6    0.000612        0.129            1     1 0.871 #>  7    0.000896        0.161            1     1 0.839 #>  8    0.00135         0.194            1     1 0.806 #>  9    0.00142         0.226            1     1 0.774 #> 10    0.00194         0.258            1     1 0.742 #> # ℹ 41 more rows #>  #> $confusion_matrix #> # A tibble: 4 × 3 #>   true_outcome predicted_outcome num_observations #>   <chr>        <chr>                        <int> #> 1 No           No                              31 #> 2 No           Yes                              0 #> 3 Yes          No                               0 #> 4 Yes          Yes                             18 class_mod |>     tof_plot_model() +     labs(subtitle = \"ROC Curve (Training data)\") validation_assessment <-     class_mod |>     tof_assess_model(new_data = ddpr_validation)  validation_assessment #> $model_metrics #> # A tibble: 6 × 2 #>   metric                  value #>   <chr>                   <dbl> #> 1 binomial_deviance       4.75  #> 2 misclassification_error 0.417 #> 3 roc_auc                 0.639 #> 4 mse                     0.759 #> 5 mae                     0.879 #> 6 accuracy                0.583 #>  #> $roc_curve #> # A tibble: 14 × 5 #>     .threshold specificity sensitivity   tpr   fpr #>          <dbl>       <dbl>       <dbl> <dbl> <dbl> #>  1 -Inf              0           1     1     1     #>  2    0.000240       0           1     1     1     #>  3    0.00105        0.167       1     1     0.833 #>  4    0.00195        0.167       0.833 0.833 0.833 #>  5    0.00230        0.333       0.833 0.833 0.667 #>  6    0.00472        0.5         0.833 0.833 0.5   #>  7    0.00618        0.667       0.833 0.833 0.333 #>  8    0.0464         0.667       0.667 0.667 0.333 #>  9    0.273          0.667       0.5   0.5   0.333 #> 10    0.286          0.667       0.333 0.333 0.333 #> 11    0.844          0.833       0.333 0.333 0.167 #> 12    0.852          0.833       0.167 0.167 0.167 #> 13    1.00           0.833       0     0     0.167 #> 14  Inf              1           0     0     0     #>  #> $confusion_matrix #> # A tibble: 4 × 3 #>   true_outcome predicted_outcome num_observations #>   <chr>        <chr>                        <int> #> 1 No           No                               5 #> 2 No           Yes                              1 #> 3 Yes          No                               4 #> 4 Yes          Yes                              2 class_mod |>     tof_plot_model(new_data = ddpr_validation) +     labs(subtitle = \"ROC Curve (Validation data)\")"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"tidytofs-design-principles-and-some-tips","dir":"","previous_headings":"","what":"{tidytof}’s Design Principles (and some tips)","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"{tidytof} designed multidisciplinary team wet-lab biologists, bioinformaticians, physician-scientists analyze cytometry kinds single-cell data solve variety problems. result, tidytof’s high-level API designed great care mirror tidyverse - , human-centered, consistent, composable, inclusive wide userbase. section, describe miscellaneous design decisions tips using tidytof may help enthusiastic user.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"id_1-use-the-tof_-prefix-to-your-advantage","dir":"","previous_headings":"{tidytof}’s Design Principles (and some tips)","what":"1. Use the tof_ prefix to your advantage.","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"may notice tidytof functions begin prefix tof_. intentional, allow use development environment’s code-completing software search functions easily (even don’t remember function name). reason, recommend using tidytof within RStudio development environment; however, many code editors predictive text functionality serves similar function. general, tidytof verbs organized way IDE’s code-completion tools also allow search (compare) related functions relative ease. (instance, tof_cluster_ prefix used clustering functions, tof_downsample_ prefix used downsampling functions).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"id_2-tidytof-functions-use-2-kinds-of-arguments","dir":"","previous_headings":"{tidytof}’s Design Principles (and some tips)","what":"2. {tidytof} functions use 2 kinds of arguments","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"tidytof functions optimized working “tidy” data form tibbles data.frames. means tidytof functions share basic design principles terms arguments work. details design principles, check Getting Started tidytof vignette","code":""},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"id_3-use-tidytof-to-write-human-readable-pipelines","dir":"","previous_headings":"{tidytof}’s Design Principles (and some tips)","what":"3. Use {tidytof} to write human-readable pipelines","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"real “magic” tidytof derives ability simplify multistep data-processing tasks simple readable chunk code. example, suppose just acquired .fcs files mass cytometer want perform following analysis: Read .fcs files R session Arcsinh-transform column protein measurements Cluster cells based surface markers panel Downsample dataset 100 random cells picked cluster Perform dimensionality reduction downsampled dataset using tSNE Visualize clusters using low-dimensional tSNE embedding using appropriate tidytof verbs step analysis, can easily write code function call corresponds exactly one step pipeline:  shown , stringing together tidytof verbs creates pipeline can read easily left--right top--bottom – means relatively easy return code later (modify , write methods section next high-impact manuscript!) , perhaps importantly, one colleagues return later want recreate analysis.","code":"input_path <- tidytof_example_data(\"phenograph\")  set.seed(0012)  input_path |>     # step 1     tof_read_data() |>     # step 2     tof_preprocess() |>     # step 3     tof_cluster(method = \"phenograph\") |>     # step 4     tof_downsample(         group_cols = .phenograph_cluster,         num_cells = 100,         method = \"constant\"     ) |>     # step 5     tof_reduce_dimensions(perplexity = 50, method = \"tsne\") |>     # step 6     tof_plot_cells_embedding(         embedding_cols = starts_with(\".tsne\"),         color_col = .phenograph_cluster     )"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"id_4-additional-resources","dir":"","previous_headings":"{tidytof}’s Design Principles (and some tips)","what":"4. Additional resources","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"tidytof built top tidyverse family R packages. result, users tidytof benefit substantially spending hours dplyr, ggplot2, tidyr package vignettes learn many useful functions packages provide. access recommended list package vignettes, run following lines R code console:","code":"# dplyr vignette(topic = \"dplyr\", package = \"dplyr\") vignette(topic = \"grouping\", package = \"dplyr\") vignette(topic = \"colwise\", package = \"dplyr\")  # ggplot2 vignette(topic = \"ggplot2-specs\", package = \"ggplot2\")  # tidyr vignette(topic = \"tidy-data\", package = \"tidyr\") vignette(topic = \"nest\", package = \"tidyr\")"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_SingleCellExperiment.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce an object into a SingleCellExperiment — as_SingleCellExperiment","title":"Coerce an object into a SingleCellExperiment — as_SingleCellExperiment","text":"Coerce object SingleCellExperiment Coerce tof_tbl SingleCellExperiment","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_SingleCellExperiment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce an object into a SingleCellExperiment — as_SingleCellExperiment","text":"","code":"as_SingleCellExperiment(x, ...)  # S3 method for tof_tbl as_SingleCellExperiment(   x,   channel_cols = where(tof_is_numeric),   reduced_dimensions_cols,   metadata_cols = where(function(.x) !tof_is_numeric(.x)),   split_reduced_dimensions = FALSE,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_SingleCellExperiment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce an object into a SingleCellExperiment — as_SingleCellExperiment","text":"x tof_tbl ... Unused. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. nothing specified, default numeric columns. reduced_dimensions_cols Unquoted column names representing columns contain dimensionality reduction embeddings, tSNE UMAP embeddings. Supports tidyselect helpers. metadata_cols Unquoted column names representing columns contain metadata samples cell collected. nothing specified, default non-numeric columns. split_reduced_dimensions boolean value indicating whether dimensionality results x split separate slots resulting SingleCellExperiment. FALSE (default), split performed reducedDims slot result single entry (\"tidytof_reduced_dimensions\"). TRUE, split performed reducedDims slot result 1-4 entries depending dimensionality reduction results present x (\"tidytof_pca\", \"tidytof_tsne\", \"tidytof_umap\", \"tidytof_reduced_dimensions\"). Note \"tidytof_reduced_dimensions\" include dimensionality reduction results named according tidytof's pca, umap, tsne conventions.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_SingleCellExperiment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce an object into a SingleCellExperiment — as_SingleCellExperiment","text":"SingleCellExperiment SingleCellExperiment.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_SingleCellExperiment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce an object into a SingleCellExperiment — as_SingleCellExperiment","text":"","code":"NULL #> NULL  NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce an object into a flowFrame — as_flowFrame","title":"Coerce an object into a flowFrame — as_flowFrame","text":"Coerce object flowFrame Coerce tof_tbl flowFrame","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowFrame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce an object into a flowFrame — as_flowFrame","text":"","code":"as_flowFrame(x, ...)  # S3 method for tof_tbl as_flowFrame(x, ...)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowFrame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce an object into a flowFrame — as_flowFrame","text":"x tof_tbl. ... Unused.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowFrame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce an object into a flowFrame — as_flowFrame","text":"flowFrame flowFrame. Note non-numeric columns `x` removed.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowFrame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce an object into a flowFrame — as_flowFrame","text":"","code":"NULL #> NULL  NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce an object into a flowSet — as_flowSet","title":"Coerce an object into a flowSet — as_flowSet","text":"Coerce object flowSet Coerce tof_tbl flowSet","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce an object into a flowSet — as_flowSet","text":"","code":"as_flowSet(x, ...)  # S3 method for tof_tbl as_flowSet(x, group_cols, ...)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce an object into a flowSet — as_flowSet","text":"x tof_tbl. ... Unused. group_cols Unquoted names columns `x` used group cells separate flowFrames. Supports tidyselect helpers. Defaults NULL (cells written single flowFrame).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce an object into a flowSet — as_flowSet","text":"flowSet flowSet. Note non-numeric columns `x` removed.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowSet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce an object into a flowSet — as_flowSet","text":"","code":"NULL #> NULL  NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_seurat.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce an object into a SeuratObject — as_seurat","title":"Coerce an object into a SeuratObject — as_seurat","text":"Coerce object SeuratObject Coerce tof_tbl SeuratObject","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_seurat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce an object into a SeuratObject — as_seurat","text":"","code":"as_seurat(x, ...)  # S3 method for tof_tbl as_seurat(   x,   channel_cols = where(tof_is_numeric),   reduced_dimensions_cols,   metadata_cols = where(function(.x) !tof_is_numeric(.x)),   split_reduced_dimensions = FALSE,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_seurat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce an object into a SeuratObject — as_seurat","text":"x tof_tbl ... Unused. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. nothing specified, default numeric columns. reduced_dimensions_cols Unquoted column names representing columns contain dimensionality reduction embeddings, tSNE UMAP embeddings. Supports tidyselect helpers. metadata_cols Unquoted column names representing columns contain metadata samples cell collected. nothing specified, default non-numeric columns. split_reduced_dimensions boolean value indicating whether dimensionality results x split separate slots resulting SingleCellExperiment. FALSE (default), split performed reducedDims slot result single entry (\"tidytof_reduced_dimensions\"). TRUE, split performed reducedDims slot result 1-4 entries depending dimensionality reduction results present x (\"tidytof_pca\", \"tidytof_tsne\", \"tidytof_umap\", \"tidytof_reduced_dimensions\"). Note \"tidytof_reduced_dimensions\" include dimensionality reduction results named according tidytof's pca, umap, tsne conventions.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_seurat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce an object into a SeuratObject — as_seurat","text":"SeuratObject SeuratObject.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_seurat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce an object into a SeuratObject — as_seurat","text":"","code":"NULL #> NULL  NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.flowSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an object into a tof_tbl — as_tof_tbl.flowSet","title":"Convert an object into a tof_tbl — as_tof_tbl.flowSet","text":"Convert object tof_tbl","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.flowSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an object into a tof_tbl — as_tof_tbl.flowSet","text":"","code":"# S3 method for flowSet as_tof_tbl(flow_data, sep = \"|\")"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.flowSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an object into a tof_tbl — as_tof_tbl.flowSet","text":"flow_data FlowSet sep string use separate antigen name associated metal column names output tibble. Defaults \"|\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.flowSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert an object into a tof_tbl — as_tof_tbl.flowSet","text":"`tof_tbl`","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce flowFrames or flowSets into tof_tbl's. — as_tof_tbl","title":"Coerce flowFrames or flowSets into tof_tbl's. — as_tof_tbl","text":"Coerce flowFrames flowSets tof_tbl's.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce flowFrames or flowSets into tof_tbl's. — as_tof_tbl","text":"","code":"as_tof_tbl(flow_data, sep = \"|\")"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce flowFrames or flowSets into tof_tbl's. — as_tof_tbl","text":"flow_data flowFrame flowSet sep string indicating symbol used separate antigen names metal names columns output tof_tbl.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce flowFrames or flowSets into tof_tbl's. — as_tof_tbl","text":"tof_tbl.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce flowFrames or flowSets into tof_tbl's. — as_tof_tbl","text":"","code":"input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]]  input_flowframe <- flowCore::read.FCS(input_file)  tof_tibble <- as_tof_tbl(input_flowframe)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/cosine_similarity.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the cosine similarity between two vectors — cosine_similarity","title":"Find the cosine similarity between two vectors — cosine_similarity","text":"Find cosine similarity two vectors","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/cosine_similarity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the cosine similarity between two vectors — cosine_similarity","text":"","code":"cosine_similarity(x, y)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/cosine_similarity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the cosine similarity between two vectors — cosine_similarity","text":"x numeric vector y numeric vector","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/cosine_similarity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the cosine similarity between two vectors — cosine_similarity","text":"scalar value representing cosine similarity x y","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_data.html","id":null,"dir":"Reference","previous_headings":"","what":"CyTOF data from two samples: 5,000 B-cell lineage cells from a healthy\npatient and 5,000 B-cell lineage cells from a B-cell precursor Acute\nLymphoblastic Leukemia (BCP-ALL) patient. — ddpr_data","title":"CyTOF data from two samples: 5,000 B-cell lineage cells from a healthy\npatient and 5,000 B-cell lineage cells from a B-cell precursor Acute\nLymphoblastic Leukemia (BCP-ALL) patient. — ddpr_data","text":"dataset containing CyTOF measurements immune cells originally studied following paper:   Good Z, Sarno J, et al. Single-cell developmental classification B cell precursor acute lymphoblastic leukemia diagnosis reveals predictors relapse. Nat Med. 2018 May;24(4):474-483. doi: 10.1038/nm.4505. Epub 2018 Mar 5. PMID: 29505032; PMCID: PMC5953207.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CyTOF data from two samples: 5,000 B-cell lineage cells from a healthy\npatient and 5,000 B-cell lineage cells from a B-cell precursor Acute\nLymphoblastic Leukemia (BCP-ALL) patient. — ddpr_data","text":"","code":"data(ddpr_data)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"CyTOF data from two samples: 5,000 B-cell lineage cells from a healthy\npatient and 5,000 B-cell lineage cells from a B-cell precursor Acute\nLymphoblastic Leukemia (BCP-ALL) patient. — ddpr_data","text":"data frame 10000 rows 24 variables: sample_name name sample data read cd45 CyTOF measurement raw ion counts cd19 CyTOF measurement raw ion counts cd22 CyTOF measurement raw ion counts cd79b CyTOF measurement raw ion counts cd20 CyTOF measurement raw ion counts cd34 CyTOF measurement raw ion counts cd123 CyTOF measurement raw ion counts cd10 CyTOF measurement raw ion counts cd24 CyTOF measurement raw ion counts cd127 CyTOF measurement raw ion counts cd43 CyTOF measurement raw ion counts cd38 CyTOF measurement raw ion counts cd58 CyTOF measurement raw ion counts psyk CyTOF measurement raw ion counts p4ebp1 CyTOF measurement raw ion counts pstat5 CyTOF measurement raw ion counts pakt CyTOF measurement raw ion counts ps6 CyTOF measurement raw ion counts perk CyTOF measurement raw ion counts pcreb CyTOF measurement raw ion counts","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"CyTOF data from two samples: 5,000 B-cell lineage cells from a healthy\npatient and 5,000 B-cell lineage cells from a B-cell precursor Acute\nLymphoblastic Leukemia (BCP-ALL) patient. — ddpr_data","text":"https://github.com/kara-davis-lab/DDPR","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CyTOF data from two samples: 5,000 B-cell lineage cells from a healthy\npatient and 5,000 B-cell lineage cells from a B-cell precursor Acute\nLymphoblastic Leukemia (BCP-ALL) patient. — ddpr_data","text":"data.frame","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Clinical metadata for each patient sample in Good & Sarno et al. (2018). — ddpr_metadata","title":"Clinical metadata for each patient sample in Good & Sarno et al. (2018). — ddpr_metadata","text":"dataset containing patient-level clinical metadata samples originally studied following paper:  Good Z, Sarno J, et al. Single-cell developmental classification B cell precursor acute lymphoblastic leukemia diagnosis reveals predictors relapse. Nat Med. 2018 May;24(4):474-483. doi: 10.1038/nm.4505. Epub 2018 Mar 5. PMID: 29505032; PMCID: PMC5953207.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clinical metadata for each patient sample in Good & Sarno et al. (2018). — ddpr_metadata","text":"","code":"data(ddpr_metadata)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_metadata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Clinical metadata for each patient sample in Good & Sarno et al. (2018). — ddpr_metadata","text":"data frame 10000 rows 12 variables: patient_id Name sample data read gender Gender patient sample collected age_at_diagnosis Age (years) patient sample collected wbc_count diagnostic White Blood Cell (WBC) count patient sample collected mrd_risk Risk stratification category patient using minimal residual disease (MRD) criteria nci_rome_risk Risk stratification category patient using National Cancer Institute (NCI) criteria relapse_status string representing whether patient relapsed time_to_relapse time (days) took patient relapse. Patients relapse value NA type_of_relapse string representing timing relapse patient.   \"early\" relapses occurred less 18 months diagnosis;   \"Early\" relapses occurred 18 months 32 months diagnosis;   \"Late\" relapses occurred later 32 months diagnosis. ccr number documented days continuous complete remission (CCR) patients relapse. patients relapsed value NA. cohort string representing sample used \"Training\" \"Validation\" cohort original study ddpr_risk risk category (\"Low\" \"High\") assigned sample using original paper's risk-stratification algorithm","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_metadata.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Clinical metadata for each patient sample in Good & Sarno et al. (2018). — ddpr_metadata","text":"Good Z, Sarno J, et al. Single-cell developmental classification B cell precursor acute lymphoblastic leukemia diagnosis reveals predictors relapse. Nat Med. 2018 May;24(4):474-483. doi: 10.1038/nm.4505. Epub 2018 Mar 5. PMID: 29505032; PMCID: PMC5953207. Supplementary Table 1.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clinical metadata for each patient sample in Good & Sarno et al. (2018). — ddpr_metadata","text":"data.frame","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/dot.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the dot product between two vectors. — dot","title":"Find the dot product between two vectors. — dot","text":"Find dot product two vectors.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/dot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the dot product between two vectors. — dot","text":"","code":"dot(x, y)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/dot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the dot product between two vectors. — dot","text":"x numeric vector. y numeric vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/dot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the dot product between two vectors. — dot","text":"dot product x y.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/get_extension.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the extension for a file — get_extension","title":"Find the extension for a file — get_extension","text":"Find extension file","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/get_extension.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the extension for a file — get_extension","text":"","code":"get_extension(filename)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/get_extension.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the extension for a file — get_extension","text":"filename string representing name file local directory","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/get_extension.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the extension for a file — get_extension","text":"file extension `filename`","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/l2_normalize.html","id":null,"dir":"Reference","previous_headings":"","what":"L2 normalize an input vector x to a length of 1 — l2_normalize","title":"L2 normalize an input vector x to a length of 1 — l2_normalize","text":"L2 normalize input vector x length 1","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/l2_normalize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"L2 normalize an input vector x to a length of 1 — l2_normalize","text":"","code":"l2_normalize(x)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/l2_normalize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"L2 normalize an input vector x to a length of 1 — l2_normalize","text":"x numeric vector","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/l2_normalize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"L2 normalize an input vector x to a length of 1 — l2_normalize","text":"vector length length(x) magnitude 1","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/magnitude.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the magnitude of a vector. — magnitude","title":"Find the magnitude of a vector. — magnitude","text":"Find magnitude vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/magnitude.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the magnitude of a vector. — magnitude","text":"","code":"magnitude(x)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/magnitude.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the magnitude of a vector. — magnitude","text":"x numeric vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/magnitude.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the magnitude of a vector. — magnitude","text":"scalar value (magnitude x).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/make_flowcore_annotated_data_frame.html","id":null,"dir":"Reference","previous_headings":"","what":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","title":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","text":"Make AnnotatedDataFrame needed flowFrame class","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/make_flowcore_annotated_data_frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","text":"","code":"make_flowcore_annotated_data_frame(maxes_and_mins)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/make_flowcore_annotated_data_frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","text":"maxes_and_mins data.frame containing information max min values channel saved flowFrame.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/make_flowcore_annotated_data_frame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","text":"AnnotatedDataFrame.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/make_flowcore_annotated_data_frame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/metal_masterlist.html","id":null,"dir":"Reference","previous_headings":"","what":"A character vector of metal name patterns supported by tidytof. — metal_masterlist","title":"A character vector of metal name patterns supported by tidytof. — metal_masterlist","text":"character vector used `tof_read_fcs` `tof_read_data` detect parse CyTOF metals correspond channel input .fcs file.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/metal_masterlist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A character vector of metal name patterns supported by tidytof. — metal_masterlist","text":"","code":"data(metal_masterlist)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/metal_masterlist.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A character vector of metal name patterns supported by tidytof. — metal_masterlist","text":"character vector entry pattern tidytof searches every CyTOF channel input .fcs files. patterns amalgamate example .fcs files sampled studies linked .","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/metal_masterlist.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"A character vector of metal name patterns supported by tidytof. — metal_masterlist","text":"https://github.com/kara-davis-lab/DDPR https://cytobank.org/nolanlab/reports/Levine2015.html https://cytobank.org/nolanlab/reports/Spitzer2015.html https://cytobank.org/nolanlab/reports/Spitzer2017.html https://community.cytobank.org/cytobank/projects/609","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/metal_masterlist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A character vector of metal name patterns supported by tidytof. — metal_masterlist","text":"named character vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor for a tof_model. — new_tof_model","title":"Constructor for a tof_model. — new_tof_model","text":"Constructor tof_model.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor for a tof_model. — new_tof_model","text":"","code":"new_tof_model(   model,   recipe,   penalty,   mixture,   model_type = c(\"linear\", \"two-class\", \"multiclass\", \"survival\"),   outcome_colnames,   training_data )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor for a tof_model. — new_tof_model","text":"model glmnet model. recipe prepped recipe object. penalty double indicating lambda value used within glmnet path. mixture double indicating alpha value used fit glmnet model. model_type string indicating type glmnet model fit. outcome_colnames training_data ","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructor for a tof_model. — new_tof_model","text":"`tof_model`, S3 class includes trained glmnet model recipe used perform associated preprocessing.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor for a tof_tibble. — new_tof_tibble","title":"Constructor for a tof_tibble. — new_tof_tibble","text":"Constructor tof_tibble.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor for a tof_tibble. — new_tof_tibble","text":"","code":"new_tof_tibble(x = dplyr::tibble(), panel = dplyr::tibble())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor for a tof_tibble. — new_tof_tibble","text":"x data.frame tibble containing single-cell mass cytometry data rows cells columns CyTOF measurements. panel data.frame tibble containing information panel mass cytometry data x.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_tibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructor for a tof_tibble. — new_tof_tibble","text":"`tof_tbl`, tibble extension tracks attributes useful CyTOF data analysis.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/phenograph_data.html","id":null,"dir":"Reference","previous_headings":"","what":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","title":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","text":"dataset containing CyTOF measurements healthy control cells originally studied following paper:   Levine JH, Simonds EF, et al. Data-Driven Phenotypic Dissection AML Reveals Progenitor-like Cells Correlate Prognosis. Cell. 2015 Jul 2;162(1):184-97. doi: 10.1016/j.cell.2015.05.047. Epub 2015 Jun 18. PMID: 26095251; PMCID: PMC4508757.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/phenograph_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","text":"","code":"data(phenograph_data)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/phenograph_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","text":"data frame 6000 rows 26 variables: sample_name Name sample data read phenograph_cluster Numeric ID cluster assignment row cd19 CyTOF measurement raw ion counts cd11b CyTOF measurement raw ion counts cd34 CyTOF measurement raw ion counts cd45 CyTOF measurement raw ion counts cd123 CyTOF measurement raw ion counts cd33 CyTOF measurement raw ion counts cd47 CyTOF measurement raw ion counts cd7 CyTOF measurement raw ion counts cd44 CyTOF measurement raw ion counts cd38 CyTOF measurement raw ion counts cd3 CyTOF measurement raw ion counts cd117 CyTOF measurement raw ion counts cd64 CyTOF measurement raw ion counts cd41 CyTOF measurement raw ion counts pstat3 CyTOF measurement raw ion counts pstat5 CyTOF measurement raw ion counts pampk CyTOF measurement raw ion counts p4ebp1 CyTOF measurement raw ion counts ps6 CyTOF measurement raw ion counts pcreb CyTOF measurement raw ion counts pzap70-syk CyTOF measurement raw ion counts prb CyTOF measurement raw ion counts perk1-2 CyTOF measurement raw ion counts","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/phenograph_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","text":"https://cytobank.org/nolanlab/reports/Levine2015.html","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/phenograph_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","text":"data.frame","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/phenograph_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","text":"2000 cells 3 clusters identified original paper sampled.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. dplyr %>% rlang :=, .data tidyselect all_of, any_of, contains, ends_with, everything, last_col, matches, num_range, starts_with","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/reexports.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Objects exported from other packages — reexports","text":"See documentation object's original package.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/reexports.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Objects exported from other packages — reexports","text":"","code":"# See examples in each object's original package NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/rev_asinh.html","id":null,"dir":"Reference","previous_headings":"","what":"Reverses arcsinh transformation with cofactor `scale_factor` and a\nshift of `shift_factor`. — rev_asinh","title":"Reverses arcsinh transformation with cofactor `scale_factor` and a\nshift of `shift_factor`. — rev_asinh","text":"Reverses arcsinh transformation cofactor `scale_factor` shift `shift_factor`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/rev_asinh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reverses arcsinh transformation with cofactor `scale_factor` and a\nshift of `shift_factor`. — rev_asinh","text":"","code":"rev_asinh(x, shift_factor, scale_factor)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/rev_asinh.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reverses arcsinh transformation with cofactor `scale_factor` and a\nshift of `shift_factor`. — rev_asinh","text":"x numeric vector. shift_factor scalar value `` following equation used transform high-dimensional cytometry raw data ion counts using hyperbolic arcsinh function:    `new_x <- asinh(+ b * x)`. scale_factor scalar value `b` following equation used transform high-dimensional cytometry raw data ion counts using hyperbolic arcsinh function:    `new_x <- asinh(+ b * x)`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/rev_asinh.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reverses arcsinh transformation with cofactor `scale_factor` and a\nshift of `shift_factor`. — rev_asinh","text":"numeric vector undergoing reverse arcsinh transformation","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/rev_asinh.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reverses arcsinh transformation with cofactor `scale_factor` and a\nshift of `shift_factor`. — rev_asinh","text":"","code":"shift_factor <- 0 scale_factor <- 1 / 5  input_value <- 20 asinh_value <- asinh(shift_factor + input_value * scale_factor)  restored_value <- rev_asinh(asinh_value, shift_factor, scale_factor)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tidytof_example_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get paths to tidytof example data — tidytof_example_data","title":"Get paths to tidytof example data — tidytof_example_data","text":"tidytof comes bundled number sample .fcs files inst/extdata directory. function makes easy access.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tidytof_example_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get paths to tidytof example data — tidytof_example_data","text":"","code":"tidytof_example_data(dataset_name = NULL)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tidytof_example_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get paths to tidytof example data — tidytof_example_data","text":"dataset_name Name dataset want access. NULL, names datasets (different study) listed.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tidytof_example_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get paths to tidytof example data — tidytof_example_data","text":"character vector file paths requested .fcs files located. `dataset_name` NULL, character vector dataset names (can used values `dataset_name`) returned instead.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tidytof_example_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get paths to tidytof example data — tidytof_example_data","text":"","code":"tidytof_example_data() #> [1] \"aml\"               \"ddpr\"              \"ddpr_metadata.csv\" #> [4] \"mix\"               \"mix2\"              \"phenograph\"        #> [7] \"phenograph_csv\"    \"surgery\"           tidytof_example_data(dataset_name = \"phenograph\") #> [1] \"/home/runner/work/_temp/Library/tidytof/extdata/phenograph\""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Differential Abundance Analysis (DAA) on high-dimensional cytometry data — tof_analyze_abundance","title":"Perform Differential Abundance Analysis (DAA) on high-dimensional cytometry data — tof_analyze_abundance","text":"function performs differential abundance analysis cell clusters contained within `tof_tbl` using one three methods (\"diffcyt\", \"glmm\", \"ttest\"). wraps members `tof_analyze_abundance_*` function family: tof_analyze_abundance_diffcyt, tof_analyze_abundance_glmm, tof_analyze_abundance_ttest.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Differential Abundance Analysis (DAA) on high-dimensional cytometry data — tof_analyze_abundance","text":"","code":"tof_analyze_abundance(tof_tibble, method = c(\"diffcyt\", \"glmm\", \"ttest\"), ...)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Differential Abundance Analysis (DAA) on high-dimensional cytometry data — tof_analyze_abundance","text":"tof_tibble `tof_tbl` `tibble`. method string indicating statistical method used. Valid values include \"diffcyt\", \"glmm\", \"ttest\". ... Additional arguments pass onto `tof_analyze_abundance_*` function family member corresponding chosen method.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform Differential Abundance Analysis (DAA) on high-dimensional cytometry data — tof_analyze_abundance","text":"tibble nested tibble containing differential abundance results chosen method. See tof_analyze_abundance_diffcyt, tof_analyze_abundance_glmm, tof_analyze_abundance_ttest details.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform Differential Abundance Analysis (DAA) on high-dimensional cytometry data — tof_analyze_abundance","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_diffcyt.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","title":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","text":"function performs differential abundance analysis cell clusters contained within `tof_tbl` using one three methods implemented diffcyt package differential discovery analysis high-dimensional cytometry data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_diffcyt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","text":"","code":"tof_analyze_abundance_diffcyt(   tof_tibble,   sample_col,   cluster_col,   fixed_effect_cols,   random_effect_cols,   diffcyt_method = c(\"glmm\", \"edgeR\", \"voom\"),   include_observation_level_random_effects = FALSE,   min_cells = 3,   min_samples = 5,   alpha = 0.05,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_diffcyt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","text":"tof_tibble `tof_tbl` `tibble`. sample_col unquoted column name indicating column `tof_tibble` represents id sample cell collected. `sample_col` serve unique identifier sample collected data acquisition - cells value `sample_col` treated part observational unit. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. fixed_effect_cols Unquoted column names representing columns `tof_tibble` used model fixed effects differential abundance analysis. Generally speaking, fixed effects represent comparisons biological interest (often variables manipulated experiments), treated vs. non-treated, -treatment vs. -treatment, healthy vs. non-healthy. random_effect_cols Optional. Unquoted column names representing columns `tof_tibble` used model random effects differential abundance analysis. Generally speaking, random effects represent variables researcher wants control/account , necessarily biological interest. Example random effect variables might include batch id, patient id (paired design), patient age. Note without multiple samples level random effect variables, can easy overfit mixed models. high-dimensional cytometry experiments, 2 fewer (often 0) random effect variables appropriate. diffcyt_method string indicating diffcyt method used differential abundance analysis. Valid methods include \"glmm\" (default), \"edgeR\", \"voom\". include_observation_level_random_effects boolean value indicating \"observation-level random effects\" (OLREs) included random effect terms \"glmm\" differential abundance model. details OLREs , see diffcyt paper. \"glmm\" method can model observation-level random effects, values ignore argument (throw warning set TRUE). Defaults FALSE. min_cells integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 3. min_samples integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 5. alpha numeric value 0 1 indicating significance level applied multiple-comparison adjusted p-values differential abundance analysis. Defaults 0.05. ... Optional additional arguments pass --hood diffcyt function used perform differential abundance analysis. See testDA_GLMM, testDA_edgeR, testDA_voom details.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_diffcyt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","text":"nested tibble two columns: `tested_effect` `daa_results`. first column, `tested_effect` character vector indicating term differential abundance model used significance testing. values row obtained pasting together column names fixed effect variable values. example, fixed effect column named `fixed_effect` levels \"\", \"b\", \"c\" two terms `tested_effect`: \"fixed_effectb\" \"fixed_effectc\" (note level \"\" fixed_effect set reference level dummy coding). values correspond terms differential abundance model represent difference cluster abundances samples fixed_effect = \"b\" fixed_effect = \"\" samples fixed_effect = \"c\" fixed_effect = \"\", respectively. addition, first row `tested_effect` always represent \"omnibus\" test, test significant differences levels fixed effect variable model. second column, `daa_results` list tibbles entry gives differential abundance results tested_effect. Within entry `daa_results`, find several columns including following: * `p_val`, p-value associated tested effect input cluster * `p_adj`, multiple-comparison adjusted p-value (using p.adjust function) * values associated underlying method used perform differential abundance analysis (log-fold change cluster abundance levels compared). details, see glmFit, voom, topTable, testDA_GLMM.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_diffcyt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","text":"three methods based generalized linear mixed models (\"glmm\"), edgeR (\"edgeR\"), voom (\"voom\"). \"glmm\" \"voom\" methods can model fixed effects random effects, \"edgeR\" method can model fixed effects.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_diffcyt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_glmm.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Abundance Analysis (DAA) with generalized linear mixed-models (GLMMs) — tof_analyze_abundance_glmm","title":"Differential Abundance Analysis (DAA) with generalized linear mixed-models (GLMMs) — tof_analyze_abundance_glmm","text":"function performs differential abundance analysis cell clusters contained within `tof_tbl` using generalized linear mixed-models. Users specify columns represent sample, cluster, fixed effect, random effect information, (mixed) binomial regression model fit using either glmer glm.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_glmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Abundance Analysis (DAA) with generalized linear mixed-models (GLMMs) — tof_analyze_abundance_glmm","text":"","code":"tof_analyze_abundance_glmm(   tof_tibble,   sample_col,   cluster_col,   fixed_effect_cols,   random_effect_cols,   min_cells = 3,   min_samples = 5,   alpha = 0.05 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_glmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Abundance Analysis (DAA) with generalized linear mixed-models (GLMMs) — tof_analyze_abundance_glmm","text":"tof_tibble `tof_tbl` `tibble`. sample_col unquoted column name indicating column `tof_tibble` represents id sample cell collected. `sample_col` serve unique identifier sample collected data acquisition - cells value `sample_col` treated part observational unit. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. fixed_effect_cols Unquoted column names representing columns `tof_tibble` used model fixed effects differential abundance analysis. Supports tidyselect helpers. Generally speaking, fixed effects represent comparisons biological interest (often variables manipulated experiments), treated vs. non-treated, -treatment vs. -treatment, healthy vs. non-healthy. random_effect_cols Unquoted column names representing columns `tof_tibble` used model random effects differential abundance analysis. Supports tidyselection. Generally speaking, random effects represent variables researcher wants control/account , necessarily biological interest. Example random effect variables might include batch id, patient id (paired design), patient age. Note without many samples level random effect variables, can easy overfit mixed models. high-dimensional cytometry experiments, 2 fewer (often 0) random effect variables appropriate. min_cells integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 3. min_samples integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 5. alpha numeric value 0 1 indicating significance level applied multiple-comparison adjusted p-values differential abundance analysis. Defaults 0.05.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_glmm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Abundance Analysis (DAA) with generalized linear mixed-models (GLMMs) — tof_analyze_abundance_glmm","text":"nested tibble two columns: `tested_effect` `daa_results`. first column, `tested_effect`, character vector indicating term differential abundance model used significance testing. values row obtained pasting together column names fixed effect variable values. example, fixed effect column named fixed_effect levels \"\", \"b\", \"c\" two terms `tested_effect`: \"fixed_effectb\" \"fixed_effectc\" (note level \"\" fixed_effect set reference level dummy coding). values correspond terms differential abundance model represent difference cluster abundances samples fixed_effect = \"b\" fixed_effect = \"\" samples fixed_effect = \"c\" fixed_effect = \"\", respectively. addition, note first row `tested_effect` always represent \"omnibus\" test, test significant differences levels fixed effect variable model. second column, `daa_results`, list tibbles entry gives differential abundance results tested_effect. Within entry `daa_results`, find `p_value`, p-value associated tested effect input cluster; `p_adj`, multiple-comparison adjusted p-value (using p.adjust function), values associated underlying method used perform differential abundance analysis (log-fold change cluster abundance levels compared).","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_glmm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Abundance Analysis (DAA) with generalized linear mixed-models (GLMMs) — tof_analyze_abundance_glmm","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_ttest.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Abundance Analysis (DAA) with t-tests — tof_analyze_abundance_ttest","title":"Differential Abundance Analysis (DAA) with t-tests — tof_analyze_abundance_ttest","text":"function performs differential abundance analysis cell clusters contained within `tof_tbl` using simple t-tests. Users specify columns represent sample, cluster, effect information, either paired unpaired t-test (one per cluster) used detect significant differences sample types.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_ttest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Abundance Analysis (DAA) with t-tests — tof_analyze_abundance_ttest","text":"","code":"tof_analyze_abundance_ttest(   tof_tibble,   cluster_col,   effect_col,   group_cols,   test_type = c(\"unpaired\", \"paired\"),   min_cells = 3,   min_samples = 5,   alpha = 0.05,   quiet = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_ttest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Abundance Analysis (DAA) with t-tests — tof_analyze_abundance_ttest","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. effect_col Unquoted column name representing column `tof_tibble` used break samples groups t-test. 2 unique values. group_cols Unquoted names columns `effect_col` used group cells independent observations. Fills similar role `sample_col` `tof_analyze_abundance_*` functions. example, experiment involves analyzing samples taken multiple patients two timepoints (`effect_col = timepoint`), group_cols name column representing patient IDs. test_type string indicating whether t-test \"unpaired\" (default) \"paired\". min_cells integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 3. min_samples integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 5. alpha numeric value 0 1 indicating significance level applied multiple-comparison adjusted p-values differential abundance analysis. Defaults 0.05. quiet boolean value indicating whether warnings printed. Defaults `TRUE`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_ttest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Abundance Analysis (DAA) with t-tests — tof_analyze_abundance_ttest","text":"tibble 7 columns: {cluster_col} name/ID cluster tested.   entry column match unique value input   {cluster_col}. t t-statistic computed cluster. df degrees freedom used t-test cluster. p_val (unadjusted) p-value t-test cluster. p_adj p.adjust-adjusted p-value t-test cluster. significant character vector \"*\" clusters    p_adj < alpha \"\" otherwise. mean_diff unpaired t-test, difference average   proportions cluster two levels `effect_col`. paired   t-test, average difference proportions cluster   two levels `effect_col` within given patient. mean_fc unpaired t-test, ratio average   proportions cluster two levels `effect_col`. paired   t-test, average ratio proportions cluster   two levels `effect_col` within given patient. 0.001 added   denominator ratio avoid divide--zero errors. \"levels\" attribute result indicates order different levels `effect_col` considered. `mean_diff` value row output computed subtracting second level first level, `mean_fc` value row computed dividing first level second level.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_ttest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Abundance Analysis (DAA) with t-tests — tof_analyze_abundance_ttest","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Differential Expression Analysis (DEA) on high-dimensional cytometry data — tof_analyze_expression","title":"Perform Differential Expression Analysis (DEA) on high-dimensional cytometry data — tof_analyze_expression","text":"function performs differential expression analysis cell clusters contained within `tof_tbl` using one three methods (\"diffcyt\", \"glmm\", \"ttest\"). wraps members `tof_analyze_expression_*` function family: tof_analyze_expression_diffcyt, tof_analyze_expression_lmm, tof_analyze_expression_ttest.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Differential Expression Analysis (DEA) on high-dimensional cytometry data — tof_analyze_expression","text":"","code":"tof_analyze_expression(tof_tibble, method = c(\"diffcyt\", \"glmm\", \"ttest\"), ...)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Differential Expression Analysis (DEA) on high-dimensional cytometry data — tof_analyze_expression","text":"tof_tibble `tof_tbl` `tibble`. method string indicating statistical method used. Valid values include \"diffcyt\", \"lmm\", \"ttest\". ... Additional arguments pass onto `tof_analyze_expression_*` function family member corresponding chosen method.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform Differential Expression Analysis (DEA) on high-dimensional cytometry data — tof_analyze_expression","text":"tibble nested tibble containing differential abundance results chosen method. See tof_analyze_expression_diffcyt, tof_analyze_expression_lmm, tof_analyze_expression_ttest details.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform Differential Expression Analysis (DEA) on high-dimensional cytometry data — tof_analyze_expression","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_diffcyt.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","title":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","text":"function performs differential expression analysis cell clusters contained within `tof_tbl` using one two methods implemented diffcyt package differential discovery analysis high-dimensional cytometry data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_diffcyt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","text":"","code":"tof_analyze_expression_diffcyt(   tof_tibble,   sample_col,   cluster_col,   marker_cols = where(tof_is_numeric),   fixed_effect_cols,   random_effect_cols,   diffcyt_method = c(\"lmm\", \"limma\"),   include_observation_level_random_effects = FALSE,   min_cells = 3,   min_samples = 5,   alpha = 0.05,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_diffcyt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","text":"tof_tibble `tof_tbl` `tibble`. sample_col unquoted column name indicating column `tof_tibble` represents id sample cell collected. `sample_col` serve unique identifier sample collected data acquisition - cells value `sample_col` treated part observational unit. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names representing columns `tof_tibble` (.e. high-dimensional cytometry protein measurements) tested differential expression levels `fixed_effect_cols`. Defaults numeric (integer double) columns. Supports tidyselect helpers. fixed_effect_cols Unquoted column names representing columns `tof_tibble` used model fixed effects differential expression analysis. Generally speaking, fixed effects represent comparisons biological interest (often variables manipulated experiments), treated vs. non-treated, -treatment vs. -treatment, healthy vs. non-healthy. random_effect_cols Unquoted column names representing columns `tof_tibble` used model random effects differential expression analysis. Generally speaking, random effects represent variables researcher wants control/account , necessarily biological interest. Example random effect variables might include batch id, patient id (paired design), patient age. Note without many samples level random effect variables, can easy overfit mixed models. high-dimensional cytometry experiments, 2 fewer (often 0) random effect variables appropriate. diffcyt_method string indicating diffcyt method used differential expression analysis. Valid methods include \"lmm\" (default) \"limma\". include_observation_level_random_effects boolean value indicating \"observation-level random effects\" (OLREs) included random effect terms \"lmm\" differential expression model. details OLREs , see diffcyt paper. Defaults FALSE. min_cells integer value used filter clusters differential expression analysis. Clusters included differential expression testing least `min_cells` least `min_samples` samples. Defaults 3. min_samples integer value used filter clusters differential expression analysis. Clusters included differential expression testing least `min_cells` least `min_samples` samples. Defaults 5. alpha numeric value 0 1 indicating significance level applied multiple-comparison adjusted p-values differential abundance analysis. Defaults 0.05. ... Optional additional arguments pass --hood diffcyt function used perform differential expression analysis. See testDS_LMM testDS_limma details.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_diffcyt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","text":"nested tibble two columns: `tested_effect` `dea_results`. first column, `tested_effect` character vector indicating term differential expression model used significance testing. values row obtained pasting together column names fixed effect variable values. example, fixed effect column named fixed_effect levels \"\", \"b\", \"c\" two terms `tested_effect`: \"fixed_effectb\" \"fixed_effectc\" (note level \"\" fixed_effect set reference level dummy coding). values correspond terms differential expression model represent difference cluster median expression values marker samples fixed_effect = \"b\" fixed_effect = \"\" samples fixed_effect = \"c\" fixed_effect = \"\", respectively. addition, note first row `tested_effect` always represent \"omnibus\" test, test significant differences levels fixed effect variable model. second column, `dea_results` list tibbles entry gives differential expression results tested_effect. Within entry `dea_results`, find `p_val`, p-value associated tested effect input cluster/marker pair; `p_adj`, multiple-comparison adjusted p-value (using p.adjust function), values associated underlying method used perform differential expression analysis (log-fold change clusters' median marker expression values conditions compared). tibble `dea_results` also two columns representing cluster marker corresponding p-value row.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_diffcyt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","text":"two methods based linear mixed models (\"lmm\") limma (\"limma\"). \"lmm\" \"limma\" methods can model fixed effects random effects.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_diffcyt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_lmm.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","title":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","text":"function performs differential expression analysis cell clusters contained within `tof_tbl` using linear mixed-models. Users specify columns represent sample, cluster, marker, fixed effect, random effect information, (mixed) linear regression model fit using either lmer glm.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_lmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","text":"","code":"tof_analyze_expression_lmm(   tof_tibble,   sample_col,   cluster_col,   marker_cols = where(tof_is_numeric),   fixed_effect_cols,   random_effect_cols,   central_tendency_function = median,   min_cells = 3,   min_samples = 5,   alpha = 0.05 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_lmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","text":"tof_tibble `tof_tbl` `tibble`. sample_col unquoted column name indicating column `tof_tibble` represents id sample cell collected. `sample_col` serve unique identifier sample collected data acquisition - cells value `sample_col` treated part observational unit. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names representing columns `tof_tibble` (.e. high-dimensional cytometry protein measurements) included differential discovery analysis. Defaults numeric (integer double) columns. Supports tidyselection. fixed_effect_cols Unquoted column names representing columns `tof_tibble` used model fixed effects differential expression analysis. Supports tidyselection. Generally speaking, fixed effects represent comparisons biological interest (often variables manipulated experiments), treated vs. non-treated, -treatment vs. -treatment, healthy vs. non-healthy. random_effect_cols Optional. Unquoted column names representing columns `tof_tibble` used model random effects differential expression analysis. Supports tidyselection. Generally speaking, random effects represent variables researcher wants control/account , necessarily biological interest. Example random effect variables might include batch id, patient id (paired design), patient age. analyses include random effects. central_tendency_function function used calculate measurement central tendency cluster/marker pair (used dependent variable linear model). Defaults median. min_cells integer value used filter clusters differential expression analysis. Clusters included differential expression testing least `min_cells` least `min_samples` samples. Defaults 3. min_samples integer value used filter clusters differential expression analysis. Clusters included differential expression testing least `min_cells` least `min_samples` samples. Defaults 5. alpha numeric value 0 1 indicating significance level applied multiple-comparison adjusted p-values differential abundance analysis. Defaults 0.05.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_lmm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","text":"nested tibble two columns: `tested_effect` `dea_results`. first column, `tested_effect` character vector indicating term differential expression model used significance testing. values row obtained pasting together column names fixed effect variable values. example, fixed effect column named fixed_effect levels \"\", \"b\", \"c\" two terms `tested_effect`: \"fixed_effectb\" \"fixed_effectc\" (note level \"\" fixed_effect set reference level dummy coding). values correspond terms differential expression model represent difference cluster median expression values marker samples fixed_effect = \"b\" fixed_effect = \"\" samples fixed_effect = \"c\" fixed_effect = \"\", respectively. addition, note first row `tested_effect` always represent \"omnibus\" test, test significant differences levels fixed effect variable model. second column, `dea_results` list tibbles entry gives differential expression results tested_effect. Within entry `daa_results`, find `p_val`, p-value associated tested effect input cluster/marker pair; `p_adj`, multiple-comparison adjusted p-value (using p.adjust function), values associated underlying method used perform differential expression analysis (log-fold change clusters' median marker expression values levels compared).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_lmm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","text":"Specifically, one linear model fit cluster/marker pair. cluster/marker pair, user-supplied measurement central tendency (`central_tendency_function`), mean median, calculated across cells cluster sample--sample basis. , central tendency value used dependent variable linear model `fixed_effect_cols` fixed effects predictors `random_effect_cols` random effects predictors. models (one per cluster/marker pair) fit, p-values coefficient model multiple-comparisons adjusted using p.adjust function.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_lmm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_ttest.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Expression Analysis (DEA) with t-tests — tof_analyze_expression_ttest","title":"Differential Expression Analysis (DEA) with t-tests — tof_analyze_expression_ttest","text":"function performs differential expression analysis cell clusters contained within `tof_tbl` using simple t-tests. Specifically, either unpaired paired t-test compare samples' marker expression distributions (two conditions) within cluster using user-specified summary function (.e. mean median). One t-test conducted per cluster/marker pair significant differences sample types detected multiple-hypothesis correction.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_ttest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Expression Analysis (DEA) with t-tests — tof_analyze_expression_ttest","text":"","code":"tof_analyze_expression_ttest(   tof_tibble,   cluster_col,   marker_cols = where(tof_is_numeric),   effect_col,   group_cols,   test_type = c(\"unpaired\", \"paired\"),   summary_function = mean,   min_cells = 3,   min_samples = 5,   alpha = 0.05,   quiet = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_ttest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Expression Analysis (DEA) with t-tests — tof_analyze_expression_ttest","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names representing columns `tof_tibble` (.e. high-dimensional cytometry protein measurements) tested differential expression levels `effect_col`. Defaults numeric (integer double) columns. Supports tidyselect helpers. effect_col Unquoted column name representing column `tof_tibble` used break samples groups t-test. 2 unique values. group_cols Unquoted names columns `effect_col` used group cells independent observations. Fills similar role `sample_col` `tof_analyze_abundance_*` functions. example, experiment involves analyzing samples taken multiple patients two timepoints (`effect_col = timepoint`), group_cols name column representing patient IDs. test_type string indicating whether t-test \"unpaired\" (default) \"paired\". summary_function vector-valued function used summarize distribution marker cluster (within sample, grouped `group_cols`). Defaults `mean`. min_cells integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 3. min_samples integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 5. alpha numeric value 0 1 indicating significance level applied multiple-comparison adjusted p-values differential abundance analysis. Defaults 0.05. quiet boolean value indicating whether warnings printed. Defaults `TRUE`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_ttest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Expression Analysis (DEA) with t-tests — tof_analyze_expression_ttest","text":"tibble 7 columns: {cluster_col} name/ID cluster cluster/marker pair   tested. entry column match unique value input   {cluster_col}. marker name marker cluster/marker pair tested. t t-statistic computed cluster. df degrees freedom used t-test cluster. p_val (unadjusted) p-value t-test cluster. p_adj p.adjust-adjusted p-value t-test cluster. significant character vector \"*\" clusters    p_adj < alpha \"\" otherwise. mean_diff unpaired t-test, difference average   proportions cluster two levels `effect_col`. paired   t-test, average difference proportions cluster   two levels `effect_col` within given patient. mean_fc unpaired t-test, ratio average   proportions cluster two levels `effect_col`. paired   t-test, average ratio proportions cluster   two levels `effect_col` within given patient. 0.001 added   denominator ratio avoid divide--zero errors. \"levels\" attribute result indicates order different levels `effect_col` considered. `mean_diff` value row output computed subtracting second level first level, `mean_fc` value row computed dividing first level second level.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_ttest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Expression Analysis (DEA) with t-tests — tof_analyze_expression_ttest","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_annotate_clusters.html","id":null,"dir":"Reference","previous_headings":"","what":"Manually annotate tidytof-computed clusters using user-specified labels — tof_annotate_clusters","title":"Manually annotate tidytof-computed clusters using user-specified labels — tof_annotate_clusters","text":"function adds additional column `tibble` `tof_tbl` allow users incorporate manual cell type labels clusters identified using unsupervised algorithms.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_annotate_clusters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Manually annotate tidytof-computed clusters using user-specified labels — tof_annotate_clusters","text":"","code":"tof_annotate_clusters(tof_tibble, cluster_col, annotations)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_annotate_clusters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Manually annotate tidytof-computed clusters using user-specified labels — tof_annotate_clusters","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` contains ids unsupervised cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. annotations data structure indicating annotate cluster id `cluster_col`. `annotations` can provided data.frame two columns (first name `cluster_col` contain unique cluster id; second can name contain character vector indicating manual annotation matched cluster id first column). `annotations` can also provided named character vector; case, entry `annotations` unique cluster id, names entry corresponding manual cluster annotation. See examples.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_annotate_clusters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Manually annotate tidytof-computed clusters using user-specified labels — tof_annotate_clusters","text":"`tof_tbl` number rows `tof_tibble` one additional column containing manual cluster annotations cell (character vector). `annotations` provided data.frame, new column name column containing cluster annotations `annotations`. `annotations` provided named character vector, new column named `cluster_col_annotation`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_annotate_clusters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Manually annotate tidytof-computed clusters using user-specified labels — tof_annotate_clusters","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = c(rnorm(n = 500), rnorm(n = 500, mean = 2)),         cd34 = c(rnorm(n = 500), rnorm(n = 500, mean = 4)),         cd19 = rnorm(n = 1000),         cluster_id = c(rep(\"a\", 500), rep(\"b\", 500))     )  # using named character vector sim_data |>     tof_annotate_clusters(         cluster_col = cluster_id,         annotations = c(\"macrophage\" = \"a\", \"dendritic cell\" = \"b\")     ) #> # A tibble: 1,000 × 6 #>        cd45   cd38   cd34   cd19 cluster_id cluster_id_annotation #>       <dbl>  <dbl>  <dbl>  <dbl> <chr>      <chr>                 #>  1 -1.40    -0.337 -0.166  1.12  a          macrophage            #>  2  0.255   -0.216  0.120  0.400 a          macrophage            #>  3 -2.44     0.621 -0.662 -0.985 a          macrophage            #>  4 -0.00557 -1.28  -0.531 -0.503 a          macrophage            #>  5  0.622   -1.30  -0.301  0.987 a          macrophage            #>  6  1.15    -0.377 -0.602  2.19  a          macrophage            #>  7 -1.82     0.104 -0.318 -0.165 a          macrophage            #>  8 -0.247   -0.704  0.308 -0.686 a          macrophage            #>  9 -0.244    1.50   0.799  0.941 a          macrophage            #> 10 -0.283   -0.303  1.75  -0.164 a          macrophage            #> # ℹ 990 more rows  # using two-column data.frame annotation_data_frame <-     data.frame(         cluster_id = c(\"a\", \"b\"),         cluster_annotation = c(\"macrophage\", \"dendritic cell\")     )  sim_data |>     tof_annotate_clusters(         cluster_col = cluster_id,         annotations = annotation_data_frame     ) #> # A tibble: 1,000 × 6 #>        cd45   cd38   cd34   cd19 cluster_id cluster_annotation #>       <dbl>  <dbl>  <dbl>  <dbl> <chr>      <chr>              #>  1 -1.40    -0.337 -0.166  1.12  a          macrophage         #>  2  0.255   -0.216  0.120  0.400 a          macrophage         #>  3 -2.44     0.621 -0.662 -0.985 a          macrophage         #>  4 -0.00557 -1.28  -0.531 -0.503 a          macrophage         #>  5  0.622   -1.30  -0.301  0.987 a          macrophage         #>  6  1.15    -0.377 -0.602  2.19  a          macrophage         #>  7 -1.82     0.104 -0.318 -0.165 a          macrophage         #>  8 -0.247   -0.704  0.308 -0.686 a          macrophage         #>  9 -0.244    1.50   0.799  0.941 a          macrophage         #> 10 -0.283   -0.303  1.75  -0.164 a          macrophage         #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_apply_classifier.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform developmental clustering on CyTOF data using a pre-fit classifier — tof_apply_classifier","title":"Perform developmental clustering on CyTOF data using a pre-fit classifier — tof_apply_classifier","text":"Perform developmental clustering CyTOF data using pre-fit classifier","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_apply_classifier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform developmental clustering on CyTOF data using a pre-fit classifier — tof_apply_classifier","text":"","code":"tof_apply_classifier(   cancer_tibble = NULL,   classifier_fit = NULL,   distance_function = c(\"mahalanobis\", \"cosine\", \"pearson\"),   num_cores = 1,   parallel_vars )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_apply_classifier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform developmental clustering on CyTOF data using a pre-fit classifier — tof_apply_classifier","text":"cancer_tibble `tibble` `tof_tibble` containing cells classified nearest healthy subpopulation (generally cancer cells). classifier_fit nested `tibble` produced `tof_build_classifier` row represents healthy cell subpopulation cells `cancer_tibble` classified using minimum distance. distance_function string indicating distance function used perform classification. Options \"mahalanobis\" (default), \"cosine\", \"pearson\". num_cores integer indicating number CPU cores used parallelize classification. Defaults 1 (single core). parallel_vars Unquoted column names indicating columns `cancer_tibble` use breaking data order parallelize classification. Defaults NULL. Supports tidyselect helpers.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_apply_classifier.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform developmental clustering on CyTOF data using a pre-fit classifier — tof_apply_classifier","text":"tibble `nrow(cancer_tibble)` rows `nrow(classifier_fit) + 1` columns. row represents cell `cancer_tibble`, `nrow(classifier_fit)` columns represent distance cell healthy subpopulations' cluster centroids. final column represents cluster id healthy subpopulation minimum distance cell represented row.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_apply_classifier.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform developmental clustering on CyTOF data using a pre-fit classifier — tof_apply_classifier","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_channels.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect low-expression (i.e. potentially failed) channels in high-dimensional cytometry data — tof_assess_channels","title":"Detect low-expression (i.e. potentially failed) channels in high-dimensional cytometry data — tof_assess_channels","text":"Detect low-expression (.e. potentially failed) channels high-dimensional cytometry data","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_channels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect low-expression (i.e. potentially failed) channels in high-dimensional cytometry data — tof_assess_channels","text":"","code":"tof_assess_channels(   tof_tibble,   channel_cols = where(tof_is_numeric),   negative_threshold = asinh(10/5),   negative_proportion_flag = 0.95 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_channels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect low-expression (i.e. potentially failed) channels in high-dimensional cytometry data — tof_assess_channels","text":"tof_tibble `tof_tbl` `tibble`. channel_cols vector unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. nothing specified, default analyze numeric columns. negative_threshold scalar indicating threshold measurement considered negative. Defaults hyperbolic arcsine transformation 10 counts. negative_proportion_flag scalar 0 1 indicating proportion cells tof_tibble need `negative_threshold` given marker order marker flagged. Defaults 0.95.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_channels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect low-expression (i.e. potentially failed) channels in high-dimensional cytometry data — tof_assess_channels","text":"tibble 3 columns number rows equal number columns `tof_tibble` chosen `channel_cols`. three columns \"channel\", character vector channel names, \"negative_proportion\", numeric vector values 0 1 indicating many cells `tof_tibble` `negative_threshold` channel, `flagged_channel`, boolean vector indicating whether channel flagged potentially failed (TRUE means channel large number cells `negative_threshold`).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_channels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect low-expression (i.e. potentially failed) channels in high-dimensional cytometry data — tof_assess_channels","text":"","code":"# simulate some data sim_data <-     data.frame(         cd4 = rnorm(n = 100, mean = 5, sd = 0.5),         cd8 = rnorm(n = 100, mean = 0, sd = 0.1),         cd33 = rnorm(n = 100, mean = 10, sd = 0.1)     )  tof_assess_channels(tof_tibble = sim_data) #> # A tibble: 3 × 3 #>   channel negative_proportion flagged_channel #>   <chr>                 <dbl> <lgl>           #> 1 cd8                       1 TRUE            #> 2 cd4                       0 FALSE           #> 3 cd33                      0 FALSE            tof_assess_channels(tof_tibble = sim_data, channel_cols = c(cd4, cd8)) #> # A tibble: 2 × 3 #>   channel negative_proportion flagged_channel #>   <chr>                 <dbl> <lgl>           #> 1 cd8                       1 TRUE            #> 2 cd4                       0 FALSE            tof_assess_channels(tof_tibble = sim_data, negative_threshold = 2) #> # A tibble: 3 × 3 #>   channel negative_proportion flagged_channel #>   <chr>                 <dbl> <lgl>           #> 1 cd8                       1 TRUE            #> 2 cd4                       0 FALSE           #> 3 cd33                      0 FALSE"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_distance.html","id":null,"dir":"Reference","previous_headings":"","what":"Assess a clustering result by calculating the z-score of each cell's\nmahalanobis distance to its cluster centroid and flagging outliers. — tof_assess_clusters_distance","title":"Assess a clustering result by calculating the z-score of each cell's\nmahalanobis distance to its cluster centroid and flagging outliers. — tof_assess_clusters_distance","text":"function evaluates result clustering procedure comparing mahalanobis distance cell centroid cluster assigned among cells given cluster. cells mahalanobis-distance z-score user-specified threshold flagged potentially anomalous. Note z-score calculated using modified formula minimize effect outliers (Z = x - median(x) / mad(x)).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assess a clustering result by calculating the z-score of each cell's\nmahalanobis distance to its cluster centroid and flagging outliers. — tof_assess_clusters_distance","text":"","code":"tof_assess_clusters_distance(   tof_tibble,   cluster_col,   marker_cols = where(tof_is_numeric),   z_threshold = 3,   augment = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_distance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assess a clustering result by calculating the z-score of each cell's\nmahalanobis distance to its cluster centroid and flagging outliers. — tof_assess_clusters_distance","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names indicating column `tof_tibble` interpreted markers used mahalanobis distance calculation. Defaults numeric columns. Supports tidyselection. z_threshold scalar indicating distance z-score threshold cell considered anomalous. Defaults 3. augment boolean value indicating output column-bind computed flags cell (see ) new columns `tof_tibble` (TRUE) tibble including computed flags returned (FALSE, default).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_distance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assess a clustering result by calculating the z-score of each cell's\nmahalanobis distance to its cluster centroid and flagging outliers. — tof_assess_clusters_distance","text":"augment = FALSE (default), tibble 3 columns: \".mahalanobis_distance\" (mahalanobis distance cell centroid tits assigned cluster), \"z_score\" (modified z-score cell's mahalanobis distance relative cells dataset), \"flagged_cell\" (boolean indicating whether cell flagged z-score z_threshold). augment = TRUE, 3 columns column-bound tof_tibble, resulting tibble returned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_distance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assess a clustering result by calculating the z-score of each cell's\nmahalanobis distance to its cluster centroid and flagging outliers. — tof_assess_clusters_distance","text":"","code":"# simulate data sim_data_inner <-     dplyr::tibble(         cd45 = c(rnorm(n = 600), rnorm(n = 500, mean = -4)),         cd38 =             c(                 rnorm(n = 100, sd = 0.5),                 rnorm(n = 500, mean = -3),                 rnorm(n = 500, mean = 8)             ),         cd34 =             c(                 rnorm(n = 100, sd = 0.2, mean = -10),                 rnorm(n = 500, mean = 4),                 rnorm(n = 500, mean = 60)             ),         cd19 = c(rnorm(n = 100, sd = 0.3, mean = 10), rnorm(n = 1000)),         cluster_id = c(rep(\"a\", 100), rep(\"b\", 500), rep(\"c\", 500)),         dataset = \"inner\"     )  sim_data_outer <-     dplyr::tibble(         cd45 = c(rnorm(n = 10), rnorm(50, mean = 3), rnorm(n = 50, mean = -12)),         cd38 =             c(                 rnorm(n = 10, sd = 0.5),                 rnorm(n = 50, mean = -10),                 rnorm(n = 50, mean = 10)             ),         cd34 =             c(                 rnorm(n = 10, sd = 0.2, mean = -15),                 rnorm(n = 50, mean = 15),                 rnorm(n = 50, mean = 70)             ),         cd19 = c(rnorm(n = 10, sd = 0.3, mean = 19), rnorm(n = 100)),         cluster_id = c(rep(\"a\", 10), rep(\"b\", 50), rep(\"c\", 50)),         dataset = \"outer\"     )  sim_data <- rbind(sim_data_inner, sim_data_outer)  # detect anomalous cells (in this case, the \"outer\" dataset contains small # clusters that get lumped into the larger clusters in the \"inner\" dataset) z_result <-     sim_data |>     tof_assess_clusters_distance(cluster_col = cluster_id, z_threshold = 2.5)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_entropy.html","id":null,"dir":"Reference","previous_headings":"","what":"Assess a clustering result by calculating the shannon entropy of each cell's\nmahalanobis distance to all cluster centroids and flagging outliers. — tof_assess_clusters_entropy","title":"Assess a clustering result by calculating the shannon entropy of each cell's\nmahalanobis distance to all cluster centroids and flagging outliers. — tof_assess_clusters_entropy","text":"function evaluates result clustering procedure calculating mahalanobis distance cell centroids clusters dataset finding shannon entropy resulting vector distances. cells entropy threshold user-specified threshold flagged potentially anomalous. Entropy minimized (0) cell close one (small number) clusters, far rest . cell close multiple cluster centroids (.e. ambiguous phenotype), entropy large.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_entropy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assess a clustering result by calculating the shannon entropy of each cell's\nmahalanobis distance to all cluster centroids and flagging outliers. — tof_assess_clusters_entropy","text":"","code":"tof_assess_clusters_entropy(   tof_tibble,   cluster_col,   marker_cols = where(tof_is_numeric),   entropy_threshold,   entropy_quantile = 0.9,   num_closest_clusters,   augment = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_entropy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assess a clustering result by calculating the shannon entropy of each cell's\nmahalanobis distance to all cluster centroids and flagging outliers. — tof_assess_clusters_entropy","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names indicating column `tof_tibble` interpreted markers used mahalanobis distance calculation. Defaults numeric columns. Supports tidyselection. entropy_threshold scalar indicating entropy threshold cell considered anomalous. unspecified, threshold computed using `entropy_quantile` (see ). (Note: Entropy often 0 1, can larger many classes/clusters). entropy_quantile scalar 0 1 indicating entropy quantile cell considered anomalous. Defaults 0.9, means cells entropy 90th percentile flagged. Ignored entropy_threshold specified directly. num_closest_clusters integer indicating many cell's closest cluster centroids mahalanobis distance included entropy calculation. Playing argument allow ignore distances clusters far away cell (thus may distort result, many distant centroids large distances can artificially inflate cells' entropy value; said, rarely issue empirically). Defaults clusters tof_tibble. augment boolean value indicating output column-bind computed flags cell (see ) new columns `tof_tibble` (TRUE) tibble including computed flags returned (FALSE, default).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_entropy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assess a clustering result by calculating the shannon entropy of each cell's\nmahalanobis distance to all cluster centroids and flagging outliers. — tof_assess_clusters_entropy","text":"augment = FALSE (default), tibble 2 + NUM_CLUSTERS columns. NUM_CLUSTERS number unique clusters cluster_col. Two columns \"entropy\" (entropy value cell) \"flagged_cell\" (boolean value indicating cell entropy value entropy_threshold). NUM_CLUSTERS columns contain mahalanobis distances cell clusters cluster_col (named \".mahalanobis_{cluster_name}\"). augment = TRUE, 2 + NUM_CLUSTERS columns column-bound tof_tibble, resulting tibble returned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_entropy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assess a clustering result by calculating the shannon entropy of each cell's\nmahalanobis distance to all cluster centroids and flagging outliers. — tof_assess_clusters_entropy","text":"","code":"# simulate data sim_data <-     dplyr::tibble(         cd45 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cd38 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cd34 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cd19 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cluster_id = c(rep(\"a\", 1000), rep(\"b\", 1000), rep(\"c\", 1000))     )  # imagine a \"reference\" dataset in which \"cluster a\" isn't present sim_data_reference <-     sim_data |>     dplyr::filter(cluster_id %in% c(\"b\", \"c\"))  # if we cluster into the reference dataset, we will force all cells in # cluster a into a population where they don't fit very well sim_data <-     sim_data |>     tof_cluster(         healthy_tibble = sim_data_reference,         healthy_label_col = cluster_id,         method = \"ddpr\"     )  # we can evaluate the clustering quality by calculating by the entropy of the # mahalanobis distance vector for each cell to all cluster centroids entropy_result <-     sim_data |>     tof_assess_clusters_entropy(         cluster_col = .mahalanobis_cluster,         marker_cols = starts_with(\"cd\"),         entropy_quantile = 0.8,         augment = TRUE     )  # most cells in \"cluster a\" are flagged, and few cells in the other clusters are flagged_cluster_proportions <-     entropy_result |>     dplyr::group_by(cluster_id) |>     dplyr::summarize(         prop_flagged = mean(flagged_cell)     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_knn.html","id":null,"dir":"Reference","previous_headings":"","what":"Assess a clustering result by calculating a cell's cluster assignment to that\nof its K nearest neighbors. — tof_assess_clusters_knn","title":"Assess a clustering result by calculating a cell's cluster assignment to that\nof its K nearest neighbors. — tof_assess_clusters_knn","text":"function evaluates result clustering procedure finding cell's K nearest neighbors, determining cluster majority assigned , checking matches cell's cluster assignment. cluster assignment majority cell's nearest neighbors match cell's cluster assignment, cell flagged potentially anomalous.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_knn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assess a clustering result by calculating a cell's cluster assignment to that\nof its K nearest neighbors. — tof_assess_clusters_knn","text":"","code":"tof_assess_clusters_knn(   tof_tibble,   cluster_col,   marker_cols = where(tof_is_numeric),   num_neighbors = min(10, nrow(tof_tibble)),   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\"),   augment = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_knn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assess a clustering result by calculating a cell's cluster assignment to that\nof its K nearest neighbors. — tof_assess_clusters_knn","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names indicating column `tof_tibble` interpreted markers used mahalanobis distance calculation. Defaults numeric columns. Supports tidyselection. num_neighbors integer indicating many neighbors found nearest neighbor calculation. distance_function string indicating distance function used perform k nearest neighbor calculation.  Options \"euclidean\" (default) \"cosine\". augment boolean value indicating output column-bind computed flags cell (see ) new columns `tof_tibble` (TRUE) tibble including computed flags returned (FALSE, default).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_knn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assess a clustering result by calculating a cell's cluster assignment to that\nof its K nearest neighbors. — tof_assess_clusters_knn","text":"augment = FALSE (default), tibble 2 columns: \".knn_cluster\" (character vector indicating cluster received majority vote cell's k nearest neighbors) \"flagged_cell\" (boolean value indicating cell's cluster assignment matched majority vote (TRUE) (FALSE)). augment = TRUE, 2 columns column-bound tof_tibble, resulting tibble returned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_knn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assess a clustering result by calculating a cell's cluster assignment to that\nof its K nearest neighbors. — tof_assess_clusters_knn","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cd38 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cd34 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cd19 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cluster_id = c(rep(\"a\", 1000), rep(\"b\", 1000), rep(\"c\", 1000))     )  knn_result <-     sim_data |>     tof_assess_clusters_knn(         cluster_col = cluster_id,         num_neighbors = 10     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect flow rate abnormalities in high-dimensional cytometry data — tof_assess_flow_rate","title":"Detect flow rate abnormalities in high-dimensional cytometry data — tof_assess_flow_rate","text":"function performs simplified version flowAI's statistical test detect time periods abnormal flow rates course flow cytometry experiment. Briefly, relative flow rates timestep throughout data acquisition calculated (see tof_calculate_flow_rate), outlier timepoints particularly high low flow rates (.e. beyond extreme values t-distribution across timesteps) flagged.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect flow rate abnormalities in high-dimensional cytometry data — tof_assess_flow_rate","text":"","code":"tof_assess_flow_rate(   tof_tibble,   time_col,   group_cols,   num_timesteps = nrow(tof_tibble)/1000,   alpha_threshold = 0.01,   visualize = FALSE,   ...,   augment = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect flow rate abnormalities in high-dimensional cytometry data — tof_assess_flow_rate","text":"tof_tibble `tof_tbl` `tibble`. time_col unquoted column name indicating column `tof_tibble` contains time cell collected. group_cols Optional. Unquoted column names indicating columns used group cells analysis. Flow rate calculation performed independently within group. Supports tidyselect helpers. num_timesteps number bins `time_col` split. define \"timesteps\" data collection process. number cells analyzed cytometer counted bin separately represent relative average flow rate timestep data collection. alpha_threshold scalar 0 1 indicating two-tailed significance level draw outlier thresholds t-distribution `num_timesteps` - 1 degrees freedom. Defaults 0.01. visualize boolean value indicating plot generated visualize timestep's relative flow rate (group) instead returning tibble directly. Defaults FALSE. ... Optional additional arguments pass facet_wrap. Ignored visualize = FALSE. augment boolean value indicating output column-bind computed flags cell (see ) new columns `tof_tibble` (TRUE) tibble including computed flags returned (FALSE, default).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect flow rate abnormalities in high-dimensional cytometry data — tof_assess_flow_rate","text":"tibble number rows `tof_tibble`. augment = FALSE (default), 3 columns: \"{time_col}\" (column `time_col`), \"timestep\" (numeric timestep cell assigned based value `time_col`), \"flagged_window\" (boolean vector indicating cell collecting timestep flagged high low flow rate). augment = TRUE, 3 columns column-bound `tof_tibble` return augmented version input dataset. (Note case, time_col duplicated). visualize = TRUE, ggplot object returned instead tibble.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect flow rate abnormalities in high-dimensional cytometry data — tof_assess_flow_rate","text":"","code":"set.seed(1000L) sim_data <-     data.frame(         cd4 = rnorm(n = 1000, mean = 5, sd = 0.5),         cd8 = rnorm(n = 1000, mean = 0, sd = 0.1),         cd33 = rnorm(n = 1000, mean = 10, sd = 0.1),         file_name = c(rep(\"a\", times = 500), rep(\"b\", times = 500)),         time =             c(                 sample(1:100, size = 200, replace = TRUE),                 sample(100:400, size = 300, replace = TRUE),                 sample(1:150, size = 400, replace = TRUE),                 sample(1:500, size = 100, replace = TRUE)             )     )  sim_data |>     tof_assess_flow_rate(         time_col = time,         num_timesteps = 20,         visualize = TRUE     )   sim_data |>     tof_assess_flow_rate(         time_col = time,         group_cols = file_name,         num_timesteps = 20,         visualize = TRUE     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect flow rate abnormalities in high-dimensional cytometry data (stored in a\nsingle data.frame) — tof_assess_flow_rate_tibble","title":"Detect flow rate abnormalities in high-dimensional cytometry data (stored in a\nsingle data.frame) — tof_assess_flow_rate_tibble","text":"function performs simplified version flowAI's statistical test detect time periods abnormal flow rates course flow cytometry experiment. Briefly, relative flow rates timestep throughout data acquisition calculated (see tof_calculate_flow_rate), outlier timepoints particularly high low flow rates (.e. beyond extreme values t-distribution across timesteps) flagged.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect flow rate abnormalities in high-dimensional cytometry data (stored in a\nsingle data.frame) — tof_assess_flow_rate_tibble","text":"","code":"tof_assess_flow_rate_tibble(   tof_tibble,   time_col,   num_timesteps = nrow(tof_tibble)/1000,   alpha_threshold = 0.01,   augment = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect flow rate abnormalities in high-dimensional cytometry data (stored in a\nsingle data.frame) — tof_assess_flow_rate_tibble","text":"tof_tibble `tof_tbl` `tibble`. time_col unquoted column name indicating column `tof_tibble` contains time cell collected. num_timesteps number bins `time_col` split. define \"timesteps\" data collection process. number cells analyzed cytometer counted bin separately represent relative average flow rate timestep data collection. alpha_threshold scalar 0 1 indicating two-tailed significance level draw outlier thresholds t-distribution `num_timesteps` - 1 degrees freedom. Defaults 0.01. augment boolean value indicating output column-bind computed flags cell (see ) new columns `tof_tibble` (TRUE) tibble including computed flags returned (FALSE, default).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate_tibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect flow rate abnormalities in high-dimensional cytometry data (stored in a\nsingle data.frame) — tof_assess_flow_rate_tibble","text":"tibble number rows `tof_tibble`. augment = FALSE (default), 3 columns: \"{time_col}\" (column `time_col`), \"timestep\" (numeric timestep cell assigned based value `time_col`), \"flagged_window\" (boolean vector indicating cell collecting timestep flagged high low flow rate). augment = TRUE, 3 columns column-bound `tof_tibble` return augmented version input dataset. (Note case, time_col duplicated).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate_tibble.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect flow rate abnormalities in high-dimensional cytometry data (stored in a\nsingle data.frame) — tof_assess_flow_rate_tibble","text":"","code":"set.seed(1000L) sim_data <-     data.frame(         cd4 = rnorm(n = 1000, mean = 5, sd = 0.5),         cd8 = rnorm(n = 1000, mean = 0, sd = 0.1),         cd33 = rnorm(n = 1000, mean = 10, sd = 0.1),         time =             c(                 sample(1:100, size = 200, replace = TRUE),                 sample(100:400, size = 300, replace = TRUE),                 sample(1:150, size = 400, replace = TRUE),                 sample(1:500, size = 100, replace = TRUE)             )     )  sim_data |>     tof_assess_flow_rate(         time_col = time,         num_timesteps = 20,         visualize = TRUE     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Assess a trained elastic net model — tof_assess_model","title":"Assess a trained elastic net model — tof_assess_model","text":"function assesses trained `tof_model`'s performance new data computing model type-specific performance measurements. new data provided, performance metrics training data provided.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assess a trained elastic net model — tof_assess_model","text":"","code":"tof_assess_model(tof_model, new_data)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assess a trained elastic net model — tof_assess_model","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations used evaluate `tof_model`'s performance. new_data provided, model evaluation performed using training data used fit model. Alternatively, string \"tuning\" can provided access model's performance metrics (resampled) model tuning process.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assess a trained elastic net model — tof_assess_model","text":"list performance metrics whose components depend model type: \"model_metrics\" tibble two columns (\"metric\" \"value\") containing standard performance metrics model type. linear models, \"mse\" (mean squared error predictions) \"mae\" (mean absolute error predictions). two-class models, \"roc_auc\" (area Receiver-Operating Curve classification), \"misclassification error\" (proportion misclassified observations), \"binomial_deviance\" (see deviance.glmnet), \"mse\" (mean squared error logit function), \"mae\" (mean absolute error logit function). multiclass models, \"roc_auc\" (area Receiver-Operating Curve classification using Hand-Till generalization ROC AUC multiclass models roc_auc), \"misclassification error\" (proportion misclassified observations), \"multinomial_deviance\" (see deviance.glmnet), \"mse\" \"mae\" . survival models, \"concordance_index\" (Harrel's C index; see deviance.glmnet) \"partial_likelihood_deviance\" (see deviance.glmnet). \"roc_curve\" Reported \"two-class\" \"multiclass\" models. ,  tibble provided reporting true-positive rate (tpr) false-positive  rate (fpr) threshold classification use plotting  receiver-operating curve. \"multiclass\" models, \".level\" column  allows separating values roc_curve one ROC can plotted  class. \"confusion_matrix\" Reported \"two-class\" \"multiclass\" models. , tibble provided reporting \"confusion matrix\" classification long-format. \"survival_curves\" Reported \"survival\" models. tibble indicating patient's probability survival (1 - probability(event)) timepoint dataset whether sample placed \"high\" \"low\" risk group according predicted relative risk (tof_model's optimal relative_risk cutoff training dataset).","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assess a trained elastic net model — tof_assess_model","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100)     )  new_tibble <-     dplyr::tibble(         sample = as.character(1:20),         cd45 = runif(n = 20),         pstat5 = runif(n = 20),         cd34 = runif(n = 20),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(20)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  # assess the model on new data tof_assess_model(tof_model = regression_model, new_data = new_tibble) #> $model_metrics #> # A tibble: 2 × 2 #>   metric value #>   <chr>  <dbl> #> 1 mse    0.795 #> 2 mae    0.788 #>"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_new_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute a trained elastic net model's performance metrics using new_data. — tof_assess_model_new_data","title":"Compute a trained elastic net model's performance metrics using new_data. — tof_assess_model_new_data","text":"Compute trained elastic net model's performance metrics using new_data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_new_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute a trained elastic net model's performance metrics using new_data. — tof_assess_model_new_data","text":"","code":"tof_assess_model_new_data(tof_model, new_data)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_new_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute a trained elastic net model's performance metrics using new_data. — tof_assess_model_new_data","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations used evaluate `tof_model`'s performance.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_new_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute a trained elastic net model's performance metrics using new_data. — tof_assess_model_new_data","text":"list performance metrics whose components depend model type.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_tuning.html","id":null,"dir":"Reference","previous_headings":"","what":"Access a trained elastic net model's performance metrics using its tuning data. — tof_assess_model_tuning","title":"Access a trained elastic net model's performance metrics using its tuning data. — tof_assess_model_tuning","text":"Access trained elastic net model's performance metrics using tuning data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_tuning.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Access a trained elastic net model's performance metrics using its tuning data. — tof_assess_model_tuning","text":"","code":"tof_assess_model_tuning(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_tuning.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Access a trained elastic net model's performance metrics using its tuning data. — tof_assess_model_tuning","text":"tof_model `tof_model` trained using tof_train_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_tuning.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Access a trained elastic net model's performance metrics using its tuning data. — tof_assess_model_tuning","text":"list performance metrics whose components depend model type.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct","text":"function performs quantile normalization high-dimensional cytometry data tidy format using either linear rescaling quantile normalization. channel specified `channel_cols` batch corrected, `group_cols` can used break cells groups batch correction performed separately.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct","text":"","code":"tof_batch_correct(   tof_tibble,   channel_cols,   group_cols,   augment = TRUE,   method = c(\"rescale\", \"quantile\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct","text":"tof_tibble `tof_tbl` `tibble`. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. group_cols Optional. Unquoted column names indicating columns used group cells batch correction. Batch correction performed independently within group. Supports tidyselect helpers. augment boolean value indicating output replace `channel_cols` `tof_tibble` new, batch corrected columns (TRUE, default) return batch-corrected columns (FALSE) columns omitted. method string indicating batch correction method used. Valid options \"rescale\" linear scaling (default) \"quantile\" quantile normalization using normalize.quantiles.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct","text":"augment = TRUE, tibble number rows columns tof_tibble, columns specified `channel_cols` batch-corrected. augment = FALSE, tibble containing batch-corrected `channel_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile.html","id":null,"dir":"Reference","previous_headings":"","what":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile","text":"function performs quantile normalization high-dimensional cytometry data tidy format using normalize.quantiles. Optionally, groups can specified normalized separately.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile","text":"","code":"tof_batch_correct_quantile(   tof_tibble,   channel_cols,   group_cols,   augment = TRUE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile","text":"tof_tibble `tof_tbl` `tibble`. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. group_cols Optional. Unquoted column names indicating columns used group cells batch correction. Batch correction performed independently within group. Supports tidyselect helpers. augment boolean value indicating output replace `channel_cols` `tof_tibble` new, batch corrected columns (TRUE, default) return batch-corrected columns (FALSE) columns omitted.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile","text":"augment = TRUE, tibble number rows columns tof_tibble, columns specified `channel_cols` batch-corrected. augment = FALSE, tibble containing batch-corrected `channel_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile_tibble","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile_tibble","text":"function performs quantile normalization high-dimensional cytometry data tidy format using normalize.quantiles.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile_tibble","text":"","code":"tof_batch_correct_quantile_tibble(tof_tibble, channel_cols, augment = TRUE)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile_tibble","text":"tof_tibble `tof_tbl` `tibble`. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. augment boolean value indicating output replace `channel_cols` `tof_tibble` new, batch corrected columns (TRUE, default) return batch-corrected columns (FALSE) columns omitted.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile_tibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile_tibble","text":"augment = TRUE, tibble number rows columns tof_tibble, columns specified `channel_cols` batch-corrected. augment = FALSE, tibble containing batch-corrected `channel_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile_tibble.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile_tibble","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_rescale.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct_rescale","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct_rescale","text":"function performs quantile normalization high-dimensional cytometry data tidy format using linear rescaling. channel specified `channel_cols` rescaled maximum value 1 minimum value 0. `group_cols` specifies columns used break cells groups rescaling performed separately.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_rescale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct_rescale","text":"","code":"tof_batch_correct_rescale(tof_tibble, channel_cols, group_cols, augment = TRUE)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_rescale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct_rescale","text":"tof_tibble `tof_tbl` `tibble`. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. group_cols Optional. Unquoted column names indicating columns used group cells batch correction. Batch correction performed independently within group. Supports tidyselect helpers. augment boolean value indicating output replace `channel_cols` `tof_tibble` new, batch corrected columns (TRUE, default) return batch-corrected columns (FALSE) columns omitted.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_rescale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct_rescale","text":"augment = TRUE, tibble number rows columns tof_tibble, columns specified `channel_cols` batch-corrected. augment = FALSE, tibble containing batch-corrected `channel_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_rescale.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct_rescale","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_build_classifier.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate centroids and covariance matrices for each cell subpopulation in\nhealthy CyTOF data. — tof_build_classifier","title":"Calculate centroids and covariance matrices for each cell subpopulation in\nhealthy CyTOF data. — tof_build_classifier","text":"function takes `tibble` `tof_tibble` storing healthy cell measurements rows vector (`healthy_cell_labels`) representing cell subpopulation cell belongs. uses values calculate several values required perform \"developmental classification\" described paper.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_build_classifier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate centroids and covariance matrices for each cell subpopulation in\nhealthy CyTOF data. — tof_build_classifier","text":"","code":"tof_build_classifier(   healthy_tibble = NULL,   healthy_cell_labels = NULL,   classifier_markers = where(tof_is_numeric),   verbose = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_build_classifier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate centroids and covariance matrices for each cell subpopulation in\nhealthy CyTOF data. — tof_build_classifier","text":"healthy_tibble `tibble` `tof_tibble` containing cells healthy control samples (.e. disease samples). healthy_cell_labels character integer vector length `nrow(healthy_tibble)`. entry vector represent cell subpopulation label (cluster id) corresponding row `healthy_tibble`. classifier_markers Unquoted column names indicating columns `healthy_tibble` use developmental classification. Defaults numeric columns `healthy_tibble`. Supports tidyselect helpers. verbose boolean value indicating updates printed console classification. Defaults FALSE.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_build_classifier.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate centroids and covariance matrices for each cell subpopulation in\nhealthy CyTOF data. — tof_build_classifier","text":"tibble three columns: population (id healthy cell population), centroid (centroid vector cell population), covariance_matrix (covariance matrix cell population)","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_calculate_flow_rate.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the relative flow rates of different timepoints throughout a flow\nor mass cytometry run. — tof_calculate_flow_rate","title":"Calculate the relative flow rates of different timepoints throughout a flow\nor mass cytometry run. — tof_calculate_flow_rate","text":"Calculate relative flow rates different timepoints throughout flow mass cytometry run.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_calculate_flow_rate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the relative flow rates of different timepoints throughout a flow\nor mass cytometry run. — tof_calculate_flow_rate","text":"","code":"tof_calculate_flow_rate(   tof_tibble,   time_col,   num_timesteps = nrow(tof_tibble)/1000 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_calculate_flow_rate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the relative flow rates of different timepoints throughout a flow\nor mass cytometry run. — tof_calculate_flow_rate","text":"tof_tibble `tof_tbl` `tibble`. time_col unquoted column name indicating column `tof_tibble` contains time cell collected. num_timesteps number bins `time_col` split. define \"timesteps\" data collection process. number cells analyzed cytometer counted bin separately represent relative average flow rate timestep data collection.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_calculate_flow_rate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the relative flow rates of different timepoints throughout a flow\nor mass cytometry run. — tof_calculate_flow_rate","text":"tibble 3 columns num_timesteps rows. row represent single timestep (error thrown `num_timesteps` larger number rows `tof_tibble`). three columns follows: \"timestep\", numeric vector indicating timestep represented given row; \"time_window\", factor showing interval `time_col` \"timestep\" defined; \"num_cells\", number cells collected timestep.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_calculate_flow_rate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the relative flow rates of different timepoints throughout a flow\nor mass cytometry run. — tof_calculate_flow_rate","text":"","code":"# simulate some data sim_data <-     data.frame(         cd4 = rnorm(n = 100, mean = 5, sd = 0.5),         cd8 = rnorm(n = 100, mean = 0, sd = 0.1),         cd33 = rnorm(n = 100, mean = 10, sd = 0.1),         time = sample(1:300, size = 100)     )  tof_calculate_flow_rate(tof_tibble = sim_data, time_col = time, num_timesteps = 20L) #>    timestep time_window num_cells #> 1         1 (6.71,21.6]         4 #> 2         2 (21.6,36.2]         6 #> 3         3 (36.2,50.8]         7 #> 4         4 (50.8,65.4]         7 #> 5         5   (65.4,80]         5 #> 6         6   (80,94.6]         4 #> 7         7  (94.6,109]         5 #> 8         8   (109,124]         4 #> 9         9   (124,138]         1 #> 10       10   (138,153]         7 #> 11       11   (153,168]         5 #> 12       12   (168,182]         2 #> 13       13   (182,197]         7 #> 14       14   (197,211]         7 #> 15       15   (211,226]         5 #> 16       16   (226,241]         2 #> 17       17   (241,255]         4 #> 18       18   (255,270]         5 #> 19       19   (270,284]         7 #> 20       20   (284,299]         6"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_check_model_args.html","id":null,"dir":"Reference","previous_headings":"","what":"Check argument specifications for a glmnet model. — tof_check_model_args","title":"Check argument specifications for a glmnet model. — tof_check_model_args","text":"Check argument specifications glmnet model.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_check_model_args.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check argument specifications for a glmnet model. — tof_check_model_args","text":"","code":"tof_check_model_args(   split_data,   model_type = c(\"linear\", \"two-class\", \"multiclass\", \"survival\"),   best_model_type = c(\"best\", \"best with sparsity\"),   response_col,   time_col,   event_col )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_check_model_args.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check argument specifications for a glmnet model. — tof_check_model_args","text":"split_data `rsplit` `rset` object rsample package containing sample-level data use modeling. Alternatively, unsplit tbl_df can provided, though recommended. model_type string indicating kind elastic net model build. continuous response predicted, use \"linear\" linear regression; categorical response 2 classes predicted, use \"two-class\" logistic regression; categorical response 2 levels predicted, use \"multiclass\" multinomial regression; time--event outcome predicted, use \"survival\" Cox regression. best_model_type Currently unused. response_col Unquoted column name indicating column data contained `split_data` used outcome \"two-class\", \"multiclass\", \"linear\" elastic net model. Must factor \"two-class\" \"multiclass\" models must numeric \"linear\" models. Ignored `model_type` \"survival\". time_col Unquoted column name indicating column data contained `split_data` represents time--event outcome \"survival\" elastic net model. Must numeric. Ignored `model_type` \"two-class\", \"multiclass\", \"linear\". event_col Unquoted column name indicating column data contained `split_data` represents time--event outcome \"survival\" elastic net model. Must binary column - values either 0 1 (1 indicating adverse event) FALSE TRUE (TRUE indicating adverse event). Ignored `model_type` \"two-class\", \"multiclass\", \"linear\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_check_model_args.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check argument specifications for a glmnet model. — tof_check_model_args","text":"tibble. arguments specified correctly, tibble can used create recipe preprocessing.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_classify_cells.html","id":null,"dir":"Reference","previous_headings":"","what":"Classify each cell (i.e. each row) in a matrix of cancer cells into its most\nsimilar healthy developmental subpopulation. — tof_classify_cells","title":"Classify each cell (i.e. each row) in a matrix of cancer cells into its most\nsimilar healthy developmental subpopulation. — tof_classify_cells","text":"function uses specified distance metric classify cell data.frame matrix (`cancer_data`) one `nrow(classifier_fit)` subpopulations based minimum distance, described paper.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_classify_cells.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Classify each cell (i.e. each row) in a matrix of cancer cells into its most\nsimilar healthy developmental subpopulation. — tof_classify_cells","text":"","code":"tof_classify_cells(   classifier_fit,   cancer_data,   distance_function = c(\"mahalanobis\", \"cosine\", \"pearson\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_classify_cells.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Classify each cell (i.e. each row) in a matrix of cancer cells into its most\nsimilar healthy developmental subpopulation. — tof_classify_cells","text":"classifier_fit tibble produced tof_build_classifier. cancer_data matrix row corresponds cell column corresponds measured CyTOF antigen. distance_function string indicating three distance functions used calculate distances row `cancer_data` healthy developmental subpopulations corresponding row `classifier_fit`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_classify_cells.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Classify each cell (i.e. each row) in a matrix of cancer cells into its most\nsimilar healthy developmental subpopulation. — tof_classify_cells","text":"data.frame column represents distance cell input data healthy subpopulation cells classified .","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_clean_metric_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename glmnet's default model evaluation metrics to make them more interpretable — tof_clean_metric_names","title":"Rename glmnet's default model evaluation metrics to make them more interpretable — tof_clean_metric_names","text":"Rename glmnet's default model evaluation metrics make interpretable","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_clean_metric_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename glmnet's default model evaluation metrics to make them more interpretable — tof_clean_metric_names","text":"","code":"tof_clean_metric_names(metric_tibble, model_type)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_clean_metric_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename glmnet's default model evaluation metrics to make them more interpretable — tof_clean_metric_names","text":"metric_tibble tibble column represents glmnet model evaluation metric default name. model_type string indicating type glmnet model trained.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_clean_metric_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename glmnet's default model evaluation metrics to make them more interpretable — tof_clean_metric_names","text":"tibble column represents glmnet model evaluation metric \"cleaned\" name.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster high-dimensional cytometry data. — tof_cluster","title":"Cluster high-dimensional cytometry data. — tof_cluster","text":"function wrapper around tidytof's tof_cluster_* function family. performs clustering high-dimensional cytometry data using user-specified method (5 choices) method's corresponding input parameters.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster high-dimensional cytometry data. — tof_cluster","text":"","code":"tof_cluster(   tof_tibble,   cluster_cols = where(tof_is_numeric),   group_cols = NULL,   ...,   augment = TRUE,   method )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster high-dimensional cytometry data. — tof_cluster","text":"tof_tibble `tof_tbl` `tibble`. cluster_cols Unquoted column names indicating columns `tof_tibble` use computing clusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. group_cols Optional. Unquoted column names indicating columns used group cells clustering. Clustering performed group independently. Supports tidyselect helpers. ... Additional arguments pass `tof_cluster_*` function family member corresponding chosen method. augment boolean value indicating output column-bind cluster ids cell new column `tof_tibble` (TRUE, default) single-column tibble including cluster ids returned (FALSE). method string indicating clustering methods used. Valid values include \"flowsom\", \"phenograph\", \"kmeans\", \"ddpr\", \"xshift\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cluster high-dimensional cytometry data. — tof_cluster","text":"`tof_tbl` `tibble` augment = FALSE, single column encoding cluster ids cell `tof_tibble`. augment = TRUE, ncol(tof_tibble) + 1 columns: (unaltered) columns `tof_tibble` plus additional column encoding cluster ids.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cluster high-dimensional cytometry data. — tof_cluster","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 500),         cd38 = rnorm(n = 500),         cd34 = rnorm(n = 500),         cd19 = rnorm(n = 500)     )  tof_cluster(tof_tibble = sim_data, method = \"kmeans\") #> # A tibble: 500 × 5 #>      cd45   cd38   cd34   cd19 .kmeans_cluster #>     <dbl>  <dbl>  <dbl>  <dbl> <chr>           #>  1  1.33  -0.447  1.50   0.436 11              #>  2 -1.20  -0.481 -0.391 -1.54  9               #>  3 -0.541  0.666 -1.68  -0.986 16              #>  4 -1.22   1.32   0.689 -0.791 10              #>  5  0.639  0.519 -1.32  -0.204 18              #>  6 -0.239  0.397 -0.780  0.372 1               #>  7  0.651  0.997 -0.665  0.805 18              #>  8  0.788  1.26   0.584 -0.953 19              #>  9 -0.344  0.388 -0.407 -0.442 13              #> 10  0.120  0.885 -2.26   0.583 17              #> # ℹ 490 more rows tof_cluster(tof_tibble = sim_data, method = \"phenograph\") #> # A tibble: 500 × 5 #>      cd45   cd38   cd34   cd19 .phenograph_cluster #>     <dbl>  <dbl>  <dbl>  <dbl> <chr>               #>  1  1.33  -0.447  1.50   0.436 2                   #>  2 -1.20  -0.481 -0.391 -1.54  1                   #>  3 -0.541  0.666 -1.68  -0.986 1                   #>  4 -1.22   1.32   0.689 -0.791 3                   #>  5  0.639  0.519 -1.32  -0.204 5                   #>  6 -0.239  0.397 -0.780  0.372 5                   #>  7  0.651  0.997 -0.665  0.805 4                   #>  8  0.788  1.26   0.584 -0.953 8                   #>  9 -0.344  0.388 -0.407 -0.442 1                   #> 10  0.120  0.885 -2.26   0.583 5                   #> # ℹ 490 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_ddpr.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform developmental clustering on high-dimensional cytometry data. — tof_cluster_ddpr","title":"Perform developmental clustering on high-dimensional cytometry data. — tof_cluster_ddpr","text":"function performs distance-based clustering high-dimensional cytometry data sorting cancer cells (passed function `tof_tibble`) phenotypically similar healthy cell subpopulation (passed function using `healthy_tibble`). details algorithm used perform clustering, see paper.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_ddpr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform developmental clustering on high-dimensional cytometry data. — tof_cluster_ddpr","text":"","code":"tof_cluster_ddpr(   tof_tibble,   healthy_tibble,   healthy_label_col,   cluster_cols = where(tof_is_numeric),   distance_function = c(\"mahalanobis\", \"cosine\", \"pearson\"),   num_cores = 1L,   parallel_cols,   return_distances = FALSE,   verbose = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_ddpr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform developmental clustering on high-dimensional cytometry data. — tof_cluster_ddpr","text":"tof_tibble `tibble` `tof_tbl` containing cells classified nearest healthy subpopulation (generally cancer cells). healthy_tibble `tibble` `tof_tibble` containing cells healthy control samples (.e. disease samples). healthy_label_col unquoted column name indicating column `healthy_tibble` contains subpopulation label (cluster id) cell `healthy_tibble`. cluster_cols Unquoted column names indicating columns `tof_tibble` use computing DDPR clusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. distance_function string indicating distance function used perform classification. Options \"mahalanobis\" (default), \"cosine\", \"pearson\". num_cores integer indicating number CPU cores used parallelize classification. Defaults 1 (single core). parallel_cols Optional. Unquoted column names indicating columns `tof_tibble` use breaking data order parallelize classification using `foreach` `doParallel` backend. Supports tidyselect helpers. return_distances boolean value indicating whether returned result include one column, cluster ids corresponding row `tof_tibble` (return_distances = FALSE, default), returned result include additional columns representing distance row `tof_tibble` healthy subpopulation centroids (return_distances = TRUE). verbose boolean value indicating whether progress updates printed developmental classification. Default FALSE.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_ddpr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform developmental clustering on high-dimensional cytometry data. — tof_cluster_ddpr","text":"`return_distances = FALSE`, tibble one column named `.distance_function_cluster`, character vector length `nrow(tof_tibble)` indicating id developmental cluster cell (.e. row) `tof_tibble` assigned. `return_distances = TRUE`, tibble `nrow(tof_tibble)` rows `nrow(classifier_fit) + 1` columns. row represents cell `tof_tibble`, `nrow(classifier_fit)` columns represent distance cell healthy subpopulations' cluster centroids. final column represents cluster id healthy subpopulation minimum distance cell represented row. `return_distances = FALSE`, tibble one column named `.{distance_function}_cluster`. column contain integer vector length `nrow(tof_tibble)` indicating id developmental cluster cell (.e. row) `tof_tibble` assigned.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_ddpr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform developmental clustering on high-dimensional cytometry data. — tof_cluster_ddpr","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  healthy_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200),         cluster_id = c(rep(\"a\", times = 100), rep(\"b\", times = 100))     )  tof_cluster_ddpr(     tof_tibble = sim_data,     healthy_tibble = healthy_data,     healthy_label_col = cluster_id ) #> # A tibble: 1,000 × 1 #>    .mahalanobis_cluster #>    <chr>                #>  1 b                    #>  2 b                    #>  3 b                    #>  4 a                    #>  5 b                    #>  6 b                    #>  7 b                    #>  8 a                    #>  9 a                    #> 10 b                    #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_flowsom.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","title":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","text":"function performs FlowSOM clustering high-dimensional cytometry data using user-specified selection input variables/high-dimensional cytometry measurements. mostly convenient wrapper around SOM MetaClustering.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_flowsom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","text":"","code":"tof_cluster_flowsom(   tof_tibble = NULL,   cluster_cols = where(tof_is_numeric),   som_xdim = 10,   som_ydim = 10,   som_distance_function = c(\"euclidean\", \"manhattan\", \"chebyshev\", \"cosine\"),   perform_metaclustering = TRUE,   num_metaclusters = 20,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_flowsom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","text":"tof_tibble `tof_tbl` `tibble`. cluster_cols Unquoted column names indicating columns `tof_tibble` use computing flowSOM clusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. som_xdim width grid used self-organizing map. total number clusters returned FlowSOM som_xdim * som_ydim, adjust value affect final number clusters. Defaults 10. som_ydim height grid used self-organizing map. total number clusters returned FlowSOM som_xdim * som_ydim, adjust value affect final number clusters. Defaults 10. som_distance_function distance function used self-organizing map calculations. Options \"euclidean\" (default), \"manhattan\", \"chebyshev\", \"cosine\". perform_metaclustering boolean value indicating metaclustering performed initial clustering result returned FlowSOM. Defaults TRUE. num_metaclusters integer indicating maximum number metaclusters returned metaclustering. Defaults 20. ... Optional additional parameters can passed BuildSOM function.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_flowsom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","text":"tibble one column named `.flowsom_cluster` `.flowsom_metacluster` depending value `perform_metaclustering`. column contain integer vector length `nrow(tof_tibble)` indicating id flowSOM cluster cell (.e. row) `tof_tibble` assigned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_flowsom.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","text":"additional details FlowSOM algorithm, see paper.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_flowsom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200)     )  tof_cluster_flowsom(tof_tibble = sim_data, cluster_cols = c(cd45, cd19)) #> # A tibble: 200 × 1 #>    .flowsom_metacluster #>    <chr>                #>  1 10                   #>  2 10                   #>  3 8                    #>  4 5                    #>  5 10                   #>  6 15                   #>  7 6                    #>  8 8                    #>  9 15                   #> 10 2                    #> # ℹ 190 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_grouped.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster (grouped) high-dimensional cytometry data. — tof_cluster_grouped","title":"Cluster (grouped) high-dimensional cytometry data. — tof_cluster_grouped","text":"function wrapper around tidytof's tof_cluster_* function family provides low-level API clustering grouped data frames. subroutine tof_cluster called directly users.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_grouped.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster (grouped) high-dimensional cytometry data. — tof_cluster_grouped","text":"","code":"tof_cluster_grouped(tof_tibble, group_cols, ..., augment = TRUE, method)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_grouped.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster (grouped) high-dimensional cytometry data. — tof_cluster_grouped","text":"tof_tibble `tof_tbl` `tibble`. group_cols unquoted column name indicating columns used group cells clustering. Clustering performed group independently. ... Additional arguments pass `tof_cluster_*` function family member corresponding chosen method. augment boolean value indicating output column-bind cluster ids cell new column `tof_tibble` (TRUE, default) single-column tibble including cluster ids returned (FALSE). method string indicating clustering methods used. Valid values include \"flowsom\", \"phenograph\", \"kmeans\", \"ddpr\", \"xshift\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_grouped.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cluster (grouped) high-dimensional cytometry data. — tof_cluster_grouped","text":"`tof_tbl` `tibble` augment = FALSE, single column encoding cluster ids cell `tof_tibble`. augment = TRUE, ncol(tof_tibble) + 1 columns: (unaltered) columns `tof_tibble` plus additional column encoding cluster ids.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_kmeans.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform k-means clustering on high-dimensional cytometry data. — tof_cluster_kmeans","title":"Perform k-means clustering on high-dimensional cytometry data. — tof_cluster_kmeans","text":"function performs k-means clustering high-dimensional cytometry data using user-specified selection input variables/high-dimensional cytometry measurements. mostly convenient wrapper around kmeans.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_kmeans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform k-means clustering on high-dimensional cytometry data. — tof_cluster_kmeans","text":"","code":"tof_cluster_kmeans(   tof_tibble,   cluster_cols = where(tof_is_numeric),   num_clusters = 20,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_kmeans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform k-means clustering on high-dimensional cytometry data. — tof_cluster_kmeans","text":"tof_tibble `tof_tibble`. cluster_cols Unquoted column names indicating columns `tof_tibble` use computing k-means clusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. num_clusters integer indicating maximum number clusters returned. Defaults 20. ... Optional additional arguments can passed kmeans.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_kmeans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform k-means clustering on high-dimensional cytometry data. — tof_cluster_kmeans","text":"tibble one column named `.kmeans_cluster`. column contain integer vector length `nrow(tof_tibble)` indicating id k-means cluster cell (.e. row) `tof_tibble` assigned.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_kmeans.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform k-means clustering on high-dimensional cytometry data. — tof_cluster_kmeans","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     ) tof_cluster_kmeans(tof_tibble = sim_data) #> # A tibble: 1,000 × 1 #>    .kmeans_cluster #>    <chr>           #>  1 3               #>  2 19              #>  3 13              #>  4 13              #>  5 15              #>  6 10              #>  7 12              #>  8 4               #>  9 20              #> 10 4               #> # ℹ 990 more rows tof_cluster_kmeans(tof_tibble = sim_data, cluster_cols = c(cd45, cd19)) #> # A tibble: 1,000 × 1 #>    .kmeans_cluster #>    <chr>           #>  1 4               #>  2 9               #>  3 15              #>  4 15              #>  5 16              #>  6 12              #>  7 8               #>  8 19              #>  9 5               #> 10 13              #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_phenograph.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","title":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","text":"function performs PhenoGraph clustering high-dimensional cytometry data using user-specified selection input variables/high-dimensional cytometry measurements.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_phenograph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","text":"","code":"tof_cluster_phenograph(   tof_tibble,   cluster_cols = where(tof_is_numeric),   num_neighbors = 30,   distance_function = c(\"euclidean\", \"cosine\"),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_phenograph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","text":"tof_tibble `tof_tbl` `tibble`. cluster_cols Unquoted column names indicating columns `tof_tibble` use computing PhenoGraph clusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. num_neighbors integer indicating number neighbors use constructing PhenoGraph's k-nearest-neighbor graph. Smaller values emphasize local graph structure; larger values emphasize global graph structure (add time computation). Defaults 30. distance_function string indicating distance function use nearest-neighbor calculation. Options include \"euclidean\" (default) \"cosine\" distances. ... Optional additional parameters can passed tof_find_knn.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_phenograph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","text":"tibble one column named `.phenograph_cluster`. column contain integer vector length `nrow(tof_tibble)` indicating id PhenoGraph cluster cell (.e. row) `tof_tibble` assigned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_phenograph.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","text":"additional details Phenograph algorithm, see paper.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_phenograph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     ) tof_cluster_phenograph(tof_tibble = sim_data) #> # A tibble: 1,000 × 1 #>    .phenograph_cluster #>    <chr>               #>  1 3                   #>  2 2                   #>  3 3                   #>  4 3                   #>  5 2                   #>  6 10                  #>  7 6                   #>  8 4                   #>  9 7                   #> 10 2                   #> # ℹ 990 more rows tof_cluster_phenograph(tof_tibble = sim_data, cluster_cols = c(cd45, cd19)) #> # A tibble: 1,000 × 1 #>    .phenograph_cluster #>    <chr>               #>  1 2                   #>  2 10                  #>  3 1                   #>  4 12                  #>  5 4                   #>  6 8                   #>  7 1                   #>  8 12                  #>  9 3                   #> 10 12                  #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster (ungrouped) high-dimensional cytometry data. — tof_cluster_tibble","title":"Cluster (ungrouped) high-dimensional cytometry data. — tof_cluster_tibble","text":"function wrapper around tidytof's tof_cluster_* function family provides low-level API clustering ungrouped data frames. subroutine tof_cluster called directly users.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster (ungrouped) high-dimensional cytometry data. — tof_cluster_tibble","text":"","code":"tof_cluster_tibble(tof_tibble, ..., augment = TRUE, method)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster (ungrouped) high-dimensional cytometry data. — tof_cluster_tibble","text":"tof_tibble `tof_tbl` `tibble`. ... Additional arguments pass `tof_cluster_*` function family member corresponding chosen method. augment boolean value indicating output column-bind cluster ids cell new column `tof_tibble` (TRUE, default) single-column tibble including cluster ids returned (FALSE). method string indicating clustering methods used. Valid values include \"flowsom\", \"phenograph\", \"kmeans\", \"ddpr\", \"xshift\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_tibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cluster (ungrouped) high-dimensional cytometry data. — tof_cluster_tibble","text":"`tof_tbl` `tibble` augment = FALSE, single column encoding cluster ids cell `tof_tibble`. augment = TRUE, ncol(tof_tibble) + 1 columns: (unaltered) columns `tof_tibble` plus additional column encoding cluster ids.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_compute_km_curve.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute a Kaplan-Meier curve from sample-level survival data — tof_compute_km_curve","title":"Compute a Kaplan-Meier curve from sample-level survival data — tof_compute_km_curve","text":"Compute Kaplan-Meier curve sample-level survival data","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_compute_km_curve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute a Kaplan-Meier curve from sample-level survival data — tof_compute_km_curve","text":"","code":"tof_compute_km_curve(survival_curves)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_compute_km_curve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute a Kaplan-Meier curve from sample-level survival data — tof_compute_km_curve","text":"survival_curves tibble Kaplan-Meier curve computed. row must represent observation must two columns named \"time_to_event\" \"event\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_compute_km_curve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute a Kaplan-Meier curve from sample-level survival data — tof_compute_km_curve","text":"tibble 3 columns: time_to_event, survival_probability, is_censored (whether event censored timepoint).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cosine_dist.html","id":null,"dir":"Reference","previous_headings":"","what":"A function for finding the cosine distance between each of the rows of a numeric\nmatrix and a numeric vector. — tof_cosine_dist","title":"A function for finding the cosine distance between each of the rows of a numeric\nmatrix and a numeric vector. — tof_cosine_dist","text":"function finding cosine distance rows numeric matrix numeric vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cosine_dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function for finding the cosine distance between each of the rows of a numeric\nmatrix and a numeric vector. — tof_cosine_dist","text":"","code":"tof_cosine_dist(matrix, vector)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cosine_dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function for finding the cosine distance between each of the rows of a numeric\nmatrix and a numeric vector. — tof_cosine_dist","text":"matrix numeric matrix. vector numeric vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cosine_dist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function for finding the cosine distance between each of the rows of a numeric\nmatrix and a numeric vector. — tof_cosine_dist","text":"numeric vector distances length `nrow(matrix)` ith entry represents cosine distance ith row `matrix` `vector`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cosine_dist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A function for finding the cosine distance between each of the rows of a numeric\nmatrix and a numeric vector. — tof_cosine_dist","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an elastic net hyperparameter search grid of a specified size — tof_create_grid","title":"Create an elastic net hyperparameter search grid of a specified size — tof_create_grid","text":"function creates regular hyperparameter search grid (form tibble) specifying search space two hyperparameters generalized linear model using glmnet package: regularization penalty term lasso/ridge regression mixture term.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an elastic net hyperparameter search grid of a specified size — tof_create_grid","text":"","code":"tof_create_grid(   penalty_values,   mixture_values,   num_penalty_values = 5,   num_mixture_values = 5 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an elastic net hyperparameter search grid of a specified size — tof_create_grid","text":"penalty_values numeric vector unique elastic net penalty values (\"lambda\") include hyperparameter grid. unspecified, regular grid `num_penalty_values` 10^(-10) 10^(0) used. mixture_values numeric vector elastic net mixture values (\"alpha\") include hyperparameter grid. unspecified, regular grid `num_mixture_values` 0 1 used. num_penalty_values Optional. `penalty_values` supplied, `num_penalty_values` (integer) can given specify many equally-spaced penalty values 10^(-10) 1 included hyperparameter grid. method used, regular grid always returned. Defaults 5. num_mixture_values Optional. `mixture_values` supplied, `num_mixture_values` (integer) can given specify many equally-spaced penalty values 0 (ridge regression) 1 (lasso) included hyperparameter grid. method used, regular grid always returned. Defaults 5.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an elastic net hyperparameter search grid of a specified size — tof_create_grid","text":"tibble two numeric columns: `penalty` `mixture`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_grid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an elastic net hyperparameter search grid of a specified size — tof_create_grid","text":"","code":"tof_create_grid() #> # A tibble: 25 × 2 #>         penalty mixture #>           <dbl>   <dbl> #>  1 0.0000000001    0    #>  2 0.0000000001    0.25 #>  3 0.0000000001    0.5  #>  4 0.0000000001    0.75 #>  5 0.0000000001    1    #>  6 0.0000000316    0    #>  7 0.0000000316    0.25 #>  8 0.0000000316    0.5  #>  9 0.0000000316    0.75 #> 10 0.0000000316    1    #> # ℹ 15 more rows  tof_create_grid(num_penalty_values = 10, num_mixture_values = 5) #> # A tibble: 50 × 2 #>          penalty mixture #>            <dbl>   <dbl> #>  1 0.0000000001     0    #>  2 0.0000000001     0.25 #>  3 0.0000000001     0.5  #>  4 0.0000000001     0.75 #>  5 0.0000000001     1    #>  6 0.00000000129    0    #>  7 0.00000000129    0.25 #>  8 0.00000000129    0.5  #>  9 0.00000000129    0.75 #> 10 0.00000000129    1    #> # ℹ 40 more rows  tof_create_grid(penalty_values = c(0.01, 0.1, 0.5)) #> # A tibble: 15 × 2 #>    penalty mixture #>      <dbl>   <dbl> #>  1    0.01    0    #>  2    0.01    0.25 #>  3    0.01    0.5  #>  4    0.01    0.75 #>  5    0.01    1    #>  6    0.1     0    #>  7    0.1     0.25 #>  8    0.1     0.5  #>  9    0.1     0.75 #> 10    0.1     1    #> 11    0.5     0    #> 12    0.5     0.25 #> 13    0.5     0.5  #> 14    0.5     0.75 #> 15    0.5     1"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_recipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a recipe for preprocessing sample-level cytometry data for an elastic net model — tof_create_recipe","title":"Create a recipe for preprocessing sample-level cytometry data for an elastic net model — tof_create_recipe","text":"Create recipe preprocessing sample-level cytometry data elastic net model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_recipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a recipe for preprocessing sample-level cytometry data for an elastic net model — tof_create_recipe","text":"","code":"tof_create_recipe(   feature_tibble,   predictor_cols,   outcome_cols,   standardize_predictors = TRUE,   remove_zv_predictors = FALSE,   impute_missing_predictors = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_recipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a recipe for preprocessing sample-level cytometry data for an elastic net model — tof_create_recipe","text":"feature_tibble tibble row represents sample- patient- level observation, produced tof_extract_features. predictor_cols Unquoted column names indicating columns data contained `feature_tibble` used predictors elastic net model. Supports tidyselect helpers. outcome_cols Unquoted column names indicating columns `feature_tibble` used outcome variables elastic net model. Supports tidyselect helpers. standardize_predictors logical value indicating numeric predictor columns standardized (centered scaled) model fitting. Defaults TRUE. remove_zv_predictors logical value indicating predictor columns near-zero variance removed model fitting using step_nzv. Defaults FALSE. impute_missing_predictors logical value indicating predictor columns missing values imputed using k-nearest neighbors model fitting (see step_impute_knn). Imputation performed using observation's 5 nearest-neighbors. Defaults FALSE.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_recipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a recipe for preprocessing sample-level cytometry data for an elastic net model — tof_create_recipe","text":"recipe object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample.html","id":null,"dir":"Reference","previous_headings":"","what":"Downsample high-dimensional cytometry data. — tof_downsample","title":"Downsample high-dimensional cytometry data. — tof_downsample","text":"function downsamples number cells `tof_tbl` using one three methods (randomly sampling constant number cells, randomly sampling proportion cells, performing density-dependent downsampling per algorithm Qiu et al., (2011)).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downsample high-dimensional cytometry data. — tof_downsample","text":"","code":"tof_downsample(   tof_tibble,   group_cols = NULL,   ...,   method = c(\"constant\", \"prop\", \"density\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downsample high-dimensional cytometry data. — tof_downsample","text":"tof_tibble `tof_tbl` `tibble`. group_cols Unquoted names columns `tof_tibble` used define groups within downsampling performed. Supports tidyselect helpers. Defaults `NULL` (grouping). ... Additional arguments pass `tof_downsample_*` function family member corresponding chosen method. method string indicating downsampling method use: \"constant\" (default), \"prop\", \"density\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downsample high-dimensional cytometry data. — tof_downsample","text":"downsampled `tof_tbl` number columns input `tof_tibble`, fewer rows. number rows result depend chosen downsampling method.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downsample high-dimensional cytometry data. — tof_downsample","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  # sample 200 cells from the input data tof_downsample(     tof_tibble = sim_data,     num_cells = 200L,     method = \"constant\" ) #> # A tibble: 200 × 5 #>      cd45   cd38    cd34   cd19 cluster_id #>     <dbl>  <dbl>   <dbl>  <dbl> <chr>      #>  1  0.221 -0.189 -0.591  -0.797 a          #>  2  0.389 -0.211 -0.481   0.921 w          #>  3 -1.74   0.569 -0.546  -2.80  k          #>  4 -1.67  -0.430 -0.672  -1.40  q          #>  5  0.700 -0.387  0.0933  1.09  j          #>  6 -1.28  -0.991 -0.232  -1.01  i          #>  7 -0.839  0.705  0.526  -0.758 b          #>  8 -0.892  1.54  -1.04   -0.825 t          #>  9  0.735 -1.64   1.17   -1.64  k          #> 10 -0.514 -1.29   0.460   1.29  u          #> # ℹ 190 more rows  # sample 10% of all cells from the input data tof_downsample(     tof_tibble = sim_data,     prop_cells = 0.1,     method = \"prop\" ) #> # A tibble: 100 × 5 #>      cd45   cd38    cd34    cd19 cluster_id #>     <dbl>  <dbl>   <dbl>   <dbl> <chr>      #>  1  0.598  0.376 -0.643   2.28   i          #>  2  0.464  1.07  -1.18   -1.51   q          #>  3  0.603 -1.18   0.215  -0.186  q          #>  4 -0.864 -0.938  1.03    0.0521 t          #>  5 -2.10  -0.549 -0.0921  0.589  l          #>  6  1.18  -1.67   0.144   0.125  j          #>  7 -1.21  -1.71   1.13    1.07   v          #>  8 -1.96   2.64  -0.656  -1.33   t          #>  9  0.525 -0.831 -0.326   0.924  n          #> 10  0.322  0.827 -0.370   0.970  c          #> # ℹ 90 more rows  # sample ~10% of cells from the input data using density dependence tof_downsample(     tof_tibble = sim_data,     target_prop_cells = 0.1,     method = \"density\" ) #> # A tibble: 101 × 5 #>       cd45   cd38   cd34   cd19 cluster_id #>      <dbl>  <dbl>  <dbl>  <dbl> <chr>      #>  1  0.0442  0.410 -0.182  0.521 d          #>  2  0.644   1.59  -1.48   0.309 y          #>  3  0.0230  0.209  0.502  0.829 z          #>  4  0.757  -0.844 -1.75   0.280 b          #>  5  0.666  -1.32  -1.28   0.680 q          #>  6  1.20    1.13  -0.161 -0.474 m          #>  7  1.35    2.21   2.00   0.116 p          #>  8 -0.0398  0.715  0.505  1.10  o          #>  9  1.17   -1.83   0.916  0.118 y          #> 10 -0.270  -0.314 -1.09  -0.711 s          #> # ℹ 91 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_constant.html","id":null,"dir":"Reference","previous_headings":"","what":"Downsample high-dimensional cytometry data by randomly selecting a constant number of cells per group. — tof_downsample_constant","title":"Downsample high-dimensional cytometry data by randomly selecting a constant number of cells per group. — tof_downsample_constant","text":"function downsamples number cells `tof_tbl` randomly selecting `num_cells` cells unique combination values `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_constant.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downsample high-dimensional cytometry data by randomly selecting a constant number of cells per group. — tof_downsample_constant","text":"","code":"tof_downsample_constant(tof_tibble, group_cols = NULL, num_cells)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_constant.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downsample high-dimensional cytometry data by randomly selecting a constant number of cells per group. — tof_downsample_constant","text":"tof_tibble `tof_tbl` `tibble`. group_cols Unquoted names columns `tof_tibble` used define groups `num_cells` downsampled. Supports tidyselect helpers. Defaults `NULL` (grouping). num_cells integer number cells sampled group defined `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_constant.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downsample high-dimensional cytometry data by randomly selecting a constant number of cells per group. — tof_downsample_constant","text":"`tof_tbl` number columns input `tof_tibble`, fewer rows. Specifically, number rows `num_cells` multiplied number unique combinations values `group_cols`. group fewer `num_cells` number cells, cells group kept.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_constant.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downsample high-dimensional cytometry data by randomly selecting a constant number of cells per group. — tof_downsample_constant","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  # sample 500 cells from the input data tof_downsample_constant(     tof_tibble = sim_data,     num_cells = 500L ) #> # A tibble: 500 × 5 #>       cd45   cd38   cd34   cd19 cluster_id #>      <dbl>  <dbl>  <dbl>  <dbl> <chr>      #>  1 -1.28    0.648 -1.96   0.832 l          #>  2 -1.37   -0.736 -1.24  -0.881 i          #>  3  1.23   -0.665  0.760  0.641 u          #>  4 -0.0649  0.401  0.491 -0.218 b          #>  5 -0.210   0.436 -1.05  -1.46  i          #>  6 -1.45    1.10   0.566 -0.309 k          #>  7 -0.485   0.513  0.439  1.49  b          #>  8 -0.117   0.407 -1.12  -1.30  b          #>  9 -1.06    0.779  0.762  1.52  z          #> 10 -0.285  -0.411 -1.26  -1.83  l          #> # ℹ 490 more rows  # sample 20 cells per cluster from the input data tof_downsample_constant(     tof_tibble = sim_data,     group_cols = cluster_id,     num_cells = 20L ) #> # A tibble: 520 × 5 #>      cd45   cd38    cd34    cd19 cluster_id #>     <dbl>  <dbl>   <dbl>   <dbl> <chr>      #>  1  0.578 -0.267  0.988   0.242  k          #>  2 -1.28   0.648 -1.96    0.832  l          #>  3 -1.37  -0.736 -1.24   -0.881  i          #>  4  1.23  -0.665  0.760   0.641  u          #>  5 -1.45   1.10   0.566  -0.309  k          #>  6 -1.06   0.779  0.762   1.52   z          #>  7  0.381 -0.235  0.684   0.835  k          #>  8  1.22   2.03  -0.796  -0.0476 v          #>  9  0.201  1.49  -1.23    0.474  c          #> 10  0.485 -0.297  0.0199  0.0298 m          #> # ℹ 510 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_density","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_density","text":"function downsamples number cells `tof_tbl` using density-dependent downsampling algorithm described Qiu et al., (2011).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_density","text":"","code":"tof_downsample_density(   tof_tibble,   group_cols = NULL,   density_cols = where(tof_is_numeric),   target_num_cells,   target_prop_cells,   target_percentile = 0.03,   outlier_percentile = 0.01,   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\"),   density_estimation_method = c(\"mean_distance\", \"sum_distance\", \"spade\"),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_density","text":"tof_tibble `tof_tbl` `tibble`. group_cols Unquoted names columns `tof_tibble` used define groups within downsampling performed. Supports tidyselect helpers. Defaults `NULL` (grouping). density_cols Unquoted names columns `tof_tibble` use density estimation cell. Defaults numeric columns `tof_tibble`. target_num_cells approximate constant number cells (0 1) sampled group defined `group_cols`. Slightly fewer cells may returned due density calculation performed. target_prop_cells approximate proportion cells (0 1) sampled group defined `group_cols`. Slightly fewer cells may returned due density calculation performed. Ignored `target_num_cells` specified. target_percentile local density percentile (.e. value 0 1) downsampling procedure adjust cells. short, algorithm continue remove cells input `tof_tibble` local densities remaining cells equal `target_percentile`. Lower values result cells removed. See Qiu et al., (2011) details. Defaults 0.1 (10th percentile local densities). Ignored either `target_num_cells` `target_prop_cells` specified. outlier_percentile local density percentile (.e. value 0 1) cells considered outliers (discarded). Cells local density `outlier_percentile` never selected downsampling procedure. Defaults 0.01 (cells 1st local density percentile removed). distance_function string indicating distance function use cell--cell distance calculations. Options include \"euclidean\" (default) \"cosine\" distances. density_estimation_method string indicating algorithm used calculate local density estimate cell. Options include k-nearest neighbor density estimation using mean distance cell's k-nearest neighbors (\"mean_distance\"; default), k-nearest neighbor density estimation using summed distance cell's k nearest neighbors (\"sum_distance\") counting number neighboring cells within spherical radius around cell described Qiu et al., 2011  (\"spade\"). \"spade\" often produces best results, slower knn-density estimation methods. ... Optional additional arguments pass tof_knn_density tof_spade_density.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_density","text":"`tof_tbl` number columns input `tof_tibble`, fewer rows. number rows depend chosen value `target_percentile`, fewer cells selected lower values `target_percentile`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_density","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  tof_downsample_density(     tof_tibble = sim_data,     density_cols = c(cd45, cd34, cd38),     target_prop_cells = 0.5,     density_estimation_method = \"spade\" ) #> # A tibble: 485 × 4 #>       cd45   cd38   cd34     cd19 #>      <dbl>  <dbl>  <dbl>    <dbl> #>  1  0.488   0.133  3.21   1.16    #>  2 -0.935   0.167 -0.557  0.619   #>  3  0.983   1.12  -0.519  0.888   #>  4 -1.19   -0.863  0.848 -1.16    #>  5 -0.341  -0.619  1.21   0.579   #>  6 -1.25    1.42  -0.508 -1.65    #>  7 -0.0728  0.302  0.107 -0.751   #>  8  0.782  -0.640 -1.44  -0.579   #>  9 -0.843   0.737 -0.874  0.241   #> 10  0.403   2.35   1.46   0.00507 #> # ℹ 475 more rows  tof_downsample_density(     tof_tibble = sim_data,     density_cols = c(cd45, cd34, cd38),     target_num_cells = 200L,     density_estimation_method = \"spade\" ) #> # A tibble: 215 × 4 #>       cd45    cd38   cd34    cd19 #>      <dbl>   <dbl>  <dbl>   <dbl> #>  1  0.0767 -0.747  -2.18   0.308  #>  2 -1.54   -0.753   0.181  1.78   #>  3 -0.875   1.58    0.104 -1.00   #>  4 -1.58   -0.450  -1.22   0.0580 #>  5 -0.843   0.737  -0.874  0.241  #>  6  0.788  -0.0120 -0.527  1.47   #>  7 -0.838   0.441  -1.53   0.521  #>  8  3.10   -1.03   -0.176  0.112  #>  9  1.50    0.320  -0.302 -1.99   #> 10  1.56   -0.705   0.916  1.97   #> # ℹ 205 more rows  tof_downsample_density(     tof_tibble = sim_data,     density_cols = c(cd45, cd34, cd38),     target_num_cells = 200L,     density_estimation_method = \"mean_distance\" ) #> # A tibble: 195 × 4 #>      cd45   cd38     cd34    cd19 #>     <dbl>  <dbl>    <dbl>   <dbl> #>  1 -1.25   1.42  -0.508   -1.65   #>  2  0.763 -0.700 -0.236   -1.44   #>  3 -1.58  -0.450 -1.22     0.0580 #>  4  1.86   0.439  1.44     1.30   #>  5  0.335  1.29   2.16    -0.594  #>  6  0.504 -0.391 -0.0860  -1.22   #>  7  0.610 -1.32  -2.01    -0.0329 #>  8 -0.508  1.21   0.00925 -1.39   #>  9  0.507  0.978 -0.305    2.75   #> 10  0.141  0.195 -0.448   -0.398  #> # ℹ 185 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_prop.html","id":null,"dir":"Reference","previous_headings":"","what":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_prop","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_prop","text":"function downsamples number cells `tof_tbl` randomly selecting `prop_cells` proportion total number cells unique combination values `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_prop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_prop","text":"","code":"tof_downsample_prop(tof_tibble, group_cols = NULL, prop_cells)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_prop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_prop","text":"tof_tibble `tof_tbl` `tibble`. group_cols Unquoted names columns `tof_tibble` used define groups `prop_cells` downsampled. Supports tidyselect helpers. Defaults `NULL` (grouping). prop_cells proportion cells (0 1) sampled group defined `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_prop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_prop","text":"`tof_tbl` number columns input `tof_tibble`, fewer rows. Specifically, number rows `prop_cells` times number rows input `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_prop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_prop","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  # sample 10% of all cells from the input data tof_downsample_prop(     tof_tibble = sim_data,     prop_cells = 0.1 ) #> # A tibble: 100 × 5 #>        cd45    cd38    cd34    cd19 cluster_id #>       <dbl>   <dbl>   <dbl>   <dbl> <chr>      #>  1  1.17     1.53   -1.45   -0.244  o          #>  2 -0.00520  0.736   1.59   -1.83   i          #>  3 -0.301    0.315  -1.47    0.435  o          #>  4 -0.644    1.79   -0.410   2.07   n          #>  5 -0.157    0.155   0.253   0.0810 p          #>  6 -0.978   -0.0740 -0.696   1.38   i          #>  7  1.48     0.450   0.434   0.687  u          #>  8  1.20    -0.998   0.805   1.63   k          #>  9  0.873   -0.296   0.0600 -0.332  o          #> 10  0.835    1.52   -0.441   0.640  y          #> # ℹ 90 more rows  # sample 10% of all cells from each cluster in the input data tof_downsample_prop(     tof_tibble = sim_data,     group_cols = cluster_id,     prop_cells = 0.1 ) #> # A tibble: 88 × 5 #>      cd45   cd38    cd34   cd19 cluster_id #>     <dbl>  <dbl>   <dbl>  <dbl> <chr>      #>  1 -2.26   0.201  1.04   -0.311 a          #>  2  0.434  1.29   0.417  -1.29  a          #>  3 -1.07  -0.741 -0.332  -0.768 a          #>  4 -0.160  0.428  0.683   0.859 a          #>  5  0.543  0.438 -1.41    1.34  b          #>  6 -0.978  2.01   0.0979  1.02  b          #>  7  1.46   1.29   1.03    1.42  b          #>  8 -0.158 -0.532 -0.343   0.145 b          #>  9  0.426 -0.967  0.0900  1.35  c          #> 10  0.414  2.59  -0.350  -0.880 c          #> # ℹ 78 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_estimate_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate the local densities for all cells in a high-dimensional cytometry dataset. — tof_estimate_density","title":"Estimate the local densities for all cells in a high-dimensional cytometry dataset. — tof_estimate_density","text":"function wrapper around tidytof's tof_*_density() function family. performs local density estimation high-dimensional cytometry data using user-specified method (3 choices) method's corresponding input parameters.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_estimate_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate the local densities for all cells in a high-dimensional cytometry dataset. — tof_estimate_density","text":"","code":"tof_estimate_density(   tof_tibble,   distance_cols = where(tof_is_numeric),   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\"),   normalize = TRUE,   ...,   augment = TRUE,   method = c(\"mean_distance\", \"sum_distance\", \"spade\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_estimate_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate the local densities for all cells in a high-dimensional cytometry dataset. — tof_estimate_density","text":"tof_tibble `tof_tbl` `tibble`. distance_cols Unquoted names columns `tof_tibble` use calculating cell--cell distances local density estimation cell. Defaults numeric columns `tof_tibble`. distance_function string indicating distance function use calculating cell--cell distances local density estimation. Options include \"euclidean\" (default) \"cosine\". normalize boolean value indicating vector local density estimates normalized values 0 1. Defaults TRUE. ... Additional arguments pass `tof_*_density()` function family member corresponding chosen `method`. augment boolean value indicating output column-bind local density estimates cell new column `tof_tibble` (TRUE; default) single-column tibble including local density estimates returned (FALSE). method string indicating local density estimation method used. Valid values include \"mean_distance\", \"sum_distance\", \"spade\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_estimate_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate the local densities for all cells in a high-dimensional cytometry dataset. — tof_estimate_density","text":"`tof_tbl` `tibble` augment = FALSE, single column encoding local density estimates cell `tof_tibble`. augment = TRUE, ncol(tof_tibble) + 1 columns: (unaltered) columns `tof_tibble` plus additional column encoding local density estimates.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_estimate_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate the local densities for all cells in a high-dimensional cytometry dataset. — tof_estimate_density","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  # perform the density estimation tof_estimate_density(tof_tibble = sim_data, method = \"spade\") #> # A tibble: 1,000 × 5 #>       cd45   cd38   cd34   cd19 .spade_density #>      <dbl>  <dbl>  <dbl>  <dbl>          <dbl> #>  1  0.0416  1.25  -0.268 -0.153          1     #>  2  0.894  -0.232  0.684  2.84           1     #>  3  1.32   -0.385  0.259 -0.788          1     #>  4  0.786   3.09   0.870 -2.34           0.111 #>  5 -1.22    2.11  -0.704 -1.75           1     #>  6  0.740  -0.936  0.690  0.416          1     #>  7 -0.194  -0.156 -0.245  1.12           1     #>  8 -0.0718  0.631 -0.431  0.432          1     #>  9 -2.71    0.755 -0.722  0.433          1     #> 10 -0.477   0.109 -0.496  0.519          1     #> # ℹ 990 more rows  # perform the density estimation with a smaller search radius around # each cell tof_estimate_density(     tof_tibble = sim_data,     alpha_multiplier = 2,     method = \"spade\" ) #> # A tibble: 1,000 × 5 #>       cd45   cd38   cd34   cd19 .spade_density #>      <dbl>  <dbl>  <dbl>  <dbl>          <dbl> #>  1  0.0416  1.25  -0.268 -0.153            1   #>  2  0.894  -0.232  0.684  2.84             0.1 #>  3  1.32   -0.385  0.259 -0.788            1   #>  4  0.786   3.09   0.870 -2.34             0   #>  5 -1.22    2.11  -0.704 -1.75             0.2 #>  6  0.740  -0.936  0.690  0.416            1   #>  7 -0.194  -0.156 -0.245  1.12             1   #>  8 -0.0718  0.631 -0.431  0.432            1   #>  9 -2.71    0.755 -0.722  0.433            0.2 #> 10 -0.477   0.109 -0.496  0.519            1   #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_central_tendency.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the central tendencies of CyTOF markers in each cluster in a `tof_tibble`. — tof_extract_central_tendency","title":"Extract the central tendencies of CyTOF markers in each cluster in a `tof_tibble`. — tof_extract_central_tendency","text":"feature extraction function calculates user-specified measurement central tendency (.e. median mode) cells cluster `tof_tibble` across user-specified selection CyTOF markers. calculations can done either overall (across cells dataset) breaking cells subgroups using `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_central_tendency.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the central tendencies of CyTOF markers in each cluster in a `tof_tibble`. — tof_extract_central_tendency","text":"","code":"tof_extract_central_tendency(   tof_tibble,   cluster_col,   group_cols = NULL,   marker_cols = where(tof_is_numeric),   stimulation_col = NULL,   central_tendency_function = stats::median,   format = c(\"wide\", \"long\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_central_tendency.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the central tendencies of CyTOF markers in each cluster in a `tof_tibble`. — tof_extract_central_tendency","text":"tof_tibble `tof_tibble` `tibble` row represents single cell column represents CyTOF measurement piece metadata (.e. cluster id, patient id, etc.) cell. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. group_cols Unquoted column names representing columns `tof_tibble` used break rows `tof_tibble` subgroups feature extraction calculation. Defaults NULL (.e. performing extraction without subgroups). marker_cols Unquoted column names representing columns `tof_tibble` (.e. CyTOF protein measurements) included feature extraction calculation. Defaults numeric (integer double) columns. Supports tidyselection. stimulation_col Optional. unquoted column name indicates column `tof_tibble` contains information stimulation condition cell exposed data acquisition. provided, feature extraction broken subgroups stimulation condition (features stimulation condition included features wide format). central_tendency_function function used calculate measurement central tendency cluster (used dependent variable linear model). Defaults median. format string indicating data returned \"wide\" format (default; cluster feature given column) \"long\" format (cluster feature provided row).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_central_tendency.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the central tendencies of CyTOF markers in each cluster in a `tof_tibble`. — tof_extract_central_tendency","text":"tibble. format == \"wide\", tibble 1 row combination grouping variables provided `group_cols` one column grouping variable, one column extracted feature (central tendency given marker given cluster). names column containing cluster features obtained using following pattern: \"{marker_id}@{cluster_id}_ct\". format == \"long\", tibble 1 row combination grouping variables `group_cols`, cluster id (.e. level) `cluster_col`, marker `marker_cols`. one column grouping variable, one column cluster ids, one column CyTOF channel names, one column (`value`) containing features.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_central_tendency.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract the central tendencies of CyTOF markers in each cluster in a `tof_tibble`. — tof_extract_central_tendency","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         patient = sample(c(\"kirby\", \"mario\"), size = 1000, replace = TRUE),         stim = sample(c(\"basal\", \"stim\"), size = 1000, replace = TRUE)     )  # extract proportion of each cluster in each patient in wide format tof_extract_central_tendency(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient ) #> # A tibble: 2 × 105 #>   patient `cd45@a_ct` `cd38@a_ct` `cd34@a_ct` `cd19@a_ct` `cd45@b_ct` #>   <chr>         <dbl>       <dbl>       <dbl>       <dbl>       <dbl> #> 1 kirby         0.251    -0.180       -0.0597     -0.0728       0.249 #> 2 mario         0.360    -0.00464      0.458      -0.263        0.309 #> # ℹ 99 more variables: `cd38@b_ct` <dbl>, `cd34@b_ct` <dbl>, `cd19@b_ct` <dbl>, #> #   `cd45@c_ct` <dbl>, `cd38@c_ct` <dbl>, `cd34@c_ct` <dbl>, `cd19@c_ct` <dbl>, #> #   `cd45@d_ct` <dbl>, `cd38@d_ct` <dbl>, `cd34@d_ct` <dbl>, `cd19@d_ct` <dbl>, #> #   `cd45@e_ct` <dbl>, `cd38@e_ct` <dbl>, `cd34@e_ct` <dbl>, `cd19@e_ct` <dbl>, #> #   `cd45@f_ct` <dbl>, `cd38@f_ct` <dbl>, `cd34@f_ct` <dbl>, `cd19@f_ct` <dbl>, #> #   `cd45@g_ct` <dbl>, `cd38@g_ct` <dbl>, `cd34@g_ct` <dbl>, `cd19@g_ct` <dbl>, #> #   `cd45@h_ct` <dbl>, `cd38@h_ct` <dbl>, `cd34@h_ct` <dbl>, …  # extract proportion of each cluster in each patient in long format tof_extract_central_tendency(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     format = \"long\" ) #> # A tibble: 208 × 4 #>    patient cluster_id channel  values #>    <chr>   <chr>      <chr>     <dbl> #>  1 kirby   a          cd45     0.251  #>  2 kirby   a          cd38    -0.180  #>  3 kirby   a          cd34    -0.0597 #>  4 kirby   a          cd19    -0.0728 #>  5 kirby   b          cd45     0.249  #>  6 kirby   b          cd38     0.214  #>  7 kirby   b          cd34     0.0424 #>  8 kirby   b          cd19    -0.669  #>  9 kirby   c          cd45    -0.389  #> 10 kirby   c          cd38    -0.161  #> # ℹ 198 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_emd.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract aggregated features from CyTOF data using earth-mover's distance (EMD) — tof_extract_emd","title":"Extract aggregated features from CyTOF data using earth-mover's distance (EMD) — tof_extract_emd","text":"feature extraction function calculates earth-mover's distance (EMD) stimulated unstimulated (\"basal\") experimental conditions samples CyTOF experiment. calculation performed across user-specified selection CyTOF antigens can performed either overall (across cells dataset) breaking cells subgroups using `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_emd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract aggregated features from CyTOF data using earth-mover's distance (EMD) — tof_extract_emd","text":"","code":"tof_extract_emd(   tof_tibble,   cluster_col,   group_cols = NULL,   marker_cols = where(tof_is_numeric),   emd_col,   reference_level,   format = c(\"wide\", \"long\"),   num_bins = 100 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_emd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract aggregated features from CyTOF data using earth-mover's distance (EMD) — tof_extract_emd","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. group_cols Unquoted column names representing columns `tof_tibble` used break rows `tof_tibble` subgroups feature extraction calculation. Defaults NULL (.e. performing extraction without subgroups). marker_cols Unquoted column names representing columns `tof_tibble` (.e. CyTOF protein measurements) included earth-mover's distance calculation. Defaults numeric (integer double) columns. Supports tidyselect helpers. emd_col unquoted column name indicates column `tof_tibble` used group cells different distributions compared one another EMD calculation. example, want compare marker expression distributions across stimulation conditions, `emd_col` column `tof_tibble` containing information stimulation condition cell exposed data acquisition. provided, feature extraction broken subgroups stimulation condition (features stimulation condition included features wide format). reference_level string indicating value `emd_col` corresponds \"reference\" value values `emd_col` compared. example, `emd_col` represents stimulation condition cell, reference_level might take value \"basal\" \"unstimulated\" want compare stimulation basal state. format string indicating data returned \"wide\" format (default; cluster feature given column) \"long\" format (cluster feature provided row). num_bins Optional. number bins use dividing one-dimensional marker distributions discrete segments EMD calculation. Defaults 100.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_emd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract aggregated features from CyTOF data using earth-mover's distance (EMD) — tof_extract_emd","text":"tibble. format == \"wide\", tibble 1 row combination grouping variables provided `group_cols` one column grouping variable, one column extracted feature (EMD distribution given marker given cluster basal condition distribution marker given cluster stimulated condition). names column containing cluster features obtained using following pattern: \"{stimulation_id}_{marker_id}@{cluster_id}_emd\". format == \"long\", tibble 1 row combination grouping variables `group_cols`, cluster id (.e. level) `cluster_col`, marker `marker_cols`. one column grouping variable, one column cluster ids, one column CyTOF channel names, one column (`value`) containing features.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_emd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract aggregated features from CyTOF data using earth-mover's distance (EMD) — tof_extract_emd","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         patient = sample(c(\"kirby\", \"mario\"), size = 1000, replace = TRUE),         stim = sample(c(\"basal\", \"stim\"), size = 1000, replace = TRUE)     )  # extract emd of each cluster in each patient (using the \"basal\" stim # condition as a reference) in wide format tof_extract_emd(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     emd_col = stim,     reference_level = \"basal\" ) #> # A tibble: 2 × 105 #>   patient `stim_cd45@z_emd` `stim_cd38@z_emd` `stim_cd34@z_emd` #>   <chr>               <dbl>             <dbl>             <dbl> #> 1 kirby                NA                NA                NA   #> 2 mario                11.0              18.6              11.7 #> # ℹ 101 more variables: `stim_cd19@z_emd` <dbl>, `stim_cd45@v_emd` <dbl>, #> #   `stim_cd38@v_emd` <dbl>, `stim_cd34@v_emd` <dbl>, `stim_cd19@v_emd` <dbl>, #> #   `stim_cd45@o_emd` <dbl>, `stim_cd38@o_emd` <dbl>, `stim_cd34@o_emd` <dbl>, #> #   `stim_cd19@o_emd` <dbl>, `stim_cd45@i_emd` <dbl>, `stim_cd38@i_emd` <dbl>, #> #   `stim_cd34@i_emd` <dbl>, `stim_cd19@i_emd` <dbl>, `stim_cd45@c_emd` <dbl>, #> #   `stim_cd38@c_emd` <dbl>, `stim_cd34@c_emd` <dbl>, `stim_cd19@c_emd` <dbl>, #> #   `stim_cd45@r_emd` <dbl>, `stim_cd38@r_emd` <dbl>, …  # extract emd of each cluster (using the \"basal\" stim # condition as a reference) in long format tof_extract_emd(     tof_tibble = sim_data,     cluster_col = cluster_id,     emd_col = stim,     reference_level = \"basal\",     format = \"long\" ) #> # A tibble: 104 × 4 #>    cluster_id marker stimulation   emd #>    <chr>      <chr>  <chr>       <dbl> #>  1 z          cd45   stim         9.24 #>  2 z          cd38   stim        10.6  #>  3 z          cd34   stim         4.30 #>  4 z          cd19   stim         7.24 #>  5 v          cd45   stim        11.0  #>  6 v          cd38   stim         4.25 #>  7 v          cd34   stim         5.99 #>  8 v          cd19   stim         9.90 #>  9 o          cd45   stim         9.54 #> 10 o          cd38   stim         4.06 #> # ℹ 94 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","title":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","text":"function wraps members `tof_extract_*` function family extract sample-level features lineage (.e. cell surface antigen) CyTOF channels assumed stable across stimulation conditions signaling CyTOF channels assumed change across stimulation conditions. Features extracted cluster within independent sample (defined `group_cols` argument).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","text":"","code":"tof_extract_features(   tof_tibble,   cluster_col,   group_cols = NULL,   stimulation_col = NULL,   lineage_cols,   signaling_cols,   central_tendency_function = stats::median,   signaling_method = c(\"threshold\", \"emd\", \"jsd\", \"central tendency\"),   basal_level = NULL,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. group_cols Unquoted column names representing columns `tof_tibble` used break rows `tof_tibble` subgroups feature extraction calculation. Defaults NULL (.e. performing extraction without subgroups). stimulation_col Optional. unquoted column name indicates column `tof_tibble` contains information stimulation condition cell exposed data acquisition. provided, feature extraction broken subgroups stimulation condition (features stimulation condition included features wide format). lineage_cols Unquoted column names representing columns `tof_tibble` (.e. CyTOF protein measurements) considered lineage markers feature extraction calculation. Supports tidyselect helpers. signaling_cols Unquoted column names representing columns `tof_tibble` (.e. CyTOF protein measurements) considered signaling markers feature extraction calculation. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster (used dependent variable linear model). Defaults median. signaling_method string indicating feature extraction method use signaling markers (identified `signaling_cols` argument). Options \"threshold\" (default), \"emd\", \"jsd\", \"central tendency\". basal_level string indicating value `stimulation_col` corresponds basal stimulation condition (.e. \"basal\" \"unstimulated\"). ... Optional additional arguments passed tof_extract_threshold, tof_extract_emd, tof_extract_jsd.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","text":"tibble. output tibble 1 row combination grouping variables provided `group_cols` (thus, row represent considered single \"sample\" based grouping provided). one column grouping variable one column extracted feature (\"wide\" format).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_features.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","text":"Lineage channels specified using `lineage_cols` argument, extracted features measurements central tendency (computed user-supplied `central_tendency_function`). Signaling channels specified using `signaling_cols` argument, extracted features depend user's chosen `signaling_method`. `signaling method` == \"threshold\" (default), tof_extract_threshold used calculate proportion cells cluster signaling marker expression `threshold` stimulation condition. `signaling_method` == \"emd\" `signaling_method` == \"jsd\", tof_extract_emd tof_extract_jsd used calculate earth-mover's distance (EMD) Jensen-Shannon Distance (JSD), respectively, basal condition stimulated conditions cluster sample. Finally, none options chosen, tof_extract_central_tendency used calculate measurements central tendency. addition, tof_extract_proportion used extract proportion cells cluster computed sample. calculations can performed either overall (across cells dataset) breaking cells subgroups using `group_cols`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_features.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         patient = sample(c(\"kirby\", \"mario\"), size = 1000, replace = TRUE),         stim = sample(c(\"basal\", \"stim\"), size = 1000, replace = TRUE)     )  # extract the following features from each cluster in each # patient/stimulation: #    - proportion of each cluster #    - central tendency (median) of cd45 and cd38 in each cluster #    - the proportion of cells in each cluster with cd34 expression over #      the default threshold (asinh(10 / 5)) tof_extract_features(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     lineage_cols = c(cd45, cd38),     signaling_cols = cd34,     stimulation_col = stim ) #> # A tibble: 2 × 131 #>   patient `prop@a` `prop@b` `prop@c` `prop@d` `prop@e` `prop@f` `prop@g` #>   <chr>      <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl> #> 1 kirby     0.0418   0.0378   0.0259   0.0319   0.0398   0.0378   0.0299 #> 2 mario     0.0321   0.0341   0.0382   0.0301   0.0442   0.0281   0.0241 #> # ℹ 123 more variables: `prop@h` <dbl>, `prop@i` <dbl>, `prop@j` <dbl>, #> #   `prop@k` <dbl>, `prop@l` <dbl>, `prop@m` <dbl>, `prop@n` <dbl>, #> #   `prop@o` <dbl>, `prop@p` <dbl>, `prop@q` <dbl>, `prop@r` <dbl>, #> #   `prop@s` <dbl>, `prop@t` <dbl>, `prop@u` <dbl>, `prop@v` <dbl>, #> #   `prop@w` <dbl>, `prop@x` <dbl>, `prop@y` <dbl>, `prop@z` <dbl>, #> #   `cd45@a_ct` <dbl>, `cd38@a_ct` <dbl>, `cd45@b_ct` <dbl>, `cd38@b_ct` <dbl>, #> #   `cd45@c_ct` <dbl>, `cd38@c_ct` <dbl>, `cd45@d_ct` <dbl>, …  # extract the following features from each cluster in each # patient/stimulation: #    - proportion of each cluster #    - central tendency (mean) of cd45 and cd38 in each cluster #    - the earth mover's distance between each cluster's cd34 histogram in #      the \"basal\" and \"stim\" conditions tof_extract_features(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     lineage_cols = c(cd45, cd38),     signaling_cols = cd34,     central_tendency_function = mean,     stimulation_col = stim,     signaling_method = \"emd\",     basal_level = \"basal\" ) #> # A tibble: 2 × 131 #>   patient `prop@a` `prop@b` `prop@c` `prop@d` `prop@e` `prop@f` `prop@g` #>   <chr>      <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl> #> 1 kirby     0.0418   0.0378   0.0259   0.0319   0.0398   0.0378   0.0299 #> 2 mario     0.0321   0.0341   0.0382   0.0301   0.0442   0.0281   0.0241 #> # ℹ 123 more variables: `prop@h` <dbl>, `prop@i` <dbl>, `prop@j` <dbl>, #> #   `prop@k` <dbl>, `prop@l` <dbl>, `prop@m` <dbl>, `prop@n` <dbl>, #> #   `prop@o` <dbl>, `prop@p` <dbl>, `prop@q` <dbl>, `prop@r` <dbl>, #> #   `prop@s` <dbl>, `prop@t` <dbl>, `prop@u` <dbl>, `prop@v` <dbl>, #> #   `prop@w` <dbl>, `prop@x` <dbl>, `prop@y` <dbl>, `prop@z` <dbl>, #> #   `cd45@a_ct` <dbl>, `cd38@a_ct` <dbl>, `cd45@b_ct` <dbl>, `cd38@b_ct` <dbl>, #> #   `cd45@c_ct` <dbl>, `cd38@c_ct` <dbl>, `cd45@d_ct` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_jsd.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract aggregated features from CyTOF data using the Jensen-Shannon Distance (JSD) — tof_extract_jsd","title":"Extract aggregated features from CyTOF data using the Jensen-Shannon Distance (JSD) — tof_extract_jsd","text":"feature extraction function calculates Jensen-Shannon Distance (JSD) stimulated unstimulated (\"basal\") experimental conditions samples CyTOF experiment. calculation performed across user-specified selection CyTOF antigens can performed either overall (across cells dataset) breaking cells subgroups using `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_jsd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract aggregated features from CyTOF data using the Jensen-Shannon Distance (JSD) — tof_extract_jsd","text":"","code":"tof_extract_jsd(   tof_tibble,   cluster_col,   group_cols = NULL,   marker_cols = where(tof_is_numeric),   jsd_col,   reference_level,   format = c(\"wide\", \"long\"),   num_bins = 100 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_jsd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract aggregated features from CyTOF data using the Jensen-Shannon Distance (JSD) — tof_extract_jsd","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. group_cols Unquoted column names representing columns `tof_tibble` used break rows `tof_tibble` subgroups feature extraction calculation. Defaults NULL (.e. performing extraction without subgroups). marker_cols Unquoted column names representing columns `tof_tibble` (.e. CyTOF protein measurements) included feature extraction calculation. Defaults numeric (integer double) columns. Supports tidyselect helpers. jsd_col unquoted column name indicates column `tof_tibble` contains information stimulation condition cell exposed data acquisition. provided, feature extraction broken subgroups stimulation condition (features stimulation condition included features wide format). reference_level string indicating value `jsd_col` corresponds basal stimulation condition (.e. \"basal\" \"unstimulated\"). format string indicating data returned \"wide\" format (default; cluster feature given column) \"long\" format (cluster feature provided row). num_bins Optional. number bins use dividing one-dimensional marker distributions discrete segments JSD calculation. Defaults 100.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_jsd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract aggregated features from CyTOF data using the Jensen-Shannon Distance (JSD) — tof_extract_jsd","text":"tibble. format == \"wide\", tibble 1 row combination grouping variables provided `group_cols` one column grouping variable, one column extracted feature (JSD distribution given marker given cluster basal condition distribution marker cluster stimulated condition). names column containing cluster features obtained using following pattern: \"{stimulation_id}_{marker_id}@{cluster_id}_jsd\". format == \"long\", tibble 1 row combination grouping variables `group_cols`, cluster id (.e. level) `cluster_col`, marker `marker_cols`. one column grouping variable, one column cluster ids, one column CyTOF channel names, one column (`value`) containing features.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_jsd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract aggregated features from CyTOF data using the Jensen-Shannon Distance (JSD) — tof_extract_jsd","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         patient = sample(c(\"kirby\", \"mario\"), size = 1000, replace = TRUE),         stim = sample(c(\"basal\", \"stim\"), size = 1000, replace = TRUE)     )  # extract jsd of each cluster in each patient (using the \"basal\" stim # condition as a reference) in wide format tof_extract_jsd(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     jsd_col = stim,     reference_level = \"basal\" ) #> # A tibble: 2 × 105 #>   patient `stim_cd45@e_jsd` `stim_cd38@e_jsd` `stim_cd34@e_jsd` #>   <chr>               <dbl>             <dbl>             <dbl> #> 1 mario                  NA                NA                NA #> 2 kirby                  NA                NA                NA #> # ℹ 101 more variables: `stim_cd19@e_jsd` <dbl>, `stim_cd45@v_jsd` <dbl>, #> #   `stim_cd38@v_jsd` <dbl>, `stim_cd34@v_jsd` <dbl>, `stim_cd19@v_jsd` <dbl>, #> #   `stim_cd45@z_jsd` <dbl>, `stim_cd38@z_jsd` <dbl>, `stim_cd34@z_jsd` <dbl>, #> #   `stim_cd19@z_jsd` <dbl>, `stim_cd45@o_jsd` <dbl>, `stim_cd38@o_jsd` <dbl>, #> #   `stim_cd34@o_jsd` <dbl>, `stim_cd19@o_jsd` <dbl>, `stim_cd45@y_jsd` <dbl>, #> #   `stim_cd38@y_jsd` <dbl>, `stim_cd34@y_jsd` <dbl>, `stim_cd19@y_jsd` <dbl>, #> #   `stim_cd45@x_jsd` <dbl>, `stim_cd38@x_jsd` <dbl>, …  # extract jsd of each cluster (using the \"basal\" stim # condition as a reference) in long format tof_extract_jsd(     tof_tibble = sim_data,     cluster_col = cluster_id,     jsd_col = stim,     reference_level = \"basal\",     format = \"long\" ) #> # A tibble: 104 × 4 #>    cluster_id marker stimulation   jsd #>    <chr>      <chr>  <chr>       <dbl> #>  1 e          cd45   stim        0.718 #>  2 e          cd38   stim        0.910 #>  3 e          cd34   stim        0.677 #>  4 e          cd19   stim        0.628 #>  5 v          cd45   stim        0.947 #>  6 v          cd38   stim        0.895 #>  7 v          cd34   stim        0.770 #>  8 v          cd19   stim        0.632 #>  9 z          cd45   stim        0.561 #> 10 z          cd38   stim        0.748 #> # ℹ 94 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_proportion.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the proportion of cells in each cluster in a `tof_tibble`. — tof_extract_proportion","title":"Extract the proportion of cells in each cluster in a `tof_tibble`. — tof_extract_proportion","text":"feature extraction function allows calculate proportion cells cluster `tof_tibble` - either overall broken subgroups using `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_proportion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the proportion of cells in each cluster in a `tof_tibble`. — tof_extract_proportion","text":"","code":"tof_extract_proportion(   tof_tibble,   cluster_col,   group_cols = NULL,   format = c(\"wide\", \"long\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_proportion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the proportion of cells in each cluster in a `tof_tibble`. — tof_extract_proportion","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. group_cols Unquoted column names representing columns `tof_tibble` used break rows `tof_tibble` subgroups feature extraction calculation. Defaults NULL (.e. performing extraction without subgroups). format string indicating data returned \"wide\" format (default; cluster proportion given column) \"long\" format (cluster proportion provided row).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_proportion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the proportion of cells in each cluster in a `tof_tibble`. — tof_extract_proportion","text":"tibble. format == \"wide\", tibble 1 row combination grouping variables provided `group_cols` one column grouping variable well one column proportion cells cluster. names column containing cluster proportions obtained using following pattern: \"prop@{cluster_id}\". format == \"long\", tibble 1 row combination grouping variables `group_cols` cluster id (.e. level) `cluster_col`. one column grouping variable, one column cluster ids, one column (`prop`) containing cluster proportions.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_proportion.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract the proportion of cells in each cluster in a `tof_tibble`. — tof_extract_proportion","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         patient = sample(c(\"kirby\", \"mario\"), size = 1000, replace = TRUE),         stim = sample(c(\"basal\", \"stim\"), size = 1000, replace = TRUE)     )  # extract proportion of each cluster in each patient in wide format tof_extract_proportion(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient ) #> # A tibble: 2 × 27 #>   patient `prop@a` `prop@b` `prop@c` `prop@d` `prop@e` `prop@f` `prop@g` #>   <chr>      <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl> #> 1 kirby     0.0298   0.0397   0.0516   0.0397   0.0397   0.0337   0.0417 #> 2 mario     0.0363   0.0403   0.0423   0.0464   0.0464   0.0484   0.0282 #> # ℹ 19 more variables: `prop@h` <dbl>, `prop@i` <dbl>, `prop@j` <dbl>, #> #   `prop@k` <dbl>, `prop@l` <dbl>, `prop@m` <dbl>, `prop@n` <dbl>, #> #   `prop@o` <dbl>, `prop@p` <dbl>, `prop@q` <dbl>, `prop@r` <dbl>, #> #   `prop@s` <dbl>, `prop@t` <dbl>, `prop@u` <dbl>, `prop@v` <dbl>, #> #   `prop@w` <dbl>, `prop@x` <dbl>, `prop@y` <dbl>, `prop@z` <dbl>  # extract proportion of each cluster in each patient in long format tof_extract_proportion(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     format = \"long\" ) #> # A tibble: 52 × 3 #>    patient cluster_id   prop #>    <chr>   <chr>       <dbl> #>  1 kirby   a          0.0298 #>  2 kirby   b          0.0397 #>  3 kirby   c          0.0516 #>  4 kirby   d          0.0397 #>  5 kirby   e          0.0397 #>  6 kirby   f          0.0337 #>  7 kirby   g          0.0417 #>  8 kirby   h          0.0417 #>  9 kirby   i          0.0476 #> 10 kirby   j          0.0437 #> # ℹ 42 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_threshold.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract aggregated features from CyTOF data using a binary threshold — tof_extract_threshold","title":"Extract aggregated features from CyTOF data using a binary threshold — tof_extract_threshold","text":"feature extraction function calculates proportion cells given cluster CyTOF antigen expression user-specified threshold across user-specified selection CyTOF markers. calculations can done either overall (across cells dataset) breaking cells subgroups using `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_threshold.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract aggregated features from CyTOF data using a binary threshold — tof_extract_threshold","text":"","code":"tof_extract_threshold(   tof_tibble,   cluster_col,   group_cols = NULL,   marker_cols = where(tof_is_numeric),   stimulation_col = NULL,   threshold = asinh(10/5),   format = c(\"wide\", \"long\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_threshold.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract aggregated features from CyTOF data using a binary threshold — tof_extract_threshold","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. group_cols Unquoted column names representing columns `tof_tibble` used break rows `tof_tibble` subgroups feature extraction calculation. Defaults NULL (.e. performing extraction without subgroups). marker_cols Unquoted column names representing columns `tof_tibble` (.e. CyTOF protein measurements) included feature extraction calculation. Defaults numeric (integer double) columns. Supports tidyselect helpers. stimulation_col Optional. unquoted column name indicates column `tof_tibble` contains information stimulation condition cell exposed data acquisition. provided, feature extraction broken subgroups stimulation condition (features stimulation condition included features wide format). threshold double integer length 1 indicating threshold used. format string indicating data returned \"wide\" format (default; cluster feature given column) \"long\" format (cluster feature provided row).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_threshold.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract aggregated features from CyTOF data using a binary threshold — tof_extract_threshold","text":"tibble. format == \"wide\", tibble 1 row combination grouping variables provided `group_cols` one column grouping variable, one column extracted feature (proportion cells given cluster marker expression values `threshold`). names column containing cluster features obtained using following pattern: \"{marker_id}@{cluster_id}_threshold\". format == \"long\", tibble 1 row combination grouping variables `group_cols`, cluster id (.e. level) `cluster_col`, marker `marker_cols`. one column grouping variable, one column cluster ids, one column CyTOF channel names, one column (`value`) containing features.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_threshold.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract aggregated features from CyTOF data using a binary threshold — tof_extract_threshold","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         patient = sample(c(\"kirby\", \"mario\"), size = 1000, replace = TRUE),         stim = sample(c(\"basal\", \"stim\"), size = 1000, replace = TRUE)     )  # extract proportion of each cluster in each patient in wide format tof_extract_threshold(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient ) #> # A tibble: 2 × 105 #>   patient `cd45@a_threshold` `cd38@a_threshold` `cd34@a_threshold` #>   <chr>                <dbl>              <dbl>              <dbl> #> 1 kirby               0.0476              0.190              0.143 #> 2 mario               0.214               0.214              0.143 #> # ℹ 101 more variables: `cd19@a_threshold` <dbl>, `cd45@b_threshold` <dbl>, #> #   `cd38@b_threshold` <dbl>, `cd34@b_threshold` <dbl>, #> #   `cd19@b_threshold` <dbl>, `cd45@c_threshold` <dbl>, #> #   `cd38@c_threshold` <dbl>, `cd34@c_threshold` <dbl>, #> #   `cd19@c_threshold` <dbl>, `cd45@d_threshold` <dbl>, #> #   `cd38@d_threshold` <dbl>, `cd34@d_threshold` <dbl>, #> #   `cd19@d_threshold` <dbl>, `cd45@e_threshold` <dbl>, …  # extract proportion of each cluster in each patient in long format tof_extract_threshold(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     format = \"long\" ) #> # A tibble: 208 × 4 #>    patient cluster_id channel values #>    <chr>   <chr>      <chr>    <dbl> #>  1 kirby   a          cd45    0.0476 #>  2 kirby   a          cd38    0.190  #>  3 kirby   a          cd34    0.143  #>  4 kirby   a          cd19    0.0952 #>  5 kirby   b          cd45    0.0556 #>  6 kirby   b          cd38    0.111  #>  7 kirby   b          cd34    0      #>  8 kirby   b          cd19    0.0556 #>  9 kirby   c          cd45    0.188  #> 10 kirby   c          cd38    0.125  #> # ℹ 198 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_best.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the optimal hyperparameters for an elastic net model from candidate performance metrics — tof_find_best","title":"Find the optimal hyperparameters for an elastic net model from candidate performance metrics — tof_find_best","text":"Find optimal hyperparameters elastic net model candidate performance metrics","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_best.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the optimal hyperparameters for an elastic net model from candidate performance metrics — tof_find_best","text":"","code":"tof_find_best(performance_metrics, model_type, optimization_metric)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_best.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the optimal hyperparameters for an elastic net model from candidate performance metrics — tof_find_best","text":"performance_metrics tibble performance metrics elastic net model (wide format) model_type string indicating type glmnet model trained. optimization_metric string indicating performance metric used select optimal model.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_best.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the optimal hyperparameters for an elastic net model from candidate performance metrics — tof_find_best","text":"tibble 3 columns: \"mixture\", \"penalty\", column containing chosen optimization metric. returned tibble 1 column, means 1 mixture/penalty combination yielded optimal result (.e. tuning procedure resulted tie).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_cv_predictions.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate and store the predicted outcomes for each validation set observation during model tuning — tof_find_cv_predictions","title":"Calculate and store the predicted outcomes for each validation set observation during model tuning — tof_find_cv_predictions","text":"Calculate store predicted outcomes validation set observation model tuning","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_cv_predictions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate and store the predicted outcomes for each validation set observation during model tuning — tof_find_cv_predictions","text":"","code":"tof_find_cv_predictions(   split_data,   prepped_recipe,   lambda,   alpha,   model_type,   outcome_colnames )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_cv_predictions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate and store the predicted outcomes for each validation set observation during model tuning — tof_find_cv_predictions","text":"split_data `rsplit` object rsample package. Alternatively, unsplit tbl_df can provided, though recommended. prepped_recipe trained recipe lambda single numeric value indicating penalty (lambda) value used make predictions alpha single numeric value indicating mixture (alpha) value used make predictions model_type string indicating kind elastic net model build. continuous response predicted, use \"linear\" linear regression; categorical response 2 classes predicted, use \"two-class\" logistic regression; categorical response 2 levels predicted, use \"multiclass\" multinomial regression; time--event outcome predicted, use \"survival\" Cox regression. outcome_colnames Quoted column names indicating columns data fit represent outcome variables (others assumed predictors).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_cv_predictions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate and store the predicted outcomes for each validation set observation during model tuning — tof_find_cv_predictions","text":"tibble containing predicted true values outcome validation observations `split_data`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_emd.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the earth-mover's distance between two numeric vectors — tof_find_emd","title":"Find the earth-mover's distance between two numeric vectors — tof_find_emd","text":"Find earth-mover's distance two numeric vectors","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_emd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the earth-mover's distance between two numeric vectors — tof_find_emd","text":"","code":"tof_find_emd(vec_1, vec_2, num_bins = 100)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_emd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the earth-mover's distance between two numeric vectors — tof_find_emd","text":"vec_1 numeric vector. vec_2 numeric vector. num_bins integer number bins use performing kernel density estimation two vectors. Defaults 100.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_emd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the earth-mover's distance between two numeric vectors — tof_find_emd","text":"double (length 1) representing EMD two vectors.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_jsd.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the Jensen-Shannon Divergence (JSD) between two numeric vectors — tof_find_jsd","title":"Find the Jensen-Shannon Divergence (JSD) between two numeric vectors — tof_find_jsd","text":"Find Jensen-Shannon Divergence (JSD) two numeric vectors","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_jsd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the Jensen-Shannon Divergence (JSD) between two numeric vectors — tof_find_jsd","text":"","code":"tof_find_jsd(vec_1, vec_2, num_bins = 100)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_jsd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the Jensen-Shannon Divergence (JSD) between two numeric vectors — tof_find_jsd","text":"vec_1 numeric vector. vec_2 numeric vector. num_bins integer number bins use binning across two vectors' combined range. Defaults 100.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_jsd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the Jensen-Shannon Divergence (JSD) between two numeric vectors — tof_find_jsd","text":"double (length 1) representing JSD two vectors.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_knn.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the k-nearest neighbors of each cell in a high-dimensional cytometry dataset. — tof_find_knn","title":"Find the k-nearest neighbors of each cell in a high-dimensional cytometry dataset. — tof_find_knn","text":"Find k-nearest neighbors cell high-dimensional cytometry dataset.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_knn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the k-nearest neighbors of each cell in a high-dimensional cytometry dataset. — tof_find_knn","text":"","code":"tof_find_knn(   .data,   k = min(10, nrow(.data)),   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\"),   .query,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_knn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the k-nearest neighbors of each cell in a high-dimensional cytometry dataset. — tof_find_knn","text":".data `tof_tibble` `tibble` row represents cell column represents high-dimensional cytometry measurement. k integer indicating number nearest neighbors return cell. distance_function string indicating distance function use nearest-neighbor calculation. Options include \"euclidean\" (default) \"cosine\" distances. .query set cells queried .data (.e. set cells find nearest neighbors within .data). Defaults .data , .e. finding nearest neighbors cells .data. ... Optional additional arguments pass hnsw_knn","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_knn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the k-nearest neighbors of each cell in a high-dimensional cytometry dataset. — tof_find_knn","text":"list two elements: \"neighbor_ids\" \"neighbor_distances,\" n k matrices (n number cells input `.data`. [,j]-th entry \"neighbor_ids\" represents row index j-th nearest neighbor cell -th row `.data`. [,j]-th entry \"neighbor_distances\" represents distance two cells according `distance_function`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_knn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find the k-nearest neighbors of each cell in a high-dimensional cytometry dataset. — tof_find_knn","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  # Find the 10 nearest neighbors of each cell in the dataset tof_find_knn(     .data = sim_data,     k = 10,     distance_function = \"euclidean\" ) #> $neighbor_ids #>         [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] #>    [1,]  447  901  214  817  332  621  498  448  672   400 #>    [2,]  496  920  826  687  570  610  950  104  753   455 #>    [3,]  679  862  290  873   82  224  413  482  313   760 #>    [4,]  378  605   94  311  333  619  528  329  613   562 #>    [5,]  900  554  975  355  486  456  624   71   39   608 #>    [6,]  312  645  691  551  463  273  249   74  710    68 #>    [7,]  803  218  884   87  247  733   20  981  120   537 #>    [8,]  536   87  120  990  617  940  156  719  294   411 #>    [9,]  706  404  644  426  284  947  559  870  381   477 #>   [10,]  924  593  731  116  960  342  995  391   81    84 #>   [11,]  584  696  361   53  936  115  201  899  422    13 #>   [12,]  176  483  730  307  996  365  912  776  948   569 #>   [13,]  682  115   53  284  700  650  784  475   45   192 #>   [14,]  175  579  863  429  830  404  227  380  662   706 #>   [15,]  634  212  296  824  187  196  747  131  670   796 #>   [16,]  591   79  670  106  758  211  824  187  328   196 #>   [17,]  624  953  554  460  694    5  923  511  486   900 #>   [18,]  114  687  888  302   77  229  950  759  335   676 #>   [19,]  178   24  656  587  982  145  590  135  230   635 #>   [20,]  279   87  810  377  304   57  940    8  392   803 #>   [21,]  858  992  857  804  636  264  714   88  916   832 #>   [22,]  380  270  662   50  851  833  202  400  997   672 #>   [23,]  970  598  562   94  467  395  170  329  378    32 #>   [24,]  656   19  135  635  178  145  476  819  197   632 #>   [25,]   41  254  318  517  664  654  108  137  244    70 #>   [26,]  473  413  129  451  387  930  679  639  313   580 #>   [27,]  769  573  462   72  119  977  715  118  572   179 #>   [28,]  738  339  314  567  110  513  892  105  525   470 #>   [29,]  875  898  220  447  242  586  685  756  577   901 #>   [30,]  902  806  127  805  189  677  750   65  250   871 #>   [31,]  985  150  934  346  797  831  987  495  547   907 #>   [32,]  467  253  395  986  139  384  223  922  619   891 #>   [33,]  226  852  300  911  641  333  378  943  271   433 #>   [34,]  933  734  629  449  512  816  677  470  206   110 #>   [35,]  771  668  276  617  171  792  200  583  437   294 #>   [36,]  182  256  772  394  626  602  540  423  522   452 #>   [37,]  801  611  178   19  132  195  349  999  847   768 #>   [38,]  763  920  112  335  941  150  797   76  958   676 #>   [39,]  117  355  779  608  945  456    5  257  488   503 #>   [40,]  192  366  700  628  961   63  784  649  124   904 #>   [41,]   25  254  318  517  108  137  654  664  244    70 #>   [42,]  628  151  390  361  774  696  584   64  649    40 #>   [43,]  199  511  339  207  883  130  738  314  470    80 #>   [44,]  514  531  837  448  173  348  578  942  215   581 #>   [45,]  682  770  422  651  650   13  899  431  746   700 #>   [46,]  350   66  913  800  750  455  697  926  638   753 #>   [47,]  294   96  823  120  218  594  200  719  275     8 #>   [48,]  583  502  292  453  791  411  279  777  617   940 #>   [49,]  466  981   85  123  608  275  488  813  218   144 #>   [50,]  400  217  672  690  851   22  498   55  389   501 #>   [51,]  112  744  435  866  879  299  797  842  478    38 #>   [52,]  729  968  932  892  540  257  749  221  263   975 #>   [53,]  115   13  361  589  475  422   11  650  682   584 #>   [54,]  742  535  733  489  359  839  300  598  785   231 #>   [55,]  690  672  721  896  758  966  935  834  211   815 #>   [56,]  624   71  673  554  558  100  375  456  701   460 #>   [57,]  304  279  642  932  732  303  228   20  965   774 #>   [58,]  597  268  666  948  436  327  844  293   86   319 #>   [59,]  937  808   75  901  486  959  577  822  740   447 #>   [60,]  389  529  851  997  235  681  217  711  662   501 #>   [61,]  257  967  767  961  589  390  779   64  361   115 #>   [62,]  707  910  794  921   93  849  396  479  353   957 #>   [63,]  649  904  931  233  749  366  379  734   40   512 #>   [64,]  390  366  283  767  774  968  961  257   61    42 #>   [65,]  902  157  848  805  834  127   30  806  618   259 #>   [66,]  750   46  805  806  913  127  189  926  298   697 #>   [67,]  118  688  241  980  141  965  246  775  963   304 #>   [68,]  262  551  914  613  216  344  974  236  893   203 #>   [69,]  809  840  606  151  853  595  816  206  897   493 #>   [70,]  219  552  854  156  575  487  275  517  167   990 #>   [71,]  456  554    5  558  117   39  355  460  608   624 #>   [72,]  831   27  643  462  977  346  122  572  769   674 #>   [73,]  321  188  429  339  513  838   14  470  175   579 #>   [74,]  463  273  695  216  659  778  160  477  138   893 #>   [75,]  983  822  808  937   59  698  360  521  133   285 #>   [76,]  958  860  941  547  718  985  572   31  755   150 #>   [77,]  302  288  111   18  293  114  781  684  327   335 #>   [78,]   98  570  581  408  578  753  713  519  453   455 #>   [79,]   16  833  328  962  510  670  591  187  270    22 #>   [80,]  199  634  989   43  354  883  207  469  738    15 #>   [81,]  278  853  169  995  342  116  445  712  671   944 #>   [82,]  482  862  272  760  835    3  679  639  108   190 #>   [83,]  146  166  368  399  651  472  236  201  337   936 #>   [84,]  991  630  169  445  287  599  943  960  906   320 #>   [85,]  813  608  488   39  123   49  466  117  558   355 #>   [86,]  288  293  867  126  450  508  781  386  793   930 #>   [87,]   20    8  279  536  940  574  377  617  810   803 #>   [88,]  610  638  857  832  950  697  800  398  496   455 #>   [89,]  490  263  968  283  322  922  602  142  395   749 #>   [90,]  171  392  500  397  238  992  255  377  720   882 #>   [91,]  607  585  912  111   77  850  684  653  781   515 #>   [92,]  133  376  143  983  698  798  846  221  530   452 #>   [93,]  374  957  128  818  406  707   62  259  278   419 #>   [94,]  562    4  329  619  378  203  311  598  922   605 #>   [95,]  835  209  760  138  778  752  667   82  999   893 #>   [96,]  812  533  518   47  594  200  275  218  294   981 #>   [97,]  261  755  718  420  872  320  630  960  297   860 #>   [98,]   78  519  453  502  285  704  408  777  570   723 #>   [99,]  301  371  183  595  606  809  432  527  840   351 #>  [100,]  615  582  249  161  900  637  608  945  355     5 #>  [101,]  446  848  703  230  484  157  834  177  245   497 #>  [102,]  897  963  228  809  303  980  595  151  444   840 #>  [103,]  923  205  184  430  596  326  741  900  167   219 #>  [104,]  920  532  763  610    2   88  643  496  500    72 #>  [105,]  567  993  940  810   28  503  525  889  732   314 #>  [106,]  824  557   16  591  665  758  265  670  196   211 #>  [107,]  745  325  163  148  632  197  420  712  342   544 #>  [108,]  482  620  443  552  272   82  485  137  401   862 #>  [109,]  172  352  831  658  388  826    2  907  191    31 #>  [110,]  838  513  512  652  449  734  629   34  525    28 #>  [111,]   77  988  327   18  820  268  302   91  850   114 #>  [112,]  866  941  744  842   38  958  141   51   76   714 #>  [113,]  316  515  653  761  569  684  164  177  101   325 #>  [114,]  737  687   18  434  684  888  229  302  850   765 #>  [115,]   53   13  361  475  589  682  650   11  422    61 #>  [116,]  995  924  593  432   81  353  468  916  683   538 #>  [117,]  779   39  355  967  488  257  945  767  592   456 #>  [118,]   67  980  141  688  241  965  769   27  683   828 #>  [119,]  573  149  421  769  977  891   27  297  572   159 #>  [120,]  536  823  719    8  990  294  503   47  952   326 #>  [121,]  457  289  927  557  204  131  187  849  921   479 #>  [122,]  831  552  674   72  631  352  643  878  797   109 #>  [123,]  608  823  275  120   85   49  205  981  594   575 #>  [124,]  347  906  379  233  305  505  162  192  979   904 #>  [125,]  363  476  135  547  819  825   24  934  291   481 #>  [126,]  867  335  150  793  293   86  934   31  907   998 #>  [127,]  618  805   30  902  677  806  933  189   65    66 #>  [128,]  406   93  374  957  818  951  136  859  553   259 #>  [129,]  725   26  473  451  442  410  315  214  546   585 #>  [130,]  740  870  937  808  492  175  822  669  830   511 #>  [131,]  494  296  634  864   15  633  824  289  266   791 #>  [132,]  847  145  600  660  178  780  700  801  185   576 #>  [133,]   92  698  983  184  669  376  492   75  808   822 #>  [134,]  600  819  145  647  505  780  979  132  811   635 #>  [135,]  656  476   24  145  178  780   19  481  819   568 #>  [136,]  640  277  790  417  252  611  306  829  185   155 #>  [137,]  482  689  108  862  341  517   82  224  308     3 #>  [138,]   95  893  349  463  504  778  695   74  209   760 #>  [139,]  384  223  955  329  467  394  253  602  395   986 #>  [140,]  432  116  371  916  636  858  995   21  468    99 #>  [141,]  118  718  688   67  941  872  980  769  241   958 #>  [142,]  149  384  922   36  329   89  609  139  223   602 #>  [143,]  376  798   92  750  983  805  530  446  926   189 #>  [144,]  464   85  466  558   49  925  813  248  608   637 #>  [145,]  780  656  178  135  132  600   24  847  134    19 #>  [146,]   83  166  651  201  472  911  440  399  936   368 #>  [147,]  206  843  493  555  165  604  816  868  425   449 #>  [148,]  903  420  944  342  163  755  107  520  712   544 #>  [149,]  297  119  573  891  922  142  421  619   89   159 #>  [150,]   31  934  985  126  797  987  335  547   76   831 #>  [151,]   42  628  897   69  102  906  774  904  303   649 #>  [152,]  663  895  213  796   73  343  513  429  564   165 #>  [153,]  919  426  475  886  650  160  706    9  559   856 #>  [154,]  418  214  837  215  625  894  621  836  815   442 #>  [155,]  859  307  164  484  908  745  951  632  611   848 #>  [156,]  854  574  536  990    8  537   70  462  120   643 #>  [157,]   65  211  848  259  484  902  101  806  834   805 #>  [158,]  539  174  340  369  811  565  306  790  671   277 #>  [159,]  726  438  903  623  909  618  379  497  119   609 #>  [160,]  650  477  273  216  236  919  475  153  284    74 #>  [161,]  582  100  615  205  249  673  123  689  517   608 #>  [162,]  671  979  505  811  305  647  415  124  347   445 #>  [163,]  420  712  107  342  148  635  819  632  745   239 #>  [164,]  316  267  113  484  101  155  761  515  571   908 #>  [165,]  843  868  206  604  147  863  762   34  555   816 #>  [166,]   83  146  736  472  911  431  556  236  651   330 #>  [167,]  326  777  103  294  631  823  990  723  430   219 #>  [168,]  669  822  222  458  202  966  360  758  788   808 #>  [169,]  445  630   84  853   81  979  671  162  906   991 #>  [170,]  970   23  364   68  551  372  262  637  914   526 #>  [171,]  200   35  617  812   90  720  668   96  532    47 #>  [172,]  191  352  109  388  878  401  907  620  693   987 #>  [173,]  531  348  723  514  208   44  408  578  448   437 #>  [174,]  369  790  899  158  539  746  829  252  651   185 #>  [175,]   14  830  863  579  380  130  404  740  542   429 #>  [176,]   12  483  948  912  776  327  597  730   86   409 #>  [177,]  350  245  446  737  316  101  703  680   46   229 #>  [178,]  656   19  145   24  801  982  132  135  999    37 #>  [179,]  715  775  462  397  435  500  744  643   27   866 #>  [180,]  915  317  716  276  883  771  694  989  719   294 #>  [181,]  829  640  746  917  357  695  886  417  611   136 #>  [182,]  772  256   36  626  190  522  741  423  452   394 #>  [183,]  301   99  606  524  296  747  794  595  809   717 #>  [184,]  133  103  741  430  923  698  596  983  975    75 #>  [185,]  277  417  415  132  811  635  576  790  647   847 #>  [186,]  251  953  621  424  625  563  414    1  360    17 #>  [187,]  670  591  634   16  824   79   15  196  510   212 #>  [188,]  321  339   73  460  456  454  554  314   43   558 #>  [189,]  926  750   30  127  222  805   66  931  734   806 #>  [190,]  667  756  182  772  862  280  735  256  596   835 #>  [191,]  172  964  388  352  580  878  949  658  109   208 #>  [192,]  784   40  505  124  305  700  811  584   13   366 #>  [193,]  675  782  929  407  815  521  447  370  713   245 #>  [194,]  978  291  295  286  358  363  938  491  599   319 #>  [195,]  627  721  357  681  501  611  801  947  250   660 #>  [196,]  670  212  677  824  458  634  806  902  591   843 #>  [197,]  544  107   24  420  680  325  909  793  229   497 #>  [198,]  416  393  564   69  652  373   42  449  151   762 #>  [199,]   43  511  207  168  883  469  339   80  470   458 #>  [200,]  171  812   96   47  518  617   35  218  533   294 #>  [201,]  936  696  433   11  361  562  528  422  399    53 #>  [202,]  270  380  822  966  808  360  168  937   22   492 #>  [203,]  961  329  767  589  344  423   94  613  223   142 #>  [204,]  479  849  927  921  747  457  910  794  296   557 #>  [205,]  103  689  923  586  898  123  275  900  161   823 #>  [206,]  816  843  147  449  165  604   34  868  933   512 #>  [207,]  469  354   43  199  579   73  339  175  511    80 #>  [208,]  224  191  735  173  878  514  352  964  826   713 #>  [209,]  760  835   95  667  893  955  216  262  914   752 #>  [210,]  759  509  405  468  802  566  614  857   18   832 #>  [211,]  157  758  806  902   55  484   65  896  259   848 #>  [212,]  196  634  677  824   15   34  670  796  458   296 #>  [213,]  152  895  795  187  962  796  165  429  670   843 #>  [214,]  154    1  894  498  129  332  315  448  837   442 #>  [215,]  836  418  837  267  815  154  281  521  894   935 #>  [216,]  344  477  667  273  160   68  209  770   74   463 #>  [217,]  498   50  851  681  400  389  672  501  997    60 #>  [218,]  981   47  803  120    7  533   96  812    8   275 #>  [219,]  430  575  322  741  394  423   70  602  263   221 #>  [220,]  577  875  901  486  756   29  447   59  898   900 #>  [221,]  263  430  846  741  411  990   92  219  322    89 #>  [222,]  788  669  750  189  168  704  519  791  806    30 #>  [223,]  139  955  384  394  329  467  602  395  487   322 #>  [224,]  735  341  878  862    3  964  208   82  679   191 #>  [225,] 1000  820  436  428  988  676  268  111  509   210 #>  [226,]   33  852  271  641  300  333  433   54  378   742 #>  [227,]  662  928  863  783  429  711   14  896  529   380 #>  [228,]  303  963  809  774  102  965   57  754  897   904 #>  [229,]  888  800  950  350  623  680  687  703  497   759 #>  [230,]  982  680  497  101  703  310  446  587  909   764 #>  [231,]   54  359    7  733  884  742  489  803  785   535 #>  [232,]  431  600  330  651  369  134  480  472  974   440 #>  [233,]  379  904  124   63  347  649  906  931  918   828 #>  [234,]  829  790  337  427  181  252  539  158  174   136 #>  [235,]  997  711  389  529  662   60   22  579  851   559 #>  [236,]  160  475  650  422  551  974   45   68  472   526 #>  [237,]  996  612  349  972  946  590  307  504  481   252 #>  [238,]  392   90  882  792  810  992   20  246  377   993 #>  [239,]  163  632  712  946  635  819  647  252  342   340 #>  [240,]  541  954  956  362  504  272  556  443  481   409 #>  [241,]  980   67  688  118  141  963  965  769  303   775 #>  [242,]  586   29  689  898  875  341  205  224  873   173 #>  [243,]  751  282  286  444   10   84  960  991  885   872 #>  [244,]  839  254  827  489  318  646   23  970   25   742 #>  [245,]  929  177  407  316  446  267  935  101  143   765 #>  [246,]  992  775  392  397  858   67  304  377  118   179 #>  [247,]  743  884    7  803  200  171  812  397  218    90 #>  [248,]  123  608  516  823  915   85  594  719  275   624 #>  [249,]  100  615  582  637  477  161  344  216  945   900 #>  [250,]  871  834  622  722  492  783  830   30  896   627 #>  [251,]  625  270  360  563  621  202  186  400  937   414 #>  [252,]  790  277  829  185  174  136  369  417  946   239 #>  [253,]   32  467  395  986  891  139  922  384  223   619 #>  [254,]  318   25   41  244  646  372  986  517  839   654 #>  [255,]  804   90  858  992  882   21  744  500  246   392 #>  [256,]  522  182  626  768   36  999  772  452  190   667 #>  [257,]   61  767  961  117  967  779  968   39   52   355 #>  [258,]  702  534  692  559  235  560  973  997  711   579 #>  [259,]  157  848  484  818   65  957  951  520  211   101 #>  [260,]   86   58  293  508  597  948  288  126  176   994 #>  [261,]   97  421  420  755  149  891  119  860  159   718 #>  [262,]  914   68  613  209  893  974  344  216  551   955 #>  [263,]  221   89  490  322  602  430  846   36  394   741 #>  [264,]  636  855  832  857  550  804  509   21   88   398 #>  [265,]  874  665  571  106  969  211  557  836  419   761 #>  [266,]  704  502  788  453  519  791  285  865   98   222 #>  [267,]  894  410  245  316  164  315  815  215  929   407 #>  [268,]  436   58  111  327   77  676   18  293  597   948 #>  [269,]  367  942  451  332  448  514  817  242  424   413 #>  [270,]  202  380   22  360  966  822  168  808  937   672 #>  [271,]  403  897  226  102  641  151  535  393  852   963 #>  [272,]  482   82  443  760  108  209  835   95  485   541 #>  [273,]   74  463  160  477  216  650  695  919  886     9 #>  [274,]  799  642  732  754  728  525  889  359  228   373 #>  [275,]  594   96  981   47  533  123  823   70  205   120 #>  [276,]  771  668  583   35  617  437  777  723  294   317 #>  [277,]  185  417  415  640  811  306  790  136  252   611 #>  [278,]   81  712  957  671  342  555  944  169  520   493 #>  [279,]   20  304   87   57  377  810  940   48    8   411 #>  [280,]  756  778  667  190  881  709  873  862  220   760 #>  [281,]  360  521  625  966  865  621   75  935  348   285 #>  [282,]  751  991  943   84  243  287  169  286  599   897 #>  [283,]  968  490   89  922  366  395   64  952  961   322 #>  [284,]  947  682  706  660   13  650    9  404  700   644 #>  [285,]  723  698   98  408  865  519  704   75  348   788 #>  [286,]  978  194  599  320  243   84  478  291  295   991 #>  [287,]  599  991  440  943   84  630  979  528  305   320 #>  [288,]   77  302  781   86  293  450  386  930  793   912 #>  [289,]  557  927  106  457  131  665  874  824  849    16 #>  [290,]  873    3  773  862  313  679  586  760  709    82 #>  [291,]  295  938  363  194  319  125  860  547  420   978 #>  [292,]  638  791   48  453  697  398   88  455  502   864 #>  [293,]  288  335  302  126   86   77  508  867  793    18 #>  [294,]  823   47  326  719  120    8  167  317  617   536 #>  [295,]  319  291  938  358  547  860  194  363  125   934 #>  [296,]  747  717   15  212  864  524  385  301  479   131 #>  [297,]  149  891  922  619  119  573  769  421  605   253 #>  [298,]   66  353  351  697  913  538  127   46  677   933 #>  [299,]  648  441  986  435  879   32  891  253  605   421 #>  [300,]  742  827  333  226   54  378  489   23  970   244 #>  [301,]   99  183  606  351  527  371  717  524  385   809 #>  [302,]   77  288   18  114  293  335  687  684  781   111 #>  [303,]  228  965  904  828  980  963  774  809   57   649 #>  [304,]  279   57  377   20  965   27  246  118   87   642 #>  [305,]  505  979  811  906  124  162  647  630  192   347 #>  [306,]  417  640  277  565  415  951  868  136  811   185 #>  [307,]  859  730  155  745  632  996  908  569   12   483 #>  [308,]  137  664  689  586  341  517  161   41   25   594 #>  [309,]  345  473   91  288   77  930  450  508  781   302 #>  [310,]  949  587  765  658  387  407  929  230  764   680 #>  [311,]  422    4  528  974  431   94  651  613  605   770 #>  [312,]  645    6  551  249  637   68  691  262  760   615 #>  [313,]  773  709  616  778  679  290  413    3  873   280 #>  [314,]  729  892  339   28  511  738  932   52  503   629 #>  [315,]  894  410  267  815  193  929  442  407  498   787 #>  [316,]  113  515  245  177  164  267  929  407  101   653 #>  [317,]  719  326  694  940  294  729  503  823  314   276 #>  [318,]  254   41   25  646  244  654  372  441  108   986 #>  [319,]  938  295  291  860  934  547  597   76  150   994 #>  [320,]  872  599   97  648  943  287   84  297  605   261 #>  [321,]   73  188  838  542   14  657  175   61  429   339 #>  [322,]  575  423  490  402  263  219   89  394  430   968 #>  [323,]  826    2  763  532  581  352  109  570  496   104 #>  [324,]  336  856  375  919  543  534  153  381  526   657 #>  [325,]  107  776  745  113  566  653  761  197  984   569 #>  [326,]  294  823  167  777  317  103  990  923  719   120 #>  [327,]  776  912  111  566  948   77  653  325  268    18 #>  [328,]   79  962   16  833  705  655  510  690  571   877 #>  [329,]  384  223  139  613  203  142  955   94  467   395 #>  [330,]  431  232  612  472  600  974  893  695  481   746 #>  [331,]  654  693  401  518  122  720  686  797  620   552 #>  [332,]  817  451    1  214  448  269  709  129  616   413 #>  [333,]  378    4  641   94  619  562  605   23  528   598 #>  [334,]  708  595  444   99  897  102  371   69  963   809 #>  [335,]  126  293  150  302   18   31  109  920  687   793 #>  [336,]  324  856  543  375  534  919  153  526  381   657 #>  [337,]  746  829  565  181  899  368  886  174  475    45 #>  [338,]  908  546  757  725  894  315  155  164  410   498 #>  [339,]  314   28   43  738  511  470  188  513  892   199 #>  [340,]  539  991  158  647  169  979  671  369  445   811 #>  [341,]  224  686  878  689  137  401  552  352  208   862 #>  [342,]  712  163  148  391   81  107  420  699  445   924 #>  [343,]  905  416  762  429  115  321   73  361   53   152 #>  [344,]  423  216  955  487  203  223   68  667  477   945 #>  [345,]  309  508  845  748  302  323  172  293  288    77 #>  [346,]  831  421  674   72  495  119   31  572  977   909 #>  [347,]  124  379  906  233  162  538  630  918  305   445 #>  [348,]  408  531  285  723  713  173  521  865  281    75 #>  [349,]  138  504   37  590  695   95  801  917  611   237 #>  [350,]   46  800  888  177  229  950  753  703  455   434 #>  [351,]  385  717  697  298  527  301  432  292  807   913 #>  [352,]  878  172  191  109  826  631  401  122  552   388 #>  [353,]  298  538  468  707  944  995  116  969  520   259 #>  [354,]  469  207   80  895  199   43  187  510  796   579 #>  [355,]  945   39  402    5  117  608  975  257  779   900 #>  [356,]  416  147  584  425  158  604   69  493  905   539 #>  [357,]  195  947  706  682  284  640  886  426  660   404 #>  [358,]  295  491  978  194  363  125  291  994  825   478 #>  [359,]  732  799  535  105  889  592  274  454  728   525 #>  [360,]  625  966  281  521  822   75  202  621  808   937 #>  [361,]   53  115  696  390  628  589   11  584   42    40 #>  [362,]  956  409  481  504  240  541  954  590  612   476 #>  [363,]  125  291  295  946  358  194  319  819  476   491 #>  [364,]  970  925  466  488  170   23  814  598  779    85 #>  [365,]  730  546  908  607  585  725  338  307  821   569 #>  [366,]   40  961   63  749  968  649   64  283  628   904 #>  [367,]  269  451  332  242  942  817  290  413  448   773 #>  [368,]  399  475  936   11  201  153   53  337  115   696 #>  [369,]  174  899  539  790  158  651  232  440  811   252 #>  [370,]  521  935  808  675  966  822  983  492  815   622 #>  [371,]  432  527  840   99  683  809  301  916  828   595 #>  [372,]  646  914  556  262   23  170  613    4  244   254 #>  [373,]  652  525  524  606  198  274  183  799  642   110 #>  [374,]   93  957  128  818  259  707  859  278  484   951 #>  [375,]  381  657  324  919  534  856    9   71  559   153 #>  [376,]  798  143   92  452  722  622  871  133  626   983 #>  [377,]  279  304   20   87  462  397  715  392  643   179 #>  [378,]  333    4   94  605  562  619  641  528   23   311 #>  [379,]  233  347  124  918  904  906  159  538  828    63 #>  [380,]  202   22  270  783  175  662  928   14  830   492 #>  [381,]  657  375  534    9  559   71  644  426  456   321 #>  [382,]  794  479  204  140  921  396  471  183  747    99 #>  [383,]  889  799  274  525  373  359  728  732  564   567 #>  [384,]  139  223  329  955  467  142  253  394  395   602 #>  [385,]  717  351  855  292  864  550  301  471  882   697 #>  [386,]  793  781  867  907  949  450  684  930  288   776 #>  [387,]  580  949  639  964  310  388  787  587  407   191 #>  [388,]  907  949  580  658  191  964  172  568  387   310 #>  [389,]   60  851  529  997  235  217  681  662  711    22 #>  [390,]   64  361  628   42  696   61  774  366  767   589 #>  [391,]  699  924  802  342  593  731   10  116  984   468 #>  [392,]  992  246  377  882   20  238  279  304  810    90 #>  [393,]  416  151   42  696  403  936  198   11  628   584 #>  [394,]  602  955  223   36  139  322  219  423  263   384 #>  [395,]  467  253   32  922  490  619  223  384  139    89 #>  [396,]  794  493  425  853   62   81  116  183  301   747 #>  [397,]  775  179  500  715  744  377  462  246  789   866 #>  [398,]  455  496  570   88  292  753  453  434   46   950 #>  [399,]  526  368  936  543  201  433  814  696  475   856 #>  [400,]  672   50  690   22  217   55  815  498  270   966 #>  [401,]  693  620  352  686  878  172  331  552  987   108 #>  [402,]  575  945  322  355  952  488  423  487  968    39 #>  [403,]  271  393  852  708  198  151  897  226  102    42 #>  [404,]  644  706    9   14  175  959  947  870  284   740 #>  [405,]  468  614  509  857  210  636  593  832  759   802 #>  [406,]  128   93  957  374  818  278  306  136  158   539 #>  [407,]  929  765  245  193  310  782  316  737  949   675 #>  [408,]  348  713  285   98   78  723  983  531  698   519 #>  [409,]  362  590  483  504  867  481  956  386  476   450 #>  [410,]  442  315  267  894  515  725  316  585  821   164 #>  [411,]  990  221    8  536  777  263  846  977  932    48 #>  [412,]  685  701  465  817   29  220  875  673  901   577 #>  [413,]  679  451   26  964    3  735  580  639  313   709 #>  [414,]  563  625  621  281  360  251  865  418  837   883 #>  [415,]  576  162  903  811  185  520  277  726  505   671 #>  [416,]  393  343  762  198  584   11  628  361  696    42 #>  [417,]  277  185  640  306  611  565  415  132  829   811 #>  [418,]  215  154  836  815  837  625  894  267  690   400 #>  [419,]  874  707  265  571  969  849  566  984  665   761 #>  [420,]  163  148  819  635  261   97  903  576  107   544 #>  [421,]  891  119  346  261  495  149  674  297   72   831 #>  [422,]  311  651   53  475  899   45  589  650   13   115 #>  [423,]  772  322  741  596  344   36  575  182  394   430 #>  [424,]  448  465  942  186  621    1  173  685  412   837 #>  [425,]  493  396  147  853   69  555  356  206  606   794 #>  [426,]  706  559  153    9  404  886  284  357  919   947 #>  [427,]  746  337  234  181  829  330  695  886  790   174 #>  [428,]  939  140  405  636  468  509  210  593  804   924 #>  [429,]   14  579  227  863  175  711  830   73  905   706 #>  [430,]  741  221  219  596  263  772  322  184  423   975 #>  [431,]  974  472  651  232  600  330  311   45  770   422 #>  [432,]  371  527  916  683  995  116  840  918  960   351 #>  [433,]  201  936  696  399  852  814  562  641  390   361 #>  [434,]  737  496  114  687  888  350  753  455  570   177 #>  [435,]  179  715  462   72  769  643   27  141  797   299 #>  [436,]  268   58  111 1000  327  676  666  210  225   820 #>  [437,]  976  276  578  723  771  668   35  173  583   716 #>  [438,]  909  609  726  497  982  798  159  576  764   703 #>  [439,]   51  112  744   38  255  866  500  720  397    90 #>  [440,]  287  369  232  528  599  651  311  899  174   134 #>  [441,]  299  986  648   32  253  891  605  467  495   435 #>  [442,]  410  725  894  585  315  267  129  607  515   908 #>  [443,]  272  620  482  108  485   82  987  541  954   401 #>  [444,]  688  102  963  897  980   67  872  241  371   118 #>  [445,]  630  169  979  647  162  347  671   84  305   906 #>  [446,]  101  703  805  497  177  798  143  245  680   230 #>  [447,]  675  901   59  220  875  577  782  193   29   521 #>  [448,]  514  837  942   44    1  173  451  332  621   348 #>  [449,]  816  512  652   34  206  110  649  762  734   933 #>  [450,]  930  781  288  386  867   86  912  793  508   473 #>  [451,]  413  332   26  129  448  514  269  709  817   473 #>  [452,]  376  256  722  622  871  626  798  786  540   768 #>  [453,]  502  704  519   98  791  266  788  583   48   292 #>  [454,]  592  838  525   64  564  390  257  110  779    61 #>  [455,]  398  496  570  753   46  350  434   88  453   530 #>  [456,]   71  554    5  460  558   39  117  355  624   608 #>  [457,]  927  204  289  479  849  921  747  557   15   296 #>  [458,]  168  830  470  670   30  758  669  677  863   196 #>  [459,]  674  752  602  764  522  394  495  568  999   626 #>  [460,]  554  694   17  456  624  558   71    5  188   953 #>  [461,]  876  869  154  214  655  971  601  561    1    50 #>  [462,]  715  643  179   27   72  435  769  854  377   500 #>  [463,]   74  273  778  216  695  138  659  893  477   160 #>  [464,]  144  925  466   85   49  637  364  582  813   558 #>  [465,]  685  412  424   29  875  701  242  716  220   673 #>  [466,]   49  364   85  925  464  488  970  144  813   123 #>  [467,]  395   32  253  223  139  384  922  986  490   329 #>  [468,]  405  509  857  210  832  759  636  593  353   614 #>  [469,]  207  354  199  270   43  579  202  510  251   591 #>  [470,]  629  542  458  513  738  830   34  339  796   863 #>  [471,]  633  717  385  296  882  855  524  183  351   301 #>  [472,]  431  974  330  651  232  236  893  311  613   914 #>  [473,]   26  930  129  585  781  725  607  450  451   309 #>  [474,]  976  942  437  173   44  499  845  531  514   578 #>  [475,]  650   53  422  115   13  236  153   45  160   589 #>  [476,]  135  568   24  656  125  541  752  907  145   954 #>  [477,]  160  216  273  344  650    9  249  644   74   945 #>  [478,]  842  295   76  547  358  885  286  648  860   938 #>  [479,]  204  849  747  921  794  927  910  296  457    62 #>  [480,]  491  612  232  825  481  946  330  125  956   363 #>  [481,]  612  504  135  656  956  541  954  476  362   590 #>  [482,]  272   82  108  443  760  862  137  620    3   209 #>  [483,]  912  176   12  776  569  386  821  409  307   781 #>  [484,]  848  951  157  259  101   65  211  627  164   834 #>  [485,]  495  568  987  459  443  108  620  752  986   272 #>  [486,]  900  975    5   59  220  577  596  870  644   959 #>  [487,]  575  517  223  219  344  955  322  402  394    70 #>  [488,]  779  117  945  402   39  355   85  952  767   598 #>  [489,]  839  742  537  598  244   54  827  970  733    23 #>  [490,]   89  283  263  322  968  395  922  602  467   253 #>  [491,]  825  480  358  125  363  978  956  194  295   599 #>  [492,]  622  740  808  822  722  871  370  250  669   130 #>  [493,]  425  147  555  853  396  206   81  278  843    69 #>  [494,]  588  266  131  883  453  865  502  864  578   704 #>  [495,]  485  831  421  985  459  568  346  674  987    31 #>  [496,]  570  455    2  753  398  434  950  687   88   888 #>  [497,]  703  680  909  438  982  446  230  726  623   798 #>  [498,]  217   50  681  672  400  894  501  315  851     1 #>  [499,]  588  976  494  578  437  474  668  276  771   531 #>  [500,]  397  643  179  715  744  462  104  377  775   532 #>  [501,]  681  721  959  195  672  217  786   22  380   659 #>  [502,]  453  704  519   98  791  266  788   48  583   777 #>  [503,]  952  536  729  940  120  990   39  719  314    52 #>  [504,]  481  590  349  138  612  541  954  362   95   656 #>  [505,]  305  811  979  162  124  192  647  415  906   784 #>  [506,]  833  529  851  711  389  997  655   22  877    60 #>  [507,]  915  248  558  180  144  694  813  460  516    85 #>  [508,]   86  450  998  288  548  930  293  867  345   126 #>  [509,]  832  857  759  636  468  405  210  264  550   614 #>  [510,]   79  833  962  655  506  469  187  328  795   270 #>  [511,]   43  199  314  339  130  729  669  694  168   937 #>  [512,]  449  816  734  110  652   34  649  933  774    63 #>  [513,]  796  110  470  838  738  629  652   28  339    34 #>  [514,]   44  448  531  173  208  942  837  348  451   193 #>  [515,]  653  569  113  684  316  821  761  410  850   776 #>  [516,]  248  594  275  716  533  161  123  205  841    47 #>  [517,]  487   70   25   41  137  575  582  219  344   161 #>  [518,]  812   96  533  200  664  594  275   47  218   841 #>  [519,]  704  788  502  453   98  698  222  285  266   983 #>  [520,]  944  903  538  618  415  162  576  726   65   148 #>  [521,]  370  815  966  935  675  360  281  983   75   822 #>  [522,]  999  768  256  626  764  182   36  982  452   752 #>  [523,]  748  988  724  820  111  836  850   44  215   976 #>  [524,]  183  301  652  296  717  606  212  738  512   110 #>  [525,]  110  799  732  454  564  642   28  652  567   774 #>  [526,]  856  543  919  551  399  236  160  814  475   967 #>  [527,]  828  918  432  371  840  351  538  965  301   807 #>  [528,]  311  641    4   94  378  605  287  422  562   943 #>  [529,]  389  662  711   60  851  997   22  235  506   227 #>  [530,]  753  713  143   92  765  350  798  376  570   177 #>  [531,]  578  348   44  173  408   78  581  514  837   723 #>  [532,]  643  104  323  500  462    2  826   72  377   570 #>  [533,]   96  518  812  594  275  664  981  218   47   841 #>  [534,]  381  559  657  375  258  324  692  560  336   426 #>  [535,]  732   54  359  733  799  228  785   57   64   963 #>  [536,]  990  120    8  574  952  156  503   87  411   940 #>  [537,]  574  854  156  839  489  536  952   32  395   467 #>  [538,]  944  520  918  618  347  379  903  913  527   159 #>  [539,]  158  340  174  369  790  811  252  671  647   565 #>  [540,]   36  452  423  975  741  772   52  961  870   871 #>  [541,]  954  476  240  481  135  272  485  956  443   504 #>  [542,]  629  830  470  863  175  130  838  870   34    14 #>  [543,]  856  526  919  967  324  399  814  153  375   336 #>  [544,]  197  755  623  148  860  420  229  614  107    31 #>  [545,]  474  345  748  976  845  499  523  890  309   323 #>  [546,]  725  821  585  365  338  569  410  129  908   315 #>  [547,]  860  934  985   76   31  150  295  319  958   125 #>  [548,]  930  679  450  508   26  639  998  867  473   580 #>  [549,]  692  887  880  886  603  710  559  534  258   739 #>  [550,]  855  264  832  636  864  509  857  385  351   717 #>  [551,]   68  236  262  526  160  216  312  170  914   637 #>  [552,]  122  878  108   70  631  352  674  219  602   394 #>  [553,]  951  877  833  529  818  896  928  662  506   227 #>  [554,]  460  624  456    5   71   17  694  558  900    39 #>  [555,]  604  868  843  147  493  206  671  162  278   165 #>  [556,]  914  262  372  954  893  240  541  272  209    68 #>  [557,]  289  106  665  874  927  265  849   16  824   864 #>  [558,]  456   71  554  460  813   85   39  608  624   694 #>  [559,]  426    9  706  235  534  381  404  153  692   711 #>  [560,]  657  381  534  258  207  953  375   56  579   469 #>  [561,]  876  328  757  655  461  877  971  571  338   678 #>  [562,]   94  598  589  814   23  378  767    4  203   333 #>  [563,]  414  625  251  591  360  270  621   79  281   469 #>  [564,]  838  454  525  513  110  652  198  390   73   188 #>  [565,]  905  417  306   13  784  682  640  899  158   811 #>  [566,]  984  210  761  759  969  325  327   18  802   699 #>  [567,]  105   28  993  525  314  940  889  810  339   454 #>  [568,]  907  476  485  752  495  388  459  987   31   764 #>  [569,]  653  821  515  113  684  587  776  316  908   585 #>  [570,]  496  455  753   78  398  581    2   98  826   434 #>  [571,]  265  874  164  761  908  419  211  267  484   690 #>  [572,]  958  718  941  755  119   72  610  346  727   920 #>  [573,]  119  149  769   27  977  297  749   89  807   846 #>  [574,]  537  156  854  536  990  952   87    8  120   490 #>  [575,]  322  402  219  487  423  952  394  430  945   223 #>  [576,]  726  415  903  438  982  520  909  159  497   230 #>  [577,]  901  220  959  486   59  447  786  756  875   644 #>  [578,]  531   78   98  723  581  408  348  976  285   437 #>  [579,]   14  175  429  711  227  380  235  863  662   404 #>  [580,]  964  387  639  388  949  191  735  310  658   907 #>  [581,]   78  570  826  434  578  531  713  408  496    98 #>  [582,]  100  249  615  637  161  945  608  344  355   517 #>  [583,]  777  617   48  668  276  502  453   98  771   326 #>  [584,]   11  628  192  361   53   42  762  115   40    13 #>  [585,]  607  725  442  410  821  515  569   91  546   653 #>  [586,]  689  242  873  898  875  205   29  862  290     3 #>  [587,]  310  821   19  230  569  949  982  387  316   113 #>  [588,]  494  499  266  131  578  668  453  864  633   792 #>  [589,]  767  814   53  361  115  203  650  961   61   422 #>  [590,]  504   19  656  587  178  135   24  349   37   476 #>  [591,]  824  670   16  634  168  758  106  458  187   196 #>  [592,]  454  779  117   39  813  257   64  488  503   967 #>  [593,]  924  116  995  405  802  468  391   10  614   916 #>  [594,]  275   96  533   47  823  981  123  205  294   664 #>  [595,]  809   99  606  102  371   69  840  897  963   228 #>  [596,]  741  772  975  430  423  900  756  182  184   103 #>  [597,]   58  319  666  938  948  126  335   86  844   268 #>  [598,]   23  970  562  395   94  467  488  489  402   839 #>  [599,]  287  320   84   97  630  134  991  440  819   445 #>  [600,]  780  847  145  132  134  770  232  431  974   656 #>  [601,]  869  603  217  971  498  880    1  851  678   997 #>  [602,]  394  674  263   36  459  223  955   89  139   219 #>  [603,]  880  710  659  601  217  997  681  498   60   692 #>  [604,]  868  555  843  206  165  784  124  147  192   162 #>  [605,]  619    4  891  922  378  329  384  297   94   311 #>  [606,]  809  301  816  183  652   69   99  512  449   840 #>  [607,]  585   91  725  442  473  365  546  912  410   821 #>  [608,]  123  355   39   85  945    5  900   71  554   117 #>  [609,]  438  798  749  726  452   36  142  909  846   376 #>  [610,]  977  638   88  807  572    2  104  623  920   800 #>  [611,]   37  801  917  195  640  417  627  185  277   136 #>  [612,]  481  946  330  480  504  232  656  135  237   600 #>  [613,]  974  329  770  262  914   68  384  203  311   955 #>  [614,]  405  857  468  950  727  210  755  544  802   800 #>  [615,]  100  249  582  161  900  220  756  596  205   637 #>  [616,]  709  313  787  659  778  773  498  881  129   817 #>  [617,]    8  583  668  771   87   35  294  777  940    48 #>  [618,]  127  805  931  913  520  538  159  926   65   902 #>  [619,]  922  297  605  395  891  253  467  149   94   329 #>  [620,]  401  443  108  987  693  485  482  172   82   878 #>  [621,]  625  360  281  837  521  414  865   75  251   348 #>  [622,]  722  492  871  786  740  250  452  808  376   370 #>  [623,]  800  703  229  159  497  755  950  807  727   913 #>  [624,]  554   17    5  460  900  694  486  923  953   456 #>  [625,]  360  621  281  966  251  521  414  563  270   202 #>  [626,]  256  182  522   36  772  452  768  376  764   999 #>  [627,]  834  896  721  195  250  848  783  484   55   722 #>  [628,]   42  361  390  762  584  649   40  151  366   774 #>  [629,]  470  542   34  734  892  110  838  830  513   738 #>  [630,]  445  169  979  906  305  647   84  347  162   124 #>  [631,]  826  878  122  674  713  352  167  552  626   735 #>  [632,]  745  635  859  107  163   19   24  185  277   819 #>  [633,]  471  131  882  855  717  385  296  588  864   494 #>  [634,]  824   15  212  591  670  196  187   80  458   738 #>  [635,]  819   24  632  420  163  145  656  576   19   185 #>  [636,]  857  264  832  509  405  550  468  855   21   804 #>  [637,]  582  249  100  615  551  161  312  526  945   170 #>  [638,]  697  807  610  913   88  926  292  977   46   455 #>  [639,]  580  387  679  964   82  388  835  752  949   413 #>  [640,]  417  136  829  611  306  277  181  357  185   565 #>  [641,]  333  528  378  562   94  943   42    4  151   201 #>  [642,]  754  732   57  274  799  228  304  525  810   279 #>  [643,]  462  532   72  715  500  179  854  104  122   156 #>  [644,]  870  404  959    9  740  486  947  130  706   975 #>  [645,]  312  760    6  290  873  209  482  556  262   893 #>  [646,]  372  318  254  244  441  556   23  299  827   986 #>  [647,]  979  811  162  505  305  445  671  630  134   415 #>  [648,]  299  441  320  605  891  297  619  872  141   986 #>  [649,]   63  904  233  512  774  816  366  931  449   628 #>  [650,]  160  475  284  682   13  589   45  422  115    53 #>  [651,]  899  431  422   45  311  232  369  746  174   974 #>  [652,]  449  512  110  816  513  606   34  206  838   525 #>  [653,]  515  569  684  113  776  821  316  761  912   850 #>  [654,]  331  693   25   41  401  518  664  254  318   686 #>  [655,]  506  833  510  851   50  328   79  877  400    22 #>  [656,]  135  145   24  178   19  780  476  635  590   600 #>  [657,]  381  375  534  321  560    9  559  456   71    73 #>  [658,]  765  949  388  310  764  907  680  191  109   580 #>  [659,]  681  501  195   74  463  917  881  357  603   778 #>  [660,]  947  682  700  132  847  284  784  871  250   801 #>  [661,]  731   10  924  391  751  844   81  342  699   593 #>  [662,]  227  529  711  783  928  380  896   22   14   389 #>  [663,]  152  861  895  213  796  564  513   73  373   198 #>  [664,]  533  518  275  594   25  841  308   96  981    41 #>  [665,]  265  557  874  106  836  177  350   46  969   864 #>  [666,]  844   58  597  948  699  802  436  938  268   391 #>  [667,]  190  756  280  772  182  209  760  216  835   256 #>  [668,]  771  276   35  583  617  792  777  437   48   453 #>  [669,]  168  222  822  492  808  983  788  133  698   130 #>  [670,]  196  591  824  458   16  187  634  212  758   106 #>  [671,]  162  647  979  811  712  445  505  305  169   415 #>  [672,]  400   50  815   55  690  501  721   22  966   370 #>  [673,]  161  615   56  685  100  412  249  582  701   465 #>  [674,]  602  459  122  346  394  495  831  421   72   631 #>  [675,]  193  782  370  521  815  447  786  929  983   935 #>  [676,]   18  614  687  210  763  857  509  950  335   405 #>  [677,]  127  806  902   30  933  196   34  189   66   805 #>  [678,]  757  971  876  338  877  217  498  851  601    60 #>  [679,]    3  639   82  413  862  313  580  964  224   290 #>  [680,]  497  703  909  230  982  229  764  765  446   658 #>  [681,]  501  721  195  659  217  389  498   60  672   851 #>  [682,]   13  284  660  947  700  650  784   45  115   706 #>  [683,]  916  714  960  727  432  918  718  995  118   371 #>  [684,]  653  515  114  569  113  781  316  821  737   850 #>  [685,]  465  412   29  875  220  701  673  624  615   577 #>  [686,]  341  401  693  224  620  137  878  352  845   331 #>  [687,]  888  950  114  800  229   18    2  496  434   350 #>  [688,]   67  980  241  118  141  444  872  866  963   775 #>  [689,]  586  205  137  862  242  898  341  224  873   875 #>  [690,]   55  400   50  672  894  815   22  966  721   211 #>  [691,]  710    6  312  701  880  249  463  778  673   615 #>  [692,]  549  887  559  880  534  258  886  603  426   235 #>  [693,]  401  331  620  352  172  686  878  987  654   552 #>  [694,]  460  554   17  317  624  729  511  314    5   456 #>  [695,]   74   45  463  746  273  330  138  357  893    37 #>  [696,]  936  361  201   11  390   53   42  589  115   628 #>  [697,]  913  807  638   46  351  926   88   66  298   292 #>  [698,]  133  983  285   92   75  519  788  669  184   704 #>  [699,]  391  802  984  342  107  844  593  210  924   325 #>  [700,]  682  660  847   40   13  770  132  192  784   284 #>  [701,]  412  880  685  710   56  817  901  577  465   953 #>  [702,]  973  258  795  711  739  887  559  235  579   506 #>  [703,]  497  680  446  623  909  229  101  438  230   350 #>  [704,]  519  788  502  453  266   98  222  791  285   698 #>  [705,]  962  328  818   79   16  910  553   93  874   571 #>  [706,]    9  404  426  284  947  682  357   14  644   559 #>  [707,]  353  969  984   62  374  419  957  391  259    93 #>  [708,]  334  595  897   69  403  102  198  271  151   393 #>  [709,]  313  778  616  280  773  873  881  413  787   817 #>  [710,]  691  603  880  463  701  778   74  659  273   817 #>  [711,]  529  662  235  227  997  579  389   14  506    60 #>  [712,]  342  163  671  278  148  903  944  520  162   107 #>  [713,]  408  530  753   78  983  348  782  631  765    98 #>  [714,]  916  683  727  718  960   21  958  941  572   858 #>  [715,]  179  462  775  397  643  435  500  377   27   769 #>  [716,]  723  294  173  437  923  276  326  823  205   103 #>  [717,]  385  351  855  864  296  301  292  471  550   298 #>  [718,]  958  755  941  572  141   76   97  860  714   960 #>  [719,]  120  294  823  317  940    8  536   47  326   503 #>  [720,]  171  812  500  532  200  323  518  643  331    90 #>  [721,]  501  627   55  681  722  195  834  672  622   896 #>  [722,]  622  871  452  786  834  492  250  376  721   370 #>  [723,]  285  408   98  777  348  865  578   78  173   698 #>  [724,]  523  836  215  154  837  988   44  418  748   820 #>  [725,]  546  585  129  442  410  607  821  315  338   473 #>  [726,]  576  159  438  903  909  497  609  415  618   703 #>  [727,]  918  807  916  755  683  714  623  572  697   828 #>  [728,]  785  274  799  732  359  535  754  642  733   889 #>  [729,]  314   52  892  503  932  511  694  326  317   133 #>  [730,]  365  307   12  908  483  996  546  155  859   569 #>  [731,]  391  924   10  342  661   81  699  278  712   593 #>  [732,]  799  642  359   57  535  274  525  228  754   774 #>  [733,]  789  884  785   54  537  535  489  775  743   742 #>  [734,]   34  629  933  512  932  892  189  110  931    63 #>  [735,]  964  224  190  862  898  782  580  878  756   413 #>  [736,]  330  472  612  480  556  481  893  431  232   504 #>  [737,]  434  114  765  177  407  316  350  850  245   684 #>  [738,]   28  470  339  892  513  314  629  110  796   734 #>  [739,]  973  702  887  692  795  258  534  559  711   549 #>  [740,]  492  870  130  808  622  937  822  959  644   830 #>  [741,]  430  596  772  975  423  219  221  182  184   322 #>  [742,]  489   54  839  827  300  598  970   23  244   733 #>  [743,]  884  247  789  733    7  775  879  397  744   715 #>  [744,]  866  397  500  179  775  715  112  435  789   462 #>  [745,]  632  859  107  325  163  635  307   19  712   155 #>  [746,]  829   45  181  174  695  651  899  431  337   369 #>  [747,]  479  794  849  204  296  921  910  927  212    15 #>  [748,]  523  988  976  581  434  820  323  302  345   570 #>  [749,]  931   63  609  366  968   89  573  263   52   846 #>  [750,]   66  805  806  143  189  222   30  926  902   127 #>  [751,]  243  282  991   84  286   10  661  444  943   169 #>  [752,]  835  999  459  522  568  764  768  256  178    95 #>  [753,]  530  455  570  496  350  713   46  434   78   519 #>  [754,]  642  274  228   57  304  732  799  809   99   963 #>  [755,]  718  544  727  572  623   97  958  148  261   159 #>  [756,]  280  190  667  596  220  772  182  875  881   898 #>  [757,]  678  338  876  877  971  217  851   50  498   561 #>  [758,]  211  806  966  935   55  902  168  458   30   202 #>  [759,]  210  509  888  229  969  800  950  468  832   566 #>  [760,]  209   95  667   82  862  482  835  272  190   778 #>  [761,]  113  850  515  566  653  316  969  164  325   569 #>  [762,]  628  449  838  649  584  206  165  816  604   192 #>  [763,]  920  104    2  323   38  532  496  687  109   676 #>  [764,]  982  909  522  680  438  459  768  497  626   658 #>  [765,]  658  407  949  929  310  737  680  530  245   713 #>  [766,]   11  393  356  416  936  368  852  584  201   337 #>  [767,]  589  257  961  779  967  814   61  203  117    64 #>  [768,]  522  999  256  626  452  982  764  182  881   801 #>  [769,]   27  119  573  297   72  891  462  149  435   118 #>  [770,]  974  847  613  700  600   45  780  216  132   203 #>  [771,]  276  668   35  583  617  294  437  777  792   317 #>  [772,]  182   36  741  256  423  596  626  190  430   394 #>  [773,]  313  709  290  873  778    3  616  679  280   413 #>  [774,]  649  228  512  303   64  904  628   42   63   449 #>  [775,]  179  397  715  789  246  866  744  462   67   377 #>  [776,]  653  325  912  569  327  684  515  483  113   386 #>  [777,]  583   98  167  326  723  502  453  411  285   698 #>  [778,]  280  709  463   95  667  313  756  873   74   138 #>  [779,]  117  967  488  767  257   39  814  592  945   355 #>  [780,]  145  600  847  656  132  135  178  134  770   142 #>  [781,]  450  386  930  288  684  912  793  653  821   949 #>  [782,]  193  675  929  881  407  735  447  713  786   768 #>  [783,]  928  896  380  662  250  227  863  830  627   834 #>  [784,]  192  682   13  505  660  700   40  811  604   415 #>  [785,]  728  733  789  535  884  274  359  732  799    54 #>  [786,]  622  722  881  452  959  370  675  492  808   740 #>  [787,]  881  387  616  768  782  929  315  310  587    37 #>  [788,]  519  704  222  502  266  669  698  983  750   453 #>  [789,]  775  733  179  397  866  715  241  884   67   246 #>  [790,]  252  829  174  277  185  136  369  417  640   158 #>  [791,]  502  704  453  222  292  864  788   48  519   266 #>  [792,]  668   35  771  276  238  617  171  583  392   882 #>  [793,]  386  907  867  388  949  126  781  658  197   568 #>  [794,]  396  747  479  921  910  204   62  849  183   493 #>  [795,]  711  702  506  227  429  579  833  529  662   510 #>  [796,]  513  470  738  212  629   34  339  110   73   458 #>  [797,]  831  985   31  987  150  495  109   72  122   346 #>  [798,]  376  143  438  452   92  609  446  846  805   497 #>  [799,]  732  274  525  642  359  754  728  889  105   535 #>  [800,]  950  888  229  350  623  687   46   88  703   610 #>  [801,]   37  178  611  132  768  195  847  999  660    19 #>  [802,]  699  391  210  593  405  614  468  759  342   544 #>  [803,]    7  218   87   20    8  810  120  719  940   536 #>  [804,]  264   21  636  855  882  858  992  857  550   832 #>  [805,]  127  750  902  806  618   30  446   66   65   143 #>  [806,]  902   30  750  805  677  127   66  758   65   189 #>  [807,]  697  913  638  727  918  926  828  977  610   623 #>  [808,]  822  492  937  740  370   59  622   75  669   202 #>  [809,]  840  606  228  595   69  303  512  102  371   816 #>  [810,]   20  279  993  940   87  105  642   57  304   803 #>  [811,]  505  979  305  162  647  671  415  192  784   185 #>  [812,]  518   96  200  533   47  171  218  594  720   275 #>  [813,]   85   39  592  558  608  488  117  503  779   456 #>  [814,]  767  589  779  967  562   64  117   61  390   488 #>  [815,]  521  935  672  370  675  966  894  193  267    55 #>  [816,]  449  512  206  933   34  652  649  606  734   843 #>  [817,]  332    1  709   29  412  875  901  447  220   577 #>  [818,]  259  951  957  157  374  484  211  848  553    93 #>  [819,]  635  420  134   24  163  145  647  135  656   261 #>  [820,]  988  111 1000  523  850  665  748  566   18   676 #>  [821,]  569  587  515  653  546  684  585  410  310   113 #>  [822,]  808  492  669  937  370  966   75  740  983   168 #>  [823,]  294  120  326  719   47  123  536  990  103   275 #>  [824,]  634  591  106  670  196  212  458  168  222   677 #>  [825,]  491  125  480  599  232  605  954  358  541   956 #>  [826,]    2  631  581  323  570  352  496  109  713   753 #>  [827,]  742  244  300  489  839  879   54  970   23   646 #>  [828,]  965  918  527  904  807  303  379  233  573   727 #>  [829,]  181  790  746  640  252  174  417  136  277   185 #>  [830,]  863  542  175   14  783  250  458  740  380   492 #>  [831,]  797  346  122   72  495  109  674   31  985   421 #>  [832,]  857  509  636  264   88  550  468  759  405   950 #>  [833,]  506   22   79  510  529  928  851  962  662   270 #>  [834,]  627  250  722   65  871  896  721  902  622   101 #>  [835,]  752  999   95  209   82  667  760  522  459   190 #>  [836,]  215  418  267  665  265  850  837  177  737   874 #>  [837,]  215  621   44  154  448  531  418  348  281   625 #>  [838,]  110  513  629  762  542  449  454   61  470   512 #>  [839,]  489  244  537  742  598  970   23   32  827   467 #>  [840,]  809  527  853  371   69  432  347  828  233   606 #>  [841,]  533  664  518   96  812  594  275  200   47   308 #>  [842,]  885  112  866  478  688  141  941  648  872    51 #>  [843,]  165  206  868  147  604  555  816   34  933   677 #>  [844,]  666  699  802  391  597  938  984   58  731   948 #>  [845,]  686  341  345  208  474  976  242  173  224   514 #>  [846,]  977  263  221  926  798   92  376  609  626   573 #>  [847,]  132  600  780  660  770  700  145  178  801   682 #>  [848,]  484  157   65  259  101  951  834  627  520   415 #>  [849,]  479  204  927  747  910  921  557  794   62   296 #>  [850,]  761  515  737  114  113  684  653  316  267   177 #>  [851,]  389  997   60  217  529   50   22  506  235   681 #>  [852,]  226  433  201  936  393  641  403  271   33   696 #>  [853,]  840  169   81  493  347  906   69  445  995   124 #>  [854,]  156  574  537  462  990   70  536  643    8   715 #>  [855,]  550  264  385  864  717  832  636  804  292   351 #>  [856,]  919  526  543  324  336  375  153  160  399   236 #>  [857,]  832  636  509  264   88  405  468  614   21   950 #>  [858,]   21  992  246  714  916  804  118   67  683   432 #>  [859,]  745  155  632  307  107  484  325  374  712   848 #>  [860,]   76  547  958  718  985  934  755  544  261    31 #>  [861,]  663  895  152  354  213   73  207  796  469   973 #>  [862,]    3   82  190  224  735  760  482  667  873   756 #>  [863,]  830   14  175  227  783  542  429  928  458   250 #>  [864,]  791  292  550  855  717   66  385  453  296   298 #>  [865,]  285  281  723   75  348  266  883  408  578   621 #>  [866,]  744  775  179  112  789  397  688  715   67   435 #>  [867,]  793  386  126  907   86  450  998  781  288   930 #>  [868,]  604  843  165  555   65  206  902  127  677   784 #>  [869,]  971  601  461  876  678  214  498  757  603   332 #>  [870,]  740  644  130  975  492  959  486  622  404   540 #>  [871,]  250  622  722  452  492  834  376  798  740    30 #>  [872,]  320  960  141  980   97  718  688  297  683   118 #>  [873,]  290    3  862  280  586  773  709  778  313   756 #>  [874,]  265  419  665  557  571  106  969  836  211   849 #>  [875,]   29  898  220  447  756  577  586  280  901   685 #>  [876,]  971  757  561  678  461  869  338  655  214   154 #>  [877,]  553  506  851  833  529  757  389  655   60   962 #>  [878,]  352  552  224  191  631  172  735  341  964   401 #>  [879,]  299  435  441  789  489  648  839  244  179   866 #>  [880,]  603  710  701  692  258  549  691  559  534   601 #>  [881,]  786  782  280  768  787  756  675  447  999   190 #>  [882,]  992  392  804  385  855  717  471  238   21   264 #>  [883,]  865  199  511   43  266   80  989  168  285   281 #>  [884,]  743  733    7  247  789  803  785  775  397   537 #>  [885,]  842  866  688  112  478  141  444  872  648   941 #>  [886,]  426  357  153  181  887  695  273  559   74   706 #>  [887,]  692  886  559   60  702  711  426  739  235   389 #>  [888,]  950  800  229  687  350  114  759  434  496    18 #>  [889,]  993  105  567  799  383  359  274  525  732   810 #>  [890,]  268 1000  293  676  436   77   58   38  111   302 #>  [891,]  421  297  149  253  922  619  119  769  605   986 #>  [892,]  314  932  729  734  629   52  738  189  470    28 #>  [893,]  209  138  974  262  914   95  216  770  330   760 #>  [894,]  315  267  815  410  690  442  672  400  498   418 #>  [895,]  354  152  213  469  207  861  663  796  795    73 #>  [896,]  783  928  627  834  250  662   55  951  380    65 #>  [897,]  102  963  151  228  809  303  595  980  444    69 #>  [898,]  875   29  735  756  220  586  447  205  184   103 #>  [899,]  651  422   45   13  174  369   53   11  565   115 #>  [900,]  486    5  975  596  923  624  103  355  741   220 #>  [901,]  577   59  447  220  959  937  486    1  953   786 #>  [902,]  806   30   65  805  127  677  157  750  834   618 #>  [903,]  520  944  726  576  148  159  415  538  162   618 #>  [904,]  233   63  649  379  303  828  124  965  906   931 #>  [905,]  565  343  429  227  165  762   13  706  306   784 #>  [906,]  124  347  305  379  233  630  979  505  904   445 #>  [907,]  388  793  568  658  949  386   31  109  987   172 #>  [908,]  515  569  164  155  338  653  585  410  821   307 #>  [909,]  438  497  982  764  680  726  703  159  609   230 #>  [910,]  921  849   62  479  794  747  204  927   93   705 #>  [911,]  440  146   33  287  480  825  599  491  528   232 #>  [912,]  776  483  327  781  653  569  450  684  288   386 #>  [913,]  697  807  926  638   66   46  618  805  623   127 #>  [914,]  262   68  613  556  209  893  974  372  955   329 #>  [915,]  507  180  694  248  317  558  460  719  554   813 #>  [916,]  683  714  727  432  960  918  995  527  371   718 #>  [917,]  611  181  659  195   60  640  681  357   37   389 #>  [918,]  828  379  727  527  538  807  347  233  159   683 #>  [919,]  153  856  160  375  526  543  324  426  475   650 #>  [920,]    2  104  763  610  572  687  109  831  950    72 #>  [921,]  910  479  204  794  747  849  927   62  457   396 #>  [922,]  619  297  395  149  891   89  142  253  490   467 #>  [923,]  103  184  900  326  486  205  624  975  596   430 #>  [924,]  593  116  391   10  995  342  731   81  802   699 #>  [925,]  364  466  464  144  170  637  970   49  488    85 #>  [926,]  913  189  750  846  638  805  807   66  798   143 #>  [927,]  457  204  849  479  289  557  747  921  910   296 #>  [928,]  783  896  227  662  380  863  830   22  458   833 #>  [929,]  407  245  765  193  782  310  316  675  230   267 #>  [930,]  450  781  386  473  288  548  867   26  387   793 #>  [931,]   63  749  618  233  127  189  649  734  926   933 #>  [932,]  892  734   52   57  749  314  729  411  189   968 #>  [933,]   34  127  734  677  816  512  931  189  618   206 #>  [934,]  150  547   31  985  860  987  126  319   76   568 #>  [935,]  966  370  521  815  983  822  758  245  143   675 #>  [936,]  201  696  433   11  361  399   53  393  368   589 #>  [937,]  808   59  822  740  130   75  492  202  959   360 #>  [938,]  319  291  295  860   76  547  597  544  958   194 #>  [939,]  428  140  804  255  636  225  858  405  264    21 #>  [940,]  503    8  719   87  810  317  536  105  120   617 #>  [941,]  958   76  718  572  141  860  714  755  112   985 #>  [942,]  448  514   44  269  173  424  474  531  837   451 #>  [943,]  287  320   84  528  641  872  151  897  599   991 #>  [944,]  520  538  903  148  618  347  712  162  159   726 #>  [945,]  355  402  117  488   39  575  779  608  423   767 #>  [946,]  612  819  635  481  239  996  632  363   24   252 #>  [947,]  284  660  682  706  404  357  195  871  644     9 #>  [948,]  176  327   58  597  912  666  268  776  844   483 #>  [949,]  310  658  388  387  580  765  964  191  907   407 #>  [950,]  800  888  229  687  350  496   88  623   46   759 #>  [951,]  484  848  818  259  896  157  553  627  211    65 #>  [952,]  536  402  503  990  575  574  322  120  968   283 #>  [953,]   17  937   59  624  486  901  460  554  130   577 #>  [954,]  541  240  476  272  481  135  485  556  504   956 #>  [955,]  223  394  139  384  602  329  344   36  423   459 #>  [956,]  362  481  541  240  125  954  363  476  491   409 #>  [957,]  818  374  259  278   93  555  707  951  128   712 #>  [958,]  941  718   76  572  860  755  141  714  985   547 #>  [959,]  644  740  786   59  577  808  870  501  901   404 #>  [960,]  683  916  872  718  714  918  995   97  755   727 #>  [961,]  366  968  767  257  203   61  540   40  589   283 #>  [962,]   79  510  705  328  833   16  187  553  506   670 #>  [963,]  102  228  897  980  303  241  809  965   67   595 #>  [964,]  580  735  191  387  388  639  949  224  878   413 #>  [965,]  828  303  118  980  904  228  527  918   67   304 #>  [966,]  935  521  360  370  822  815  202  808  758   281 #>  [967,]  779   61  767  117  257  814  589  945   39   961 #>  [968,]  283   89  490  961   52  366  322  749  257   263 #>  [969,]  759  707  566  761  101  265  177  353  259   229 #>  [970,]   23  598  364  488  839  170  489  562  466   402 #>  [971,]  876  869  678  757  601  461  338  498  214   217 #>  [972,]  996  237  612  946  481  480  362  363   12   504 #>  [973,]  702  739  258  795  887  534  711  559  692   579 #>  [974,]  613  770  431  472  311  600  893  262  914    45 #>  [975,]  486  741  596    5  900  870  430  540  423   355 #>  [976,]  437  578  581  531   78  748  323   44  173   474 #>  [977,]  610  846  119  573  638  807   72   27  926   346 #>  [978,]  194  286  358  291  295  491  599  363  478   938 #>  [979,]  305  647  505  811  162  630  445  671  906   124 #>  [980,]  241   67  118  688  965  963  303  141  872   102 #>  [981,]  218  275  533   49  594  120  123   47   96    70 #>  [982,]  230  909  764  438  497  680  522  178  768   576 #>  [983,]   92  133  370  698   75  822  143  935  808   669 #>  [984,]  566  699  707  325  969  391  802  210  107   761 #>  [985,]   31  547  934  150  797  495   76  831  987   860 #>  [986,]  253   32  139  467  441  384  891  495  395   223 #>  [987,]  485  495   31  797  985  620  150  568  907   831 #>  [988,]  820  523  111  748  850  434  114  737   18   836 #>  [989,]   80   28  883   43  567  738  339  199  511   314 #>  [990,]  536  411    8  952  120  156  221  574  326   503 #>  [991,]   84  287  340  169  630  445  599  979  282   647 #>  [992,]  392  246   21  858  882  377  804  304  104   292 #>  [993,]  810  105  567  889  940  642   20  799  274   279 #>  [994,]  934  295  126  319  150  998  547  867  358   125 #>  [995,]  116  593  432  924   81  538  916  960  683   353 #>  [996,]  237  307  946   12  972  730  632  252  859   745 #>  [997,]  235  389  851  529   60   22  711  217  662   506 #>  [998,]  867  987  126  620  508  443  994  172  401   150 #>  [999,]  522  768  256  752  835  178  182  764  626   459 #> [1000,]  225  820  676  436  988  111  268  748  523   890 #>  #> $neighbor_distances #>              [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7] #>    [1,] 0.7211893 0.7364018 0.7712915 0.7833858 0.7884341 0.8230428 0.8459388 #>    [2,] 0.3448090 0.5002484 0.5107108 0.5116951 0.5517540 0.5905843 0.6164810 #>    [3,] 0.3988677 0.4449200 0.4490517 0.5688348 0.5834893 0.6410829 0.6992235 #>    [4,] 0.3305259 0.4624230 0.5367948 0.5799635 0.5951459 0.6737527 0.7085528 #>    [5,] 0.4051795 0.4227972 0.4497573 0.4724190 0.5055339 0.5171973 0.5274997 #>    [6,] 0.7439927 1.0912293 1.1133547 1.1207950 1.3715281 1.4109436 1.4451977 #>    [7,] 0.3252701 0.6997113 0.7680293 0.9398283 0.9834721 1.0380672 1.0506195 #>    [8,] 0.3407237 0.3961926 0.4516073 0.4871296 0.4977942 0.5684153 0.5754504 #>    [9,] 0.4068428 0.4203433 0.4343659 0.5081513 0.5606973 0.6667942 0.6732148 #>   [10,] 0.5307958 0.6968093 0.8034032 0.8369000 0.8423765 0.8626251 0.8632777 #>   [11,] 0.5455471 0.5993602 0.6080891 0.6111440 0.6243484 0.6817752 0.7091900 #>   [12,] 0.6708268 0.7562356 0.7714244 0.9206716 0.9657497 1.2014860 1.2177184 #>   [13,] 0.3199740 0.3572030 0.3743867 0.5311484 0.5351940 0.5847711 0.5977760 #>   [14,] 0.2035635 0.3606939 0.4328603 0.4601836 0.4873584 0.5265610 0.5575818 #>   [15,] 0.5652968 0.6476948 0.7345896 0.7933588 0.8798337 0.8991375 0.9419744 #>   [16,] 0.5385619 0.5478450 0.5846316 0.5986218 0.6885430 0.7341139 0.7774798 #>   [17,] 0.3696577 0.4875603 0.5325637 0.5340132 0.5883293 0.7439454 0.7502123 #>   [18,] 0.4856875 0.5006729 0.6172652 0.6200722 0.7076111 0.7077400 0.7254308 #>   [19,] 0.3643236 0.3696736 0.4466877 0.5170223 0.6180576 0.6238388 0.6241481 #>   [20,] 0.3147878 0.3807684 0.4755307 0.5385587 0.5477634 0.7144088 0.7178037 #>   [21,] 0.4336252 0.5946175 0.6413160 0.6856888 0.6988748 0.7000241 0.7021173 #>   [22,] 0.4204726 0.5159351 0.5553054 0.5578005 0.5587520 0.5686191 0.5720624 #>   [23,] 0.3775477 0.4661317 0.7106713 0.7309662 0.7724758 0.8018148 0.8095879 #>   [24,] 0.3450631 0.3696736 0.3964651 0.4731726 0.4961768 0.5062485 0.5727911 #>   [25,] 0.1529320 0.4930414 0.7643381 0.8130616 0.8830522 0.8831188 0.9162792 #>   [26,] 0.5997107 0.6629175 0.7151085 0.7753734 0.8675150 0.8766107 0.9138712 #>   [27,] 0.2571824 0.4861438 0.4965839 0.5210382 0.5340748 0.5540142 0.6775636 #>   [28,] 0.4526260 0.4842592 0.5213794 0.5618533 0.6329138 0.6420831 0.6677879 #>   [29,] 0.1890204 0.3738955 0.5754190 0.6583335 0.7263875 0.7493712 0.7714353 #>   [30,] 0.2406235 0.3200962 0.3623860 0.3780466 0.4260120 0.4472523 0.4601276 #>   [31,] 0.3711911 0.3860576 0.4299912 0.5928799 0.5964595 0.5980987 0.6125511 #>   [32,] 0.2343165 0.2406586 0.3259043 0.4198720 0.5678584 0.5976007 0.6276251 #>   [33,] 0.8531273 1.2612892 1.3513628 1.4441595 1.5320406 1.5445515 1.6522687 #>   [34,] 0.3597897 0.3630545 0.4057138 0.4864498 0.4898987 0.5058042 0.5431295 #>   [35,] 0.4214539 0.4892549 0.5732936 0.6749101 0.7166278 0.7692174 0.7868898 #>   [36,] 0.3134486 0.3427811 0.3570360 0.4115055 0.4170641 0.4594776 0.4691113 #>   [37,] 0.2372597 0.4999196 0.5771549 0.6810173 0.7319571 0.7429359 0.7618507 #>   [38,] 0.8137731 0.9119799 0.9647050 0.9727140 0.9877862 1.0041850 1.0611710 #>   [39,] 0.3559426 0.3904650 0.5498846 0.5544904 0.5619871 0.5654988 0.5749297 #>   [40,] 0.3562934 0.3600981 0.5340130 0.5876636 0.5980761 0.6037095 0.6106409 #>   [41,] 0.1529320 0.5105492 0.7212657 0.8416160 0.8753277 0.9170153 0.9359285 #>   [42,] 0.2843077 0.4404463 0.5439251 0.6411021 0.6532362 0.7035318 0.7152320 #>   [43,] 0.3251968 0.4218561 0.5609459 0.6064313 0.7721247 0.8198370 0.8284968 #>   [44,] 0.3621493 0.4954583 0.6502702 0.7670224 0.7766439 0.8228790 0.8836774 #>   [45,] 0.5832637 0.6103750 0.6106181 0.6204110 0.6228135 0.6423559 0.6429579 #>   [46,] 0.3145800 0.3946862 0.4663938 0.5105719 0.5288551 0.5379425 0.5437147 #>   [47,] 0.4322276 0.4975862 0.5495815 0.5944931 0.6162373 0.6280594 0.6388574 #>   [48,] 0.5513619 0.5517230 0.5823109 0.5861725 0.5988874 0.6770384 0.6783000 #>   [49,] 0.6119093 0.7303249 0.7533807 0.7567118 0.9632580 1.0301532 1.0315365 #>   [50,] 0.2829339 0.4376444 0.4587560 0.4946310 0.5244970 0.5578005 0.6139110 #>   [51,] 1.0614598 1.1320966 1.1464305 1.1621787 1.2049571 1.2512127 1.2578259 #>   [52,] 0.4702127 0.5022613 0.5413598 0.5582075 0.5816616 0.5834543 0.6122613 #>   [53,] 0.1320224 0.3743867 0.3926418 0.5551863 0.5594627 0.5688047 0.6111440 #>   [54,] 0.5640391 0.6703204 0.8270865 0.8421122 1.0858520 1.0979286 1.1247291 #>   [55,] 0.3924172 0.4824103 0.4837333 0.5553776 0.5774661 0.6004787 0.6009045 #>   [56,] 0.8969483 0.9158585 0.9826326 0.9898642 1.0037908 1.0181553 1.0595409 #>   [57,] 0.4928879 0.5170905 0.6025670 0.6213069 0.6580186 0.6889408 0.7007978 #>   [58,] 0.6932381 0.7961056 0.8799675 0.9088661 1.1042188 1.2313408 1.2397633 #>   [59,] 0.3289579 0.4407905 0.4731326 0.4834607 0.5104774 0.5242692 0.5457220 #>   [60,] 0.1971400 0.4621882 0.4756386 0.5347380 0.6654551 0.6820729 0.7136437 #>   [61,] 0.3757628 0.4491463 0.5066925 0.5397154 0.6222813 0.6566852 0.6910996 #>   [62,] 0.8031375 0.8183763 0.9151247 1.0019375 1.0039473 1.0198319 1.0728674 #>   [63,] 0.2455228 0.3454152 0.3493363 0.3609024 0.4210615 0.5003120 0.5803641 #>   [64,] 0.3926473 0.5565539 0.6182040 0.6223950 0.6350249 0.6632179 0.6657870 #>   [65,] 0.3366595 0.3391813 0.3973984 0.4669336 0.4923358 0.4965401 0.5168478 #>   [66,] 0.3210113 0.3946862 0.4502617 0.4554660 0.4595119 0.5049563 0.5148610 #>   [67,] 0.2316290 0.3606955 0.4072586 0.4113990 0.5847943 0.6575381 0.7160632 #>   [68,] 0.3146153 0.4902834 0.5587173 0.6151386 0.6338754 0.6344158 0.7745629 #>   [69,] 0.6454162 0.6625217 0.6741550 0.7495193 0.7707023 0.7905384 0.8151474 #>   [70,] 0.5363192 0.6366803 0.6382944 0.6499500 0.6587827 0.6592110 0.7179524 #>   [71,] 0.2306866 0.4905033 0.5560344 0.5628470 0.6377851 0.6476736 0.6789094 #>   [72,] 0.4585512 0.5210382 0.5251696 0.5383376 0.5425859 0.5559668 0.5624422 #>   [73,] 0.3137172 0.6675054 0.7774635 0.7899188 0.8167900 0.8192657 0.8332613 #>   [74,] 0.1563262 0.3227138 0.6188296 0.6772701 0.7468328 0.7557746 0.7778064 #>   [75,] 0.4268879 0.4308106 0.4632449 0.4658134 0.4731326 0.4738735 0.4948389 #>   [76,] 0.3235746 0.3776683 0.3893715 0.5385163 0.5510738 0.6330154 0.7307120 #>   [77,] 0.3883937 0.5232098 0.5895628 0.7076111 0.7586742 0.8323838 0.8813880 #>   [78,] 0.3294108 0.4073341 0.4174339 0.4656767 0.4943809 0.5975860 0.5992848 #>   [79,] 0.5478450 0.5697676 0.6178544 0.6372911 0.6416048 0.8001803 0.8233426 #>   [80,] 0.7711025 0.8064338 0.8167957 0.8685804 0.8763911 0.8789494 0.9915248 #>   [81,] 0.4439437 0.5822762 0.5945617 0.6584961 0.6603320 0.6819508 0.7114613 #>   [82,] 0.3874518 0.4482449 0.4631942 0.5711612 0.5764014 0.5834893 0.5945450 #>   [83,] 0.6400568 1.2505634 1.3433872 1.4603544 1.5899165 1.6067328 1.6089767 #>   [84,] 0.5315622 0.5460991 0.5484914 0.6116102 0.6979302 0.8133667 0.8437979 #>   [85,] 0.4360883 0.5670835 0.6507047 0.7294774 0.7432751 0.7533807 0.7963357 #>   [86,] 0.5982215 0.6962405 0.7247818 0.7347211 0.7441829 0.8887571 0.9499716 #>   [87,] 0.3807684 0.3961926 0.4684348 0.5285471 0.5921408 0.6062475 0.6144839 #>   [88,] 0.4696645 0.4799850 0.5021292 0.5265487 0.5379583 0.5592956 0.5718666 #>   [89,] 0.1335520 0.3430401 0.4012907 0.4317482 0.4410895 0.4907196 0.5266748 #>   [90,] 0.8750907 0.8999436 0.9595258 0.9697567 1.0149458 1.0327443 1.0611604 #>   [91,] 0.6821746 0.7462996 0.8775726 0.8988903 0.9661202 0.9779741 1.0157880 #>   [92,] 0.3023156 0.3212052 0.3715057 0.3746293 0.4608742 0.4675778 0.5412432 #>   [93,] 0.4805085 0.6605861 0.7281251 0.8680793 0.9452586 0.9546622 1.0039473 #>   [94,] 0.3359267 0.5367948 0.5420836 0.5950626 0.5989855 0.6354489 0.6385945 #>   [95,] 0.4412579 0.5196746 0.5248463 0.5248774 0.6855182 0.6880636 0.7109213 #>   [96,] 0.3935150 0.4300750 0.4622099 0.4975862 0.5552337 0.5792861 0.6088553 #>   [97,] 0.3958461 0.5702810 0.5900833 0.6259001 0.6884351 0.6966819 0.7003449 #>   [98,] 0.3294108 0.4023114 0.4075914 0.4139769 0.4327606 0.4495376 0.4534335 #>   [99,] 0.4822183 0.5955284 0.6234164 0.6623269 0.6850373 0.7461749 0.8230205 #>  [100,] 0.3076231 0.3168135 0.4174816 0.5988906 0.6975949 0.7583114 0.7591187 #>  [101,] 0.2974618 0.5055018 0.5056916 0.5099074 0.5204985 0.5246052 0.5603743 #>  [102,] 0.1966930 0.3118342 0.6091665 0.7063200 0.7181754 0.7410959 0.7547250 #>  [103,] 0.3283662 0.4886063 0.5046741 0.5451528 0.5630849 0.5855572 0.5878495 #>  [104,] 0.5081972 0.5544807 0.5721579 0.5909729 0.6170933 0.6435451 0.6928172 #>  [105,] 0.2914010 0.6116583 0.6640577 0.7222987 0.7534231 0.7982277 0.8377346 #>  [106,] 0.5321604 0.5726450 0.5986218 0.6645013 0.6858426 0.7193108 0.7570850 #>  [107,] 0.4522191 0.4666539 0.5288194 0.6165769 0.6467473 0.6499212 0.6956952 #>  [108,] 0.4835486 0.5538210 0.5768880 0.5977433 0.6496992 0.6627472 0.6822642 #>  [109,] 0.5244551 0.5277545 0.5403953 0.6223933 0.6625369 0.6739336 0.6746215 #>  [110,] 0.4579747 0.4760933 0.4781197 0.5052216 0.5177305 0.5653199 0.5962536 #>  [111,] 0.5895628 0.7934966 0.8259913 0.8438107 0.8637595 0.8774023 0.8857514 #>  [112,] 0.7614096 0.7992525 0.8482104 0.9626302 0.9647050 1.0191250 1.0285030 #>  [113,] 0.2331499 0.3821858 0.4660301 0.5221236 0.5565904 0.5792327 0.5967257 #>  [114,] 0.4129854 0.4755009 0.4856875 0.5267006 0.5403935 0.5424065 0.6115637 #>  [115,] 0.1320224 0.3572030 0.4078788 0.5865575 0.5884958 0.6399320 0.6623936 #>  [116,] 0.2046389 0.5186734 0.5422511 0.6637852 0.6819508 0.7323097 0.7328748 #>  [117,] 0.2290925 0.3559426 0.4791082 0.4912917 0.5029175 0.5079194 0.5225348 #>  [118,] 0.2316290 0.4637851 0.5061580 0.5172207 0.5244205 0.5439594 0.6672861 #>  [119,] 0.3211625 0.3895661 0.4613849 0.4735947 0.4884832 0.5248484 0.5340748 #>  [120,] 0.3290943 0.4175940 0.4243306 0.4516073 0.5130897 0.5556157 0.5866964 #>  [121,] 1.2724057 1.5202342 1.5679632 1.9597015 1.9928257 2.0918506 2.1264192 #>  [122,] 0.4567502 0.4934448 0.5263739 0.5624422 0.6222618 0.6655567 0.6961450 #>  [123,] 0.4455296 0.5708950 0.6819533 0.7076425 0.7432751 0.7567118 0.7709318 #>  [124,] 0.2479615 0.2767839 0.3534468 0.3538310 0.4147750 0.4615858 0.5027847 #>  [125,] 0.5522974 0.6233895 0.7352251 0.8152349 0.8325687 0.8494978 0.8568766 #>  [126,] 0.5831094 0.5990690 0.6130702 0.6798744 0.6941925 0.7347211 0.7396999 #>  [127,] 0.3143889 0.3208283 0.3623860 0.3633398 0.3717799 0.4057154 0.4408371 #>  [128,] 0.5452476 0.7281251 0.7495312 0.9631346 1.0208867 1.1677998 1.1855414 #>  [129,] 0.5777528 0.7151085 0.7681833 0.7868281 0.8011428 0.8130874 0.8176718 #>  [130,] 0.3164230 0.3870014 0.4500602 0.5162091 0.5212923 0.5373064 0.5580886 #>  [131,] 0.8393017 0.9079794 0.9304482 0.9410327 0.9677292 0.9916877 1.0092189 #>  [132,] 0.1958560 0.4761228 0.4827837 0.4843613 0.5410602 0.5470326 0.5786185 #>  [133,] 0.3023156 0.3670383 0.3951859 0.4681989 0.5290280 0.5335267 0.5384560 #>  [134,] 0.5666000 0.5889975 0.6031922 0.6086245 0.6124517 0.6149668 0.6511028 #>  [135,] 0.2475771 0.3817292 0.3964651 0.4297924 0.5533607 0.5583721 0.6276344 #>  [136,] 0.5766530 0.6996683 0.7579080 0.7695793 0.7791209 0.8175333 0.8348537 #>  [137,] 0.6644449 0.6987704 0.7221686 0.7584043 0.7890376 0.8437582 0.8726290 #>  [138,] 0.5248774 0.5940836 0.6112777 0.7655108 0.7787257 0.7828015 0.8139949 #>  [139,] 0.1167473 0.2418802 0.3509141 0.4102852 0.4573580 0.4664739 0.4989984 #>  [140,] 0.9026368 1.0346923 1.0396962 1.1020876 1.1024658 1.1473814 1.1498606 #>  [141,] 0.5061580 0.5473548 0.5479214 0.5847943 0.6261423 0.6325670 0.6441954 #>  [142,] 0.4867318 0.4924958 0.4961453 0.5153672 0.5240588 0.5366362 0.5495321 #>  [143,] 0.2910956 0.3215793 0.3715057 0.3766900 0.4721276 0.4725159 0.5037140 #>  [144,] 0.3627877 0.9319512 0.9957900 1.1033519 1.1069051 1.1546042 1.2008756 #>  [145,] 0.2945343 0.3351453 0.3812883 0.4297924 0.4761228 0.4814943 0.5062485 #>  [146,] 0.6400568 1.2513666 1.2686053 1.3039320 1.3434137 1.3519872 1.3732433 #>  [147,] 0.4555722 0.4731371 0.5613358 0.5938394 0.6685365 0.6759270 0.7534205 #>  [148,] 0.4185552 0.4574139 0.4838092 0.5535473 0.5544279 0.6123553 0.6165769 #>  [149,] 0.3452650 0.3895661 0.4042186 0.4163012 0.4542733 0.4867318 0.5240209 #>  [150,] 0.3860576 0.4109611 0.5068675 0.6130702 0.6301964 0.6565911 0.6752086 #>  [151,] 0.4404463 0.6268704 0.6616755 0.7495193 0.7636163 0.8164740 0.8281957 #>  [152,] 0.8448204 1.0055289 1.0155979 1.0180039 1.0640466 1.0677334 1.1462922 #>  [153,] 0.4548389 0.4767420 0.6390353 0.7470161 0.7569296 0.7668428 0.7927077 #>  [154,] 0.5535697 0.7152707 0.7157893 0.7778896 0.9855649 0.9872481 0.9970225 #>  [155,] 0.5637888 0.6825264 0.6910151 0.7033412 0.7382539 0.8082349 0.8953618 #>  [156,] 0.1653397 0.3549502 0.5094120 0.5250834 0.5754504 0.5858429 0.6499500 #>  [157,] 0.3391813 0.3644436 0.3774071 0.4175518 0.4508977 0.4728238 0.5246052 #>  [158,] 0.1720647 0.7001889 0.7431848 0.7625477 0.8461163 0.8645611 0.8671583 #>  [159,] 0.3249547 0.4686568 0.4986448 0.5115859 0.5136548 0.5350618 0.5355268 #>  [160,] 0.3714422 0.4414344 0.5186642 0.6229602 0.6365494 0.6932308 0.6937195 #>  [161,] 0.5963233 0.5988906 0.6089335 0.8136613 0.8628087 0.8762362 0.8836023 #>  [162,] 0.3039197 0.3639017 0.3756370 0.3855502 0.4294882 0.4416783 0.4903882 #>  [163,] 0.3941056 0.4895727 0.5288194 0.5369062 0.5544279 0.5593639 0.6396782 #>  [164,] 0.5428742 0.5719625 0.5967257 0.6623171 0.6671219 0.6910151 0.7195084 #>  [165,] 0.3259238 0.4379155 0.5137098 0.5664207 0.6685365 0.6846626 0.7223246 #>  [166,] 1.2505634 1.2513666 1.3997901 1.4979649 1.8699604 1.9050553 1.9332233 #>  [167,] 0.5524883 0.5623832 0.6184365 0.6491318 0.6513015 0.7013218 0.7022425 #>  [168,] 0.3443710 0.4661259 0.4853484 0.5268177 0.5692018 0.5715363 0.5825579 #>  [169,] 0.3592324 0.4180365 0.5484914 0.5776902 0.5945617 0.6084198 0.6395175 #>  [170,] 0.7962129 0.8095879 0.8868467 0.9324690 0.9515224 0.9541169 1.0677568 #>  [171,] 0.4330619 0.7166278 0.8070246 0.8300585 0.8750907 0.8771297 0.9530061 #>  [172,] 0.4266838 0.4356179 0.5244551 0.5606218 0.6339029 0.6963003 0.7006895 #>  [173,] 0.5807621 0.6335485 0.7000725 0.7385076 0.7531071 0.7766439 0.7945422 #>  [174,] 0.2159943 0.6411859 0.6704393 0.7001889 0.7116302 0.7227584 0.7597297 #>  [175,] 0.2035635 0.3911103 0.4495898 0.4622581 0.4814463 0.5373064 0.5432840 #>  [176,] 0.6708268 0.7030908 0.8176158 0.9447962 1.1168328 1.1706646 1.2704710 #>  [177,] 0.3961389 0.4318685 0.4829311 0.5076045 0.5302313 0.5888236 0.5972203 #>  [178,] 0.3552445 0.3643236 0.3812883 0.4961768 0.5142369 0.5200349 0.5410602 #>  [179,] 0.1972097 0.3487987 0.4137035 0.4439753 0.5107433 0.5733027 0.6416882 #>  [180,] 0.8549530 1.0060769 1.0813686 1.0906800 1.1256084 1.1388342 1.1436444 #>  [181,] 0.5346464 0.6858692 0.7041127 0.7777964 0.8201381 0.8490147 0.8740226 #>  [182,] 0.1430510 0.2589159 0.3134486 0.3316793 0.4628692 0.4751421 0.4923841 #>  [183,] 0.5273060 0.6234164 0.6323915 0.7522248 0.9284843 0.9730456 0.9929627 #>  [184,] 0.4681989 0.5046741 0.5060121 0.5113486 0.5127957 0.5513263 0.5525529 #>  [185,] 0.2220229 0.4019821 0.5447359 0.6002979 0.6479672 0.6928133 0.7312470 #>  [186,] 0.8300419 1.0922941 1.1667144 1.2155923 1.2227670 1.2405430 1.2514276 #>  [187,] 0.6293418 0.7209430 0.7668148 0.8416314 0.8430103 0.8524514 0.8798337 #>  [188,] 0.6330017 0.6445822 0.6675054 0.7266422 0.7799441 0.9125994 0.9204855 #>  [189,] 0.3807694 0.3882882 0.4260120 0.4446538 0.4542505 0.4730598 0.5148610 #>  [190,] 0.2835264 0.3695051 0.4628692 0.4758197 0.4910418 0.5253193 0.5404431 #>  [191,] 0.4266838 0.4561060 0.4610033 0.4645724 0.4903167 0.5507258 0.5573242 #>  [192,] 0.3288662 0.3562934 0.4723697 0.5456795 0.5493606 0.5836809 0.6088049 #>  [193,] 0.2957806 0.2996900 0.4864090 0.4932866 0.5479582 0.5863033 0.6274558 #>  [194,] 0.4078494 0.6676724 0.8668629 0.8918600 0.9123621 0.9980781 1.0624628 #>  [195,] 0.4645889 0.5199133 0.5396612 0.5462093 0.5613727 0.6119592 0.6261648 #>  [196,] 0.4158074 0.4254048 0.5181290 0.5728045 0.6181989 0.7267974 0.7279864 #>  [197,] 0.4116656 0.6499212 0.7126234 0.7202357 0.7489593 0.7599053 0.7602489 #>  [198,] 0.8512975 0.9621267 1.0210357 1.0534183 1.0671225 1.0694023 1.1863618 #>  [199,] 0.3251968 0.5138855 0.6150027 0.6319607 0.7234238 0.7253013 0.7391648 #>  [200,] 0.4330619 0.4982438 0.5792861 0.6388574 0.7607982 0.7751761 0.7868898 #>  [201,] 0.2437867 0.4784119 0.6039175 0.7091900 0.8267823 0.9073028 0.9082626 #>  [202,] 0.1695456 0.3896588 0.4703859 0.4992716 0.5106418 0.5223903 0.5692018 #>  [203,] 0.4851934 0.4938455 0.5380140 0.6044390 0.6103766 0.6336513 0.6354489 #>  [204,] 0.2373751 0.4948279 0.5812444 0.6689963 0.6790719 0.7931566 0.8772592 #>  [205,] 0.4886063 0.6135255 0.6726877 0.7258541 0.7367310 0.7709318 0.7769136 #>  [206,] 0.3528182 0.3539857 0.4555722 0.4933284 0.5137098 0.5255208 0.5873717 #>  [207,] 0.4321721 0.5817484 0.6064313 0.6150027 0.8576299 0.8974950 0.9423641 #>  [208,] 0.7037803 0.7090331 0.7296822 0.7531071 0.7578336 0.7732280 0.8227134 #>  [209,] 0.3815934 0.4950529 0.5196746 0.5256925 0.5900533 0.6401829 0.6476640 #>  [210,] 0.3932888 0.5120519 0.5276785 0.6001514 0.6195510 0.6301442 0.7389188 #>  [211,] 0.3644436 0.4852257 0.5996634 0.6038722 0.6130995 0.6311017 0.6403498 #>  [212,] 0.4254048 0.5859505 0.6074467 0.6197529 0.6476948 0.7025047 0.7082061 #>  [213,] 1.0155979 1.0374834 1.0935721 1.2663500 1.2829678 1.2928980 1.2963112 #>  [214,] 0.7152707 0.7712915 0.8117181 0.8496729 0.8834051 0.8922345 0.8965011 #>  [215,] 0.4651375 0.4720412 0.5523455 0.6363446 0.7084511 0.7778896 0.8001387 #>  [216,] 0.4610170 0.5306052 0.6049058 0.6095096 0.6229602 0.6338754 0.6476640 #>  [217,] 0.3726977 0.4376444 0.4782089 0.5567710 0.6044769 0.6187588 0.6470490 #>  [218,] 0.5096697 0.6162373 0.6476816 0.6899662 0.6997113 0.7214474 0.7671760 #>  [219,] 0.3822680 0.3906673 0.4278262 0.4739121 0.4842084 0.5316410 0.5363192 #>  [220,] 0.3320370 0.4319075 0.5263895 0.5275167 0.5547772 0.5754190 0.5934861 #>  [221,] 0.2728690 0.3476522 0.4661230 0.4831816 0.5239324 0.5483853 0.5616552 #>  [222,] 0.3486028 0.3727976 0.4483583 0.4542505 0.4853484 0.4942353 0.5168868 #>  [223,] 0.2418802 0.2894963 0.3010307 0.3579669 0.4010153 0.4477273 0.4856380 #>  [224,] 0.5018750 0.5118614 0.5214182 0.5454137 0.6410829 0.6543626 0.7037803 #>  [225,] 0.8560176 1.3502925 1.3932010 1.7194475 1.7677375 1.8440440 1.8451252 #>  [226,] 0.8531273 0.9450400 1.0092760 1.0097355 1.0163951 1.2058686 1.2188962 #>  [227,] 0.3641254 0.4290731 0.4860047 0.4953667 0.5433286 0.5546491 0.5575818 #>  [228,] 0.3705849 0.4920762 0.5223192 0.5380347 0.6091665 0.6303685 0.7007978 #>  [229,] 0.2557423 0.2735716 0.3571911 0.4364131 0.4808560 0.4878440 0.4946442 #>  [230,] 0.3037569 0.4618981 0.4628253 0.5099074 0.5366333 0.5509211 0.5574918 #>  [231,] 1.1703617 1.1969147 1.2060192 1.2795302 1.3574095 1.3687012 1.3964316 #>  [232,] 0.5175776 0.6050855 0.6544893 0.7082038 0.8061412 0.8257414 0.8289651 #>  [233,] 0.2541808 0.2921561 0.3538310 0.3609024 0.3927027 0.4099719 0.4951777 #>  [234,] 1.0703635 1.2522008 1.3202723 1.3276759 1.3560142 1.3658443 1.4092463 #>  [235,] 0.2749012 0.4813132 0.5819963 0.5965561 0.6539321 0.6654551 0.7011768 #>  [236,] 0.6365494 0.6387037 0.6942022 0.7059257 0.7200820 0.7801783 0.7895660 #>  [237,] 0.7547801 1.0136113 1.0293496 1.0310730 1.0991421 1.1411212 1.1418949 #>  [238,] 0.7760800 1.0149458 1.0162807 1.0514722 1.1807903 1.2493381 1.2630579 #>  [239,] 0.7137218 0.8540221 0.8635794 0.8658784 0.8824579 0.8924876 0.9327772 #>  [240,] 0.6720747 0.6868414 0.8621363 0.9073886 0.9576232 0.9756645 0.9933986 #>  [241,] 0.3318576 0.4072586 0.4977241 0.5244205 0.6870389 0.7087091 0.7239502 #>  [242,] 0.5964303 0.7263875 0.7345973 0.7604859 0.8379689 0.9574344 0.9797714 #>  [243,] 0.7290339 1.1230609 1.1334995 1.2950909 1.3245396 1.3629284 1.5476155 #>  [244,] 0.6239314 0.6374031 0.7359546 0.8051307 0.9036851 0.9208421 0.9575774 #>  [245,] 0.3440669 0.4318685 0.4376545 0.4814036 0.5183166 0.5520627 0.5862509 #>  [246,] 0.5930722 0.6566037 0.6724619 0.6900101 0.6943824 0.7160632 0.7242327 #>  [247,] 0.8128535 0.8128673 0.9834721 1.1426772 1.1450126 1.1521486 1.1669374 #>  [248,] 0.8407785 0.9295140 0.9436752 0.9533892 0.9757344 1.0092212 1.0790489 #>  [249,] 0.4174816 0.4246512 0.4770976 0.6473916 0.7557691 0.8628087 0.8762708 #>  [250,] 0.2475709 0.3880339 0.4273011 0.4437738 0.4782221 0.4864788 0.5085348 #>  [251,] 0.6063486 0.7174191 0.7554598 0.7871541 0.7906224 0.8007397 0.8300419 #>  [252,] 0.1985852 0.7120415 0.7523828 0.7613403 0.7687062 0.7791209 0.8457602 #>  [253,] 0.2406586 0.2719022 0.3068994 0.4136068 0.4665666 0.4989984 0.5012179 #>  [254,] 0.4178031 0.4930414 0.5105492 0.6374031 0.9094067 1.0356628 1.0662302 #>  [255,] 1.0420981 1.0611604 1.1674024 1.1815078 1.2671510 1.3117324 1.3820840 #>  [256,] 0.2551735 0.2589159 0.3239348 0.3394326 0.3427811 0.3762088 0.3818433 #>  [257,] 0.3757628 0.4533020 0.4639304 0.5079194 0.5400745 0.5414529 0.5715610 #>  [258,] 0.7579934 0.8256684 0.9307553 0.9530181 0.9742742 1.0502230 1.0726987 #>  [259,] 0.4175518 0.4387940 0.5121358 0.5162028 0.5612416 0.5927121 0.6000559 #>  [260,] 1.6265946 1.7960730 1.9347932 1.9465785 1.9541171 1.9555026 2.1079182 #>  [261,] 0.3958461 0.5051814 0.6157625 0.6539718 0.6640513 0.6641880 0.7027347 #>  [262,] 0.2517737 0.3146153 0.5095629 0.6756450 0.6863225 0.6950494 0.7056564 #>  [263,] 0.2728690 0.3430401 0.4024178 0.4264723 0.4399712 0.4571746 0.4618842 #>  [264,] 0.3602085 0.4224327 0.4487336 0.4870221 0.4933824 0.5965260 0.6469981 #>  [265,] 0.3788916 0.4940797 0.6744512 0.7570850 0.7573388 0.7590572 0.7876664 #>  [266,] 0.4105656 0.4872125 0.5059654 0.5264038 0.5299595 0.6103840 0.6466030 #>  [267,] 0.5106446 0.5172681 0.5520627 0.5549661 0.5719625 0.5738034 0.5983709 #>  [268,] 0.6448789 0.7961056 0.8774023 0.9580779 0.9634055 1.0652602 1.0964036 #>  [269,] 0.7921124 0.9326582 0.9365784 0.9853683 1.0786564 1.2646089 1.4047157 #>  [270,] 0.1695456 0.4311123 0.5159351 0.6009980 0.6128906 0.6360550 0.6712527 #>  [271,] 0.7435540 0.9940683 1.0092760 1.0662704 1.0823775 1.1350500 1.1448354 #>  [272,] 0.3333481 0.4631942 0.4725882 0.6364366 0.6496992 0.7026428 0.7107963 #>  [273,] 0.3227138 0.3993269 0.5186642 0.5530363 0.6095096 0.8047206 0.8061055 #>  [274,] 0.3952175 0.6341304 0.6835369 0.6933274 0.7420372 0.8778856 0.9510837 #>  [275,] 0.1801754 0.6088553 0.6474703 0.6475676 0.6485012 0.6819533 0.6885498 #>  [276,] 0.1783147 0.3968199 0.5668975 0.5732936 0.7280111 0.7298637 0.7580706 #>  [277,] 0.2220229 0.3731690 0.5577432 0.6698102 0.6740312 0.6794652 0.6913815 #>  [278,] 0.4439437 0.6225686 0.6371498 0.6701002 0.7580724 0.7618281 0.8294415 #>  [279,] 0.3147878 0.3986255 0.4684348 0.5170905 0.5243236 0.5673635 0.6232929 #>  [280,] 0.3545104 0.4287212 0.5000480 0.5253193 0.5637652 0.5848665 0.6668319 #>  [281,] 0.4457365 0.5196651 0.5468104 0.5526906 0.5528111 0.5709542 0.6213366 #>  [282,] 0.7696708 0.9586735 1.0682838 1.0818743 1.1230609 1.2286259 1.4267151 #>  [283,] 0.2895413 0.4000708 0.4317482 0.5557697 0.6000272 0.6131985 0.6182040 #>  [284,] 0.2835673 0.3355059 0.4318238 0.4919889 0.5311484 0.5421922 0.5606973 #>  [285,] 0.4146693 0.4284365 0.4327606 0.4388169 0.4437538 0.5247262 0.5383150 #>  [286,] 0.7299069 0.8918600 1.0702224 1.0980029 1.1334995 1.1945992 1.2053367 #>  [287,] 0.5723115 0.6081072 0.6660422 0.6770374 0.6979302 0.7598727 0.8024443 #>  [288,] 0.5232098 0.5432475 0.5662883 0.5982215 0.6259270 0.6323540 0.7366390 #>  [289,] 0.5103810 0.7504032 0.8945654 0.9988059 1.0372699 1.0910886 1.1052830 #>  [290,] 0.3878356 0.4490517 0.6657525 0.7462565 0.7470707 0.7543425 0.8718832 #>  [291,] 0.6060839 0.6146587 0.6573923 0.6676724 0.6718668 0.8694965 0.8711822 #>  [292,] 0.4838654 0.5651183 0.5823109 0.5899931 0.6043202 0.6212457 0.6324289 #>  [293,] 0.6259270 0.6306602 0.6885273 0.6941925 0.6962405 0.7586742 1.0168811 #>  [294,] 0.3719003 0.4322276 0.4374314 0.4650894 0.5556157 0.6077267 0.6491318 #>  [295,] 0.5507871 0.6060839 0.6540522 0.6864797 0.7266645 0.8079251 0.8668629 #>  [296,] 0.7167750 0.7218076 0.7345896 0.8068857 0.8257599 0.8278818 0.8711983 #>  [297,] 0.3452650 0.3847710 0.3966538 0.4106838 0.5438064 0.5563560 0.5720614 #>  [298,] 0.5454038 0.5484307 0.5548300 0.5835435 0.6388217 0.6692937 0.7170262 #>  [299,] 0.3533593 0.3558065 0.7687116 0.8013524 0.8207143 0.8615595 0.8698912 #>  [300,] 0.7906171 0.8320994 0.9968838 1.0163951 1.1247291 1.1692047 1.2117915 #>  [301,] 0.4822183 0.5273060 0.5997597 0.6118375 0.6625668 0.7212493 0.7336559 #>  [302,] 0.3883937 0.5432475 0.6200722 0.6598525 0.6885273 0.7260074 0.7819644 #>  [303,] 0.3705849 0.3817068 0.4746914 0.5589189 0.5921339 0.5929911 0.5947929 #>  [304,] 0.3986255 0.4928879 0.5308665 0.5477634 0.6725052 0.7016886 0.7242327 #>  [305,] 0.2282451 0.2441368 0.3772134 0.4118751 0.4147750 0.4294882 0.5003345 #>  [306,] 0.6295475 0.6659478 0.6794652 0.6802801 0.8122799 0.8190441 0.8294733 #>  [307,] 0.5945801 0.6341986 0.6825264 0.7464132 0.8188567 0.8424573 0.9090889 #>  [308,] 0.8817659 0.9165916 0.9510769 1.1180879 1.1610638 1.2121500 1.2294295 #>  [309,] 1.0564430 1.0740310 1.1219269 1.3544777 1.3548049 1.3749757 1.4142071 #>  [310,] 0.3580617 0.4059949 0.4941835 0.5091720 0.5156747 0.5227510 0.5315962 #>  [311,] 0.5144417 0.5799635 0.6030332 0.6168945 0.6298785 0.6385945 0.6433946 #>  [312,] 0.5677104 0.7439927 0.9251742 0.9890027 1.0634416 1.1143917 1.1708898 #>  [313,] 0.4140243 0.4427544 0.7179395 0.7203841 0.7300473 0.7470707 0.7499347 #>  [314,] 0.3557058 0.3660055 0.4716123 0.5213794 0.5988082 0.6366124 0.6475728 #>  [315,] 0.2711685 0.4583782 0.5738034 0.6150821 0.6924457 0.6949035 0.7115051 #>  [316,] 0.2331499 0.4694829 0.4814036 0.5302313 0.5428742 0.5549661 0.5621263 #>  [317,] 0.5304840 0.5829508 0.5913874 0.6317578 0.6592084 0.7128485 0.7429091 #>  [318,] 0.4178031 0.7212657 0.7643381 0.8454857 0.9036851 1.1662023 1.1663746 #>  [319,] 0.4104674 0.5507871 0.6718668 0.7198598 0.7690294 0.7812691 0.7984198 #>  [320,] 0.5272608 0.5826577 0.6966819 0.7639255 0.7953997 0.8570370 0.8814828 #>  [321,] 0.3137172 0.6330017 0.7754897 0.7860647 0.7973127 0.8034897 0.8158983 #>  [322,] 0.2825222 0.4039836 0.4066095 0.4091790 0.4264723 0.4278262 0.4410895 #>  [323,] 0.5797436 0.6975370 0.7202299 0.7574095 0.7910946 0.8365947 0.8422101 #>  [324,] 0.3289088 0.6207704 0.7333524 0.7886875 0.8242152 0.8896760 1.0164059 #>  [325,] 0.4666539 0.5194713 0.6403021 0.6750757 0.7000013 0.7276750 0.7560812 #>  [326,] 0.4374314 0.4592293 0.5524883 0.5662922 0.5829508 0.5855572 0.5881248 #>  [327,] 0.6598473 0.6928711 0.8259913 0.8449212 0.8491173 0.9144192 0.9225429 #>  [328,] 0.6178544 0.8128029 0.8485141 0.9666318 0.9875163 1.0304664 1.0389758 #>  [329,] 0.3508861 0.4010153 0.4102852 0.4319189 0.4938455 0.5240588 0.5410666 #>  [330,] 0.6260754 0.6544893 0.7092578 0.7260862 0.7460990 0.7962546 0.7963860 #>  [331,] 0.3825865 0.6244683 0.7710988 1.0201453 1.0900675 1.1004006 1.1065876 #>  [332,] 0.5966961 0.6552488 0.7884341 0.8922345 0.9026205 0.9853683 1.0017260 #>  [333,] 0.2730216 0.5951459 0.6420773 0.7540387 0.8011046 0.8110551 0.8310825 #>  [334,] 0.9895265 1.0967649 1.3383211 1.4946246 1.5246110 1.5286402 1.5727602 #>  [335,] 0.5990690 0.6306602 0.6752086 0.7260074 0.7831658 0.8033594 0.8402109 #>  [336,] 0.3289088 0.8155733 1.0312263 1.0357225 1.0581104 1.0673733 1.2755977 #>  [337,] 0.8709788 1.0477017 1.0789482 1.0988490 1.1016498 1.1240254 1.1296812 #>  [338,] 0.7938853 0.8214434 0.8586001 0.8912523 0.9099715 0.9300438 0.9493070 #>  [339,] 0.4716123 0.4842592 0.5609459 0.5718704 0.6015230 0.6078971 0.6445822 #>  [340,] 0.6426809 0.6704468 0.7431848 0.7477983 0.7762443 0.8068303 0.8103325 #>  [341,] 0.5118614 0.5935021 0.6673624 0.7622878 0.7890376 0.8377409 0.8500962 #>  [342,] 0.4491403 0.5369062 0.5535473 0.6199787 0.6603320 0.7334966 0.7376410 #>  [343,] 0.7695961 0.8133929 0.8436207 0.9022478 0.9423514 0.9785326 1.0057263 #>  [344,] 0.4531381 0.4610170 0.5640949 0.6101552 0.6103766 0.6330518 0.6344158 #>  [345,] 1.0564430 1.1137578 1.1537274 1.2746458 1.2820930 1.3034476 1.3343886 #>  [346,] 0.4477567 0.4755121 0.5314820 0.5559668 0.5674493 0.5896261 0.5928799 #>  [347,] 0.2479615 0.2599752 0.3516542 0.3927027 0.5308820 0.5360330 0.5566877 #>  [348,] 0.3249670 0.4607104 0.5693826 0.5998738 0.6146595 0.6335485 0.6600437 #>  [349,] 0.6112777 0.7555510 0.7618507 0.8043655 0.9199764 0.9360401 0.9805308 #>  [350,] 0.3145800 0.3722427 0.3934789 0.3961389 0.4364131 0.4431789 0.5318551 #>  [351,] 0.4557390 0.4621184 0.5526087 0.5548300 0.5563126 0.6118375 0.7660418 #>  [352,] 0.2892476 0.4356179 0.4645724 0.5277545 0.6075361 0.6383762 0.6549417 #>  [353,] 0.5484307 0.6466006 0.6893450 0.6907151 0.7033752 0.7229736 0.7323097 #>  [354,] 0.5135879 0.5817484 0.8763911 0.9457505 0.9690468 1.0206453 1.2158233 #>  [355,] 0.2437404 0.3904650 0.4648172 0.4724190 0.4791082 0.5286624 0.6013011 #>  [356,] 1.0110752 1.0646770 1.0761689 1.1188422 1.1896131 1.2036467 1.2214902 #>  [357,] 0.5396612 0.5974130 0.6538700 0.6965263 0.7279314 0.7283112 0.7434224 #>  [358,] 0.6864797 0.7592232 0.8837776 0.9123621 0.9675919 0.9951581 1.0401610 #>  [359,] 0.6328868 0.7023876 0.7868892 0.9040195 0.9465695 0.9569775 1.0073981 #>  [360,] 0.3701436 0.3805127 0.4457365 0.4579178 0.4796179 0.4948389 0.5223903 #>  [361,] 0.3926418 0.4078788 0.4241215 0.5198553 0.5334882 0.5872158 0.6080891 #>  [362,] 0.5733520 0.6080817 0.8298260 0.8899266 0.9073886 1.0201472 1.1282555 #>  [363,] 0.5522974 0.6573923 0.8710764 0.8854436 0.9675919 0.9980781 0.9990939 #>  [364,] 0.6781649 0.7159846 0.7346854 0.8630724 0.8868467 0.9793853 0.9860598 #>  [365,] 0.6279899 0.8144972 0.9279832 0.9698021 0.9837599 1.0072214 1.0958183 #>  [366,] 0.3600981 0.4078553 0.5003120 0.5247843 0.5301252 0.5478527 0.5565539 #>  [367,] 0.7921124 1.3747818 1.4056990 1.4778882 1.5754066 1.6200769 1.7140541 #>  [368,] 0.8501720 0.8857446 0.9600454 1.0086696 1.0734394 1.0973473 1.1224974 #>  [369,] 0.2159943 0.6832041 0.7405994 0.7598172 0.7625477 0.7711323 0.8061412 #>  [370,] 0.3391393 0.3460267 0.3871452 0.3872540 0.3879917 0.3963149 0.4062885 #>  [371,] 0.3054163 0.4981992 0.5738514 0.5955284 0.7093720 0.7147622 0.7212493 #>  [372,] 0.6160121 0.7557852 0.8656432 0.8730633 0.8756464 0.9541169 1.0147551 #>  [373,] 0.9321153 0.9626257 1.0250126 1.0433128 1.0694023 1.0761362 1.1528759 #>  [374,] 0.4805085 0.5788997 0.7495312 0.7562517 0.7730945 0.8041985 0.9215420 #>  [375,] 0.4400585 0.6618226 0.7333524 0.7550966 0.8100295 0.8748850 0.9474302 #>  [376,] 0.2037460 0.2910956 0.3212052 0.3556839 0.4551768 0.4788163 0.5050436 #>  [377,] 0.5243236 0.5308665 0.5385587 0.6144839 0.6251247 0.6508075 0.6721808 #>  [378,] 0.2730216 0.3305259 0.5989855 0.6595621 0.7185466 0.7263062 0.7372227 #>  [379,] 0.2541808 0.2599752 0.3534468 0.4151275 0.4539749 0.4678726 0.5355268 #>  [380,] 0.3896588 0.4204726 0.4311123 0.4534754 0.4814463 0.5158828 0.5427018 #>  [381,] 0.3134969 0.4400585 0.7264647 0.7441207 0.7517801 0.9306994 0.9388194 #>  [382,] 1.1716580 1.2602316 1.2972300 1.4109557 1.4151818 1.4322673 1.4354676 #>  [383,] 0.9015460 1.0945550 1.1027429 1.2678974 1.3041206 1.3222403 1.3567016 #>  [384,] 0.1167473 0.3010307 0.3508861 0.4046845 0.4814228 0.4924958 0.5116427 #>  [385,] 0.1615857 0.4557390 0.6391136 0.7242930 0.7869123 0.7975347 0.8011830 #>  [386,] 0.3009515 0.4510923 0.5672576 0.6371210 0.6542993 0.6699075 0.6997288 #>  [387,] 0.3229241 0.4082152 0.4561227 0.4686753 0.5156747 0.6166287 0.6276547 #>  [388,] 0.3608010 0.4051075 0.4067788 0.4581241 0.4610033 0.4934180 0.5606218 #>  [389,] 0.1971400 0.3094647 0.3479570 0.4075401 0.5819963 0.6187588 0.6447304 #>  [390,] 0.3926473 0.5198553 0.5380430 0.5439251 0.6337909 0.6566852 0.6929682 #>  [391,] 0.3823258 0.5192788 0.5443350 0.6199787 0.6486892 0.7383355 0.8717687 #>  [392,] 0.5697849 0.6724619 0.6792690 0.7425474 0.7465947 0.7760800 0.8196744 #>  [393,] 0.7407890 0.8789290 0.8839080 0.9018569 0.9057547 0.9485185 0.9621267 #>  [394,] 0.2000552 0.3378843 0.3579669 0.4115055 0.4664739 0.4738849 0.4842084 #>  [395,] 0.1446983 0.3068994 0.3259043 0.4044118 0.4720293 0.4963816 0.5026097 #>  [396,] 0.6334836 0.7354315 0.7501863 1.0163345 1.0728674 1.0773280 1.0834435 #>  [397,] 0.3899113 0.4439753 0.4515302 0.4783791 0.5375171 0.6508075 0.6797829 #>  [398,] 0.2761744 0.4385304 0.4773376 0.5925989 0.6212457 0.6538643 0.7022715 #>  [399,] 0.8492731 0.8501720 0.8937073 0.8961762 0.9168882 0.9256335 1.0037677 #>  [400,] 0.2750318 0.2829339 0.4594203 0.5738593 0.6044769 0.6250455 0.6567567 #>  [401,] 0.2317985 0.4799709 0.6549417 0.6706131 0.6795402 0.6963003 0.7710988 #>  [402,] 0.3412883 0.3744344 0.4091790 0.4648172 0.4927252 0.5609264 0.5894179 #>  [403,] 0.7435540 0.9057547 1.1412379 1.1713457 1.2674529 1.3397122 1.3776291 #>  [404,] 0.3881702 0.4098433 0.4203433 0.5265610 0.5432840 0.5653471 0.5773754 #>  [405,] 0.3017876 0.4844133 0.4956254 0.5158819 0.5276785 0.5818578 0.6157790 #>  [406,] 0.5452476 0.9452586 1.0265817 1.0758871 1.2355870 1.2863903 1.3321249 #>  [407,] 0.1750146 0.3828938 0.4376545 0.4932866 0.5227510 0.5310416 0.5717735 #>  [408,] 0.3249670 0.3914998 0.4388169 0.4534335 0.4656767 0.5162804 0.5932005 #>  [409,] 0.6080817 0.8812121 0.9537708 0.9727156 0.9820216 1.0686974 1.0704494 #>  [410,] 0.4102843 0.4583782 0.5172681 0.5422412 0.6053125 0.6710585 0.6923370 #>  [411,] 0.4654339 0.5239324 0.6144572 0.6155733 0.6379017 0.6451678 0.6518081 #>  [412,] 0.4865141 0.5741344 0.6776519 0.9213850 1.0493755 1.0832071 1.1003782 #>  [413,] 0.6106341 0.6418493 0.6629175 0.6859374 0.6992235 0.7197091 0.7481279 #>  [414,] 0.4716371 0.6456537 0.7358221 0.7936581 0.8863946 0.9456348 0.9743875 #>  [415,] 0.3626104 0.4903882 0.5317338 0.5361440 0.5447359 0.5529495 0.5577432 #>  [416,] 0.7407890 0.8133929 0.8453563 0.8512975 0.8775733 0.8840670 0.9349477 #>  [417,] 0.3731690 0.4019821 0.4308653 0.6295475 0.6670429 0.6795672 0.7020822 #>  [418,] 0.4720412 0.5535697 0.6537409 0.7197612 0.7318622 0.7558181 0.7636585 #>  [419,] 0.6131800 0.8471594 0.8561612 0.9461905 0.9777915 1.0725152 1.0731118 #>  [420,] 0.3941056 0.4574139 0.5403093 0.5573309 0.6157625 0.6259001 0.6264802 #>  [421,] 0.3350684 0.4613849 0.4755121 0.5051814 0.5111170 0.5240209 0.6152631 #>  [422,] 0.5144417 0.5521531 0.5688047 0.5720591 0.5844712 0.6106181 0.6290408 #>  [423,] 0.3839080 0.4039836 0.4190034 0.4461435 0.4531381 0.4772549 0.4872315 #>  [424,] 0.9748714 1.0109194 1.0220249 1.2155923 1.2304282 1.3029029 1.3222355 #>  [425,] 0.4464898 0.7501863 0.7768757 0.9050090 0.9564470 1.0192619 1.1188422 #>  [426,] 0.4188936 0.4698432 0.4767420 0.5081513 0.6932627 0.6961120 0.7281312 #>  [427,] 1.2532310 1.2596442 1.3276759 1.3319798 1.3475818 1.6812526 1.6816424 #>  [428,] 1.0256225 1.3091979 1.4366796 1.4524318 1.5285608 1.5995454 1.6038009 #>  [429,] 0.4601836 0.5206727 0.5433286 0.5520191 0.6364805 0.7490691 0.7698382 #>  [430,] 0.1809120 0.3476522 0.3822680 0.4094533 0.4571746 0.4767461 0.5004424 #>  [431,] 0.4325592 0.4832034 0.4907078 0.5175776 0.6084595 0.6260754 0.6298785 #>  [432,] 0.3054163 0.4867738 0.5016423 0.5261997 0.6002333 0.6637852 0.6823338 #>  [433,] 0.6039175 0.6217492 0.7620641 0.9256335 0.9520252 1.0051690 1.0172139 #>  [434,] 0.3572997 0.5136966 0.5267006 0.5616835 0.5797273 0.5843134 0.5860378 #>  [435,] 0.5107433 0.5530979 0.5564398 0.6354316 0.6619037 0.7266306 0.7413673 #>  [436,] 0.6448789 1.1042188 1.1861229 1.1985962 1.2529846 1.3018767 1.3299034 #>  [437,] 0.6797598 0.7298637 0.7329266 0.7556412 0.8093335 0.8515147 0.8963428 #>  [438,] 0.2864065 0.3180686 0.3332885 0.3841220 0.3981714 0.4307838 0.4686568 #>  [439,] 1.5015243 1.5707855 1.5802356 1.6782756 1.7323457 1.8162768 1.9210671 #>  [440,] 0.6660422 0.8396742 0.8721703 0.8795618 0.8921344 0.8974167 0.9854368 #>  [441,] 0.3558065 0.5817407 0.5904484 0.7536046 0.8313303 0.8945944 0.9209852 #>  [442,] 0.4102843 0.6095626 0.6825428 0.6943403 0.7115051 0.7612940 0.8011428 #>  [443,] 0.4725882 0.5007043 0.5730914 0.5768880 0.6431886 0.7342968 0.8458692 #>  [444,] 0.7737406 0.8346484 0.8372270 0.8697144 0.8913551 0.9723249 1.0117602 #>  [445,] 0.1847665 0.3592324 0.4582307 0.5039295 0.5434084 0.5888992 0.6084338 #>  [446,] 0.2974618 0.3483000 0.4299961 0.4534848 0.4829311 0.5086513 0.5147283 #>  [447,] 0.5047992 0.5223502 0.5894169 0.5934861 0.6181161 0.6185357 0.6231081 #>  [448,] 0.6708331 0.7222020 0.7395222 0.7670224 0.8659657 0.8726855 0.8895570 #>  [449,] 0.2660949 0.2844869 0.3679288 0.4864498 0.4933284 0.5177305 0.5689224 #>  [450,] 0.2729237 0.4430788 0.6323540 0.6699075 0.7374118 0.7441829 0.8463394 #>  [451,] 0.6418493 0.6552488 0.7753734 0.7868281 0.8895570 0.9250797 0.9365784 #>  [452,] 0.3556839 0.3918550 0.3926472 0.4346894 0.4357852 0.4562678 0.4638684 #>  [453,] 0.1371682 0.3484084 0.3979447 0.4075914 0.5212004 0.5264038 0.5570377 #>  [454,] 0.3901522 0.6833425 0.7011029 0.7421152 0.7760126 0.7886407 0.7943253 #>  [455,] 0.2761744 0.3351087 0.3529160 0.3884884 0.5379425 0.5642968 0.5926376 #>  [456,] 0.2306866 0.3998621 0.5171973 0.5437460 0.5520436 0.5654988 0.6086110 #>  [457,] 0.5316368 0.7931566 0.9988059 1.0125706 1.0740802 1.1071935 1.1677634 #>  [458,] 0.5268177 0.5277596 0.5342558 0.5736626 0.5754797 0.5937527 0.5949497 #>  [459,] 0.4270772 0.4437895 0.4808101 0.5251106 0.5377797 0.5452370 0.5624674 #>  [460,] 0.3382396 0.5222466 0.5340132 0.5437460 0.5474260 0.6638164 0.6890785 #>  [461,] 1.0871487 1.1521733 1.3186558 1.3796134 1.4389386 1.4639651 1.5836119 #>  [462,] 0.2971146 0.3216385 0.4137035 0.4965839 0.5383376 0.5564398 0.6148209 #>  [463,] 0.1563262 0.3993269 0.6386085 0.6962160 0.7289857 0.7655108 0.7717962 #>  [464,] 0.3627877 0.8383847 0.8694511 1.0919018 1.1111228 1.1945906 1.2291547 #>  [465,] 0.4629914 0.6776519 1.0109194 1.0227455 1.1421889 1.1844731 1.1933325 #>  [466,] 0.6119093 0.7346854 0.7963357 0.7995573 0.8694511 0.8858082 0.9169267 #>  [467,] 0.1446983 0.2343165 0.2719022 0.4477273 0.4573580 0.4814228 0.5185992 #>  [468,] 0.3017876 0.4786554 0.5827290 0.6001514 0.6089742 0.6218585 0.6237036 #>  [469,] 0.4321721 0.5135879 0.7253013 0.8599640 0.8809915 0.8948210 0.9637545 #>  [470,] 0.3189098 0.4877173 0.5342558 0.5584288 0.5681774 0.5755446 0.5785802 #>  [471,] 0.8014785 0.8031479 0.8114705 0.9191939 1.0138363 1.0280732 1.1222694 #>  [472,] 0.4832034 0.5889393 0.7260862 0.8379731 0.8445866 0.8538536 0.8888023 #>  [473,] 0.5997107 0.7620341 0.7681833 0.8952096 0.9245384 0.9556811 0.9638738 #>  [474,] 1.0332294 1.0591495 1.1212533 1.1889286 1.2813695 1.3105511 1.3140691 #>  [475,] 0.4746536 0.5594627 0.5720591 0.5865575 0.6261752 0.6387037 0.6390353 #>  [476,] 0.3817292 0.4863579 0.5727911 0.5823500 0.6233895 0.6661872 0.7513597 #>  [477,] 0.4414344 0.5306052 0.5530363 0.6850243 0.7019092 0.7552747 0.7557691 #>  [478,] 1.0168681 1.0239103 1.1621422 1.1687405 1.1705869 1.1803782 1.2053367 #>  [479,] 0.2373751 0.4328520 0.5564429 0.6415150 0.7069649 0.7469373 0.8235245 #>  [480,] 0.7347367 0.7859777 0.8289651 0.8657601 0.9424610 1.0136499 1.0787230 #>  [481,] 0.4788796 0.5815831 0.6902230 0.7654545 0.7657172 0.7669485 0.7907610 #>  [482,] 0.3333481 0.3874518 0.4835486 0.5730914 0.6105391 0.6346652 0.6644449 #>  [483,] 0.6884039 0.7030908 0.7562356 0.7709582 0.8588153 0.8636594 0.9082442 #>  [484,] 0.2897140 0.4211917 0.4508977 0.5121358 0.5204985 0.6307484 0.6311017 #>  [485,] 0.4392037 0.5129569 0.5609981 0.6427950 0.6431886 0.6822642 0.6991106 #>  [486,] 0.3867716 0.3916429 0.5055339 0.5104774 0.5275167 0.5333421 0.5644466 #>  [487,] 0.4247027 0.5147160 0.5280532 0.5910768 0.6101552 0.6132997 0.6202855 #>  [488,] 0.4589530 0.5029175 0.5507186 0.5609264 0.6234147 0.6500349 0.6507047 #>  [489,] 0.2597361 0.4923605 0.6502924 0.7650320 0.8051307 0.8421122 0.8470416 #>  [490,] 0.1335520 0.4000708 0.4024178 0.4066095 0.4188355 0.4720293 0.5133923 #>  [491,] 0.6139562 0.7347367 0.7592232 0.9202498 1.0175240 1.0466033 1.0608419 #>  [492,] 0.2379059 0.2739039 0.3008485 0.3431314 0.4359616 0.4512409 0.4763999 #>  [493,] 0.4464898 0.5613358 0.6369502 0.6412002 0.7354315 0.8515494 0.8570085 #>  [494,] 0.5490485 0.7724099 0.8393017 1.0657366 1.0850882 1.0994594 1.1132785 #>  [495,] 0.4392037 0.4948411 0.5111170 0.5418545 0.5624674 0.5646282 0.5674493 #>  [496,] 0.3179080 0.3351087 0.3448090 0.4150123 0.4385304 0.5136966 0.5325175 #>  [497,] 0.1930292 0.2722534 0.3110222 0.3841220 0.4212798 0.4534848 0.4628253 #>  [498,] 0.3726977 0.6139110 0.6767445 0.6777723 0.6801160 0.7583879 0.7754469 #>  [499,] 0.8715033 1.1673269 1.1786455 1.2225598 1.2368268 1.3105511 1.4204368 #>  [500,] 0.4515302 0.5674861 0.5733027 0.5884661 0.5968307 0.6269816 0.7405584 #>  [501,] 0.2589438 0.4013081 0.5425024 0.5613727 0.5681808 0.6580374 0.6645753 #>  [502,] 0.1371682 0.2820141 0.3452228 0.4139769 0.4768170 0.4872125 0.4881036 #>  [503,] 0.5026871 0.5107522 0.5399249 0.5504223 0.5866964 0.5904526 0.6334289 #>  [504,] 0.5815831 0.6239864 0.7555510 0.7787257 0.8065249 0.8619526 0.8781633 #>  [505,] 0.2282451 0.2518042 0.3144511 0.3756370 0.4615858 0.4723697 0.4753633 #>  [506,] 0.5371429 0.6006650 0.6015509 0.7098818 0.7146966 0.7162719 0.7594543 #>  [507,] 0.7538766 1.1249370 1.3491214 1.4686207 1.5373062 1.5713983 1.5935008 #>  [508,] 0.8887571 0.9473373 0.9490966 0.9755427 0.9990500 1.0050785 1.0168811 #>  [509,] 0.3620238 0.4416808 0.4567400 0.4604169 0.4786554 0.4956254 0.5120519 #>  [510,] 0.6416048 0.7013995 0.7468283 0.8969474 0.9035378 0.9713862 1.0277810 #>  [511,] 0.4218561 0.5138855 0.5988082 0.6015230 0.6152985 0.6583690 0.6764273 #>  [512,] 0.2844869 0.3459008 0.4661783 0.4781197 0.4849322 0.4898987 0.5063794 #>  [513,] 0.4354761 0.4760933 0.5584288 0.5646775 0.5945836 0.6276946 0.6420593 #>  [514,] 0.3621493 0.6708331 0.7085881 0.7385076 0.7732280 0.7866037 0.8561164 #>  [515,] 0.2243338 0.3203030 0.3821858 0.4347206 0.4694829 0.5253377 0.5984684 #>  [516,] 0.9436752 1.1214679 1.2465422 1.3327393 1.4321388 1.4394378 1.4569699 #>  [517,] 0.5147160 0.7521877 0.8130616 0.8416160 0.8437582 0.8464397 0.8915208 #>  [518,] 0.2709310 0.4622099 0.4858578 0.7607982 0.8430438 0.8828174 0.8872751 #>  [519,] 0.1327150 0.2149231 0.3452228 0.3979447 0.4023114 0.5017686 0.5168868 #>  [520,] 0.2421974 0.2973152 0.4741836 0.5191194 0.5529495 0.5615720 0.5787092 #>  [521,] 0.3391393 0.3646449 0.3661038 0.3744624 0.4249510 0.4579178 0.5196651 #>  [522,] 0.2442796 0.2501583 0.2551735 0.3844847 0.4246006 0.4751421 0.4902579 #>  [523,] 0.6900928 0.7583131 0.8632378 1.0263673 1.2602902 1.2797361 1.3324025 #>  [524,] 0.7522248 0.7889160 0.8169467 0.8278818 0.8480178 0.8641227 0.9054064 #>  [525,] 0.6109361 0.6327766 0.6898869 0.7011029 0.7825049 0.7862455 0.7959740 #>  [526,] 0.5310801 0.6424009 0.7612147 0.8294824 0.8492731 0.8582279 0.9485264 #>  [527,] 0.4314698 0.4513099 0.4867738 0.4981992 0.5342780 0.5563126 0.6311789 #>  [528,] 0.6030332 0.6525716 0.7085528 0.7374386 0.7737526 0.8101804 0.8418873 #>  [529,] 0.3479570 0.4088757 0.4100585 0.4621882 0.4882521 0.5214709 0.5915868 #>  [530,] 0.2570158 0.4135943 0.5037140 0.5677086 0.5909622 0.5999769 0.6059992 #>  [531,] 0.4424810 0.4607104 0.4954583 0.5807621 0.6118877 0.6692578 0.6838385 #>  [532,] 0.4918813 0.5544807 0.7574095 0.7744003 0.7784635 0.7798159 0.7916561 #>  [533,] 0.4300750 0.4858578 0.5877637 0.6047309 0.6485012 0.6927530 0.7084461 #>  [534,] 0.7264647 0.7480227 0.7598069 0.8100295 0.8256684 0.8896760 0.8987279 #>  [535,] 0.6686518 0.6703204 0.7868892 0.8803812 0.9084045 0.9208148 0.9844678 #>  [536,] 0.2877138 0.3290943 0.3407237 0.4455691 0.4866517 0.5094120 0.5107522 #>  [537,] 0.3318713 0.5431551 0.5858429 0.6376734 0.6502924 0.7580317 0.7594007 #>  [538,] 0.3195039 0.4741836 0.4844496 0.5215058 0.5360330 0.5469780 0.5529867 #>  [539,] 0.1720647 0.6426809 0.7116302 0.7405994 0.8932080 0.9307701 0.9453516 #>  [540,] 0.4691113 0.4799574 0.5257188 0.5432063 0.5488394 0.5508654 0.5816616 #>  [541,] 0.1721220 0.6661872 0.6720747 0.7669485 0.7810492 0.7822587 0.8105143 #>  [542,] 0.3718836 0.3898495 0.4877173 0.4962893 0.6264381 0.6350356 0.6629213 #>  [543,] 0.5724313 0.6424009 0.7669921 0.8092747 0.8242152 0.8961762 0.9432879 #>  [544,] 0.4116656 0.5019399 0.6097888 0.6584063 0.6814400 0.6983772 0.7212864 #>  [545,] 1.9560378 1.9765159 2.0673857 2.1269272 2.1479973 2.2799315 2.3248546 #>  [546,] 0.4987087 0.6489374 0.7555763 0.8144972 0.8214434 0.8453532 0.8768583 #>  [547,] 0.4041352 0.4269622 0.4445657 0.5385163 0.6158243 0.6815269 0.7266645 #>  [548,] 0.8552444 0.9924349 0.9952317 0.9990500 1.0263286 1.0804482 1.1303968 #>  [549,] 0.7818651 1.1239698 1.2293291 1.3811171 1.4422726 1.4785361 1.5502774 #>  [550,] 0.3485256 0.4933824 0.5511180 0.6204600 0.6703018 0.7010315 0.7604159 #>  [551,] 0.4902834 0.7200820 0.7531176 0.8294824 0.8573507 0.8772626 0.9251742 #>  [552,] 0.4934448 0.5056424 0.5977433 0.6366803 0.6624597 0.6709798 0.6742979 #>  [553,] 0.6646960 0.7105108 0.8482912 0.8502664 0.8611970 0.9051737 0.9120340 #>  [554,] 0.3382396 0.3424935 0.3998621 0.4227972 0.4905033 0.5325637 0.5557010 #>  [555,] 0.4428608 0.5150716 0.5648042 0.5938394 0.6369502 0.6837029 0.7011885 #>  [556,] 0.6448182 0.8573984 0.8656432 0.8662437 0.9924424 0.9933986 1.0144281 #>  [557,] 0.5103810 0.5726450 0.6204999 0.6986739 0.7818533 0.7876664 0.8893395 #>  [558,] 0.5520436 0.5628470 0.6579810 0.6638164 0.7542274 0.8054140 0.8730747 #>  [559,] 0.4698432 0.6732148 0.7160065 0.7331643 0.7480227 0.7517801 0.7768149 #>  [560,] 0.8553208 1.0317032 1.0489231 1.0502230 1.1784912 1.2033993 1.3153626 #>  [561,] 1.0488505 1.3793814 1.4593063 1.6057162 1.6168582 1.7443408 1.7480833 #>  [562,] 0.3359267 0.6389343 0.6484112 0.6524257 0.7106713 0.7185466 0.7364701 #>  [563,] 0.4716371 0.7229052 0.7871541 0.8968425 0.9508083 0.9809840 0.9810841 #>  [564,] 0.7642952 0.7760126 0.7825049 0.9254164 0.9266043 1.0093034 1.0210357 #>  [565,] 0.6115696 0.6795672 0.6802801 0.6898960 0.7490107 0.7651537 0.7730474 #>  [566,] 0.5766435 0.6301442 0.6352962 0.6587175 0.6964233 0.7000013 0.8449212 #>  [567,] 0.2914010 0.5618533 0.6711359 0.8024687 0.8171410 0.8236750 0.8590702 #>  [568,] 0.4176337 0.4863579 0.5129569 0.5493066 0.5646282 0.5758167 0.5846692 #>  [569,] 0.3078239 0.3117212 0.3203030 0.5565904 0.5690470 0.5912075 0.6362178 #>  [570,] 0.3179080 0.3529160 0.3980254 0.4073341 0.4773376 0.4996877 0.5517540 #>  [571,] 0.6744512 0.7221984 0.7268542 0.8451409 0.9312168 0.9461905 0.9637608 #>  [572,] 0.4710551 0.4817876 0.5459784 0.5611150 0.5664959 0.5781671 0.5818368 #>  [573,] 0.3211625 0.4042186 0.4794384 0.4861438 0.4979203 0.5563560 0.5577121 #>  [574,] 0.3318713 0.3549502 0.3896094 0.4455691 0.5680138 0.5711103 0.6062475 #>  [575,] 0.2825222 0.3412883 0.3906673 0.4247027 0.4872315 0.5707510 0.5965402 #>  [576,] 0.2905101 0.3626104 0.4014034 0.4927931 0.5675699 0.5787092 0.5916930 #>  [577,] 0.3223980 0.3320370 0.5276247 0.5333421 0.5457220 0.6185357 0.6652205 #>  [578,] 0.4424810 0.4943809 0.6361122 0.6480673 0.6649017 0.6684110 0.6900415 #>  [579,] 0.3606939 0.4622581 0.5206727 0.6032393 0.6838213 0.6918828 0.7019943 #>  [580,] 0.1978266 0.3229241 0.3913383 0.4067788 0.4187933 0.4903167 0.6304902 #>  [581,] 0.4174339 0.4996877 0.5678000 0.6638864 0.6649017 0.6838385 0.6877081 #>  [582,] 0.3168135 0.4770976 0.5196167 0.5717305 0.5963233 0.7429003 0.7899325 #>  [583,] 0.3066847 0.4978562 0.5513619 0.5667609 0.5668975 0.5692347 0.5840279 #>  [584,] 0.5455471 0.5745557 0.6212270 0.6399345 0.6900177 0.7152320 0.7197999 #>  [585,] 0.3564613 0.5549349 0.6943403 0.7038719 0.7125444 0.7291695 0.7361051 #>  [586,] 0.2969402 0.5964303 0.6682694 0.6800451 0.7247200 0.7258541 0.7493712 #>  [587,] 0.4059949 0.5162737 0.5170223 0.5669233 0.5912075 0.6837227 0.6881501 #>  [588,] 0.5490485 0.8715033 1.1384162 1.1569241 1.1664993 1.2395562 1.2564987 #>  [589,] 0.4382253 0.5452958 0.5551863 0.5872158 0.5884958 0.6044390 0.6055999 #>  [590,] 0.6239864 0.6241481 0.6785228 0.7429341 0.7553276 0.7719454 0.7782327 #>  [591,] 0.4554380 0.4630756 0.5385619 0.6283615 0.6329265 0.6602664 0.6645013 #>  [592,] 0.3901522 0.5824584 0.6066476 0.6509478 0.7188305 0.7313685 0.7451991 #>  [593,] 0.4539424 0.5422511 0.5695320 0.6157790 0.6205800 0.6280803 0.6486892 #>  [594,] 0.1801754 0.5552337 0.6047309 0.6280594 0.7491215 0.7603822 0.8064573 #>  [595,] 0.5870834 0.6623269 0.7480074 0.7547250 0.7706185 0.7905384 0.8025484 #>  [596,] 0.2687452 0.4021975 0.4071275 0.4094533 0.4461435 0.4989726 0.5319536 #>  [597,] 0.6932381 0.7984198 1.0045045 1.0160888 1.0226691 1.0864679 1.1001071 #>  [598,] 0.4661317 0.5180413 0.6389343 0.6616835 0.6958492 0.7093417 0.7542764 #>  [599,] 0.5723115 0.5826577 0.8133667 0.8157722 0.8432885 0.8647628 0.8876669 #>  [600,] 0.4133517 0.4134331 0.4814943 0.4827837 0.5666000 0.5978966 0.6050855 #>  [601,] 0.8659693 0.9347285 1.2495963 1.2672880 1.2677070 1.3101289 1.4435704 #>  [602,] 0.2000552 0.3524701 0.4399712 0.4594776 0.4808101 0.4856380 0.4991628 #>  [603,] 0.7754724 0.7757816 0.8614030 0.9347285 0.9983359 1.0470636 1.0490556 #>  [604,] 0.3829765 0.4428608 0.5176782 0.5255208 0.5664207 0.6401261 0.6688434 #>  [605,] 0.4401566 0.4624230 0.6402065 0.6491583 0.6595621 0.6603190 0.6627391 #>  [606,] 0.5160779 0.5997597 0.6034885 0.6323915 0.6516348 0.6741550 0.6850373 #>  [607,] 0.3564613 0.6821746 0.7175856 0.8721690 0.9638738 0.9698021 0.9707709 #>  [608,] 0.4455296 0.5286624 0.5544904 0.5670835 0.6287559 0.6421341 0.6903849 #>  [609,] 0.3180686 0.4764278 0.4986083 0.5124417 0.5261221 0.5370760 0.5495321 #>  [610,] 0.3583589 0.4449203 0.4696645 0.5559947 0.5818368 0.5905843 0.5909729 #>  [611,] 0.4999196 0.5610809 0.5936021 0.6119592 0.6627480 0.6670429 0.7295190 #>  [612,] 0.4788796 0.7071888 0.7092578 0.7859777 0.8065249 0.8852198 0.9683598 #>  [613,] 0.4166936 0.4319189 0.5030482 0.5095629 0.5627475 0.6151386 0.6464372 #>  [614,] 0.4844133 0.5844723 0.7013837 0.7241966 0.7257482 0.7389188 0.7434541 #>  [615,] 0.3076231 0.4246512 0.5196167 0.6089335 0.7171361 0.8950523 0.8970780 #>  [616,] 0.5737001 0.7179395 0.7453942 0.8948977 0.9223799 0.9331536 0.9434501 #>  [617,] 0.4977942 0.4978562 0.6083650 0.6311111 0.6617519 0.6749101 0.6966104 #>  [618,] 0.3143889 0.3625599 0.4284995 0.4792680 0.5191194 0.5215058 0.5350618 #>  [619,] 0.2522903 0.4106838 0.4401566 0.4963816 0.5102398 0.5730537 0.5797152 #>  [620,] 0.4799709 0.5007043 0.5538210 0.6432768 0.6749629 0.6991106 0.7320925 #>  [621,] 0.3794363 0.5343922 0.5709542 0.6488452 0.6517845 0.7358221 0.7689319 #>  [622,] 0.2217699 0.2379059 0.3387787 0.3981178 0.4073308 0.4273011 0.4346894 #>  [623,] 0.4244134 0.4781233 0.4808560 0.5115859 0.5123870 0.5622643 0.5632083 #>  [624,] 0.3424935 0.3696577 0.5274997 0.5474260 0.5671859 0.6590215 0.6698931 #>  [625,] 0.3701436 0.3794363 0.5468104 0.6061405 0.6063486 0.6311256 0.6456537 #>  [626,] 0.3239348 0.3316793 0.3844847 0.4170641 0.4372703 0.4562678 0.4588069 #>  [627,] 0.3698866 0.4187589 0.4616340 0.4645889 0.5533702 0.5840967 0.6234320 #>  [628,] 0.2843077 0.5334882 0.5380430 0.5550542 0.5745557 0.5773049 0.5876636 #>  [629,] 0.3189098 0.3718836 0.4057138 0.4297693 0.5339051 0.5962536 0.5982717 #>  [630,] 0.1847665 0.4180365 0.4224309 0.5092464 0.5307682 0.5340513 0.5460991 #>  [631,] 0.5308441 0.5923813 0.6222618 0.6334068 0.6359134 0.6383762 0.6513015 #>  [632,] 0.2953358 0.5178109 0.5664575 0.6467473 0.6479294 0.7064148 0.7293981 #>  [633,] 0.8014785 0.9916877 1.0488612 1.2013391 1.2280995 1.2343578 1.2849968 #>  [634,] 0.3733548 0.5652968 0.5859505 0.6283615 0.6790960 0.7267974 0.7668148 #>  [635,] 0.3068031 0.4731726 0.5178109 0.5573309 0.5593639 0.6272235 0.6584535 #>  [636,] 0.3437915 0.3602085 0.4217992 0.4604169 0.5818578 0.6204600 0.6237036 #>  [637,] 0.5717305 0.6473916 0.7583114 0.9337663 0.9764781 0.9818067 1.0634416 #>  [638,] 0.3664342 0.4083134 0.4449203 0.4550743 0.4799850 0.4806164 0.4838654 #>  [639,] 0.3913383 0.4561227 0.4891962 0.5024430 0.6282769 0.6639185 0.6801811 #>  [640,] 0.4308653 0.5766530 0.6452316 0.6627480 0.6659478 0.6698102 0.6858692 #>  [641,] 0.6420773 0.6525716 0.7372227 0.8276867 0.8687234 0.8836192 0.9193287 #>  [642,] 0.3219860 0.6018606 0.6025670 0.6341304 0.6349342 0.7576453 0.7839866 #>  [643,] 0.3216385 0.4918813 0.5251696 0.5460777 0.5674861 0.6542798 0.6794466 #>  [644,] 0.3502379 0.3881702 0.4159844 0.4343659 0.5163155 0.6158295 0.6513095 #>  [645,] 0.5677104 1.0222328 1.0912293 1.1520158 1.2310638 1.2372374 1.2376552 #>  [646,] 0.6160121 0.8454857 0.9094067 0.9208421 1.0264969 1.2257330 1.2568813 #>  [647,] 0.2698645 0.4223929 0.4416783 0.4753633 0.5003345 0.5039295 0.5039796 #>  [648,] 0.3533593 0.5904484 0.7639255 0.8332346 0.8633876 0.9361079 0.9501915 #>  [649,] 0.2455228 0.3584825 0.4099719 0.5063794 0.5140984 0.5444032 0.5478527 #>  [650,] 0.3714422 0.4746536 0.5421922 0.5518987 0.5847711 0.6055999 0.6228135 #>  [651,] 0.4343500 0.4907078 0.5521531 0.6204110 0.6433946 0.7082038 0.7711323 #>  [652,] 0.3679288 0.4849322 0.5052216 0.5381778 0.6420593 0.6516348 0.6768486 #>  [653,] 0.2243338 0.3078239 0.3962582 0.4660301 0.4941484 0.5643781 0.6141087 #>  [654,] 0.3825865 0.8735101 0.8831188 0.9359285 0.9454706 0.9862528 1.0917288 #>  [655,] 0.7594543 0.8709809 0.8969474 0.9557584 0.9640322 1.0304664 1.0414025 #>  [656,] 0.2475771 0.3351453 0.3450631 0.3552445 0.4466877 0.5434903 0.5823500 #>  [657,] 0.3134969 0.6618226 0.7598069 0.8034897 0.8553208 0.8960728 0.8982283 #>  [658,] 0.3693357 0.3890541 0.4581241 0.5091720 0.5431640 0.5545793 0.5555561 #>  [659,] 0.5530828 0.6899483 0.7435521 0.7468328 0.7717962 0.8136364 0.8326890 #>  [660,] 0.3379294 0.4106175 0.4640828 0.4843613 0.4852370 0.4919889 0.6025572 #>  [661,] 0.8388058 1.2435026 1.2853057 1.4091069 1.6119388 1.6168232 1.6246200 #>  [662,] 0.3641254 0.4088757 0.4549116 0.4772254 0.5030698 0.5158828 0.5507033 #>  [663,] 0.8448204 1.0081354 1.2219897 1.4627949 1.5208569 1.5585316 1.6567250 #>  [664,] 0.6927530 0.8430438 0.8594719 0.8691323 0.8830522 0.9013178 0.9165916 #>  [665,] 0.4940797 0.6204999 0.6777128 0.6858426 0.7764788 0.8522735 0.8644439 #>  [666,] 0.4941095 0.8799675 1.0045045 1.1280411 1.2103488 1.2959024 1.3299034 #>  [667,] 0.2835264 0.4313634 0.5000480 0.5203304 0.5207198 0.5256925 0.5259265 #>  [668,] 0.3080159 0.3968199 0.4892549 0.5667609 0.6083650 0.7106938 0.8440646 #>  [669,] 0.3443710 0.3727976 0.3729757 0.4824820 0.5033851 0.5126071 0.5281170 #>  [670,] 0.4158074 0.4630756 0.5433057 0.5736626 0.5846316 0.6293418 0.6790960 #>  [671,] 0.3039197 0.5039796 0.5084350 0.5161211 0.5858715 0.6084338 0.6200764 #>  [672,] 0.2750318 0.4587560 0.4819972 0.4824103 0.4954196 0.5681808 0.5839463 #>  [673,] 0.8762362 0.9480539 0.9826326 1.0193008 1.0200392 1.1140211 1.1348969 #>  [674,] 0.3524701 0.4270772 0.5263739 0.5314820 0.5356406 0.5758492 0.5876360 #>  [675,] 0.2957806 0.3407834 0.3872540 0.4249510 0.4905699 0.5047992 0.5626660 #>  [676,] 0.7833212 0.8870213 0.8917933 0.9288415 0.9397830 0.9462630 0.9473325 #>  [677,] 0.3717799 0.3950093 0.4321146 0.4472523 0.4686445 0.5181290 0.5431295 #>  [678,] 0.4414323 0.9010076 1.0632862 1.1004647 1.2692701 1.3653849 1.4149941 #>  [679,] 0.3988677 0.4891962 0.5945450 0.6106341 0.7007926 0.7300473 0.7306627 #>  [680,] 0.2722534 0.3350058 0.4502007 0.4618981 0.4786068 0.4878440 0.4930080 #>  [681,] 0.2589438 0.4896377 0.5462093 0.5530828 0.5567710 0.6447304 0.6767445 #>  [682,] 0.3199740 0.3355059 0.4106175 0.4170100 0.4438410 0.5518987 0.5730440 #>  [683,] 0.1832772 0.3850870 0.3917846 0.5251859 0.5261997 0.6172361 0.6835537 #>  [684,] 0.3962582 0.4347206 0.5403935 0.5690470 0.5792327 0.5861405 0.6218700 #>  [685,] 0.4629914 0.4865141 0.7714353 0.8285677 0.8631265 0.9229963 1.0193008 #>  [686,] 0.5935021 0.6706131 0.7663015 0.8952279 0.9240633 0.9565208 0.9676375 #>  [687,] 0.3254636 0.3629002 0.4755009 0.4819700 0.4946442 0.5006729 0.5116951 #>  [688,] 0.3606955 0.4818432 0.4977241 0.5172207 0.5479214 0.7737406 0.7786176 #>  [689,] 0.2969402 0.6135255 0.6987704 0.7306847 0.7345973 0.7596807 0.7622878 #>  [690,] 0.3924172 0.4594203 0.4946310 0.4954196 0.6595576 0.6716778 0.6933842 #>  [691,] 0.7541382 1.1133547 1.1708898 1.2456960 1.2590504 1.3052732 1.3710348 #>  [692,] 0.7818651 0.7827597 0.8201722 0.8355861 0.8987279 0.9307553 1.0663334 #>  [693,] 0.2317985 0.6244683 0.6749629 0.7387995 0.7616241 0.7663015 0.8271269 #>  [694,] 0.5222466 0.5557010 0.5883293 0.5913874 0.6590215 0.6911446 0.7054018 #>  [695,] 0.6188296 0.6834793 0.7289857 0.7824238 0.8061055 0.8107453 0.8139949 #>  [696,] 0.3704090 0.4241215 0.4784119 0.5993602 0.6337909 0.7006170 0.7035318 #>  [697,] 0.3057673 0.3189174 0.3664342 0.5437147 0.5526087 0.5555431 0.5592956 #>  [698,] 0.3670383 0.4077064 0.4284365 0.4608742 0.4738735 0.5017686 0.5318242 #>  [699,] 0.3823258 0.4110389 0.6571222 0.7390066 0.8000941 0.8050859 0.8595606 #>  [700,] 0.4438410 0.4640828 0.5060953 0.5340130 0.5351940 0.5650983 0.5786185 #>  [701,] 0.5741344 0.8309714 0.9229963 1.0108708 1.0660826 1.1303261 1.1641330 #>  [702,] 0.5046474 0.7579934 0.8025352 0.9389258 0.9698619 1.0502584 1.1072271 #>  [703,] 0.1930292 0.3350058 0.3483000 0.4781233 0.4966426 0.4990704 0.5056916 #>  [704,] 0.1327150 0.2151662 0.2820141 0.3484084 0.4105656 0.4495376 0.4942353 #>  [705,] 0.8111712 0.9875163 1.0196181 1.0917492 1.1108097 1.2139102 1.2337932 #>  [706,] 0.4068428 0.4098433 0.4188936 0.4318238 0.5491096 0.6445031 0.6538700 #>  [707,] 0.6907151 0.6907589 0.7908816 0.8031375 0.8041985 0.8471594 0.9104056 #>  [708,] 0.9895265 1.0818001 1.1504483 1.1629934 1.1713457 1.2472325 1.3814272 #>  [709,] 0.4427544 0.5733511 0.5737001 0.5848665 0.6553606 0.7415332 0.7736953 #>  [710,] 0.7541382 0.7757816 0.7840028 0.9563662 1.0108708 1.0144713 1.0467571 #>  [711,] 0.4100585 0.4549116 0.4813132 0.5546491 0.5854069 0.6032393 0.6585494 #>  [712,] 0.4491403 0.4895727 0.5858715 0.6225686 0.6281380 0.6479462 0.6484295 #>  [713,] 0.3914998 0.4135943 0.5523455 0.5992848 0.6085380 0.6146595 0.6294432 #>  [714,] 0.3102862 0.3850870 0.5751942 0.6481963 0.6767025 0.7021173 0.7056644 #>  [715,] 0.1972097 0.2971146 0.4360727 0.4783791 0.5460777 0.5530979 0.5884661 #>  [716,] 0.8321812 0.9116642 0.9370018 0.9456106 0.9675876 1.0029524 1.0106167 #>  [717,] 0.1615857 0.4621184 0.6931897 0.7152110 0.7218076 0.7336559 0.7539447 #>  [718,] 0.3205367 0.4341458 0.4635491 0.4817876 0.5473548 0.5510738 0.5900833 #>  [719,] 0.4243306 0.4650894 0.4961051 0.5304840 0.5692926 0.5990901 0.6372457 #>  [720,] 0.8771297 0.9327977 0.9498636 0.9513818 1.0071882 1.0354095 1.0611345 #>  [721,] 0.4013081 0.4616340 0.4837333 0.4896377 0.4953395 0.5199133 0.5339908 #>  [722,] 0.2217699 0.3743819 0.3926472 0.4085398 0.4285053 0.4359616 0.4437738 #>  [723,] 0.4146693 0.5162804 0.5667814 0.5989300 0.5998738 0.6424083 0.6480673 #>  [724,] 0.8632378 1.1330825 1.2367595 1.2924369 1.3023498 1.3448677 1.3509613 #>  [725,] 0.4987087 0.5549349 0.5777528 0.6095626 0.6710585 0.7175856 0.8364262 #>  [726,] 0.2905101 0.3249547 0.3332885 0.3865375 0.4517690 0.5046312 0.5124417 #>  [727,] 0.4500563 0.4621679 0.4772950 0.5245113 0.5251859 0.5751942 0.5840035 #>  [728,] 0.5493781 0.7420372 0.8853208 1.0364016 1.0446697 1.1166608 1.1694635 #>  [729,] 0.3557058 0.4702127 0.4878075 0.5399249 0.6557159 0.6583690 0.6911446 #>  [730,] 0.6279899 0.6341986 0.7714244 0.9665095 1.0437977 1.0588026 1.1113653 #>  [731,] 0.7383355 0.7480425 0.8034032 0.8301829 0.8388058 0.9474084 1.0028521 #>  [732,] 0.3625463 0.6018606 0.6328868 0.6580186 0.6686518 0.6835369 0.6898869 #>  [733,] 0.5767138 0.7488825 0.7511663 0.8270865 0.8746919 0.8803812 0.8895518 #>  [734,] 0.3630545 0.4297693 0.4429503 0.4661783 0.4823596 0.4993231 0.5330216 #>  [735,] 0.4398836 0.5018750 0.5404431 0.5810094 0.6045351 0.6194848 0.6304902 #>  [736,] 1.0275648 1.0503101 1.2154938 1.2347512 1.2849259 1.3480431 1.3618444 #>  [737,] 0.3572997 0.4129854 0.4979955 0.5076045 0.5977933 0.6493586 0.6501762 #>  [738,] 0.4526260 0.5681774 0.5718704 0.5804964 0.5945836 0.6366124 0.6641362 #>  [739,] 0.6534864 0.9698619 1.0928033 1.4727194 1.4757486 1.4861174 1.5548163 #>  [740,] 0.2739039 0.3015051 0.3164230 0.3481273 0.4073308 0.4435987 0.4522626 #>  [741,] 0.1809120 0.2687452 0.3759863 0.3937819 0.4190034 0.4739121 0.4831816 #>  [742,] 0.4923605 0.5640391 0.6938226 0.6969955 0.7906171 0.8753647 0.9534664 #>  [743,] 0.5347924 0.8128535 0.9704098 1.0214017 1.1691366 1.1707951 1.1747406 #>  [744,] 0.5066467 0.5375171 0.5968307 0.6416882 0.6766320 0.7689906 0.8482104 #>  [745,] 0.2953358 0.4443948 0.4522191 0.6403021 0.6847252 0.7188112 0.7464132 #>  [746,] 0.5834112 0.6703457 0.7041127 0.7227584 0.7824238 0.7866159 0.8555685 #>  [747,] 0.5564429 0.6525409 0.6562667 0.6790719 0.7167750 0.7192347 0.8770667 #>  [748,] 0.6900928 0.8125873 0.9564843 1.0321547 1.1188368 1.1600270 1.2201402 #>  [749,] 0.3564653 0.4210615 0.4986083 0.5247843 0.5540353 0.5553801 0.5577121 #>  [750,] 0.3210113 0.3337319 0.3505972 0.3766900 0.3882882 0.4483583 0.4601276 #>  [751,] 0.7290339 0.7696708 1.3769271 1.3797905 1.5141980 1.5207586 1.6119388 #>  [752,] 0.2672144 0.3793273 0.4437895 0.5238277 0.5493066 0.6266480 0.6677139 #>  [753,] 0.2570158 0.3884884 0.3980254 0.4150123 0.5318551 0.5523455 0.5751524 #>  [754,] 0.3219860 0.6933274 0.7495244 0.7733663 0.7923732 0.8189921 0.8231966 #>  [755,] 0.4341458 0.5019399 0.5245113 0.5611150 0.5622643 0.5702810 0.5704173 #>  [756,] 0.3545104 0.3695051 0.4313634 0.5319536 0.5547772 0.5786138 0.6228976 #>  [757,] 0.4414323 0.8586001 0.8776712 1.0414052 1.0543306 1.3075222 1.3241112 #>  [758,] 0.4852257 0.4932947 0.5153236 0.5306396 0.5774661 0.5777790 0.5895402 #>  [759,] 0.3932888 0.4567400 0.5626370 0.5933715 0.6033454 0.6133296 0.6142913 #>  [760,] 0.3815934 0.5248463 0.5259265 0.5711612 0.5997008 0.6105391 0.6277977 #>  [761,] 0.5221236 0.5360127 0.5984684 0.6352962 0.6389843 0.6797289 0.7167518 #>  [762,] 0.5550542 0.6209100 0.6628226 0.7117558 0.7197999 0.7221726 0.7223246 #>  [763,] 0.5081989 0.5721579 0.6825755 0.7202299 0.8137731 0.8703142 0.9128977 #>  [764,] 0.3556412 0.3587015 0.4246006 0.4930080 0.5240904 0.5251106 0.5292125 #>  [765,] 0.3693357 0.3828938 0.4729712 0.4814473 0.4941835 0.4979955 0.5420239 #>  [766,] 1.3426503 1.3912910 1.4072853 1.4980208 1.5514362 1.5868214 1.6053534 #>  [767,] 0.4382253 0.4533020 0.4627672 0.4658854 0.4781726 0.4812069 0.5066925 #>  [768,] 0.2501583 0.3293245 0.3394326 0.4588069 0.4836364 0.5214415 0.5292125 #>  [769,] 0.2571824 0.4735947 0.4794384 0.5720614 0.5869870 0.5909919 0.6148209 #>  [770,] 0.4222102 0.4872668 0.5030482 0.5650983 0.5978966 0.6103750 0.6261544 #>  [771,] 0.1783147 0.3080159 0.4214539 0.5965576 0.6311111 0.7940962 0.8093335 #>  [772,] 0.1430510 0.3570360 0.3759863 0.3818433 0.3839080 0.4021975 0.4372703 #>  [773,] 0.4140243 0.6553606 0.6657525 0.7211506 0.8021730 0.9053264 0.9331536 #>  [774,] 0.5140984 0.5380347 0.5613995 0.5947929 0.6350249 0.6435289 0.6480212 #>  [775,] 0.3487987 0.3899113 0.4360727 0.4603693 0.6566037 0.6579535 0.6766320 #>  [776,] 0.4941484 0.5194713 0.6024698 0.6362178 0.6598473 0.7079401 0.7085052 #>  [777,] 0.3066847 0.4685498 0.5623832 0.5662922 0.5989300 0.5998091 0.6333773 #>  [778,] 0.4287212 0.5733511 0.6386085 0.6855182 0.7147060 0.7203841 0.7478216 #>  [779,] 0.2290925 0.4262510 0.4589530 0.4658854 0.5414529 0.5498846 0.5576668 #>  [780,] 0.2945343 0.4133517 0.4764770 0.5434903 0.5470326 0.5583721 0.5924978 #>  [781,] 0.4430788 0.4510923 0.4741621 0.5662883 0.5861405 0.6951537 0.6995760 #>  [782,] 0.2996900 0.3407834 0.4945176 0.5299550 0.5310416 0.6194848 0.6231081 #>  [783,] 0.2597100 0.2730793 0.4534754 0.4772254 0.4864788 0.4953667 0.4961873 #>  [784,] 0.3288662 0.5730440 0.5977760 0.6009382 0.6025572 0.6040855 0.6106409 #>  [785,] 0.5493781 0.7511663 0.9282721 0.9844678 1.0578269 1.0812152 1.1011811 #>  [786,] 0.3981178 0.4085398 0.4536275 0.4760712 0.4979213 0.5404929 0.5626660 #>  [787,] 0.5876370 0.6276547 0.7453942 0.7481755 0.7550133 0.7708851 0.7858902 #>  [788,] 0.2149231 0.2151662 0.3486028 0.4881036 0.5059654 0.5281170 0.5318242 #>  [789,] 0.4603693 0.5767138 0.7458831 0.7689482 0.7879522 0.7902577 0.8120094 #>  [790,] 0.1985852 0.5651475 0.6411859 0.6913815 0.7360616 0.7579080 0.7598172 #>  [791,] 0.4768170 0.5173171 0.5212004 0.5562837 0.5651183 0.5736986 0.5948584 #>  [792,] 0.7106938 0.7692174 0.8512571 0.9858759 1.0514722 1.0815706 1.1718862 #>  [793,] 0.3009515 0.4089697 0.5074053 0.6617321 0.6646334 0.6798744 0.6995760 #>  [794,] 0.6334836 0.6525409 0.7069649 0.7070695 0.8759999 0.9002558 0.9151247 #>  [795,] 0.7511237 0.8025352 0.8595722 0.9149040 0.9389866 0.9623826 0.9796507 #>  [796,] 0.4354761 0.6176918 0.7107049 0.7436005 0.8291852 0.8403826 0.8405984 #>  [797,] 0.3879955 0.5124602 0.5964595 0.6236562 0.6301964 0.6576346 0.7016100 #>  [798,] 0.2037460 0.3215793 0.4307838 0.4638684 0.4675778 0.4764278 0.5086513 #>  [799,] 0.3625463 0.3952175 0.6327766 0.6349342 0.7023876 0.8231966 0.8853208 #>  [800,] 0.1668035 0.2386115 0.2735716 0.3722427 0.4244134 0.4819700 0.5105719 #>  [801,] 0.2372597 0.5142369 0.5610809 0.5793015 0.6241751 0.6261648 0.6271394 #>  [802,] 0.4110389 0.5443350 0.6195510 0.6205800 0.6842062 0.7524293 0.7621354 #>  [803,] 0.3252701 0.6476816 0.6876165 0.8242545 0.8751725 0.8868136 0.8955254 #>  [804,] 0.5965260 0.6856888 0.7182672 0.7785923 0.8182202 0.8633835 0.8717006 #>  [805,] 0.3208283 0.3337319 0.3536009 0.3537973 0.3625599 0.3780466 0.4299961 #>  [806,] 0.2292895 0.3200962 0.3505972 0.3537973 0.3950093 0.4057154 0.4554660 #>  [807,] 0.3189174 0.3261280 0.4083134 0.4621679 0.4880932 0.5186146 0.5409832 #>  [808,] 0.1756997 0.3008485 0.3048401 0.3481273 0.3871452 0.4407905 0.4571718 #>  [809,] 0.4974999 0.5160779 0.5223192 0.5870834 0.6454162 0.6596025 0.6929272 #>  [810,] 0.4755307 0.5673635 0.5695561 0.6115450 0.6825524 0.7222987 0.7898964 #>  [811,] 0.2518042 0.3590345 0.3772134 0.3855502 0.4223929 0.5161211 0.5361440 #>  [812,] 0.2709310 0.3935150 0.4982438 0.5877637 0.7617477 0.8300585 0.8549515 #>  [813,] 0.4360883 0.7026564 0.7188305 0.7542274 0.8038670 0.8119042 0.8133387 #>  [814,] 0.4812069 0.5452958 0.5576668 0.5634926 0.6524257 0.7542716 0.7741991 #>  [815,] 0.3646449 0.4456398 0.4819972 0.4831543 0.4905699 0.4942667 0.5345129 #>  [816,] 0.2660949 0.3459008 0.3528182 0.4960474 0.5058042 0.5381778 0.5444032 #>  [817,] 0.5966961 0.7833858 0.8013473 0.8996203 0.9213850 0.9248277 0.9489521 #>  [818,] 0.5162028 0.5439014 0.5703731 0.7415910 0.7562517 0.7595823 0.7926164 #>  [819,] 0.3068031 0.5403093 0.5889975 0.6046058 0.6396782 0.6711767 0.7259222 #>  [820,] 0.4613597 0.8637595 0.9947815 1.0263673 1.0625974 1.1492752 1.1600270 #>  [821,] 0.3117212 0.5162737 0.5253377 0.5643781 0.6489374 0.6566259 0.7125444 #>  [822,] 0.1756997 0.3431314 0.3729757 0.3876361 0.3963149 0.4121179 0.4308106 #>  [823,] 0.3719003 0.4175940 0.4592293 0.4961051 0.5495815 0.5708950 0.6544002 #>  [824,] 0.3733548 0.4554380 0.5321604 0.5433057 0.5728045 0.6197529 0.7134962 #>  [825,] 0.6139562 0.8494978 0.8657601 1.0323620 1.0557884 1.0589419 1.0642435 #>  [826,] 0.5107108 0.5308441 0.5678000 0.5797436 0.5836678 0.6075361 0.6423990 #>  [827,] 0.6969955 0.7359546 0.8320994 0.8470416 0.8852816 1.1181486 1.1769117 #>  [828,] 0.2954259 0.3903566 0.4314698 0.5211184 0.5409832 0.5589189 0.5694609 #>  [829,] 0.5346464 0.5651475 0.5834112 0.6452316 0.7523828 0.7597297 0.7631110 #>  [830,] 0.2741315 0.3898495 0.3911103 0.4873584 0.5016489 0.5085348 0.5277596 #>  [831,] 0.3879955 0.4477567 0.4567502 0.4585512 0.4948411 0.5403953 0.5876360 #>  [832,] 0.2844826 0.3620238 0.4217992 0.4487336 0.5265487 0.5511180 0.6089742 #>  [833,] 0.5371429 0.5686191 0.5697676 0.7013995 0.7244734 0.7395184 0.7554514 #>  [834,] 0.3698866 0.3880339 0.4285053 0.4923358 0.4934152 0.5102454 0.5339908 #>  [835,] 0.2672144 0.4197185 0.4412579 0.4950529 0.5764014 0.6167259 0.6277977 #>  [836,] 0.4651375 0.6537409 0.7410907 0.7764788 0.8052669 0.8575356 0.9561309 #>  [837,] 0.5523455 0.6488452 0.6502702 0.7157893 0.7222020 0.7308206 0.7318622 #>  [838,] 0.4579747 0.5646775 0.5982717 0.6628226 0.6629213 0.6657341 0.6833425 #>  [839,] 0.2597361 0.6239314 0.6376734 0.6938226 0.7762722 0.7854201 0.8457675 #>  [840,] 0.4974999 0.5342780 0.5597081 0.5738514 0.6625217 0.6823338 0.6973567 #>  [841,] 0.8043606 0.9013178 0.9345236 0.9548162 1.0485955 1.0892918 1.2135595 #>  [842,] 0.2656665 0.9626302 1.0034869 1.0168681 1.0343538 1.0960449 1.2237397 #>  [843,] 0.3259238 0.3539857 0.3884724 0.4731371 0.5176782 0.5648042 0.6795628 #>  [844,] 0.4941095 0.8050859 0.9793326 0.9848685 1.1202992 1.1464007 1.2117443 #>  [845,] 1.0771376 1.1394545 1.1537274 1.1991664 1.3140691 1.3844466 1.3994887 #>  [846,] 0.4177528 0.4618842 0.4661230 0.4797457 0.5086942 0.5412432 0.5535630 #>  [847,] 0.1958560 0.4134331 0.4764770 0.4852370 0.4872668 0.5060953 0.5108614 #>  [848,] 0.2897140 0.3774071 0.3973984 0.4387940 0.5055018 0.5153202 0.5712220 #>  [849,] 0.4328520 0.4948279 0.6189826 0.6562667 0.7420286 0.7546247 0.8893395 #>  [850,] 0.5360127 0.6385613 0.6582412 0.6651681 0.6830403 0.6863370 0.7136445 #>  [851,] 0.3094647 0.4657729 0.4756386 0.4782089 0.4882521 0.5244970 0.5587520 #>  [852,] 0.9450400 0.9520252 0.9884264 1.0715908 1.0829817 1.1377081 1.1412379 #>  [853,] 0.5597081 0.5776902 0.5822762 0.6412002 0.6723875 0.7245050 0.7707023 #>  [854,] 0.1653397 0.3896094 0.5431551 0.6242651 0.6311626 0.6382944 0.6428406 #>  [855,] 0.3485256 0.4224327 0.6391136 0.6751239 0.6931897 0.6958433 0.6971110 #>  [856,] 0.5169932 0.5310801 0.5724313 0.6207704 0.8155733 0.8748850 0.9093389 #>  [857,] 0.2844826 0.3437915 0.4416808 0.4870221 0.5021292 0.5158819 0.5827290 #>  [858,] 0.4336252 0.6025194 0.6943824 0.7519759 0.8518345 0.8633835 0.8983019 #>  [859,] 0.4443948 0.5637888 0.5664575 0.5945801 0.8043890 0.8702741 0.8730570 #>  [860,] 0.3776683 0.4041352 0.5510038 0.6351291 0.6712112 0.6769563 0.6794669 #>  [861,] 1.0081354 1.2193954 1.5227191 1.8560403 1.9369633 2.0641680 2.1144906 #>  [862,] 0.4449200 0.4482449 0.4910418 0.5454137 0.5810094 0.5997008 0.6346652 #>  [863,] 0.2741315 0.4328603 0.4495898 0.4860047 0.4961873 0.4962893 0.5520191 #>  [864,] 0.5736986 0.6587996 0.6703018 0.6751239 0.7152110 0.7787659 0.7869123 #>  [865,] 0.4437538 0.5528111 0.6424083 0.6595592 0.6644753 0.6770949 0.7076305 #>  [866,] 0.5066467 0.6579535 0.7238303 0.7614096 0.7879522 0.7985211 0.8424384 #>  [867,] 0.5074053 0.5672576 0.5831094 0.7069094 0.7247818 0.7374118 0.7867199 #>  [868,] 0.3829765 0.3884724 0.4379155 0.5150716 0.5780841 0.6044941 0.6818257 #>  [869,] 0.8426718 0.8659693 1.1521733 1.2274040 1.5339276 1.6252331 1.6621872 #>  [870,] 0.3015051 0.3502379 0.3870014 0.5081303 0.5383616 0.5409419 0.5796161 #>  [871,] 0.2475709 0.3387787 0.3743819 0.4357852 0.4512409 0.4934152 0.5050436 #>  [872,] 0.5272608 0.6166063 0.6325670 0.6451331 0.6884351 0.7517435 0.7786176 #>  [873,] 0.3878356 0.5688348 0.6556408 0.6668319 0.6682694 0.7211506 0.7415332 #>  [874,] 0.3788916 0.6131800 0.6777128 0.6986739 0.7221984 0.8845729 0.9689152 #>  [875,] 0.1890204 0.3209744 0.4319075 0.6181161 0.6240293 0.7189313 0.7247200 #>  [876,] 0.8178236 0.8776712 1.0488505 1.0632862 1.0871487 1.2274040 1.2355413 #>  [877,] 0.7105108 0.8087014 0.9218185 0.9663832 1.0009072 1.0414052 1.0464875 #>  [878,] 0.2892476 0.5056424 0.5214182 0.5507258 0.5923813 0.6339029 0.6577769 #>  [879,] 0.8207143 0.9507465 0.9788562 1.0189143 1.0384626 1.0479183 1.0591240 #>  [880,] 0.7754724 0.7840028 0.8309714 0.8355861 1.1872426 1.2293291 1.2590504 #>  [881,] 0.4536275 0.5299550 0.5637652 0.5754324 0.5876370 0.6319519 0.6389891 #>  [882,] 0.6895680 0.7425474 0.8182202 0.8487271 0.8800132 0.9757972 1.0138363 #>  [883,] 0.7076305 0.7234238 0.7599663 0.7721247 0.8289968 0.8789494 0.9343222 #>  [884,] 0.5347924 0.7488825 0.7680293 0.8128673 0.8611402 0.9924935 1.0578269 #>  [885,] 0.2656665 1.1380517 1.1386825 1.1681543 1.1803782 1.2976045 1.3208384 #>  [886,] 0.6961120 0.7434224 0.7470161 0.8740226 0.8840809 0.8890392 0.9014907 #>  [887,] 0.7827597 0.8840809 0.9389928 0.9752843 1.0502584 1.0880258 1.0894098 #>  [888,] 0.1893953 0.2386115 0.2557423 0.3254636 0.3934789 0.5424065 0.5626370 #>  [889,] 0.6980998 0.8457750 0.8590702 0.8906128 0.9015460 0.9465695 0.9510837 #>  [890,] 1.5233047 1.5526239 1.6461644 1.6966072 1.7752432 1.8739895 1.8778082 #>  [891,] 0.3350684 0.3847710 0.4163012 0.4665666 0.4834134 0.5102398 0.5248484 #>  [892,] 0.3660055 0.3939337 0.4878075 0.4993231 0.5339051 0.5582075 0.5804964 #>  [893,] 0.5900533 0.5940836 0.6824439 0.6863225 0.6963113 0.7287922 0.7495154 #>  [894,] 0.2711685 0.5106446 0.5345129 0.5422412 0.6595576 0.6825428 0.6832620 #>  [895,] 0.9457505 1.0055289 1.0374834 1.1374938 1.1549316 1.2193954 1.2219897 #>  [896,] 0.2730793 0.4006208 0.4187589 0.5102454 0.5455230 0.5507033 0.5553776 #>  [897,] 0.1966930 0.4996321 0.6616755 0.7516260 0.7986547 0.8276320 0.8277955 #>  [898,] 0.3209744 0.3738955 0.6045351 0.6467976 0.6593750 0.6800451 0.7289797 #>  [899,] 0.4343500 0.5844712 0.6429579 0.6588261 0.6704393 0.6832041 0.7053021 #>  [900,] 0.3867716 0.4051795 0.4648271 0.4989726 0.5416107 0.5671859 0.6004723 #>  [901,] 0.3223980 0.4834607 0.5223502 0.5263895 0.5587766 0.7036477 0.7137277 #>  [902,] 0.2292895 0.2406235 0.3366595 0.3536009 0.3633398 0.4321146 0.4728238 #>  [903,] 0.2973152 0.3268296 0.3865375 0.4014034 0.4185552 0.4986448 0.5317338 #>  [904,] 0.2921561 0.3454152 0.3584825 0.4539749 0.4746914 0.5211184 0.5721308 #>  [905,] 0.6115696 0.7695961 0.7860690 0.8495536 0.8763056 0.9128120 0.9145718 #>  [906,] 0.2767839 0.3516542 0.4118751 0.4678726 0.4951777 0.5092464 0.5572687 #>  [907,] 0.3608010 0.4089697 0.4176337 0.5545793 0.5843882 0.6371210 0.6631265 #>  [908,] 0.7330956 0.7335737 0.7373931 0.7382539 0.7938853 0.8299896 0.8495744 #>  [909,] 0.2864065 0.3110222 0.3468897 0.3587015 0.4502007 0.4517690 0.4966426 #>  [910,] 0.3777255 0.7420286 0.8183763 0.8235245 0.8759999 0.8770667 0.8772592 #>  [911,] 1.2021813 1.3519872 1.4441595 1.6314486 1.6417888 1.6593278 1.6886986 #>  [912,] 0.6024698 0.6884039 0.6928711 0.6951537 0.7090666 0.8070246 0.8463394 #>  [913,] 0.3057673 0.3261280 0.3404357 0.4550743 0.4595119 0.4663938 0.4792680 #>  [914,] 0.2517737 0.5587173 0.5627475 0.6448182 0.6878511 0.6963113 0.7257511 #>  [915,] 0.7538766 0.8549530 0.9662849 0.9757344 1.0799849 1.1737514 1.1779209 #>  [916,] 0.1832772 0.3102862 0.4772950 0.5016423 0.5475921 0.6649921 0.6877418 #>  [917,] 0.5936021 0.7777964 0.8136364 0.8240020 0.8363098 0.8383885 0.8551205 #>  [918,] 0.3903566 0.4151275 0.4500563 0.4513099 0.4844496 0.4880932 0.5675008 #>  [919,] 0.4548389 0.5169932 0.6932308 0.7550966 0.7612147 0.7669921 0.7886875 #>  [920,] 0.5002484 0.5081972 0.5081989 0.6101844 0.6448901 0.6918455 0.7148926 #>  [921,] 0.3777255 0.6415150 0.6689963 0.7070695 0.7192347 0.7546247 0.9468222 #>  [922,] 0.2522903 0.3966538 0.4044118 0.4542733 0.4834134 0.4907196 0.4961453 #>  [923,] 0.3283662 0.5127957 0.5416107 0.6157495 0.6687958 0.6726877 0.6773270 #>  [924,] 0.4539424 0.5186734 0.5192788 0.5307958 0.6358477 0.7451193 0.7480425 #>  [925,] 0.7159846 0.7995573 0.8383847 1.1546042 1.1813827 1.1917292 1.2422700 #>  [926,] 0.3404357 0.3807694 0.4609694 0.4797457 0.4806164 0.5036612 0.5186146 #>  [927,] 0.5316368 0.5812444 0.6189826 0.7469373 0.7504032 0.7818533 0.9176180 #>  [928,] 0.2597100 0.4006208 0.4290731 0.5030698 0.5427018 0.5525965 0.6443639 #>  [929,] 0.1750146 0.3440669 0.4814473 0.4864090 0.4945176 0.5315962 0.5621263 #>  [930,] 0.2729237 0.4741621 0.7365476 0.7620341 0.8056846 0.8552444 0.8599408 #>  [931,] 0.3493363 0.3564653 0.4284995 0.5094536 0.5200226 0.5253391 0.5650986 #>  [932,] 0.3939337 0.4823596 0.5413598 0.6213069 0.6411251 0.6475728 0.6557159 #>  [933,] 0.3597897 0.4408371 0.4429503 0.4686445 0.4960474 0.5474476 0.5775135 #>  [934,] 0.4109611 0.4269622 0.4299912 0.4794377 0.6769563 0.7169647 0.7396999 #>  [935,] 0.2644777 0.3460267 0.3744624 0.4456398 0.4905980 0.5180823 0.5306396 #>  [936,] 0.2437867 0.3704090 0.6217492 0.6243484 0.7419777 0.8937073 0.8959755 #>  [937,] 0.3048401 0.3289579 0.3876361 0.4435987 0.4500602 0.4658134 0.5551621 #>  [938,] 0.4104674 0.6146587 0.6540522 0.7249079 0.8790505 0.9385847 1.0160888 #>  [939,] 1.0256225 1.7376803 1.8752828 2.0526915 2.0737414 2.1606362 2.1953567 #>  [940,] 0.5504223 0.5684153 0.5692926 0.5921408 0.6115450 0.6317578 0.6360513 #>  [941,] 0.2397630 0.3893715 0.4635491 0.5459784 0.6261423 0.7189531 0.7372373 #>  [942,] 0.7395222 0.7866037 0.8902484 0.9326582 0.9704234 1.0220249 1.0591495 #>  [943,] 0.6770374 0.7953997 0.8437979 0.8743399 0.8836192 0.8923823 0.9005311 #>  [944,] 0.2421974 0.3195039 0.3268296 0.4838092 0.5960388 0.6062311 0.6484295 #>  [945,] 0.2437404 0.3744344 0.5225348 0.5507186 0.5619871 0.6011523 0.6079141 #>  [946,] 0.7071888 0.7843010 0.7899078 0.8552329 0.8658784 0.8784967 0.8830186 #>  [947,] 0.2835673 0.3379294 0.4170100 0.5491096 0.5773754 0.5974130 0.6307483 #>  [948,] 0.8176158 0.8491173 0.9088661 1.0226691 1.0962674 1.1280411 1.1854588 #>  [949,] 0.3580617 0.3890541 0.4051075 0.4082152 0.4187933 0.4729712 0.5357195 #>  [950,] 0.1668035 0.1893953 0.3571911 0.3629002 0.4431789 0.5325175 0.5379583 #>  [951,] 0.4211917 0.5153202 0.5439014 0.6000559 0.6053124 0.6116723 0.6646960 #>  [952,] 0.4866517 0.4927252 0.5026871 0.5089968 0.5707510 0.5711103 0.5779797 #>  [953,] 0.4875603 0.6576248 0.6757975 0.6983681 0.7662066 0.7698627 0.8435259 #>  [954,] 0.1721220 0.6868414 0.7707032 0.7854245 0.7907610 0.8150351 0.8608745 #>  [955,] 0.2894963 0.3378843 0.3509141 0.4046845 0.4991628 0.5410666 0.5640949 #>  [956,] 0.5733520 0.7657172 0.8253817 0.8621363 0.9065360 0.9093570 1.0182838 #>  [957,] 0.5703731 0.5788997 0.5927121 0.6371498 0.6605861 0.7780207 0.9104056 #>  [958,] 0.2397630 0.3205367 0.3235746 0.4710551 0.5510038 0.5704173 0.7015726 #>  [959,] 0.4159844 0.4749970 0.4979213 0.5242692 0.5276247 0.5372884 0.5409419 #>  [960,] 0.3917846 0.5475921 0.6166063 0.6541843 0.6767025 0.6936177 0.6975846 #>  [961,] 0.4078553 0.4508481 0.4627672 0.4639304 0.4851934 0.5397154 0.5832722 #>  [962,] 0.6372911 0.7468283 0.8111712 0.8128029 0.8137142 1.0342735 1.0582057 #>  [963,] 0.3118342 0.4920762 0.4996321 0.5580452 0.5929911 0.7087091 0.7227528 #>  [964,] 0.1978266 0.4398836 0.4561060 0.4686753 0.4934180 0.5024430 0.5357195 #>  [965,] 0.2954259 0.3817068 0.5439594 0.5560987 0.6014405 0.6303685 0.6312986 #>  [966,] 0.2644777 0.3661038 0.3805127 0.3879917 0.4121179 0.4942667 0.4992716 #>  [967,] 0.4262510 0.4491463 0.4781726 0.4912917 0.5400745 0.5634926 0.6690957 #>  [968,] 0.2895413 0.4012907 0.4188355 0.4508481 0.5022613 0.5301252 0.5306581 #>  [969,] 0.6033454 0.6907589 0.6964233 0.7167518 0.7501249 0.7573388 0.8023491 #>  [970,] 0.3775477 0.5180413 0.6781649 0.7582771 0.7854201 0.7962129 0.8624518 #>  [971,] 0.8178236 0.8426718 0.9010076 1.0543306 1.2672880 1.4639651 1.4741367 #>  [972,] 0.9889855 1.0310730 1.0846808 1.1107118 1.3412372 1.4072203 1.4254146 #>  [973,] 0.5046474 0.6534864 1.0726987 1.1092679 1.2411319 1.2592704 1.3688971 #>  [974,] 0.4166936 0.4222102 0.4325592 0.5889393 0.6168945 0.6642393 0.6824439 #>  [975,] 0.3916429 0.3937819 0.4071275 0.4497573 0.4648271 0.5081303 0.5327646 #>  [976,] 0.6797598 0.7143577 0.7412368 0.8478895 0.9155982 0.9564843 0.9968122 #>  [977,] 0.3583589 0.4177528 0.4884832 0.4979203 0.5048390 0.5423459 0.5425859 #>  [978,] 0.4078494 0.7299069 0.8837776 1.0252513 1.0292942 1.0466033 1.2221643 #>  [979,] 0.2441368 0.2698645 0.3144511 0.3590345 0.3639017 0.4224309 0.4582307 #>  [980,] 0.3318576 0.4113990 0.4637851 0.4818432 0.5560987 0.5580452 0.5921339 #>  [981,] 0.5096697 0.6474703 0.7084461 0.7303249 0.7603822 0.7821418 0.7947371 #>  [982,] 0.3037569 0.3468897 0.3556412 0.3981714 0.4212798 0.4786068 0.4951433 #>  [983,] 0.3746293 0.3951859 0.4062885 0.4077064 0.4268879 0.4553322 0.4721276 #>  [984,] 0.5766435 0.6571222 0.7908816 0.7943087 0.8608712 0.8950047 0.9061930 #>  [985,] 0.3711911 0.4445657 0.4794377 0.5068675 0.5124602 0.5418545 0.6330154 #>  [986,] 0.4136068 0.4198720 0.5377853 0.5527917 0.5817407 0.5887717 0.6447596 #>  [987,] 0.5609981 0.6000041 0.6125511 0.6236562 0.6410853 0.6432768 0.6565911 #>  [988,] 0.4613597 0.7583131 0.7934966 0.8125873 0.8300403 0.8644266 0.9666676 #>  [989,] 0.8167957 0.9319457 0.9343222 0.9604114 1.0054096 1.0092794 1.0531635 #>  [990,] 0.2877138 0.4654339 0.4871296 0.5089968 0.5130897 0.5250834 0.5483853 #>  [991,] 0.5315622 0.6081072 0.6704468 0.7020928 0.8176486 0.8470571 0.8876669 #>  [992,] 0.5697849 0.5930722 0.5946175 0.6025194 0.6895680 0.7463772 0.8717006 #>  [993,] 0.5695561 0.6116583 0.6711359 0.6980998 0.8936129 1.0288534 1.0330928 #>  [994,] 0.8334557 0.9400686 0.9441822 0.9736789 1.0195350 1.0285446 1.0601287 #>  [995,] 0.2046389 0.5695320 0.6002333 0.6358477 0.6584961 0.6620311 0.6877418 #>  [996,] 0.7547801 0.8424573 0.8784967 0.9657497 0.9889855 1.0588026 1.0756552 #>  [997,] 0.2749012 0.4075401 0.4657729 0.5214709 0.5347380 0.5843207 0.5854069 #>  [998,] 0.7867199 0.8530153 0.8579071 0.9382319 0.9490966 1.0186856 1.0285446 #>  [999,] 0.2442796 0.3293245 0.3762088 0.3793273 0.4197185 0.5536723 0.5619804 #> [1000,] 0.8560176 0.9947815 1.1842550 1.1985962 1.2600629 1.3552029 1.3571702 #>              [,8]      [,9]     [,10] #>    [1,] 0.8659657 0.9421936 0.9557680 #>    [2,] 0.6170933 0.6288638 0.6723486 #>    [3,] 0.7500443 0.7559337 0.7863394 #>    [4,] 0.7122574 0.7579941 0.7616962 #>    [5,] 0.5560344 0.5749297 0.6421341 #>    [6,] 1.4549610 1.4819613 1.4869637 #>    [7,] 1.1047606 1.1281216 1.1314762 #>    [8,] 0.5990901 0.6077267 0.6144572 #>    [9,] 0.6735719 0.7441207 0.7552747 #>   [10,] 0.8717687 0.9517242 0.9560222 #>   [11,] 0.7393178 0.8607832 0.8691707 #>   [12,] 1.2757944 1.3466987 1.3871097 #>   [13,] 0.6261752 0.6423559 0.6576281 #>   [14,] 0.5669643 0.6289610 0.6743772 #>   [15,] 0.9677292 0.9822047 1.0210203 #>   [16,] 0.8416314 0.8485141 0.8555560 #>   [17,] 0.7702157 0.7744729 0.8205102 #>   [18,] 0.7812994 0.7831658 0.7833212 #>   [19,] 0.6276344 0.6371045 0.6694920 #>   [20,] 0.7376113 0.7465947 0.8242545 #>   [21,] 0.7200909 0.7642157 0.8262055 #>   [22,] 0.5738593 0.5843207 0.5878734 #>   [23,] 0.8174437 0.8285434 0.8454054 #>   [24,] 0.6046058 0.7126234 0.7293981 #>   [25,] 0.9709143 1.0053122 1.0240549 #>   [26,] 0.9375828 0.9965642 0.9989267 #>   [27,] 0.6793154 0.6922521 0.6957337 #>   [28,] 0.7534231 0.7959740 0.8273440 #>   [29,] 0.8096119 0.8490574 0.8919472 #>   [30,] 0.5168478 0.5259184 0.5686485 #>   [31,] 0.6153740 0.6158243 0.6631265 #>   [32,] 0.6349965 0.6467618 0.6616985 #>   [33,] 1.7325243 1.7605597 1.7934921 #>   [34,] 0.5785802 0.5873717 0.6073207 #>   [35,] 0.8759712 0.8963428 0.9094703 #>   [36,] 0.4772549 0.4902579 0.4953138 #>   [37,] 0.7674061 0.7720021 0.7855488 #>   [38,] 1.0823532 1.0885857 1.1437130 #>   [39,] 0.5799811 0.6234147 0.6334289 #>   [40,] 0.6202446 0.6893967 0.6954686 #>   [41,] 0.9767777 1.0709181 1.1214313 #>   [42,] 0.7228437 0.7352384 0.7536812 #>   [43,] 0.8329497 0.8474362 0.8685804 #>   [44,] 0.8902484 0.9233458 0.9470685 #>   [45,] 0.6445894 0.6703457 0.6742364 #>   [46,] 0.5639711 0.5652759 0.5751524 #>   [47,] 0.6410768 0.6475676 0.6945192 #>   [48,] 0.7124204 0.7238143 0.7426336 #>   [49,] 1.0981405 1.1052382 1.1069051 #>   [50,] 0.7031047 0.7761668 0.7780679 #>   [51,] 1.3196464 1.3383416 1.3442554 #>   [52,] 0.6205308 0.6344532 0.6387002 #>   [53,] 0.6649538 0.6666280 0.6900177 #>   [54,] 1.1308217 1.1488068 1.1703617 #>   [55,] 0.6088836 0.6130995 0.6149975 #>   [56,] 1.0651998 1.0660826 1.0781757 #>   [57,] 0.7144088 0.7255376 0.7584077 #>   [58,] 1.3429950 1.3903058 1.4317289 #>   [59,] 0.5691571 0.5814451 0.5894169 #>   [60,] 0.7406813 0.7546723 0.8150892 #>   [61,] 0.6985333 0.7082677 0.7108606 #>   [62,] 1.0731268 1.0821486 1.0979741 #>   [63,] 0.5866291 0.6037095 0.6184255 #>   [64,] 0.6725331 0.6985333 0.7228437 #>   [65,] 0.5235438 0.5523603 0.5612416 #>   [66,] 0.5187006 0.5454038 0.5788434 #>   [67,] 0.7412534 0.7747363 0.8030730 #>   [68,] 0.8140444 0.8257014 0.8442550 #>   [69,] 0.9095958 0.9104842 0.9115665 #>   [70,] 0.7521877 0.7728438 0.7813239 #>   [71,] 0.6890785 0.7084283 0.7206841 #>   [72,] 0.5781671 0.5869870 0.6184569 #>   [73,] 0.8400247 0.8577779 0.8686715 #>   [74,] 0.8035105 0.8150630 0.8488905 #>   [75,] 0.5430944 0.5553096 0.5562710 #>   [76,] 0.7498338 0.7700856 0.7853335 #>   [77,] 0.8940580 0.9144192 0.9517094 #>   [78,] 0.6207846 0.6222957 0.6313232 #>   [79,] 0.8524514 0.9400104 0.9547662 #>   [80,] 0.9943148 1.0575705 1.0949677 #>   [81,] 0.7427691 0.7704754 0.7851603 #>   [82,] 0.6282769 0.6627472 0.6794191 #>   [83,] 1.6324897 1.6348935 1.7137831 #>   [84,] 0.8470355 0.8635501 0.8814828 #>   [85,] 0.8000671 0.8054140 0.8911614 #>   [86,] 0.9537353 0.9789519 0.9956850 #>   [87,] 0.6617519 0.6825524 0.6876165 #>   [88,] 0.5925989 0.6052552 0.6139989 #>   [89,] 0.5366362 0.5392615 0.5553801 #>   [90,] 1.0910382 1.1197772 1.1847429 #>   [91,] 1.0230037 1.0251862 1.0603788 #>   [92,] 0.5616552 0.5677086 0.5690386 #>   [93,] 1.0750686 1.1012036 1.2000771 #>   [94,] 0.6958492 0.6959997 0.7171871 #>   [95,] 0.7235196 0.7257882 0.7287922 #>   [96,] 0.7671760 0.8588746 0.8640873 #>   [97,] 0.7123423 0.7449617 0.7464562 #>   [98,] 0.4685498 0.5608120 0.5667814 #>   [99,] 0.8491175 0.8781703 0.8789284 #>  [100,] 0.8014144 0.8413243 0.8841586 #>  [101,] 0.5888236 0.5893182 0.6051434 #>  [102,] 0.7636163 0.8346484 0.8964152 #>  [103,] 0.6004723 0.6184365 0.6583441 #>  [104,] 0.7381450 0.7405584 0.7564200 #>  [105,] 0.8457750 0.8459776 0.8677612 #>  [106,] 0.7727202 0.7952060 0.7991643 #>  [107,] 0.7042062 0.7334966 0.7648062 #>  [108,] 0.7221686 0.8324946 0.8685225 #>  [109,] 0.6759745 0.6845038 0.6970333 #>  [110,] 0.6073207 0.6109361 0.6329138 #>  [111,] 0.8988903 0.9238199 0.9959850 #>  [112,] 1.0614598 1.0667378 1.1019770 #>  [113,] 0.6334179 0.6636938 0.6750757 #>  [114,] 0.6598525 0.6651681 0.6658549 #>  [115,] 0.6817752 0.6824507 0.7108606 #>  [116,] 0.7921736 0.8258271 0.8274009 #>  [117,] 0.5884373 0.6066476 0.6086110 #>  [118,] 0.6793154 0.7070268 0.7178104 #>  [119,] 0.5438064 0.5664959 0.5748991 #>  [120,] 0.5944931 0.6266756 0.6543230 #>  [121,] 2.1549657 2.1737524 2.2178311 #>  [122,] 0.7047104 0.7101247 0.7162292 #>  [123,] 0.7947371 0.8064573 0.8074059 #>  [124,] 0.5456795 0.5664905 0.5721308 #>  [125,] 0.8576538 0.8694965 0.8778866 #>  [126,] 0.8135791 0.8224091 0.8579071 #>  [127,] 0.4446538 0.4965401 0.5049563 #>  [128,] 1.2006037 1.2359640 1.2754993 #>  [129,] 0.8834051 0.8885582 0.9502438 #>  [130,] 0.5641103 0.5734173 0.6152985 #>  [131,] 1.0372699 1.0857469 1.1345517 #>  [132,] 0.5793015 0.6002979 0.6608828 #>  [133,] 0.5553096 0.5604901 0.5704699 #>  [134,] 0.6797753 0.7004649 0.7020563 #>  [135,] 0.6902230 0.7275773 0.7304690 #>  [136,] 0.8367852 0.8722130 0.9758868 #>  [137,] 0.8753371 0.8817659 0.8869372 #>  [138,] 0.8150630 0.8321044 0.8929956 #>  [139,] 0.5297800 0.5310863 0.5377853 #>  [140,] 1.1531809 1.1584669 1.1683196 #>  [141,] 0.6674204 0.6870389 0.7015726 #>  [142,] 0.5752647 0.5810309 0.5857079 #>  [143,] 0.5147283 0.5336450 0.5570713 #>  [144,] 1.2618954 1.2723238 1.2775223 #>  [145,] 0.5108614 0.6031922 0.6238388 #>  [146,] 1.4536284 1.4570014 1.4582543 #>  [147,] 0.7708457 0.7768757 0.8935641 #>  [148,] 0.6260530 0.6281380 0.6584063 #>  [149,] 0.5806831 0.6095609 0.6153176 #>  [150,] 0.6815269 0.7853335 0.8211478 #>  [151,] 0.8670174 0.8720832 0.8728759 #>  [152,] 1.1632360 1.2035173 1.2868663 #>  [153,] 0.7982974 0.8172268 0.9093389 #>  [154,] 1.0446572 1.0794367 1.0796821 #>  [155,] 0.9029054 0.9106181 0.9183151 #>  [156,] 0.6729970 0.6761152 0.6999705 #>  [157,] 0.5537485 0.5983074 0.6087225 #>  [158,] 0.8796216 0.8955899 0.9405777 #>  [159,] 0.5542437 0.5748991 0.5770680 #>  [160,] 0.7668428 0.7690245 0.7778064 #>  [161,] 0.9047549 0.9522901 0.9524642 #>  [162,] 0.5027847 0.5308820 0.5434084 #>  [163,] 0.6479294 0.6847252 0.7137218 #>  [164,] 0.7242509 0.7268542 0.7373931 #>  [165,] 0.7370592 0.7677097 0.7992110 #>  [166,] 1.9502480 2.0111256 2.0198937 #>  [167,] 0.7443786 0.7661672 0.7679560 #>  [168,] 0.5895402 0.6034850 0.6286596 #>  [169,] 0.6871256 0.6905980 0.7020928 #>  [170,] 1.1109406 1.1741394 1.1746722 #>  [171,] 0.9941630 1.0172669 1.0247274 #>  [172,] 0.7431499 0.7616241 0.7633365 #>  [173,] 0.8276626 0.8726855 0.9044331 #>  [174,] 0.7687062 0.7960681 0.8310626 #>  [175,] 0.5744978 0.6264381 0.6364805 #>  [176,] 1.3139367 1.3232516 1.3589856 #>  [177,] 0.6111662 0.6119760 0.6212473 #>  [178,] 0.5533607 0.5536723 0.5771549 #>  [179,] 0.6542798 0.6957337 0.7238303 #>  [180,] 1.2334182 1.3155532 1.3167313 #>  [181,] 0.9181595 0.9513068 1.0428560 #>  [182,] 0.4950644 0.5141321 0.5154608 #>  [183,] 1.0450778 1.0475363 1.0483896 #>  [184,] 0.6063223 0.6070422 0.6122005 #>  [185,] 0.7360616 0.7407173 0.7536132 #>  [186,] 1.3058292 1.3675616 1.3725652 #>  [187,] 0.9209025 1.0277810 1.0339269 #>  [188,] 0.9260017 0.9481268 0.9497012 #>  [189,] 0.5253391 0.5330216 0.5381897 #>  [190,] 0.6143721 0.6309250 0.6480596 #>  [191,] 0.6122223 0.6845038 0.7090331 #>  [192,] 0.6212270 0.6576281 0.6621340 #>  [193,] 0.6516693 0.6668527 0.6700372 #>  [194,] 1.0750118 1.1563175 1.2109666 #>  [195,] 0.6307483 0.6882874 0.6970944 #>  [196,] 0.7590535 0.7673836 0.7744016 #>  [197,] 0.7605488 0.8051347 0.8065421 #>  [198,] 1.1873621 1.1932767 1.2056174 #>  [199,] 0.7711025 0.7790149 0.8012529 #>  [200,] 0.8779847 0.8791614 0.9051302 #>  [201,] 0.9120787 0.9168882 0.9464818 #>  [202,] 0.5719519 0.5720624 0.6229036 #>  [203,] 0.6493921 0.6546668 0.6599532 #>  [204,] 0.9002558 0.9509223 1.1482165 #>  [205,] 0.7960288 0.8136613 0.8261979 #>  [206,] 0.6044941 0.6070589 0.6718546 #>  [207,] 0.9494009 0.9585080 0.9915248 #>  [208,] 0.8238857 0.8317165 0.8434381 #>  [209,] 0.6756450 0.6878511 0.6931200 #>  [210,] 0.8119662 0.8219370 0.8258990 #>  [211,] 0.6586246 0.6818205 0.6861361 #>  [212,] 0.7436005 0.7739651 0.8068857 #>  [213,] 1.3341580 1.3475955 1.4051255 #>  [214,] 0.9609064 0.9614240 0.9648808 #>  [215,] 0.8067750 0.8160625 0.8691089 #>  [216,] 0.6689080 0.6772701 0.6962160 #>  [217,] 0.6580374 0.6853561 0.7136437 #>  [218,] 0.8549515 0.8584638 0.8603363 #>  [219,] 0.5389702 0.5604288 0.5644134 #>  [220,] 0.6231950 0.6593750 0.6636397 #>  [221,] 0.5644134 0.5723067 0.5872864 #>  [222,] 0.5562837 0.5671209 0.5906728 #>  [223,] 0.5026097 0.5280532 0.5460916 #>  [224,] 0.7060663 0.7523342 0.7632513 #>  [225,] 1.8507579 1.9381838 1.9525321 #>  [226,] 1.3653848 1.3896894 1.4255102 #>  [227,] 0.6492431 0.6731910 0.6747093 #>  [228,] 0.7495244 0.7516260 0.7525038 #>  [229,] 0.4990704 0.5932704 0.5933715 #>  [230,] 0.5669233 0.5712443 0.5900002 #>  [231,] 1.4030384 1.4369526 1.5208006 #>  [232,] 0.8445866 0.8491987 0.8721703 #>  [233,] 0.5094536 0.5788502 0.5793361 #>  [234,] 1.4166771 1.4385922 1.4535064 #>  [235,] 0.7019943 0.7171121 0.7331643 #>  [236,] 0.8140444 0.8538536 0.8582279 #>  [237,] 1.1477721 1.2326455 1.2390279 #>  [238,] 1.3060753 1.3757269 1.3839004 #>  [239,] 0.9445358 0.9701583 0.9807711 #>  [240,] 1.0516568 1.0630269 1.2673339 #>  [241,] 0.7353660 0.7403702 0.7912786 #>  [242,] 0.9843740 1.0415641 1.0553185 #>  [243,] 1.5615210 1.5654394 1.5744028 #>  [244,] 0.9898642 1.0053122 1.0108916 #>  [245,] 0.5893182 0.6121428 0.6243114 #>  [246,] 0.7533257 0.7558493 0.8585418 #>  [247,] 1.2060349 1.2186076 1.2201346 #>  [248,] 1.0883098 1.0980705 1.1041264 #>  [249,] 0.9177641 0.9525647 0.9630318 #>  [250,] 0.5259184 0.5455230 0.5533702 #>  [251,] 0.8576273 0.9437003 0.9456348 #>  [252,] 0.9041692 0.9297149 0.9445358 #>  [253,] 0.5116427 0.5722728 0.5730537 #>  [254,] 1.0688909 1.0894495 1.0944852 #>  [255,] 1.3900947 1.3955144 1.4270262 #>  [256,] 0.3918550 0.6143721 0.6283656 #>  [257,] 0.5799811 0.5834543 0.6102191 #>  [258,] 1.1092711 1.1462620 1.1530904 #>  [259,] 0.6637275 0.6818205 0.7601675 #>  [260,] 2.1472598 2.1503143 2.1672077 #>  [261,] 0.7089310 0.7439559 0.7466682 #>  [262,] 0.7143473 0.7531176 0.7908699 #>  [263,] 0.4993182 0.5089328 0.5423577 #>  [264,] 0.7000241 0.7057413 0.8073339 #>  [265,] 0.8052669 0.8561612 0.8775474 #>  [266,] 0.6770949 0.6872663 0.6989044 #>  [267,] 0.6363446 0.6740300 0.6792747 #>  [268,] 1.1412029 1.1751241 1.1854588 #>  [269,] 1.4133150 1.4401786 1.4927530 #>  [270,] 0.6731436 0.6972399 0.7101802 #>  [271,] 1.1769214 1.1911566 1.2325993 #>  [272,] 0.7748718 0.7796817 0.7822587 #>  [273,] 0.8793521 0.9014907 0.9384892 #>  [274,] 1.0073981 1.0627908 1.0761362 #>  [275,] 0.7179524 0.7769136 0.8518891 #>  [276,] 0.7633021 0.7940111 0.8468385 #>  [277,] 0.6996683 0.7120415 0.7737661 #>  [278,] 0.8462994 0.8736568 0.8744169 #>  [279,] 0.6783000 0.7063332 0.7107740 #>  [280,] 0.6792460 0.7239071 0.7348849 #>  [281,] 0.6224645 0.6772389 0.6965748 #>  [282,] 1.4275174 1.5237720 1.5350356 #>  [283,] 0.6295668 0.6557622 0.6671393 #>  [284,] 0.6033843 0.6401907 0.6851574 #>  [285,] 0.5562710 0.5693826 0.6038095 #>  [286,] 1.2853045 1.2909092 1.3054776 #>  [287,] 0.8418873 0.8475316 0.8570370 #>  [288,] 0.8056846 0.8118974 0.8527024 #>  [289,] 1.1605014 1.1672260 1.1892437 #>  [290,] 0.9041223 0.9306600 0.9462159 #>  [291,] 0.9910072 1.0190788 1.0252513 #>  [292,] 0.6433834 0.6496541 0.6587996 #>  [293,] 1.0604940 1.0766211 1.0780729 #>  [294,] 0.6592084 0.6966104 0.7334273 #>  [295,] 0.8710764 0.8905054 0.8928492 #>  [296,] 0.9028032 0.9065294 0.9079794 #>  [297,] 0.6258706 0.6635144 0.6864124 #>  [298,] 0.7271780 0.7330105 0.7442200 #>  [299,] 0.8998651 0.9797945 0.9978461 #>  [300,] 1.2215189 1.2806819 1.2954142 #>  [301,] 0.7889160 0.8011830 0.8098317 #>  [302,] 0.8229658 0.8477743 0.8857514 #>  [303,] 0.6596025 0.6889408 0.6976423 #>  [304,] 0.7501109 0.7600914 0.7839866 #>  [305,] 0.5307682 0.5493606 0.5688138 #>  [306,] 0.8348537 0.8460951 0.8491451 #>  [307,] 0.9192392 0.9206716 0.9581853 #>  [308,] 1.2380763 1.2507313 1.2546318 #>  [309,] 1.4306581 1.4469327 1.4735292 #>  [310,] 0.5509211 0.5584842 0.5834624 #>  [311,] 0.6645706 0.7427029 0.7565974 #>  [312,] 1.2065844 1.2184426 1.2454157 #>  [313,] 0.7559337 0.7614495 0.8282192 #>  [314,] 0.6519606 0.7104065 0.7326048 #>  [315,] 0.7355316 0.7812902 0.7858902 #>  [316,] 0.5717735 0.6068737 0.6141087 #>  [317,] 0.7468442 0.8174970 0.8468385 #>  [318,] 1.2157032 1.3095829 1.3195471 #>  [319,] 0.8907907 0.9391681 0.9736789 #>  [320,] 0.9068240 0.9070257 0.9282815 #>  [321,] 0.8183321 0.8254262 0.8352011 #>  [322,] 0.4738849 0.5004424 0.5306581 #>  [323,] 0.8668632 0.8912814 0.9187819 #>  [324,] 1.0439796 1.1304929 1.1364221 #>  [325,] 0.7599053 0.7943087 0.8388594 #>  [326,] 0.6157495 0.6439662 0.6543230 #>  [327,] 0.9440879 0.9580779 0.9684575 #>  [328,] 1.0809166 1.2025574 1.2430314 #>  [329,] 0.5420836 0.5621113 0.5651727 #>  [330,] 0.8107453 0.8672233 0.9023864 #>  [331,] 1.1285757 1.1432340 1.1561201 #>  [332,] 1.0402659 1.0770539 1.1141089 #>  [333,] 0.8849987 0.8955136 0.9009360 #>  [334,] 1.6233873 1.6572656 1.6713053 #>  [335,] 0.8489651 0.8593914 0.8620302 #>  [336,] 1.3197595 1.3390509 1.4050303 #>  [337,] 1.1480885 1.1555499 1.1750559 #>  [338,] 0.9818919 0.9910708 1.0035932 #>  [339,] 0.6527750 0.6908080 0.7391648 #>  [340,] 0.8914381 0.8979544 0.9232636 #>  [341,] 0.8757164 0.8807456 0.9074952 #>  [342,] 0.7390066 0.7445755 0.7451193 #>  [343,] 1.0094688 1.0458080 1.0677334 #>  [344,] 0.6417010 0.6850243 0.6860650 #>  [345,] 1.3538794 1.3622425 1.4072020 #>  [346,] 0.5981006 0.6200927 0.6318031 #>  [347,] 0.5675008 0.5688138 0.5888992 #>  [348,] 0.6644753 0.6772389 0.6821687 #>  [349,] 0.9847888 1.0232543 1.0293496 #>  [350,] 0.5613036 0.5642968 0.5843134 #>  [351,] 0.7744191 0.7776508 0.7992106 #>  [352,] 0.6655567 0.6709798 0.6810637 #>  [353,] 0.8122013 0.8505356 0.9099505 #>  [354,] 1.2512400 1.2679739 1.2711033 #>  [355,] 0.6102191 0.6375190 0.6426245 #>  [356,] 1.2276157 1.2294125 1.2427264 #>  [357,] 0.7446557 0.7576892 0.7720241 #>  [358,] 1.0853451 1.1078239 1.1705869 #>  [359,] 1.0386830 1.0446697 1.0766794 #>  [360,] 0.5343922 0.5575167 0.5757539 #>  [361,] 0.6399345 0.6411021 0.7014822 #>  [362,] 1.1373012 1.1584417 1.1740224 #>  [363,] 0.9995085 1.0119672 1.0175240 #>  [364,] 1.0249946 1.0747538 1.1792550 #>  [365,] 1.1081429 1.1838380 1.1932367 #>  [366,] 0.6000272 0.6313197 0.6379585 #>  [367,] 1.7315685 1.7436104 1.7661646 #>  [368,] 1.1240254 1.1516781 1.1579079 #>  [369,] 0.8396742 0.8415651 0.8457602 #>  [370,] 0.4763999 0.4831543 0.4896841 #>  [371,] 0.7213202 0.7532505 0.7706185 #>  [372,] 1.0232564 1.0294525 1.0356628 #>  [373,] 1.1697379 1.2227356 1.2284700 #>  [374,] 0.9522645 0.9526135 0.9875826 #>  [375,] 0.9575479 0.9578350 0.9979808 #>  [376,] 0.5335267 0.5388320 0.5506560 #>  [377,] 0.6792690 0.7032686 0.7442284 #>  [378,] 0.7737526 0.8285434 0.8419918 #>  [379,] 0.5469780 0.5694609 0.5803641 #>  [380,] 0.5669643 0.5720090 0.6036496 #>  [381,] 0.9428875 0.9594152 0.9763409 #>  [382,] 1.4589602 1.5267878 1.6385632 #>  [383,] 1.4188356 1.4669902 1.5236695 #>  [384,] 0.5139913 0.5300007 0.5636265 #>  [385,] 0.8114705 0.8487271 0.8622160 #>  [386,] 0.7365476 0.7366390 0.7763828 #>  [387,] 0.6928888 0.7151810 0.7316367 #>  [388,] 0.5758167 0.6166287 0.6547692 #>  [389,] 0.6487750 0.6585494 0.6611389 #>  [390,] 0.6984857 0.7703549 0.7748322 #>  [391,] 0.8806777 0.8950047 0.9272294 #>  [392,] 0.8222361 0.8944686 0.8999436 #>  [393,] 0.9649994 1.0335970 1.0350927 #>  [394,] 0.4959959 0.5089328 0.5139913 #>  [395,] 0.5300007 0.5310863 0.5392615 #>  [396,] 1.0913406 1.1194264 1.1755497 #>  [397,] 0.6900101 0.7689482 0.7985211 #>  [398,] 0.7086801 0.7184794 0.7364559 #>  [399,] 1.0855535 1.1027961 1.1220239 #>  [400,] 0.6801160 0.7193060 0.7367775 #>  [401,] 0.7965398 0.8241728 0.8324946 #>  [402,] 0.6270664 0.6271318 0.6649897 #>  [403,] 1.4510563 1.4919071 1.4923994 #>  [404,] 0.5845292 0.6033843 0.6228606 #>  [405,] 0.6589417 0.6637824 0.6842062 #>  [406,] 1.3418803 1.4008843 1.4383354 #>  [407,] 0.5977933 0.6170210 0.6539151 #>  [408,] 0.6118877 0.6127120 0.6282198 #>  [409,] 1.1049739 1.1338504 1.1611406 #>  [410,] 0.7038719 0.7190755 0.7516721 #>  [411,] 0.6545217 0.6749312 0.6770384 #>  [412,] 1.1140211 1.1357632 1.1738578 #>  [413,] 0.7493347 0.7499347 0.7751219 #>  [414,] 0.9795737 0.9983973 1.0608146 #>  [415,] 0.5602669 0.5641600 0.6546015 #>  [416,] 0.9437846 0.9679796 0.9900458 #>  [417,] 0.7194078 0.7631110 0.7695631 #>  [418,] 0.7805549 0.7835263 0.8371556 #>  [419,] 1.0786330 1.1023920 1.1267497 #>  [420,] 0.6898594 0.6956952 0.6983772 #>  [421,] 0.6258706 0.6675928 0.6778480 #>  [422,] 0.6511615 0.6692200 0.6824507 #>  [423,] 0.4950644 0.4959959 0.5192774 #>  [424,] 1.3295334 1.3809517 1.3831408 #>  [425,] 1.1481709 1.1499757 1.1518067 #>  [426,] 0.7446557 0.8081136 0.8356350 #>  [427,] 1.6867220 1.7053934 1.7206814 #>  [428,] 1.6155038 1.6323294 1.6636268 #>  [429,] 0.7774635 0.7860690 0.7990225 #>  [430,] 0.5113486 0.5192774 0.5327646 #>  [431,] 0.6445894 0.7019929 0.7432338 #>  [432,] 0.7346032 0.7522343 0.7660418 #>  [433,] 1.0484148 1.1543184 1.1630710 #>  [434,] 0.5926376 0.6009060 0.6480377 #>  [435,] 0.7886300 0.7897156 0.8013524 #>  [436,] 1.3626763 1.3932010 1.4069584 #>  [437,] 0.9044331 0.9446703 0.9456106 #>  [438,] 0.4927931 0.5240904 0.5317098 #>  [439,] 1.9483314 2.0493457 2.0861344 #>  [440,] 1.0127104 1.0391522 1.0666581 #>  [441,] 0.9457559 0.9670991 0.9776869 #>  [442,] 0.8721690 0.8991376 0.9502043 #>  [443,] 0.8528781 0.9105811 0.9540319 #>  [444,] 1.0777910 1.0786844 1.1031867 #>  [445,] 0.6116102 0.6120008 0.6276581 #>  [446,] 0.5183166 0.5449901 0.5574918 #>  [447,] 0.6274558 0.6583335 0.6642511 #>  [448,] 0.9026205 0.9068415 0.9438680 #>  [449,] 0.6209100 0.6268624 0.6346661 #>  [450,] 0.8829641 0.9473373 0.9731372 #>  [451,] 1.0168904 1.0495126 1.0676963 #>  [452,] 0.4760712 0.4799574 0.4836364 #>  [453,] 0.5840279 0.5861725 0.5899931 #>  [454,] 0.8069900 0.8477105 0.8558730 #>  [455,] 0.6139989 0.6226119 0.6256543 #>  [456,] 0.6920488 0.7073627 0.7649418 #>  [457,] 1.2283494 1.2320287 1.2448765 #>  [458,] 0.6137302 0.6165380 0.6181989 #>  [459,] 0.5846692 0.5883466 0.5985974 #>  [460,] 0.7219062 0.7266422 0.8435259 #>  [461,] 1.6168582 1.6591971 1.7270331 #>  [462,] 0.6242651 0.6251247 0.6269816 #>  [463,] 0.8424933 0.8508811 0.8773799 #>  [464,] 1.3871085 1.3974444 1.3998351 #>  [465,] 1.2357396 1.2480079 1.2614243 #>  [466,] 0.9957900 1.1006883 1.1878073 #>  [467,] 0.5527917 0.5589439 0.5621113 #>  [468,] 0.6280803 0.6893450 0.7013837 #>  [469,] 0.9713862 0.9770688 0.9861885 #>  [470,] 0.6078971 0.6176918 0.6582535 #>  [471,] 1.1605758 1.1763594 1.1792365 #>  [472,] 0.8995302 0.9180643 0.9722368 #>  [473,] 0.9731372 1.0676963 1.0740310 #>  [474,] 1.3327472 1.3434420 1.3741180 #>  [475,] 0.6757017 0.6937195 0.7041362 #>  [476,] 0.7576597 0.7609775 0.7707032 #>  [477,] 0.7901394 0.8035105 0.8147662 #>  [478,] 1.2406065 1.2761574 1.3183553 #>  [479,] 0.9065294 1.0125706 1.0731268 #>  [480,] 1.1487808 1.1633230 1.2339874 #>  [481,] 0.8030590 0.8298260 0.8427695 #>  [482,] 0.7320925 0.7500443 0.7855120 #>  [483,] 0.9537708 0.9581853 0.9640365 #>  [484,] 0.6315301 0.6623171 0.6857979 #>  [485,] 0.7230904 0.7750667 0.7796817 #>  [486,] 0.5796161 0.6158295 0.6611464 #>  [487,] 0.6270664 0.6432395 0.6592110 #>  [488,] 0.7269873 0.7331500 0.7542764 #>  [489,] 0.8624518 0.8895518 0.9277277 #>  [490,] 0.5582877 0.5589439 0.5811327 #>  [491,] 1.0750118 1.2096126 1.2332852 #>  [492,] 0.4782221 0.4824820 0.5212923 #>  [493,] 0.8744169 0.8935366 0.9115665 #>  [494,] 1.1199982 1.1261918 1.1475864 #>  [495,] 0.5758492 0.6000041 0.6153740 #>  [496,] 0.5595248 0.6052552 0.6081441 #>  [497,] 0.5046312 0.5123870 0.5137168 #>  [498,] 0.7812902 0.8426154 0.8459388 #>  [499,] 1.4490418 1.5023846 1.5057847 #>  [500,] 0.7523016 0.7536638 0.7744003 #>  [501,] 0.6721133 0.6887497 0.6899483 #>  [502,] 0.5517230 0.5692347 0.5998091 #>  [503,] 0.6465671 0.7104065 0.7245225 #>  [504,] 0.8899266 0.9091325 0.9186296 #>  [505,] 0.5641600 0.5690021 0.6009382 #>  [506,] 0.7907186 0.8087014 0.8430620 #>  [507,] 1.5964243 1.6120608 1.6605650 #>  [508,] 1.0424609 1.1137578 1.1149779 #>  [509,] 0.6469981 0.7010315 0.7665944 #>  [510,] 1.0389758 1.0831000 1.1385285 #>  [511,] 0.7054018 0.7135783 0.7254580 #>  [512,] 0.5474476 0.5613995 0.6184255 #>  [513,] 0.6420831 0.6527750 0.6950245 #>  [514,] 0.9125845 0.9250797 1.0503629 #>  [515,] 0.6053125 0.6385613 0.7085052 #>  [516,] 1.4595301 1.4619206 1.4760775 #>  [517,] 0.9332849 0.9458437 0.9522901 #>  [518,] 0.9003681 0.9184817 0.9345236 #>  [519,] 0.5247262 0.5299595 0.5785076 #>  [520,] 0.5884917 0.5892043 0.6260530 #>  [521,] 0.5302915 0.5430944 0.5634972 #>  [522,] 0.4951433 0.5143447 0.5238277 #>  [523,] 1.3366888 1.4206230 1.4242778 #>  [524,] 0.9069627 0.9184273 0.9472754 #>  [525,] 0.7973543 0.8024687 0.8238624 #>  [526,] 1.0305299 1.0580209 1.0831076 #>  [527,] 0.6312986 0.6625668 0.6799052 #>  [528,] 0.8496878 0.8574301 0.8743399 #>  [529,] 0.5965561 0.6006650 0.6731910 #>  [530,] 0.6112533 0.6182160 0.6213176 #>  [531,] 0.7085881 0.7308206 0.7519080 #>  [532,] 0.8070152 0.8295380 0.8406213 #>  [533,] 0.7214474 0.7643214 0.8043606 #>  [534,] 1.0489231 1.0581104 1.0857662 #>  [535,] 0.9911055 1.0094659 1.0128532 #>  [536,] 0.5285471 0.6155733 0.6360513 #>  [537,] 0.8055882 0.8285330 0.8443057 #>  [538,] 0.6203033 0.6311789 0.6396758 #>  [539,] 0.9569054 1.0082869 1.0181748 #>  [540,] 0.5832722 0.5850173 0.5967275 #>  [541,] 0.8253817 0.8528781 0.8619526 #>  [542,] 0.6821660 0.6915113 0.6955817 #>  [543,] 0.9884314 0.9990343 1.0312263 #>  [544,] 0.7460579 0.7648062 0.7717953 #>  [545,] 2.4380557 2.4516208 2.5632269 #>  [546,] 0.8885582 0.9109562 0.9575484 #>  [547,] 0.7812691 0.8021242 0.8152349 #>  [548,] 1.1342310 1.2620959 1.2667164 #>  [549,] 1.5600826 1.6048183 1.6863758 #>  [550,] 0.7975347 0.8012555 0.8056514 #>  [551,] 0.9515224 0.9619603 0.9764781 #>  [552,] 0.7159880 0.7350472 0.7737528 #>  [553,] 0.9588939 0.9721769 0.9947036 #>  [554,] 0.6579810 0.6871051 0.7073870 #>  [555,] 0.7567643 0.7618281 0.7677097 #>  [556,] 1.0817990 1.1067940 1.1153158 #>  [557,] 1.0030763 1.0034151 1.0094429 #>  [558,] 0.8801319 0.8967558 0.9219853 #>  [559,] 0.8172268 0.8201722 0.8747833 #>  [560,] 1.3608051 1.3698061 1.4096958 #>  [561,] 1.7947352 1.7972440 1.8033650 #>  [562,] 0.7616962 0.7786477 0.8110551 #>  [563,] 1.0238433 1.0291866 1.0325735 #>  [564,] 1.0289438 1.0667453 1.0783074 #>  [565,] 0.7941744 0.8645611 0.8737544 #>  [566,] 0.8596353 0.9098411 0.9143801 #>  [567,] 0.8931020 0.9276351 0.9435096 #>  [568,] 0.6594034 0.6870356 0.7018498 #>  [569,] 0.6505192 0.7335737 0.7361051 #>  [570,] 0.5608120 0.5836678 0.6009060 #>  [571,] 1.0063940 1.0107478 1.0161158 #>  [572,] 0.5981006 0.6000968 0.6448901 #>  [573,] 0.5875227 0.6083403 0.6090624 #>  [574,] 0.6309820 0.6610108 0.7413337 #>  [575,] 0.5980412 0.6011523 0.6098387 #>  [576,] 0.6036565 0.6085941 0.6281833 #>  [577,] 0.6998219 0.7189313 0.7298523 #>  [578,] 0.7143577 0.7228846 0.7329266 #>  [579,] 0.7151785 0.7429111 0.7856487 #>  [580,] 0.6405043 0.6830694 0.7231203 #>  [581,] 0.7015230 0.7074047 0.7313586 #>  [582,] 0.8566631 0.8607260 0.8915208 #>  [583,] 0.5905117 0.5965576 0.7027993 #>  [584,] 0.7217556 0.7472388 0.7967956 #>  [585,] 0.7462996 0.7555763 0.7764521 #>  [586,] 0.7585694 0.8718832 0.8797578 #>  [587,] 0.6928888 0.7065641 0.7230491 #>  [588,] 1.2578741 1.2856431 1.3282280 #>  [589,] 0.6056369 0.6222813 0.6290408 #>  [590,] 0.8043655 0.8050062 0.8293938 #>  [591,] 0.6776934 0.7209430 0.7673836 #>  [592,] 0.7775299 0.8277650 0.8389083 #>  [593,] 0.6968093 0.7762795 0.7877617 #>  [594,] 0.8319589 0.8684673 0.8691323 #>  [595,] 0.8277955 0.8351717 0.9224350 #>  [596,] 0.5359034 0.5525529 0.5630849 #>  [597,] 1.1185308 1.1202992 1.1751241 #>  [598,] 0.7650320 0.7755034 0.7762722 #>  [599,] 0.8921344 0.9229777 0.9459966 #>  [600,] 0.6084595 0.6642393 0.6794963 #>  [601,] 1.4637212 1.4655820 1.4715731 #>  [602,] 0.5266748 0.5297800 0.5389702 #>  [603,] 1.0644465 1.0681083 1.0963822 #>  [604,] 0.6759270 0.6776376 0.7101626 #>  [605,] 0.6635144 0.7171871 0.7427029 #>  [606,] 0.7038824 0.7127943 0.7257850 #>  [607,] 0.9747025 1.0086137 1.0476083 #>  [608,] 0.7084283 0.7304847 0.7580970 #>  [609,] 0.5499720 0.5587320 0.5667027 #>  [610,] 0.6073935 0.6101844 0.6125747 #>  [611,] 0.7697175 0.7737661 0.8175333 #>  [612,] 0.9816158 1.0136113 1.0750224 #>  [613,] 0.6493921 0.6645706 0.6920953 #>  [614,] 0.7460579 0.7524293 0.7592296 #>  [615,] 0.9052035 0.9189366 0.9337663 #>  [616,] 0.9903341 1.0310717 1.0415703 #>  [617,] 0.7002338 0.7160551 0.7238143 #>  [618,] 0.5422210 0.5523603 0.5749789 #>  [619,] 0.5806831 0.5950626 0.6020274 #>  [620,] 0.7431499 0.7446519 0.7466325 #>  [621,] 0.7801156 0.7906224 0.7928261 #>  [622,] 0.4571718 0.4788163 0.4896841 #>  [623,] 0.5722359 0.5840035 0.5856147 #>  [624,] 0.6773270 0.6983681 0.7073627 #>  [625,] 0.7229052 0.7262058 0.7268669 #>  [626,] 0.5388320 0.5392800 0.5665673 #>  [627,] 0.6315301 0.6345876 0.6379527 #>  [628,] 0.6268704 0.6313197 0.6480212 #>  [629,] 0.6132035 0.6276946 0.6641362 #>  [630,] 0.5566877 0.5938258 0.6282618 #>  [631,] 0.6624597 0.6921329 0.7564284 #>  [632,] 0.7790665 0.7799198 0.7958258 #>  [633,] 1.2856431 1.3025946 1.3246774 #>  [634,] 0.8064338 0.8344930 0.8348227 #>  [635,] 0.6649457 0.6694920 0.6928133 #>  [636,] 0.6971110 0.6988748 0.7182672 #>  [637,] 1.0861979 1.0994565 1.1109406 #>  [638,] 0.5048390 0.5652759 0.6271935 #>  [639,] 0.7295984 0.7299064 0.7493347 #>  [640,] 0.7283112 0.7729619 0.7730474 #>  [641,] 0.9329231 0.9371240 0.9690409 #>  [642,] 0.7862455 0.7898964 0.8012564 #>  [643,] 0.6928172 0.6961450 0.6999705 #>  [644,] 0.6595776 0.6776011 0.6832561 #>  [645,] 1.2423895 1.2448084 1.2501161 #>  [646,] 1.3043140 1.3052383 1.3073046 #>  [647,] 0.5340513 0.6086245 0.6745353 #>  [648,] 0.9647538 0.9654690 0.9757838 #>  [649,] 0.5650986 0.5689224 0.5773049 #>  [650,] 0.6511615 0.6623936 0.6649538 #>  [651,] 0.7866159 0.7960681 0.8135464 #>  [652,] 0.7049189 0.7650321 0.7973543 #>  [653,] 0.6389843 0.7090666 0.7136445 #>  [654,] 1.0944852 1.1662023 1.1880775 #>  [655,] 1.0648674 1.1033200 1.1253501 #>  [656,] 0.6584535 0.6785228 0.6794963 #>  [657,] 0.9172325 0.9465065 0.9674182 #>  [658,] 0.6122223 0.6223933 0.6830694 #>  [659,] 0.8449573 0.8614030 0.8687098 #>  [660,] 0.6054812 0.6823537 0.6890844 #>  [661,] 1.6477417 1.6783399 1.6876652 #>  [662,] 0.5553054 0.6289610 0.6487750 #>  [663,] 1.6934208 1.7120017 1.7583392 #>  [664,] 0.9720290 0.9746382 0.9767777 #>  [665,] 0.8803269 0.8849354 0.9014850 #>  [666,] 1.3354724 1.3572080 1.4083841 #>  [667,] 0.6049058 0.6167259 0.6283656 #>  [668,] 0.8515147 0.8639935 0.8986000 #>  [669,] 0.5290280 0.5464929 0.5641103 #>  [670,] 0.7082061 0.7280220 0.7727202 #>  [671,] 0.6309466 0.6395175 0.6546015 #>  [672,] 0.5878734 0.5929182 0.6361165 #>  [673,] 1.1902024 1.2309474 1.2614243 #>  [674,] 0.6152631 0.6184569 0.6334068 #>  [675,] 0.5746486 0.5751557 0.5963565 #>  [676,] 0.9947444 0.9997612 1.0127800 #>  [677,] 0.5697753 0.5800062 0.5915363 #>  [678,] 1.4170730 1.4655820 1.4747782 #>  [679,] 0.7309348 0.7523342 0.7543425 #>  [680,] 0.5420239 0.5449901 0.5555561 #>  [681,] 0.6820729 0.6943187 0.7317721 #>  [682,] 0.5832637 0.6399320 0.6445031 #>  [683,] 0.6991929 0.7070268 0.7093720 #>  [684,] 0.6566259 0.6707388 0.6863370 #>  [685,] 1.0266883 1.0474047 1.0667754 #>  [686,] 1.0605629 1.0771376 1.1065876 #>  [687,] 0.5595248 0.5616835 0.6604220 #>  [688,] 0.8424384 0.8581480 0.9075294 #>  [689,] 0.8078257 0.8636061 0.8941118 #>  [690,] 0.7652245 0.7668050 0.7809216 #>  [691,] 1.3786007 1.3860232 1.4068675 #>  [692,] 1.0963822 1.1371235 1.1629369 #>  [693,] 0.8722985 0.8735101 0.9413469 #>  [694,] 0.7622941 0.8035495 0.8449203 #>  [695,] 0.8244025 0.8348925 0.8426757 #>  [696,] 0.7555486 0.7564447 0.7620255 #>  [697,] 0.5788434 0.5835435 0.6043202 #>  [698,] 0.5464929 0.5513263 0.5532031 #>  [699,] 0.8662375 0.8768483 0.8827640 #>  [700,] 0.5836809 0.6040855 0.6401907 #>  [701,] 1.1785261 1.1844731 1.2047518 #>  [702,] 1.1081669 1.1203876 1.1255613 #>  [703,] 0.5317098 0.5366333 0.5613036 #>  [704,] 0.5173171 0.5383150 0.5532031 #>  [705,] 1.2643901 1.2871995 1.3157405 #>  [706,] 0.6743772 0.6776011 0.7160065 #>  [707,] 0.9430587 0.9537286 0.9546622 #>  [708,] 1.3864219 1.3970543 1.4605423 #>  [709,] 0.7751219 0.7989762 0.8013473 #>  [710,] 1.0689328 1.0767431 1.1477055 #>  [711,] 0.6994499 0.7098818 0.7406813 #>  [712,] 0.6643553 0.6875067 0.7042062 #>  [713,] 0.6359134 0.6450686 0.6486984 #>  [714,] 0.7372373 0.7481638 0.7519759 #>  [715,] 0.6721808 0.6775636 0.7424801 #>  [716,] 1.0272136 1.0528160 1.0636992 #>  [717,] 0.8031479 0.8056514 0.8251296 #>  [718,] 0.6351291 0.6481963 0.6541843 #>  [719,] 0.6410768 0.6439662 0.6465671 #>  [720,] 1.0748914 1.1004006 1.1197772 #>  [721,] 0.5839463 0.6235266 0.6562015 #>  [722,] 0.4551768 0.4953395 0.5348268 #>  [723,] 0.6909867 0.7000725 0.7240655 #>  [724,] 1.3866049 1.4468936 1.5388840 #>  [725,] 0.8476780 0.8912523 0.9556811 #>  [726,] 0.5602669 0.5830679 0.5874651 #>  [727,] 0.6000968 0.6149498 0.6645661 #>  [728,] 1.1915336 1.2361743 1.2570138 #>  [729,] 0.7053258 0.7128485 0.7259300 #>  [730,] 1.1123623 1.1732293 1.1775466 #>  [731,] 1.0511261 1.1231204 1.1312745 #>  [732,] 0.7645115 0.8189921 0.8258356 #>  [733,] 0.9277230 1.0214017 1.0280879 #>  [734,] 0.5653199 0.5729784 0.5866291 #>  [735,] 0.6577769 0.6807385 0.7197091 #>  [736,] 1.3646809 1.3791333 1.3807062 #>  [737,] 0.6582412 0.6667944 0.6707388 #>  [738,] 0.6921021 0.7107049 0.7229416 #>  [739,] 1.5784631 1.6514853 1.6863758 #>  [740,] 0.4749970 0.5163155 0.5465192 #>  [741,] 0.4923841 0.5060121 0.5318796 #>  [742,] 1.0036438 1.0108916 1.0280879 #>  [743,] 1.1831637 1.2324847 1.2596230 #>  [744,] 0.9127632 0.9616110 0.9729310 #>  [745,] 0.7923019 0.8015691 0.8082349 #>  [746,] 0.8666915 0.8709788 0.8743161 #>  [747,] 0.9176180 0.9296598 0.9419744 #>  [748,] 1.2452692 1.2746458 1.2919311 #>  [749,] 0.6072905 0.6122613 0.6167621 #>  [750,] 0.4609694 0.5066279 0.5090920 #>  [751,] 1.6434905 1.6632271 1.6849481 #>  [752,] 0.6703013 0.6803826 0.6880636 #>  [753,] 0.5860378 0.5975860 0.6232435 #>  [754,] 0.8994115 0.9152979 0.9211005 #>  [755,] 0.6123553 0.6539718 0.6787642 #>  [756,] 0.6240293 0.6319519 0.6467976 #>  [757,] 1.3523685 1.3600315 1.4593063 #>  [758,] 0.5937527 0.6477116 0.6523346 #>  [759,] 0.6218585 0.6460467 0.6587175 #>  [760,] 0.6364366 0.6558380 0.7334931 #>  [761,] 0.7195084 0.7560812 0.8308699 #>  [762,] 0.7369758 0.7446926 0.7636894 #>  [763,] 0.9344510 0.9355892 0.9397830 #>  [764,] 0.5298044 0.5392800 0.5431640 #>  [765,] 0.5909622 0.6243114 0.6450686 #>  [766,] 1.6327838 1.6330025 1.7089291 #>  [767,] 0.5380140 0.5884373 0.6223950 #>  [768,] 0.5593679 0.5754324 0.6241751 #>  [769,] 0.6538422 0.6619037 0.6672861 #>  [770,] 0.6689080 0.6812871 0.6816278 #>  [771,] 0.8276477 0.8512571 0.8766063 #>  [772,] 0.4758197 0.4767461 0.5202870 #>  [773,] 0.9965473 1.0041634 1.0730882 #>  [774,] 0.6532362 0.6603803 0.6699460 #>  [775,] 0.6869596 0.7412534 0.7530484 #>  [776,] 0.7709582 0.7759131 0.7763828 #>  [777,] 0.6379017 0.6433928 0.6697096 #>  [778,] 0.7536888 0.7557746 0.7828015 #>  [779,] 0.5824584 0.6079141 0.6375190 #>  [780,] 0.6149668 0.6261544 0.7160825 #>  [781,] 0.7763070 0.7820847 0.7872038 #>  [782,] 0.6294432 0.6503048 0.6881636 #>  [783,] 0.5016489 0.6234320 0.6254747 #>  [784,] 0.6399474 0.6401261 0.6832231 #>  [785,] 1.1015957 1.1288465 1.1488068 #>  [786,] 0.5669891 0.5998220 0.6231276 #>  [787,] 0.7883275 0.7892713 0.7973221 #>  [788,] 0.5419123 0.5420137 0.5570377 #>  [789,] 0.8611402 0.9064415 0.9241243 #>  [790,] 0.8033320 0.8698397 0.8796216 #>  [791,] 0.5988874 0.6067250 0.6103840 #>  [792,] 1.2256647 1.2313957 1.2764845 #>  [793,] 0.7176377 0.7605488 0.7612538 #>  [794,] 0.9536600 0.9929627 1.0445312 #>  [795,] 0.9796900 1.0597170 1.0831000 #>  [796,] 0.8777243 0.8828951 0.8845534 #>  [797,] 0.7025061 0.7101247 0.7587702 #>  [798,] 0.5086942 0.5104340 0.5137168 #>  [799,] 0.8906128 0.9054204 0.9084045 #>  [800,] 0.5718666 0.5913504 0.6125747 #>  [801,] 0.6508148 0.6890844 0.7028661 #>  [802,] 0.8141381 0.8267549 0.8401677 #>  [803,] 0.8986362 0.9677371 0.9720295 #>  [804,] 0.9027513 0.9899814 1.0034432 #>  [805,] 0.4502617 0.4669336 0.4725159 #>  [806,] 0.4932947 0.5235438 0.5381897 #>  [807,] 0.5423459 0.5559947 0.5722359 #>  [808,] 0.4632449 0.5033851 0.5106418 #>  [809,] 0.7063200 0.7147622 0.7164802 #>  [810,] 0.8575515 0.8698569 0.8868136 #>  [811,] 0.6088049 0.6399474 0.6479672 #>  [812,] 0.9229391 0.9327977 0.9400535 #>  [813,] 0.8666419 0.9085322 0.9241455 #>  [814,] 0.7767065 0.7789866 0.8086738 #>  [815,] 0.5479582 0.5983709 0.6149975 #>  [816,] 0.6034885 0.6619905 0.6795628 #>  [817,] 0.9843500 1.0041469 1.0094451 #>  [818,] 0.8036083 0.8611970 0.8680793 #>  [819,] 0.7275773 0.7414069 0.7801449 #>  [820,] 1.1638148 1.1657730 1.1721312 #>  [821,] 0.7190755 0.7303991 0.7557436 #>  [822,] 0.4522626 0.4553322 0.4661259 #>  [823,] 0.6723862 0.6776362 0.6885498 #>  [824,] 0.7391064 0.7688748 0.7724739 #>  [825,] 1.1078239 1.1118214 1.1569926 #>  [826,] 0.6739336 0.6761099 0.6812441 #>  [827,] 1.2447158 1.2678078 1.3052383 #>  [828,] 0.5793361 0.6272453 0.6645661 #>  [829,] 0.8367852 0.9092342 0.9401202 #>  [830,] 0.5465192 0.5720090 0.5723429 #>  [831,] 0.5980987 0.6335071 0.6778480 #>  [832,] 0.6460467 0.6589417 0.6711503 #>  [833,] 0.8137142 0.8186626 0.8192502 #>  [834,] 0.5546792 0.5577760 0.5603743 #>  [835,] 0.6289987 0.6437861 0.6480596 #>  [836,] 0.9782846 0.9891303 0.9976114 #>  [837,] 0.7826937 0.7827092 0.8489309 #>  [838,] 0.7346989 0.7386148 0.7553015 #>  [839,] 0.8498970 0.8852816 0.9208081 #>  [840,] 0.6978090 0.7062420 0.7257850 #>  [841,] 1.2971047 1.3722458 1.3860549 #>  [842,] 1.2353786 1.2643321 1.3196464 #>  [843,] 0.6970224 0.7239683 0.7358528 #>  [844,] 1.2397633 1.2545929 1.3021556 #>  [845,] 1.4118446 1.4214224 1.4276886 #>  [846,] 0.5587320 0.6012280 0.6090624 #>  [847,] 0.6098717 0.6271394 0.6966325 #>  [848,] 0.5840967 0.6328512 0.6556320 #>  [849,] 0.9536600 1.0198319 1.0242330 #>  [850,] 0.7222484 0.7440939 0.8201654 #>  [851,] 0.6015509 0.7171121 0.7317721 #>  [852,] 1.1911566 1.2612892 1.2756279 #>  [853,] 0.7795227 0.7995326 0.8000752 #>  [854,] 0.6794466 0.7348007 0.7626052 #>  [855,] 0.7785923 0.7983602 0.8126951 #>  [856,] 1.0716722 1.1220239 1.1350803 #>  [857,] 0.5844723 0.6413160 0.6932105 #>  [858,] 0.9596029 0.9658352 1.0512043 #>  [859,] 0.9215420 0.9369488 0.9857730 #>  [860,] 0.6814400 0.7089310 0.7159281 #>  [861,] 2.1169433 2.2276850 2.2858875 #>  [862,] 0.6408273 0.6556408 0.6654889 #>  [863,] 0.5525965 0.6165380 0.6567438 #>  [864,] 0.8059440 0.8257599 0.8274954 #>  [865,] 0.7375237 0.7645244 0.7689319 #>  [866,] 0.8999506 0.9203052 0.9273934 #>  [867,] 0.8373929 0.8552950 0.8599408 #>  [868,] 0.6861106 0.7227019 0.7443509 #>  [869,] 1.7076407 1.7431961 1.7436737 #>  [870,] 0.5826457 0.5845292 0.5850173 #>  [871,] 0.5668413 0.5685677 0.5686485 #>  [872,] 0.8034523 0.8249747 0.8656542 #>  [873,] 0.7536888 0.7614495 0.8248537 #>  [874,] 0.9976114 1.0341369 1.0533417 #>  [875,] 0.7550046 0.8198506 0.8285677 #>  [876,] 1.2413043 1.3384262 1.4363712 #>  [877,] 1.0648674 1.1037583 1.1793108 #>  [878,] 0.6673624 0.6762065 0.6795402 #>  [879,] 1.0793788 1.0821099 1.0931346 #>  [880,] 1.2604578 1.2880500 1.3101289 #>  [881,] 0.7187877 0.7293104 0.7328386 #>  [882,] 1.0162807 1.0212694 1.0332621 #>  [883,] 0.9444630 0.9643181 1.0059463 #>  [884,] 1.1091533 1.1504010 1.2512875 #>  [885,] 1.4046518 1.4139353 1.4767549 #>  [886,] 0.9170144 0.9408661 0.9850122 #>  [887,] 1.0928033 1.1078880 1.1136164 #>  [888,] 0.5797273 0.6081441 0.6172652 #>  [889,] 1.0963341 1.1110153 1.1383010 #>  [890,] 1.8825100 1.9450530 1.9645563 #>  [891,] 0.5909919 0.6402065 0.6447596 #>  [892,] 0.6546611 0.6622724 0.6677879 #>  [893,] 0.7811180 0.7963860 0.8225970 #>  [894,] 0.7475364 0.7583879 0.7636585 #>  [895,] 1.2601639 1.2811644 1.3057946 #>  [896,] 0.6053124 0.6225652 0.6243334 #>  [897,] 0.8465604 0.8697144 0.9104842 #>  [898,] 0.7367310 0.7440757 0.7593849 #>  [899,] 0.7393178 0.7941744 0.7990139 #>  [900,] 0.6426245 0.6584867 0.6636397 #>  [901,] 0.7364018 0.7698627 0.7718675 #>  [902,] 0.5066279 0.5546792 0.5749789 #>  [903,] 0.5529867 0.5771227 0.6045019 #>  [904,] 0.6014405 0.6076802 0.6240113 #>  [905,] 0.9263953 0.9302724 0.9369111 #>  [906,] 0.5690021 0.6076802 0.6276581 #>  [907,] 0.6759745 0.6851152 0.7006895 #>  [908,] 0.8609544 0.8890778 0.9090889 #>  [909,] 0.5136548 0.5499720 0.5712443 #>  [910,] 1.0337955 1.2032274 1.2139102 #>  [911,] 1.6889554 1.7496498 1.7677428 #>  [912,] 0.8520836 0.8527024 0.8645113 #>  [913,] 0.5537487 0.5856147 0.5890551 #>  [914,] 0.7557852 0.8320219 0.8482414 #>  [915,] 1.2192054 1.2948874 1.2955347 #>  [916,] 0.7075229 0.7213202 0.7586926 #>  [917,] 0.8570854 0.8571299 0.9671274 #>  [918,] 0.5788502 0.5905245 0.6172361 #>  [919,] 0.8081136 0.8334772 0.8631659 #>  [920,] 0.7277235 0.7464441 0.7483410 #>  [921,] 1.0019375 1.1071935 1.2923924 #>  [922,] 0.5012179 0.5133923 0.5185992 #>  [923,] 0.6972918 0.6998751 0.7373383 #>  [924,] 0.7903779 0.8481681 0.8768483 #>  [925,] 1.3246813 1.3955676 1.4204929 #>  [926,] 0.5187006 0.5223342 0.5336450 #>  [927,] 0.9468222 1.0337955 1.0780478 #>  [928,] 0.6514178 0.6604855 0.7395184 #>  [929,] 0.5746486 0.6687237 0.6740300 #>  [930,] 0.8766107 0.9556346 0.9604897 #>  [931,] 0.5729784 0.5766698 0.5775135 #>  [932,] 0.6749312 0.6918091 0.7262024 #>  [933,] 0.5975735 0.6012438 0.6070589 #>  [934,] 0.7690294 0.7924678 0.8094153 #>  [935,] 0.5862509 0.5901062 0.5963565 #>  [936,] 0.9485185 0.9600454 0.9688503 #>  [937,] 0.5719519 0.5720404 0.5757539 #>  [938,] 1.0400997 1.0507355 1.0624628 #>  [939,] 2.2311904 2.2388232 2.2549713 #>  [940,] 0.6640577 0.7139003 0.7160551 #>  [941,] 0.7912100 0.7992525 0.8331350 #>  [942,] 1.1737212 1.2099465 1.2391633 #>  [943,] 0.9363660 0.9715823 1.0058715 #>  [944,] 0.6528212 0.6609002 0.6668270 #>  [945,] 0.6287559 0.6388338 0.6578835 #>  [946,] 0.8854436 0.9107902 0.9297149 #>  [947,] 0.6429045 0.6513095 0.6667942 #>  [948,] 1.2345329 1.3021556 1.3096045 #>  [949,] 0.5573242 0.5843882 0.6170210 #>  [950,] 0.5632083 0.6015140 0.6142913 #>  [951,] 0.6794435 0.6918461 0.7478415 #>  [952,] 0.6266756 0.6277823 0.6295668 #>  [953,] 0.8615821 0.8733239 0.8875742 #>  [954,] 0.8662437 0.8781633 0.9093570 #>  [955,] 0.5698056 0.5872974 0.6054637 #>  [956,] 1.0537708 1.0608419 1.0704494 #>  [957,] 0.9386995 0.9631346 0.9668490 #>  [958,] 0.7056644 0.7956879 0.8021242 #>  [959,] 0.5425024 0.5587766 0.5653471 #>  [960,] 0.7123423 0.7295629 0.7372800 #>  [961,] 0.5980761 0.6056369 0.6557622 #>  [962,] 1.0585797 1.1098669 1.1397769 #>  [963,] 0.7294133 0.7747363 0.8351717 #>  [964,] 0.6543626 0.6762065 0.6859374 #>  [965,] 0.6495312 0.6575381 0.6725052 #>  [966,] 0.5140561 0.5153236 0.5526906 #>  [967,] 0.8013127 0.8020129 0.8046520 #>  [968,] 0.5540353 0.5715610 0.5816951 #>  [969,] 0.8122013 0.8151658 0.8195475 #>  [970,] 0.9025474 0.9169267 0.9181825 #>  [971,] 1.5392087 1.6021518 1.6364698 #>  [972,] 1.5445028 1.5510452 1.5582574 #>  [973,] 1.3713515 1.4489616 1.4999050 #>  [974,] 0.6950494 0.7257511 0.7258441 #>  [975,] 0.5432063 0.5937221 0.6013011 #>  [976,] 1.0136141 1.0177023 1.0332294 #>  [977,] 0.5540142 0.6061396 0.6200927 #>  [978,] 1.2970223 1.3232899 1.3238604 #>  [979,] 0.5084350 0.5572687 0.5664905 #>  [980,] 0.6441954 0.6451331 0.7410959 #>  [981,] 0.8345976 0.8640873 0.8643575 #>  [982,] 0.5200349 0.5214415 0.5675699 #>  [983,] 0.4905980 0.5118830 0.5126071 #>  [984,] 0.9424002 0.9578976 0.9580455 #>  [985,] 0.6335071 0.6410853 0.6712112 #>  [986,] 0.6535593 0.6616308 0.6987469 #>  [987,] 0.6594034 0.6851152 0.6950203 #>  [988,] 1.0030853 1.0258981 1.0582660 #>  [989,] 1.0863144 1.1073601 1.1783669 #>  [990,] 0.5680138 0.5881248 0.5904526 #>  [991,] 0.9542606 0.9586735 0.9820426 #>  [992,] 0.8809300 0.9032323 0.9148037 #>  [993,] 1.0680350 1.0967341 1.1061104 #>  [994,] 1.0725720 1.0853451 1.1164731 #>  [995,] 0.6975846 0.6991929 0.7229736 #>  [996,] 1.1172669 1.1454392 1.2023678 #>  [997,] 0.6853561 0.6952864 0.7162719 #>  [998,] 1.0406571 1.1005976 1.1225681 #>  [999,] 0.5657586 0.5665673 0.5883466 #> [1000,] 1.4582265 1.5333960 1.5526239 #>   # Find the 10 approximate nearest neighbors tof_find_knn(     .data = sim_data,     k = 10,     distance_function = \"euclidean\", ) #> $neighbor_ids #>         [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] #>    [1,]  447  901  214  817  332  621  498  448  672   400 #>    [2,]  496  920  826  687  570  610  950  104  753   455 #>    [3,]  679  862  290  873   82  224  413  482  313   760 #>    [4,]  378  605   94  311  333  619  528  329  613   562 #>    [5,]  900  554  975  355  486  456  624   71   39   608 #>    [6,]  312  645  691  551  463  273  249   74  710    68 #>    [7,]  803  218  884   87  247  733   20  981  120   537 #>    [8,]  536   87  120  990  617  940  156  719  294   411 #>    [9,]  706  404  644  426  284  947  559  870  381   477 #>   [10,]  924  593  731  116  960  342  995  391   81    84 #>   [11,]  584  696  361   53  936  115  201  899  422    13 #>   [12,]  176  483  730  307  996  365  912  776  948   569 #>   [13,]  682  115   53  284  700  650  784  475   45   192 #>   [14,]  175  579  863  429  830  404  227  380  662   706 #>   [15,]  634  212  296  824  187  196  747  131  670   796 #>   [16,]  591   79  670  106  758  211  824  187  328   196 #>   [17,]  624  953  554  460  694    5  923  511  486   900 #>   [18,]  114  687  888  302   77  229  950  759  335   676 #>   [19,]  178   24  656  587  982  145  590  135  230   635 #>   [20,]  279   87  810  377  304   57  940    8  392   803 #>   [21,]  858  992  857  804  636  264  714   88  916   832 #>   [22,]  380  270  662   50  851  833  202  400  997   672 #>   [23,]  970  598  562   94  467  395  170  329  378    32 #>   [24,]  656   19  135  635  178  145  476  819  197   632 #>   [25,]   41  254  318  517  664  654  108  137  244    70 #>   [26,]  473  413  129  451  387  930  679  639  313   580 #>   [27,]  769  573  462   72  119  977  715  118  572   179 #>   [28,]  738  339  314  567  110  513  892  105  525   470 #>   [29,]  875  898  220  447  242  586  685  756  577   901 #>   [30,]  902  806  127  805  189  677  750   65  250   871 #>   [31,]  985  150  934  346  797  831  987  495  547   907 #>   [32,]  467  253  395  986  139  384  223  922  619   891 #>   [33,]  226  852  300  911  641  333  378  943  271   433 #>   [34,]  933  734  629  449  512  816  677  470  206   110 #>   [35,]  771  668  276  617  171  792  200  583  437   294 #>   [36,]  182  256  772  394  626  602  540  423  522   452 #>   [37,]  801  611  178   19  132  195  349  999  847   768 #>   [38,]  763  920  112  335  941  150  797   76  958   676 #>   [39,]  117  355  779  608  945  456    5  257  488   503 #>   [40,]  192  366  700  628  961   63  784  649  124   904 #>   [41,]   25  254  318  517  108  137  654  664  244    70 #>   [42,]  628  151  390  361  774  696  584   64  649    40 #>   [43,]  199  511  339  207  883  130  738  314  470    80 #>   [44,]  514  531  837  448  173  348  578  942  215   581 #>   [45,]  682  770  422  651  650   13  899  431  746   700 #>   [46,]  350   66  913  800  750  455  697  926  638   753 #>   [47,]  294   96  823  120  218  594  200  719  275     8 #>   [48,]  583  502  292  453  791  411  279  777  617   940 #>   [49,]  466  981   85  123  608  275  488  813  218   144 #>   [50,]  400  217  672  690  851   22  498   55  389   501 #>   [51,]  112  744  435  866  879  299  797  842  478    38 #>   [52,]  729  968  932  892  540  257  749  221  263   975 #>   [53,]  115   13  361  589  475  422   11  650  682   584 #>   [54,]  742  535  733  489  359  839  300  598  785   231 #>   [55,]  690  672  721  896  758  966  935  834  211   815 #>   [56,]  624   71  673  554  558  100  375  456  701   460 #>   [57,]  304  279  642  932  732  303  228   20  965   774 #>   [58,]  597  268  666  948  436  327  844  293   86   319 #>   [59,]  937  808   75  901  486  959  577  822  740   447 #>   [60,]  389  529  851  997  235  681  217  711  662   501 #>   [61,]  257  967  767  961  589  390  779   64  361   115 #>   [62,]  707  910  794  921   93  849  396  479  353   957 #>   [63,]  649  904  931  233  749  366  379  734   40   512 #>   [64,]  390  366  283  767  774  968  961  257   61    42 #>   [65,]  902  157  848  805  834  127   30  806  618   259 #>   [66,]  750   46  805  806  913  127  189  926  298   697 #>   [67,]  118  688  241  980  141  965  246  775  963   304 #>   [68,]  262  551  914  613  216  344  974  236  893   203 #>   [69,]  809  840  606  151  853  595  816  206  897   493 #>   [70,]  219  552  854  156  575  487  275  517  167   990 #>   [71,]  456  554    5  558  117   39  355  460  608   624 #>   [72,]  831   27  643  462  977  346  122  572  769   674 #>   [73,]  321  188  429  339  513  838   14  470  175   579 #>   [74,]  463  273  695  216  659  778  160  477  138   893 #>   [75,]  983  822  808  937   59  698  360  521  133   285 #>   [76,]  958  860  941  547  718  985  572   31  755   150 #>   [77,]  302  288  111   18  293  114  781  684  327   335 #>   [78,]   98  570  581  408  578  753  713  519  453   455 #>   [79,]   16  833  328  962  510  670  591  187  270    22 #>   [80,]  199  634  989   43  354  883  207  469  738    15 #>   [81,]  278  853  169  995  342  116  445  712  671   944 #>   [82,]  482  862  272  760  835    3  679  639  108   190 #>   [83,]  146  166  368  399  651  472  236  201  337   936 #>   [84,]  991  630  169  445  287  599  943  960  906   320 #>   [85,]  813  608  488   39  123   49  466  117  558   355 #>   [86,]  288  293  867  126  450  508  781  386  793   930 #>   [87,]   20    8  279  536  940  574  377  617  810   803 #>   [88,]  610  638  857  832  950  697  800  398  496   455 #>   [89,]  490  263  968  283  322  922  602  142  395   749 #>   [90,]  171  392  500  397  238  992  255  377  720   882 #>   [91,]  607  585  912  111   77  850  684  653  781   515 #>   [92,]  133  376  143  983  698  798  846  221  530   452 #>   [93,]  374  957  128  818  406  707   62  259  278   419 #>   [94,]  562    4  329  619  378  203  311  598  922   605 #>   [95,]  835  209  760  138  778  752  667   82  999   893 #>   [96,]  812  533  518   47  594  200  275  218  294   981 #>   [97,]  261  755  718  420  872  320  630  960  297   860 #>   [98,]   78  519  453  502  285  704  408  777  570   723 #>   [99,]  301  371  183  595  606  809  432  527  840   351 #>  [100,]  615  582  249  161  900  637  608  945  355     5 #>  [101,]  446  848  703  230  484  157  834  177  245   497 #>  [102,]  897  963  228  809  303  980  595  151  444   840 #>  [103,]  923  205  184  430  596  326  741  900  167   219 #>  [104,]  920  532  763  610    2   88  643  496  500    72 #>  [105,]  567  993  940  810   28  503  525  889  732   314 #>  [106,]  824  557   16  591  665  758  265  670  196   211 #>  [107,]  745  325  163  148  632  197  420  712  342   544 #>  [108,]  482  620  443  552  272   82  485  137  401   862 #>  [109,]  172  352  831  658  388  826    2  907  191    31 #>  [110,]  838  513  512  652  449  734  629   34  525    28 #>  [111,]   77  988  327   18  820  268  302   91  850   114 #>  [112,]  866  941  744  842   38  958  141   51   76   714 #>  [113,]  316  515  653  761  569  684  164  177  101   325 #>  [114,]  737  687   18  434  684  888  229  302  850   765 #>  [115,]   53   13  361  475  589  682  650   11  422    61 #>  [116,]  995  924  593  432   81  353  468  916  683   538 #>  [117,]  779   39  355  967  488  257  945  767  592   456 #>  [118,]   67  980  141  688  241  965  769   27  683   828 #>  [119,]  573  149  421  769  977  891   27  297  572   159 #>  [120,]  536  823  719    8  990  294  503   47  952   326 #>  [121,]  457  289  927  557  204  131  187  849  921   479 #>  [122,]  831  552  674   72  631  352  643  878  797   109 #>  [123,]  608  823  275  120   85   49  205  981  594   575 #>  [124,]  347  906  379  233  305  505  162  192  979   904 #>  [125,]  363  476  135  547  819  825   24  934  291   481 #>  [126,]  867  335  150  793  293   86  934   31  907   998 #>  [127,]  618  805   30  902  677  806  933  189   65    66 #>  [128,]  406   93  374  957  818  951  136  859  553   259 #>  [129,]  725   26  473  451  442  410  315  214  546   585 #>  [130,]  740  870  937  808  492  175  822  669  830   511 #>  [131,]  494  296  634  864   15  633  824  289  266   791 #>  [132,]  847  145  600  660  178  780  700  801  185   576 #>  [133,]   92  698  983  184  669  376  492   75  808   822 #>  [134,]  600  819  145  647  505  780  979  132  811   635 #>  [135,]  656  476   24  145  178  780   19  481  819   568 #>  [136,]  640  277  790  417  252  611  306  829  185   155 #>  [137,]  482  689  108  862  341  517   82  224  308     3 #>  [138,]   95  893  349  463  504  778  695   74  209   760 #>  [139,]  384  223  955  329  467  394  253  602  395   986 #>  [140,]  432  116  371  916  636  858  995   21  468    99 #>  [141,]  118  718  688   67  941  872  980  769  241   958 #>  [142,]  149  384  922   36  329   89  609  139  223   602 #>  [143,]  376  798   92  750  983  805  530  446  926   189 #>  [144,]  464   85  466  558   49  925  813  248  608   637 #>  [145,]  780  656  178  135  132  600   24  847  134    19 #>  [146,]   83  166  651  201  472  911  440  399  936   368 #>  [147,]  206  843  493  555  165  604  816  868  425   449 #>  [148,]  903  420  944  342  163  755  107  520  712   544 #>  [149,]  297  119  573  891  922  142  421  619   89   159 #>  [150,]   31  934  985  126  797  987  335  547   76   831 #>  [151,]   42  628  897   69  102  906  774  904  303   649 #>  [152,]  663  895  213  796   73  343  513  429  564   165 #>  [153,]  919  426  475  886  650  160  706    9  559   856 #>  [154,]  418  214  837  215  625  894  621  836  815   442 #>  [155,]  859  307  164  484  908  745  951  632  611   848 #>  [156,]  854  574  536  990    8  537   70  462  120   643 #>  [157,]   65  211  848  259  484  902  101  806  834   805 #>  [158,]  539  174  340  369  811  565  306  790  671   277 #>  [159,]  726  438  903  623  909  618  379  497  119   609 #>  [160,]  650  477  273  216  236  919  475  153  284    74 #>  [161,]  582  100  615  205  249  673  123  689  517   608 #>  [162,]  671  979  505  811  305  647  415  124  347   445 #>  [163,]  420  712  107  342  148  635  819  632  745   239 #>  [164,]  316  267  113  484  101  155  761  515  571   908 #>  [165,]  843  868  206  604  147  863  762   34  555   816 #>  [166,]   83  146  736  472  911  431  556  236  651   330 #>  [167,]  326  777  103  294  631  823  990  723  430   219 #>  [168,]  669  822  222  458  202  966  360  758  788   808 #>  [169,]  445  630   84  853   81  979  671  162  906   991 #>  [170,]  970   23  364   68  551  372  262  637  914   526 #>  [171,]  200   35  617  812   90  720  668   96  532    47 #>  [172,]  191  352  109  388  878  401  907  620  693   987 #>  [173,]  531  348  723  514  208   44  408  578  448   437 #>  [174,]  369  790  899  158  539  746  829  252  651   185 #>  [175,]   14  830  863  579  380  130  404  740  542   429 #>  [176,]   12  483  948  912  776  327  597  730   86   409 #>  [177,]  350  245  446  737  316  101  703  680   46   229 #>  [178,]  656   19  145   24  801  982  132  135  999    37 #>  [179,]  715  775  462  397  435  500  744  643   27   866 #>  [180,]  915  317  716  276  883  771  694  989  719   294 #>  [181,]  829  640  746  917  357  695  886  417  611   136 #>  [182,]  772  256   36  626  190  522  741  423  452   394 #>  [183,]  301   99  606  524  296  747  794  595  809   717 #>  [184,]  133  103  741  430  923  698  596  983  975    75 #>  [185,]  277  417  415  132  811  635  576  790  647   847 #>  [186,]  251  953  621  424  625  563  414    1  360    17 #>  [187,]  670  591  634   16  824   79   15  196  510   212 #>  [188,]  321  339   73  460  456  454  554  314   43   558 #>  [189,]  926  750   30  127  222  805   66  931  734   806 #>  [190,]  667  756  182  772  862  280  735  256  596   835 #>  [191,]  172  964  388  352  580  878  949  658  109   208 #>  [192,]  784   40  505  124  305  700  811  584   13   366 #>  [193,]  675  782  929  407  815  521  447  370  713   245 #>  [194,]  978  291  295  286  358  363  938  491  599   319 #>  [195,]  627  721  357  681  501  611  801  947  250   660 #>  [196,]  670  212  677  824  458  634  806  902  591   843 #>  [197,]  544  107   24  420  680  325  909  793  229   497 #>  [198,]  416  393  564   69  652  373   42  449  151   762 #>  [199,]   43  511  207  168  883  469  339   80  470   458 #>  [200,]  171  812   96   47  518  617   35  218  533   294 #>  [201,]  936  696  433   11  361  562  528  422  399    53 #>  [202,]  270  380  822  966  808  360  168  937   22   492 #>  [203,]  961  329  767  589  344  423   94  613  223   142 #>  [204,]  479  849  927  921  747  457  910  794  296   557 #>  [205,]  103  689  923  586  898  123  275  900  161   823 #>  [206,]  816  843  147  449  165  604   34  868  933   512 #>  [207,]  469  354   43  199  579   73  339  175  511    80 #>  [208,]  224  191  735  173  878  514  352  964  826   713 #>  [209,]  760  835   95  667  893  955  216  262  914   752 #>  [210,]  759  509  405  468  802  566  614  857   18   832 #>  [211,]  157  758  806  902   55  484   65  896  259   848 #>  [212,]  196  634  677  824   15   34  670  796  458   296 #>  [213,]  152  895  795  187  962  796  165  429  670   843 #>  [214,]  154    1  894  498  129  332  315  448  837   442 #>  [215,]  836  418  837  267  815  154  281  521  894   935 #>  [216,]  344  477  667  273  160   68  209  770   74   463 #>  [217,]  498   50  851  681  400  389  672  501  997    60 #>  [218,]  981   47  803  120    7  533   96  812    8   275 #>  [219,]  430  575  322  741  394  423   70  602  263   221 #>  [220,]  577  875  901  486  756   29  447   59  898   900 #>  [221,]  263  430  846  741  411  990   92  219  322    89 #>  [222,]  788  669  750  189  168  704  519  791  806    30 #>  [223,]  139  955  384  394  329  467  602  395  487   322 #>  [224,]  735  341  878  862    3  964  208   82  679   191 #>  [225,] 1000  820  436  428  988  676  268  111  509   210 #>  [226,]   33  852  271  641  300  333  433   54  378   742 #>  [227,]  662  928  863  783  429  711   14  896  529   380 #>  [228,]  303  963  809  774  102  965   57  754  897   904 #>  [229,]  888  800  950  350  623  680  687  703  497   759 #>  [230,]  982  680  497  101  703  310  446  587  909   764 #>  [231,]   54  359    7  733  884  742  489  803  785   535 #>  [232,]  431  600  330  651  369  134  480  472  974   440 #>  [233,]  379  904  124   63  347  649  906  931  918   828 #>  [234,]  829  790  337  427  181  252  539  158  174   136 #>  [235,]  997  711  389  529  662   60   22  579  851   559 #>  [236,]  160  475  650  422  551  974   45   68  472   526 #>  [237,]  996  612  349  972  946  590  307  504  481   252 #>  [238,]  392   90  882  792  810  992   20  246  377   993 #>  [239,]  163  632  712  946  635  819  647  252  342   340 #>  [240,]  541  954  956  362  504  272  556  443  481   409 #>  [241,]  980   67  688  118  141  963  965  769  303   775 #>  [242,]  586   29  689  898  875  341  205  224  873   173 #>  [243,]  751  282  286  444   10   84  960  991  885   872 #>  [244,]  839  254  827  489  318  646   23  970   25   742 #>  [245,]  929  177  407  316  446  267  935  101  143   765 #>  [246,]  992  775  392  397  858   67  304  377  118   179 #>  [247,]  743  884    7  803  200  171  812  397  218    90 #>  [248,]  123  608  516  823  915   85  594  719  275   624 #>  [249,]  100  615  582  637  477  161  344  216  945   900 #>  [250,]  871  834  622  722  492  783  830   30  896   627 #>  [251,]  625  270  360  563  621  202  186  400  937   414 #>  [252,]  790  277  829  185  174  136  369  417  946   239 #>  [253,]   32  467  395  986  891  139  922  384  223   619 #>  [254,]  318   25   41  244  646  372  986  517  839   654 #>  [255,]  804   90  858  992  882   21  744  500  246   392 #>  [256,]  522  182  626  768   36  999  772  452  190   667 #>  [257,]   61  767  961  117  967  779  968   39   52   355 #>  [258,]  702  534  692  559  235  560  973  997  711   579 #>  [259,]  157  848  484  818   65  957  951  520  211   101 #>  [260,]   86   58  293  508  597  948  288  126  176   994 #>  [261,]   97  421  420  755  149  891  119  860  159   718 #>  [262,]  914   68  613  209  893  974  344  216  551   955 #>  [263,]  221   89  490  322  602  430  846   36  394   741 #>  [264,]  636  855  832  857  550  804  509   21   88   398 #>  [265,]  874  665  571  106  969  211  557  836  419   761 #>  [266,]  704  502  788  453  519  791  285  865   98   222 #>  [267,]  894  410  245  316  164  315  815  215  929   407 #>  [268,]  436   58  111  327   77  676   18  293  597   948 #>  [269,]  367  942  451  332  448  514  817  242  424   413 #>  [270,]  202  380   22  360  966  822  168  808  937   672 #>  [271,]  403  897  226  102  641  151  535  393  852   963 #>  [272,]  482   82  443  760  108  209  835   95  485   541 #>  [273,]   74  463  160  477  216  650  695  919  886     9 #>  [274,]  799  642  732  754  728  525  889  359  228   373 #>  [275,]  594   96  981   47  533  123  823   70  205   120 #>  [276,]  771  668  583   35  617  437  777  723  294   317 #>  [277,]  185  417  415  640  811  306  790  136  252   611 #>  [278,]   81  712  957  671  342  555  944  169  520   493 #>  [279,]   20  304   87   57  377  810  940   48    8   411 #>  [280,]  756  778  667  190  881  709  873  862  220   760 #>  [281,]  360  521  625  966  865  621   75  935  348   285 #>  [282,]  751  991  943   84  243  287  169  286  599   897 #>  [283,]  968  490   89  922  366  395   64  952  961   322 #>  [284,]  947  682  706  660   13  650    9  404  700   644 #>  [285,]  723  698   98  408  865  519  704   75  348   788 #>  [286,]  978  194  599  320  243   84  478  291  295   991 #>  [287,]  599  991  440  943   84  630  979  528  305   320 #>  [288,]   77  302  781   86  293  450  386  930  793   912 #>  [289,]  557  927  106  457  131  665  874  824  849    16 #>  [290,]  873    3  773  862  313  679  586  760  709    82 #>  [291,]  295  938  363  194  319  125  860  547  420   978 #>  [292,]  638  791   48  453  697  398   88  455  502   864 #>  [293,]  288  335  302  126   86   77  508  867  793    18 #>  [294,]  823   47  326  719  120    8  167  317  617   536 #>  [295,]  319  291  938  358  547  860  194  363  125   934 #>  [296,]  747  717   15  212  864  524  385  301  479   131 #>  [297,]  149  891  922  619  119  573  769  421  605   253 #>  [298,]   66  353  351  697  913  538  127   46  677   933 #>  [299,]  648  441  986  435  879   32  891  253  605   421 #>  [300,]  742  827  333  226   54  378  489   23  970   244 #>  [301,]   99  183  606  351  527  371  717  524  385   809 #>  [302,]   77  288   18  114  293  335  687  684  781   111 #>  [303,]  228  965  904  828  980  963  774  809   57   649 #>  [304,]  279   57  377   20  965   27  246  118   87   642 #>  [305,]  505  979  811  906  124  162  647  630  192   347 #>  [306,]  417  640  277  565  415  951  868  136  811   185 #>  [307,]  859  730  155  745  632  996  908  569   12   483 #>  [308,]  137  664  689  586  341  517  161   41   25   594 #>  [309,]  345  473   91  288   77  930  450  508  781   302 #>  [310,]  949  587  765  658  387  407  929  230  764   680 #>  [311,]  422    4  528  974  431   94  651  613  605   770 #>  [312,]  645    6  551  249  637   68  691  262  760   615 #>  [313,]  773  709  616  778  679  290  413    3  873   280 #>  [314,]  729  892  339   28  511  738  932   52  503   629 #>  [315,]  894  410  267  815  193  929  442  407  498   787 #>  [316,]  113  515  245  177  164  267  929  407  101   653 #>  [317,]  719  326  694  940  294  729  503  823  314   276 #>  [318,]  254   41   25  646  244  654  372  441  108   986 #>  [319,]  938  295  291  860  934  547  597   76  150   994 #>  [320,]  872  599   97  648  943  287   84  297  605   261 #>  [321,]   73  188  838  542   14  657  175   61  429   339 #>  [322,]  575  423  490  402  263  219   89  394  430   968 #>  [323,]  826    2  763  532  581  352  109  570  496   104 #>  [324,]  336  856  375  919  543  534  153  381  526   657 #>  [325,]  107  776  745  113  566  653  761  197  984   569 #>  [326,]  294  823  167  777  317  103  990  923  719   120 #>  [327,]  776  912  111  566  948   77  653  325  268    18 #>  [328,]   79  962   16  833  705  655  510  690  571   877 #>  [329,]  384  223  139  613  203  142  955   94  467   395 #>  [330,]  431  232  612  472  600  974  893  695  481   746 #>  [331,]  654  693  401  518  122  720  686  797  620   552 #>  [332,]  817  451    1  214  448  269  709  129  616   413 #>  [333,]  378    4  641   94  619  562  605   23  528   598 #>  [334,]  708  595  444   99  897  102  371   69  963   809 #>  [335,]  126  293  150  302   18   31  109  920  687   793 #>  [336,]  324  856  543  375  534  919  153  526  381   657 #>  [337,]  746  829  565  181  899  368  886  174  475    45 #>  [338,]  908  546  757  725  894  315  155  164  410   498 #>  [339,]  314   28   43  738  511  470  188  513  892   199 #>  [340,]  539  991  158  647  169  979  671  369  445   811 #>  [341,]  224  686  878  689  137  401  552  352  208   862 #>  [342,]  712  163  148  391   81  107  420  699  445   924 #>  [343,]  905  416  762  429  115  321   73  361   53   152 #>  [344,]  423  216  955  487  203  223   68  667  477   945 #>  [345,]  309  508  845  748  302  323  172  293  288    77 #>  [346,]  831  421  674   72  495  119   31  572  977   909 #>  [347,]  124  379  906  233  162  538  630  918  305   445 #>  [348,]  408  531  285  723  713  173  521  865  281    75 #>  [349,]  138  504   37  590  695   95  801  917  611   237 #>  [350,]   46  800  888  177  229  950  753  703  455   434 #>  [351,]  385  717  697  298  527  301  432  292  807   913 #>  [352,]  878  172  191  109  826  631  401  122  552   388 #>  [353,]  298  538  468  707  944  995  116  969  520   259 #>  [354,]  469  207   80  895  199   43  187  510  796   579 #>  [355,]  945   39  402    5  117  608  975  257  779   900 #>  [356,]  416  147  584  425  158  604   69  493  905   539 #>  [357,]  195  947  706  682  284  640  886  426  660   404 #>  [358,]  295  491  978  194  363  125  291  994  825   478 #>  [359,]  732  799  535  105  889  592  274  454  728   525 #>  [360,]  625  966  281  521  822   75  202  621  808   937 #>  [361,]   53  115  696  390  628  589   11  584   42    40 #>  [362,]  956  409  481  504  240  541  954  590  612   476 #>  [363,]  125  291  295  946  358  194  319  819  476   491 #>  [364,]  970  925  466  488  170   23  814  598  779    85 #>  [365,]  730  546  908  607  585  725  338  307  821   569 #>  [366,]   40  961   63  749  968  649   64  283  628   904 #>  [367,]  269  451  332  242  942  817  290  413  448   773 #>  [368,]  399  475  936   11  201  153   53  337  115   696 #>  [369,]  174  899  539  790  158  651  232  440  811   252 #>  [370,]  521  935  808  675  966  822  983  492  815   622 #>  [371,]  432  527  840   99  683  809  301  916  828   595 #>  [372,]  646  914  556  262   23  170  613    4  244   254 #>  [373,]  652  525  524  606  198  274  183  799  642   110 #>  [374,]   93  957  128  818  259  707  859  278  484   951 #>  [375,]  381  657  324  919  534  856    9   71  559   153 #>  [376,]  798  143   92  452  722  622  871  133  626   983 #>  [377,]  279  304   20   87  462  397  715  392  643   179 #>  [378,]  333    4   94  605  562  619  641  528   23   311 #>  [379,]  233  347  124  918  904  906  159  538  828    63 #>  [380,]  202   22  270  783  175  662  928   14  830   492 #>  [381,]  657  375  534    9  559   71  644  426  456   321 #>  [382,]  794  479  204  140  921  396  471  183  747    99 #>  [383,]  889  799  274  525  373  359  728  732  564   567 #>  [384,]  139  223  329  955  467  142  253  394  395   602 #>  [385,]  717  351  855  292  864  550  301  471  882   697 #>  [386,]  793  781  867  907  949  450  684  930  288   776 #>  [387,]  580  949  639  964  310  388  787  587  407   191 #>  [388,]  907  949  580  658  191  964  172  568  387   310 #>  [389,]   60  851  529  997  235  217  681  662  711    22 #>  [390,]   64  361  628   42  696   61  774  366  767   589 #>  [391,]  699  924  802  342  593  731   10  116  984   468 #>  [392,]  992  246  377  882   20  238  279  304  810    90 #>  [393,]  416  151   42  696  403  936  198   11  628   584 #>  [394,]  602  955  223   36  139  322  219  423  263   384 #>  [395,]  467  253   32  922  490  619  223  384  139    89 #>  [396,]  794  493  425  853   62   81  116  183  301   747 #>  [397,]  775  179  500  715  744  377  462  246  789   866 #>  [398,]  455  496  570   88  292  753  453  434   46   950 #>  [399,]  526  368  936  543  201  433  814  696  475   856 #>  [400,]  672   50  690   22  217   55  815  498  270   966 #>  [401,]  693  620  352  686  878  172  331  552  987   108 #>  [402,]  575  945  322  355  952  488  423  487  968    39 #>  [403,]  271  393  852  708  198  151  897  226  102    42 #>  [404,]  644  706    9   14  175  959  947  870  284   740 #>  [405,]  468  614  509  857  210  636  593  832  759   802 #>  [406,]  128   93  957  374  818  278  306  136  158   539 #>  [407,]  929  765  245  193  310  782  316  737  949   675 #>  [408,]  348  713  285   98   78  723  983  531  698   519 #>  [409,]  362  590  483  504  867  481  956  386  476   450 #>  [410,]  442  315  267  894  515  725  316  585  821   164 #>  [411,]  990  221    8  536  777  263  846  977  932    48 #>  [412,]  685  701  465  817   29  220  875  673  901   577 #>  [413,]  679  451   26  964    3  735  580  639  313   709 #>  [414,]  563  625  621  281  360  251  865  418  837   883 #>  [415,]  576  162  903  811  185  520  277  726  505   671 #>  [416,]  393  343  762  198  584   11  628  361  696    42 #>  [417,]  277  185  640  306  611  565  415  132  829   811 #>  [418,]  215  154  836  815  837  625  894  267  690   400 #>  [419,]  874  707  265  571  969  849  566  984  665   761 #>  [420,]  163  148  819  635  261   97  903  576  107   544 #>  [421,]  891  119  346  261  495  149  674  297   72   831 #>  [422,]  311  651   53  475  899   45  589  650   13   115 #>  [423,]  772  322  741  596  344   36  575  182  394   430 #>  [424,]  448  465  942  186  621    1  173  685  412   837 #>  [425,]  493  396  147  853   69  555  356  206  606   794 #>  [426,]  706  559  153    9  404  886  284  357  919   947 #>  [427,]  746  337  234  181  829  330  695  886  790   174 #>  [428,]  939  140  405  636  468  509  210  593  804   924 #>  [429,]   14  579  227  863  175  711  830   73  905   706 #>  [430,]  741  221  219  596  263  772  322  184  423   975 #>  [431,]  974  472  651  232  600  330  311   45  770   422 #>  [432,]  371  527  916  683  995  116  840  918  960   351 #>  [433,]  201  936  696  399  852  814  562  641  390   361 #>  [434,]  737  496  114  687  888  350  753  455  570   177 #>  [435,]  179  715  462   72  769  643   27  141  797   299 #>  [436,]  268   58  111 1000  327  676  666  210  225   820 #>  [437,]  976  276  578  723  771  668   35  173  583   716 #>  [438,]  909  609  726  497  982  798  159  576  764   703 #>  [439,]   51  112  744   38  255  866  500  720  397    90 #>  [440,]  287  369  232  528  599  651  311  899  174   134 #>  [441,]  299  986  648   32  253  891  605  467  495   435 #>  [442,]  410  725  894  585  315  267  129  607  515   908 #>  [443,]  272  620  482  108  485   82  987  541  954   401 #>  [444,]  688  102  963  897  980   67  872  241  371   118 #>  [445,]  630  169  979  647  162  347  671   84  305   906 #>  [446,]  101  703  805  497  177  798  143  245  680   230 #>  [447,]  675  901   59  220  875  577  782  193   29   521 #>  [448,]  514  837  942   44    1  173  451  332  621   348 #>  [449,]  816  512  652   34  206  110  649  762  734   933 #>  [450,]  930  781  288  386  867   86  912  793  508   473 #>  [451,]  413  332   26  129  448  514  269  709  817   473 #>  [452,]  376  256  722  622  871  626  798  786  540   768 #>  [453,]  502  704  519   98  791  266  788  583   48   292 #>  [454,]  592  838  525   64  564  390  257  110  779    61 #>  [455,]  398  496  570  753   46  350  434   88  453   530 #>  [456,]   71  554    5  460  558   39  117  355  624   608 #>  [457,]  927  204  289  479  849  921  747  557   15   296 #>  [458,]  168  830  470  670   30  758  669  677  863   196 #>  [459,]  674  752  602  764  522  394  495  568  999   626 #>  [460,]  554  694   17  456  624  558   71    5  188   953 #>  [461,]  876  869  154  214  655  971  601  561    1    50 #>  [462,]  715  643  179   27   72  435  769  854  377   500 #>  [463,]   74  273  778  216  695  138  659  893  477   160 #>  [464,]  144  925  466   85   49  637  364  582  813   558 #>  [465,]  685  412  424   29  875  701  242  716  220   673 #>  [466,]   49  364   85  925  464  488  970  144  813   123 #>  [467,]  395   32  253  223  139  384  922  986  490   329 #>  [468,]  405  509  857  210  832  759  636  593  353   614 #>  [469,]  207  354  199  270   43  579  202  510  251   591 #>  [470,]  629  542  458  513  738  830   34  339  796   863 #>  [471,]  633  717  385  296  882  855  524  183  351   301 #>  [472,]  431  974  330  651  232  236  893  311  613   914 #>  [473,]   26  930  129  585  781  725  607  450  451   309 #>  [474,]  976  942  437  173   44  499  845  531  514   578 #>  [475,]  650   53  422  115   13  236  153   45  160   589 #>  [476,]  135  568   24  656  125  541  752  907  145   954 #>  [477,]  160  216  273  344  650    9  249  644   74   945 #>  [478,]  842  295   76  547  358  885  286  648  860   938 #>  [479,]  204  849  747  921  794  927  910  296  457    62 #>  [480,]  491  612  232  825  481  946  330  125  956   363 #>  [481,]  612  504  135  656  956  541  954  476  362   590 #>  [482,]  272   82  108  443  760  862  137  620    3   209 #>  [483,]  912  176   12  776  569  386  821  409  307   781 #>  [484,]  848  951  157  259  101   65  211  627  164   834 #>  [485,]  495  568  987  459  443  108  620  752  986   272 #>  [486,]  900  975    5   59  220  577  596  870  644   959 #>  [487,]  575  517  223  219  344  955  322  402  394    70 #>  [488,]  779  117  945  402   39  355   85  952  767   598 #>  [489,]  839  742  537  598  244   54  827  970  733    23 #>  [490,]   89  283  263  322  968  395  922  602  467   253 #>  [491,]  825  480  358  125  363  978  956  194  295   599 #>  [492,]  622  740  808  822  722  871  370  250  669   130 #>  [493,]  425  147  555  853  396  206   81  278  843    69 #>  [494,]  588  266  131  883  453  865  502  864  578   704 #>  [495,]  485  831  421  985  459  568  346  674  987    31 #>  [496,]  570  455    2  753  398  434  950  687   88   888 #>  [497,]  703  680  909  438  982  446  230  726  623   798 #>  [498,]  217   50  681  672  400  894  501  315  851     1 #>  [499,]  588  976  494  578  437  474  668  276  771   531 #>  [500,]  397  643  179  715  744  462  104  377  775   532 #>  [501,]  681  721  959  195  672  217  786   22  380   659 #>  [502,]  453  704  519   98  791  266  788   48  583   777 #>  [503,]  952  536  729  940  120  990   39  719  314    52 #>  [504,]  481  590  349  138  612  541  954  362   95   656 #>  [505,]  305  811  979  162  124  192  647  415  906   784 #>  [506,]  833  529  851  711  389  997  655   22  877    60 #>  [507,]  915  248  558  180  144  694  813  460  516    85 #>  [508,]   86  450  998  288  548  930  293  867  345   126 #>  [509,]  832  857  759  636  468  405  210  264  550   614 #>  [510,]   79  833  962  655  506  469  187  328  795   270 #>  [511,]   43  199  314  339  130  729  669  694  168   937 #>  [512,]  449  816  734  110  652   34  649  933  774    63 #>  [513,]  796  110  470  838  738  629  652   28  339    34 #>  [514,]   44  448  531  173  208  942  837  348  451   193 #>  [515,]  653  569  113  684  316  821  761  410  850   776 #>  [516,]  248  594  275  716  533  161  123  205  841    47 #>  [517,]  487   70   25   41  137  575  582  219  344   161 #>  [518,]  812   96  533  200  664  594  275   47  218   841 #>  [519,]  704  788  502  453   98  698  222  285  266   983 #>  [520,]  944  903  538  618  415  162  576  726   65   148 #>  [521,]  370  815  966  935  675  360  281  983   75   822 #>  [522,]  999  768  256  626  764  182   36  982  452   752 #>  [523,]  748  988  724  820  111  836  850   44  215   976 #>  [524,]  183  301  652  296  717  606  212  738  512   110 #>  [525,]  110  799  732  454  564  642   28  652  567   774 #>  [526,]  856  543  919  551  399  236  160  814  475   967 #>  [527,]  828  918  432  371  840  351  538  965  301   807 #>  [528,]  311  641    4   94  378  605  287  422  562   943 #>  [529,]  389  662  711   60  851  997   22  235  506   227 #>  [530,]  753  713  143   92  765  350  798  376  570   177 #>  [531,]  578  348   44  173  408   78  581  514  837   723 #>  [532,]  643  104  323  500  462    2  826   72  377   570 #>  [533,]   96  518  812  594  275  664  981  218   47   841 #>  [534,]  381  559  657  375  258  324  692  560  336   426 #>  [535,]  732   54  359  733  799  228  785   57   64   963 #>  [536,]  990  120    8  574  952  156  503   87  411   940 #>  [537,]  574  854  156  839  489  536  952   32  395   467 #>  [538,]  944  520  918  618  347  379  903  913  527   159 #>  [539,]  158  340  174  369  790  811  252  671  647   565 #>  [540,]   36  452  423  975  741  772   52  961  870   871 #>  [541,]  954  476  240  481  135  272  485  956  443   504 #>  [542,]  629  830  470  863  175  130  838  870   34    14 #>  [543,]  856  526  919  967  324  399  814  153  375   336 #>  [544,]  197  755  623  148  860  420  229  614  107    31 #>  [545,]  474  345  748  976  845  499  523  890  309   323 #>  [546,]  725  821  585  365  338  569  410  129  908   315 #>  [547,]  860  934  985   76   31  150  295  319  958   125 #>  [548,]  930  679  450  508   26  639  998  867  473   580 #>  [549,]  692  887  880  886  603  710  559  534  258   739 #>  [550,]  855  264  832  636  864  509  857  385  351   717 #>  [551,]   68  236  262  526  160  216  312  170  914   637 #>  [552,]  122  878  108   70  631  352  674  219  602   394 #>  [553,]  951  877  833  529  818  896  928  662  506   227 #>  [554,]  460  624  456    5   71   17  694  558  900    39 #>  [555,]  604  868  843  147  493  206  671  162  278   165 #>  [556,]  914  262  372  954  893  240  541  272  209    68 #>  [557,]  289  106  665  874  927  265  849   16  824   864 #>  [558,]  456   71  554  460  813   85   39  608  624   694 #>  [559,]  426    9  706  235  534  381  404  153  692   711 #>  [560,]  657  381  534  258  207  953  375   56  579   469 #>  [561,]  876  328  757  655  461  877  971  571  338   678 #>  [562,]   94  598  589  814   23  378  767    4  203   333 #>  [563,]  414  625  251  591  360  270  621   79  281   469 #>  [564,]  838  454  525  513  110  652  198  390   73   188 #>  [565,]  905  417  306   13  784  682  640  899  158   811 #>  [566,]  984  210  761  759  969  325  327   18  802   699 #>  [567,]  105   28  993  525  314  940  889  810  339   454 #>  [568,]  907  476  485  752  495  388  459  987   31   764 #>  [569,]  653  821  515  113  684  587  776  316  908   585 #>  [570,]  496  455  753   78  398  581    2   98  826   434 #>  [571,]  265  874  164  761  908  419  211  267  484   690 #>  [572,]  958  718  941  755  119   72  610  346  727   920 #>  [573,]  119  149  769   27  977  297  749   89  807   846 #>  [574,]  537  156  854  536  990  952   87    8  120   490 #>  [575,]  322  402  219  487  423  952  394  430  945   223 #>  [576,]  726  415  903  438  982  520  909  159  497   230 #>  [577,]  901  220  959  486   59  447  786  756  875   644 #>  [578,]  531   78   98  723  581  408  348  976  285   437 #>  [579,]   14  175  429  711  227  380  235  863  662   404 #>  [580,]  964  387  639  388  949  191  735  310  658   907 #>  [581,]   78  570  826  434  578  531  713  408  496    98 #>  [582,]  100  249  615  637  161  945  608  344  355   517 #>  [583,]  777  617   48  668  276  502  453   98  771   326 #>  [584,]   11  628  192  361   53   42  762  115   40    13 #>  [585,]  607  725  442  410  821  515  569   91  546   653 #>  [586,]  689  242  873  898  875  205   29  862  290     3 #>  [587,]  310  821   19  230  569  949  982  387  316   113 #>  [588,]  494  499  266  131  578  668  453  864  633   792 #>  [589,]  767  814   53  361  115  203  650  961   61   422 #>  [590,]  504   19  656  587  178  135   24  349   37   476 #>  [591,]  824  670   16  634  168  758  106  458  187   196 #>  [592,]  454  779  117   39  813  257   64  488  503   967 #>  [593,]  924  116  995  405  802  468  391   10  614   916 #>  [594,]  275   96  533   47  823  981  123  205  294   664 #>  [595,]  809   99  606  102  371   69  840  897  963   228 #>  [596,]  741  772  975  430  423  900  756  182  184   103 #>  [597,]   58  319  666  938  948  126  335   86  844   268 #>  [598,]   23  970  562  395   94  467  488  489  402   839 #>  [599,]  287  320   84   97  630  134  991  440  819   445 #>  [600,]  780  847  145  132  134  770  232  431  974   656 #>  [601,]  869  603  217  971  498  880    1  851  678   997 #>  [602,]  394  674  263   36  459  223  955   89  139   219 #>  [603,]  880  710  659  601  217  997  681  498   60   692 #>  [604,]  868  555  843  206  165  784  124  147  192   162 #>  [605,]  619    4  891  922  378  329  384  297   94   311 #>  [606,]  809  301  816  183  652   69   99  512  449   840 #>  [607,]  585   91  725  442  473  365  546  912  410   821 #>  [608,]  123  355   39   85  945    5  900   71  554   117 #>  [609,]  438  798  749  726  452   36  142  909  846   376 #>  [610,]  977  638   88  807  572    2  104  623  920   800 #>  [611,]   37  801  917  195  640  417  627  185  277   136 #>  [612,]  481  946  330  480  504  232  656  135  237   600 #>  [613,]  974  329  770  262  914   68  384  203  311   955 #>  [614,]  405  857  468  950  727  210  755  544  802   800 #>  [615,]  100  249  582  161  900  220  756  596  205   637 #>  [616,]  709  313  787  659  778  773  498  881  129   817 #>  [617,]    8  583  668  771   87   35  294  777  940    48 #>  [618,]  127  805  931  913  520  538  159  926   65   902 #>  [619,]  922  297  605  395  891  253  467  149   94   329 #>  [620,]  401  443  108  987  693  485  482  172   82   878 #>  [621,]  625  360  281  837  521  414  865   75  251   348 #>  [622,]  722  492  871  786  740  250  452  808  376   370 #>  [623,]  800  703  229  159  497  755  950  807  727   913 #>  [624,]  554   17    5  460  900  694  486  923  953   456 #>  [625,]  360  621  281  966  251  521  414  563  270   202 #>  [626,]  256  182  522   36  772  452  768  376  764   999 #>  [627,]  834  896  721  195  250  848  783  484   55   722 #>  [628,]   42  361  390  762  584  649   40  151  366   774 #>  [629,]  470  542   34  734  892  110  838  830  513   738 #>  [630,]  445  169  979  906  305  647   84  347  162   124 #>  [631,]  826  878  122  674  713  352  167  552  626   735 #>  [632,]  745  635  859  107  163   19   24  185  277   819 #>  [633,]  471  131  882  855  717  385  296  588  864   494 #>  [634,]  824   15  212  591  670  196  187   80  458   738 #>  [635,]  819   24  632  420  163  145  656  576   19   185 #>  [636,]  857  264  832  509  405  550  468  855   21   804 #>  [637,]  582  249  100  615  551  161  312  526  945   170 #>  [638,]  697  807  610  913   88  926  292  977   46   455 #>  [639,]  580  387  679  964   82  388  835  752  949   413 #>  [640,]  417  136  829  611  306  277  181  357  185   565 #>  [641,]  333  528  378  562   94  943   42    4  151   201 #>  [642,]  754  732   57  274  799  228  304  525  810   279 #>  [643,]  462  532   72  715  500  179  854  104  122   156 #>  [644,]  870  404  959    9  740  486  947  130  706   975 #>  [645,]  312  760    6  290  873  209  482  556  262   893 #>  [646,]  372  318  254  244  441  556   23  299  827   986 #>  [647,]  979  811  162  505  305  445  671  630  134   415 #>  [648,]  299  441  320  605  891  297  619  872  141   986 #>  [649,]   63  904  233  512  774  816  366  931  449   628 #>  [650,]  160  475  284  682   13  589   45  422  115    53 #>  [651,]  899  431  422   45  311  232  369  746  174   974 #>  [652,]  449  512  110  816  513  606   34  206  838   525 #>  [653,]  515  569  684  113  776  821  316  761  912   850 #>  [654,]  331  693   25   41  401  518  664  254  318   686 #>  [655,]  506  833  510  851   50  328   79  877  400    22 #>  [656,]  135  145   24  178   19  780  476  635  590   600 #>  [657,]  381  375  534  321  560    9  559  456   71    73 #>  [658,]  765  949  388  310  764  907  680  191  109   580 #>  [659,]  681  501  195   74  463  917  881  357  603   778 #>  [660,]  947  682  700  132  847  284  784  871  250   801 #>  [661,]  731   10  924  391  751  844   81  342  699   593 #>  [662,]  227  529  711  783  928  380  896   22   14   389 #>  [663,]  152  861  895  213  796  564  513   73  373   198 #>  [664,]  533  518  275  594   25  841  308   96  981    41 #>  [665,]  265  557  874  106  836  177  350   46  969   864 #>  [666,]  844   58  597  948  699  802  436  938  268   391 #>  [667,]  190  756  280  772  182  209  760  216  835   256 #>  [668,]  771  276   35  583  617  792  777  437   48   453 #>  [669,]  168  222  822  492  808  983  788  133  698   130 #>  [670,]  196  591  824  458   16  187  634  212  758   106 #>  [671,]  162  647  979  811  712  445  505  305  169   415 #>  [672,]  400   50  815   55  690  501  721   22  966   370 #>  [673,]  161  615   56  685  100  412  249  582  701   465 #>  [674,]  602  459  122  346  394  495  831  421   72   631 #>  [675,]  193  782  370  521  815  447  786  929  983   935 #>  [676,]   18  614  687  210  763  857  509  950  335   405 #>  [677,]  127  806  902   30  933  196   34  189   66   805 #>  [678,]  757  971  876  338  877  217  498  851  601    60 #>  [679,]    3  639   82  413  862  313  580  964  224   290 #>  [680,]  497  703  909  230  982  229  764  765  446   658 #>  [681,]  501  721  195  659  217  389  498   60  672   851 #>  [682,]   13  284  660  947  700  650  784   45  115   706 #>  [683,]  916  714  960  727  432  918  718  995  118   371 #>  [684,]  653  515  114  569  113  781  316  821  737   850 #>  [685,]  465  412   29  875  220  701  673  624  615   577 #>  [686,]  341  401  693  224  620  137  878  352  845   331 #>  [687,]  888  950  114  800  229   18    2  496  434   350 #>  [688,]   67  980  241  118  141  444  872  866  963   775 #>  [689,]  586  205  137  862  242  898  341  224  873   875 #>  [690,]   55  400   50  672  894  815   22  966  721   211 #>  [691,]  710    6  312  701  880  249  463  778  673   615 #>  [692,]  549  887  559  880  534  258  886  603  426   235 #>  [693,]  401  331  620  352  172  686  878  987  654   552 #>  [694,]  460  554   17  317  624  729  511  314    5   456 #>  [695,]   74   45  463  746  273  330  138  357  893    37 #>  [696,]  936  361  201   11  390   53   42  589  115   628 #>  [697,]  913  807  638   46  351  926   88   66  298   292 #>  [698,]  133  983  285   92   75  519  788  669  184   704 #>  [699,]  391  802  984  342  107  844  593  210  924   325 #>  [700,]  682  660  847   40   13  770  132  192  784   284 #>  [701,]  412  880  685  710   56  817  901  577  465   953 #>  [702,]  973  258  795  711  739  887  559  235  579   506 #>  [703,]  497  680  446  623  909  229  101  438  230   350 #>  [704,]  519  788  502  453  266   98  222  791  285   698 #>  [705,]  962  328  818   79   16  910  553   93  874   571 #>  [706,]    9  404  426  284  947  682  357   14  644   559 #>  [707,]  353  969  984   62  374  419  957  391  259    93 #>  [708,]  334  595  897   69  403  102  198  271  151   393 #>  [709,]  313  778  616  280  773  873  881  413  787   817 #>  [710,]  691  603  880  463  701  778   74  659  273   817 #>  [711,]  529  662  235  227  997  579  389   14  506    60 #>  [712,]  342  163  671  278  148  903  944  520  162   107 #>  [713,]  408  530  753   78  983  348  782  631  765    98 #>  [714,]  916  683  727  718  960   21  958  941  572   858 #>  [715,]  179  462  775  397  643  435  500  377   27   769 #>  [716,]  723  294  173  437  923  276  326  823  205   103 #>  [717,]  385  351  855  864  296  301  292  471  550   298 #>  [718,]  958  755  941  572  141   76   97  860  714   960 #>  [719,]  120  294  823  317  940    8  536   47  326   503 #>  [720,]  171  812  500  532  200  323  518  643  331    90 #>  [721,]  501  627   55  681  722  195  834  672  622   896 #>  [722,]  622  871  452  786  834  492  250  376  721   370 #>  [723,]  285  408   98  777  348  865  578   78  173   698 #>  [724,]  523  836  215  154  837  988   44  418  748   820 #>  [725,]  546  585  129  442  410  607  821  315  338   473 #>  [726,]  576  159  438  903  909  497  609  415  618   703 #>  [727,]  918  807  916  755  683  714  623  572  697   828 #>  [728,]  785  274  799  732  359  535  754  642  733   889 #>  [729,]  314   52  892  503  932  511  694  326  317   133 #>  [730,]  365  307   12  908  483  996  546  155  859   569 #>  [731,]  391  924   10  342  661   81  699  278  712   593 #>  [732,]  799  642  359   57  535  274  525  228  754   774 #>  [733,]  789  884  785   54  537  535  489  775  743   742 #>  [734,]   34  629  933  512  932  892  189  110  931    63 #>  [735,]  964  224  190  862  898  782  580  878  756   413 #>  [736,]  330  472  612  480  556  481  893  431  232   504 #>  [737,]  434  114  765  177  407  316  350  850  245   684 #>  [738,]   28  470  339  892  513  314  629  110  796   734 #>  [739,]  973  702  887  692  795  258  534  559  711   549 #>  [740,]  492  870  130  808  622  937  822  959  644   830 #>  [741,]  430  596  772  975  423  219  221  182  184   322 #>  [742,]  489   54  839  827  300  598  970   23  244   733 #>  [743,]  884  247  789  733    7  775  879  397  744   715 #>  [744,]  866  397  500  179  775  715  112  435  789   462 #>  [745,]  632  859  107  325  163  635  307   19  712   155 #>  [746,]  829   45  181  174  695  651  899  431  337   369 #>  [747,]  479  794  849  204  296  921  910  927  212    15 #>  [748,]  523  988  976  581  434  820  323  302  345   570 #>  [749,]  931   63  609  366  968   89  573  263   52   846 #>  [750,]   66  805  806  143  189  222   30  926  902   127 #>  [751,]  243  282  991   84  286   10  661  444  943   169 #>  [752,]  835  999  459  522  568  764  768  256  178    95 #>  [753,]  530  455  570  496  350  713   46  434   78   519 #>  [754,]  642  274  228   57  304  732  799  809   99   963 #>  [755,]  718  544  727  572  623   97  958  148  261   159 #>  [756,]  280  190  667  596  220  772  182  875  881   898 #>  [757,]  678  338  876  877  971  217  851   50  498   561 #>  [758,]  211  806  966  935   55  902  168  458   30   202 #>  [759,]  210  509  888  229  969  800  950  468  832   566 #>  [760,]  209   95  667   82  862  482  835  272  190   778 #>  [761,]  113  850  515  566  653  316  969  164  325   569 #>  [762,]  628  449  838  649  584  206  165  816  604   192 #>  [763,]  920  104    2  323   38  532  496  687  109   676 #>  [764,]  982  909  522  680  438  459  768  497  626   658 #>  [765,]  658  407  949  929  310  737  680  530  245   713 #>  [766,]   11  393  356  416  936  368  852  584  201   337 #>  [767,]  589  257  961  779  967  814   61  203  117    64 #>  [768,]  522  999  256  626  452  982  764  182  881   801 #>  [769,]   27  119  573  297   72  891  462  149  435   118 #>  [770,]  974  847  613  700  600   45  780  216  132   203 #>  [771,]  276  668   35  583  617  294  437  777  792   317 #>  [772,]  182   36  741  256  423  596  626  190  430   394 #>  [773,]  313  709  290  873  778    3  616  679  280   413 #>  [774,]  649  228  512  303   64  904  628   42   63   449 #>  [775,]  179  397  715  789  246  866  744  462   67   377 #>  [776,]  653  325  912  569  327  684  515  483  113   386 #>  [777,]  583   98  167  326  723  502  453  411  285   698 #>  [778,]  280  709  463   95  667  313  756  873   74   138 #>  [779,]  117  967  488  767  257   39  814  592  945   355 #>  [780,]  145  600  847  656  132  135  178  134  770   142 #>  [781,]  450  386  930  288  684  912  793  653  821   949 #>  [782,]  193  675  929  881  407  735  447  713  786   768 #>  [783,]  928  896  380  662  250  227  863  830  627   834 #>  [784,]  192  682   13  505  660  700   40  811  604   415 #>  [785,]  728  733  789  535  884  274  359  732  799    54 #>  [786,]  622  722  881  452  959  370  675  492  808   740 #>  [787,]  881  387  616  768  782  929  315  310  587    37 #>  [788,]  519  704  222  502  266  669  698  983  750   453 #>  [789,]  775  733  179  397  866  715  241  884   67   246 #>  [790,]  252  829  174  277  185  136  369  417  640   158 #>  [791,]  502  704  453  222  292  864  788   48  519   266 #>  [792,]  668   35  771  276  238  617  171  583  392   882 #>  [793,]  386  907  867  388  949  126  781  658  197   568 #>  [794,]  396  747  479  921  910  204   62  849  183   493 #>  [795,]  711  702  506  227  429  579  833  529  662   510 #>  [796,]  513  470  738  212  629   34  339  110   73   458 #>  [797,]  831  985   31  987  150  495  109   72  122   346 #>  [798,]  376  143  438  452   92  609  446  846  805   497 #>  [799,]  732  274  525  642  359  754  728  889  105   535 #>  [800,]  950  888  229  350  623  687   46   88  703   610 #>  [801,]   37  178  611  132  768  195  847  999  660    19 #>  [802,]  699  391  210  593  405  614  468  759  342   544 #>  [803,]    7  218   87   20    8  810  120  719  940   536 #>  [804,]  264   21  636  855  882  858  992  857  550   832 #>  [805,]  127  750  902  806  618   30  446   66   65   143 #>  [806,]  902   30  750  805  677  127   66  758   65   189 #>  [807,]  697  913  638  727  918  926  828  977  610   623 #>  [808,]  822  492  937  740  370   59  622   75  669   202 #>  [809,]  840  606  228  595   69  303  512  102  371   816 #>  [810,]   20  279  993  940   87  105  642   57  304   803 #>  [811,]  505  979  305  162  647  671  415  192  784   185 #>  [812,]  518   96  200  533   47  171  218  594  720   275 #>  [813,]   85   39  592  558  608  488  117  503  779   456 #>  [814,]  767  589  779  967  562   64  117   61  390   488 #>  [815,]  521  935  672  370  675  966  894  193  267    55 #>  [816,]  449  512  206  933   34  652  649  606  734   843 #>  [817,]  332    1  709   29  412  875  901  447  220   577 #>  [818,]  259  951  957  157  374  484  211  848  553    93 #>  [819,]  635  420  134   24  163  145  647  135  656   261 #>  [820,]  988  111 1000  523  850  665  748  566   18   676 #>  [821,]  569  587  515  653  546  684  585  410  310   113 #>  [822,]  808  492  669  937  370  966   75  740  983   168 #>  [823,]  294  120  326  719   47  123  536  990  103   275 #>  [824,]  634  591  106  670  196  212  458  168  222   677 #>  [825,]  491  125  480  599  232  605  954  358  541   956 #>  [826,]    2  631  581  323  570  352  496  109  713   753 #>  [827,]  742  244  300  489  839  879   54  970   23   646 #>  [828,]  965  918  527  904  807  303  379  233  573   727 #>  [829,]  181  790  746  640  252  174  417  136  277   185 #>  [830,]  863  542  175   14  783  250  458  740  380   492 #>  [831,]  797  346  122   72  495  109  674   31  985   421 #>  [832,]  857  509  636  264   88  550  468  759  405   950 #>  [833,]  506   22   79  510  529  928  851  962  662   270 #>  [834,]  627  250  722   65  871  896  721  902  622   101 #>  [835,]  752  999   95  209   82  667  760  522  459   190 #>  [836,]  215  418  267  665  265  850  837  177  737   874 #>  [837,]  215  621   44  154  448  531  418  348  281   625 #>  [838,]  110  513  629  762  542  449  454   61  470   512 #>  [839,]  489  244  537  742  598  970   23   32  827   467 #>  [840,]  809  527  853  371   69  432  347  828  233   606 #>  [841,]  533  664  518   96  812  594  275  200   47   308 #>  [842,]  885  112  866  478  688  141  941  648  872    51 #>  [843,]  165  206  868  147  604  555  816   34  933   677 #>  [844,]  666  699  802  391  597  938  984   58  731   948 #>  [845,]  686  341  345  208  474  976  242  173  224   514 #>  [846,]  977  263  221  926  798   92  376  609  626   573 #>  [847,]  132  600  780  660  770  700  145  178  801   682 #>  [848,]  484  157   65  259  101  951  834  627  520   415 #>  [849,]  479  204  927  747  910  921  557  794   62   296 #>  [850,]  761  515  737  114  113  684  653  316  267   177 #>  [851,]  389  997   60  217  529   50   22  506  235   681 #>  [852,]  226  433  201  936  393  641  403  271   33   696 #>  [853,]  840  169   81  493  347  906   69  445  995   124 #>  [854,]  156  574  537  462  990   70  536  643    8   715 #>  [855,]  550  264  385  864  717  832  636  804  292   351 #>  [856,]  919  526  543  324  336  375  153  160  399   236 #>  [857,]  832  636  509  264   88  405  468  614   21   950 #>  [858,]   21  992  246  714  916  804  118   67  683   432 #>  [859,]  745  155  632  307  107  484  325  374  712   848 #>  [860,]   76  547  958  718  985  934  755  544  261    31 #>  [861,]  663  895  152  354  213   73  207  796  469   973 #>  [862,]    3   82  190  224  735  760  482  667  873   756 #>  [863,]  830   14  175  227  783  542  429  928  458   250 #>  [864,]  791  292  550  855  717   66  385  453  296   298 #>  [865,]  285  281  723   75  348  266  883  408  578   621 #>  [866,]  744  775  179  112  789  397  688  715   67   435 #>  [867,]  793  386  126  907   86  450  998  781  288   930 #>  [868,]  604  843  165  555   65  206  902  127  677   784 #>  [869,]  971  601  461  876  678  214  498  757  603   332 #>  [870,]  740  644  130  975  492  959  486  622  404   540 #>  [871,]  250  622  722  452  492  834  376  798  740    30 #>  [872,]  320  960  141  980   97  718  688  297  683   118 #>  [873,]  290    3  862  280  586  773  709  778  313   756 #>  [874,]  265  419  665  557  571  106  969  836  211   849 #>  [875,]   29  898  220  447  756  577  586  280  901   685 #>  [876,]  971  757  561  678  461  869  338  655  214   154 #>  [877,]  553  506  851  833  529  757  389  655   60   962 #>  [878,]  352  552  224  191  631  172  735  341  964   401 #>  [879,]  299  435  441  789  489  648  839  244  179   866 #>  [880,]  603  710  701  692  258  549  691  559  534   601 #>  [881,]  786  782  280  768  787  756  675  447  999   190 #>  [882,]  992  392  804  385  855  717  471  238   21   264 #>  [883,]  865  199  511   43  266   80  989  168  285   281 #>  [884,]  743  733    7  247  789  803  785  775  397   537 #>  [885,]  842  866  688  112  478  141  444  872  648   941 #>  [886,]  426  357  153  181  887  695  273  559   74   706 #>  [887,]  692  886  559   60  702  711  426  739  235   389 #>  [888,]  950  800  229  687  350  114  759  434  496    18 #>  [889,]  993  105  567  799  383  359  274  525  732   810 #>  [890,]  268 1000  293  676  436   77   58   38  111   302 #>  [891,]  421  297  149  253  922  619  119  769  605   986 #>  [892,]  314  932  729  734  629   52  738  189  470    28 #>  [893,]  209  138  974  262  914   95  216  770  330   760 #>  [894,]  315  267  815  410  690  442  672  400  498   418 #>  [895,]  354  152  213  469  207  861  663  796  795    73 #>  [896,]  783  928  627  834  250  662   55  951  380    65 #>  [897,]  102  963  151  228  809  303  595  980  444    69 #>  [898,]  875   29  735  756  220  586  447  205  184   103 #>  [899,]  651  422   45   13  174  369   53   11  565   115 #>  [900,]  486    5  975  596  923  624  103  355  741   220 #>  [901,]  577   59  447  220  959  937  486    1  953   786 #>  [902,]  806   30   65  805  127  677  157  750  834   618 #>  [903,]  520  944  726  576  148  159  415  538  162   618 #>  [904,]  233   63  649  379  303  828  124  965  906   931 #>  [905,]  565  343  429  227  165  762   13  706  306   784 #>  [906,]  124  347  305  379  233  630  979  505  904   445 #>  [907,]  388  793  568  658  949  386   31  109  987   172 #>  [908,]  515  569  164  155  338  653  585  410  821   307 #>  [909,]  438  497  982  764  680  726  703  159  609   230 #>  [910,]  921  849   62  479  794  747  204  927   93   705 #>  [911,]  440  146   33  287  480  825  599  491  528   232 #>  [912,]  776  483  327  781  653  569  450  684  288   386 #>  [913,]  697  807  926  638   66   46  618  805  623   127 #>  [914,]  262   68  613  556  209  893  974  372  955   329 #>  [915,]  507  180  694  248  317  558  460  719  554   813 #>  [916,]  683  714  727  432  960  918  995  527  371   718 #>  [917,]  611  181  659  195   60  640  681  357   37   389 #>  [918,]  828  379  727  527  538  807  347  233  159   683 #>  [919,]  153  856  160  375  526  543  324  426  475   650 #>  [920,]    2  104  763  610  572  687  109  831  950    72 #>  [921,]  910  479  204  794  747  849  927   62  457   396 #>  [922,]  619  297  395  149  891   89  142  253  490   467 #>  [923,]  103  184  900  326  486  205  624  975  596   430 #>  [924,]  593  116  391   10  995  342  731   81  802   699 #>  [925,]  364  466  464  144  170  637  970   49  488    85 #>  [926,]  913  189  750  846  638  805  807   66  798   143 #>  [927,]  457  204  849  479  289  557  747  921  910   296 #>  [928,]  783  896  227  662  380  863  830   22  458   833 #>  [929,]  407  245  765  193  782  310  316  675  230   267 #>  [930,]  450  781  386  473  288  548  867   26  387   793 #>  [931,]   63  749  618  233  127  189  649  734  926   933 #>  [932,]  892  734   52   57  749  314  729  411  189   968 #>  [933,]   34  127  734  677  816  512  931  189  618   206 #>  [934,]  150  547   31  985  860  987  126  319   76   568 #>  [935,]  966  370  521  815  983  822  758  245  143   675 #>  [936,]  201  696  433   11  361  399   53  393  368   589 #>  [937,]  808   59  822  740  130   75  492  202  959   360 #>  [938,]  319  291  295  860   76  547  597  544  958   194 #>  [939,]  428  140  804  255  636  225  858  405  264    21 #>  [940,]  503    8  719   87  810  317  536  105  120   617 #>  [941,]  958   76  718  572  141  860  714  755  112   985 #>  [942,]  448  514   44  269  173  424  474  531  837   451 #>  [943,]  287  320   84  528  641  872  151  897  599   991 #>  [944,]  520  538  903  148  618  347  712  162  159   726 #>  [945,]  355  402  117  488   39  575  779  608  423   767 #>  [946,]  612  819  635  481  239  996  632  363   24   252 #>  [947,]  284  660  682  706  404  357  195  871  644     9 #>  [948,]  176  327   58  597  912  666  268  776  844   483 #>  [949,]  310  658  388  387  580  765  964  191  907   407 #>  [950,]  800  888  229  687  350  496   88  623   46   759 #>  [951,]  484  848  818  259  896  157  553  627  211    65 #>  [952,]  536  402  503  990  575  574  322  120  968   283 #>  [953,]   17  937   59  624  486  901  460  554  130   577 #>  [954,]  541  240  476  272  481  135  485  556  504   956 #>  [955,]  223  394  139  384  602  329  344   36  423   459 #>  [956,]  362  481  541  240  125  954  363  476  491   409 #>  [957,]  818  374  259  278   93  555  707  951  128   712 #>  [958,]  941  718   76  572  860  755  141  714  985   547 #>  [959,]  644  740  786   59  577  808  870  501  901   404 #>  [960,]  683  916  872  718  714  918  995   97  755   727 #>  [961,]  366  968  767  257  203   61  540   40  589   283 #>  [962,]   79  510  705  328  833   16  187  553  506   670 #>  [963,]  102  228  897  980  303  241  809  965   67   595 #>  [964,]  580  735  191  387  388  639  949  224  878   413 #>  [965,]  828  303  118  980  904  228  527  918   67   304 #>  [966,]  935  521  360  370  822  815  202  808  758   281 #>  [967,]  779   61  767  117  257  814  589  945   39   961 #>  [968,]  283   89  490  961   52  366  322  749  257   263 #>  [969,]  759  707  566  761  101  265  177  353  259   229 #>  [970,]   23  598  364  488  839  170  489  562  466   402 #>  [971,]  876  869  678  757  601  461  338  498  214   217 #>  [972,]  996  237  612  946  481  480  362  363   12   504 #>  [973,]  702  739  258  795  887  534  711  559  692   579 #>  [974,]  613  770  431  472  311  600  893  262  914    45 #>  [975,]  486  741  596    5  900  870  430  540  423   355 #>  [976,]  437  578  581  531   78  748  323   44  173   474 #>  [977,]  610  846  119  573  638  807   72   27  926   346 #>  [978,]  194  286  358  291  295  491  599  363  478   938 #>  [979,]  305  647  505  811  162  630  445  671  906   124 #>  [980,]  241   67  118  688  965  963  303  141  872   102 #>  [981,]  218  275  533   49  594  120  123   47   96    70 #>  [982,]  230  909  764  438  497  680  522  178  768   576 #>  [983,]   92  133  370  698   75  822  143  935  808   669 #>  [984,]  566  699  707  325  969  391  802  210  107   761 #>  [985,]   31  547  934  150  797  495   76  831  987   860 #>  [986,]  253   32  139  467  441  384  891  495  395   223 #>  [987,]  485  495   31  797  985  620  150  568  907   831 #>  [988,]  820  523  111  748  850  434  114  737   18   836 #>  [989,]   80   28  883   43  567  738  339  199  511   314 #>  [990,]  536  411    8  952  120  156  221  574  326   503 #>  [991,]   84  287  340  169  630  445  599  979  282   647 #>  [992,]  392  246   21  858  882  377  804  304  104   292 #>  [993,]  810  105  567  889  940  642   20  799  274   279 #>  [994,]  934  295  126  319  150  998  547  867  358   125 #>  [995,]  116  593  432  924   81  538  916  960  683   353 #>  [996,]  237  307  946   12  972  730  632  252  859   745 #>  [997,]  235  389  851  529   60   22  711  217  662   506 #>  [998,]  867  987  126  620  508  443  994  172  401   150 #>  [999,]  522  768  256  752  835  178  182  764  626   459 #> [1000,]  225  820  676  436  988  111  268  748  523   890 #>  #> $neighbor_distances #>              [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7] #>    [1,] 0.7211893 0.7364018 0.7712915 0.7833858 0.7884341 0.8230428 0.8459388 #>    [2,] 0.3448090 0.5002484 0.5107108 0.5116951 0.5517540 0.5905843 0.6164810 #>    [3,] 0.3988677 0.4449200 0.4490517 0.5688348 0.5834893 0.6410829 0.6992235 #>    [4,] 0.3305259 0.4624230 0.5367948 0.5799635 0.5951459 0.6737527 0.7085528 #>    [5,] 0.4051795 0.4227972 0.4497573 0.4724190 0.5055339 0.5171973 0.5274997 #>    [6,] 0.7439927 1.0912293 1.1133547 1.1207950 1.3715281 1.4109436 1.4451977 #>    [7,] 0.3252701 0.6997113 0.7680293 0.9398283 0.9834721 1.0380672 1.0506195 #>    [8,] 0.3407237 0.3961926 0.4516073 0.4871296 0.4977942 0.5684153 0.5754504 #>    [9,] 0.4068428 0.4203433 0.4343659 0.5081513 0.5606973 0.6667942 0.6732148 #>   [10,] 0.5307958 0.6968093 0.8034032 0.8369000 0.8423765 0.8626251 0.8632777 #>   [11,] 0.5455471 0.5993602 0.6080891 0.6111440 0.6243484 0.6817752 0.7091900 #>   [12,] 0.6708268 0.7562356 0.7714244 0.9206716 0.9657497 1.2014860 1.2177184 #>   [13,] 0.3199740 0.3572030 0.3743867 0.5311484 0.5351940 0.5847711 0.5977760 #>   [14,] 0.2035635 0.3606939 0.4328603 0.4601836 0.4873584 0.5265610 0.5575818 #>   [15,] 0.5652968 0.6476948 0.7345896 0.7933588 0.8798337 0.8991375 0.9419744 #>   [16,] 0.5385619 0.5478450 0.5846316 0.5986218 0.6885430 0.7341139 0.7774798 #>   [17,] 0.3696577 0.4875603 0.5325637 0.5340132 0.5883293 0.7439454 0.7502123 #>   [18,] 0.4856875 0.5006729 0.6172652 0.6200722 0.7076111 0.7077400 0.7254308 #>   [19,] 0.3643236 0.3696736 0.4466877 0.5170223 0.6180576 0.6238388 0.6241481 #>   [20,] 0.3147878 0.3807684 0.4755307 0.5385587 0.5477634 0.7144088 0.7178037 #>   [21,] 0.4336252 0.5946175 0.6413160 0.6856888 0.6988748 0.7000241 0.7021173 #>   [22,] 0.4204726 0.5159351 0.5553054 0.5578005 0.5587520 0.5686191 0.5720624 #>   [23,] 0.3775477 0.4661317 0.7106713 0.7309662 0.7724758 0.8018148 0.8095879 #>   [24,] 0.3450631 0.3696736 0.3964651 0.4731726 0.4961768 0.5062485 0.5727911 #>   [25,] 0.1529320 0.4930414 0.7643381 0.8130616 0.8830522 0.8831188 0.9162792 #>   [26,] 0.5997107 0.6629175 0.7151085 0.7753734 0.8675150 0.8766107 0.9138712 #>   [27,] 0.2571824 0.4861438 0.4965839 0.5210382 0.5340748 0.5540142 0.6775636 #>   [28,] 0.4526260 0.4842592 0.5213794 0.5618533 0.6329138 0.6420831 0.6677879 #>   [29,] 0.1890204 0.3738955 0.5754190 0.6583335 0.7263875 0.7493712 0.7714353 #>   [30,] 0.2406235 0.3200962 0.3623860 0.3780466 0.4260120 0.4472523 0.4601276 #>   [31,] 0.3711911 0.3860576 0.4299912 0.5928799 0.5964595 0.5980987 0.6125511 #>   [32,] 0.2343165 0.2406586 0.3259043 0.4198720 0.5678584 0.5976007 0.6276251 #>   [33,] 0.8531273 1.2612892 1.3513628 1.4441595 1.5320406 1.5445515 1.6522687 #>   [34,] 0.3597897 0.3630545 0.4057138 0.4864498 0.4898987 0.5058042 0.5431295 #>   [35,] 0.4214539 0.4892549 0.5732936 0.6749101 0.7166278 0.7692174 0.7868898 #>   [36,] 0.3134486 0.3427811 0.3570360 0.4115055 0.4170641 0.4594776 0.4691113 #>   [37,] 0.2372597 0.4999196 0.5771549 0.6810173 0.7319571 0.7429359 0.7618507 #>   [38,] 0.8137731 0.9119799 0.9647050 0.9727140 0.9877862 1.0041850 1.0611710 #>   [39,] 0.3559426 0.3904650 0.5498846 0.5544904 0.5619871 0.5654988 0.5749297 #>   [40,] 0.3562934 0.3600981 0.5340130 0.5876636 0.5980761 0.6037095 0.6106409 #>   [41,] 0.1529320 0.5105492 0.7212657 0.8416160 0.8753277 0.9170153 0.9359285 #>   [42,] 0.2843077 0.4404463 0.5439251 0.6411021 0.6532362 0.7035318 0.7152320 #>   [43,] 0.3251968 0.4218561 0.5609459 0.6064313 0.7721247 0.8198370 0.8284968 #>   [44,] 0.3621493 0.4954583 0.6502702 0.7670224 0.7766439 0.8228790 0.8836774 #>   [45,] 0.5832637 0.6103750 0.6106181 0.6204110 0.6228135 0.6423559 0.6429579 #>   [46,] 0.3145800 0.3946862 0.4663938 0.5105719 0.5288551 0.5379425 0.5437147 #>   [47,] 0.4322276 0.4975862 0.5495815 0.5944931 0.6162373 0.6280594 0.6388574 #>   [48,] 0.5513619 0.5517230 0.5823109 0.5861725 0.5988874 0.6770384 0.6783000 #>   [49,] 0.6119093 0.7303249 0.7533807 0.7567118 0.9632580 1.0301532 1.0315365 #>   [50,] 0.2829339 0.4376444 0.4587560 0.4946310 0.5244970 0.5578005 0.6139110 #>   [51,] 1.0614598 1.1320966 1.1464305 1.1621787 1.2049571 1.2512127 1.2578259 #>   [52,] 0.4702127 0.5022613 0.5413598 0.5582075 0.5816616 0.5834543 0.6122613 #>   [53,] 0.1320224 0.3743867 0.3926418 0.5551863 0.5594627 0.5688047 0.6111440 #>   [54,] 0.5640391 0.6703204 0.8270865 0.8421122 1.0858520 1.0979286 1.1247291 #>   [55,] 0.3924172 0.4824103 0.4837333 0.5553776 0.5774661 0.6004787 0.6009045 #>   [56,] 0.8969483 0.9158585 0.9826326 0.9898642 1.0037908 1.0181553 1.0595409 #>   [57,] 0.4928879 0.5170905 0.6025670 0.6213069 0.6580186 0.6889408 0.7007978 #>   [58,] 0.6932381 0.7961056 0.8799675 0.9088661 1.1042188 1.2313408 1.2397633 #>   [59,] 0.3289579 0.4407905 0.4731326 0.4834607 0.5104774 0.5242692 0.5457220 #>   [60,] 0.1971400 0.4621882 0.4756386 0.5347380 0.6654551 0.6820729 0.7136437 #>   [61,] 0.3757628 0.4491463 0.5066925 0.5397154 0.6222813 0.6566852 0.6910996 #>   [62,] 0.8031375 0.8183763 0.9151247 1.0019375 1.0039473 1.0198319 1.0728674 #>   [63,] 0.2455228 0.3454152 0.3493363 0.3609024 0.4210615 0.5003120 0.5803641 #>   [64,] 0.3926473 0.5565539 0.6182040 0.6223950 0.6350249 0.6632179 0.6657870 #>   [65,] 0.3366595 0.3391813 0.3973984 0.4669336 0.4923358 0.4965401 0.5168478 #>   [66,] 0.3210113 0.3946862 0.4502617 0.4554660 0.4595119 0.5049563 0.5148610 #>   [67,] 0.2316290 0.3606955 0.4072586 0.4113990 0.5847943 0.6575381 0.7160632 #>   [68,] 0.3146153 0.4902834 0.5587173 0.6151386 0.6338754 0.6344158 0.7745629 #>   [69,] 0.6454162 0.6625217 0.6741550 0.7495193 0.7707023 0.7905384 0.8151474 #>   [70,] 0.5363192 0.6366803 0.6382944 0.6499500 0.6587827 0.6592110 0.7179524 #>   [71,] 0.2306866 0.4905033 0.5560344 0.5628470 0.6377851 0.6476736 0.6789094 #>   [72,] 0.4585512 0.5210382 0.5251696 0.5383376 0.5425859 0.5559668 0.5624422 #>   [73,] 0.3137172 0.6675054 0.7774635 0.7899188 0.8167900 0.8192657 0.8332613 #>   [74,] 0.1563262 0.3227138 0.6188296 0.6772701 0.7468328 0.7557746 0.7778064 #>   [75,] 0.4268879 0.4308106 0.4632449 0.4658134 0.4731326 0.4738735 0.4948389 #>   [76,] 0.3235746 0.3776683 0.3893715 0.5385163 0.5510738 0.6330154 0.7307120 #>   [77,] 0.3883937 0.5232098 0.5895628 0.7076111 0.7586742 0.8323838 0.8813880 #>   [78,] 0.3294108 0.4073341 0.4174339 0.4656767 0.4943809 0.5975860 0.5992848 #>   [79,] 0.5478450 0.5697676 0.6178544 0.6372911 0.6416048 0.8001803 0.8233426 #>   [80,] 0.7711025 0.8064338 0.8167957 0.8685804 0.8763911 0.8789494 0.9915248 #>   [81,] 0.4439437 0.5822762 0.5945617 0.6584961 0.6603320 0.6819508 0.7114613 #>   [82,] 0.3874518 0.4482449 0.4631942 0.5711612 0.5764014 0.5834893 0.5945450 #>   [83,] 0.6400568 1.2505634 1.3433872 1.4603544 1.5899165 1.6067328 1.6089767 #>   [84,] 0.5315622 0.5460991 0.5484914 0.6116102 0.6979302 0.8133667 0.8437979 #>   [85,] 0.4360883 0.5670835 0.6507047 0.7294774 0.7432751 0.7533807 0.7963357 #>   [86,] 0.5982215 0.6962405 0.7247818 0.7347211 0.7441829 0.8887571 0.9499716 #>   [87,] 0.3807684 0.3961926 0.4684348 0.5285471 0.5921408 0.6062475 0.6144839 #>   [88,] 0.4696645 0.4799850 0.5021292 0.5265487 0.5379583 0.5592956 0.5718666 #>   [89,] 0.1335520 0.3430401 0.4012907 0.4317482 0.4410895 0.4907196 0.5266748 #>   [90,] 0.8750907 0.8999436 0.9595258 0.9697567 1.0149458 1.0327443 1.0611604 #>   [91,] 0.6821746 0.7462996 0.8775726 0.8988903 0.9661202 0.9779741 1.0157880 #>   [92,] 0.3023156 0.3212052 0.3715057 0.3746293 0.4608742 0.4675778 0.5412432 #>   [93,] 0.4805085 0.6605861 0.7281251 0.8680793 0.9452586 0.9546622 1.0039473 #>   [94,] 0.3359267 0.5367948 0.5420836 0.5950626 0.5989855 0.6354489 0.6385945 #>   [95,] 0.4412579 0.5196746 0.5248463 0.5248774 0.6855182 0.6880636 0.7109213 #>   [96,] 0.3935150 0.4300750 0.4622099 0.4975862 0.5552337 0.5792861 0.6088553 #>   [97,] 0.3958461 0.5702810 0.5900833 0.6259001 0.6884351 0.6966819 0.7003449 #>   [98,] 0.3294108 0.4023114 0.4075914 0.4139769 0.4327606 0.4495376 0.4534335 #>   [99,] 0.4822183 0.5955284 0.6234164 0.6623269 0.6850373 0.7461749 0.8230205 #>  [100,] 0.3076231 0.3168135 0.4174816 0.5988906 0.6975949 0.7583114 0.7591187 #>  [101,] 0.2974618 0.5055018 0.5056916 0.5099074 0.5204985 0.5246052 0.5603743 #>  [102,] 0.1966930 0.3118342 0.6091665 0.7063200 0.7181754 0.7410959 0.7547250 #>  [103,] 0.3283662 0.4886063 0.5046741 0.5451528 0.5630849 0.5855572 0.5878495 #>  [104,] 0.5081972 0.5544807 0.5721579 0.5909729 0.6170933 0.6435451 0.6928172 #>  [105,] 0.2914010 0.6116583 0.6640577 0.7222987 0.7534231 0.7982277 0.8377346 #>  [106,] 0.5321604 0.5726450 0.5986218 0.6645013 0.6858426 0.7193108 0.7570850 #>  [107,] 0.4522191 0.4666539 0.5288194 0.6165769 0.6467473 0.6499212 0.6956952 #>  [108,] 0.4835486 0.5538210 0.5768880 0.5977433 0.6496992 0.6627472 0.6822642 #>  [109,] 0.5244551 0.5277545 0.5403953 0.6223933 0.6625369 0.6739336 0.6746215 #>  [110,] 0.4579747 0.4760933 0.4781197 0.5052216 0.5177305 0.5653199 0.5962536 #>  [111,] 0.5895628 0.7934966 0.8259913 0.8438107 0.8637595 0.8774023 0.8857514 #>  [112,] 0.7614096 0.7992525 0.8482104 0.9626302 0.9647050 1.0191250 1.0285030 #>  [113,] 0.2331499 0.3821858 0.4660301 0.5221236 0.5565904 0.5792327 0.5967257 #>  [114,] 0.4129854 0.4755009 0.4856875 0.5267006 0.5403935 0.5424065 0.6115637 #>  [115,] 0.1320224 0.3572030 0.4078788 0.5865575 0.5884958 0.6399320 0.6623936 #>  [116,] 0.2046389 0.5186734 0.5422511 0.6637852 0.6819508 0.7323097 0.7328748 #>  [117,] 0.2290925 0.3559426 0.4791082 0.4912917 0.5029175 0.5079194 0.5225348 #>  [118,] 0.2316290 0.4637851 0.5061580 0.5172207 0.5244205 0.5439594 0.6672861 #>  [119,] 0.3211625 0.3895661 0.4613849 0.4735947 0.4884832 0.5248484 0.5340748 #>  [120,] 0.3290943 0.4175940 0.4243306 0.4516073 0.5130897 0.5556157 0.5866964 #>  [121,] 1.2724057 1.5202342 1.5679632 1.9597015 1.9928257 2.0918506 2.1264192 #>  [122,] 0.4567502 0.4934448 0.5263739 0.5624422 0.6222618 0.6655567 0.6961450 #>  [123,] 0.4455296 0.5708950 0.6819533 0.7076425 0.7432751 0.7567118 0.7709318 #>  [124,] 0.2479615 0.2767839 0.3534468 0.3538310 0.4147750 0.4615858 0.5027847 #>  [125,] 0.5522974 0.6233895 0.7352251 0.8152349 0.8325687 0.8494978 0.8568766 #>  [126,] 0.5831094 0.5990690 0.6130702 0.6798744 0.6941925 0.7347211 0.7396999 #>  [127,] 0.3143889 0.3208283 0.3623860 0.3633398 0.3717799 0.4057154 0.4408371 #>  [128,] 0.5452476 0.7281251 0.7495312 0.9631346 1.0208867 1.1677998 1.1855414 #>  [129,] 0.5777528 0.7151085 0.7681833 0.7868281 0.8011428 0.8130874 0.8176718 #>  [130,] 0.3164230 0.3870014 0.4500602 0.5162091 0.5212923 0.5373064 0.5580886 #>  [131,] 0.8393017 0.9079794 0.9304482 0.9410327 0.9677292 0.9916877 1.0092189 #>  [132,] 0.1958560 0.4761228 0.4827837 0.4843613 0.5410602 0.5470326 0.5786185 #>  [133,] 0.3023156 0.3670383 0.3951859 0.4681989 0.5290280 0.5335267 0.5384560 #>  [134,] 0.5666000 0.5889975 0.6031922 0.6086245 0.6124517 0.6149668 0.6511028 #>  [135,] 0.2475771 0.3817292 0.3964651 0.4297924 0.5533607 0.5583721 0.6276344 #>  [136,] 0.5766530 0.6996683 0.7579080 0.7695793 0.7791209 0.8175333 0.8348537 #>  [137,] 0.6644449 0.6987704 0.7221686 0.7584043 0.7890376 0.8437582 0.8726290 #>  [138,] 0.5248774 0.5940836 0.6112777 0.7655108 0.7787257 0.7828015 0.8139949 #>  [139,] 0.1167473 0.2418802 0.3509141 0.4102852 0.4573580 0.4664739 0.4989984 #>  [140,] 0.9026368 1.0346923 1.0396962 1.1020876 1.1024658 1.1473814 1.1498606 #>  [141,] 0.5061580 0.5473548 0.5479214 0.5847943 0.6261423 0.6325670 0.6441954 #>  [142,] 0.4867318 0.4924958 0.4961453 0.5153672 0.5240588 0.5366362 0.5495321 #>  [143,] 0.2910956 0.3215793 0.3715057 0.3766900 0.4721276 0.4725159 0.5037140 #>  [144,] 0.3627877 0.9319512 0.9957900 1.1033519 1.1069051 1.1546042 1.2008756 #>  [145,] 0.2945343 0.3351453 0.3812883 0.4297924 0.4761228 0.4814943 0.5062485 #>  [146,] 0.6400568 1.2513666 1.2686053 1.3039320 1.3434137 1.3519872 1.3732433 #>  [147,] 0.4555722 0.4731371 0.5613358 0.5938394 0.6685365 0.6759270 0.7534205 #>  [148,] 0.4185552 0.4574139 0.4838092 0.5535473 0.5544279 0.6123553 0.6165769 #>  [149,] 0.3452650 0.3895661 0.4042186 0.4163012 0.4542733 0.4867318 0.5240209 #>  [150,] 0.3860576 0.4109611 0.5068675 0.6130702 0.6301964 0.6565911 0.6752086 #>  [151,] 0.4404463 0.6268704 0.6616755 0.7495193 0.7636163 0.8164740 0.8281957 #>  [152,] 0.8448204 1.0055289 1.0155979 1.0180039 1.0640466 1.0677334 1.1462922 #>  [153,] 0.4548389 0.4767420 0.6390353 0.7470161 0.7569296 0.7668428 0.7927077 #>  [154,] 0.5535697 0.7152707 0.7157893 0.7778896 0.9855649 0.9872481 0.9970225 #>  [155,] 0.5637888 0.6825264 0.6910151 0.7033412 0.7382539 0.8082349 0.8953618 #>  [156,] 0.1653397 0.3549502 0.5094120 0.5250834 0.5754504 0.5858429 0.6499500 #>  [157,] 0.3391813 0.3644436 0.3774071 0.4175518 0.4508977 0.4728238 0.5246052 #>  [158,] 0.1720647 0.7001889 0.7431848 0.7625477 0.8461163 0.8645611 0.8671583 #>  [159,] 0.3249547 0.4686568 0.4986448 0.5115859 0.5136548 0.5350618 0.5355268 #>  [160,] 0.3714422 0.4414344 0.5186642 0.6229602 0.6365494 0.6932308 0.6937195 #>  [161,] 0.5963233 0.5988906 0.6089335 0.8136613 0.8628087 0.8762362 0.8836023 #>  [162,] 0.3039197 0.3639017 0.3756370 0.3855502 0.4294882 0.4416783 0.4903882 #>  [163,] 0.3941056 0.4895727 0.5288194 0.5369062 0.5544279 0.5593639 0.6396782 #>  [164,] 0.5428742 0.5719625 0.5967257 0.6623171 0.6671219 0.6910151 0.7195084 #>  [165,] 0.3259238 0.4379155 0.5137098 0.5664207 0.6685365 0.6846626 0.7223246 #>  [166,] 1.2505634 1.2513666 1.3997901 1.4979649 1.8699604 1.9050553 1.9332233 #>  [167,] 0.5524883 0.5623832 0.6184365 0.6491318 0.6513015 0.7013218 0.7022425 #>  [168,] 0.3443710 0.4661259 0.4853484 0.5268177 0.5692018 0.5715363 0.5825579 #>  [169,] 0.3592324 0.4180365 0.5484914 0.5776902 0.5945617 0.6084198 0.6395175 #>  [170,] 0.7962129 0.8095879 0.8868467 0.9324690 0.9515224 0.9541169 1.0677568 #>  [171,] 0.4330619 0.7166278 0.8070246 0.8300585 0.8750907 0.8771297 0.9530061 #>  [172,] 0.4266838 0.4356179 0.5244551 0.5606218 0.6339029 0.6963003 0.7006895 #>  [173,] 0.5807621 0.6335485 0.7000725 0.7385076 0.7531071 0.7766439 0.7945422 #>  [174,] 0.2159943 0.6411859 0.6704393 0.7001889 0.7116302 0.7227584 0.7597297 #>  [175,] 0.2035635 0.3911103 0.4495898 0.4622581 0.4814463 0.5373064 0.5432840 #>  [176,] 0.6708268 0.7030908 0.8176158 0.9447962 1.1168328 1.1706646 1.2704710 #>  [177,] 0.3961389 0.4318685 0.4829311 0.5076045 0.5302313 0.5888236 0.5972203 #>  [178,] 0.3552445 0.3643236 0.3812883 0.4961768 0.5142369 0.5200349 0.5410602 #>  [179,] 0.1972097 0.3487987 0.4137035 0.4439753 0.5107433 0.5733027 0.6416882 #>  [180,] 0.8549530 1.0060769 1.0813686 1.0906800 1.1256084 1.1388342 1.1436444 #>  [181,] 0.5346464 0.6858692 0.7041127 0.7777964 0.8201381 0.8490147 0.8740226 #>  [182,] 0.1430510 0.2589159 0.3134486 0.3316793 0.4628692 0.4751421 0.4923841 #>  [183,] 0.5273060 0.6234164 0.6323915 0.7522248 0.9284843 0.9730456 0.9929627 #>  [184,] 0.4681989 0.5046741 0.5060121 0.5113486 0.5127957 0.5513263 0.5525529 #>  [185,] 0.2220229 0.4019821 0.5447359 0.6002979 0.6479672 0.6928133 0.7312470 #>  [186,] 0.8300419 1.0922941 1.1667144 1.2155923 1.2227670 1.2405430 1.2514276 #>  [187,] 0.6293418 0.7209430 0.7668148 0.8416314 0.8430103 0.8524514 0.8798337 #>  [188,] 0.6330017 0.6445822 0.6675054 0.7266422 0.7799441 0.9125994 0.9204855 #>  [189,] 0.3807694 0.3882882 0.4260120 0.4446538 0.4542505 0.4730598 0.5148610 #>  [190,] 0.2835264 0.3695051 0.4628692 0.4758197 0.4910418 0.5253193 0.5404431 #>  [191,] 0.4266838 0.4561060 0.4610033 0.4645724 0.4903167 0.5507258 0.5573242 #>  [192,] 0.3288662 0.3562934 0.4723697 0.5456795 0.5493606 0.5836809 0.6088049 #>  [193,] 0.2957806 0.2996900 0.4864090 0.4932866 0.5479582 0.5863033 0.6274558 #>  [194,] 0.4078494 0.6676724 0.8668629 0.8918600 0.9123621 0.9980781 1.0624628 #>  [195,] 0.4645889 0.5199133 0.5396612 0.5462093 0.5613727 0.6119592 0.6261648 #>  [196,] 0.4158074 0.4254048 0.5181290 0.5728045 0.6181989 0.7267974 0.7279864 #>  [197,] 0.4116656 0.6499212 0.7126234 0.7202357 0.7489593 0.7599053 0.7602489 #>  [198,] 0.8512975 0.9621267 1.0210357 1.0534183 1.0671225 1.0694023 1.1863618 #>  [199,] 0.3251968 0.5138855 0.6150027 0.6319607 0.7234238 0.7253013 0.7391648 #>  [200,] 0.4330619 0.4982438 0.5792861 0.6388574 0.7607982 0.7751761 0.7868898 #>  [201,] 0.2437867 0.4784119 0.6039175 0.7091900 0.8267823 0.9073028 0.9082626 #>  [202,] 0.1695456 0.3896588 0.4703859 0.4992716 0.5106418 0.5223903 0.5692018 #>  [203,] 0.4851934 0.4938455 0.5380140 0.6044390 0.6103766 0.6336513 0.6354489 #>  [204,] 0.2373751 0.4948279 0.5812444 0.6689963 0.6790719 0.7931566 0.8772592 #>  [205,] 0.4886063 0.6135255 0.6726877 0.7258541 0.7367310 0.7709318 0.7769136 #>  [206,] 0.3528182 0.3539857 0.4555722 0.4933284 0.5137098 0.5255208 0.5873717 #>  [207,] 0.4321721 0.5817484 0.6064313 0.6150027 0.8576299 0.8974950 0.9423641 #>  [208,] 0.7037803 0.7090331 0.7296822 0.7531071 0.7578336 0.7732280 0.8227134 #>  [209,] 0.3815934 0.4950529 0.5196746 0.5256925 0.5900533 0.6401829 0.6476640 #>  [210,] 0.3932888 0.5120519 0.5276785 0.6001514 0.6195510 0.6301442 0.7389188 #>  [211,] 0.3644436 0.4852257 0.5996634 0.6038722 0.6130995 0.6311017 0.6403498 #>  [212,] 0.4254048 0.5859505 0.6074467 0.6197529 0.6476948 0.7025047 0.7082061 #>  [213,] 1.0155979 1.0374834 1.0935721 1.2663500 1.2829678 1.2928980 1.2963112 #>  [214,] 0.7152707 0.7712915 0.8117181 0.8496729 0.8834051 0.8922345 0.8965011 #>  [215,] 0.4651375 0.4720412 0.5523455 0.6363446 0.7084511 0.7778896 0.8001387 #>  [216,] 0.4610170 0.5306052 0.6049058 0.6095096 0.6229602 0.6338754 0.6476640 #>  [217,] 0.3726977 0.4376444 0.4782089 0.5567710 0.6044769 0.6187588 0.6470490 #>  [218,] 0.5096697 0.6162373 0.6476816 0.6899662 0.6997113 0.7214474 0.7671760 #>  [219,] 0.3822680 0.3906673 0.4278262 0.4739121 0.4842084 0.5316410 0.5363192 #>  [220,] 0.3320370 0.4319075 0.5263895 0.5275167 0.5547772 0.5754190 0.5934861 #>  [221,] 0.2728690 0.3476522 0.4661230 0.4831816 0.5239324 0.5483853 0.5616552 #>  [222,] 0.3486028 0.3727976 0.4483583 0.4542505 0.4853484 0.4942353 0.5168868 #>  [223,] 0.2418802 0.2894963 0.3010307 0.3579669 0.4010153 0.4477273 0.4856380 #>  [224,] 0.5018750 0.5118614 0.5214182 0.5454137 0.6410829 0.6543626 0.7037803 #>  [225,] 0.8560176 1.3502925 1.3932010 1.7194475 1.7677375 1.8440440 1.8451252 #>  [226,] 0.8531273 0.9450400 1.0092760 1.0097355 1.0163951 1.2058686 1.2188962 #>  [227,] 0.3641254 0.4290731 0.4860047 0.4953667 0.5433286 0.5546491 0.5575818 #>  [228,] 0.3705849 0.4920762 0.5223192 0.5380347 0.6091665 0.6303685 0.7007978 #>  [229,] 0.2557423 0.2735716 0.3571911 0.4364131 0.4808560 0.4878440 0.4946442 #>  [230,] 0.3037569 0.4618981 0.4628253 0.5099074 0.5366333 0.5509211 0.5574918 #>  [231,] 1.1703617 1.1969147 1.2060192 1.2795302 1.3574095 1.3687012 1.3964316 #>  [232,] 0.5175776 0.6050855 0.6544893 0.7082038 0.8061412 0.8257414 0.8289651 #>  [233,] 0.2541808 0.2921561 0.3538310 0.3609024 0.3927027 0.4099719 0.4951777 #>  [234,] 1.0703635 1.2522008 1.3202723 1.3276759 1.3560142 1.3658443 1.4092463 #>  [235,] 0.2749012 0.4813132 0.5819963 0.5965561 0.6539321 0.6654551 0.7011768 #>  [236,] 0.6365494 0.6387037 0.6942022 0.7059257 0.7200820 0.7801783 0.7895660 #>  [237,] 0.7547801 1.0136113 1.0293496 1.0310730 1.0991421 1.1411212 1.1418949 #>  [238,] 0.7760800 1.0149458 1.0162807 1.0514722 1.1807903 1.2493381 1.2630579 #>  [239,] 0.7137218 0.8540221 0.8635794 0.8658784 0.8824579 0.8924876 0.9327772 #>  [240,] 0.6720747 0.6868414 0.8621363 0.9073886 0.9576232 0.9756645 0.9933986 #>  [241,] 0.3318576 0.4072586 0.4977241 0.5244205 0.6870389 0.7087091 0.7239502 #>  [242,] 0.5964303 0.7263875 0.7345973 0.7604859 0.8379689 0.9574344 0.9797714 #>  [243,] 0.7290339 1.1230609 1.1334995 1.2950909 1.3245396 1.3629284 1.5476155 #>  [244,] 0.6239314 0.6374031 0.7359546 0.8051307 0.9036851 0.9208421 0.9575774 #>  [245,] 0.3440669 0.4318685 0.4376545 0.4814036 0.5183166 0.5520627 0.5862509 #>  [246,] 0.5930722 0.6566037 0.6724619 0.6900101 0.6943824 0.7160632 0.7242327 #>  [247,] 0.8128535 0.8128673 0.9834721 1.1426772 1.1450126 1.1521486 1.1669374 #>  [248,] 0.8407785 0.9295140 0.9436752 0.9533892 0.9757344 1.0092212 1.0790489 #>  [249,] 0.4174816 0.4246512 0.4770976 0.6473916 0.7557691 0.8628087 0.8762708 #>  [250,] 0.2475709 0.3880339 0.4273011 0.4437738 0.4782221 0.4864788 0.5085348 #>  [251,] 0.6063486 0.7174191 0.7554598 0.7871541 0.7906224 0.8007397 0.8300419 #>  [252,] 0.1985852 0.7120415 0.7523828 0.7613403 0.7687062 0.7791209 0.8457602 #>  [253,] 0.2406586 0.2719022 0.3068994 0.4136068 0.4665666 0.4989984 0.5012179 #>  [254,] 0.4178031 0.4930414 0.5105492 0.6374031 0.9094067 1.0356628 1.0662302 #>  [255,] 1.0420981 1.0611604 1.1674024 1.1815078 1.2671510 1.3117324 1.3820840 #>  [256,] 0.2551735 0.2589159 0.3239348 0.3394326 0.3427811 0.3762088 0.3818433 #>  [257,] 0.3757628 0.4533020 0.4639304 0.5079194 0.5400745 0.5414529 0.5715610 #>  [258,] 0.7579934 0.8256684 0.9307553 0.9530181 0.9742742 1.0502230 1.0726987 #>  [259,] 0.4175518 0.4387940 0.5121358 0.5162028 0.5612416 0.5927121 0.6000559 #>  [260,] 1.6265946 1.7960730 1.9347932 1.9465785 1.9541171 1.9555026 2.1079182 #>  [261,] 0.3958461 0.5051814 0.6157625 0.6539718 0.6640513 0.6641880 0.7027347 #>  [262,] 0.2517737 0.3146153 0.5095629 0.6756450 0.6863225 0.6950494 0.7056564 #>  [263,] 0.2728690 0.3430401 0.4024178 0.4264723 0.4399712 0.4571746 0.4618842 #>  [264,] 0.3602085 0.4224327 0.4487336 0.4870221 0.4933824 0.5965260 0.6469981 #>  [265,] 0.3788916 0.4940797 0.6744512 0.7570850 0.7573388 0.7590572 0.7876664 #>  [266,] 0.4105656 0.4872125 0.5059654 0.5264038 0.5299595 0.6103840 0.6466030 #>  [267,] 0.5106446 0.5172681 0.5520627 0.5549661 0.5719625 0.5738034 0.5983709 #>  [268,] 0.6448789 0.7961056 0.8774023 0.9580779 0.9634055 1.0652602 1.0964036 #>  [269,] 0.7921124 0.9326582 0.9365784 0.9853683 1.0786564 1.2646089 1.4047157 #>  [270,] 0.1695456 0.4311123 0.5159351 0.6009980 0.6128906 0.6360550 0.6712527 #>  [271,] 0.7435540 0.9940683 1.0092760 1.0662704 1.0823775 1.1350500 1.1448354 #>  [272,] 0.3333481 0.4631942 0.4725882 0.6364366 0.6496992 0.7026428 0.7107963 #>  [273,] 0.3227138 0.3993269 0.5186642 0.5530363 0.6095096 0.8047206 0.8061055 #>  [274,] 0.3952175 0.6341304 0.6835369 0.6933274 0.7420372 0.8778856 0.9510837 #>  [275,] 0.1801754 0.6088553 0.6474703 0.6475676 0.6485012 0.6819533 0.6885498 #>  [276,] 0.1783147 0.3968199 0.5668975 0.5732936 0.7280111 0.7298637 0.7580706 #>  [277,] 0.2220229 0.3731690 0.5577432 0.6698102 0.6740312 0.6794652 0.6913815 #>  [278,] 0.4439437 0.6225686 0.6371498 0.6701002 0.7580724 0.7618281 0.8294415 #>  [279,] 0.3147878 0.3986255 0.4684348 0.5170905 0.5243236 0.5673635 0.6232929 #>  [280,] 0.3545104 0.4287212 0.5000480 0.5253193 0.5637652 0.5848665 0.6668319 #>  [281,] 0.4457365 0.5196651 0.5468104 0.5526906 0.5528111 0.5709542 0.6213366 #>  [282,] 0.7696708 0.9586735 1.0682838 1.0818743 1.1230609 1.2286259 1.4267151 #>  [283,] 0.2895413 0.4000708 0.4317482 0.5557697 0.6000272 0.6131985 0.6182040 #>  [284,] 0.2835673 0.3355059 0.4318238 0.4919889 0.5311484 0.5421922 0.5606973 #>  [285,] 0.4146693 0.4284365 0.4327606 0.4388169 0.4437538 0.5247262 0.5383150 #>  [286,] 0.7299069 0.8918600 1.0702224 1.0980029 1.1334995 1.1945992 1.2053367 #>  [287,] 0.5723115 0.6081072 0.6660422 0.6770374 0.6979302 0.7598727 0.8024443 #>  [288,] 0.5232098 0.5432475 0.5662883 0.5982215 0.6259270 0.6323540 0.7366390 #>  [289,] 0.5103810 0.7504032 0.8945654 0.9988059 1.0372699 1.0910886 1.1052830 #>  [290,] 0.3878356 0.4490517 0.6657525 0.7462565 0.7470707 0.7543425 0.8718832 #>  [291,] 0.6060839 0.6146587 0.6573923 0.6676724 0.6718668 0.8694965 0.8711822 #>  [292,] 0.4838654 0.5651183 0.5823109 0.5899931 0.6043202 0.6212457 0.6324289 #>  [293,] 0.6259270 0.6306602 0.6885273 0.6941925 0.6962405 0.7586742 1.0168811 #>  [294,] 0.3719003 0.4322276 0.4374314 0.4650894 0.5556157 0.6077267 0.6491318 #>  [295,] 0.5507871 0.6060839 0.6540522 0.6864797 0.7266645 0.8079251 0.8668629 #>  [296,] 0.7167750 0.7218076 0.7345896 0.8068857 0.8257599 0.8278818 0.8711983 #>  [297,] 0.3452650 0.3847710 0.3966538 0.4106838 0.5438064 0.5563560 0.5720614 #>  [298,] 0.5454038 0.5484307 0.5548300 0.5835435 0.6388217 0.6692937 0.7170262 #>  [299,] 0.3533593 0.3558065 0.7687116 0.8013524 0.8207143 0.8615595 0.8698912 #>  [300,] 0.7906171 0.8320994 0.9968838 1.0163951 1.1247291 1.1692047 1.2117915 #>  [301,] 0.4822183 0.5273060 0.5997597 0.6118375 0.6625668 0.7212493 0.7336559 #>  [302,] 0.3883937 0.5432475 0.6200722 0.6598525 0.6885273 0.7260074 0.7819644 #>  [303,] 0.3705849 0.3817068 0.4746914 0.5589189 0.5921339 0.5929911 0.5947929 #>  [304,] 0.3986255 0.4928879 0.5308665 0.5477634 0.6725052 0.7016886 0.7242327 #>  [305,] 0.2282451 0.2441368 0.3772134 0.4118751 0.4147750 0.4294882 0.5003345 #>  [306,] 0.6295475 0.6659478 0.6794652 0.6802801 0.8122799 0.8190441 0.8294733 #>  [307,] 0.5945801 0.6341986 0.6825264 0.7464132 0.8188567 0.8424573 0.9090889 #>  [308,] 0.8817659 0.9165916 0.9510769 1.1180879 1.1610638 1.2121500 1.2294295 #>  [309,] 1.0564430 1.0740310 1.1219269 1.3544777 1.3548049 1.3749757 1.4142071 #>  [310,] 0.3580617 0.4059949 0.4941835 0.5091720 0.5156747 0.5227510 0.5315962 #>  [311,] 0.5144417 0.5799635 0.6030332 0.6168945 0.6298785 0.6385945 0.6433946 #>  [312,] 0.5677104 0.7439927 0.9251742 0.9890027 1.0634416 1.1143917 1.1708898 #>  [313,] 0.4140243 0.4427544 0.7179395 0.7203841 0.7300473 0.7470707 0.7499347 #>  [314,] 0.3557058 0.3660055 0.4716123 0.5213794 0.5988082 0.6366124 0.6475728 #>  [315,] 0.2711685 0.4583782 0.5738034 0.6150821 0.6924457 0.6949035 0.7115051 #>  [316,] 0.2331499 0.4694829 0.4814036 0.5302313 0.5428742 0.5549661 0.5621263 #>  [317,] 0.5304840 0.5829508 0.5913874 0.6317578 0.6592084 0.7128485 0.7429091 #>  [318,] 0.4178031 0.7212657 0.7643381 0.8454857 0.9036851 1.1662023 1.1663746 #>  [319,] 0.4104674 0.5507871 0.6718668 0.7198598 0.7690294 0.7812691 0.7984198 #>  [320,] 0.5272608 0.5826577 0.6966819 0.7639255 0.7953997 0.8570370 0.8814828 #>  [321,] 0.3137172 0.6330017 0.7754897 0.7860647 0.7973127 0.8034897 0.8158983 #>  [322,] 0.2825222 0.4039836 0.4066095 0.4091790 0.4264723 0.4278262 0.4410895 #>  [323,] 0.5797436 0.6975370 0.7202299 0.7574095 0.7910946 0.8365947 0.8422101 #>  [324,] 0.3289088 0.6207704 0.7333524 0.7886875 0.8242152 0.8896760 1.0164059 #>  [325,] 0.4666539 0.5194713 0.6403021 0.6750757 0.7000013 0.7276750 0.7560812 #>  [326,] 0.4374314 0.4592293 0.5524883 0.5662922 0.5829508 0.5855572 0.5881248 #>  [327,] 0.6598473 0.6928711 0.8259913 0.8449212 0.8491173 0.9144192 0.9225429 #>  [328,] 0.6178544 0.8128029 0.8485141 0.9666318 0.9875163 1.0304664 1.0389758 #>  [329,] 0.3508861 0.4010153 0.4102852 0.4319189 0.4938455 0.5240588 0.5410666 #>  [330,] 0.6260754 0.6544893 0.7092578 0.7260862 0.7460990 0.7962546 0.7963860 #>  [331,] 0.3825865 0.6244683 0.7710988 1.0201453 1.0900675 1.1004006 1.1065876 #>  [332,] 0.5966961 0.6552488 0.7884341 0.8922345 0.9026205 0.9853683 1.0017260 #>  [333,] 0.2730216 0.5951459 0.6420773 0.7540387 0.8011046 0.8110551 0.8310825 #>  [334,] 0.9895265 1.0967649 1.3383211 1.4946246 1.5246110 1.5286402 1.5727602 #>  [335,] 0.5990690 0.6306602 0.6752086 0.7260074 0.7831658 0.8033594 0.8402109 #>  [336,] 0.3289088 0.8155733 1.0312263 1.0357225 1.0581104 1.0673733 1.2755977 #>  [337,] 0.8709788 1.0477017 1.0789482 1.0988490 1.1016498 1.1240254 1.1296812 #>  [338,] 0.7938853 0.8214434 0.8586001 0.8912523 0.9099715 0.9300438 0.9493070 #>  [339,] 0.4716123 0.4842592 0.5609459 0.5718704 0.6015230 0.6078971 0.6445822 #>  [340,] 0.6426809 0.6704468 0.7431848 0.7477983 0.7762443 0.8068303 0.8103325 #>  [341,] 0.5118614 0.5935021 0.6673624 0.7622878 0.7890376 0.8377409 0.8500962 #>  [342,] 0.4491403 0.5369062 0.5535473 0.6199787 0.6603320 0.7334966 0.7376410 #>  [343,] 0.7695961 0.8133929 0.8436207 0.9022478 0.9423514 0.9785326 1.0057263 #>  [344,] 0.4531381 0.4610170 0.5640949 0.6101552 0.6103766 0.6330518 0.6344158 #>  [345,] 1.0564430 1.1137578 1.1537274 1.2746458 1.2820930 1.3034476 1.3343886 #>  [346,] 0.4477567 0.4755121 0.5314820 0.5559668 0.5674493 0.5896261 0.5928799 #>  [347,] 0.2479615 0.2599752 0.3516542 0.3927027 0.5308820 0.5360330 0.5566877 #>  [348,] 0.3249670 0.4607104 0.5693826 0.5998738 0.6146595 0.6335485 0.6600437 #>  [349,] 0.6112777 0.7555510 0.7618507 0.8043655 0.9199764 0.9360401 0.9805308 #>  [350,] 0.3145800 0.3722427 0.3934789 0.3961389 0.4364131 0.4431789 0.5318551 #>  [351,] 0.4557390 0.4621184 0.5526087 0.5548300 0.5563126 0.6118375 0.7660418 #>  [352,] 0.2892476 0.4356179 0.4645724 0.5277545 0.6075361 0.6383762 0.6549417 #>  [353,] 0.5484307 0.6466006 0.6893450 0.6907151 0.7033752 0.7229736 0.7323097 #>  [354,] 0.5135879 0.5817484 0.8763911 0.9457505 0.9690468 1.0206453 1.2158233 #>  [355,] 0.2437404 0.3904650 0.4648172 0.4724190 0.4791082 0.5286624 0.6013011 #>  [356,] 1.0110752 1.0646770 1.0761689 1.1188422 1.1896131 1.2036467 1.2214902 #>  [357,] 0.5396612 0.5974130 0.6538700 0.6965263 0.7279314 0.7283112 0.7434224 #>  [358,] 0.6864797 0.7592232 0.8837776 0.9123621 0.9675919 0.9951581 1.0401610 #>  [359,] 0.6328868 0.7023876 0.7868892 0.9040195 0.9465695 0.9569775 1.0073981 #>  [360,] 0.3701436 0.3805127 0.4457365 0.4579178 0.4796179 0.4948389 0.5223903 #>  [361,] 0.3926418 0.4078788 0.4241215 0.5198553 0.5334882 0.5872158 0.6080891 #>  [362,] 0.5733520 0.6080817 0.8298260 0.8899266 0.9073886 1.0201472 1.1282555 #>  [363,] 0.5522974 0.6573923 0.8710764 0.8854436 0.9675919 0.9980781 0.9990939 #>  [364,] 0.6781649 0.7159846 0.7346854 0.8630724 0.8868467 0.9793853 0.9860598 #>  [365,] 0.6279899 0.8144972 0.9279832 0.9698021 0.9837599 1.0072214 1.0958183 #>  [366,] 0.3600981 0.4078553 0.5003120 0.5247843 0.5301252 0.5478527 0.5565539 #>  [367,] 0.7921124 1.3747818 1.4056990 1.4778882 1.5754066 1.6200769 1.7140541 #>  [368,] 0.8501720 0.8857446 0.9600454 1.0086696 1.0734394 1.0973473 1.1224974 #>  [369,] 0.2159943 0.6832041 0.7405994 0.7598172 0.7625477 0.7711323 0.8061412 #>  [370,] 0.3391393 0.3460267 0.3871452 0.3872540 0.3879917 0.3963149 0.4062885 #>  [371,] 0.3054163 0.4981992 0.5738514 0.5955284 0.7093720 0.7147622 0.7212493 #>  [372,] 0.6160121 0.7557852 0.8656432 0.8730633 0.8756464 0.9541169 1.0147551 #>  [373,] 0.9321153 0.9626257 1.0250126 1.0433128 1.0694023 1.0761362 1.1528759 #>  [374,] 0.4805085 0.5788997 0.7495312 0.7562517 0.7730945 0.8041985 0.9215420 #>  [375,] 0.4400585 0.6618226 0.7333524 0.7550966 0.8100295 0.8748850 0.9474302 #>  [376,] 0.2037460 0.2910956 0.3212052 0.3556839 0.4551768 0.4788163 0.5050436 #>  [377,] 0.5243236 0.5308665 0.5385587 0.6144839 0.6251247 0.6508075 0.6721808 #>  [378,] 0.2730216 0.3305259 0.5989855 0.6595621 0.7185466 0.7263062 0.7372227 #>  [379,] 0.2541808 0.2599752 0.3534468 0.4151275 0.4539749 0.4678726 0.5355268 #>  [380,] 0.3896588 0.4204726 0.4311123 0.4534754 0.4814463 0.5158828 0.5427018 #>  [381,] 0.3134969 0.4400585 0.7264647 0.7441207 0.7517801 0.9306994 0.9388194 #>  [382,] 1.1716580 1.2602316 1.2972300 1.4109557 1.4151818 1.4322673 1.4354676 #>  [383,] 0.9015460 1.0945550 1.1027429 1.2678974 1.3041206 1.3222403 1.3567016 #>  [384,] 0.1167473 0.3010307 0.3508861 0.4046845 0.4814228 0.4924958 0.5116427 #>  [385,] 0.1615857 0.4557390 0.6391136 0.7242930 0.7869123 0.7975347 0.8011830 #>  [386,] 0.3009515 0.4510923 0.5672576 0.6371210 0.6542993 0.6699075 0.6997288 #>  [387,] 0.3229241 0.4082152 0.4561227 0.4686753 0.5156747 0.6166287 0.6276547 #>  [388,] 0.3608010 0.4051075 0.4067788 0.4581241 0.4610033 0.4934180 0.5606218 #>  [389,] 0.1971400 0.3094647 0.3479570 0.4075401 0.5819963 0.6187588 0.6447304 #>  [390,] 0.3926473 0.5198553 0.5380430 0.5439251 0.6337909 0.6566852 0.6929682 #>  [391,] 0.3823258 0.5192788 0.5443350 0.6199787 0.6486892 0.7383355 0.8717687 #>  [392,] 0.5697849 0.6724619 0.6792690 0.7425474 0.7465947 0.7760800 0.8196744 #>  [393,] 0.7407890 0.8789290 0.8839080 0.9018569 0.9057547 0.9485185 0.9621267 #>  [394,] 0.2000552 0.3378843 0.3579669 0.4115055 0.4664739 0.4738849 0.4842084 #>  [395,] 0.1446983 0.3068994 0.3259043 0.4044118 0.4720293 0.4963816 0.5026097 #>  [396,] 0.6334836 0.7354315 0.7501863 1.0163345 1.0728674 1.0773280 1.0834435 #>  [397,] 0.3899113 0.4439753 0.4515302 0.4783791 0.5375171 0.6508075 0.6797829 #>  [398,] 0.2761744 0.4385304 0.4773376 0.5925989 0.6212457 0.6538643 0.7022715 #>  [399,] 0.8492731 0.8501720 0.8937073 0.8961762 0.9168882 0.9256335 1.0037677 #>  [400,] 0.2750318 0.2829339 0.4594203 0.5738593 0.6044769 0.6250455 0.6567567 #>  [401,] 0.2317985 0.4799709 0.6549417 0.6706131 0.6795402 0.6963003 0.7710988 #>  [402,] 0.3412883 0.3744344 0.4091790 0.4648172 0.4927252 0.5609264 0.5894179 #>  [403,] 0.7435540 0.9057547 1.1412379 1.1713457 1.2674529 1.3397122 1.3776291 #>  [404,] 0.3881702 0.4098433 0.4203433 0.5265610 0.5432840 0.5653471 0.5773754 #>  [405,] 0.3017876 0.4844133 0.4956254 0.5158819 0.5276785 0.5818578 0.6157790 #>  [406,] 0.5452476 0.9452586 1.0265817 1.0758871 1.2355870 1.2863903 1.3321249 #>  [407,] 0.1750146 0.3828938 0.4376545 0.4932866 0.5227510 0.5310416 0.5717735 #>  [408,] 0.3249670 0.3914998 0.4388169 0.4534335 0.4656767 0.5162804 0.5932005 #>  [409,] 0.6080817 0.8812121 0.9537708 0.9727156 0.9820216 1.0686974 1.0704494 #>  [410,] 0.4102843 0.4583782 0.5172681 0.5422412 0.6053125 0.6710585 0.6923370 #>  [411,] 0.4654339 0.5239324 0.6144572 0.6155733 0.6379017 0.6451678 0.6518081 #>  [412,] 0.4865141 0.5741344 0.6776519 0.9213850 1.0493755 1.0832071 1.1003782 #>  [413,] 0.6106341 0.6418493 0.6629175 0.6859374 0.6992235 0.7197091 0.7481279 #>  [414,] 0.4716371 0.6456537 0.7358221 0.7936581 0.8863946 0.9456348 0.9743875 #>  [415,] 0.3626104 0.4903882 0.5317338 0.5361440 0.5447359 0.5529495 0.5577432 #>  [416,] 0.7407890 0.8133929 0.8453563 0.8512975 0.8775733 0.8840670 0.9349477 #>  [417,] 0.3731690 0.4019821 0.4308653 0.6295475 0.6670429 0.6795672 0.7020822 #>  [418,] 0.4720412 0.5535697 0.6537409 0.7197612 0.7318622 0.7558181 0.7636585 #>  [419,] 0.6131800 0.8471594 0.8561612 0.9461905 0.9777915 1.0725152 1.0731118 #>  [420,] 0.3941056 0.4574139 0.5403093 0.5573309 0.6157625 0.6259001 0.6264802 #>  [421,] 0.3350684 0.4613849 0.4755121 0.5051814 0.5111170 0.5240209 0.6152631 #>  [422,] 0.5144417 0.5521531 0.5688047 0.5720591 0.5844712 0.6106181 0.6290408 #>  [423,] 0.3839080 0.4039836 0.4190034 0.4461435 0.4531381 0.4772549 0.4872315 #>  [424,] 0.9748714 1.0109194 1.0220249 1.2155923 1.2304282 1.3029029 1.3222355 #>  [425,] 0.4464898 0.7501863 0.7768757 0.9050090 0.9564470 1.0192619 1.1188422 #>  [426,] 0.4188936 0.4698432 0.4767420 0.5081513 0.6932627 0.6961120 0.7281312 #>  [427,] 1.2532310 1.2596442 1.3276759 1.3319798 1.3475818 1.6812526 1.6816424 #>  [428,] 1.0256225 1.3091979 1.4366796 1.4524318 1.5285608 1.5995454 1.6038009 #>  [429,] 0.4601836 0.5206727 0.5433286 0.5520191 0.6364805 0.7490691 0.7698382 #>  [430,] 0.1809120 0.3476522 0.3822680 0.4094533 0.4571746 0.4767461 0.5004424 #>  [431,] 0.4325592 0.4832034 0.4907078 0.5175776 0.6084595 0.6260754 0.6298785 #>  [432,] 0.3054163 0.4867738 0.5016423 0.5261997 0.6002333 0.6637852 0.6823338 #>  [433,] 0.6039175 0.6217492 0.7620641 0.9256335 0.9520252 1.0051690 1.0172139 #>  [434,] 0.3572997 0.5136966 0.5267006 0.5616835 0.5797273 0.5843134 0.5860378 #>  [435,] 0.5107433 0.5530979 0.5564398 0.6354316 0.6619037 0.7266306 0.7413673 #>  [436,] 0.6448789 1.1042188 1.1861229 1.1985962 1.2529846 1.3018767 1.3299034 #>  [437,] 0.6797598 0.7298637 0.7329266 0.7556412 0.8093335 0.8515147 0.8963428 #>  [438,] 0.2864065 0.3180686 0.3332885 0.3841220 0.3981714 0.4307838 0.4686568 #>  [439,] 1.5015243 1.5707855 1.5802356 1.6782756 1.7323457 1.8162768 1.9210671 #>  [440,] 0.6660422 0.8396742 0.8721703 0.8795618 0.8921344 0.8974167 0.9854368 #>  [441,] 0.3558065 0.5817407 0.5904484 0.7536046 0.8313303 0.8945944 0.9209852 #>  [442,] 0.4102843 0.6095626 0.6825428 0.6943403 0.7115051 0.7612940 0.8011428 #>  [443,] 0.4725882 0.5007043 0.5730914 0.5768880 0.6431886 0.7342968 0.8458692 #>  [444,] 0.7737406 0.8346484 0.8372270 0.8697144 0.8913551 0.9723249 1.0117602 #>  [445,] 0.1847665 0.3592324 0.4582307 0.5039295 0.5434084 0.5888992 0.6084338 #>  [446,] 0.2974618 0.3483000 0.4299961 0.4534848 0.4829311 0.5086513 0.5147283 #>  [447,] 0.5047992 0.5223502 0.5894169 0.5934861 0.6181161 0.6185357 0.6231081 #>  [448,] 0.6708331 0.7222020 0.7395222 0.7670224 0.8659657 0.8726855 0.8895570 #>  [449,] 0.2660949 0.2844869 0.3679288 0.4864498 0.4933284 0.5177305 0.5689224 #>  [450,] 0.2729237 0.4430788 0.6323540 0.6699075 0.7374118 0.7441829 0.8463394 #>  [451,] 0.6418493 0.6552488 0.7753734 0.7868281 0.8895570 0.9250797 0.9365784 #>  [452,] 0.3556839 0.3918550 0.3926472 0.4346894 0.4357852 0.4562678 0.4638684 #>  [453,] 0.1371682 0.3484084 0.3979447 0.4075914 0.5212004 0.5264038 0.5570377 #>  [454,] 0.3901522 0.6833425 0.7011029 0.7421152 0.7760126 0.7886407 0.7943253 #>  [455,] 0.2761744 0.3351087 0.3529160 0.3884884 0.5379425 0.5642968 0.5926376 #>  [456,] 0.2306866 0.3998621 0.5171973 0.5437460 0.5520436 0.5654988 0.6086110 #>  [457,] 0.5316368 0.7931566 0.9988059 1.0125706 1.0740802 1.1071935 1.1677634 #>  [458,] 0.5268177 0.5277596 0.5342558 0.5736626 0.5754797 0.5937527 0.5949497 #>  [459,] 0.4270772 0.4437895 0.4808101 0.5251106 0.5377797 0.5452370 0.5624674 #>  [460,] 0.3382396 0.5222466 0.5340132 0.5437460 0.5474260 0.6638164 0.6890785 #>  [461,] 1.0871487 1.1521733 1.3186558 1.3796134 1.4389386 1.4639651 1.5836119 #>  [462,] 0.2971146 0.3216385 0.4137035 0.4965839 0.5383376 0.5564398 0.6148209 #>  [463,] 0.1563262 0.3993269 0.6386085 0.6962160 0.7289857 0.7655108 0.7717962 #>  [464,] 0.3627877 0.8383847 0.8694511 1.0919018 1.1111228 1.1945906 1.2291547 #>  [465,] 0.4629914 0.6776519 1.0109194 1.0227455 1.1421889 1.1844731 1.1933325 #>  [466,] 0.6119093 0.7346854 0.7963357 0.7995573 0.8694511 0.8858082 0.9169267 #>  [467,] 0.1446983 0.2343165 0.2719022 0.4477273 0.4573580 0.4814228 0.5185992 #>  [468,] 0.3017876 0.4786554 0.5827290 0.6001514 0.6089742 0.6218585 0.6237036 #>  [469,] 0.4321721 0.5135879 0.7253013 0.8599640 0.8809915 0.8948210 0.9637545 #>  [470,] 0.3189098 0.4877173 0.5342558 0.5584288 0.5681774 0.5755446 0.5785802 #>  [471,] 0.8014785 0.8031479 0.8114705 0.9191939 1.0138363 1.0280732 1.1222694 #>  [472,] 0.4832034 0.5889393 0.7260862 0.8379731 0.8445866 0.8538536 0.8888023 #>  [473,] 0.5997107 0.7620341 0.7681833 0.8952096 0.9245384 0.9556811 0.9638738 #>  [474,] 1.0332294 1.0591495 1.1212533 1.1889286 1.2813695 1.3105511 1.3140691 #>  [475,] 0.4746536 0.5594627 0.5720591 0.5865575 0.6261752 0.6387037 0.6390353 #>  [476,] 0.3817292 0.4863579 0.5727911 0.5823500 0.6233895 0.6661872 0.7513597 #>  [477,] 0.4414344 0.5306052 0.5530363 0.6850243 0.7019092 0.7552747 0.7557691 #>  [478,] 1.0168681 1.0239103 1.1621422 1.1687405 1.1705869 1.1803782 1.2053367 #>  [479,] 0.2373751 0.4328520 0.5564429 0.6415150 0.7069649 0.7469373 0.8235245 #>  [480,] 0.7347367 0.7859777 0.8289651 0.8657601 0.9424610 1.0136499 1.0787230 #>  [481,] 0.4788796 0.5815831 0.6902230 0.7654545 0.7657172 0.7669485 0.7907610 #>  [482,] 0.3333481 0.3874518 0.4835486 0.5730914 0.6105391 0.6346652 0.6644449 #>  [483,] 0.6884039 0.7030908 0.7562356 0.7709582 0.8588153 0.8636594 0.9082442 #>  [484,] 0.2897140 0.4211917 0.4508977 0.5121358 0.5204985 0.6307484 0.6311017 #>  [485,] 0.4392037 0.5129569 0.5609981 0.6427950 0.6431886 0.6822642 0.6991106 #>  [486,] 0.3867716 0.3916429 0.5055339 0.5104774 0.5275167 0.5333421 0.5644466 #>  [487,] 0.4247027 0.5147160 0.5280532 0.5910768 0.6101552 0.6132997 0.6202855 #>  [488,] 0.4589530 0.5029175 0.5507186 0.5609264 0.6234147 0.6500349 0.6507047 #>  [489,] 0.2597361 0.4923605 0.6502924 0.7650320 0.8051307 0.8421122 0.8470416 #>  [490,] 0.1335520 0.4000708 0.4024178 0.4066095 0.4188355 0.4720293 0.5133923 #>  [491,] 0.6139562 0.7347367 0.7592232 0.9202498 1.0175240 1.0466033 1.0608419 #>  [492,] 0.2379059 0.2739039 0.3008485 0.3431314 0.4359616 0.4512409 0.4763999 #>  [493,] 0.4464898 0.5613358 0.6369502 0.6412002 0.7354315 0.8515494 0.8570085 #>  [494,] 0.5490485 0.7724099 0.8393017 1.0657366 1.0850882 1.0994594 1.1132785 #>  [495,] 0.4392037 0.4948411 0.5111170 0.5418545 0.5624674 0.5646282 0.5674493 #>  [496,] 0.3179080 0.3351087 0.3448090 0.4150123 0.4385304 0.5136966 0.5325175 #>  [497,] 0.1930292 0.2722534 0.3110222 0.3841220 0.4212798 0.4534848 0.4628253 #>  [498,] 0.3726977 0.6139110 0.6767445 0.6777723 0.6801160 0.7583879 0.7754469 #>  [499,] 0.8715033 1.1673269 1.1786455 1.2225598 1.2368268 1.3105511 1.4204368 #>  [500,] 0.4515302 0.5674861 0.5733027 0.5884661 0.5968307 0.6269816 0.7405584 #>  [501,] 0.2589438 0.4013081 0.5425024 0.5613727 0.5681808 0.6580374 0.6645753 #>  [502,] 0.1371682 0.2820141 0.3452228 0.4139769 0.4768170 0.4872125 0.4881036 #>  [503,] 0.5026871 0.5107522 0.5399249 0.5504223 0.5866964 0.5904526 0.6334289 #>  [504,] 0.5815831 0.6239864 0.7555510 0.7787257 0.8065249 0.8619526 0.8781633 #>  [505,] 0.2282451 0.2518042 0.3144511 0.3756370 0.4615858 0.4723697 0.4753633 #>  [506,] 0.5371429 0.6006650 0.6015509 0.7098818 0.7146966 0.7162719 0.7594543 #>  [507,] 0.7538766 1.1249370 1.3491214 1.4686207 1.5373062 1.5713983 1.5935008 #>  [508,] 0.8887571 0.9473373 0.9490966 0.9755427 0.9990500 1.0050785 1.0168811 #>  [509,] 0.3620238 0.4416808 0.4567400 0.4604169 0.4786554 0.4956254 0.5120519 #>  [510,] 0.6416048 0.7013995 0.7468283 0.8969474 0.9035378 0.9713862 1.0277810 #>  [511,] 0.4218561 0.5138855 0.5988082 0.6015230 0.6152985 0.6583690 0.6764273 #>  [512,] 0.2844869 0.3459008 0.4661783 0.4781197 0.4849322 0.4898987 0.5063794 #>  [513,] 0.4354761 0.4760933 0.5584288 0.5646775 0.5945836 0.6276946 0.6420593 #>  [514,] 0.3621493 0.6708331 0.7085881 0.7385076 0.7732280 0.7866037 0.8561164 #>  [515,] 0.2243338 0.3203030 0.3821858 0.4347206 0.4694829 0.5253377 0.5984684 #>  [516,] 0.9436752 1.1214679 1.2465422 1.3327393 1.4321388 1.4394378 1.4569699 #>  [517,] 0.5147160 0.7521877 0.8130616 0.8416160 0.8437582 0.8464397 0.8915208 #>  [518,] 0.2709310 0.4622099 0.4858578 0.7607982 0.8430438 0.8828174 0.8872751 #>  [519,] 0.1327150 0.2149231 0.3452228 0.3979447 0.4023114 0.5017686 0.5168868 #>  [520,] 0.2421974 0.2973152 0.4741836 0.5191194 0.5529495 0.5615720 0.5787092 #>  [521,] 0.3391393 0.3646449 0.3661038 0.3744624 0.4249510 0.4579178 0.5196651 #>  [522,] 0.2442796 0.2501583 0.2551735 0.3844847 0.4246006 0.4751421 0.4902579 #>  [523,] 0.6900928 0.7583131 0.8632378 1.0263673 1.2602902 1.2797361 1.3324025 #>  [524,] 0.7522248 0.7889160 0.8169467 0.8278818 0.8480178 0.8641227 0.9054064 #>  [525,] 0.6109361 0.6327766 0.6898869 0.7011029 0.7825049 0.7862455 0.7959740 #>  [526,] 0.5310801 0.6424009 0.7612147 0.8294824 0.8492731 0.8582279 0.9485264 #>  [527,] 0.4314698 0.4513099 0.4867738 0.4981992 0.5342780 0.5563126 0.6311789 #>  [528,] 0.6030332 0.6525716 0.7085528 0.7374386 0.7737526 0.8101804 0.8418873 #>  [529,] 0.3479570 0.4088757 0.4100585 0.4621882 0.4882521 0.5214709 0.5915868 #>  [530,] 0.2570158 0.4135943 0.5037140 0.5677086 0.5909622 0.5999769 0.6059992 #>  [531,] 0.4424810 0.4607104 0.4954583 0.5807621 0.6118877 0.6692578 0.6838385 #>  [532,] 0.4918813 0.5544807 0.7574095 0.7744003 0.7784635 0.7798159 0.7916561 #>  [533,] 0.4300750 0.4858578 0.5877637 0.6047309 0.6485012 0.6927530 0.7084461 #>  [534,] 0.7264647 0.7480227 0.7598069 0.8100295 0.8256684 0.8896760 0.8987279 #>  [535,] 0.6686518 0.6703204 0.7868892 0.8803812 0.9084045 0.9208148 0.9844678 #>  [536,] 0.2877138 0.3290943 0.3407237 0.4455691 0.4866517 0.5094120 0.5107522 #>  [537,] 0.3318713 0.5431551 0.5858429 0.6376734 0.6502924 0.7580317 0.7594007 #>  [538,] 0.3195039 0.4741836 0.4844496 0.5215058 0.5360330 0.5469780 0.5529867 #>  [539,] 0.1720647 0.6426809 0.7116302 0.7405994 0.8932080 0.9307701 0.9453516 #>  [540,] 0.4691113 0.4799574 0.5257188 0.5432063 0.5488394 0.5508654 0.5816616 #>  [541,] 0.1721220 0.6661872 0.6720747 0.7669485 0.7810492 0.7822587 0.8105143 #>  [542,] 0.3718836 0.3898495 0.4877173 0.4962893 0.6264381 0.6350356 0.6629213 #>  [543,] 0.5724313 0.6424009 0.7669921 0.8092747 0.8242152 0.8961762 0.9432879 #>  [544,] 0.4116656 0.5019399 0.6097888 0.6584063 0.6814400 0.6983772 0.7212864 #>  [545,] 1.9560378 1.9765159 2.0673857 2.1269272 2.1479973 2.2799315 2.3248546 #>  [546,] 0.4987087 0.6489374 0.7555763 0.8144972 0.8214434 0.8453532 0.8768583 #>  [547,] 0.4041352 0.4269622 0.4445657 0.5385163 0.6158243 0.6815269 0.7266645 #>  [548,] 0.8552444 0.9924349 0.9952317 0.9990500 1.0263286 1.0804482 1.1303968 #>  [549,] 0.7818651 1.1239698 1.2293291 1.3811171 1.4422726 1.4785361 1.5502774 #>  [550,] 0.3485256 0.4933824 0.5511180 0.6204600 0.6703018 0.7010315 0.7604159 #>  [551,] 0.4902834 0.7200820 0.7531176 0.8294824 0.8573507 0.8772626 0.9251742 #>  [552,] 0.4934448 0.5056424 0.5977433 0.6366803 0.6624597 0.6709798 0.6742979 #>  [553,] 0.6646960 0.7105108 0.8482912 0.8502664 0.8611970 0.9051737 0.9120340 #>  [554,] 0.3382396 0.3424935 0.3998621 0.4227972 0.4905033 0.5325637 0.5557010 #>  [555,] 0.4428608 0.5150716 0.5648042 0.5938394 0.6369502 0.6837029 0.7011885 #>  [556,] 0.6448182 0.8573984 0.8656432 0.8662437 0.9924424 0.9933986 1.0144281 #>  [557,] 0.5103810 0.5726450 0.6204999 0.6986739 0.7818533 0.7876664 0.8893395 #>  [558,] 0.5520436 0.5628470 0.6579810 0.6638164 0.7542274 0.8054140 0.8730747 #>  [559,] 0.4698432 0.6732148 0.7160065 0.7331643 0.7480227 0.7517801 0.7768149 #>  [560,] 0.8553208 1.0317032 1.0489231 1.0502230 1.1784912 1.2033993 1.3153626 #>  [561,] 1.0488505 1.3793814 1.4593063 1.6057162 1.6168582 1.7443408 1.7480833 #>  [562,] 0.3359267 0.6389343 0.6484112 0.6524257 0.7106713 0.7185466 0.7364701 #>  [563,] 0.4716371 0.7229052 0.7871541 0.8968425 0.9508083 0.9809840 0.9810841 #>  [564,] 0.7642952 0.7760126 0.7825049 0.9254164 0.9266043 1.0093034 1.0210357 #>  [565,] 0.6115696 0.6795672 0.6802801 0.6898960 0.7490107 0.7651537 0.7730474 #>  [566,] 0.5766435 0.6301442 0.6352962 0.6587175 0.6964233 0.7000013 0.8449212 #>  [567,] 0.2914010 0.5618533 0.6711359 0.8024687 0.8171410 0.8236750 0.8590702 #>  [568,] 0.4176337 0.4863579 0.5129569 0.5493066 0.5646282 0.5758167 0.5846692 #>  [569,] 0.3078239 0.3117212 0.3203030 0.5565904 0.5690470 0.5912075 0.6362178 #>  [570,] 0.3179080 0.3529160 0.3980254 0.4073341 0.4773376 0.4996877 0.5517540 #>  [571,] 0.6744512 0.7221984 0.7268542 0.8451409 0.9312168 0.9461905 0.9637608 #>  [572,] 0.4710551 0.4817876 0.5459784 0.5611150 0.5664959 0.5781671 0.5818368 #>  [573,] 0.3211625 0.4042186 0.4794384 0.4861438 0.4979203 0.5563560 0.5577121 #>  [574,] 0.3318713 0.3549502 0.3896094 0.4455691 0.5680138 0.5711103 0.6062475 #>  [575,] 0.2825222 0.3412883 0.3906673 0.4247027 0.4872315 0.5707510 0.5965402 #>  [576,] 0.2905101 0.3626104 0.4014034 0.4927931 0.5675699 0.5787092 0.5916930 #>  [577,] 0.3223980 0.3320370 0.5276247 0.5333421 0.5457220 0.6185357 0.6652205 #>  [578,] 0.4424810 0.4943809 0.6361122 0.6480673 0.6649017 0.6684110 0.6900415 #>  [579,] 0.3606939 0.4622581 0.5206727 0.6032393 0.6838213 0.6918828 0.7019943 #>  [580,] 0.1978266 0.3229241 0.3913383 0.4067788 0.4187933 0.4903167 0.6304902 #>  [581,] 0.4174339 0.4996877 0.5678000 0.6638864 0.6649017 0.6838385 0.6877081 #>  [582,] 0.3168135 0.4770976 0.5196167 0.5717305 0.5963233 0.7429003 0.7899325 #>  [583,] 0.3066847 0.4978562 0.5513619 0.5667609 0.5668975 0.5692347 0.5840279 #>  [584,] 0.5455471 0.5745557 0.6212270 0.6399345 0.6900177 0.7152320 0.7197999 #>  [585,] 0.3564613 0.5549349 0.6943403 0.7038719 0.7125444 0.7291695 0.7361051 #>  [586,] 0.2969402 0.5964303 0.6682694 0.6800451 0.7247200 0.7258541 0.7493712 #>  [587,] 0.4059949 0.5162737 0.5170223 0.5669233 0.5912075 0.6837227 0.6881501 #>  [588,] 0.5490485 0.8715033 1.1384162 1.1569241 1.1664993 1.2395562 1.2564987 #>  [589,] 0.4382253 0.5452958 0.5551863 0.5872158 0.5884958 0.6044390 0.6055999 #>  [590,] 0.6239864 0.6241481 0.6785228 0.7429341 0.7553276 0.7719454 0.7782327 #>  [591,] 0.4554380 0.4630756 0.5385619 0.6283615 0.6329265 0.6602664 0.6645013 #>  [592,] 0.3901522 0.5824584 0.6066476 0.6509478 0.7188305 0.7313685 0.7451991 #>  [593,] 0.4539424 0.5422511 0.5695320 0.6157790 0.6205800 0.6280803 0.6486892 #>  [594,] 0.1801754 0.5552337 0.6047309 0.6280594 0.7491215 0.7603822 0.8064573 #>  [595,] 0.5870834 0.6623269 0.7480074 0.7547250 0.7706185 0.7905384 0.8025484 #>  [596,] 0.2687452 0.4021975 0.4071275 0.4094533 0.4461435 0.4989726 0.5319536 #>  [597,] 0.6932381 0.7984198 1.0045045 1.0160888 1.0226691 1.0864679 1.1001071 #>  [598,] 0.4661317 0.5180413 0.6389343 0.6616835 0.6958492 0.7093417 0.7542764 #>  [599,] 0.5723115 0.5826577 0.8133667 0.8157722 0.8432885 0.8647628 0.8876669 #>  [600,] 0.4133517 0.4134331 0.4814943 0.4827837 0.5666000 0.5978966 0.6050855 #>  [601,] 0.8659693 0.9347285 1.2495963 1.2672880 1.2677070 1.3101289 1.4435704 #>  [602,] 0.2000552 0.3524701 0.4399712 0.4594776 0.4808101 0.4856380 0.4991628 #>  [603,] 0.7754724 0.7757816 0.8614030 0.9347285 0.9983359 1.0470636 1.0490556 #>  [604,] 0.3829765 0.4428608 0.5176782 0.5255208 0.5664207 0.6401261 0.6688434 #>  [605,] 0.4401566 0.4624230 0.6402065 0.6491583 0.6595621 0.6603190 0.6627391 #>  [606,] 0.5160779 0.5997597 0.6034885 0.6323915 0.6516348 0.6741550 0.6850373 #>  [607,] 0.3564613 0.6821746 0.7175856 0.8721690 0.9638738 0.9698021 0.9707709 #>  [608,] 0.4455296 0.5286624 0.5544904 0.5670835 0.6287559 0.6421341 0.6903849 #>  [609,] 0.3180686 0.4764278 0.4986083 0.5124417 0.5261221 0.5370760 0.5495321 #>  [610,] 0.3583589 0.4449203 0.4696645 0.5559947 0.5818368 0.5905843 0.5909729 #>  [611,] 0.4999196 0.5610809 0.5936021 0.6119592 0.6627480 0.6670429 0.7295190 #>  [612,] 0.4788796 0.7071888 0.7092578 0.7859777 0.8065249 0.8852198 0.9683598 #>  [613,] 0.4166936 0.4319189 0.5030482 0.5095629 0.5627475 0.6151386 0.6464372 #>  [614,] 0.4844133 0.5844723 0.7013837 0.7241966 0.7257482 0.7389188 0.7434541 #>  [615,] 0.3076231 0.4246512 0.5196167 0.6089335 0.7171361 0.8950523 0.8970780 #>  [616,] 0.5737001 0.7179395 0.7453942 0.8948977 0.9223799 0.9331536 0.9434501 #>  [617,] 0.4977942 0.4978562 0.6083650 0.6311111 0.6617519 0.6749101 0.6966104 #>  [618,] 0.3143889 0.3625599 0.4284995 0.4792680 0.5191194 0.5215058 0.5350618 #>  [619,] 0.2522903 0.4106838 0.4401566 0.4963816 0.5102398 0.5730537 0.5797152 #>  [620,] 0.4799709 0.5007043 0.5538210 0.6432768 0.6749629 0.6991106 0.7320925 #>  [621,] 0.3794363 0.5343922 0.5709542 0.6488452 0.6517845 0.7358221 0.7689319 #>  [622,] 0.2217699 0.2379059 0.3387787 0.3981178 0.4073308 0.4273011 0.4346894 #>  [623,] 0.4244134 0.4781233 0.4808560 0.5115859 0.5123870 0.5622643 0.5632083 #>  [624,] 0.3424935 0.3696577 0.5274997 0.5474260 0.5671859 0.6590215 0.6698931 #>  [625,] 0.3701436 0.3794363 0.5468104 0.6061405 0.6063486 0.6311256 0.6456537 #>  [626,] 0.3239348 0.3316793 0.3844847 0.4170641 0.4372703 0.4562678 0.4588069 #>  [627,] 0.3698866 0.4187589 0.4616340 0.4645889 0.5533702 0.5840967 0.6234320 #>  [628,] 0.2843077 0.5334882 0.5380430 0.5550542 0.5745557 0.5773049 0.5876636 #>  [629,] 0.3189098 0.3718836 0.4057138 0.4297693 0.5339051 0.5962536 0.5982717 #>  [630,] 0.1847665 0.4180365 0.4224309 0.5092464 0.5307682 0.5340513 0.5460991 #>  [631,] 0.5308441 0.5923813 0.6222618 0.6334068 0.6359134 0.6383762 0.6513015 #>  [632,] 0.2953358 0.5178109 0.5664575 0.6467473 0.6479294 0.7064148 0.7293981 #>  [633,] 0.8014785 0.9916877 1.0488612 1.2013391 1.2280995 1.2343578 1.2849968 #>  [634,] 0.3733548 0.5652968 0.5859505 0.6283615 0.6790960 0.7267974 0.7668148 #>  [635,] 0.3068031 0.4731726 0.5178109 0.5573309 0.5593639 0.6272235 0.6584535 #>  [636,] 0.3437915 0.3602085 0.4217992 0.4604169 0.5818578 0.6204600 0.6237036 #>  [637,] 0.5717305 0.6473916 0.7583114 0.9337663 0.9764781 0.9818067 1.0634416 #>  [638,] 0.3664342 0.4083134 0.4449203 0.4550743 0.4799850 0.4806164 0.4838654 #>  [639,] 0.3913383 0.4561227 0.4891962 0.5024430 0.6282769 0.6639185 0.6801811 #>  [640,] 0.4308653 0.5766530 0.6452316 0.6627480 0.6659478 0.6698102 0.6858692 #>  [641,] 0.6420773 0.6525716 0.7372227 0.8276867 0.8687234 0.8836192 0.9193287 #>  [642,] 0.3219860 0.6018606 0.6025670 0.6341304 0.6349342 0.7576453 0.7839866 #>  [643,] 0.3216385 0.4918813 0.5251696 0.5460777 0.5674861 0.6542798 0.6794466 #>  [644,] 0.3502379 0.3881702 0.4159844 0.4343659 0.5163155 0.6158295 0.6513095 #>  [645,] 0.5677104 1.0222328 1.0912293 1.1520158 1.2310638 1.2372374 1.2376552 #>  [646,] 0.6160121 0.8454857 0.9094067 0.9208421 1.0264969 1.2257330 1.2568813 #>  [647,] 0.2698645 0.4223929 0.4416783 0.4753633 0.5003345 0.5039295 0.5039796 #>  [648,] 0.3533593 0.5904484 0.7639255 0.8332346 0.8633876 0.9361079 0.9501915 #>  [649,] 0.2455228 0.3584825 0.4099719 0.5063794 0.5140984 0.5444032 0.5478527 #>  [650,] 0.3714422 0.4746536 0.5421922 0.5518987 0.5847711 0.6055999 0.6228135 #>  [651,] 0.4343500 0.4907078 0.5521531 0.6204110 0.6433946 0.7082038 0.7711323 #>  [652,] 0.3679288 0.4849322 0.5052216 0.5381778 0.6420593 0.6516348 0.6768486 #>  [653,] 0.2243338 0.3078239 0.3962582 0.4660301 0.4941484 0.5643781 0.6141087 #>  [654,] 0.3825865 0.8735101 0.8831188 0.9359285 0.9454706 0.9862528 1.0917288 #>  [655,] 0.7594543 0.8709809 0.8969474 0.9557584 0.9640322 1.0304664 1.0414025 #>  [656,] 0.2475771 0.3351453 0.3450631 0.3552445 0.4466877 0.5434903 0.5823500 #>  [657,] 0.3134969 0.6618226 0.7598069 0.8034897 0.8553208 0.8960728 0.8982283 #>  [658,] 0.3693357 0.3890541 0.4581241 0.5091720 0.5431640 0.5545793 0.5555561 #>  [659,] 0.5530828 0.6899483 0.7435521 0.7468328 0.7717962 0.8136364 0.8326890 #>  [660,] 0.3379294 0.4106175 0.4640828 0.4843613 0.4852370 0.4919889 0.6025572 #>  [661,] 0.8388058 1.2435026 1.2853057 1.4091069 1.6119388 1.6168232 1.6246200 #>  [662,] 0.3641254 0.4088757 0.4549116 0.4772254 0.5030698 0.5158828 0.5507033 #>  [663,] 0.8448204 1.0081354 1.2219897 1.4627949 1.5208569 1.5585316 1.6567250 #>  [664,] 0.6927530 0.8430438 0.8594719 0.8691323 0.8830522 0.9013178 0.9165916 #>  [665,] 0.4940797 0.6204999 0.6777128 0.6858426 0.7764788 0.8522735 0.8644439 #>  [666,] 0.4941095 0.8799675 1.0045045 1.1280411 1.2103488 1.2959024 1.3299034 #>  [667,] 0.2835264 0.4313634 0.5000480 0.5203304 0.5207198 0.5256925 0.5259265 #>  [668,] 0.3080159 0.3968199 0.4892549 0.5667609 0.6083650 0.7106938 0.8440646 #>  [669,] 0.3443710 0.3727976 0.3729757 0.4824820 0.5033851 0.5126071 0.5281170 #>  [670,] 0.4158074 0.4630756 0.5433057 0.5736626 0.5846316 0.6293418 0.6790960 #>  [671,] 0.3039197 0.5039796 0.5084350 0.5161211 0.5858715 0.6084338 0.6200764 #>  [672,] 0.2750318 0.4587560 0.4819972 0.4824103 0.4954196 0.5681808 0.5839463 #>  [673,] 0.8762362 0.9480539 0.9826326 1.0193008 1.0200392 1.1140211 1.1348969 #>  [674,] 0.3524701 0.4270772 0.5263739 0.5314820 0.5356406 0.5758492 0.5876360 #>  [675,] 0.2957806 0.3407834 0.3872540 0.4249510 0.4905699 0.5047992 0.5626660 #>  [676,] 0.7833212 0.8870213 0.8917933 0.9288415 0.9397830 0.9462630 0.9473325 #>  [677,] 0.3717799 0.3950093 0.4321146 0.4472523 0.4686445 0.5181290 0.5431295 #>  [678,] 0.4414323 0.9010076 1.0632862 1.1004647 1.2692701 1.3653849 1.4149941 #>  [679,] 0.3988677 0.4891962 0.5945450 0.6106341 0.7007926 0.7300473 0.7306627 #>  [680,] 0.2722534 0.3350058 0.4502007 0.4618981 0.4786068 0.4878440 0.4930080 #>  [681,] 0.2589438 0.4896377 0.5462093 0.5530828 0.5567710 0.6447304 0.6767445 #>  [682,] 0.3199740 0.3355059 0.4106175 0.4170100 0.4438410 0.5518987 0.5730440 #>  [683,] 0.1832772 0.3850870 0.3917846 0.5251859 0.5261997 0.6172361 0.6835537 #>  [684,] 0.3962582 0.4347206 0.5403935 0.5690470 0.5792327 0.5861405 0.6218700 #>  [685,] 0.4629914 0.4865141 0.7714353 0.8285677 0.8631265 0.9229963 1.0193008 #>  [686,] 0.5935021 0.6706131 0.7663015 0.8952279 0.9240633 0.9565208 0.9676375 #>  [687,] 0.3254636 0.3629002 0.4755009 0.4819700 0.4946442 0.5006729 0.5116951 #>  [688,] 0.3606955 0.4818432 0.4977241 0.5172207 0.5479214 0.7737406 0.7786176 #>  [689,] 0.2969402 0.6135255 0.6987704 0.7306847 0.7345973 0.7596807 0.7622878 #>  [690,] 0.3924172 0.4594203 0.4946310 0.4954196 0.6595576 0.6716778 0.6933842 #>  [691,] 0.7541382 1.1133547 1.1708898 1.2456960 1.2590504 1.3052732 1.3710348 #>  [692,] 0.7818651 0.7827597 0.8201722 0.8355861 0.8987279 0.9307553 1.0663334 #>  [693,] 0.2317985 0.6244683 0.6749629 0.7387995 0.7616241 0.7663015 0.8271269 #>  [694,] 0.5222466 0.5557010 0.5883293 0.5913874 0.6590215 0.6911446 0.7054018 #>  [695,] 0.6188296 0.6834793 0.7289857 0.7824238 0.8061055 0.8107453 0.8139949 #>  [696,] 0.3704090 0.4241215 0.4784119 0.5993602 0.6337909 0.7006170 0.7035318 #>  [697,] 0.3057673 0.3189174 0.3664342 0.5437147 0.5526087 0.5555431 0.5592956 #>  [698,] 0.3670383 0.4077064 0.4284365 0.4608742 0.4738735 0.5017686 0.5318242 #>  [699,] 0.3823258 0.4110389 0.6571222 0.7390066 0.8000941 0.8050859 0.8595606 #>  [700,] 0.4438410 0.4640828 0.5060953 0.5340130 0.5351940 0.5650983 0.5786185 #>  [701,] 0.5741344 0.8309714 0.9229963 1.0108708 1.0660826 1.1303261 1.1641330 #>  [702,] 0.5046474 0.7579934 0.8025352 0.9389258 0.9698619 1.0502584 1.1072271 #>  [703,] 0.1930292 0.3350058 0.3483000 0.4781233 0.4966426 0.4990704 0.5056916 #>  [704,] 0.1327150 0.2151662 0.2820141 0.3484084 0.4105656 0.4495376 0.4942353 #>  [705,] 0.8111712 0.9875163 1.0196181 1.0917492 1.1108097 1.2139102 1.2337932 #>  [706,] 0.4068428 0.4098433 0.4188936 0.4318238 0.5491096 0.6445031 0.6538700 #>  [707,] 0.6907151 0.6907589 0.7908816 0.8031375 0.8041985 0.8471594 0.9104056 #>  [708,] 0.9895265 1.0818001 1.1504483 1.1629934 1.1713457 1.2472325 1.3814272 #>  [709,] 0.4427544 0.5733511 0.5737001 0.5848665 0.6553606 0.7415332 0.7736953 #>  [710,] 0.7541382 0.7757816 0.7840028 0.9563662 1.0108708 1.0144713 1.0467571 #>  [711,] 0.4100585 0.4549116 0.4813132 0.5546491 0.5854069 0.6032393 0.6585494 #>  [712,] 0.4491403 0.4895727 0.5858715 0.6225686 0.6281380 0.6479462 0.6484295 #>  [713,] 0.3914998 0.4135943 0.5523455 0.5992848 0.6085380 0.6146595 0.6294432 #>  [714,] 0.3102862 0.3850870 0.5751942 0.6481963 0.6767025 0.7021173 0.7056644 #>  [715,] 0.1972097 0.2971146 0.4360727 0.4783791 0.5460777 0.5530979 0.5884661 #>  [716,] 0.8321812 0.9116642 0.9370018 0.9456106 0.9675876 1.0029524 1.0106167 #>  [717,] 0.1615857 0.4621184 0.6931897 0.7152110 0.7218076 0.7336559 0.7539447 #>  [718,] 0.3205367 0.4341458 0.4635491 0.4817876 0.5473548 0.5510738 0.5900833 #>  [719,] 0.4243306 0.4650894 0.4961051 0.5304840 0.5692926 0.5990901 0.6372457 #>  [720,] 0.8771297 0.9327977 0.9498636 0.9513818 1.0071882 1.0354095 1.0611345 #>  [721,] 0.4013081 0.4616340 0.4837333 0.4896377 0.4953395 0.5199133 0.5339908 #>  [722,] 0.2217699 0.3743819 0.3926472 0.4085398 0.4285053 0.4359616 0.4437738 #>  [723,] 0.4146693 0.5162804 0.5667814 0.5989300 0.5998738 0.6424083 0.6480673 #>  [724,] 0.8632378 1.1330825 1.2367595 1.2924369 1.3023498 1.3448677 1.3509613 #>  [725,] 0.4987087 0.5549349 0.5777528 0.6095626 0.6710585 0.7175856 0.8364262 #>  [726,] 0.2905101 0.3249547 0.3332885 0.3865375 0.4517690 0.5046312 0.5124417 #>  [727,] 0.4500563 0.4621679 0.4772950 0.5245113 0.5251859 0.5751942 0.5840035 #>  [728,] 0.5493781 0.7420372 0.8853208 1.0364016 1.0446697 1.1166608 1.1694635 #>  [729,] 0.3557058 0.4702127 0.4878075 0.5399249 0.6557159 0.6583690 0.6911446 #>  [730,] 0.6279899 0.6341986 0.7714244 0.9665095 1.0437977 1.0588026 1.1113653 #>  [731,] 0.7383355 0.7480425 0.8034032 0.8301829 0.8388058 0.9474084 1.0028521 #>  [732,] 0.3625463 0.6018606 0.6328868 0.6580186 0.6686518 0.6835369 0.6898869 #>  [733,] 0.5767138 0.7488825 0.7511663 0.8270865 0.8746919 0.8803812 0.8895518 #>  [734,] 0.3630545 0.4297693 0.4429503 0.4661783 0.4823596 0.4993231 0.5330216 #>  [735,] 0.4398836 0.5018750 0.5404431 0.5810094 0.6045351 0.6194848 0.6304902 #>  [736,] 1.0275648 1.0503101 1.2154938 1.2347512 1.2849259 1.3480431 1.3618444 #>  [737,] 0.3572997 0.4129854 0.4979955 0.5076045 0.5977933 0.6493586 0.6501762 #>  [738,] 0.4526260 0.5681774 0.5718704 0.5804964 0.5945836 0.6366124 0.6641362 #>  [739,] 0.6534864 0.9698619 1.0928033 1.4727194 1.4757486 1.4861174 1.5548163 #>  [740,] 0.2739039 0.3015051 0.3164230 0.3481273 0.4073308 0.4435987 0.4522626 #>  [741,] 0.1809120 0.2687452 0.3759863 0.3937819 0.4190034 0.4739121 0.4831816 #>  [742,] 0.4923605 0.5640391 0.6938226 0.6969955 0.7906171 0.8753647 0.9534664 #>  [743,] 0.5347924 0.8128535 0.9704098 1.0214017 1.1691366 1.1707951 1.1747406 #>  [744,] 0.5066467 0.5375171 0.5968307 0.6416882 0.6766320 0.7689906 0.8482104 #>  [745,] 0.2953358 0.4443948 0.4522191 0.6403021 0.6847252 0.7188112 0.7464132 #>  [746,] 0.5834112 0.6703457 0.7041127 0.7227584 0.7824238 0.7866159 0.8555685 #>  [747,] 0.5564429 0.6525409 0.6562667 0.6790719 0.7167750 0.7192347 0.8770667 #>  [748,] 0.6900928 0.8125873 0.9564843 1.0321547 1.1188368 1.1600270 1.2201402 #>  [749,] 0.3564653 0.4210615 0.4986083 0.5247843 0.5540353 0.5553801 0.5577121 #>  [750,] 0.3210113 0.3337319 0.3505972 0.3766900 0.3882882 0.4483583 0.4601276 #>  [751,] 0.7290339 0.7696708 1.3769271 1.3797905 1.5141980 1.5207586 1.6119388 #>  [752,] 0.2672144 0.3793273 0.4437895 0.5238277 0.5493066 0.6266480 0.6677139 #>  [753,] 0.2570158 0.3884884 0.3980254 0.4150123 0.5318551 0.5523455 0.5751524 #>  [754,] 0.3219860 0.6933274 0.7495244 0.7733663 0.7923732 0.8189921 0.8231966 #>  [755,] 0.4341458 0.5019399 0.5245113 0.5611150 0.5622643 0.5702810 0.5704173 #>  [756,] 0.3545104 0.3695051 0.4313634 0.5319536 0.5547772 0.5786138 0.6228976 #>  [757,] 0.4414323 0.8586001 0.8776712 1.0414052 1.0543306 1.3075222 1.3241112 #>  [758,] 0.4852257 0.4932947 0.5153236 0.5306396 0.5774661 0.5777790 0.5895402 #>  [759,] 0.3932888 0.4567400 0.5626370 0.5933715 0.6033454 0.6133296 0.6142913 #>  [760,] 0.3815934 0.5248463 0.5259265 0.5711612 0.5997008 0.6105391 0.6277977 #>  [761,] 0.5221236 0.5360127 0.5984684 0.6352962 0.6389843 0.6797289 0.7167518 #>  [762,] 0.5550542 0.6209100 0.6628226 0.7117558 0.7197999 0.7221726 0.7223246 #>  [763,] 0.5081989 0.5721579 0.6825755 0.7202299 0.8137731 0.8703142 0.9128977 #>  [764,] 0.3556412 0.3587015 0.4246006 0.4930080 0.5240904 0.5251106 0.5292125 #>  [765,] 0.3693357 0.3828938 0.4729712 0.4814473 0.4941835 0.4979955 0.5420239 #>  [766,] 1.3426503 1.3912910 1.4072853 1.4980208 1.5514362 1.5868214 1.6053534 #>  [767,] 0.4382253 0.4533020 0.4627672 0.4658854 0.4781726 0.4812069 0.5066925 #>  [768,] 0.2501583 0.3293245 0.3394326 0.4588069 0.4836364 0.5214415 0.5292125 #>  [769,] 0.2571824 0.4735947 0.4794384 0.5720614 0.5869870 0.5909919 0.6148209 #>  [770,] 0.4222102 0.4872668 0.5030482 0.5650983 0.5978966 0.6103750 0.6261544 #>  [771,] 0.1783147 0.3080159 0.4214539 0.5965576 0.6311111 0.7940962 0.8093335 #>  [772,] 0.1430510 0.3570360 0.3759863 0.3818433 0.3839080 0.4021975 0.4372703 #>  [773,] 0.4140243 0.6553606 0.6657525 0.7211506 0.8021730 0.9053264 0.9331536 #>  [774,] 0.5140984 0.5380347 0.5613995 0.5947929 0.6350249 0.6435289 0.6480212 #>  [775,] 0.3487987 0.3899113 0.4360727 0.4603693 0.6566037 0.6579535 0.6766320 #>  [776,] 0.4941484 0.5194713 0.6024698 0.6362178 0.6598473 0.7079401 0.7085052 #>  [777,] 0.3066847 0.4685498 0.5623832 0.5662922 0.5989300 0.5998091 0.6333773 #>  [778,] 0.4287212 0.5733511 0.6386085 0.6855182 0.7147060 0.7203841 0.7478216 #>  [779,] 0.2290925 0.4262510 0.4589530 0.4658854 0.5414529 0.5498846 0.5576668 #>  [780,] 0.2945343 0.4133517 0.4764770 0.5434903 0.5470326 0.5583721 0.5924978 #>  [781,] 0.4430788 0.4510923 0.4741621 0.5662883 0.5861405 0.6951537 0.6995760 #>  [782,] 0.2996900 0.3407834 0.4945176 0.5299550 0.5310416 0.6194848 0.6231081 #>  [783,] 0.2597100 0.2730793 0.4534754 0.4772254 0.4864788 0.4953667 0.4961873 #>  [784,] 0.3288662 0.5730440 0.5977760 0.6009382 0.6025572 0.6040855 0.6106409 #>  [785,] 0.5493781 0.7511663 0.9282721 0.9844678 1.0578269 1.0812152 1.1011811 #>  [786,] 0.3981178 0.4085398 0.4536275 0.4760712 0.4979213 0.5404929 0.5626660 #>  [787,] 0.5876370 0.6276547 0.7453942 0.7481755 0.7550133 0.7708851 0.7858902 #>  [788,] 0.2149231 0.2151662 0.3486028 0.4881036 0.5059654 0.5281170 0.5318242 #>  [789,] 0.4603693 0.5767138 0.7458831 0.7689482 0.7879522 0.7902577 0.8120094 #>  [790,] 0.1985852 0.5651475 0.6411859 0.6913815 0.7360616 0.7579080 0.7598172 #>  [791,] 0.4768170 0.5173171 0.5212004 0.5562837 0.5651183 0.5736986 0.5948584 #>  [792,] 0.7106938 0.7692174 0.8512571 0.9858759 1.0514722 1.0815706 1.1718862 #>  [793,] 0.3009515 0.4089697 0.5074053 0.6617321 0.6646334 0.6798744 0.6995760 #>  [794,] 0.6334836 0.6525409 0.7069649 0.7070695 0.8759999 0.9002558 0.9151247 #>  [795,] 0.7511237 0.8025352 0.8595722 0.9149040 0.9389866 0.9623826 0.9796507 #>  [796,] 0.4354761 0.6176918 0.7107049 0.7436005 0.8291852 0.8403826 0.8405984 #>  [797,] 0.3879955 0.5124602 0.5964595 0.6236562 0.6301964 0.6576346 0.7016100 #>  [798,] 0.2037460 0.3215793 0.4307838 0.4638684 0.4675778 0.4764278 0.5086513 #>  [799,] 0.3625463 0.3952175 0.6327766 0.6349342 0.7023876 0.8231966 0.8853208 #>  [800,] 0.1668035 0.2386115 0.2735716 0.3722427 0.4244134 0.4819700 0.5105719 #>  [801,] 0.2372597 0.5142369 0.5610809 0.5793015 0.6241751 0.6261648 0.6271394 #>  [802,] 0.4110389 0.5443350 0.6195510 0.6205800 0.6842062 0.7524293 0.7621354 #>  [803,] 0.3252701 0.6476816 0.6876165 0.8242545 0.8751725 0.8868136 0.8955254 #>  [804,] 0.5965260 0.6856888 0.7182672 0.7785923 0.8182202 0.8633835 0.8717006 #>  [805,] 0.3208283 0.3337319 0.3536009 0.3537973 0.3625599 0.3780466 0.4299961 #>  [806,] 0.2292895 0.3200962 0.3505972 0.3537973 0.3950093 0.4057154 0.4554660 #>  [807,] 0.3189174 0.3261280 0.4083134 0.4621679 0.4880932 0.5186146 0.5409832 #>  [808,] 0.1756997 0.3008485 0.3048401 0.3481273 0.3871452 0.4407905 0.4571718 #>  [809,] 0.4974999 0.5160779 0.5223192 0.5870834 0.6454162 0.6596025 0.6929272 #>  [810,] 0.4755307 0.5673635 0.5695561 0.6115450 0.6825524 0.7222987 0.7898964 #>  [811,] 0.2518042 0.3590345 0.3772134 0.3855502 0.4223929 0.5161211 0.5361440 #>  [812,] 0.2709310 0.3935150 0.4982438 0.5877637 0.7617477 0.8300585 0.8549515 #>  [813,] 0.4360883 0.7026564 0.7188305 0.7542274 0.8038670 0.8119042 0.8133387 #>  [814,] 0.4812069 0.5452958 0.5576668 0.5634926 0.6524257 0.7542716 0.7741991 #>  [815,] 0.3646449 0.4456398 0.4819972 0.4831543 0.4905699 0.4942667 0.5345129 #>  [816,] 0.2660949 0.3459008 0.3528182 0.4960474 0.5058042 0.5381778 0.5444032 #>  [817,] 0.5966961 0.7833858 0.8013473 0.8996203 0.9213850 0.9248277 0.9489521 #>  [818,] 0.5162028 0.5439014 0.5703731 0.7415910 0.7562517 0.7595823 0.7926164 #>  [819,] 0.3068031 0.5403093 0.5889975 0.6046058 0.6396782 0.6711767 0.7259222 #>  [820,] 0.4613597 0.8637595 0.9947815 1.0263673 1.0625974 1.1492752 1.1600270 #>  [821,] 0.3117212 0.5162737 0.5253377 0.5643781 0.6489374 0.6566259 0.7125444 #>  [822,] 0.1756997 0.3431314 0.3729757 0.3876361 0.3963149 0.4121179 0.4308106 #>  [823,] 0.3719003 0.4175940 0.4592293 0.4961051 0.5495815 0.5708950 0.6544002 #>  [824,] 0.3733548 0.4554380 0.5321604 0.5433057 0.5728045 0.6197529 0.7134962 #>  [825,] 0.6139562 0.8494978 0.8657601 1.0323620 1.0557884 1.0589419 1.0642435 #>  [826,] 0.5107108 0.5308441 0.5678000 0.5797436 0.5836678 0.6075361 0.6423990 #>  [827,] 0.6969955 0.7359546 0.8320994 0.8470416 0.8852816 1.1181486 1.1769117 #>  [828,] 0.2954259 0.3903566 0.4314698 0.5211184 0.5409832 0.5589189 0.5694609 #>  [829,] 0.5346464 0.5651475 0.5834112 0.6452316 0.7523828 0.7597297 0.7631110 #>  [830,] 0.2741315 0.3898495 0.3911103 0.4873584 0.5016489 0.5085348 0.5277596 #>  [831,] 0.3879955 0.4477567 0.4567502 0.4585512 0.4948411 0.5403953 0.5876360 #>  [832,] 0.2844826 0.3620238 0.4217992 0.4487336 0.5265487 0.5511180 0.6089742 #>  [833,] 0.5371429 0.5686191 0.5697676 0.7013995 0.7244734 0.7395184 0.7554514 #>  [834,] 0.3698866 0.3880339 0.4285053 0.4923358 0.4934152 0.5102454 0.5339908 #>  [835,] 0.2672144 0.4197185 0.4412579 0.4950529 0.5764014 0.6167259 0.6277977 #>  [836,] 0.4651375 0.6537409 0.7410907 0.7764788 0.8052669 0.8575356 0.9561309 #>  [837,] 0.5523455 0.6488452 0.6502702 0.7157893 0.7222020 0.7308206 0.7318622 #>  [838,] 0.4579747 0.5646775 0.5982717 0.6628226 0.6629213 0.6657341 0.6833425 #>  [839,] 0.2597361 0.6239314 0.6376734 0.6938226 0.7762722 0.7854201 0.8457675 #>  [840,] 0.4974999 0.5342780 0.5597081 0.5738514 0.6625217 0.6823338 0.6973567 #>  [841,] 0.8043606 0.9013178 0.9345236 0.9548162 1.0485955 1.0892918 1.2135595 #>  [842,] 0.2656665 0.9626302 1.0034869 1.0168681 1.0343538 1.0960449 1.2237397 #>  [843,] 0.3259238 0.3539857 0.3884724 0.4731371 0.5176782 0.5648042 0.6795628 #>  [844,] 0.4941095 0.8050859 0.9793326 0.9848685 1.1202992 1.1464007 1.2117443 #>  [845,] 1.0771376 1.1394545 1.1537274 1.1991664 1.3140691 1.3844466 1.3994887 #>  [846,] 0.4177528 0.4618842 0.4661230 0.4797457 0.5086942 0.5412432 0.5535630 #>  [847,] 0.1958560 0.4134331 0.4764770 0.4852370 0.4872668 0.5060953 0.5108614 #>  [848,] 0.2897140 0.3774071 0.3973984 0.4387940 0.5055018 0.5153202 0.5712220 #>  [849,] 0.4328520 0.4948279 0.6189826 0.6562667 0.7420286 0.7546247 0.8893395 #>  [850,] 0.5360127 0.6385613 0.6582412 0.6651681 0.6830403 0.6863370 0.7136445 #>  [851,] 0.3094647 0.4657729 0.4756386 0.4782089 0.4882521 0.5244970 0.5587520 #>  [852,] 0.9450400 0.9520252 0.9884264 1.0715908 1.0829817 1.1377081 1.1412379 #>  [853,] 0.5597081 0.5776902 0.5822762 0.6412002 0.6723875 0.7245050 0.7707023 #>  [854,] 0.1653397 0.3896094 0.5431551 0.6242651 0.6311626 0.6382944 0.6428406 #>  [855,] 0.3485256 0.4224327 0.6391136 0.6751239 0.6931897 0.6958433 0.6971110 #>  [856,] 0.5169932 0.5310801 0.5724313 0.6207704 0.8155733 0.8748850 0.9093389 #>  [857,] 0.2844826 0.3437915 0.4416808 0.4870221 0.5021292 0.5158819 0.5827290 #>  [858,] 0.4336252 0.6025194 0.6943824 0.7519759 0.8518345 0.8633835 0.8983019 #>  [859,] 0.4443948 0.5637888 0.5664575 0.5945801 0.8043890 0.8702741 0.8730570 #>  [860,] 0.3776683 0.4041352 0.5510038 0.6351291 0.6712112 0.6769563 0.6794669 #>  [861,] 1.0081354 1.2193954 1.5227191 1.8560403 1.9369633 2.0641680 2.1144906 #>  [862,] 0.4449200 0.4482449 0.4910418 0.5454137 0.5810094 0.5997008 0.6346652 #>  [863,] 0.2741315 0.4328603 0.4495898 0.4860047 0.4961873 0.4962893 0.5520191 #>  [864,] 0.5736986 0.6587996 0.6703018 0.6751239 0.7152110 0.7787659 0.7869123 #>  [865,] 0.4437538 0.5528111 0.6424083 0.6595592 0.6644753 0.6770949 0.7076305 #>  [866,] 0.5066467 0.6579535 0.7238303 0.7614096 0.7879522 0.7985211 0.8424384 #>  [867,] 0.5074053 0.5672576 0.5831094 0.7069094 0.7247818 0.7374118 0.7867199 #>  [868,] 0.3829765 0.3884724 0.4379155 0.5150716 0.5780841 0.6044941 0.6818257 #>  [869,] 0.8426718 0.8659693 1.1521733 1.2274040 1.5339276 1.6252331 1.6621872 #>  [870,] 0.3015051 0.3502379 0.3870014 0.5081303 0.5383616 0.5409419 0.5796161 #>  [871,] 0.2475709 0.3387787 0.3743819 0.4357852 0.4512409 0.4934152 0.5050436 #>  [872,] 0.5272608 0.6166063 0.6325670 0.6451331 0.6884351 0.7517435 0.7786176 #>  [873,] 0.3878356 0.5688348 0.6556408 0.6668319 0.6682694 0.7211506 0.7415332 #>  [874,] 0.3788916 0.6131800 0.6777128 0.6986739 0.7221984 0.8845729 0.9689152 #>  [875,] 0.1890204 0.3209744 0.4319075 0.6181161 0.6240293 0.7189313 0.7247200 #>  [876,] 0.8178236 0.8776712 1.0488505 1.0632862 1.0871487 1.2274040 1.2355413 #>  [877,] 0.7105108 0.8087014 0.9218185 0.9663832 1.0009072 1.0414052 1.0464875 #>  [878,] 0.2892476 0.5056424 0.5214182 0.5507258 0.5923813 0.6339029 0.6577769 #>  [879,] 0.8207143 0.9507465 0.9788562 1.0189143 1.0384626 1.0479183 1.0591240 #>  [880,] 0.7754724 0.7840028 0.8309714 0.8355861 1.1872426 1.2293291 1.2590504 #>  [881,] 0.4536275 0.5299550 0.5637652 0.5754324 0.5876370 0.6319519 0.6389891 #>  [882,] 0.6895680 0.7425474 0.8182202 0.8487271 0.8800132 0.9757972 1.0138363 #>  [883,] 0.7076305 0.7234238 0.7599663 0.7721247 0.8289968 0.8789494 0.9343222 #>  [884,] 0.5347924 0.7488825 0.7680293 0.8128673 0.8611402 0.9924935 1.0578269 #>  [885,] 0.2656665 1.1380517 1.1386825 1.1681543 1.1803782 1.2976045 1.3208384 #>  [886,] 0.6961120 0.7434224 0.7470161 0.8740226 0.8840809 0.8890392 0.9014907 #>  [887,] 0.7827597 0.8840809 0.9389928 0.9752843 1.0502584 1.0880258 1.0894098 #>  [888,] 0.1893953 0.2386115 0.2557423 0.3254636 0.3934789 0.5424065 0.5626370 #>  [889,] 0.6980998 0.8457750 0.8590702 0.8906128 0.9015460 0.9465695 0.9510837 #>  [890,] 1.5233047 1.5526239 1.6461644 1.6966072 1.7752432 1.8739895 1.8778082 #>  [891,] 0.3350684 0.3847710 0.4163012 0.4665666 0.4834134 0.5102398 0.5248484 #>  [892,] 0.3660055 0.3939337 0.4878075 0.4993231 0.5339051 0.5582075 0.5804964 #>  [893,] 0.5900533 0.5940836 0.6824439 0.6863225 0.6963113 0.7287922 0.7495154 #>  [894,] 0.2711685 0.5106446 0.5345129 0.5422412 0.6595576 0.6825428 0.6832620 #>  [895,] 0.9457505 1.0055289 1.0374834 1.1374938 1.1549316 1.2193954 1.2219897 #>  [896,] 0.2730793 0.4006208 0.4187589 0.5102454 0.5455230 0.5507033 0.5553776 #>  [897,] 0.1966930 0.4996321 0.6616755 0.7516260 0.7986547 0.8276320 0.8277955 #>  [898,] 0.3209744 0.3738955 0.6045351 0.6467976 0.6593750 0.6800451 0.7289797 #>  [899,] 0.4343500 0.5844712 0.6429579 0.6588261 0.6704393 0.6832041 0.7053021 #>  [900,] 0.3867716 0.4051795 0.4648271 0.4989726 0.5416107 0.5671859 0.6004723 #>  [901,] 0.3223980 0.4834607 0.5223502 0.5263895 0.5587766 0.7036477 0.7137277 #>  [902,] 0.2292895 0.2406235 0.3366595 0.3536009 0.3633398 0.4321146 0.4728238 #>  [903,] 0.2973152 0.3268296 0.3865375 0.4014034 0.4185552 0.4986448 0.5317338 #>  [904,] 0.2921561 0.3454152 0.3584825 0.4539749 0.4746914 0.5211184 0.5721308 #>  [905,] 0.6115696 0.7695961 0.7860690 0.8495536 0.8763056 0.9128120 0.9145718 #>  [906,] 0.2767839 0.3516542 0.4118751 0.4678726 0.4951777 0.5092464 0.5572687 #>  [907,] 0.3608010 0.4089697 0.4176337 0.5545793 0.5843882 0.6371210 0.6631265 #>  [908,] 0.7330956 0.7335737 0.7373931 0.7382539 0.7938853 0.8299896 0.8495744 #>  [909,] 0.2864065 0.3110222 0.3468897 0.3587015 0.4502007 0.4517690 0.4966426 #>  [910,] 0.3777255 0.7420286 0.8183763 0.8235245 0.8759999 0.8770667 0.8772592 #>  [911,] 1.2021813 1.3519872 1.4441595 1.6314486 1.6417888 1.6593278 1.6886986 #>  [912,] 0.6024698 0.6884039 0.6928711 0.6951537 0.7090666 0.8070246 0.8463394 #>  [913,] 0.3057673 0.3261280 0.3404357 0.4550743 0.4595119 0.4663938 0.4792680 #>  [914,] 0.2517737 0.5587173 0.5627475 0.6448182 0.6878511 0.6963113 0.7257511 #>  [915,] 0.7538766 0.8549530 0.9662849 0.9757344 1.0799849 1.1737514 1.1779209 #>  [916,] 0.1832772 0.3102862 0.4772950 0.5016423 0.5475921 0.6649921 0.6877418 #>  [917,] 0.5936021 0.7777964 0.8136364 0.8240020 0.8363098 0.8383885 0.8551205 #>  [918,] 0.3903566 0.4151275 0.4500563 0.4513099 0.4844496 0.4880932 0.5675008 #>  [919,] 0.4548389 0.5169932 0.6932308 0.7550966 0.7612147 0.7669921 0.7886875 #>  [920,] 0.5002484 0.5081972 0.5081989 0.6101844 0.6448901 0.6918455 0.7148926 #>  [921,] 0.3777255 0.6415150 0.6689963 0.7070695 0.7192347 0.7546247 0.9468222 #>  [922,] 0.2522903 0.3966538 0.4044118 0.4542733 0.4834134 0.4907196 0.4961453 #>  [923,] 0.3283662 0.5127957 0.5416107 0.6157495 0.6687958 0.6726877 0.6773270 #>  [924,] 0.4539424 0.5186734 0.5192788 0.5307958 0.6358477 0.7451193 0.7480425 #>  [925,] 0.7159846 0.7995573 0.8383847 1.1546042 1.1813827 1.1917292 1.2422700 #>  [926,] 0.3404357 0.3807694 0.4609694 0.4797457 0.4806164 0.5036612 0.5186146 #>  [927,] 0.5316368 0.5812444 0.6189826 0.7469373 0.7504032 0.7818533 0.9176180 #>  [928,] 0.2597100 0.4006208 0.4290731 0.5030698 0.5427018 0.5525965 0.6443639 #>  [929,] 0.1750146 0.3440669 0.4814473 0.4864090 0.4945176 0.5315962 0.5621263 #>  [930,] 0.2729237 0.4741621 0.7365476 0.7620341 0.8056846 0.8552444 0.8599408 #>  [931,] 0.3493363 0.3564653 0.4284995 0.5094536 0.5200226 0.5253391 0.5650986 #>  [932,] 0.3939337 0.4823596 0.5413598 0.6213069 0.6411251 0.6475728 0.6557159 #>  [933,] 0.3597897 0.4408371 0.4429503 0.4686445 0.4960474 0.5474476 0.5775135 #>  [934,] 0.4109611 0.4269622 0.4299912 0.4794377 0.6769563 0.7169647 0.7396999 #>  [935,] 0.2644777 0.3460267 0.3744624 0.4456398 0.4905980 0.5180823 0.5306396 #>  [936,] 0.2437867 0.3704090 0.6217492 0.6243484 0.7419777 0.8937073 0.8959755 #>  [937,] 0.3048401 0.3289579 0.3876361 0.4435987 0.4500602 0.4658134 0.5551621 #>  [938,] 0.4104674 0.6146587 0.6540522 0.7249079 0.8790505 0.9385847 1.0160888 #>  [939,] 1.0256225 1.7376803 1.8752828 2.0526915 2.0737414 2.1606362 2.1953567 #>  [940,] 0.5504223 0.5684153 0.5692926 0.5921408 0.6115450 0.6317578 0.6360513 #>  [941,] 0.2397630 0.3893715 0.4635491 0.5459784 0.6261423 0.7189531 0.7372373 #>  [942,] 0.7395222 0.7866037 0.8902484 0.9326582 0.9704234 1.0220249 1.0591495 #>  [943,] 0.6770374 0.7953997 0.8437979 0.8743399 0.8836192 0.8923823 0.9005311 #>  [944,] 0.2421974 0.3195039 0.3268296 0.4838092 0.5960388 0.6062311 0.6484295 #>  [945,] 0.2437404 0.3744344 0.5225348 0.5507186 0.5619871 0.6011523 0.6079141 #>  [946,] 0.7071888 0.7843010 0.7899078 0.8552329 0.8658784 0.8784967 0.8830186 #>  [947,] 0.2835673 0.3379294 0.4170100 0.5491096 0.5773754 0.5974130 0.6307483 #>  [948,] 0.8176158 0.8491173 0.9088661 1.0226691 1.0962674 1.1280411 1.1854588 #>  [949,] 0.3580617 0.3890541 0.4051075 0.4082152 0.4187933 0.4729712 0.5357195 #>  [950,] 0.1668035 0.1893953 0.3571911 0.3629002 0.4431789 0.5325175 0.5379583 #>  [951,] 0.4211917 0.5153202 0.5439014 0.6000559 0.6053124 0.6116723 0.6646960 #>  [952,] 0.4866517 0.4927252 0.5026871 0.5089968 0.5707510 0.5711103 0.5779797 #>  [953,] 0.4875603 0.6576248 0.6757975 0.6983681 0.7662066 0.7698627 0.8435259 #>  [954,] 0.1721220 0.6868414 0.7707032 0.7854245 0.7907610 0.8150351 0.8608745 #>  [955,] 0.2894963 0.3378843 0.3509141 0.4046845 0.4991628 0.5410666 0.5640949 #>  [956,] 0.5733520 0.7657172 0.8253817 0.8621363 0.9065360 0.9093570 1.0182838 #>  [957,] 0.5703731 0.5788997 0.5927121 0.6371498 0.6605861 0.7780207 0.9104056 #>  [958,] 0.2397630 0.3205367 0.3235746 0.4710551 0.5510038 0.5704173 0.7015726 #>  [959,] 0.4159844 0.4749970 0.4979213 0.5242692 0.5276247 0.5372884 0.5409419 #>  [960,] 0.3917846 0.5475921 0.6166063 0.6541843 0.6767025 0.6936177 0.6975846 #>  [961,] 0.4078553 0.4508481 0.4627672 0.4639304 0.4851934 0.5397154 0.5832722 #>  [962,] 0.6372911 0.7468283 0.8111712 0.8128029 0.8137142 1.0342735 1.0582057 #>  [963,] 0.3118342 0.4920762 0.4996321 0.5580452 0.5929911 0.7087091 0.7227528 #>  [964,] 0.1978266 0.4398836 0.4561060 0.4686753 0.4934180 0.5024430 0.5357195 #>  [965,] 0.2954259 0.3817068 0.5439594 0.5560987 0.6014405 0.6303685 0.6312986 #>  [966,] 0.2644777 0.3661038 0.3805127 0.3879917 0.4121179 0.4942667 0.4992716 #>  [967,] 0.4262510 0.4491463 0.4781726 0.4912917 0.5400745 0.5634926 0.6690957 #>  [968,] 0.2895413 0.4012907 0.4188355 0.4508481 0.5022613 0.5301252 0.5306581 #>  [969,] 0.6033454 0.6907589 0.6964233 0.7167518 0.7501249 0.7573388 0.8023491 #>  [970,] 0.3775477 0.5180413 0.6781649 0.7582771 0.7854201 0.7962129 0.8624518 #>  [971,] 0.8178236 0.8426718 0.9010076 1.0543306 1.2672880 1.4639651 1.4741367 #>  [972,] 0.9889855 1.0310730 1.0846808 1.1107118 1.3412372 1.4072203 1.4254146 #>  [973,] 0.5046474 0.6534864 1.0726987 1.1092679 1.2411319 1.2592704 1.3688971 #>  [974,] 0.4166936 0.4222102 0.4325592 0.5889393 0.6168945 0.6642393 0.6824439 #>  [975,] 0.3916429 0.3937819 0.4071275 0.4497573 0.4648271 0.5081303 0.5327646 #>  [976,] 0.6797598 0.7143577 0.7412368 0.8478895 0.9155982 0.9564843 0.9968122 #>  [977,] 0.3583589 0.4177528 0.4884832 0.4979203 0.5048390 0.5423459 0.5425859 #>  [978,] 0.4078494 0.7299069 0.8837776 1.0252513 1.0292942 1.0466033 1.2221643 #>  [979,] 0.2441368 0.2698645 0.3144511 0.3590345 0.3639017 0.4224309 0.4582307 #>  [980,] 0.3318576 0.4113990 0.4637851 0.4818432 0.5560987 0.5580452 0.5921339 #>  [981,] 0.5096697 0.6474703 0.7084461 0.7303249 0.7603822 0.7821418 0.7947371 #>  [982,] 0.3037569 0.3468897 0.3556412 0.3981714 0.4212798 0.4786068 0.4951433 #>  [983,] 0.3746293 0.3951859 0.4062885 0.4077064 0.4268879 0.4553322 0.4721276 #>  [984,] 0.5766435 0.6571222 0.7908816 0.7943087 0.8608712 0.8950047 0.9061930 #>  [985,] 0.3711911 0.4445657 0.4794377 0.5068675 0.5124602 0.5418545 0.6330154 #>  [986,] 0.4136068 0.4198720 0.5377853 0.5527917 0.5817407 0.5887717 0.6447596 #>  [987,] 0.5609981 0.6000041 0.6125511 0.6236562 0.6410853 0.6432768 0.6565911 #>  [988,] 0.4613597 0.7583131 0.7934966 0.8125873 0.8300403 0.8644266 0.9666676 #>  [989,] 0.8167957 0.9319457 0.9343222 0.9604114 1.0054096 1.0092794 1.0531635 #>  [990,] 0.2877138 0.4654339 0.4871296 0.5089968 0.5130897 0.5250834 0.5483853 #>  [991,] 0.5315622 0.6081072 0.6704468 0.7020928 0.8176486 0.8470571 0.8876669 #>  [992,] 0.5697849 0.5930722 0.5946175 0.6025194 0.6895680 0.7463772 0.8717006 #>  [993,] 0.5695561 0.6116583 0.6711359 0.6980998 0.8936129 1.0288534 1.0330928 #>  [994,] 0.8334557 0.9400686 0.9441822 0.9736789 1.0195350 1.0285446 1.0601287 #>  [995,] 0.2046389 0.5695320 0.6002333 0.6358477 0.6584961 0.6620311 0.6877418 #>  [996,] 0.7547801 0.8424573 0.8784967 0.9657497 0.9889855 1.0588026 1.0756552 #>  [997,] 0.2749012 0.4075401 0.4657729 0.5214709 0.5347380 0.5843207 0.5854069 #>  [998,] 0.7867199 0.8530153 0.8579071 0.9382319 0.9490966 1.0186856 1.0285446 #>  [999,] 0.2442796 0.3293245 0.3762088 0.3793273 0.4197185 0.5536723 0.5619804 #> [1000,] 0.8560176 0.9947815 1.1842550 1.1985962 1.2600629 1.3552029 1.3571702 #>              [,8]      [,9]     [,10] #>    [1,] 0.8659657 0.9421936 0.9557680 #>    [2,] 0.6170933 0.6288638 0.6723486 #>    [3,] 0.7500443 0.7559337 0.7863394 #>    [4,] 0.7122574 0.7579941 0.7616962 #>    [5,] 0.5560344 0.5749297 0.6421341 #>    [6,] 1.4549610 1.4819613 1.4869637 #>    [7,] 1.1047606 1.1281216 1.1314762 #>    [8,] 0.5990901 0.6077267 0.6144572 #>    [9,] 0.6735719 0.7441207 0.7552747 #>   [10,] 0.8717687 0.9517242 0.9560222 #>   [11,] 0.7393178 0.8607832 0.8691707 #>   [12,] 1.2757944 1.3466987 1.3871097 #>   [13,] 0.6261752 0.6423559 0.6576281 #>   [14,] 0.5669643 0.6289610 0.6743772 #>   [15,] 0.9677292 0.9822047 1.0210203 #>   [16,] 0.8416314 0.8485141 0.8555560 #>   [17,] 0.7702157 0.7744729 0.8205102 #>   [18,] 0.7812994 0.7831658 0.7833212 #>   [19,] 0.6276344 0.6371045 0.6694920 #>   [20,] 0.7376113 0.7465947 0.8242545 #>   [21,] 0.7200909 0.7642157 0.8262055 #>   [22,] 0.5738593 0.5843207 0.5878734 #>   [23,] 0.8174437 0.8285434 0.8454054 #>   [24,] 0.6046058 0.7126234 0.7293981 #>   [25,] 0.9709143 1.0053122 1.0240549 #>   [26,] 0.9375828 0.9965642 0.9989267 #>   [27,] 0.6793154 0.6922521 0.6957337 #>   [28,] 0.7534231 0.7959740 0.8273440 #>   [29,] 0.8096119 0.8490574 0.8919472 #>   [30,] 0.5168478 0.5259184 0.5686485 #>   [31,] 0.6153740 0.6158243 0.6631265 #>   [32,] 0.6349965 0.6467618 0.6616985 #>   [33,] 1.7325243 1.7605597 1.7934921 #>   [34,] 0.5785802 0.5873717 0.6073207 #>   [35,] 0.8759712 0.8963428 0.9094703 #>   [36,] 0.4772549 0.4902579 0.4953138 #>   [37,] 0.7674061 0.7720021 0.7855488 #>   [38,] 1.0823532 1.0885857 1.1437130 #>   [39,] 0.5799811 0.6234147 0.6334289 #>   [40,] 0.6202446 0.6893967 0.6954686 #>   [41,] 0.9767777 1.0709181 1.1214313 #>   [42,] 0.7228437 0.7352384 0.7536812 #>   [43,] 0.8329497 0.8474362 0.8685804 #>   [44,] 0.8902484 0.9233458 0.9470685 #>   [45,] 0.6445894 0.6703457 0.6742364 #>   [46,] 0.5639711 0.5652759 0.5751524 #>   [47,] 0.6410768 0.6475676 0.6945192 #>   [48,] 0.7124204 0.7238143 0.7426336 #>   [49,] 1.0981405 1.1052382 1.1069051 #>   [50,] 0.7031047 0.7761668 0.7780679 #>   [51,] 1.3196464 1.3383416 1.3442554 #>   [52,] 0.6205308 0.6344532 0.6387002 #>   [53,] 0.6649538 0.6666280 0.6900177 #>   [54,] 1.1308217 1.1488068 1.1703617 #>   [55,] 0.6088836 0.6130995 0.6149975 #>   [56,] 1.0651998 1.0660826 1.0781757 #>   [57,] 0.7144088 0.7255376 0.7584077 #>   [58,] 1.3429950 1.3903058 1.4317289 #>   [59,] 0.5691571 0.5814451 0.5894169 #>   [60,] 0.7406813 0.7546723 0.8150892 #>   [61,] 0.6985333 0.7082677 0.7108606 #>   [62,] 1.0731268 1.0821486 1.0979741 #>   [63,] 0.5866291 0.6037095 0.6184255 #>   [64,] 0.6725331 0.6985333 0.7228437 #>   [65,] 0.5235438 0.5523603 0.5612416 #>   [66,] 0.5187006 0.5454038 0.5788434 #>   [67,] 0.7412534 0.7747363 0.8030730 #>   [68,] 0.8140444 0.8257014 0.8442550 #>   [69,] 0.9095958 0.9104842 0.9115665 #>   [70,] 0.7521877 0.7728438 0.7813239 #>   [71,] 0.6890785 0.7084283 0.7206841 #>   [72,] 0.5781671 0.5869870 0.6184569 #>   [73,] 0.8400247 0.8577779 0.8686715 #>   [74,] 0.8035105 0.8150630 0.8488905 #>   [75,] 0.5430944 0.5553096 0.5562710 #>   [76,] 0.7498338 0.7700856 0.7853335 #>   [77,] 0.8940580 0.9144192 0.9517094 #>   [78,] 0.6207846 0.6222957 0.6313232 #>   [79,] 0.8524514 0.9400104 0.9547662 #>   [80,] 0.9943148 1.0575705 1.0949677 #>   [81,] 0.7427691 0.7704754 0.7851603 #>   [82,] 0.6282769 0.6627472 0.6794191 #>   [83,] 1.6324897 1.6348935 1.7137831 #>   [84,] 0.8470355 0.8635501 0.8814828 #>   [85,] 0.8000671 0.8054140 0.8911614 #>   [86,] 0.9537353 0.9789519 0.9956850 #>   [87,] 0.6617519 0.6825524 0.6876165 #>   [88,] 0.5925989 0.6052552 0.6139989 #>   [89,] 0.5366362 0.5392615 0.5553801 #>   [90,] 1.0910382 1.1197772 1.1847429 #>   [91,] 1.0230037 1.0251862 1.0603788 #>   [92,] 0.5616552 0.5677086 0.5690386 #>   [93,] 1.0750686 1.1012036 1.2000771 #>   [94,] 0.6958492 0.6959997 0.7171871 #>   [95,] 0.7235196 0.7257882 0.7287922 #>   [96,] 0.7671760 0.8588746 0.8640873 #>   [97,] 0.7123423 0.7449617 0.7464562 #>   [98,] 0.4685498 0.5608120 0.5667814 #>   [99,] 0.8491175 0.8781703 0.8789284 #>  [100,] 0.8014144 0.8413243 0.8841586 #>  [101,] 0.5888236 0.5893182 0.6051434 #>  [102,] 0.7636163 0.8346484 0.8964152 #>  [103,] 0.6004723 0.6184365 0.6583441 #>  [104,] 0.7381450 0.7405584 0.7564200 #>  [105,] 0.8457750 0.8459776 0.8677612 #>  [106,] 0.7727202 0.7952060 0.7991643 #>  [107,] 0.7042062 0.7334966 0.7648062 #>  [108,] 0.7221686 0.8324946 0.8685225 #>  [109,] 0.6759745 0.6845038 0.6970333 #>  [110,] 0.6073207 0.6109361 0.6329138 #>  [111,] 0.8988903 0.9238199 0.9959850 #>  [112,] 1.0614598 1.0667378 1.1019770 #>  [113,] 0.6334179 0.6636938 0.6750757 #>  [114,] 0.6598525 0.6651681 0.6658549 #>  [115,] 0.6817752 0.6824507 0.7108606 #>  [116,] 0.7921736 0.8258271 0.8274009 #>  [117,] 0.5884373 0.6066476 0.6086110 #>  [118,] 0.6793154 0.7070268 0.7178104 #>  [119,] 0.5438064 0.5664959 0.5748991 #>  [120,] 0.5944931 0.6266756 0.6543230 #>  [121,] 2.1549657 2.1737524 2.2178311 #>  [122,] 0.7047104 0.7101247 0.7162292 #>  [123,] 0.7947371 0.8064573 0.8074059 #>  [124,] 0.5456795 0.5664905 0.5721308 #>  [125,] 0.8576538 0.8694965 0.8778866 #>  [126,] 0.8135791 0.8224091 0.8579071 #>  [127,] 0.4446538 0.4965401 0.5049563 #>  [128,] 1.2006037 1.2359640 1.2754993 #>  [129,] 0.8834051 0.8885582 0.9502438 #>  [130,] 0.5641103 0.5734173 0.6152985 #>  [131,] 1.0372699 1.0857469 1.1345517 #>  [132,] 0.5793015 0.6002979 0.6608828 #>  [133,] 0.5553096 0.5604901 0.5704699 #>  [134,] 0.6797753 0.7004649 0.7020563 #>  [135,] 0.6902230 0.7275773 0.7304690 #>  [136,] 0.8367852 0.8722130 0.9758868 #>  [137,] 0.8753371 0.8817659 0.8869372 #>  [138,] 0.8150630 0.8321044 0.8929956 #>  [139,] 0.5297800 0.5310863 0.5377853 #>  [140,] 1.1531809 1.1584669 1.1683196 #>  [141,] 0.6674204 0.6870389 0.7015726 #>  [142,] 0.5752647 0.5810309 0.5857079 #>  [143,] 0.5147283 0.5336450 0.5570713 #>  [144,] 1.2618954 1.2723238 1.2775223 #>  [145,] 0.5108614 0.6031922 0.6238388 #>  [146,] 1.4536284 1.4570014 1.4582543 #>  [147,] 0.7708457 0.7768757 0.8935641 #>  [148,] 0.6260530 0.6281380 0.6584063 #>  [149,] 0.5806831 0.6095609 0.6153176 #>  [150,] 0.6815269 0.7853335 0.8211478 #>  [151,] 0.8670174 0.8720832 0.8728759 #>  [152,] 1.1632360 1.2035173 1.2868663 #>  [153,] 0.7982974 0.8172268 0.9093389 #>  [154,] 1.0446572 1.0794367 1.0796821 #>  [155,] 0.9029054 0.9106181 0.9183151 #>  [156,] 0.6729970 0.6761152 0.6999705 #>  [157,] 0.5537485 0.5983074 0.6087225 #>  [158,] 0.8796216 0.8955899 0.9405777 #>  [159,] 0.5542437 0.5748991 0.5770680 #>  [160,] 0.7668428 0.7690245 0.7778064 #>  [161,] 0.9047549 0.9522901 0.9524642 #>  [162,] 0.5027847 0.5308820 0.5434084 #>  [163,] 0.6479294 0.6847252 0.7137218 #>  [164,] 0.7242509 0.7268542 0.7373931 #>  [165,] 0.7370592 0.7677097 0.7992110 #>  [166,] 1.9502480 2.0111256 2.0198937 #>  [167,] 0.7443786 0.7661672 0.7679560 #>  [168,] 0.5895402 0.6034850 0.6286596 #>  [169,] 0.6871256 0.6905980 0.7020928 #>  [170,] 1.1109406 1.1741394 1.1746722 #>  [171,] 0.9941630 1.0172669 1.0247274 #>  [172,] 0.7431499 0.7616241 0.7633365 #>  [173,] 0.8276626 0.8726855 0.9044331 #>  [174,] 0.7687062 0.7960681 0.8310626 #>  [175,] 0.5744978 0.6264381 0.6364805 #>  [176,] 1.3139367 1.3232516 1.3589856 #>  [177,] 0.6111662 0.6119760 0.6212473 #>  [178,] 0.5533607 0.5536723 0.5771549 #>  [179,] 0.6542798 0.6957337 0.7238303 #>  [180,] 1.2334182 1.3155532 1.3167313 #>  [181,] 0.9181595 0.9513068 1.0428560 #>  [182,] 0.4950644 0.5141321 0.5154608 #>  [183,] 1.0450778 1.0475363 1.0483896 #>  [184,] 0.6063223 0.6070422 0.6122005 #>  [185,] 0.7360616 0.7407173 0.7536132 #>  [186,] 1.3058292 1.3675616 1.3725652 #>  [187,] 0.9209025 1.0277810 1.0339269 #>  [188,] 0.9260017 0.9481268 0.9497012 #>  [189,] 0.5253391 0.5330216 0.5381897 #>  [190,] 0.6143721 0.6309250 0.6480596 #>  [191,] 0.6122223 0.6845038 0.7090331 #>  [192,] 0.6212270 0.6576281 0.6621340 #>  [193,] 0.6516693 0.6668527 0.6700372 #>  [194,] 1.0750118 1.1563175 1.2109666 #>  [195,] 0.6307483 0.6882874 0.6970944 #>  [196,] 0.7590535 0.7673836 0.7744016 #>  [197,] 0.7605488 0.8051347 0.8065421 #>  [198,] 1.1873621 1.1932767 1.2056174 #>  [199,] 0.7711025 0.7790149 0.8012529 #>  [200,] 0.8779847 0.8791614 0.9051302 #>  [201,] 0.9120787 0.9168882 0.9464818 #>  [202,] 0.5719519 0.5720624 0.6229036 #>  [203,] 0.6493921 0.6546668 0.6599532 #>  [204,] 0.9002558 0.9509223 1.1482165 #>  [205,] 0.7960288 0.8136613 0.8261979 #>  [206,] 0.6044941 0.6070589 0.6718546 #>  [207,] 0.9494009 0.9585080 0.9915248 #>  [208,] 0.8238857 0.8317165 0.8434381 #>  [209,] 0.6756450 0.6878511 0.6931200 #>  [210,] 0.8119662 0.8219370 0.8258990 #>  [211,] 0.6586246 0.6818205 0.6861361 #>  [212,] 0.7436005 0.7739651 0.8068857 #>  [213,] 1.3341580 1.3475955 1.4051255 #>  [214,] 0.9609064 0.9614240 0.9648808 #>  [215,] 0.8067750 0.8160625 0.8691089 #>  [216,] 0.6689080 0.6772701 0.6962160 #>  [217,] 0.6580374 0.6853561 0.7136437 #>  [218,] 0.8549515 0.8584638 0.8603363 #>  [219,] 0.5389702 0.5604288 0.5644134 #>  [220,] 0.6231950 0.6593750 0.6636397 #>  [221,] 0.5644134 0.5723067 0.5872864 #>  [222,] 0.5562837 0.5671209 0.5906728 #>  [223,] 0.5026097 0.5280532 0.5460916 #>  [224,] 0.7060663 0.7523342 0.7632513 #>  [225,] 1.8507579 1.9381838 1.9525321 #>  [226,] 1.3653848 1.3896894 1.4255102 #>  [227,] 0.6492431 0.6731910 0.6747093 #>  [228,] 0.7495244 0.7516260 0.7525038 #>  [229,] 0.4990704 0.5932704 0.5933715 #>  [230,] 0.5669233 0.5712443 0.5900002 #>  [231,] 1.4030384 1.4369526 1.5208006 #>  [232,] 0.8445866 0.8491987 0.8721703 #>  [233,] 0.5094536 0.5788502 0.5793361 #>  [234,] 1.4166771 1.4385922 1.4535064 #>  [235,] 0.7019943 0.7171121 0.7331643 #>  [236,] 0.8140444 0.8538536 0.8582279 #>  [237,] 1.1477721 1.2326455 1.2390279 #>  [238,] 1.3060753 1.3757269 1.3839004 #>  [239,] 0.9445358 0.9701583 0.9807711 #>  [240,] 1.0516568 1.0630269 1.2673339 #>  [241,] 0.7353660 0.7403702 0.7912786 #>  [242,] 0.9843740 1.0415641 1.0553185 #>  [243,] 1.5615210 1.5654394 1.5744028 #>  [244,] 0.9898642 1.0053122 1.0108916 #>  [245,] 0.5893182 0.6121428 0.6243114 #>  [246,] 0.7533257 0.7558493 0.8585418 #>  [247,] 1.2060349 1.2186076 1.2201346 #>  [248,] 1.0883098 1.0980705 1.1041264 #>  [249,] 0.9177641 0.9525647 0.9630318 #>  [250,] 0.5259184 0.5455230 0.5533702 #>  [251,] 0.8576273 0.9437003 0.9456348 #>  [252,] 0.9041692 0.9297149 0.9445358 #>  [253,] 0.5116427 0.5722728 0.5730537 #>  [254,] 1.0688909 1.0894495 1.0944852 #>  [255,] 1.3900947 1.3955144 1.4270262 #>  [256,] 0.3918550 0.6143721 0.6283656 #>  [257,] 0.5799811 0.5834543 0.6102191 #>  [258,] 1.1092711 1.1462620 1.1530904 #>  [259,] 0.6637275 0.6818205 0.7601675 #>  [260,] 2.1472598 2.1503143 2.1672077 #>  [261,] 0.7089310 0.7439559 0.7466682 #>  [262,] 0.7143473 0.7531176 0.7908699 #>  [263,] 0.4993182 0.5089328 0.5423577 #>  [264,] 0.7000241 0.7057413 0.8073339 #>  [265,] 0.8052669 0.8561612 0.8775474 #>  [266,] 0.6770949 0.6872663 0.6989044 #>  [267,] 0.6363446 0.6740300 0.6792747 #>  [268,] 1.1412029 1.1751241 1.1854588 #>  [269,] 1.4133150 1.4401786 1.4927530 #>  [270,] 0.6731436 0.6972399 0.7101802 #>  [271,] 1.1769214 1.1911566 1.2325993 #>  [272,] 0.7748718 0.7796817 0.7822587 #>  [273,] 0.8793521 0.9014907 0.9384892 #>  [274,] 1.0073981 1.0627908 1.0761362 #>  [275,] 0.7179524 0.7769136 0.8518891 #>  [276,] 0.7633021 0.7940111 0.8468385 #>  [277,] 0.6996683 0.7120415 0.7737661 #>  [278,] 0.8462994 0.8736568 0.8744169 #>  [279,] 0.6783000 0.7063332 0.7107740 #>  [280,] 0.6792460 0.7239071 0.7348849 #>  [281,] 0.6224645 0.6772389 0.6965748 #>  [282,] 1.4275174 1.5237720 1.5350356 #>  [283,] 0.6295668 0.6557622 0.6671393 #>  [284,] 0.6033843 0.6401907 0.6851574 #>  [285,] 0.5562710 0.5693826 0.6038095 #>  [286,] 1.2853045 1.2909092 1.3054776 #>  [287,] 0.8418873 0.8475316 0.8570370 #>  [288,] 0.8056846 0.8118974 0.8527024 #>  [289,] 1.1605014 1.1672260 1.1892437 #>  [290,] 0.9041223 0.9306600 0.9462159 #>  [291,] 0.9910072 1.0190788 1.0252513 #>  [292,] 0.6433834 0.6496541 0.6587996 #>  [293,] 1.0604940 1.0766211 1.0780729 #>  [294,] 0.6592084 0.6966104 0.7334273 #>  [295,] 0.8710764 0.8905054 0.8928492 #>  [296,] 0.9028032 0.9065294 0.9079794 #>  [297,] 0.6258706 0.6635144 0.6864124 #>  [298,] 0.7271780 0.7330105 0.7442200 #>  [299,] 0.8998651 0.9797945 0.9978461 #>  [300,] 1.2215189 1.2806819 1.2954142 #>  [301,] 0.7889160 0.8011830 0.8098317 #>  [302,] 0.8229658 0.8477743 0.8857514 #>  [303,] 0.6596025 0.6889408 0.6976423 #>  [304,] 0.7501109 0.7600914 0.7839866 #>  [305,] 0.5307682 0.5493606 0.5688138 #>  [306,] 0.8348537 0.8460951 0.8491451 #>  [307,] 0.9192392 0.9206716 0.9581853 #>  [308,] 1.2380763 1.2507313 1.2546318 #>  [309,] 1.4306581 1.4469327 1.4735292 #>  [310,] 0.5509211 0.5584842 0.5834624 #>  [311,] 0.6645706 0.7427029 0.7565974 #>  [312,] 1.2065844 1.2184426 1.2454157 #>  [313,] 0.7559337 0.7614495 0.8282192 #>  [314,] 0.6519606 0.7104065 0.7326048 #>  [315,] 0.7355316 0.7812902 0.7858902 #>  [316,] 0.5717735 0.6068737 0.6141087 #>  [317,] 0.7468442 0.8174970 0.8468385 #>  [318,] 1.2157032 1.3095829 1.3195471 #>  [319,] 0.8907907 0.9391681 0.9736789 #>  [320,] 0.9068240 0.9070257 0.9282815 #>  [321,] 0.8183321 0.8254262 0.8352011 #>  [322,] 0.4738849 0.5004424 0.5306581 #>  [323,] 0.8668632 0.8912814 0.9187819 #>  [324,] 1.0439796 1.1304929 1.1364221 #>  [325,] 0.7599053 0.7943087 0.8388594 #>  [326,] 0.6157495 0.6439662 0.6543230 #>  [327,] 0.9440879 0.9580779 0.9684575 #>  [328,] 1.0809166 1.2025574 1.2430314 #>  [329,] 0.5420836 0.5621113 0.5651727 #>  [330,] 0.8107453 0.8672233 0.9023864 #>  [331,] 1.1285757 1.1432340 1.1561201 #>  [332,] 1.0402659 1.0770539 1.1141089 #>  [333,] 0.8849987 0.8955136 0.9009360 #>  [334,] 1.6233873 1.6572656 1.6713053 #>  [335,] 0.8489651 0.8593914 0.8620302 #>  [336,] 1.3197595 1.3390509 1.4050303 #>  [337,] 1.1480885 1.1555499 1.1750559 #>  [338,] 0.9818919 0.9910708 1.0035932 #>  [339,] 0.6527750 0.6908080 0.7391648 #>  [340,] 0.8914381 0.8979544 0.9232636 #>  [341,] 0.8757164 0.8807456 0.9074952 #>  [342,] 0.7390066 0.7445755 0.7451193 #>  [343,] 1.0094688 1.0458080 1.0677334 #>  [344,] 0.6417010 0.6850243 0.6860650 #>  [345,] 1.3538794 1.3622425 1.4072020 #>  [346,] 0.5981006 0.6200927 0.6318031 #>  [347,] 0.5675008 0.5688138 0.5888992 #>  [348,] 0.6644753 0.6772389 0.6821687 #>  [349,] 0.9847888 1.0232543 1.0293496 #>  [350,] 0.5613036 0.5642968 0.5843134 #>  [351,] 0.7744191 0.7776508 0.7992106 #>  [352,] 0.6655567 0.6709798 0.6810637 #>  [353,] 0.8122013 0.8505356 0.9099505 #>  [354,] 1.2512400 1.2679739 1.2711033 #>  [355,] 0.6102191 0.6375190 0.6426245 #>  [356,] 1.2276157 1.2294125 1.2427264 #>  [357,] 0.7446557 0.7576892 0.7720241 #>  [358,] 1.0853451 1.1078239 1.1705869 #>  [359,] 1.0386830 1.0446697 1.0766794 #>  [360,] 0.5343922 0.5575167 0.5757539 #>  [361,] 0.6399345 0.6411021 0.7014822 #>  [362,] 1.1373012 1.1584417 1.1740224 #>  [363,] 0.9995085 1.0119672 1.0175240 #>  [364,] 1.0249946 1.0747538 1.1792550 #>  [365,] 1.1081429 1.1838380 1.1932367 #>  [366,] 0.6000272 0.6313197 0.6379585 #>  [367,] 1.7315685 1.7436104 1.7661646 #>  [368,] 1.1240254 1.1516781 1.1579079 #>  [369,] 0.8396742 0.8415651 0.8457602 #>  [370,] 0.4763999 0.4831543 0.4896841 #>  [371,] 0.7213202 0.7532505 0.7706185 #>  [372,] 1.0232564 1.0294525 1.0356628 #>  [373,] 1.1697379 1.2227356 1.2284700 #>  [374,] 0.9522645 0.9526135 0.9875826 #>  [375,] 0.9575479 0.9578350 0.9979808 #>  [376,] 0.5335267 0.5388320 0.5506560 #>  [377,] 0.6792690 0.7032686 0.7442284 #>  [378,] 0.7737526 0.8285434 0.8419918 #>  [379,] 0.5469780 0.5694609 0.5803641 #>  [380,] 0.5669643 0.5720090 0.6036496 #>  [381,] 0.9428875 0.9594152 0.9763409 #>  [382,] 1.4589602 1.5267878 1.6385632 #>  [383,] 1.4188356 1.4669902 1.5236695 #>  [384,] 0.5139913 0.5300007 0.5636265 #>  [385,] 0.8114705 0.8487271 0.8622160 #>  [386,] 0.7365476 0.7366390 0.7763828 #>  [387,] 0.6928888 0.7151810 0.7316367 #>  [388,] 0.5758167 0.6166287 0.6547692 #>  [389,] 0.6487750 0.6585494 0.6611389 #>  [390,] 0.6984857 0.7703549 0.7748322 #>  [391,] 0.8806777 0.8950047 0.9272294 #>  [392,] 0.8222361 0.8944686 0.8999436 #>  [393,] 0.9649994 1.0335970 1.0350927 #>  [394,] 0.4959959 0.5089328 0.5139913 #>  [395,] 0.5300007 0.5310863 0.5392615 #>  [396,] 1.0913406 1.1194264 1.1755497 #>  [397,] 0.6900101 0.7689482 0.7985211 #>  [398,] 0.7086801 0.7184794 0.7364559 #>  [399,] 1.0855535 1.1027961 1.1220239 #>  [400,] 0.6801160 0.7193060 0.7367775 #>  [401,] 0.7965398 0.8241728 0.8324946 #>  [402,] 0.6270664 0.6271318 0.6649897 #>  [403,] 1.4510563 1.4919071 1.4923994 #>  [404,] 0.5845292 0.6033843 0.6228606 #>  [405,] 0.6589417 0.6637824 0.6842062 #>  [406,] 1.3418803 1.4008843 1.4383354 #>  [407,] 0.5977933 0.6170210 0.6539151 #>  [408,] 0.6118877 0.6127120 0.6282198 #>  [409,] 1.1049739 1.1338504 1.1611406 #>  [410,] 0.7038719 0.7190755 0.7516721 #>  [411,] 0.6545217 0.6749312 0.6770384 #>  [412,] 1.1140211 1.1357632 1.1738578 #>  [413,] 0.7493347 0.7499347 0.7751219 #>  [414,] 0.9795737 0.9983973 1.0608146 #>  [415,] 0.5602669 0.5641600 0.6546015 #>  [416,] 0.9437846 0.9679796 0.9900458 #>  [417,] 0.7194078 0.7631110 0.7695631 #>  [418,] 0.7805549 0.7835263 0.8371556 #>  [419,] 1.0786330 1.1023920 1.1267497 #>  [420,] 0.6898594 0.6956952 0.6983772 #>  [421,] 0.6258706 0.6675928 0.6778480 #>  [422,] 0.6511615 0.6692200 0.6824507 #>  [423,] 0.4950644 0.4959959 0.5192774 #>  [424,] 1.3295334 1.3809517 1.3831408 #>  [425,] 1.1481709 1.1499757 1.1518067 #>  [426,] 0.7446557 0.8081136 0.8356350 #>  [427,] 1.6867220 1.7053934 1.7206814 #>  [428,] 1.6155038 1.6323294 1.6636268 #>  [429,] 0.7774635 0.7860690 0.7990225 #>  [430,] 0.5113486 0.5192774 0.5327646 #>  [431,] 0.6445894 0.7019929 0.7432338 #>  [432,] 0.7346032 0.7522343 0.7660418 #>  [433,] 1.0484148 1.1543184 1.1630710 #>  [434,] 0.5926376 0.6009060 0.6480377 #>  [435,] 0.7886300 0.7897156 0.8013524 #>  [436,] 1.3626763 1.3932010 1.4069584 #>  [437,] 0.9044331 0.9446703 0.9456106 #>  [438,] 0.4927931 0.5240904 0.5317098 #>  [439,] 1.9483314 2.0493457 2.0861344 #>  [440,] 1.0127104 1.0391522 1.0666581 #>  [441,] 0.9457559 0.9670991 0.9776869 #>  [442,] 0.8721690 0.8991376 0.9502043 #>  [443,] 0.8528781 0.9105811 0.9540319 #>  [444,] 1.0777910 1.0786844 1.1031867 #>  [445,] 0.6116102 0.6120008 0.6276581 #>  [446,] 0.5183166 0.5449901 0.5574918 #>  [447,] 0.6274558 0.6583335 0.6642511 #>  [448,] 0.9026205 0.9068415 0.9438680 #>  [449,] 0.6209100 0.6268624 0.6346661 #>  [450,] 0.8829641 0.9473373 0.9731372 #>  [451,] 1.0168904 1.0495126 1.0676963 #>  [452,] 0.4760712 0.4799574 0.4836364 #>  [453,] 0.5840279 0.5861725 0.5899931 #>  [454,] 0.8069900 0.8477105 0.8558730 #>  [455,] 0.6139989 0.6226119 0.6256543 #>  [456,] 0.6920488 0.7073627 0.7649418 #>  [457,] 1.2283494 1.2320287 1.2448765 #>  [458,] 0.6137302 0.6165380 0.6181989 #>  [459,] 0.5846692 0.5883466 0.5985974 #>  [460,] 0.7219062 0.7266422 0.8435259 #>  [461,] 1.6168582 1.6591971 1.7270331 #>  [462,] 0.6242651 0.6251247 0.6269816 #>  [463,] 0.8424933 0.8508811 0.8773799 #>  [464,] 1.3871085 1.3974444 1.3998351 #>  [465,] 1.2357396 1.2480079 1.2614243 #>  [466,] 0.9957900 1.1006883 1.1878073 #>  [467,] 0.5527917 0.5589439 0.5621113 #>  [468,] 0.6280803 0.6893450 0.7013837 #>  [469,] 0.9713862 0.9770688 0.9861885 #>  [470,] 0.6078971 0.6176918 0.6582535 #>  [471,] 1.1605758 1.1763594 1.1792365 #>  [472,] 0.8995302 0.9180643 0.9722368 #>  [473,] 0.9731372 1.0676963 1.0740310 #>  [474,] 1.3327472 1.3434420 1.3741180 #>  [475,] 0.6757017 0.6937195 0.7041362 #>  [476,] 0.7576597 0.7609775 0.7707032 #>  [477,] 0.7901394 0.8035105 0.8147662 #>  [478,] 1.2406065 1.2761574 1.3183553 #>  [479,] 0.9065294 1.0125706 1.0731268 #>  [480,] 1.1487808 1.1633230 1.2339874 #>  [481,] 0.8030590 0.8298260 0.8427695 #>  [482,] 0.7320925 0.7500443 0.7855120 #>  [483,] 0.9537708 0.9581853 0.9640365 #>  [484,] 0.6315301 0.6623171 0.6857979 #>  [485,] 0.7230904 0.7750667 0.7796817 #>  [486,] 0.5796161 0.6158295 0.6611464 #>  [487,] 0.6270664 0.6432395 0.6592110 #>  [488,] 0.7269873 0.7331500 0.7542764 #>  [489,] 0.8624518 0.8895518 0.9277277 #>  [490,] 0.5582877 0.5589439 0.5811327 #>  [491,] 1.0750118 1.2096126 1.2332852 #>  [492,] 0.4782221 0.4824820 0.5212923 #>  [493,] 0.8744169 0.8935366 0.9115665 #>  [494,] 1.1199982 1.1261918 1.1475864 #>  [495,] 0.5758492 0.6000041 0.6153740 #>  [496,] 0.5595248 0.6052552 0.6081441 #>  [497,] 0.5046312 0.5123870 0.5137168 #>  [498,] 0.7812902 0.8426154 0.8459388 #>  [499,] 1.4490418 1.5023846 1.5057847 #>  [500,] 0.7523016 0.7536638 0.7744003 #>  [501,] 0.6721133 0.6887497 0.6899483 #>  [502,] 0.5517230 0.5692347 0.5998091 #>  [503,] 0.6465671 0.7104065 0.7245225 #>  [504,] 0.8899266 0.9091325 0.9186296 #>  [505,] 0.5641600 0.5690021 0.6009382 #>  [506,] 0.7907186 0.8087014 0.8430620 #>  [507,] 1.5964243 1.6120608 1.6605650 #>  [508,] 1.0424609 1.1137578 1.1149779 #>  [509,] 0.6469981 0.7010315 0.7665944 #>  [510,] 1.0389758 1.0831000 1.1385285 #>  [511,] 0.7054018 0.7135783 0.7254580 #>  [512,] 0.5474476 0.5613995 0.6184255 #>  [513,] 0.6420831 0.6527750 0.6950245 #>  [514,] 0.9125845 0.9250797 1.0503629 #>  [515,] 0.6053125 0.6385613 0.7085052 #>  [516,] 1.4595301 1.4619206 1.4760775 #>  [517,] 0.9332849 0.9458437 0.9522901 #>  [518,] 0.9003681 0.9184817 0.9345236 #>  [519,] 0.5247262 0.5299595 0.5785076 #>  [520,] 0.5884917 0.5892043 0.6260530 #>  [521,] 0.5302915 0.5430944 0.5634972 #>  [522,] 0.4951433 0.5143447 0.5238277 #>  [523,] 1.3366888 1.4206230 1.4242778 #>  [524,] 0.9069627 0.9184273 0.9472754 #>  [525,] 0.7973543 0.8024687 0.8238624 #>  [526,] 1.0305299 1.0580209 1.0831076 #>  [527,] 0.6312986 0.6625668 0.6799052 #>  [528,] 0.8496878 0.8574301 0.8743399 #>  [529,] 0.5965561 0.6006650 0.6731910 #>  [530,] 0.6112533 0.6182160 0.6213176 #>  [531,] 0.7085881 0.7308206 0.7519080 #>  [532,] 0.8070152 0.8295380 0.8406213 #>  [533,] 0.7214474 0.7643214 0.8043606 #>  [534,] 1.0489231 1.0581104 1.0857662 #>  [535,] 0.9911055 1.0094659 1.0128532 #>  [536,] 0.5285471 0.6155733 0.6360513 #>  [537,] 0.8055882 0.8285330 0.8443057 #>  [538,] 0.6203033 0.6311789 0.6396758 #>  [539,] 0.9569054 1.0082869 1.0181748 #>  [540,] 0.5832722 0.5850173 0.5967275 #>  [541,] 0.8253817 0.8528781 0.8619526 #>  [542,] 0.6821660 0.6915113 0.6955817 #>  [543,] 0.9884314 0.9990343 1.0312263 #>  [544,] 0.7460579 0.7648062 0.7717953 #>  [545,] 2.4380557 2.4516208 2.5632269 #>  [546,] 0.8885582 0.9109562 0.9575484 #>  [547,] 0.7812691 0.8021242 0.8152349 #>  [548,] 1.1342310 1.2620959 1.2667164 #>  [549,] 1.5600826 1.6048183 1.6863758 #>  [550,] 0.7975347 0.8012555 0.8056514 #>  [551,] 0.9515224 0.9619603 0.9764781 #>  [552,] 0.7159880 0.7350472 0.7737528 #>  [553,] 0.9588939 0.9721769 0.9947036 #>  [554,] 0.6579810 0.6871051 0.7073870 #>  [555,] 0.7567643 0.7618281 0.7677097 #>  [556,] 1.0817990 1.1067940 1.1153158 #>  [557,] 1.0030763 1.0034151 1.0094429 #>  [558,] 0.8801319 0.8967558 0.9219853 #>  [559,] 0.8172268 0.8201722 0.8747833 #>  [560,] 1.3608051 1.3698061 1.4096958 #>  [561,] 1.7947352 1.7972440 1.8033650 #>  [562,] 0.7616962 0.7786477 0.8110551 #>  [563,] 1.0238433 1.0291866 1.0325735 #>  [564,] 1.0289438 1.0667453 1.0783074 #>  [565,] 0.7941744 0.8645611 0.8737544 #>  [566,] 0.8596353 0.9098411 0.9143801 #>  [567,] 0.8931020 0.9276351 0.9435096 #>  [568,] 0.6594034 0.6870356 0.7018498 #>  [569,] 0.6505192 0.7335737 0.7361051 #>  [570,] 0.5608120 0.5836678 0.6009060 #>  [571,] 1.0063940 1.0107478 1.0161158 #>  [572,] 0.5981006 0.6000968 0.6448901 #>  [573,] 0.5875227 0.6083403 0.6090624 #>  [574,] 0.6309820 0.6610108 0.7413337 #>  [575,] 0.5980412 0.6011523 0.6098387 #>  [576,] 0.6036565 0.6085941 0.6281833 #>  [577,] 0.6998219 0.7189313 0.7298523 #>  [578,] 0.7143577 0.7228846 0.7329266 #>  [579,] 0.7151785 0.7429111 0.7856487 #>  [580,] 0.6405043 0.6830694 0.7231203 #>  [581,] 0.7015230 0.7074047 0.7313586 #>  [582,] 0.8566631 0.8607260 0.8915208 #>  [583,] 0.5905117 0.5965576 0.7027993 #>  [584,] 0.7217556 0.7472388 0.7967956 #>  [585,] 0.7462996 0.7555763 0.7764521 #>  [586,] 0.7585694 0.8718832 0.8797578 #>  [587,] 0.6928888 0.7065641 0.7230491 #>  [588,] 1.2578741 1.2856431 1.3282280 #>  [589,] 0.6056369 0.6222813 0.6290408 #>  [590,] 0.8043655 0.8050062 0.8293938 #>  [591,] 0.6776934 0.7209430 0.7673836 #>  [592,] 0.7775299 0.8277650 0.8389083 #>  [593,] 0.6968093 0.7762795 0.7877617 #>  [594,] 0.8319589 0.8684673 0.8691323 #>  [595,] 0.8277955 0.8351717 0.9224350 #>  [596,] 0.5359034 0.5525529 0.5630849 #>  [597,] 1.1185308 1.1202992 1.1751241 #>  [598,] 0.7650320 0.7755034 0.7762722 #>  [599,] 0.8921344 0.9229777 0.9459966 #>  [600,] 0.6084595 0.6642393 0.6794963 #>  [601,] 1.4637212 1.4655820 1.4715731 #>  [602,] 0.5266748 0.5297800 0.5389702 #>  [603,] 1.0644465 1.0681083 1.0963822 #>  [604,] 0.6759270 0.6776376 0.7101626 #>  [605,] 0.6635144 0.7171871 0.7427029 #>  [606,] 0.7038824 0.7127943 0.7257850 #>  [607,] 0.9747025 1.0086137 1.0476083 #>  [608,] 0.7084283 0.7304847 0.7580970 #>  [609,] 0.5499720 0.5587320 0.5667027 #>  [610,] 0.6073935 0.6101844 0.6125747 #>  [611,] 0.7697175 0.7737661 0.8175333 #>  [612,] 0.9816158 1.0136113 1.0750224 #>  [613,] 0.6493921 0.6645706 0.6920953 #>  [614,] 0.7460579 0.7524293 0.7592296 #>  [615,] 0.9052035 0.9189366 0.9337663 #>  [616,] 0.9903341 1.0310717 1.0415703 #>  [617,] 0.7002338 0.7160551 0.7238143 #>  [618,] 0.5422210 0.5523603 0.5749789 #>  [619,] 0.5806831 0.5950626 0.6020274 #>  [620,] 0.7431499 0.7446519 0.7466325 #>  [621,] 0.7801156 0.7906224 0.7928261 #>  [622,] 0.4571718 0.4788163 0.4896841 #>  [623,] 0.5722359 0.5840035 0.5856147 #>  [624,] 0.6773270 0.6983681 0.7073627 #>  [625,] 0.7229052 0.7262058 0.7268669 #>  [626,] 0.5388320 0.5392800 0.5665673 #>  [627,] 0.6315301 0.6345876 0.6379527 #>  [628,] 0.6268704 0.6313197 0.6480212 #>  [629,] 0.6132035 0.6276946 0.6641362 #>  [630,] 0.5566877 0.5938258 0.6282618 #>  [631,] 0.6624597 0.6921329 0.7564284 #>  [632,] 0.7790665 0.7799198 0.7958258 #>  [633,] 1.2856431 1.3025946 1.3246774 #>  [634,] 0.8064338 0.8344930 0.8348227 #>  [635,] 0.6649457 0.6694920 0.6928133 #>  [636,] 0.6971110 0.6988748 0.7182672 #>  [637,] 1.0861979 1.0994565 1.1109406 #>  [638,] 0.5048390 0.5652759 0.6271935 #>  [639,] 0.7295984 0.7299064 0.7493347 #>  [640,] 0.7283112 0.7729619 0.7730474 #>  [641,] 0.9329231 0.9371240 0.9690409 #>  [642,] 0.7862455 0.7898964 0.8012564 #>  [643,] 0.6928172 0.6961450 0.6999705 #>  [644,] 0.6595776 0.6776011 0.6832561 #>  [645,] 1.2423895 1.2448084 1.2501161 #>  [646,] 1.3043140 1.3052383 1.3073046 #>  [647,] 0.5340513 0.6086245 0.6745353 #>  [648,] 0.9647538 0.9654690 0.9757838 #>  [649,] 0.5650986 0.5689224 0.5773049 #>  [650,] 0.6511615 0.6623936 0.6649538 #>  [651,] 0.7866159 0.7960681 0.8135464 #>  [652,] 0.7049189 0.7650321 0.7973543 #>  [653,] 0.6389843 0.7090666 0.7136445 #>  [654,] 1.0944852 1.1662023 1.1880775 #>  [655,] 1.0648674 1.1033200 1.1253501 #>  [656,] 0.6584535 0.6785228 0.6794963 #>  [657,] 0.9172325 0.9465065 0.9674182 #>  [658,] 0.6122223 0.6223933 0.6830694 #>  [659,] 0.8449573 0.8614030 0.8687098 #>  [660,] 0.6054812 0.6823537 0.6890844 #>  [661,] 1.6477417 1.6783399 1.6876652 #>  [662,] 0.5553054 0.6289610 0.6487750 #>  [663,] 1.6934208 1.7120017 1.7583392 #>  [664,] 0.9720290 0.9746382 0.9767777 #>  [665,] 0.8803269 0.8849354 0.9014850 #>  [666,] 1.3354724 1.3572080 1.4083841 #>  [667,] 0.6049058 0.6167259 0.6283656 #>  [668,] 0.8515147 0.8639935 0.8986000 #>  [669,] 0.5290280 0.5464929 0.5641103 #>  [670,] 0.7082061 0.7280220 0.7727202 #>  [671,] 0.6309466 0.6395175 0.6546015 #>  [672,] 0.5878734 0.5929182 0.6361165 #>  [673,] 1.1902024 1.2309474 1.2614243 #>  [674,] 0.6152631 0.6184569 0.6334068 #>  [675,] 0.5746486 0.5751557 0.5963565 #>  [676,] 0.9947444 0.9997612 1.0127800 #>  [677,] 0.5697753 0.5800062 0.5915363 #>  [678,] 1.4170730 1.4655820 1.4747782 #>  [679,] 0.7309348 0.7523342 0.7543425 #>  [680,] 0.5420239 0.5449901 0.5555561 #>  [681,] 0.6820729 0.6943187 0.7317721 #>  [682,] 0.5832637 0.6399320 0.6445031 #>  [683,] 0.6991929 0.7070268 0.7093720 #>  [684,] 0.6566259 0.6707388 0.6863370 #>  [685,] 1.0266883 1.0474047 1.0667754 #>  [686,] 1.0605629 1.0771376 1.1065876 #>  [687,] 0.5595248 0.5616835 0.6604220 #>  [688,] 0.8424384 0.8581480 0.9075294 #>  [689,] 0.8078257 0.8636061 0.8941118 #>  [690,] 0.7652245 0.7668050 0.7809216 #>  [691,] 1.3786007 1.3860232 1.4068675 #>  [692,] 1.0963822 1.1371235 1.1629369 #>  [693,] 0.8722985 0.8735101 0.9413469 #>  [694,] 0.7622941 0.8035495 0.8449203 #>  [695,] 0.8244025 0.8348925 0.8426757 #>  [696,] 0.7555486 0.7564447 0.7620255 #>  [697,] 0.5788434 0.5835435 0.6043202 #>  [698,] 0.5464929 0.5513263 0.5532031 #>  [699,] 0.8662375 0.8768483 0.8827640 #>  [700,] 0.5836809 0.6040855 0.6401907 #>  [701,] 1.1785261 1.1844731 1.2047518 #>  [702,] 1.1081669 1.1203876 1.1255613 #>  [703,] 0.5317098 0.5366333 0.5613036 #>  [704,] 0.5173171 0.5383150 0.5532031 #>  [705,] 1.2643901 1.2871995 1.3157405 #>  [706,] 0.6743772 0.6776011 0.7160065 #>  [707,] 0.9430587 0.9537286 0.9546622 #>  [708,] 1.3864219 1.3970543 1.4605423 #>  [709,] 0.7751219 0.7989762 0.8013473 #>  [710,] 1.0689328 1.0767431 1.1477055 #>  [711,] 0.6994499 0.7098818 0.7406813 #>  [712,] 0.6643553 0.6875067 0.7042062 #>  [713,] 0.6359134 0.6450686 0.6486984 #>  [714,] 0.7372373 0.7481638 0.7519759 #>  [715,] 0.6721808 0.6775636 0.7424801 #>  [716,] 1.0272136 1.0528160 1.0636992 #>  [717,] 0.8031479 0.8056514 0.8251296 #>  [718,] 0.6351291 0.6481963 0.6541843 #>  [719,] 0.6410768 0.6439662 0.6465671 #>  [720,] 1.0748914 1.1004006 1.1197772 #>  [721,] 0.5839463 0.6235266 0.6562015 #>  [722,] 0.4551768 0.4953395 0.5348268 #>  [723,] 0.6909867 0.7000725 0.7240655 #>  [724,] 1.3866049 1.4468936 1.5388840 #>  [725,] 0.8476780 0.8912523 0.9556811 #>  [726,] 0.5602669 0.5830679 0.5874651 #>  [727,] 0.6000968 0.6149498 0.6645661 #>  [728,] 1.1915336 1.2361743 1.2570138 #>  [729,] 0.7053258 0.7128485 0.7259300 #>  [730,] 1.1123623 1.1732293 1.1775466 #>  [731,] 1.0511261 1.1231204 1.1312745 #>  [732,] 0.7645115 0.8189921 0.8258356 #>  [733,] 0.9277230 1.0214017 1.0280879 #>  [734,] 0.5653199 0.5729784 0.5866291 #>  [735,] 0.6577769 0.6807385 0.7197091 #>  [736,] 1.3646809 1.3791333 1.3807062 #>  [737,] 0.6582412 0.6667944 0.6707388 #>  [738,] 0.6921021 0.7107049 0.7229416 #>  [739,] 1.5784631 1.6514853 1.6863758 #>  [740,] 0.4749970 0.5163155 0.5465192 #>  [741,] 0.4923841 0.5060121 0.5318796 #>  [742,] 1.0036438 1.0108916 1.0280879 #>  [743,] 1.1831637 1.2324847 1.2596230 #>  [744,] 0.9127632 0.9616110 0.9729310 #>  [745,] 0.7923019 0.8015691 0.8082349 #>  [746,] 0.8666915 0.8709788 0.8743161 #>  [747,] 0.9176180 0.9296598 0.9419744 #>  [748,] 1.2452692 1.2746458 1.2919311 #>  [749,] 0.6072905 0.6122613 0.6167621 #>  [750,] 0.4609694 0.5066279 0.5090920 #>  [751,] 1.6434905 1.6632271 1.6849481 #>  [752,] 0.6703013 0.6803826 0.6880636 #>  [753,] 0.5860378 0.5975860 0.6232435 #>  [754,] 0.8994115 0.9152979 0.9211005 #>  [755,] 0.6123553 0.6539718 0.6787642 #>  [756,] 0.6240293 0.6319519 0.6467976 #>  [757,] 1.3523685 1.3600315 1.4593063 #>  [758,] 0.5937527 0.6477116 0.6523346 #>  [759,] 0.6218585 0.6460467 0.6587175 #>  [760,] 0.6364366 0.6558380 0.7334931 #>  [761,] 0.7195084 0.7560812 0.8308699 #>  [762,] 0.7369758 0.7446926 0.7636894 #>  [763,] 0.9344510 0.9355892 0.9397830 #>  [764,] 0.5298044 0.5392800 0.5431640 #>  [765,] 0.5909622 0.6243114 0.6450686 #>  [766,] 1.6327838 1.6330025 1.7089291 #>  [767,] 0.5380140 0.5884373 0.6223950 #>  [768,] 0.5593679 0.5754324 0.6241751 #>  [769,] 0.6538422 0.6619037 0.6672861 #>  [770,] 0.6689080 0.6812871 0.6816278 #>  [771,] 0.8276477 0.8512571 0.8766063 #>  [772,] 0.4758197 0.4767461 0.5202870 #>  [773,] 0.9965473 1.0041634 1.0730882 #>  [774,] 0.6532362 0.6603803 0.6699460 #>  [775,] 0.6869596 0.7412534 0.7530484 #>  [776,] 0.7709582 0.7759131 0.7763828 #>  [777,] 0.6379017 0.6433928 0.6697096 #>  [778,] 0.7536888 0.7557746 0.7828015 #>  [779,] 0.5824584 0.6079141 0.6375190 #>  [780,] 0.6149668 0.6261544 0.7160825 #>  [781,] 0.7763070 0.7820847 0.7872038 #>  [782,] 0.6294432 0.6503048 0.6881636 #>  [783,] 0.5016489 0.6234320 0.6254747 #>  [784,] 0.6399474 0.6401261 0.6832231 #>  [785,] 1.1015957 1.1288465 1.1488068 #>  [786,] 0.5669891 0.5998220 0.6231276 #>  [787,] 0.7883275 0.7892713 0.7973221 #>  [788,] 0.5419123 0.5420137 0.5570377 #>  [789,] 0.8611402 0.9064415 0.9241243 #>  [790,] 0.8033320 0.8698397 0.8796216 #>  [791,] 0.5988874 0.6067250 0.6103840 #>  [792,] 1.2256647 1.2313957 1.2764845 #>  [793,] 0.7176377 0.7605488 0.7612538 #>  [794,] 0.9536600 0.9929627 1.0445312 #>  [795,] 0.9796900 1.0597170 1.0831000 #>  [796,] 0.8777243 0.8828951 0.8845534 #>  [797,] 0.7025061 0.7101247 0.7587702 #>  [798,] 0.5086942 0.5104340 0.5137168 #>  [799,] 0.8906128 0.9054204 0.9084045 #>  [800,] 0.5718666 0.5913504 0.6125747 #>  [801,] 0.6508148 0.6890844 0.7028661 #>  [802,] 0.8141381 0.8267549 0.8401677 #>  [803,] 0.8986362 0.9677371 0.9720295 #>  [804,] 0.9027513 0.9899814 1.0034432 #>  [805,] 0.4502617 0.4669336 0.4725159 #>  [806,] 0.4932947 0.5235438 0.5381897 #>  [807,] 0.5423459 0.5559947 0.5722359 #>  [808,] 0.4632449 0.5033851 0.5106418 #>  [809,] 0.7063200 0.7147622 0.7164802 #>  [810,] 0.8575515 0.8698569 0.8868136 #>  [811,] 0.6088049 0.6399474 0.6479672 #>  [812,] 0.9229391 0.9327977 0.9400535 #>  [813,] 0.8666419 0.9085322 0.9241455 #>  [814,] 0.7767065 0.7789866 0.8086738 #>  [815,] 0.5479582 0.5983709 0.6149975 #>  [816,] 0.6034885 0.6619905 0.6795628 #>  [817,] 0.9843500 1.0041469 1.0094451 #>  [818,] 0.8036083 0.8611970 0.8680793 #>  [819,] 0.7275773 0.7414069 0.7801449 #>  [820,] 1.1638148 1.1657730 1.1721312 #>  [821,] 0.7190755 0.7303991 0.7557436 #>  [822,] 0.4522626 0.4553322 0.4661259 #>  [823,] 0.6723862 0.6776362 0.6885498 #>  [824,] 0.7391064 0.7688748 0.7724739 #>  [825,] 1.1078239 1.1118214 1.1569926 #>  [826,] 0.6739336 0.6761099 0.6812441 #>  [827,] 1.2447158 1.2678078 1.3052383 #>  [828,] 0.5793361 0.6272453 0.6645661 #>  [829,] 0.8367852 0.9092342 0.9401202 #>  [830,] 0.5465192 0.5720090 0.5723429 #>  [831,] 0.5980987 0.6335071 0.6778480 #>  [832,] 0.6460467 0.6589417 0.6711503 #>  [833,] 0.8137142 0.8186626 0.8192502 #>  [834,] 0.5546792 0.5577760 0.5603743 #>  [835,] 0.6289987 0.6437861 0.6480596 #>  [836,] 0.9782846 0.9891303 0.9976114 #>  [837,] 0.7826937 0.7827092 0.8489309 #>  [838,] 0.7346989 0.7386148 0.7553015 #>  [839,] 0.8498970 0.8852816 0.9208081 #>  [840,] 0.6978090 0.7062420 0.7257850 #>  [841,] 1.2971047 1.3722458 1.3860549 #>  [842,] 1.2353786 1.2643321 1.3196464 #>  [843,] 0.6970224 0.7239683 0.7358528 #>  [844,] 1.2397633 1.2545929 1.3021556 #>  [845,] 1.4118446 1.4214224 1.4276886 #>  [846,] 0.5587320 0.6012280 0.6090624 #>  [847,] 0.6098717 0.6271394 0.6966325 #>  [848,] 0.5840967 0.6328512 0.6556320 #>  [849,] 0.9536600 1.0198319 1.0242330 #>  [850,] 0.7222484 0.7440939 0.8201654 #>  [851,] 0.6015509 0.7171121 0.7317721 #>  [852,] 1.1911566 1.2612892 1.2756279 #>  [853,] 0.7795227 0.7995326 0.8000752 #>  [854,] 0.6794466 0.7348007 0.7626052 #>  [855,] 0.7785923 0.7983602 0.8126951 #>  [856,] 1.0716722 1.1220239 1.1350803 #>  [857,] 0.5844723 0.6413160 0.6932105 #>  [858,] 0.9596029 0.9658352 1.0512043 #>  [859,] 0.9215420 0.9369488 0.9857730 #>  [860,] 0.6814400 0.7089310 0.7159281 #>  [861,] 2.1169433 2.2276850 2.2858875 #>  [862,] 0.6408273 0.6556408 0.6654889 #>  [863,] 0.5525965 0.6165380 0.6567438 #>  [864,] 0.8059440 0.8257599 0.8274954 #>  [865,] 0.7375237 0.7645244 0.7689319 #>  [866,] 0.8999506 0.9203052 0.9273934 #>  [867,] 0.8373929 0.8552950 0.8599408 #>  [868,] 0.6861106 0.7227019 0.7443509 #>  [869,] 1.7076407 1.7431961 1.7436737 #>  [870,] 0.5826457 0.5845292 0.5850173 #>  [871,] 0.5668413 0.5685677 0.5686485 #>  [872,] 0.8034523 0.8249747 0.8656542 #>  [873,] 0.7536888 0.7614495 0.8248537 #>  [874,] 0.9976114 1.0341369 1.0533417 #>  [875,] 0.7550046 0.8198506 0.8285677 #>  [876,] 1.2413043 1.3384262 1.4363712 #>  [877,] 1.0648674 1.1037583 1.1793108 #>  [878,] 0.6673624 0.6762065 0.6795402 #>  [879,] 1.0793788 1.0821099 1.0931346 #>  [880,] 1.2604578 1.2880500 1.3101289 #>  [881,] 0.7187877 0.7293104 0.7328386 #>  [882,] 1.0162807 1.0212694 1.0332621 #>  [883,] 0.9444630 0.9643181 1.0059463 #>  [884,] 1.1091533 1.1504010 1.2512875 #>  [885,] 1.4046518 1.4139353 1.4767549 #>  [886,] 0.9170144 0.9408661 0.9850122 #>  [887,] 1.0928033 1.1078880 1.1136164 #>  [888,] 0.5797273 0.6081441 0.6172652 #>  [889,] 1.0963341 1.1110153 1.1383010 #>  [890,] 1.8825100 1.9450530 1.9645563 #>  [891,] 0.5909919 0.6402065 0.6447596 #>  [892,] 0.6546611 0.6622724 0.6677879 #>  [893,] 0.7811180 0.7963860 0.8225970 #>  [894,] 0.7475364 0.7583879 0.7636585 #>  [895,] 1.2601639 1.2811644 1.3057946 #>  [896,] 0.6053124 0.6225652 0.6243334 #>  [897,] 0.8465604 0.8697144 0.9104842 #>  [898,] 0.7367310 0.7440757 0.7593849 #>  [899,] 0.7393178 0.7941744 0.7990139 #>  [900,] 0.6426245 0.6584867 0.6636397 #>  [901,] 0.7364018 0.7698627 0.7718675 #>  [902,] 0.5066279 0.5546792 0.5749789 #>  [903,] 0.5529867 0.5771227 0.6045019 #>  [904,] 0.6014405 0.6076802 0.6240113 #>  [905,] 0.9263953 0.9302724 0.9369111 #>  [906,] 0.5690021 0.6076802 0.6276581 #>  [907,] 0.6759745 0.6851152 0.7006895 #>  [908,] 0.8609544 0.8890778 0.9090889 #>  [909,] 0.5136548 0.5499720 0.5712443 #>  [910,] 1.0337955 1.2032274 1.2139102 #>  [911,] 1.6889554 1.7496498 1.7677428 #>  [912,] 0.8520836 0.8527024 0.8645113 #>  [913,] 0.5537487 0.5856147 0.5890551 #>  [914,] 0.7557852 0.8320219 0.8482414 #>  [915,] 1.2192054 1.2948874 1.2955347 #>  [916,] 0.7075229 0.7213202 0.7586926 #>  [917,] 0.8570854 0.8571299 0.9671274 #>  [918,] 0.5788502 0.5905245 0.6172361 #>  [919,] 0.8081136 0.8334772 0.8631659 #>  [920,] 0.7277235 0.7464441 0.7483410 #>  [921,] 1.0019375 1.1071935 1.2923924 #>  [922,] 0.5012179 0.5133923 0.5185992 #>  [923,] 0.6972918 0.6998751 0.7373383 #>  [924,] 0.7903779 0.8481681 0.8768483 #>  [925,] 1.3246813 1.3955676 1.4204929 #>  [926,] 0.5187006 0.5223342 0.5336450 #>  [927,] 0.9468222 1.0337955 1.0780478 #>  [928,] 0.6514178 0.6604855 0.7395184 #>  [929,] 0.5746486 0.6687237 0.6740300 #>  [930,] 0.8766107 0.9556346 0.9604897 #>  [931,] 0.5729784 0.5766698 0.5775135 #>  [932,] 0.6749312 0.6918091 0.7262024 #>  [933,] 0.5975735 0.6012438 0.6070589 #>  [934,] 0.7690294 0.7924678 0.8094153 #>  [935,] 0.5862509 0.5901062 0.5963565 #>  [936,] 0.9485185 0.9600454 0.9688503 #>  [937,] 0.5719519 0.5720404 0.5757539 #>  [938,] 1.0400997 1.0507355 1.0624628 #>  [939,] 2.2311904 2.2388232 2.2549713 #>  [940,] 0.6640577 0.7139003 0.7160551 #>  [941,] 0.7912100 0.7992525 0.8331350 #>  [942,] 1.1737212 1.2099465 1.2391633 #>  [943,] 0.9363660 0.9715823 1.0058715 #>  [944,] 0.6528212 0.6609002 0.6668270 #>  [945,] 0.6287559 0.6388338 0.6578835 #>  [946,] 0.8854436 0.9107902 0.9297149 #>  [947,] 0.6429045 0.6513095 0.6667942 #>  [948,] 1.2345329 1.3021556 1.3096045 #>  [949,] 0.5573242 0.5843882 0.6170210 #>  [950,] 0.5632083 0.6015140 0.6142913 #>  [951,] 0.6794435 0.6918461 0.7478415 #>  [952,] 0.6266756 0.6277823 0.6295668 #>  [953,] 0.8615821 0.8733239 0.8875742 #>  [954,] 0.8662437 0.8781633 0.9093570 #>  [955,] 0.5698056 0.5872974 0.6054637 #>  [956,] 1.0537708 1.0608419 1.0704494 #>  [957,] 0.9386995 0.9631346 0.9668490 #>  [958,] 0.7056644 0.7956879 0.8021242 #>  [959,] 0.5425024 0.5587766 0.5653471 #>  [960,] 0.7123423 0.7295629 0.7372800 #>  [961,] 0.5980761 0.6056369 0.6557622 #>  [962,] 1.0585797 1.1098669 1.1397769 #>  [963,] 0.7294133 0.7747363 0.8351717 #>  [964,] 0.6543626 0.6762065 0.6859374 #>  [965,] 0.6495312 0.6575381 0.6725052 #>  [966,] 0.5140561 0.5153236 0.5526906 #>  [967,] 0.8013127 0.8020129 0.8046520 #>  [968,] 0.5540353 0.5715610 0.5816951 #>  [969,] 0.8122013 0.8151658 0.8195475 #>  [970,] 0.9025474 0.9169267 0.9181825 #>  [971,] 1.5392087 1.6021518 1.6364698 #>  [972,] 1.5445028 1.5510452 1.5582574 #>  [973,] 1.3713515 1.4489616 1.4999050 #>  [974,] 0.6950494 0.7257511 0.7258441 #>  [975,] 0.5432063 0.5937221 0.6013011 #>  [976,] 1.0136141 1.0177023 1.0332294 #>  [977,] 0.5540142 0.6061396 0.6200927 #>  [978,] 1.2970223 1.3232899 1.3238604 #>  [979,] 0.5084350 0.5572687 0.5664905 #>  [980,] 0.6441954 0.6451331 0.7410959 #>  [981,] 0.8345976 0.8640873 0.8643575 #>  [982,] 0.5200349 0.5214415 0.5675699 #>  [983,] 0.4905980 0.5118830 0.5126071 #>  [984,] 0.9424002 0.9578976 0.9580455 #>  [985,] 0.6335071 0.6410853 0.6712112 #>  [986,] 0.6535593 0.6616308 0.6987469 #>  [987,] 0.6594034 0.6851152 0.6950203 #>  [988,] 1.0030853 1.0258981 1.0582660 #>  [989,] 1.0863144 1.1073601 1.1783669 #>  [990,] 0.5680138 0.5881248 0.5904526 #>  [991,] 0.9542606 0.9586735 0.9820426 #>  [992,] 0.8809300 0.9032323 0.9148037 #>  [993,] 1.0680350 1.0967341 1.1061104 #>  [994,] 1.0725720 1.0853451 1.1164731 #>  [995,] 0.6975846 0.6991929 0.7229736 #>  [996,] 1.1172669 1.1454392 1.2023678 #>  [997,] 0.6853561 0.6952864 0.7162719 #>  [998,] 1.0406571 1.1005976 1.1225681 #>  [999,] 0.5657586 0.5665673 0.5883466 #> [1000,] 1.4582265 1.5333960 1.5526239 #>"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_log_rank_threshold.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"Compute log-rank test p-value difference two survival curves obtained splitting dataset \"low\" \"high\" risk group using possible relative-risk thresholds.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_log_rank_threshold.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"","code":"tof_find_log_rank_threshold(input_data, relative_risk_col, time_col, event_col)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_log_rank_threshold.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"input_data tbl_df data.frame observation row. relative_risk_col unquote column name indicating column contains relative-risk estimates observation. time_col unquoted column name indicating column contains true time--event information observation. event_col unquoted column name indicating column contains outcome (event censorship). Must binary column - values  either 0 1 (1 indicating adverse event 0 indicating  censorship) FALSE TRUE (TRUE indicating adverse event FALSE indicating censorship).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_log_rank_threshold.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"tibble 3 columns: \"candidate_thresholds\" (relative-risk threshold used log-rank test), \"log_rank_p_val\" (p-values log-rank tests) \"is_best\" (logical value indicating candidate threshold gave optimal, .e. smallest, p-value).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_panel_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Use tidytof's opinionated heuristic for extracted a high-dimensional cytometry panel's metal-antigen pairs\nfrom a flowFrame (read from a .fcs file.) — tof_find_panel_info","title":"Use tidytof's opinionated heuristic for extracted a high-dimensional cytometry panel's metal-antigen pairs\nfrom a flowFrame (read from a .fcs file.) — tof_find_panel_info","text":"Using character vectors obtained `name` `desc` columns parameters data flowFrame, figure high-dimensional cytometry panel used collect data return tidy tibble.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_panel_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use tidytof's opinionated heuristic for extracted a high-dimensional cytometry panel's metal-antigen pairs\nfrom a flowFrame (read from a .fcs file.) — tof_find_panel_info","text":"","code":"tof_find_panel_info(input_flowFrame)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_panel_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use tidytof's opinionated heuristic for extracted a high-dimensional cytometry panel's metal-antigen pairs\nfrom a flowFrame (read from a .fcs file.) — tof_find_panel_info","text":"input_flowFrame raw flowFrame (just read .fcs file) high-dimensional cytometry panel extracted","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_panel_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use tidytof's opinionated heuristic for extracted a high-dimensional cytometry panel's metal-antigen pairs\nfrom a flowFrame (read from a .fcs file.) — tof_find_panel_info","text":"tibble 2 columns (`metals` `antigens`) correspond metals antigens high-dimensional cytometry panel used data acquisition.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_fit_split.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a glmnet model and calculate performance metrics using a single rsplit object — tof_fit_split","title":"Fit a glmnet model and calculate performance metrics using a single rsplit object — tof_fit_split","text":"function trains glmnet model training set rsplit object, calculates performance metrics model validation/holdout set combinations mixture penalty hyperparameters provided hyperparameter grid.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_fit_split.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a glmnet model and calculate performance metrics using a single rsplit object — tof_fit_split","text":"","code":"tof_fit_split(   split_data,   prepped_recipe,   hyperparameter_grid,   model_type,   outcome_colnames )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_fit_split.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a glmnet model and calculate performance metrics using a single rsplit object — tof_fit_split","text":"split_data `rsplit` object rsample package. Alternatively, unsplit tbl_df can provided, though recommended. prepped_recipe trained recipe hyperparameter_grid tibble containing hyperparameter values tune. Can created using tof_create_grid model_type string representing type glmnet model fit. outcome_colnames Quoted column names indicating columns data fit represent outcome variables (others assumed predictors).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_fit_split.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit a glmnet model and calculate performance metrics using a single rsplit object — tof_fit_split","text":"tibble number rows input hyperparameter grid. row represents combination mixture penalty, column contains performance metric fitted glmnet model `split_data`'s holdout set. specific performance metrics depend type model fit: \"linear\" mean-squared error (`mse`) mean absolute error (`mae`) \"two-class\" binomial deviance (`binomial_deviance`); misclassification error rate `misclassification_error`; area receiver-operating curve (`roc_auc`); `mse` `mse` \"multiclass\" multinomial deviance (`multinomial_deviance`); misclassification error rate `misclassification_error`; area receiver-operating curve (`roc_auc`) computed using Hand-Till method roc_auc; `mse` `mse` \"survival\" negative log2-transformed partial likelihood (`neg_log_partial_likelihood`) Harrel's concordance index (often simply called \"C\"; `concordance_index`)","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_fit_split.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fit a glmnet model and calculate performance metrics using a single rsplit object — tof_fit_split","text":"Harrel Jr, F. E. Lee, K. L. Mark, D. B. (1996) Tutorial biostatistics: multivariable prognostic models: issues developing models, evaluating assumptions adequacy, measuring reducing error, Statistics Medicine, 15, pages 361–387.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_generate_palette.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a color palette using tidytof. — tof_generate_palette","title":"Generate a color palette using tidytof. — tof_generate_palette","text":"function generates color palette based color palette author's favorite pokemon.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_generate_palette.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a color palette using tidytof. — tof_generate_palette","text":"","code":"tof_generate_palette(num_colors)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_generate_palette.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a color palette using tidytof. — tof_generate_palette","text":"num_colors integer specifying number colors like generate.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_generate_palette.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a color palette using tidytof. — tof_generate_palette","text":"character vector hex codes specifying colors palette.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_generate_palette.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a color palette using tidytof. — tof_generate_palette","text":"","code":"tof_generate_palette(num_colors = 5L) #> [1] \"#D86020\" \"#28A8B8\" \"#F89040\" \"#D0D0D0\" \"#903000\""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_mixture.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s optimal mixture (alpha) value — tof_get_model_mixture","title":"Get a `tof_model`'s optimal mixture (alpha) value — tof_get_model_mixture","text":"Get `tof_model`'s optimal mixture (alpha) value","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_mixture.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s optimal mixture (alpha) value — tof_get_model_mixture","text":"","code":"tof_get_model_mixture(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_mixture.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s optimal mixture (alpha) value — tof_get_model_mixture","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_mixture.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s optimal mixture (alpha) value — tof_get_model_mixture","text":"numeric value","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_mixture.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s optimal mixture (alpha) value — tof_get_model_mixture","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_mixture(regression_model) #> [1] 1"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_outcomes.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s outcome variable name(s) — tof_get_model_outcomes","title":"Get a `tof_model`'s outcome variable name(s) — tof_get_model_outcomes","text":"Get `tof_model`'s outcome variable name(s)","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_outcomes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s outcome variable name(s) — tof_get_model_outcomes","text":"","code":"tof_get_model_outcomes(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_outcomes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s outcome variable name(s) — tof_get_model_outcomes","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_outcomes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s outcome variable name(s) — tof_get_model_outcomes","text":"character vector","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_outcomes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s outcome variable name(s) — tof_get_model_outcomes","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_outcomes(regression_model) #> [1] \"outcome\""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_penalty.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s optimal penalty (lambda) value — tof_get_model_penalty","title":"Get a `tof_model`'s optimal penalty (lambda) value — tof_get_model_penalty","text":"Get `tof_model`'s optimal penalty (lambda) value","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_penalty.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s optimal penalty (lambda) value — tof_get_model_penalty","text":"","code":"tof_get_model_penalty(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_penalty.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s optimal penalty (lambda) value — tof_get_model_penalty","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_penalty.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s optimal penalty (lambda) value — tof_get_model_penalty","text":"numeric value","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_penalty.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s optimal penalty (lambda) value — tof_get_model_penalty","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_penalty(regression_model) #> [1] 1"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_training_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s training data — tof_get_model_training_data","title":"Get a `tof_model`'s training data — tof_get_model_training_data","text":"Get `tof_model`'s training data","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_training_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s training data — tof_get_model_training_data","text":"","code":"tof_get_model_training_data(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_training_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s training data — tof_get_model_training_data","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_training_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s training data — tof_get_model_training_data","text":"tibble (non-preprocessed) training data used fit model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_training_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s training data — tof_get_model_training_data","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_training_data(regression_model) #> # A tibble: 100 × 9 #>    sample  cd45 pstat5   cd34 outcome class  multiclass event time_to_event #>    <chr>  <dbl>  <dbl>  <dbl>   <dbl> <fct>  <fct>      <dbl>         <dbl> #>  1 67     0.414  0.937 0.862     5.40 class1 class3         1         10.7  #>  2 21     0.955  0.216 0.489     2.53 class2 class1         0         10.4  #>  3 86     0.416  0.227 0.0639    2.49 class2 class3         1          8.55 #>  4 87     0.762  0.396 0.0877    3.58 class1 class3         1          8.62 #>  5 38     0.780  0.127 0.487     3.41 class2 class2         1         10.7  #>  6 98     0.170  0.695 0.274     1.88 class2 class3         1          7.52 #>  7 48     0.650  0.267 0.652     2.55 class2 class2         1          8.85 #>  8 97     0.588  0.693 0.781     4.33 class1 class3         1          7.45 #>  9 10     0.173  0.428 0.0454    2.46 class2 class1         0         11.4  #> 10 5      0.676  0.665 0.500     4.46 class1 class1         0          9.04 #> # ℹ 90 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s model type — tof_get_model_type","title":"Get a `tof_model`'s model type — tof_get_model_type","text":"Get `tof_model`'s model type","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s model type — tof_get_model_type","text":"","code":"tof_get_model_type(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s model type — tof_get_model_type","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s model type — tof_get_model_type","text":"string","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_type.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s model type — tof_get_model_type","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_type(regression_model) #> [1] \"linear\""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_x.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s processed predictor matrix (for glmnet) — tof_get_model_x","title":"Get a `tof_model`'s processed predictor matrix (for glmnet) — tof_get_model_x","text":"Get `tof_model`'s processed predictor matrix (glmnet)","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_x.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s processed predictor matrix (for glmnet) — tof_get_model_x","text":"","code":"tof_get_model_x(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_x.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s processed predictor matrix (for glmnet) — tof_get_model_x","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_x.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s processed predictor matrix (for glmnet) — tof_get_model_x","text":"x value formatted glmnet","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_x.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s processed predictor matrix (for glmnet) — tof_get_model_x","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_x(regression_model) #>                cd45      pstat5        cd34 #>   [1,]  1.459481796 -0.67175555 -0.13771431 #>   [2,]  0.783489919  0.74552424 -1.10701939 #>   [3,]  0.506822907  0.63394147 -1.51395428 #>   [4,]  0.637545912  1.29055880 -1.25220495 #>   [5,]  0.148551033  1.25998151 -1.62248321 #>   [6,] -0.200281303  0.05292361  0.23036911 #>   [7,] -0.544531893  0.48656795  0.60778042 #>   [8,] -0.710813980 -1.09680449  0.37356270 #>   [9,]  0.399974115 -0.91119963 -1.35465259 #>  [10,] -1.110579474  1.37028426 -1.11911546 #>  [11,] -0.611056704  1.57544664  0.36569328 #>  [12,]  1.498938819  1.02546109  1.06924156 #>  [13,] -0.955888827 -1.21631298  0.09814528 #>  [14,]  1.331473894 -0.49178117 -0.15424325 #>  [15,]  0.065417601 -0.38014379  1.33576181 #>  [16,] -1.045508838  0.10197890 -0.98353254 #>  [17,]  1.368605950 -0.15128903  1.75270032 #>  [18,] -0.799163213 -0.28124196 -1.34062743 #>  [19,] -0.480722320  1.34543330  0.73815646 #>  [20,] -1.619651500  0.96392499  1.25510571 #>  [21,] -1.728192851  1.89353932  0.49021721 #>  [22,] -0.549825206 -0.62319916 -0.99322681 #>  [23,] -0.131421508 -0.43952077  0.29286790 #>  [24,] -0.573975611  1.38206949 -0.96826839 #>  [25,]  0.426283286  1.13963346 -1.37470412 #>  [26,] -0.448901727  1.04351252  1.08034073 #>  [27,]  0.135148300  0.06039692  1.63935628 #>  [28,]  1.409796810  0.25276355 -0.01754154 #>  [29,] -1.279343834 -1.13227523  0.03477685 #>  [30,] -0.118975159  0.95785148  0.99644521 #>  [31,]  0.402011270 -0.69981982  0.87649953 #>  [32,] -0.573987806 -0.12254258 -0.87452701 #>  [33,]  0.638472104 -0.27354981  1.24598726 #>  [34,] -1.334804862  0.28077043  0.78000620 #>  [35,]  1.324898711 -1.41771529  0.05142922 #>  [36,] -1.139190290 -1.42314746  0.28836711 #>  [37,]  0.860249106  1.53685588 -0.93019740 #>  [38,] -0.199547211  0.08501018 -0.06095369 #>  [39,]  0.808581238 -0.61953564  0.99920460 #>  [40,] -1.266522875  1.86845541  1.78465314 #>  [41,] -0.621688189  0.19493254 -0.01997483 #>  [42,]  1.313565510 -0.30931244  1.06778019 #>  [43,]  1.600911181  0.43905077 -0.91128388 #>  [44,] -1.236783605  0.13169544 -0.45898353 #>  [45,]  0.914754822  1.28677383  1.39888880 #>  [46,] -0.083153344 -0.57087529  1.09531878 #>  [47,]  1.352764344  0.25731070 -0.03977487 #>  [48,] -0.999254808  1.07723077 -0.41581863 #>  [49,] -0.293604751 -1.07061789 -1.29488502 #>  [50,]  0.322983771 -1.49315204  1.81760741 #>  [51,]  0.191790979 -0.72540037  0.30976842 #>  [52,] -1.838582639  1.07122088  1.83214394 #>  [53,] -0.281004896  0.87289867 -0.17062281 #>  [54,]  0.863604055 -0.08192978  0.69971849 #>  [55,]  1.546566411 -0.32514314  0.11328915 #>  [56,] -0.131205887  0.47496109 -0.92911607 #>  [57,]  1.092907350 -0.89773759 -0.17212704 #>  [58,] -1.689644649  0.87810222 -0.92718302 #>  [59,] -0.042915617 -0.56210629  0.79110521 #>  [60,]  0.010299955  1.16370057 -0.76590438 #>  [61,] -0.706982235 -1.28791443  1.61693742 #>  [62,]  0.710520860  0.02155147  0.92284022 #>  [63,]  1.501477042 -0.98518394 -0.15598965 #>  [64,]  0.684170479  1.68356285  1.06210630 #>  [65,] -0.984275378  0.30277168  0.50592865 #>  [66,] -0.574285111  0.67779657 -0.79556485 #>  [67,] -1.532218137 -0.12786710  0.27122785 #>  [68,] -0.184148548 -1.19874210 -1.40802778 #>  [69,] -1.655600550 -0.01057871 -1.63678090 #>  [70,] -0.906302605 -0.93545757  1.20363184 #>  [71,] -1.640085306  0.01982291 -1.06785556 #>  [72,] -0.752971010 -1.02846409  1.74558925 #>  [73,] -1.417411701 -0.40713694 -0.66507960 #>  [74,] -0.023297704  2.00100914 -0.93434160 #>  [75,]  0.982401723 -1.03496906 -0.35625750 #>  [76,]  1.079015835 -1.41449190 -0.20673686 #>  [77,] -1.433906109  1.59606326  0.43408983 #>  [78,]  0.370103584 -0.90820102 -0.59303835 #>  [79,]  1.205168845 -1.29802507  1.45881084 #>  [80,] -1.049662555  0.50572263  0.10870428 #>  [81,]  1.101384620 -0.92427951 -0.31325609 #>  [82,] -1.247151418 -0.59552281 -0.77732729 #>  [83,]  1.047980059 -0.57592373 -0.64382453 #>  [84,]  1.525270234 -1.14197072 -0.66988441 #>  [85,]  0.392797303  1.99034286  0.01555097 #>  [86,]  0.081706931 -1.47214141  1.20264586 #>  [87,]  0.905515626 -1.32959709  0.12670281 #>  [88,] -1.556799324  0.99732788 -1.29308380 #>  [89,]  0.745827373 -1.42297670 -0.63867550 #>  [90,]  1.268459427 -1.01210699 -1.41281557 #>  [91,] -0.293248570  0.83556817  1.72770428 #>  [92,]  1.317108703 -1.34795911 -0.15232752 #>  [93,]  1.030013458 -1.15107138  1.77594612 #>  [94,]  0.569465660 -0.74106875 -0.62226755 #>  [95,]  0.800176536  0.22684841 -0.90253308 #>  [96,]  1.393103509 -1.01389643 -1.21285225 #>  [97,]  0.620147049  0.40658905  0.55064416 #>  [98,] -0.005337714 -0.23090891 -1.34151173 #>  [99,] -1.780338039  2.01939246 -1.19292859 #> [100,] -0.362958616 -0.90056756 -1.33774793"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_y.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s processed outcome variable matrix (for glmnet) — tof_get_model_y","title":"Get a `tof_model`'s processed outcome variable matrix (for glmnet) — tof_get_model_y","text":"Get `tof_model`'s processed outcome variable matrix (glmnet)","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_y.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s processed outcome variable matrix (for glmnet) — tof_get_model_y","text":"","code":"tof_get_model_y(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_y.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s processed outcome variable matrix (for glmnet) — tof_get_model_y","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_y.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s processed outcome variable matrix (for glmnet) — tof_get_model_y","text":"y value formatted glmnet","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_y.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s processed outcome variable matrix (for glmnet) — tof_get_model_y","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_y(regression_model) #>   [1]  4.1478621  4.3843791  2.8124774  0.8106826  1.4835903  4.6117211 #>   [7]  4.8345097  4.0111755  3.8560993  2.2032095  1.0836811  2.1093860 #>  [13]  5.6197170  0.3758810  1.2950922  5.4732697  1.7715609  3.8998179 #>  [19]  5.6034142  2.7144715  2.1914115  4.7543662 -1.0392157  4.8762560 #>  [25]  3.0326659  0.5616491  2.9000033  3.2593305  4.0460877  2.6134126 #>  [31]  5.2745321  4.4430573  1.7787864  2.7007110  1.0518730  1.8853961 #>  [37]  6.8268286  3.9753989  4.1454763  3.4090994  3.1573565  3.7536057 #>  [43]  5.4648177  5.5470701  2.9985204  5.6610227  5.7281408  3.8848138 #>  [49]  2.4077795  4.6607967  6.8454110  4.0539716  1.4784563  2.3853533 #>  [55]  0.6304412  3.1714364  2.9006488  4.4711323  0.9589494  1.2786147 #>  [61]  4.2405014  5.7433066  4.2010269  1.2995979  6.2054764  4.8143959 #>  [67]  3.9207217  4.5723916  5.8171633  2.3019547  2.8518939  5.4914590 #>  [73]  1.1808231  5.4929288  5.1123338  3.8168588  2.6059331  1.7584566 #>  [79]  4.8180479  4.9429498  2.8640658  7.1428288 -0.6562029  1.7807314 #>  [85]  5.2516817  5.4999518  3.3654467  5.4664403  6.4299920  2.6297320 #>  [91]  6.6849881  4.8524668 -0.1835734  1.5531867  4.9335943  4.3507448 #>  [97]  2.2320345  2.0684903  3.5447096  7.1091607"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_panel.html","id":null,"dir":"Reference","previous_headings":"","what":"Get panel information from a tof_tibble — tof_get_panel","title":"Get panel information from a tof_tibble — tof_get_panel","text":"Get panel information tof_tibble","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_panel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get panel information from a tof_tibble — tof_get_panel","text":"","code":"tof_get_panel(tof_tibble)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_panel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get panel information from a tof_tibble — tof_get_panel","text":"tof_tibble `tof_tbl`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_panel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get panel information from a tof_tibble — tof_get_panel","text":"tibble containing information CyTOF panel used data acquisition data contained `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_panel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get panel information from a tof_tibble — tof_get_panel","text":"","code":"input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]] tof_tibble <- tof_read_data(input_file) tof_get_panel(tof_tibble) #> # A tibble: 59 × 2 #>    metals       antigens     #>    <chr>        <chr>        #>  1 Time         Time         #>  2 Event_length Event_length #>  3 Y89          CD45         #>  4 Pd102        empty        #>  5 Pd104        empty        #>  6 Pd105        empty        #>  7 Pd106        empty        #>  8 Pd108        empty        #>  9 Pd110        empty        #> 10 In113        CD61         #> # ℹ 49 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_is_numeric.html","id":null,"dir":"Reference","previous_headings":"","what":"Find if a vector is numeric — tof_is_numeric","title":"Find if a vector is numeric — tof_is_numeric","text":"function takes input vector `.vec` checks either integer double (.e. type vector might encode high-dimensional cytometry measurements).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_is_numeric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find if a vector is numeric — tof_is_numeric","text":"","code":"tof_is_numeric(.vec)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_is_numeric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find if a vector is numeric — tof_is_numeric","text":".vec vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_is_numeric.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find if a vector is numeric — tof_is_numeric","text":"boolean value indicating .vec type integer double.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_knn_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate cells' local densities using K-nearest-neighbor density estimation — tof_knn_density","title":"Estimate cells' local densities using K-nearest-neighbor density estimation — tof_knn_density","text":"function uses distances cell K nearest neighbors estimate local density cell `tof_tbl` `tibble` containing high-dimensional cytometry data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_knn_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate cells' local densities using K-nearest-neighbor density estimation — tof_knn_density","text":"","code":"tof_knn_density(   tof_tibble,   distance_cols = where(tof_is_numeric),   num_neighbors = min(15L, nrow(tof_tibble)),   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\"),   estimation_method = c(\"mean_distance\", \"sum_distance\"),   normalize = TRUE,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_knn_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate cells' local densities using K-nearest-neighbor density estimation — tof_knn_density","text":"tof_tibble `tof_tbl` `tibble`. distance_cols Unquoted names columns `tof_tibble` use calculating cell--cell distances local density estimation cell. Defaults numeric columns `tof_tibble`. num_neighbors integer indicating number nearest neighbors use estimating local density cell. Defaults minimum 15 number rows `tof_tibble`. distance_function string indicating distance function use calculating cell--cell distances local density estimation. Options include \"euclidean\" (default) \"cosine\". estimation_method string indicating relative density cell calculated distances k nearest neighbors. Options \"mean_distance\" (default; estimates relative density cell's neighborhood taking negative average distances nearest neighbors) \"sum_distance\" (estimates relative density cell's neighborhood taking negative sum distances nearest neighbors). normalize boolean value indicating vector local density estimates normalized values 0 1. Defaults TRUE. ... Additional optional arguments pass tof_find_knn.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_knn_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate cells' local densities using K-nearest-neighbor density estimation — tof_knn_density","text":"tibble single column named \".knn_density\" containing local density estimates input cell `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_log_rank_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"Compute log-rank test p-value difference two survival curves obtained splitting dataset \"low\" \"high\" risk group using given relative-risk threshold.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_log_rank_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"","code":"tof_log_rank_test(   input_data,   relative_risk_col,   time_col,   event_col,   threshold )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_log_rank_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"input_data tbl_df data.frame observation row. relative_risk_col unquote column name indicating column contains relative-risk estimates observation. time_col unquoted column name indicating column contains true time--event information observation. event_col unquoted column name indicating column contains outcome (event censorship). Must binary column - values  either 0 1 (1 indicating adverse event 0 indicating  censorship) FALSE TRUE (TRUE indicating adverse event FALSE indicating censorship). threshold numeric value indicating relative-risk threshold used split observations low- high-risk groups.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_log_rank_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"numeric value <1, p-value log-rank test.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_log_rank_test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_knn_graph.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — tof_make_knn_graph","title":"Title — tof_make_knn_graph","text":"Title","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_knn_graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — tof_make_knn_graph","text":"","code":"tof_make_knn_graph(   tof_tibble,   knn_cols,   num_neighbors,   distance_function = c(\"euclidean\", \"cosine\"),   graph_type = c(\"weighted\", \"unweighted\"),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_knn_graph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — tof_make_knn_graph","text":"tof_tibble tibble tof_tbl. knn_cols Unquoted column names indicating columns tof_tibble used KNN calculation. num_neighbors integer number neighbors find cell ( including ). distance_function string indicating distance function use nearest-neighbor calculation. Options include \"euclidean\" (default) \"cosine\" distances. graph_type string indicating graph's edges weights (\"weighted\"; default) (\"unweighted\"). ... Optional additional arguments pass tof_find_knn","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_knn_graph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — tof_make_knn_graph","text":"tbl_graph.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_knn_graph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title — tof_make_knn_graph","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_roc_curve.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute a receiver-operating curve (ROC) for a two-class or multiclass dataset — tof_make_roc_curve","title":"Compute a receiver-operating curve (ROC) for a two-class or multiclass dataset — tof_make_roc_curve","text":"Compute receiver-operating curve (ROC) two-class multiclass dataset","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_roc_curve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute a receiver-operating curve (ROC) for a two-class or multiclass dataset — tof_make_roc_curve","text":"","code":"tof_make_roc_curve(input_data, truth_col, prob_cols)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_roc_curve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute a receiver-operating curve (ROC) for a two-class or multiclass dataset — tof_make_roc_curve","text":"input_data tof_tbl, tbl_df, data.frame row observation. truth_col unquoted column name indicating column `input_data` contains true class labels observation. Must factor. prob_cols Unquoted column names indicating columns `input_data` contain probability estimates class `truth_col`. columns must specified order factor levels `truth_col`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_roc_curve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute a receiver-operating curve (ROC) for a two-class or multiclass dataset — tof_make_roc_curve","text":"tibble can used plot ROC classification task. candidate probability threshold, following reported: specificity, sensitivity, true-positive rate (tpr), false-positive rate (fpr).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_roc_curve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute a receiver-operating curve (ROC) for a two-class or multiclass dataset — tof_make_roc_curve","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             )     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a logistic regression classifier log_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = class,         model_type = \"two-class\"     )  # make predictions predictions <-     tof_predict(         log_model,         new_data = feature_tibble,         prediction_type = \"response\"     ) prediction_tibble <-     dplyr::tibble(         truth = feature_tibble$class,         prediction = predictions$.pred     )  # make ROC curve tof_make_roc_curve(     input_data = prediction_tibble,     truth_col = truth,     prob_cols = prediction )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster.html","id":null,"dir":"Reference","previous_headings":"","what":"Metacluster clustered CyTOF data. — tof_metacluster","title":"Metacluster clustered CyTOF data. — tof_metacluster","text":"function wrapper around tidytof's tof_metacluster_* function family. performs metaclustering CyTOF data using user-specified method (5 choices) method's corresponding input parameters.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metacluster clustered CyTOF data. — tof_metacluster","text":"","code":"tof_metacluster(   tof_tibble,   cluster_col,   metacluster_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   ...,   augment = TRUE,   method = c(\"consensus\", \"hierarchical\", \"kmeans\", \"phenograph\", \"flowsom\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metacluster clustered CyTOF data. — tof_metacluster","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. metacluster_cols Unquoted column names indicating columns `tof_tibble` use computing metaclusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster metaclustering. function used compute summary statistic input cluster `cluster_col` across columns specified `metacluster_cols`, resulting vector (one cluster) used input metaclustering. Defaults median. ... Additional arguments pass `tof_metacluster_*` function family member corresponding chosen `method`. augment boolean value indicating output column-bind metacluster ids cell new column `tof_tibble` (TRUE; default) single-column tibble including metacluster ids returned (FALSE). method string indicating clustering method used. Valid values include \"consensus\", \"hierarchical\", \"kmeans\", \"phenograph\", \"flowsom\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metacluster clustered CyTOF data. — tof_metacluster","text":"`tof_tbl` `tibble` augment = FALSE, single column encoding metacluster ids cell `tof_tibble`. augment = TRUE, ncol(tof_tibble) + 1 columns: (unaltered) columns `tof_tibble` plus additional column encoding metacluster ids.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metacluster clustered CyTOF data. — tof_metacluster","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  tof_metacluster(     tof_tibble = sim_data,     cluster_col = cluster_id,     clustering_algorithm = \"consensus\",     method = \"flowsom\" ) #> # A tibble: 1,000 × 6 #>       cd45    cd38    cd34    cd19 cluster_id .flowsom_metacluster #>      <dbl>   <dbl>   <dbl>   <dbl> <chr>      <chr>                #>  1 -0.501   0.0470 -0.513   0.190  s          3                    #>  2  0.0603  0.0847 -0.918  -1.72   k          5                    #>  3 -0.614  -0.789   1.11   -1.49   q          1                    #>  4 -0.911  -0.821   0.832   1.71   l          2                    #>  5  0.401   1.02   -0.0127  0.694  w          3                    #>  6  1.65    2.59    1.01    0.0531 m          2                    #>  7 -1.53    1.67    0.0150  0.574  b          2                    #>  8 -0.230  -0.805   0.865   0.409  c          3                    #>  9 -1.51    1.02   -2.16   -1.60   m          2                    #> 10 -0.555  -0.688   1.26   -0.161  e          2                    #> # ℹ 990 more rows  tof_metacluster(     tof_tibble = sim_data,     cluster_col = cluster_id,     method = \"phenograph\" ) #> # A tibble: 1,000 × 6 #>       cd45    cd38    cd34    cd19 cluster_id .phenograph_metacluster #>      <dbl>   <dbl>   <dbl>   <dbl> <chr>      <chr>                   #>  1 -0.501   0.0470 -0.513   0.190  s          2                       #>  2  0.0603  0.0847 -0.918  -1.72   k          2                       #>  3 -0.614  -0.789   1.11   -1.49   q          3                       #>  4 -0.911  -0.821   0.832   1.71   l          4                       #>  5  0.401   1.02   -0.0127  0.694  w          1                       #>  6  1.65    2.59    1.01    0.0531 m          4                       #>  7 -1.53    1.67    0.0150  0.574  b          4                       #>  8 -0.230  -0.805   0.865   0.409  c          1                       #>  9 -1.51    1.02   -2.16   -1.60   m          4                       #> 10 -0.555  -0.688   1.26   -0.161  e          4                       #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_consensus.html","id":null,"dir":"Reference","previous_headings":"","what":"Metacluster clustered CyTOF data using consensus clustering — tof_metacluster_consensus","title":"Metacluster clustered CyTOF data using consensus clustering — tof_metacluster_consensus","text":"function performs consensus metaclustering `tof_tbl` containing CyTOF data using user-specified selection input variables/CyTOF measurements number desired metaclusters. See ConsensusClusterPlus additional details.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_consensus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metacluster clustered CyTOF data using consensus clustering — tof_metacluster_consensus","text":"","code":"tof_metacluster_consensus(   tof_tibble,   cluster_col,   metacluster_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   num_metaclusters = 10L,   proportion_clusters = 0.9,   proportion_features = 1,   num_reps = 20L,   clustering_algorithm = c(\"hierarchical\", \"pam\", \"kmeans\"),   distance_function = c(\"euclidean\", \"minkowski\", \"pearson\", \"spearman\", \"maximum\",     \"binary\", \"canberra\"),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_consensus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metacluster clustered CyTOF data using consensus clustering — tof_metacluster_consensus","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. metacluster_cols Unquoted column names indicating columns `tof_tibble` use computing metaclusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster metaclustering. function used compute summary statistic input cluster `cluster_col` across columns specified `metacluster_cols`, resulting vector (one cluster) used input metaclustering. Defaults median. num_metaclusters integer indicating number clusters returned. Defaults 10. proportion_clusters numeric value 0 1 indicating proportion clusters subsample (total number clusters `cluster_col`) iteration consensus clustering. Defaults 0.9 proportion_features numeric value 0 1 indicating proportion features (.e. proportion columns specified `metacluster_cols`) subsample iteration consensus clustering. Defaults 1 (features included). num_reps integer indicating many subsampled replicates run consensus clustering. Defaults 20. clustering_algorithm string indicating clustering algorithm ConsensusClusterPlus use metacluster subsampled clusters resampling. Options \"hierarchical\" (default), \"pam\" (partitioning around medoids), \"kmeans\". distance_function string indicating distance function used compute distances clusters consensus clustering. Options \"euclidean\" (default), \"manhattan\", \"minkowski\", \"pearson\", \"spearman\", \"maximum\", \"binary\", \"canberra\". See ConsensusClusterPlus. ... Optional additional arguments pass ConsensusClusterPlus.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_consensus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metacluster clustered CyTOF data using consensus clustering — tof_metacluster_consensus","text":"tibble single column (`.consensus_metacluster`) number rows input `tof_tibble`. entry column indicates metacluster label assigned row `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_consensus.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metacluster clustered CyTOF data using consensus clustering — tof_metacluster_consensus","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  tof_metacluster_consensus(tof_tibble = sim_data, cluster_col = cluster_id) #> # A tibble: 1,000 × 1 #>    .consensus_metacluster #>    <chr>                  #>  1 9                      #>  2 10                     #>  3 9                      #>  4 3                      #>  5 6                      #>  6 1                      #>  7 3                      #>  8 2                      #>  9 1                      #> 10 3                      #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_flowsom.html","id":null,"dir":"Reference","previous_headings":"","what":"Metacluster clustered CyTOF data using FlowSOM's built-in metaclustering algorithm — tof_metacluster_flowsom","title":"Metacluster clustered CyTOF data using FlowSOM's built-in metaclustering algorithm — tof_metacluster_flowsom","text":"function performs metaclustering `tof_tbl` containing CyTOF data using user-specified selection input variables/CyTOF measurements number desired metaclusters. takes advantage FlowSOM package's built-functionality automatically detecting number metaclusters can use several strategies adapted FlowSOM team: consensus metaclustering, hierarchical metaclustering, k-means metaclustering, metaclustering using FlowSOM algorithm . See MetaClustering additional details.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_flowsom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metacluster clustered CyTOF data using FlowSOM's built-in metaclustering algorithm — tof_metacluster_flowsom","text":"","code":"tof_metacluster_flowsom(   tof_tibble,   cluster_col,   metacluster_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   num_metaclusters = 10L,   clustering_algorithm = c(\"consensus\", \"hierarchical\", \"kmeans\", \"som\"),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_flowsom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metacluster clustered CyTOF data using FlowSOM's built-in metaclustering algorithm — tof_metacluster_flowsom","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. metacluster_cols Unquoted column names indicating columns `tof_tibble` use computing metaclusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster metaclustering. function used compute summary statistic input cluster `cluster_col` across columns specified `metacluster_cols`, resulting vector (one cluster) used input metaclustering. Defaults median. num_metaclusters integer indicating maximum number clusters returned. Defaults 10. Note function, output may provide small number metaclusters requested. MetaClustering uses \"Elbow method\" automatically detect optimal number metaclusters. clustering_algorithm string indicating clustering algorithm MetaClustering use perform metaclustering. Options \"consensus\" (default), \"hierarchical\", \"kmeans\", \"som\" (.e. self-organizing map; FlowSOM algorithm ). ... Optional additional arguments pass MetaClustering.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_flowsom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metacluster clustered CyTOF data using FlowSOM's built-in metaclustering algorithm — tof_metacluster_flowsom","text":"tibble single column (`.flowsom_metacluster`) number rows input `tof_tibble`. entry column indicates metacluster label assigned row `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_flowsom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metacluster clustered CyTOF data using FlowSOM's built-in metaclustering algorithm — tof_metacluster_flowsom","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  tof_metacluster_flowsom(     tof_tibble = sim_data,     cluster_col = cluster_id,     clustering_algorithm = \"consensus\" ) #> # A tibble: 1,000 × 1 #>    .flowsom_metacluster #>    <chr>                #>  1 2                    #>  2 4                    #>  3 4                    #>  4 4                    #>  5 2                    #>  6 4                    #>  7 2                    #>  8 2                    #>  9 6                    #> 10 2                    #> # ℹ 990 more rows  tof_metacluster_flowsom(     tof_tibble = sim_data,     cluster_col = cluster_id,     clustering_algorithm = \"som\" ) #> # A tibble: 1,000 × 1 #>    .flowsom_metacluster #>    <chr>                #>  1 1                    #>  2 3                    #>  3 3                    #>  4 3                    #>  5 1                    #>  6 4                    #>  7 1                    #>  8 1                    #>  9 1                    #> 10 1                    #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_hierarchical.html","id":null,"dir":"Reference","previous_headings":"","what":"Metacluster clustered CyTOF data using hierarchical agglomerative clustering — tof_metacluster_hierarchical","title":"Metacluster clustered CyTOF data using hierarchical agglomerative clustering — tof_metacluster_hierarchical","text":"function performs hierarchical metaclustering `tof_tbl` containing CyTOF data using user-specified selection input variables/CyTOF measurements number desired metaclusters. See hclust.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_hierarchical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metacluster clustered CyTOF data using hierarchical agglomerative clustering — tof_metacluster_hierarchical","text":"","code":"tof_metacluster_hierarchical(   tof_tibble,   cluster_col,   metacluster_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   num_metaclusters = 10L,   distance_function = c(\"euclidean\", \"manhattan\", \"minkowski\", \"maximum\", \"canberra\",     \"binary\"),   agglomeration_method = c(\"complete\", \"single\", \"average\", \"median\", \"centroid\",     \"ward.D\", \"ward.D2\", \"mcquitty\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_hierarchical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metacluster clustered CyTOF data using hierarchical agglomerative clustering — tof_metacluster_hierarchical","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. metacluster_cols Unquoted column names indicating columns `tof_tibble` use computing metaclusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster metaclustering. function used compute summary statistic input cluster `cluster_col` across columns specified `metacluster_cols`, resulting vector (one cluster) used input metaclustering. Defaults median. num_metaclusters integer indicating number clusters returned. Defaults 10. distance_function string indicating distance function used compute distances clusters hierarchical metaclustering. Options \"euclidean\" (default), \"manhattan\", \"minkowski\", \"maximum\", \"canberra\", \"binary\". See dist additional details. agglomeration_method string indicating agglomeration algorithm used hierarchical cluster combination. Options \"complete\" (default), \"single\", \"average\", \"median\", \"centroid\", \"ward.D\", \"ward.D2\", \"mcquitty\". See hclust details.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_hierarchical.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metacluster clustered CyTOF data using hierarchical agglomerative clustering — tof_metacluster_hierarchical","text":"tibble single column (`.hierarchical_metacluster`) number rows input `tof_tibble`. entry column indicates metacluster label assigned row `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_hierarchical.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metacluster clustered CyTOF data using hierarchical agglomerative clustering — tof_metacluster_hierarchical","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  tof_metacluster_hierarchical(tof_tibble = sim_data, cluster_col = cluster_id) #> # A tibble: 1,000 × 1 #>    .hierarchical_metacluster #>    <chr>                     #>  1 8                         #>  2 3                         #>  3 1                         #>  4 2                         #>  5 6                         #>  6 2                         #>  7 2                         #>  8 7                         #>  9 2                         #> 10 2                         #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_kmeans.html","id":null,"dir":"Reference","previous_headings":"","what":"Metacluster clustered CyTOF data using k-means clustering — tof_metacluster_kmeans","title":"Metacluster clustered CyTOF data using k-means clustering — tof_metacluster_kmeans","text":"function performs k-means metaclustering `tof_tbl` containing CyTOF data using user-specified selection input variables/CyTOF measurements number desired metaclusters. See hclust.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_kmeans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metacluster clustered CyTOF data using k-means clustering — tof_metacluster_kmeans","text":"","code":"tof_metacluster_kmeans(   tof_tibble,   cluster_col,   metacluster_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   num_metaclusters = 10L,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_kmeans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metacluster clustered CyTOF data using k-means clustering — tof_metacluster_kmeans","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. metacluster_cols Unquoted column names indicating columns `tof_tibble` use computing metaclusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster metaclustering. function used compute summary statistic input cluster `cluster_col` across columns specified `metacluster_cols`, resulting vector (one cluster) used input metaclustering. Defaults median. num_metaclusters integer indicating number clusters returned. Defaults 10. ... Optional additional method specifications pass tof_cluster_kmeans.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_kmeans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metacluster clustered CyTOF data using k-means clustering — tof_metacluster_kmeans","text":"tibble single column (`.kmeans_metacluster`) number rows input `tof_tibble`. entry column indicates metacluster label assigned row `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_kmeans.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metacluster clustered CyTOF data using k-means clustering — tof_metacluster_kmeans","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  tof_metacluster_kmeans(tof_tibble = sim_data, cluster_col = cluster_id) #> # A tibble: 1,000 × 1 #>    .kmeans_metacluster #>    <chr>               #>  1 9                   #>  2 3                   #>  3 1                   #>  4 4                   #>  5 4                   #>  6 6                   #>  7 9                   #>  8 5                   #>  9 7                   #> 10 6                   #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_phenograph.html","id":null,"dir":"Reference","previous_headings":"","what":"Metacluster clustered CyTOF data using PhenoGraph clustering — tof_metacluster_phenograph","title":"Metacluster clustered CyTOF data using PhenoGraph clustering — tof_metacluster_phenograph","text":"function performs PhenoGraph metaclustering `tof_tbl` containing CyTOF data using user-specified selection input variables/CyTOF measurements. number metaclusters automatically detected PhenoGraph algorithm. See tof_cluster_phenograph.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_phenograph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metacluster clustered CyTOF data using PhenoGraph clustering — tof_metacluster_phenograph","text":"","code":"tof_metacluster_phenograph(   tof_tibble,   cluster_col,   metacluster_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   num_neighbors = 5L,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_phenograph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metacluster clustered CyTOF data using PhenoGraph clustering — tof_metacluster_phenograph","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. metacluster_cols Unquoted column names indicating columns `tof_tibble` use computing metaclusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster metaclustering. function used compute summary statistic input cluster `cluster_col` across columns specified `metacluster_cols`, resulting vector (one cluster) used input metaclustering. Defaults median. num_neighbors integer indicating number neighbors use constructing PhenoGraph's k-nearest-neighbor graph. Smaller values emphasize local graph structure; larger values emphasize global graph structure (add time computation). Defaults 5. ... Optional additional method specifications pass tof_cluster_phenograph.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_phenograph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metacluster clustered CyTOF data using PhenoGraph clustering — tof_metacluster_phenograph","text":"tibble single column (`.phenograph_metacluster`) number rows input `tof_tibble`. entry column indicates metacluster label assigned row `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_phenograph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metacluster clustered CyTOF data using PhenoGraph clustering — tof_metacluster_phenograph","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  tof_metacluster_phenograph(tof_tibble = sim_data, cluster_col = cluster_id) #> # A tibble: 1,000 × 1 #>    .phenograph_metacluster #>    <chr>                   #>  1 1                       #>  2 3                       #>  3 4                       #>  4 3                       #>  5 2                       #>  6 1                       #>  7 1                       #>  8 2                       #>  9 1                       #> 10 2                       #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot marker expression density plots — tof_plot_cells_density","title":"Plot marker expression density plots — tof_plot_cells_density","text":"function plots marker expression density plots user-specified column tof_tbl. Optionally, cells can grouped plot multiple vertically-arranged density plots","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot marker expression density plots — tof_plot_cells_density","text":"","code":"tof_plot_cells_density(   tof_tibble,   marker_col,   group_col,   num_points = 512,   theme = ggplot2::theme_bw(),   use_ggridges = FALSE,   scale = 1,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot marker expression density plots — tof_plot_cells_density","text":"tof_tibble `tof_tbl` `tibble`. marker_col unquoted column name representing column `tof_tibble` (.e. CyTOF protein measurement) included feature extraction calculation. group_col Unquoted column names representing column `tof_tibble` used break rows `tof_tibble` subgroups plotted separate histograms. Defaults plotting without subgroups. num_points number points along full range `marker_col` density calculated theme ggplot2 theme plot. Defaults theme_bw use_ggridges boolean value indicting geom_ridgeline used plot overlain histograms. Defaults FALSE. TRUE, ggridges package must installed. scale Use set `scale` argument geom_ridgeline, controls far apart (vertically) density plots arranged along y-axis. Defaults 1. ... Additional optional arguments send geom_ridgeline.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot marker expression density plots — tof_plot_cells_density","text":"ggplot object","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot marker expression density plots — tof_plot_cells_density","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(c(\"a\", \"b\"), size = 1000, replace = TRUE)     )  density_plot <-     tof_plot_cells_density(         tof_tibble = sim_data,         marker_col = cd45,         group_col = cluster_id     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_embedding.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot scatterplots of single-cell data using low-dimensional feature embeddings — tof_plot_cells_embedding","title":"Plot scatterplots of single-cell data using low-dimensional feature embeddings — tof_plot_cells_embedding","text":"function makes scatterplots using single-cell data embedded low-dimensional space (generated tof_reduce_dimensions, point colored using user-specified variable.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_embedding.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot scatterplots of single-cell data using low-dimensional feature embeddings — tof_plot_cells_embedding","text":"","code":"tof_plot_cells_embedding(   tof_tibble,   embedding_cols,   color_col,   facet_cols,   compute_embedding_cols = where(tof_is_numeric),   embedding_method = c(\"pca\", \"tsne\", \"umap\"),   embedding_args = list(),   theme = ggplot2::theme_bw(),   ...,   method = c(\"ggplot2\", \"scattermore\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_embedding.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot scatterplots of single-cell data using low-dimensional feature embeddings — tof_plot_cells_embedding","text":"tof_tibble `tof_tbl` `tibble`. embedding_cols Unquoted column names indicating columns `tof_tibble` used x y axes scatterplot. Supports tidyselect helpers. Must select exactly 2 columns. provided, feature embedding can computed scratch using method provided using `embedding_method` argument tof_reduce_dimensions arguments passed `embedding_args`. color_col unquoted column name specifying column `tof_tibble` used color point scatterplot. facet_cols unquoted column name specifying column `tof_tibble` used break scatterplot facets using facet_wrap. compute_embedding_cols Unquoted column names indicating columns 'tof_tibble' use computing embeddings method specified `embedding_method`. Defaults numeric columns 'tof_tibble'. Supports tidyselect helpers. embedding_method string indicating method used feature embedding (`embedding_cols` provided). Options (passed tof_reduce_dimensions) \"pca\" (default), \"tsne\", \"umap\". embedding_args Optional additional arguments pass tof_reduce_dimensions. example, `method = \"tsne\"`, might include `num_comp`, `perplexity`, `theta`. theme ggplot2 theme apply scatterplot. Defaults theme_bw. ... Optional additional arguments pass tof_plot_cells_scatter. method string indicating plotting engine used. Valid values include \"ggplot2\" (default) \"scattermore\" (recommended 100K cells plotted). Note method = \"scattermore\" requires scattermore package installed.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_embedding.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot scatterplots of single-cell data using low-dimensional feature embeddings — tof_plot_cells_embedding","text":"ggplot object.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_embedding.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot scatterplots of single-cell data using low-dimensional feature embeddings — tof_plot_cells_embedding","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = c(rnorm(n = 500), rnorm(n = 500, mean = 2)),         cd34 = c(rnorm(n = 500), rnorm(n = 500, mean = 4)),         cd19 = rnorm(n = 1000),         cluster_id = c(rep(\"a\", 500), rep(\"b\", 500))     )  # embed with pca pca_plot <-     tof_plot_cells_embedding(         tof_tibble = sim_data,         color_col = cd38,         embedding_method = \"pca\",         compute_embedding_cols = starts_with(\"cd\")     )  # embed with tsne tsne_plot <-     tof_plot_cells_embedding(         tof_tibble = sim_data,         color_col = cluster_id,         embedding_method = \"tsne\",         compute_embedding_cols = starts_with(\"cd\")     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_layout.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot force-directed layouts of single-cell data — tof_plot_cells_layout","title":"Plot force-directed layouts of single-cell data — tof_plot_cells_layout","text":"function makes force-directed layouts using single-cell data embedded 2-dimensional space representing k-nearest-neighbor graph constructed using cell--cell similarities. node force-directed layout represents single cell colored using user-specified variable.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_layout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot force-directed layouts of single-cell data — tof_plot_cells_layout","text":"","code":"tof_plot_cells_layout(   tof_tibble,   knn_cols = where(tof_is_numeric),   color_col,   facet_cols,   num_neighbors = 5,   graph_type = c(\"weighted\", \"unweighted\"),   graph_layout = \"fr\",   distance_function = c(\"euclidean\", \"cosine\"),   edge_alpha = 0.25,   node_size = 2,   theme = ggplot2::theme_void(),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_layout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot force-directed layouts of single-cell data — tof_plot_cells_layout","text":"tof_tibble `tof_tbl` `tibble`. knn_cols Unquoted column names indicating columns `tof_tibble` used compute cell--cell distances used construct k-nearest-neighbor graph. Supports tidyselect helpers. Defaults numeric columns. color_col Unquoted column name indicating column `tof_tibble` used color nodes force-directed layout. facet_cols Unquoted column names indicating columns `tof_tibble` used separate nodes different force-directed layouts. num_neighbors integer specifying many neighbors used construct k-nearest neighbor graph. graph_type string specifying k-nearest neighbor graph \"weighted\" (default) \"unweighted\". graph_layout string specifying algorithm used compute force-directed layout. Passed ggraph. Defaults \"fr\", Fruchterman-Reingold algorithm. examples include \"nicely\", \"gem\", \"kk\", many others. See layout_tbl_graph_igraph examples. distance_function string indicating distance function use computing cell--cell distances. Valid options include \"euclidean\" (default) \"cosine\". edge_alpha numeric value 0 1 specifying transparency edges drawn force-directed layout. Defaults 0.25. node_size numeric value specifying size nodes force-directed layout. Defaults 2. theme ggplot2 theme apply force-directed layout. Defaults theme_void ... hnsw_knn","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_layout.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot force-directed layouts of single-cell data — tof_plot_cells_layout","text":"ggraph/ggplot object.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_layout.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot force-directed layouts of single-cell data — tof_plot_cells_layout","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = c(rnorm(n = 500), rnorm(n = 500, mean = 2)),         cd34 = c(rnorm(n = 500), rnorm(n = 500, mean = 4)),         cd19 = rnorm(n = 1000),         cluster_id = c(rep(\"a\", 500), rep(\"b\", 500))     )  # make a layout colored by a marker layout_cd38 <-     tof_plot_cells_layout(         tof_tibble = sim_data,         color_col = cd38     )  # make a layout colored by cluster id layout_cluster <-     tof_plot_cells_layout(         tof_tibble = sim_data,         color_col = cluster_id,     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_scatter.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot scatterplots of single-cell data. — tof_plot_cells_scatter","title":"Plot scatterplots of single-cell data. — tof_plot_cells_scatter","text":"function makes scatterplots single-cell data using user-specified x- y-axes. Additionally, point scatterplot can colored using user-specified variable.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_scatter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot scatterplots of single-cell data. — tof_plot_cells_scatter","text":"","code":"tof_plot_cells_scatter(   tof_tibble,   x_col,   y_col,   color_col,   facet_cols,   theme = ggplot2::theme_bw(),   ...,   method = c(\"ggplot2\", \"scattermore\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_scatter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot scatterplots of single-cell data. — tof_plot_cells_scatter","text":"tof_tibble `tof_tbl` `tibble`. x_col unquoted column name specifying column `tof_tibble` used x-axis. y_col unquoted column name specifying column `tof_tibble` used y-axis. color_col unquoted column name specifying column `tof_tibble` used color point scatterplot. facet_cols unquoted column name specifying column `tof_tibble` used break scatterplot facets using facet_wrap. theme ggplot2 theme apply scatterplot. Defaults theme_bw. ... Optional additional arguments pass geom_point method = \"ggplot2\" geom_scattermore method = \"scattermore\". method string indicating plotting engine used. Valid values include \"ggplot2\" (default) \"scattermore\" (recommended 100K cells plotted). Note method = \"scattermore\" requires scattermore package installed.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_scatter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot scatterplots of single-cell data. — tof_plot_cells_scatter","text":"ggplot object.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_scatter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot scatterplots of single-cell data. — tof_plot_cells_scatter","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = c(rnorm(n = 500), rnorm(n = 500, mean = 2)),         cd34 = c(rnorm(n = 500), rnorm(n = 500, mean = 4)),         cd19 = rnorm(n = 1000),         cluster_id = c(rep(\"a\", 500), rep(\"b\", 500))     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a heatmap summarizing cluster marker expression patterns in CyTOF data — tof_plot_clusters_heatmap","title":"Make a heatmap summarizing cluster marker expression patterns in CyTOF data — tof_plot_clusters_heatmap","text":"function makes heatmap cluster--cluster marker expression patterns single-cell data. Markers plotted along horizontal (x-) axis heatmap cluster IDs plotted along vertical (y-) axis heatmap.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a heatmap summarizing cluster marker expression patterns in CyTOF data — tof_plot_clusters_heatmap","text":"","code":"tof_plot_clusters_heatmap(   tof_tibble,   cluster_col,   marker_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   scale_markerwise = FALSE,   scale_clusterwise = FALSE,   cluster_markers = TRUE,   cluster_clusters = TRUE,   line_width = 0.25,   theme = ggplot2::theme_minimal() )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a heatmap summarizing cluster marker expression patterns in CyTOF data — tof_plot_clusters_heatmap","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names indicating column `tof_tibble` interpreted markers plotted along x-axis heatmap. Supports tidyselect helpers. central_tendency_function function use computing measure central tendency aggregated cluster cluster_col. Defaults median. scale_markerwise boolean value indicating heatmap rescale columns heatmap maximum value marker 1 minimum value 0. Defaults FALSE. scale_clusterwise boolean value indicating heatmap rescale rows heatmap maximum value cluster 1 minimum value 0. Defaults FALSE. cluster_markers boolean value indicating heatmap order columns (.e. markers) using hierarchical clustering. Defaults TRUE. cluster_clusters boolean value indicating heatmap order rows (.e. clusters) using hierarchical clustering. Defaults TRUE. line_width numeric value indicating thick lines separating tiles heatmap . Defaults 0.25. theme ggplot2 theme apply heatmap. Defaults theme_minimal","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a heatmap summarizing cluster marker expression patterns in CyTOF data — tof_plot_clusters_heatmap","text":"ggplot object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_heatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a heatmap summarizing cluster marker expression patterns in CyTOF data — tof_plot_clusters_heatmap","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  heatmap <-     tof_plot_clusters_heatmap(         tof_tibble = sim_data,         cluster_col = cluster_id     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_mst.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize clusters in CyTOF data using a minimum spanning tree (MST). — tof_plot_clusters_mst","title":"Visualize clusters in CyTOF data using a minimum spanning tree (MST). — tof_plot_clusters_mst","text":"function plots minimum-spanning tree using clustered single-cell data order summarize cluster-level characteristics. node MST represents single cluster colored using user-specified variable (either continuous discrete).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_mst.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize clusters in CyTOF data using a minimum spanning tree (MST). — tof_plot_clusters_mst","text":"","code":"tof_plot_clusters_mst(   tof_tibble,   cluster_col,   knn_cols = where(tof_is_numeric),   color_col,   num_neighbors = 5L,   graph_type = c(\"unweighted\", \"weighted\"),   graph_layout = \"nicely\",   central_tendency_function = stats::median,   distance_function = c(\"euclidean\", \"cosine\"),   edge_alpha = 0.4,   node_size = \"cluster_size\",   theme = ggplot2::theme_void(),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_mst.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize clusters in CyTOF data using a minimum spanning tree (MST). — tof_plot_clusters_mst","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. knn_cols Unquoted column names indicating columns `tof_tibble` used compute cluster--cluster distances used construct k-nearest-neighbor graph. Supports tidyselect helpers. Defaults numeric columns. color_col Unquoted column name indicating column `tof_tibble` used color nodes MST. num_neighbors integer specifying many neighbors used construct k-nearest neighbor graph. graph_type string specifying k-nearest neighbor graph \"weighted\" (default) \"unweighted\". graph_layout argument specifies layout MST one two ways. Option 1: Provide string specifying algorithm used compute force-directed layout. Passed ggraph. Defaults \"nicely\", tries automatically select visually-appealing layout. examples include \"fr\", \"gem\", \"kk\", many others. See layout_tbl_graph_igraph examples. Option 2: Provide ggraph object previously generated function. layout used plot ggraph object used template new plot. Using option, number clusters (labels) must identical template. option useful want make multiple plots tof_tibble colored different protein markers, example. central_tendency_function function use computing measure central tendency aggregated cluster cluster_col. Defaults median. distance_function string indicating distance function use computing cluster--clusters distances constructing MST. Valid options include \"euclidean\" (default) \"cosine\". edge_alpha numeric value 0 1 specifying transparency edges drawn force-directed layout. Defaults 0.25. node_size Either numeric value specifying size nodes MST string \"cluster_size\", case size node representing cluster scaled according number cells cluster (default). theme ggplot2 theme apply force-directed layout. Defaults theme_void ... Optional additional arguments hnsw_knn","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_mst.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize clusters in CyTOF data using a minimum spanning tree (MST). — tof_plot_clusters_mst","text":"ggraph/ggplot object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_mst.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize clusters in CyTOF data using a minimum spanning tree (MST). — tof_plot_clusters_mst","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  # make a layout colored by a marker layout_cd38 <-     tof_plot_clusters_mst(         tof_tibble = sim_data,         cluster_col = cluster_id,         color_col = cd38     )  # use the same layout as the plot above to color the same # tree using a different marker layout_cd45 <-     tof_plot_clusters_mst(         tof_tibble = sim_data,         cluster_col = cluster_id,         color_col = cd45,         graph_layout = layout_cd38     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_volcano.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a volcano plot from differential expression analysis results — tof_plot_clusters_volcano","title":"Create a volcano plot from differential expression analysis results — tof_plot_clusters_volcano","text":"function makes volcano plot using results differential expression analysis (DEA) produced one `tof_dea_*` verbs. point volcano plot represents single cluster-marker pair, colored significance level direction marker expression difference.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_volcano.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a volcano plot from differential expression analysis results — tof_plot_clusters_volcano","text":"","code":"tof_plot_clusters_volcano(   dea_result,   num_top_pairs = 10L,   alpha = 0.05,   point_size = 2,   label_size = 3,   nudge_x = 0,   nudge_y = 0.25,   increase_color = \"#207394\",   decrease_color = \"#cd5241\",   insignificant_color = \"#cdcdcd\",   use_ggrepel = FALSE,   theme = ggplot2::theme_bw() )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_volcano.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a volcano plot from differential expression analysis results — tof_plot_clusters_volcano","text":"dea_result tibble containing differential expression analysis (DEA) results produced one members `tof_dea_*` function family. num_top_pairs integer representing number significant cluster-marker pairs labeled volcano plot. alpha numeric value 0 1 representing significance level p-value considered statistically significant. Defaults 0.05. point_size numeric value specifying size points volcano plot. label_size numeric value specifying size text labeling cluster-marker pairs. nudge_x numeric value specifying far cluster-marker pair labels adjusted left (`nudge_x` negative) right (`nudge_x` positive) avoid overlap plotted points. Passed  geom_text, ignored `use_ggrepel` = TRUE. Defaults 0. nudge_y numeric value specifying far cluster-marker pair labels adjusted downwards (`nudge_y` negative) upwards (`nudge_y` positive) avoid overlap plotted points. Passed  geom_text, ignored `use_ggrepel` = TRUE. Defaults 0.25. increase_color hex code specifying fill color used points corresponding cluster-marker pairs significant increases detected. decrease_color hex code specifying fill color used points corresponding cluster-marker pairs significant decreases detected. insignificant_color hex code specifying fill color used points corresponding cluster-marker pairs significant differences detected. use_ggrepel boolean value indicting geom_text_repel used plot labels cluster-marker pairs. Defaults FALSE. TRUE, ggrepel package must installed. theme ggplot2 theme apply volcano plot. Defaults theme_bw","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_volcano.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a volcano plot from differential expression analysis results — tof_plot_clusters_volcano","text":"ggplot object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_volcano.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a volcano plot from differential expression analysis results — tof_plot_clusters_volcano","text":"","code":"# create a mock differential expression analysis result sim_dea_result <-     dplyr::tibble(         cluster_id = rep(letters, 2),         marker = rep(c(\"cd45\", \"cd34\"), times = length(letters)),         p_adj = runif(n = 2 * length(letters), min = 0, max = 0.5),         mean_fc = runif(n = 2 * length(letters), min = 0.01, max = 10),         significant = dplyr::if_else(p_adj < 0.05, \"*\", \"\")     )  attr(sim_dea_result, which = \"dea_method\") <- \"t_unpaired\"  # create the volcano plot volcano <- tof_plot_clusters_volcano(dea_result = sim_dea_result)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a heatmap summarizing group marker expression patterns in high-dimensional cytometry data — tof_plot_heatmap","title":"Make a heatmap summarizing group marker expression patterns in high-dimensional cytometry data — tof_plot_heatmap","text":"function makes heatmap group--group marker expression patterns single-cell data. Markers plotted along horizontal (x-) axis heatmap groups plotted along vertical (y-) axis heatmap.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a heatmap summarizing group marker expression patterns in high-dimensional cytometry data — tof_plot_heatmap","text":"","code":"tof_plot_heatmap(   tof_tibble,   y_col,   marker_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   scale_markerwise = FALSE,   scale_ywise = FALSE,   cluster_markers = TRUE,   cluster_groups = TRUE,   line_width = 0.25,   theme = ggplot2::theme_minimal() )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a heatmap summarizing group marker expression patterns in high-dimensional cytometry data — tof_plot_heatmap","text":"tof_tibble `tof_tbl` `tibble`. y_col unquoted column name indicating column `tof_tibble` stores ids group cell belongs. marker_cols Unquoted column names indicating column `tof_tibble` interpreted markers plotted along x-axis heatmap. Supports tidyselect helpers. central_tendency_function function use computing measure central tendency aggregated cluster cluster_col. Defaults median. scale_markerwise boolean value indicating heatmap rescale columns heatmap maximum value marker 1 minimum value 0. Defaults FALSE. scale_ywise boolean value indicating heatmap rescale rows heatmap maximum value group 1 minimum value 0. Defaults FALSE. cluster_markers boolean value indicating heatmap order columns (.e. markers) using hierarchical clustering. Defaults TRUE. cluster_groups boolean value indicating heatmap order rows (.e. groups) using hierarchical clustering. Defaults TRUE. line_width numeric value indicating thick lines separating tiles heatmap . Defaults 0.25. theme ggplot2 theme apply heatmap. Defaults theme_minimal","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a heatmap summarizing group marker expression patterns in high-dimensional cytometry data — tof_plot_heatmap","text":"ggplot object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the results of a glmnet model fit on sample-level data. — tof_plot_model","title":"Plot the results of a glmnet model fit on sample-level data. — tof_plot_model","text":"Plot results glmnet model fit sample-level data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the results of a glmnet model fit on sample-level data. — tof_plot_model","text":"","code":"tof_plot_model(tof_model, new_data, theme = ggplot2::theme_bw())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the results of a glmnet model fit on sample-level data. — tof_plot_model","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations plot made. new_data provided, plot made using training data used fit model. Alternatively, string \"tuning_data\" can provided, plot generated using predictions generated model tuning. theme ggplot2 theme apply plot Defaults theme_bw","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the results of a glmnet model fit on sample-level data. — tof_plot_model","text":"ggplot object. `tof_model` linear model, scatterplot predicted outcome vs. true outcome returned. `tof_model` two-class model, ROC curve returned. `tof_model` multiclass model, one-versus-ROC curve returned class. `tof_model` survival model, Kaplan-Meier curve returned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the results of a glmnet model fit on sample-level data. — tof_plot_model","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             )     )  new_tibble <-     dplyr::tibble(         sample = as.character(1:20),         cd45 = runif(n = 20),         pstat5 = runif(n = 20),         cd34 = runif(n = 20),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(20),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             )     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  # make the plot plot_1 <- tof_plot_model(tof_model = regression_model, new_data = new_tibble)  # train a logistic regression classifier logistic_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = class,         model_type = \"two-class\"     )  # make the plot  plot_2 <- tof_plot_model(tof_model = logistic_model, new_data = new_tibble)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_linear.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the results of a linear glmnet model fit on sample-level data. — tof_plot_model_linear","title":"Plot the results of a linear glmnet model fit on sample-level data. — tof_plot_model_linear","text":"Plot results linear glmnet model fit sample-level data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_linear.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the results of a linear glmnet model fit on sample-level data. — tof_plot_model_linear","text":"","code":"tof_plot_model_linear(tof_model, new_data, theme = ggplot2::theme_bw())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_linear.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the results of a linear glmnet model fit on sample-level data. — tof_plot_model_linear","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations plot made. new_data provided, plot made using training data used fit model. Alternatively, string \"tuning_data\" can provided, plot generated using predictions generated model tuning. theme ggplot2 theme apply plot Defaults theme_bw","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_linear.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the results of a linear glmnet model fit on sample-level data. — tof_plot_model_linear","text":"ggplot object. Specifically, scatterplot predicted outcome vs. true outcome returned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_logistic.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the results of a two-class glmnet model fit on sample-level data. — tof_plot_model_logistic","title":"Plot the results of a two-class glmnet model fit on sample-level data. — tof_plot_model_logistic","text":"Plot results two-class glmnet model fit sample-level data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_logistic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the results of a two-class glmnet model fit on sample-level data. — tof_plot_model_logistic","text":"","code":"tof_plot_model_logistic(tof_model, new_data, theme = ggplot2::theme_bw())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_logistic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the results of a two-class glmnet model fit on sample-level data. — tof_plot_model_logistic","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations plot made. new_data provided, plot made using training data used fit model. Alternatively, string \"tuning_data\" can provided, plot generated using predictions generated model tuning. theme ggplot2 theme apply plot. Defaults theme_bw","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_logistic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the results of a two-class glmnet model fit on sample-level data. — tof_plot_model_logistic","text":"ggplot object. Specifically, ROC curve..","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_multinomial.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the results of a multiclass glmnet model fit on sample-level data. — tof_plot_model_multinomial","title":"Plot the results of a multiclass glmnet model fit on sample-level data. — tof_plot_model_multinomial","text":"Plot results multiclass glmnet model fit sample-level data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_multinomial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the results of a multiclass glmnet model fit on sample-level data. — tof_plot_model_multinomial","text":"","code":"tof_plot_model_multinomial(tof_model, new_data, theme = ggplot2::theme_bw())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_multinomial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the results of a multiclass glmnet model fit on sample-level data. — tof_plot_model_multinomial","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations plot made. new_data provided, plot made using training data used fit model. Alternatively, string \"tuning_data\" can provided, plot generated using predictions generated model tuning. theme ggplot2 theme apply plot. Defaults theme_bw.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_multinomial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the results of a multiclass glmnet model fit on sample-level data. — tof_plot_model_multinomial","text":"ggplot object. Specifically, one-versus-ROC curve (one class).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_survival.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the results of a survival glmnet model fit on sample-level data. — tof_plot_model_survival","title":"Plot the results of a survival glmnet model fit on sample-level data. — tof_plot_model_survival","text":"Plot results survival glmnet model fit sample-level data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_survival.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the results of a survival glmnet model fit on sample-level data. — tof_plot_model_survival","text":"","code":"tof_plot_model_survival(   tof_model,   new_data,   censor_size = 2.5,   theme = ggplot2::theme_bw() )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_survival.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the results of a survival glmnet model fit on sample-level data. — tof_plot_model_survival","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations plot made. new_data provided, plot made using training data used fit model. Alternatively, string \"tuning_data\" can provided, plot generated using predictions generated model tuning. censor_size numeric value indicating large plot tick marks representing censored values Kaplan-Meier curve. theme ggplot2 theme apply plot. Defaults theme_bw","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_survival.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the results of a survival glmnet model fit on sample-level data. — tof_plot_model_survival","text":"ggplot object. Specifically, Kaplan-Meier curve.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_features","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_features","text":"function makes heatmap sample--sample marker expression patterns single-cell data. Markers plotted along horizontal (x-) axis heatmap sample IDs plotted along vertical (y-) axis heatmap.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_features","text":"","code":"tof_plot_sample_features(   feature_tibble,   sample_col,   feature_cols = where(tof_is_numeric),   scale_featurewise = FALSE,   scale_samplewise = FALSE,   line_width = 0.25,   theme = ggplot2::theme_minimal() )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_features","text":"feature_tibble tbl_df data.frame aggregated sample-level features, generated tof_extract_features. sample_col unquoted column name indicating column `tof_tibble` stores IDs sample. sample IDs present, numeric ID assigned row `feature_tibble` based row index. feature_cols Unquoted column names indicating column `feature_tibble` interpreted features plotted along x-axis heatmap. Supports tidyselect helpers. scale_featurewise boolean value indicating heatmap rescale columns heatmap maximum value marker 1 minimum value 0. Defaults FALSE. scale_samplewise boolean value indicating heatmap rescale rows heatmap maximum value sample 1 minimum value 0. Defaults FALSE. line_width numeric value indicating thick lines separating tiles heatmap . Defaults 0.25. theme ggplot2 theme apply heatmap. Defaults theme_minimal","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_features","text":"ggplot object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_features.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_features","text":"","code":"# simulate single-cell data sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         sample_id = sample(paste0(\"sample\", 1:5), size = 1000, replace = TRUE)     )  # extract cluster proportions in each simulated patient feature_data <-     tof_extract_proportion(         tof_tibble = sim_data,         cluster_col = cluster_id,         group_cols = sample_id     )  # plot the heatmap heatmap <- tof_plot_sample_features(feature_tibble = feature_data)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_heatmap","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_heatmap","text":"function makes heatmap sample--sample marker expression patterns single-cell data. Markers plotted along horizontal (x-) axis heatmap sample IDs plotted along vertical (y-) axis heatmap.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_heatmap","text":"","code":"tof_plot_sample_heatmap(   tof_tibble,   sample_col,   marker_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   scale_markerwise = FALSE,   scale_samplewise = FALSE,   line_width = 0.25,   theme = ggplot2::theme_minimal() )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_heatmap","text":"tof_tibble `tof_tbl` `tibble`. sample_col unquoted column name indicating column `tof_tibble` stores ids sample cell belongs. marker_cols Unquoted column names indicating column `tof_tibble` interpreted markers plotted along x-axis heatmap. Supports tidyselect helpers. central_tendency_function function use computing measure central tendency aggregated sample cluster_col. Defaults median. scale_markerwise boolean value indicating heatmap rescale columns heatmap maximum value marker 1 minimum value 0. Defaults FALSE. scale_samplewise boolean value indicating heatmap rescale rows heatmap maximum value sample 1 minimum value 0. Defaults FALSE. line_width numeric value indicating thick lines separating tiles heatmap . Defaults 0.25. theme ggplot2 theme apply heatmap. Defaults theme_minimal","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_heatmap","text":"ggplot object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_heatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_heatmap","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         sample_id = sample(paste0(\"sample\", 1:5), size = 1000, replace = TRUE)     )  heatmap <-     tof_plot_sample_heatmap(         tof_tibble = sim_data,         sample_col = sample_id     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_postprocess.html","id":null,"dir":"Reference","previous_headings":"","what":"Post-process transformed CyTOF data. — tof_postprocess","title":"Post-process transformed CyTOF data. — tof_postprocess","text":"function transforms `tof_tibble` transformed ion counts mass cytometer back something looks like .fcs file Fluidigm software generates.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_postprocess.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Post-process transformed CyTOF data. — tof_postprocess","text":"","code":"tof_postprocess(   tof_tibble = NULL,   channel_cols = where(tof_is_numeric),   redo_noise = FALSE,   transform_fun = function(x) rev_asinh(x, shift_factor = 0, scale_factor = 0.2) )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_postprocess.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Post-process transformed CyTOF data. — tof_postprocess","text":"tof_tibble `tof_tibble` `tibble`. channel_cols vector non-quoted column names indicating columns `tof_tibble` contain protein measurements. Supports tidyselect helpers. nothing specified, default transform numeric columns. redo_noise boolean value indicating whether add  uniform noise CyTOF measurement aesthetic visualization purposes. See paper. Defaults FALSE transform_fun vectorized function apply column specified `channel_cols` post-processing. Defaults rev_asinh transformation (cofactor 5).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_postprocess.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Post-process transformed CyTOF data. — tof_postprocess","text":"`tof_tbl` identical dimensions input `tof_tibble`, columns specified channel_cols transformed using `transform_fun` (noise added removed depending `redo_noise`).","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_postprocess.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Post-process transformed CyTOF data. — tof_postprocess","text":"","code":"# read in an example .fcs file from tidytof's internal datasets input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]] tof_tibble <- tof_read_data(input_file)  # preprocess all numeric columns with default behavior # arcsinh transformation with a cofactor of 5 preprocessed_tof_tibble <- tof_preprocess(tof_tibble)  # postprocess all numeric columns to reverse the preprocessing tof_postprocess(tof_tibble) #> # A tibble: 100 × 59 #>     Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>    <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1   Inf    22215276.   6.00e224          8.82      1411688.    Inf        #>  2   Inf   446205752. Inf               135.         859679.    Inf        #>  3   Inf    22215276. Inf              2634.            321.      8.51e277 #>  4   Inf    22215276.   2.24e254          3.47         1383.      8.29e254 #>  5   Inf   164149923. Inf               127.          38726.      3.70e280 #>  6   Inf   446205752.   1.14e211        163.            116.      3.29e272 #>  7   Inf    22215276.   2.62e219         79.1           175.      1.82e246 #>  8   Inf   164149923.   5.35e246       1876.         291228.      5.64e305 #>  9   Inf   446205752. Inf                55.3         24727.    Inf        #> 10   Inf    22215276.   2.38e236          5.05      2010273.    Inf        #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_predict.html","id":null,"dir":"Reference","previous_headings":"","what":"Use a trained elastic net model to predict fitted values from new data — tof_predict","title":"Use a trained elastic net model to predict fitted values from new data — tof_predict","text":"function uses trained `tof_model` make predictions new data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_predict.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use a trained elastic net model to predict fitted values from new data — tof_predict","text":"","code":"tof_predict(   tof_model,   new_data,   prediction_type = c(\"response\", \"class\", \"link\", \"survival curve\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_predict.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use a trained elastic net model to predict fitted values from new data — tof_predict","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations predictions made. new_data provided, predictions made training data used fit model. prediction_type string indicating type prediction provided model: \"response\" (default) \"linear\" models, predicted response observation. \"two-class\" \"multiclass\" models, fitted probabilities class observation. \"survival\" models, fitted relative-risk observation. \"class\" applies \"two-class\" \"multiclass\" models. , class label corresponding class maximum fitted probability. \"link\" linear predictions model (output link function model family.) \"survival curve\" applies \"survival\" models. Returns tibble indicating patient's probability survival (1 - probability(event)) timepoint dataset. Obtained using survfit function.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_predict.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use a trained elastic net model to predict fitted values from new data — tof_predict","text":"tibble single column (`.pred`) containing predictions , multiclass models `prediction_type` == \"response\", tibble one column class. row output corresponds row `new_data` ( , `new_data` provided, row `tof_model`'s training data). latter case, sure check `tof_model$training_data` confirm order observations, resampling procedure can change ordering relative original input data.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_predict.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Use a trained elastic net model to predict fitted values from new data — tof_predict","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100)     )  new_tibble <-     dplyr::tibble(         sample = as.character(1:20),         cd45 = runif(n = 20),         pstat5 = runif(n = 20),         cd34 = runif(n = 20),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(20)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  # apply the model to new data tof_predict(tof_model = regression_model, new_data = new_tibble) #> # A tibble: 20 × 1 #>    .pred #>    <dbl> #>  1  1.51 #>  2  2.33 #>  3  4.06 #>  4  2.08 #>  5  5.71 #>  6  4.84 #>  7  3.27 #>  8  3.05 #>  9  6.75 #> 10  6.26 #> 11  5.41 #> 12  3.72 #> 13  1.55 #> 14  4.66 #> 15  3.81 #> 16  5.20 #> 17  1.76 #> 18  3.30 #> 19  1.88 #> 20  2.05"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_prep_recipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Train a recipe or list of recipes for preprocessing sample-level cytometry data — tof_prep_recipe","title":"Train a recipe or list of recipes for preprocessing sample-level cytometry data — tof_prep_recipe","text":"Train recipe list recipes preprocessing sample-level cytometry data","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_prep_recipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Train a recipe or list of recipes for preprocessing sample-level cytometry data — tof_prep_recipe","text":"","code":"tof_prep_recipe(split_data, unprepped_recipe)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_prep_recipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Train a recipe or list of recipes for preprocessing sample-level cytometry data — tof_prep_recipe","text":"split_data `rsplit` `rset` object rsample package containing sample-level data use modeling. easiest way generate use tof_split_data. Alternatively, unsplit tbl_df, though recommended. unprepped_recipe recipe object (`split_data` `rsplit` object `tbl_df`) list recipes (`split_data` `rset` object).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_prep_recipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Train a recipe or list of recipes for preprocessing sample-level cytometry data — tof_prep_recipe","text":"split_data \"rsplit\" \"tbl_df\" object, return single prepped recipe. split_data \"rset\" object, return list prepped recipes specific fold resampling procedure.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_preprocess.html","id":null,"dir":"Reference","previous_headings":"","what":"Preprocess raw high-dimensional cytometry data. — tof_preprocess","title":"Preprocess raw high-dimensional cytometry data. — tof_preprocess","text":"function transforms `tof_tbl` raw ion counts, reads, fluorescence intensity units directly measured cytometer using user-provided function. can used perform standard pre-processing steps (.e. arcsinh transformation) cytometry data analysis.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_preprocess.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preprocess raw high-dimensional cytometry data. — tof_preprocess","text":"","code":"tof_preprocess(   tof_tibble = NULL,   channel_cols = where(tof_is_numeric),   undo_noise = FALSE,   transform_fun = function(x) asinh(x/5) )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_preprocess.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preprocess raw high-dimensional cytometry data. — tof_preprocess","text":"tof_tibble `tof_tbl` `tibble`. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. nothing specified, default transform numeric columns. undo_noise boolean value indicating whether remove uniform noise Fluidigm software adds CyTOF measurements aesthetic visualization purposes. See paper. Defaults FALSE. transform_fun vectorized function apply protein value variance stabilization. Defaults asinh transformation (co-factor 5).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_preprocess.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preprocess raw high-dimensional cytometry data. — tof_preprocess","text":"`tof_tbl` identical dimensions input `tof_tibble`, columns specified channel_cols transformed using `transform_fun` (noise removed removed depending `undo_noise`).","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_preprocess.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Preprocess raw high-dimensional cytometry data. — tof_preprocess","text":"","code":"# read in an example .fcs file from tidytof's internal datasets input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]] tof_tibble <- tof_read_data(input_file)  # preprocess all numeric columns with default behavior # arcsinh transformation with a cofactor of 5 tof_preprocess(tof_tibble) #> # A tibble: 100 × 59 #>     Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>    <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1 15.3          1.88       5.33         0.263         1.70           5.85 #>  2 14.9          2.05       5.83         0.731         1.67           5.71 #>  3 15.2          1.88       5.70         1.13          0.861          5.54 #>  4 13.7          1.88       5.45         0.129         1.06           5.46 #>  5 15.2          1.99       5.73         0.721         1.41           5.55 #>  6 14.4          2.05       5.27         0.760         0.708          5.52 #>  7 13.9          1.88       5.31         0.645         0.771          5.42 #>  8 14.2          1.99       5.42         1.09          1.58           5.64 #>  9 15.6          2.05       6.03         0.586         1.37           5.83 #> 10  9.75         1.88       5.38         0.177         1.73           5.78 #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …  # preprocess all numeric columns using the log base 10 tranformation tof_preprocess(tof_tibble, transform_fun = log10) #> # A tibble: 100 × 59 #>     Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>    <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1  7.04         1.20       2.71        0.125          1.12           2.94 #>  2  6.85         1.28       2.93        0.601          1.11           2.88 #>  3  6.99         1.20       2.87        0.843          0.686          2.81 #>  4  6.36         1.20       2.77       -0.189          0.800          2.77 #>  5  6.98         1.26       2.89        0.594          0.984          2.81 #>  6  6.65         1.28       2.69        0.621          0.584          2.80 #>  7  6.44         1.20       2.70        0.539          0.628          2.75 #>  8  6.57         1.26       2.75        0.821          1.07           2.85 #>  9  7.18         1.28       3.02        0.491          0.964          2.93 #> 10  4.63         1.20       2.74       -0.0515         1.13           2.91 #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Read high-dimensional cytometry data from a .csv file into a tidy tibble. — tof_read_csv","title":"Read high-dimensional cytometry data from a .csv file into a tidy tibble. — tof_read_csv","text":"Read high-dimensional cytometry data .csv file tidy tibble.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read high-dimensional cytometry data from a .csv file into a tidy tibble. — tof_read_csv","text":"","code":"tof_read_csv(file_path = NULL, panel_info = dplyr::tibble())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read high-dimensional cytometry data from a .csv file into a tidy tibble. — tof_read_csv","text":"file_path file path single .csv file. panel_info Optional. tibble data.frame containing information panel used high-dimensional cytometry data acquisition. Two columns required: \"metals\" \"antigens\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_csv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read high-dimensional cytometry data from a .csv file into a tidy tibble. — tof_read_csv","text":"`tof_tbl` row represents single cell column represents high-dimensional cytometry antigen channel. `tof_tbl` S3 class extends \"tibble\" class storing one additional attribute: \"panel\" (tibble storing information panel used data acquisition). panel information obvious data read .csv file, information must provided manually user (unlike `tof_read_fcs`).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Read data from an .fcs/.csv file or a directory of .fcs/.csv files. — tof_read_data","title":"Read data from an .fcs/.csv file or a directory of .fcs/.csv files. — tof_read_data","text":"Read data .fcs/.csv file directory .fcs/.csv files.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read data from an .fcs/.csv file or a directory of .fcs/.csv files. — tof_read_data","text":"","code":"tof_read_data(path = NULL, sep = \"|\", panel_info = dplyr::tibble())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read data from an .fcs/.csv file or a directory of .fcs/.csv files. — tof_read_data","text":"path file path single file directory files. valid file types .fcs files .csv files containing high-dimensional cytometry data. sep Optional. string use separate antigen name associated metal column names output tibble. Defaults \"|\". used input file .fcs file. panel_info Optional. tibble data.frame containing information panel used high-dimensional cytometry data acquisition. Two columns required: \"metals\" \"antigens\". used input file .csv file.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read data from an .fcs/.csv file or a directory of .fcs/.csv files. — tof_read_data","text":"[c m+1] tibble row represents single cell (c total dataset) column represents high-dimensional cytometry measurement (m total dataset). one .fcs read , last column tibble (`file_name`) represent file name .fcs file cell read.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read data from an .fcs/.csv file or a directory of .fcs/.csv files. — tof_read_data","text":"","code":"input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]] tof_read_data(input_file) #> # A tibble: 100 × 59 #>         Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>        <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1 11021370            16       517.         1.33          13.2           865. #>  2  7112446.           19       850.         3.99          12.7           756. #>  3  9722098            16       747.         6.96           4.85          639. #>  4  2267279.           16       585.         0.648          6.32          586. #>  5  9624729            18       773.         3.93           9.65          645. #>  6  4439897            19       485.         4.18           3.84          627. #>  7  2762526.           16       504.         3.46           4.25          566. #>  8  3746682.           18       567.         6.62          11.7           703. #>  9 15214280            19      1043.         3.10           9.20          853. #> 10    42699.           16       543.         0.888         13.6           813. #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_fcs.html","id":null,"dir":"Reference","previous_headings":"","what":"Read high-dimensional cytometry data from an .fcs file into a tidy tibble. — tof_read_fcs","title":"Read high-dimensional cytometry data from an .fcs file into a tidy tibble. — tof_read_fcs","text":"function reads high-dimensional cytometry data single .fcs file tidy data structure called `tof_tbl` (\"tof_tibble\"). tof_tibbles identical normal tibbles except additional attribute (\"panel\") stores information high-dimensional cytometry panel used data acquisition.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_fcs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read high-dimensional cytometry data from an .fcs file into a tidy tibble. — tof_read_fcs","text":"","code":"tof_read_fcs(file_path = NULL, sep = \"|\")"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_fcs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read high-dimensional cytometry data from an .fcs file into a tidy tibble. — tof_read_fcs","text":"file_path file path single .fcs file. sep string use separate antigen name associated metal column names output tibble. Defaults \"|\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_fcs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read high-dimensional cytometry data from an .fcs file into a tidy tibble. — tof_read_fcs","text":"`tof_tbl` row represents single cell column represents high-dimensional cytometry antigen channel. `tof_tbl` S3 class extends \"tibble\" class storing one additional attribute: \"panel\" (tibble storing information panel used data acquisition).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Read high-dimensional cytometry data from a single .fcs or .csv file into a tidy tibble. — tof_read_file","title":"Read high-dimensional cytometry data from a single .fcs or .csv file into a tidy tibble. — tof_read_file","text":"Read high-dimensional cytometry data single .fcs .csv file tidy tibble.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read high-dimensional cytometry data from a single .fcs or .csv file into a tidy tibble. — tof_read_file","text":"","code":"tof_read_file(file_path = NULL, sep = \"|\", panel_info = dplyr::tibble())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read high-dimensional cytometry data from a single .fcs or .csv file into a tidy tibble. — tof_read_file","text":"file_path file path single .fcs .csv file. sep string use separate antigen name associated metal column names output tibble. Defaults \"|\". used input file .fcs file. panel_info Optional. tibble data.frame containing information panel used high-dimensional cytometry data acquisition. Two columns required: \"metals\" \"antigens\". used input file .csv file.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read high-dimensional cytometry data from a single .fcs or .csv file into a tidy tibble. — tof_read_file","text":"`tof_tbl` row represents single cell column represents high-dimensional cytometry antigen channel. `tof_tbl` S3 class extends \"tibble\" class storing one additional attribute: \"panel\" (tibble storing information panel used data acquisition). panel information obvious data read .csv file, information must provided manually user.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_dimensions.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply dimensionality reduction to a single-cell dataset. — tof_reduce_dimensions","title":"Apply dimensionality reduction to a single-cell dataset. — tof_reduce_dimensions","text":"function wrapper around tidytof's tof_reduce_* function family. performs dimensionality reduction single-cell data using user-specified method (3 choices) method's corresponding input parameters","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_dimensions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply dimensionality reduction to a single-cell dataset. — tof_reduce_dimensions","text":"","code":"tof_reduce_dimensions(   tof_tibble,   ...,   augment = TRUE,   method = c(\"pca\", \"tsne\", \"umap\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_dimensions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply dimensionality reduction to a single-cell dataset. — tof_reduce_dimensions","text":"tof_tibble `tof_tbl` `tibble`. ... Arguments passed tof_reduce_* function corresponding embedding method. See tof_reduce_pca, tof_reduce_tsne, tof_reduce_umap. augment boolean value indicating output column-bind dimensionality-reduced embedding vectors cell new column `tof_tibble` (TRUE, default) tibble including low-dimensionality embeddings returned (FALSE). method method dimensionality reduction. Currently, PCA, tSNE, UMAP embedding supported.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_dimensions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply dimensionality reduction to a single-cell dataset. — tof_reduce_dimensions","text":"tibble number rows `tof_tibble`, representing single cell. `num_comp` columns represents cell's embedding calculated embedding space.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_dimensions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply dimensionality reduction to a single-cell dataset. — tof_reduce_dimensions","text":"","code":"# simulate single-cell data sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 100),         cd38 = rnorm(n = 100),         cd34 = rnorm(n = 100),         cd19 = rnorm(n = 100)     )  # calculate pca tof_reduce_dimensions(tof_tibble = sim_data, method = \"pca\") #> # A tibble: 100 × 8 #>       cd45   cd38     cd34   cd19   .pc1   .pc2   .pc3    .pc4 #>      <dbl>  <dbl>    <dbl>  <dbl>  <dbl>  <dbl>  <dbl>   <dbl> #>  1 -0.174   0.348 -0.273    1.38  -1.30  -0.116  0.143  0.735  #>  2  0.0323 -0.422 -0.820   -0.193  0.294  0.504 -0.682  0.276  #>  3  0.245  -0.668  0.00640  0.173  0.395 -0.335 -0.163  0.558  #>  4 -0.488  -1.87   0.460   -1.66   2.66   0.347  0.435  0.0317 #>  5  0.154  -0.804 -0.435    0.945 -0.158 -0.115 -0.280  1.30   #>  6  1.02   -0.144 -0.372   -0.378  0.369 -0.544 -1.15  -0.151  #>  7  1.07   -0.231 -0.107   -0.348  0.469 -0.781 -0.983 -0.118  #>  8 -0.0284  1.07  -0.374   -0.313 -0.626  0.207 -0.360 -0.999  #>  9 -1.34    0.657 -0.741    0.228 -0.861  1.37   0.476 -0.235  #> 10 -0.530   1.19  -1.24     1.56  -2.28   0.791 -0.287  0.436  #> # ℹ 90 more rows  # calculate tsne tof_reduce_dimensions(tof_tibble = sim_data, method = \"tsne\") #> # A tibble: 100 × 6 #>       cd45   cd38     cd34   cd19 .tsne1  .tsne2 #>      <dbl>  <dbl>    <dbl>  <dbl>  <dbl>   <dbl> #>  1 -0.174   0.348 -0.273    1.38  -2.88   1.61   #>  2  0.0323 -0.422 -0.820   -0.193  0.653 -0.0307 #>  3  0.245  -0.668  0.00640  0.173  0.718 -0.289  #>  4 -0.488  -1.87   0.460   -1.66   2.79  -2.92   #>  5  0.154  -0.804 -0.435    0.945 -0.702 -0.746  #>  6  1.02   -0.144 -0.372   -0.378  1.97   0.899  #>  7  1.07   -0.231 -0.107   -0.348  2.03   0.959  #>  8 -0.0284  1.07  -0.374   -0.313 -1.65   2.00   #>  9 -1.34    0.657 -0.741    0.228 -3.66  -0.436  #> 10 -0.530   1.19  -1.24     1.56  -3.80   1.23   #> # ℹ 90 more rows  # calculate umap tof_reduce_dimensions(tof_tibble = sim_data, method = \"umap\") #> Found more than one class \"dist\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘spam’ #> Found more than one class \"dist\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘spam’ #> # A tibble: 100 × 6 #>       cd45   cd38     cd34   cd19 .umap1 .umap2 #>      <dbl>  <dbl>    <dbl>  <dbl>  <dbl>  <dbl> #>  1 -0.174   0.348 -0.273    1.38  -1.29   0.992 #>  2  0.0323 -0.422 -0.820   -0.193  0.638  2.54  #>  3  0.245  -0.668  0.00640  0.173 -0.652  0.298 #>  4 -0.488  -1.87   0.460   -1.66   2.02  -0.812 #>  5  0.154  -0.804 -0.435    0.945 -0.688  0.688 #>  6  1.02   -0.144 -0.372   -0.378  0.923  3.51  #>  7  1.07   -0.231 -0.107   -0.348  0.937  3.45  #>  8 -0.0284  1.07  -0.374   -0.313 -0.594 -2.63  #>  9 -1.34    0.657 -0.741    0.228 -2.04  -3.53  #> 10 -0.530   1.19  -1.24     1.56  -1.90   1.20  #> # ℹ 90 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_pca.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform principal component analysis on single-cell data — tof_reduce_pca","title":"Perform principal component analysis on single-cell data — tof_reduce_pca","text":"function calculates principal components using single-cell data `tof_tibble`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_pca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform principal component analysis on single-cell data — tof_reduce_pca","text":"","code":"tof_reduce_pca(   tof_tibble,   pca_cols = where(tof_is_numeric),   num_comp = 5,   threshold = NA,   center = TRUE,   scale = TRUE,   return_recipe = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_pca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform principal component analysis on single-cell data — tof_reduce_pca","text":"tof_tibble `tof_tbl` `tibble`. pca_cols Unquoted column names indicating columns `tof_tibble` use computing principal components. Defaults numeric columns. Supports tidyselect helpers. num_comp number PCA components calculate. Defaults 5. See step_pca. threshold double 0 1 representing fraction total variance covered components returned output. See step_pca. center boolean value indicating column centered mean 0 PCA analysis. Defaults TRUE. scale boolean value indicating column scaled standard deviation = 1 PCA analysis. Defaults TRUE. return_recipe boolean value indicating instead UMAP result, prepped recipe object containing PCA embedding returned. Set option TRUE want create PCA embedding using one dataset also want project new observations onto embedding space later.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_pca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform principal component analysis on single-cell data — tof_reduce_pca","text":"tibble number rows `tof_tibble`, representing single cell. `num_comp` columns represents cell's embedding calculated principal component space.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_pca.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform principal component analysis on single-cell data — tof_reduce_pca","text":"","code":"# simulate single-cell data sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200)     ) new_data <-     dplyr::tibble(         cd45 = rnorm(n = 50),         cd38 = rnorm(n = 50),         cd34 = rnorm(n = 50),         cd19 = rnorm(n = 50)     )  # calculate pca tof_reduce_pca(tof_tibble = sim_data, num_comp = 2) #> # A tibble: 200 × 2 #>      .pc1    .pc2 #>     <dbl>   <dbl> #>  1  0.423 -0.591  #>  2 -0.645  0.738  #>  3 -1.30  -0.253  #>  4  0.340  0.439  #>  5  0.904 -1.44   #>  6  0.187 -0.950  #>  7  0.989 -0.0799 #>  8  0.436 -0.805  #>  9 -1.69   1.58   #> 10 -0.495 -0.231  #> # ℹ 190 more rows  # return recipe instead of embeddings pca_recipe <- tof_reduce_pca(tof_tibble = sim_data, return_recipe = TRUE)  # apply recipe to new data recipes::bake(pca_recipe, new_data = new_data) #> # A tibble: 50 × 4 #>       PC1    PC2     PC3    PC4 #>     <dbl>  <dbl>   <dbl>  <dbl> #>  1 -0.861  1.60   0.252   2.42  #>  2  1.58  -0.553  0.358   1.48  #>  3  0.436  0.846 -0.558   0.909 #>  4 -0.378 -1.15  -0.692  -0.460 #>  5 -1.01   0.264  0.776   1.57  #>  6  2.21  -1.53   1.15   -0.383 #>  7  0.895 -0.225 -0.620   1.82  #>  8  1.79   0.190 -2.29    0.550 #>  9  0.529  0.290  0.0405 -2.00  #> 10 -1.33   0.468 -0.0758  1.62  #> # ℹ 40 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_tsne.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform t-distributed stochastic neighborhood embedding on single-cell data — tof_reduce_tsne","title":"Perform t-distributed stochastic neighborhood embedding on single-cell data — tof_reduce_tsne","text":"function calculates tSNE embedding using single-cell data `tof_tibble`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_tsne.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform t-distributed stochastic neighborhood embedding on single-cell data — tof_reduce_tsne","text":"","code":"tof_reduce_tsne(   tof_tibble,   tsne_cols = where(tof_is_numeric),   num_comp = 2,   perplexity = 30,   theta = 0.5,   max_iterations = 1000,   verbose = FALSE,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_tsne.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform t-distributed stochastic neighborhood embedding on single-cell data — tof_reduce_tsne","text":"tof_tibble `tof_tbl` `tibble`. tsne_cols Unquoted column names indicating columns `tof_tibble` use computing tSNE embedding. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. num_comp number tSNE components calculate embedding. Defaults 2. perplexity positive numeric value represents represents rough balance input data’s local global structure emphasized embedding. Smaller values emphasize local structure; larger values emphasize global structure. recommended range generally 5-50. Defaults 30. theta numeric value representing speed/accuracy tradeoff embedding. Set 0 exact tSNE; increase faster approximation. Defaults 0.5 max_iterations integer number iterations use embedding calculation. Defaults 1000. verbose boolean value indicating whether progress updates printed embedding calculation. Default FALSE. ... Additional arguments pass Rtsne.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_tsne.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform t-distributed stochastic neighborhood embedding on single-cell data — tof_reduce_tsne","text":"tibble number rows `tof_tibble`, representing single cell. `num_comp` columns represents cell's embedding calculated tSNE space.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_tsne.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform t-distributed stochastic neighborhood embedding on single-cell data — tof_reduce_tsne","text":"","code":"# simulate single-cell data sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200)     )  # calculate tsne tof_reduce_tsne(tof_tibble = sim_data) #> # A tibble: 200 × 2 #>    .tsne1 .tsne2 #>     <dbl>  <dbl> #>  1   4.98   1.95 #>  2  -1.08   3.50 #>  3  -6.07  -3.55 #>  4   7.37  -1.80 #>  5  -3.86   5.55 #>  6   1.85  -1.10 #>  7   2.20  -6.05 #>  8  -4.95  -2.19 #>  9   5.92  -1.02 #> 10  -2.42  -2.98 #> # ℹ 190 more rows  # calculate tsne with only 2 columns tof_reduce_tsne(tof_tibble = sim_data, tsne_cols = c(cd34, cd38)) #> # A tibble: 200 × 2 #>    .tsne1 .tsne2 #>     <dbl>  <dbl> #>  1  -1.77  3.80  #>  2 -11.6   1.43  #>  3   1.08 -1.48  #>  4   1.70 -2.54  #>  5   1.15 -0.899 #>  6   2.77 -8.38  #>  7   8.64 -2.41  #>  8  -4.73  2.65  #>  9   3.11  1.45  #> 10   5.14 -2.87  #> # ℹ 190 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_umap.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply uniform manifold approximation and projection (UMAP) to single-cell data — tof_reduce_umap","title":"Apply uniform manifold approximation and projection (UMAP) to single-cell data — tof_reduce_umap","text":"function calculates UMAP embedding single-cell data `tof_tibble`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_umap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply uniform manifold approximation and projection (UMAP) to single-cell data — tof_reduce_umap","text":"","code":"tof_reduce_umap(   tof_tibble,   umap_cols = where(tof_is_numeric),   num_comp = 2,   neighbors = 5,   min_dist = 0.01,   learn_rate = 1,   epochs = NULL,   verbose = FALSE,   n_threads = 1,   return_recipe = FALSE,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_umap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply uniform manifold approximation and projection (UMAP) to single-cell data — tof_reduce_umap","text":"tof_tibble `tof_tbl` `tibble`. umap_cols Unquoted column names indicating columns `tof_tibble` use computing UMAP embedding. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. num_comp integer number UMAP components. neighbors integer number nearest neighbors used construct target simplicial set. min_dist effective minimum distance embedded points. learn_rate Positive number learning rate optimization process. epochs Number iterations neighbor optimization. See umap details. verbose boolean indicating run details logged console. Defaults FALSE. n_threads Number threads use UMAP calculation. Defaults 1. return_recipe boolean value indicating instead UMAP result, prepped recipe object containing UMAP embedding returned. Set option TRUE want create UMAP embedding using one dataset also want project new observations onto embedding space later. ... Optional. options passed arguments umap.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_umap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply uniform manifold approximation and projection (UMAP) to single-cell data — tof_reduce_umap","text":"tibble number rows `tof_tibble`, representing single cell. `num_comp` columns represents cell's embedding calculated UMAP space.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_umap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply uniform manifold approximation and projection (UMAP) to single-cell data — tof_reduce_umap","text":"","code":"# simulate single-cell data sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200)     ) new_data <-     dplyr::tibble(         cd45 = rnorm(n = 50),         cd38 = rnorm(n = 50),         cd34 = rnorm(n = 50),         cd19 = rnorm(n = 50)     )  # calculate umap tof_reduce_umap(tof_tibble = sim_data) #> Found more than one class \"dist\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘spam’ #> Found more than one class \"dist\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘spam’ #> # A tibble: 200 × 2 #>    .umap1 .umap2 #>     <dbl>  <dbl> #>  1 -1.31   1.55  #>  2 -2.69  -2.29  #>  3  1.30   0.807 #>  4  0.809 -1.38  #>  5  1.00  -0.702 #>  6 -5.54  -1.21  #>  7  1.13   0.897 #>  8 -2.19  -1.97  #>  9 -1.79   0.808 #> 10 -6.42  -3.01  #> # ℹ 190 more rows  # calculate umap with only 2 columns tof_reduce_tsne(tof_tibble = sim_data, umap_cols = c(cd34, cd38)) #> # A tibble: 200 × 2 #>    .tsne1 .tsne2 #>     <dbl>  <dbl> #>  1 -9.37  -1.89  #>  2  2.01  -6.69  #>  3 -5.20  -2.87  #>  4 -2.87  -3.24  #>  5 -1.98  -2.34  #>  6  4.52  -6.70  #>  7 -5.30  -2.48  #>  8  0.879 -7.77  #>  9 -2.85  -0.326 #> 10  5.86  -4.75  #> # ℹ 190 more rows  # return recipe umap_recipe <- tof_reduce_umap(tof_tibble = sim_data, return_recipe = TRUE) #> Found more than one class \"dist\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘spam’ #> Found more than one class \"dist\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘spam’  # apply recipe to new data recipes::bake(umap_recipe, new_data = new_data) #> # A tibble: 50 × 2 #>     UMAP1  UMAP2 #>     <dbl>  <dbl> #>  1 -1.84  -2.40  #>  2 -2.17   1.89  #>  3 -1.73  -3.20  #>  4 -1.35  -2.08  #>  5  0.761 -2.63  #>  6  1.61   1.85  #>  7 -1.20  -1.57  #>  8  3.00  -0.307 #>  9 -4.32   2.61  #> 10 -1.37   1.89  #> # ℹ 40 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_set_panel.html","id":null,"dir":"Reference","previous_headings":"","what":"Set panel information from a tof_tibble — tof_set_panel","title":"Set panel information from a tof_tibble — tof_set_panel","text":"Set panel information tof_tibble","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_set_panel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set panel information from a tof_tibble — tof_set_panel","text":"","code":"tof_set_panel(tof_tibble, panel)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_set_panel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set panel information from a tof_tibble — tof_set_panel","text":"tof_tibble `tof_tbl`. panel tibble containing two columns (`metals` `antigens`) representing information panel","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_set_panel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set panel information from a tof_tibble — tof_set_panel","text":"`tof_tibble` containing information CyTOF panel used data acquisition data contained input `tof_tibble`. Two columns required: \"metals\" \"antigens\".","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_set_panel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set panel information from a tof_tibble — tof_set_panel","text":"","code":"# get current panel from an .fcs file input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]] tof_tibble <- tof_read_data(input_file) current_panel <- tof_get_panel(tof_tibble)  # create a new panel (remove empty channels) new_panel <- dplyr::filter(current_panel, antigens != \"empty\") tof_set_panel(tof_tibble = tof_tibble, panel = new_panel) #> # A tibble: 100 × 59 #>         Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>        <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1 11021370            16       517.         1.33          13.2           865. #>  2  7112446.           19       850.         3.99          12.7           756. #>  3  9722098            16       747.         6.96           4.85          639. #>  4  2267279.           16       585.         0.648          6.32          586. #>  5  9624729            18       773.         3.93           9.65          645. #>  6  4439897            19       485.         4.18           3.84          627. #>  7  2762526.           16       504.         3.46           4.25          566. #>  8  3746682.           18       567.         6.62          11.7           703. #>  9 15214280            19      1043.         3.10           9.20          853. #> 10    42699.           16       543.         0.888         13.6           813. #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_spade_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate cells' local densities as done in Spanning-tree Progression Analysis of Density-normalized Events (SPADE) — tof_spade_density","title":"Estimate cells' local densities as done in Spanning-tree Progression Analysis of Density-normalized Events (SPADE) — tof_spade_density","text":"function uses algorithm described Qiu et al., (2011) estimate local density cell `tof_tbl` `tibble` containing high-dimensional cytometry data. Briefly, algorithm involves counting number neighboring cells within  sphere radius alpha surrounding cell. , using nn2 function.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_spade_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate cells' local densities as done in Spanning-tree Progression Analysis of Density-normalized Events (SPADE) — tof_spade_density","text":"","code":"tof_spade_density(   tof_tibble,   distance_cols = where(tof_is_numeric),   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\"),   num_alpha_cells = 2000L,   alpha_multiplier = 5,   max_neighbors = round(0.01 * nrow(tof_tibble)),   normalize = TRUE,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_spade_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate cells' local densities as done in Spanning-tree Progression Analysis of Density-normalized Events (SPADE) — tof_spade_density","text":"tof_tibble `tof_tbl` `tibble`. distance_cols Unquoted names columns `tof_tibble` use calculating cell--cell distances local density estimation cell. Defaults numeric columns `tof_tibble`. distance_function string indicating distance function use calculating cell--cell distances local density estimation. Options include \"euclidean\" (default) \"cosine\". num_alpha_cells integer indicating many cells `tof_tibble` randomly sampled `tof_tibble` order estimate `alpha`, radius sphere constructed around cell local density estimation. Alpha calculated taking median nearest-neighbor distance `num_alpha_cells` randomly-sampled cells multiplying `alpha_multiplier`. Defaults 2000. alpha_multiplier numeric value indicating multiplier used calculating `alpha`, radius sphere constructed around cell local density estimation. Alpha calculated taking median nearest-neighbor distance `num_alpha_cells` cells randomly-sampled `tof_tibble` multiplying `alpha_multiplier`. Defaults 5. max_neighbors integer indicating maximum number neighbors can counted within sphere surrounding given cell. Implemented reduce density estimation procedure's speed memory requirements. Defaults 1% number rows `tof_tibble`. normalize boolean value indicating vector local density estimates normalized values 0 1. Defaults TRUE. ... Additional optional arguments pass tof_find_knn.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_spade_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate cells' local densities as done in Spanning-tree Progression Analysis of Density-normalized Events (SPADE) — tof_spade_density","text":"tibble single column named \".spade_density\" containing local density estimates input cell `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_spade_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate cells' local densities as done in Spanning-tree Progression Analysis of Density-normalized Events (SPADE) — tof_spade_density","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  # perform the density estimation tof_spade_density(tof_tibble = sim_data) #> # A tibble: 1,000 × 1 #>    .spade_density #>             <dbl> #>  1              1 #>  2              1 #>  3              1 #>  4              1 #>  5              1 #>  6              1 #>  7              1 #>  8              1 #>  9              1 #> 10              1 #> # ℹ 990 more rows  # perform the density estimation using cosine distance tof_spade_density(     tof_tibble = sim_data,     distance_function = \"cosine\",     alpha_multiplier = 2 ) #> # A tibble: 1,000 × 1 #>    .spade_density #>             <dbl> #>  1          0.143 #>  2          0.143 #>  3          0.143 #>  4          0.571 #>  5          0     #>  6          0.286 #>  7          0.429 #>  8          0.143 #>  9          0.571 #> 10          0.286 #> # ℹ 990 more rows  # perform the density estimation with a smaller search radius around # each cell tof_spade_density(     tof_tibble = sim_data,     alpha_multiplier = 2 ) #> # A tibble: 1,000 × 1 #>    .spade_density #>             <dbl> #>  1            0   #>  2            0.1 #>  3            0.3 #>  4            0.7 #>  5            0.1 #>  6            1   #>  7            1   #>  8            0.1 #>  9            0   #> 10            1   #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Split high-dimensional cytometry data into a training and test set — tof_split_data","title":"Split high-dimensional cytometry data into a training and test set — tof_split_data","text":"Split high-dimensional cytometry data training test set","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split high-dimensional cytometry data into a training and test set — tof_split_data","text":"","code":"tof_split_data(   feature_tibble,   split_method = c(\"k-fold\", \"bootstrap\", \"simple\"),   split_col,   simple_prop = 3/4,   num_cv_folds = 10,   num_cv_repeats = 1L,   num_bootstraps = 10,   strata = NULL,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split high-dimensional cytometry data into a training and test set — tof_split_data","text":"feature_tibble tibble row represents sample- patient- level observation, produced tof_extract_features. split_method Either string logical vector specifying perform split. string, valid options include k-fold cross validation (\"k-fold\"; default), bootstrapping (\"bootstrap\"), single binary split (\"simple\"). logical vector, contain one entry row `feature_tibble` indicating row included training set (TRUE) excluded validation/test set (FALSE). Ignored entirely `split_col` specified. split_col unquoted column name logical column `feature_tibble` indicating row included training set (TRUE) excluded validation/test set (FALSE). simple_prop numeric value 0 1 indicating proportion data used training. Defaults 3/4. Ignored split_method \"simple\". num_cv_folds integer indicating many cross-validation folds used. Defaults 10. Ignored split_method \"k-fold\". num_cv_repeats integer indicating many independent cross-validation replicates used (.e. many num_cv_fold splits performed). Defaults 1. Ignored split_method \"k-fold\". num_bootstraps integer indicating many independent bootstrap replicates used. Defaults 25. Ignored split_method \"bootstrap\". strata unquoted column name representing column feature_tibble used stratify data splitting. Defaults NULL (stratification). ... Optional additional arguments pass vfold_cv k-fold cross validation, bootstraps bootstrapping, initial_split simple splitting.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split high-dimensional cytometry data into a training and test set — tof_split_data","text":"k-fold cross validation bootstrapping, \"rset\" object; simple splitting, \"rsplit\" object. details, see rsample.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split high-dimensional cytometry data into a training and test set — tof_split_data","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 50), rep(1, times = 50)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  # split the dataset into 10 CV folds tof_split_data(     feature_tibble = feature_tibble,     split_method = \"k-fold\" ) #> #  10-fold cross-validation  #> # A tibble: 10 × 2 #>    splits          id     #>    <list>          <chr>  #>  1 <split [90/10]> Fold01 #>  2 <split [90/10]> Fold02 #>  3 <split [90/10]> Fold03 #>  4 <split [90/10]> Fold04 #>  5 <split [90/10]> Fold05 #>  6 <split [90/10]> Fold06 #>  7 <split [90/10]> Fold07 #>  8 <split [90/10]> Fold08 #>  9 <split [90/10]> Fold09 #> 10 <split [90/10]> Fold10  # split the dataset into 10 bootstrap resamplings tof_split_data(     feature_tibble = feature_tibble,     split_method = \"bootstrap\" ) #> # Bootstrap sampling  #> # A tibble: 10 × 2 #>    splits           id          #>    <list>           <chr>       #>  1 <split [100/34]> Bootstrap01 #>  2 <split [100/37]> Bootstrap02 #>  3 <split [100/39]> Bootstrap03 #>  4 <split [100/37]> Bootstrap04 #>  5 <split [100/33]> Bootstrap05 #>  6 <split [100/35]> Bootstrap06 #>  7 <split [100/39]> Bootstrap07 #>  8 <split [100/37]> Bootstrap08 #>  9 <split [100/35]> Bootstrap09 #> 10 <split [100/34]> Bootstrap10  # split the dataset into a single training/test set # stratified by the \"class\" column tof_split_data(     feature_tibble = feature_tibble,     split_method = \"simple\",     strata = class ) #> <Training/Testing/Total> #> <74/26/100>"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_tidytof_reduced_dimensions.html","id":null,"dir":"Reference","previous_headings":"","what":"Split the dimensionality reduction data that tidytof combines during SingleCellExperiment conversion — tof_split_tidytof_reduced_dimensions","title":"Split the dimensionality reduction data that tidytof combines during SingleCellExperiment conversion — tof_split_tidytof_reduced_dimensions","text":"Split dimensionality reduction data tidytof combines SingleCellExperiment conversion","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_tidytof_reduced_dimensions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split the dimensionality reduction data that tidytof combines during SingleCellExperiment conversion — tof_split_tidytof_reduced_dimensions","text":"","code":"tof_split_tidytof_reduced_dimensions(sce)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_tidytof_reduced_dimensions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split the dimensionality reduction data that tidytof combines during SingleCellExperiment conversion — tof_split_tidytof_reduced_dimensions","text":"sce SingleCellExperiment entry named \"tidytof_reduced_dimensions\" reducedDims slot.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_tidytof_reduced_dimensions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split the dimensionality reduction data that tidytof combines during SingleCellExperiment conversion — tof_split_tidytof_reduced_dimensions","text":"SingleCellExperiment separate entries named \"tidytof_pca\", \"tidytof_umap\", \"tidytof_tsne\" reducedDims slots (one dimensionality reduction methods tidytof native support).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_tidytof_reduced_dimensions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split the dimensionality reduction data that tidytof combines during SingleCellExperiment conversion — tof_split_tidytof_reduced_dimensions","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_train_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Train an elastic net model to predict sample-level phenomena using high-dimensional cytometry data. — tof_train_model","title":"Train an elastic net model to predict sample-level phenomena using high-dimensional cytometry data. — tof_train_model","text":"function uses training set/test set paradigm tune fit elastic net model using variety user-specified details. Tuning can performed using either simple training vs. test set split, k-fold cross-validation, bootstrapping, multiple preprocessing options available.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_train_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Train an elastic net model to predict sample-level phenomena using high-dimensional cytometry data. — tof_train_model","text":"","code":"tof_train_model(   split_data,   unsplit_data,   predictor_cols,   response_col = NULL,   time_col = NULL,   event_col = NULL,   model_type = c(\"linear\", \"two-class\", \"multiclass\", \"survival\"),   hyperparameter_grid = tof_create_grid(),   standardize_predictors = TRUE,   remove_zv_predictors = FALSE,   impute_missing_predictors = FALSE,   optimization_metric = \"tidytof_default\",   best_model_type = c(\"best\", \"best with sparsity\"),   num_cores = 1 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_train_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Train an elastic net model to predict sample-level phenomena using high-dimensional cytometry data. — tof_train_model","text":"split_data `rsplit` `rset` object rsample package containing sample-level data use modeling. easiest way generate use tof_split_data. unsplit_data tibble containing sample-level data use modeling without resampling. using resampling method advised, argument provides interface fit model without using cross-validation bootstrap resampling. Ignored split_data provided. predictor_cols Unquoted column names indicating columns data contained `split_data` used predictors elastic net model. Supports tidyselect helpers. response_col Unquoted column name indicating column data contained `split_data` used outcome \"two-class\", \"multiclass\", \"linear\" elastic net model. Must factor \"two-class\" \"multiclass\" models must numeric \"linear\" models. Ignored `model_type` \"survival\". time_col Unquoted column name indicating column data contained `split_data` represents time--event outcome \"survival\" elastic net model. Must numeric. Ignored `model_type` \"two-class\", \"multiclass\", \"linear\". event_col Unquoted column name indicating column data contained `split_data` represents time--event outcome \"survival\" elastic net model. Must binary column - values either 0 1 (1 indicating adverse event) FALSE TRUE (TRUE indicating adverse event). Ignored `model_type` \"two-class\", \"multiclass\", \"linear\". model_type string indicating kind elastic net model build. continuous response predicted, use \"linear\" linear regression; categorical response 2 classes predicted, use \"two-class\" logistic regression; categorical response 2 levels predicted, use \"multiclass\" multinomial regression; time--event outcome predicted, use \"survival\" Cox regression. hyperparameter_grid hyperparameter grid indicating values elastic net penalty (lambda) elastic net mixture (alpha) hyperparamters used model tuning. Generate grid using tof_create_grid. standardize_predictors logical value indicating numeric predictor columns standardized (centered scaled) model fitting, standard practice elastic net regularization. Defaults TRUE. remove_zv_predictors logical value indicating predictor columns near-zero variance removed model fitting using step_nzv. Defaults FALSE. impute_missing_predictors logical value indicating predictor columns missing values imputed using k-nearest neighbors model fitting (see step_impute_knn). Imputation performed using observation's 5 nearest-neighbors. Defaults FALSE. optimization_metric string indicating optimization metric used hyperparameter selection model tuning. Valid values depend model_type. \"linear\" models, choices \"mse\" (mean squared error predictions; default) \"mae\" (mean absolute error predictions). \"two-class\" models, choices \"roc_auc\" (area Receiver-Operating Curve classification; default), \"misclassification error\" (proportion misclassified observations), \"binomial_deviance\" (see deviance.glmnet), \"mse\" (mean squared error logit function), \"mae\" (mean absolute error logit function). \"multiclass\" models, choices \"roc_auc\" (area Receiver-Operating Curve classification using Hand-Till generalization ROC AUC multiclass models roc_auc; default), \"misclassification error\" (proportion misclassified observations), \"multinomial_deviance\" (see deviance.glmnet), \"mse\" \"mae\" . \"survival\" models, choices \"concordance_index\" (Harrel's C index; see deviance.glmnet) \"partial_likelihood_deviance\" (see deviance.glmnet). best_model_type Currently unused. num_cores Integer indicating many cores used parallel processing fitting multiple models. Defaults 1. Overhead separate models across multiple cores can high, significant speedup unlikely observed unless many large models fit.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_train_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Train an elastic net model to predict sample-level phenomena using high-dimensional cytometry data. — tof_train_model","text":"`tof_model`, S3 class includes elastic net model best performance (assessed via cross-validation, bootstrapping, simple splitting depending `split_data`) across tested hyperparameter value combinations. `tof_models` store following information: model final elastic net (\"glmnet\") model, chosen selecting elastic net hyperparameters best `optimization_metric` performance validation sets resample used train model (average) recipe recipe used data preprocessing mixture optimal mixture hyperparameter (alpha) glmnet model penalty optimal penalty hyperparameter (lambda) glmnet model model_type string indicating type glmnet model fit outcome_colnames character vector representing names columns training data modeled outcome variables training_data tibble containing (preprocessed) data used train model tuning_metrics tibble containing validation set performance metrics (model predictions) resample fold model tuning. log_rank_thresholds survival models , tibble containing information relative-risk thresholds can used split training data 2 risk groups (low- high-risk) based final model's predictions. relative-risk threshold, log-rank test p-value indicator threshold gives significant separation provided. best_log_rank_threshold survival models , numeric value representing relative-risk threshold yields significant log-rank test separating training data low- high-risk groups.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_train_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Train an elastic net model to predict sample-level phenomena using high-dimensional cytometry data. — tof_train_model","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model tof_train_model(     split_data = split_data,     predictor_cols = c(cd45, pstat5, cd34),     response_col = outcome,     model_type = \"linear\" ) #> A linear `tof_model` with a mixture parameter (alpha) of 1 and a penalty parameter (lambda) of 3.162e-03  #> # A tibble: 4 × 2 #>   feature     coefficient #>   <chr>             <dbl> #> 1 (Intercept)      3.54   #> 2 pstat5           1.07   #> 3 cd45             0.824  #> 4 cd34            -0.0149  # train a logistic regression classifier tof_train_model(     split_data = split_data,     predictor_cols = c(cd45, pstat5, cd34),     response_col = class,     model_type = \"two-class\" ) #> A two-class `tof_model` with a mixture parameter (alpha) of 0 and a penalty parameter (lambda) of 3.162e-03  #> # A tibble: 4 × 2 #>   feature     coefficient #>   <chr>             <dbl> #> 1 pstat5         -1.27    #> 2 cd45           -1.10    #> 3 cd34           -0.169   #> 4 (Intercept)    -0.00863  # train a cox regression survival model tof_train_model(     split_data = split_data,     predictor_cols = c(cd45, pstat5, cd34),     time_col = time_to_event,     event_col = event,     model_type = \"survival\" ) #> A survival `tof_model` with a mixture parameter (alpha) of 1 and a penalty parameter (lambda) of 1e+00  #> # A tibble: 0 × 2 #> # ℹ 2 variables: feature <chr>, coefficient <dbl>"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_transform.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform raw high-dimensional cytometry data. — tof_transform","title":"Transform raw high-dimensional cytometry data. — tof_transform","text":"function transforms `tof_tbl` raw ion counts, reads, fluorescence intensity units directly measured cytometer using user-provided function.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_transform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform raw high-dimensional cytometry data. — tof_transform","text":"","code":"tof_transform(   tof_tibble = NULL,   channel_cols = where(tof_is_numeric),   transform_fun )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_transform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform raw high-dimensional cytometry data. — tof_transform","text":"tof_tibble `tof_tbl` `tibble`. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. nothing specified, default transform numeric columns. transform_fun vectorized function apply protein value variance stabilization.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_transform.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform raw high-dimensional cytometry data. — tof_transform","text":"`tof_tbl` identical dimensions input `tof_tibble`, columns specified channel_cols transformed using `transform_fun`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_transform.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform raw high-dimensional cytometry data. — tof_transform","text":"","code":"# read in an example .fcs file from tidytof's internal datasets input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]] tof_tibble <- tof_read_data(input_file)  # preprocess all numeric columns with default behavior # arcsinh transformation with a cofactor of 5 tof_preprocess(tof_tibble) #> # A tibble: 100 × 59 #>     Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>    <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1 15.3          1.88       5.33         0.263         1.70           5.85 #>  2 14.9          2.05       5.83         0.731         1.67           5.71 #>  3 15.2          1.88       5.70         1.13          0.861          5.54 #>  4 13.7          1.88       5.45         0.129         1.06           5.46 #>  5 15.2          1.99       5.73         0.721         1.41           5.55 #>  6 14.4          2.05       5.27         0.760         0.708          5.52 #>  7 13.9          1.88       5.31         0.645         0.771          5.42 #>  8 14.2          1.99       5.42         1.09          1.58           5.64 #>  9 15.6          2.05       6.03         0.586         1.37           5.83 #> 10  9.75         1.88       5.38         0.177         1.73           5.78 #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …  # preprocess all numeric columns using the log base 10 tranformation tof_preprocess(tof_tibble, transform_fun = log10) #> # A tibble: 100 × 59 #>     Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>    <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1  7.04         1.20       2.71        0.125          1.12           2.94 #>  2  6.85         1.28       2.93        0.601          1.11           2.88 #>  3  6.99         1.20       2.87        0.843          0.686          2.81 #>  4  6.36         1.20       2.77       -0.189          0.800          2.77 #>  5  6.98         1.26       2.89        0.594          0.984          2.81 #>  6  6.65         1.28       2.69        0.621          0.584          2.80 #>  7  6.44         1.20       2.70        0.539          0.628          2.75 #>  8  6.57         1.26       2.75        0.821          1.07           2.85 #>  9  7.18         1.28       3.02        0.491          0.964          2.93 #> 10  4.63         1.20       2.74       -0.0515         1.13           2.91 #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_tune_glmnet.html","id":null,"dir":"Reference","previous_headings":"","what":"Tune an elastic net model's hyperparameters over multiple resamples — tof_tune_glmnet","title":"Tune an elastic net model's hyperparameters over multiple resamples — tof_tune_glmnet","text":"Tune elastic net model's hyperparameters multiple resamples","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_tune_glmnet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tune an elastic net model's hyperparameters over multiple resamples — tof_tune_glmnet","text":"","code":"tof_tune_glmnet(   split_data,   prepped_recipe,   hyperparameter_grid,   model_type,   outcome_cols,   optimization_metric = \"tidytof_default\",   num_cores = 1 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_tune_glmnet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tune an elastic net model's hyperparameters over multiple resamples — tof_tune_glmnet","text":"split_data `rsplit` `rset` object rsample package. easiest way generate use tof_split_data. Alternatively, unsplit tbl_df can provided, though recommended. prepped_recipe Either single recipe object (`split_data` `rsplit` object `tbl_df`) list recipes (`split_data` `rset` object) entry list corresponds resample `split_data`. hyperparameter_grid hyperparameter grid indicating values elastic net penalty (lambda) elastic net mixture (alpha) hyperparameters used model tuning. Generate grid using tof_create_grid. model_type string indicating kind elastic net model build. continuous response predicted, use \"linear\" linear regression; categorical response 2 classes predicted, use \"two-class\" logistic regression; categorical response 2 levels predicted, use \"multiclass\" multinomial regression; time--event outcome predicted, use \"survival\" Cox regression. outcome_cols Unquoted column name(s) indicating column(s) data contained `split_data` used outcome elastic net model. survival models, two columns selected; others, one column selected. optimization_metric string indicating optimization metric used hyperparameter selection model tuning. Valid values depend model_type. num_cores Integer indicating many cores used parallel processing fitting multiple models. Defaults 1. Overhead separate models across multiple cores can high, significant speedup unlikely observed unless many large models fit.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_tune_glmnet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tune an elastic net model's hyperparameters over multiple resamples — tof_tune_glmnet","text":"tibble containing summary model's performance resampling iteration across hyperparameter combinations. contain 3 columns: \"splits\" (list-col containing resampling iteration's `rsplit` object), \"id\" (name resampling iteration), \"performance_metrics\" (list-col containing performance metrics resampling iteration. row \"performance_metrics\" tibble columns \"mixture\" \"penalty\" several additional columns containing performance metrics model mixture/penalty combination). See tof_fit_split additional details.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample.html","id":null,"dir":"Reference","previous_headings":"","what":"Upsample cells into the closest cluster in a reference dataset — tof_upsample","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample","text":"function performs distance-based upsampling CyTOF data sorting single cells (passed function `tof_tibble`) phenotypically similar cell subpopulation reference dataset (passed function `reference_tibble`). calculating distance (either mahalanobis, cosine, pearson) cell `tof_tibble` centroid cluster `reference_tibble`, sorting cells cluster corresponding closest centroid.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample","text":"","code":"tof_upsample(   tof_tibble,   reference_tibble,   reference_cluster_col,   upsample_cols = where(tof_is_numeric),   ...,   augment = TRUE,   method = c(\"distance\", \"neighbor\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample","text":"tof_tibble `tibble` `tof_tbl` containing cells upsampled nearest reference subpopulation. reference_tibble `tibble` `tof_tibble` containing cells already clustered manually gated subpopulations. reference_cluster_col unquoted column name indicating column `reference_tibble` contains subpopulation label (cluster id) cell `reference_tibble`. upsample_cols Unquoted column names indicating columns `tof_tibble` use computing distances used upsampling. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. ... Additional arguments pass `tof_upsample_*` function family member corresponding chosen method. augment boolean value indicating output column-bind cluster ids cell new column `tof_tibble` (TRUE, default) single-column tibble including cluster ids returned (FALSE). method string indicating clustering methods used. Valid values include \"distance\" (default) \"neighbor\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample","text":"`tof_tbl` `tibble` augment = FALSE, single column encoding upsampled cluster ids cell `tof_tibble`. augment = TRUE, ncol(tof_tibble) + 1 columns: (unaltered) columns `tof_tibble` plus additional column encoding cluster ids.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample","text":"","code":"# simulate single-cell data (and reference data with clusters to upsample # into sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     ) reference_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200),         cluster_id = c(rep(\"a\", times = 100), rep(\"b\", times = 100))     )  # upsample using distance to cluster centroids tof_upsample(     tof_tibble = sim_data,     reference_tibble = reference_data,     reference_cluster_col = cluster_id,     method = \"distance\" ) #> # A tibble: 1,000 × 5 #>       cd45   cd38    cd34     cd19 .upsample_cluster #>      <dbl>  <dbl>   <dbl>    <dbl> <chr>             #>  1  2.93   -0.905 -0.0864 -1.86    b                 #>  2  0.940  -1.00   1.48    0.00534 a                 #>  3  0.0284  0.626  0.449  -0.593   a                 #>  4  1.69   -1.43   0.624  -1.81    b                 #>  5 -0.835   0.178 -2.68   -1.38    a                 #>  6 -1.05   -0.155  0.700  -0.716   b                 #>  7 -0.327   1.93  -1.03    0.161   a                 #>  8  0.250  -1.40   0.420   1.67    b                 #>  9 -0.813   0.803  0.345   0.399   b                 #> 10 -0.0286  0.819 -0.297   0.557   a                 #> # ℹ 990 more rows  # upsample using distance to nearest neighbor tof_upsample(     tof_tibble = sim_data,     reference_tibble = reference_data,     reference_cluster_col = cluster_id,     method = \"neighbor\" ) #> # A tibble: 1,000 × 5 #>       cd45   cd38    cd34     cd19 .upsample_cluster #>      <dbl>  <dbl>   <dbl>    <dbl> <chr>             #>  1  2.93   -0.905 -0.0864 -1.86    b                 #>  2  0.940  -1.00   1.48    0.00534 a                 #>  3  0.0284  0.626  0.449  -0.593   a                 #>  4  1.69   -1.43   0.624  -1.81    a                 #>  5 -0.835   0.178 -2.68   -1.38    a                 #>  6 -1.05   -0.155  0.700  -0.716   b                 #>  7 -0.327   1.93  -1.03    0.161   b                 #>  8  0.250  -1.40   0.420   1.67    a                 #>  9 -0.813   0.803  0.345   0.399   b                 #> 10 -0.0286  0.819 -0.297   0.557   a                 #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_distance.html","id":null,"dir":"Reference","previous_headings":"","what":"Upsample cells into the closest cluster in a reference dataset — tof_upsample_distance","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample_distance","text":"function performs distance-based upsampling CyTOF data sorting single cells (passed function `tof_tibble`) phenotypically similar cell subpopulation reference dataset (passed function `reference_tibble`). calculating distance (either mahalanobis, cosine, pearson) cell `tof_tibble` centroid cluster `reference_tibble`, sorting cells cluster corresponding closest centroid.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample_distance","text":"","code":"tof_upsample_distance(   tof_tibble,   reference_tibble,   reference_cluster_col,   upsample_cols = where(tof_is_numeric),   parallel_cols,   distance_function = c(\"mahalanobis\", \"cosine\", \"pearson\"),   num_cores = 1L,   return_distances = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_distance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample_distance","text":"tof_tibble `tibble` `tof_tbl` containing cells upsampled nearest reference subpopulation. reference_tibble `tibble` `tof_tibble` containing cells already clustered manually gated subpopulations. reference_cluster_col unquoted column name indicating column `reference_tibble` contains subpopulation label (cluster id) cell `reference_tibble`. upsample_cols Unquoted column names indicating columns `tof_tibble` use computing distances used upsampling. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. parallel_cols Optional. Unquoted column names indicating columns `tof_tibble` use breaking data order parallelize upsampling using `foreach` `doParallel` backend. Supports tidyselect helpers. distance_function string indicating distance function used perform upsampling. Options \"mahalanobis\" (default), \"cosine\", \"pearson\". num_cores integer indicating number CPU cores used parallelize classification. Defaults 1 (single core). return_distances boolean value indicating whether returned result include one column, cluster ids corresponding row `tof_tibble` (return_distances = FALSE, default), returned result include additional columns representing distance row `tof_tibble` reference subpopulation centroids (return_distances = TRUE).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_distance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample_distance","text":"`return_distances = FALSE`, tibble one column named `.upsample_cluster`, character vector length `nrow(tof_tibble)` indicating id reference cluster cell (.e. row) `tof_tibble` assigned. `return_distances = TRUE`, tibble `nrow(tof_tibble)` rows num_clusters + 1 columns, num_clusters number clusters `reference_tibble`. row represents cell `tof_tibble`, num_clusters columns represent distance cell reference subpopulations' cluster centroids. final column represents cluster id reference subpopulation minimum distance cell represented row.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_distance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample_distance","text":"","code":"# simulate single-cell data (and reference data with clusters to upsample # into sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  reference_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200),         cluster_id = c(rep(\"a\", times = 100), rep(\"b\", times = 100))     )  # upsample using mahalanobis distance tof_upsample_distance(     tof_tibble = sim_data,     reference_tibble = reference_data,     reference_cluster_col = cluster_id ) #> # A tibble: 1,000 × 1 #>    .upsample_cluster #>    <chr>             #>  1 b                 #>  2 b                 #>  3 a                 #>  4 b                 #>  5 b                 #>  6 b                 #>  7 a                 #>  8 b                 #>  9 a                 #> 10 a                 #> # ℹ 990 more rows  # upsample using cosine distance tof_upsample_distance(     tof_tibble = sim_data,     reference_tibble = reference_data,     reference_cluster_col = cluster_id,     distance_function = \"cosine\" ) #> # A tibble: 1,000 × 1 #>    .upsample_cluster #>    <chr>             #>  1 b                 #>  2 b                 #>  3 b                 #>  4 b                 #>  5 b                 #>  6 a                 #>  7 b                 #>  8 b                 #>  9 b                 #> 10 a                 #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_neighbor.html","id":null,"dir":"Reference","previous_headings":"","what":"Upsample cells into the cluster of their nearest neighbor a reference dataset — tof_upsample_neighbor","title":"Upsample cells into the cluster of their nearest neighbor a reference dataset — tof_upsample_neighbor","text":"function performs upsampling CyTOF data sorting single cells (passed function `tof_tibble`) phenotypically similar cell subpopulation reference dataset (passed function `reference_tibble`). finding cell `tof_tibble`'s nearest neighbor `reference_tibble` assigning cluster nearest neighbor belongs. nearest neighbor calculation can performed either euclidean cosine distance.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_neighbor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upsample cells into the cluster of their nearest neighbor a reference dataset — tof_upsample_neighbor","text":"","code":"tof_upsample_neighbor(   tof_tibble,   reference_tibble,   reference_cluster_col,   upsample_cols = where(tof_is_numeric),   num_neighbors = 1L,   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_neighbor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upsample cells into the cluster of their nearest neighbor a reference dataset — tof_upsample_neighbor","text":"tof_tibble `tibble` `tof_tbl` containing cells upsampled nearest reference subpopulation. reference_tibble `tibble` `tof_tibble` containing cells already clustered manually gated subpopulations. reference_cluster_col unquoted column name indicating column `reference_tibble` contains subpopulation label (cluster id) cell `reference_tibble`. upsample_cols Unquoted column names indicating columns `tof_tibble` use computing distances used upsampling. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. num_neighbors integer indicating many neighbors used nearest neighbor calculation. Clusters assigned based majority vote. distance_function string indicating distance function used perform upsampling. Options \"euclidean\" (default) \"cosine\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_neighbor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Upsample cells into the cluster of their nearest neighbor a reference dataset — tof_upsample_neighbor","text":"tibble one column named `.upsample_cluster`, character vector length `nrow(tof_tibble)` indicating id reference cluster cell (.e. row) `tof_tibble` assigned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_neighbor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Upsample cells into the cluster of their nearest neighbor a reference dataset — tof_upsample_neighbor","text":"","code":"# simulate single-cell data (and reference data with clusters to upsample # into sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  reference_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200),         cluster_id = c(rep(\"a\", times = 100), rep(\"b\", times = 100))     )  # upsample using euclidean distance tof_upsample_neighbor(     tof_tibble = sim_data,     reference_tibble = reference_data,     reference_cluster_col = cluster_id ) #> # A tibble: 1,000 × 1 #>    .upsample_cluster #>    <chr>             #>  1 b                 #>  2 a                 #>  3 a                 #>  4 a                 #>  5 b                 #>  6 a                 #>  7 b                 #>  8 b                 #>  9 a                 #> 10 a                 #> # ℹ 990 more rows  # upsample using cosine distance tof_upsample_neighbor(     tof_tibble = sim_data,     reference_tibble = reference_data,     reference_cluster_col = cluster_id,     distance_function = \"cosine\" ) #> # A tibble: 1,000 × 1 #>    .upsample_cluster #>    <chr>             #>  1 b                 #>  2 a                 #>  3 b                 #>  4 a                 #>  5 b                 #>  6 a                 #>  7 a                 #>  8 b                 #>  9 a                 #> 10 a                 #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a series of .csv files from a tof_tbl — tof_write_csv","title":"Write a series of .csv files from a tof_tbl — tof_write_csv","text":"function takes given `tof_tbl` writes single-cell data contains .csv files within directory located `out_path`. `group_cols` argument specifies rows `tof_tbl` (cell) broken separate .csv files","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a series of .csv files from a tof_tbl — tof_write_csv","text":"","code":"tof_write_csv(tof_tibble, group_cols, out_path, sep = \"_\", file_name)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a series of .csv files from a tof_tbl — tof_write_csv","text":"tof_tibble `tof_tbl` `tibble`. group_cols Optional. Unquoted names columns `tof_tibble` used group cells separate files. Supports tidyselect helpers. Defaults NULL (cells written single file). out_path system path indicating directory output .csv files saved. directory exist, created. sep Delimiter used values `group_cols` create output .csv file names. Defaults \"_\". file_name `group_cols` specified, name (without extension) used saved .csv file.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_csv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write a series of .csv files from a tof_tbl — tof_write_csv","text":"function return anything. Instead, side-effect saving .csv files `out_path`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Write high-dimensional cytometry data to a file or to a directory of files — tof_write_data","title":"Write high-dimensional cytometry data to a file or to a directory of files — tof_write_data","text":"Write data (form `tof_tbl`) either .csv .fcs file storage.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write high-dimensional cytometry data to a file or to a directory of files — tof_write_data","text":"","code":"tof_write_data(   tof_tibble = NULL,   group_cols,   out_path = NULL,   format = c(\"fcs\", \"csv\"),   sep = \"_\",   file_name )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write high-dimensional cytometry data to a file or to a directory of files — tof_write_data","text":"tof_tibble `tof_tbl` `tibble`. group_cols Optional. Unquoted names columns `tof_tibble` used group cells separate files. Supports tidyselect helpers. Defaults grouping (cells written single file). out_path Path directory output files saved. format format files written. Currently supports .csv .fcs files sep Delimiter used values `group_cols` create output .csv/.fcs file names. Defaults \"_\". file_name `group_cols` specified, name (without extension) used saved file.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write high-dimensional cytometry data to a file or to a directory of files — tof_write_data","text":"function explicitly return values. Instead, writes .csv /.fcs files specified `out_path`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write high-dimensional cytometry data to a file or to a directory of files — tof_write_data","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_fcs.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a series of .fcs files from a tof_tbl — tof_write_fcs","title":"Write a series of .fcs files from a tof_tbl — tof_write_fcs","text":"function takes given `tof_tbl` writes single-cell data contains .fcs files within directory located `out_path`. `group_cols` argument specifies rows `tof_tbl` (cell) broken separate .fcs files","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_fcs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a series of .fcs files from a tof_tbl — tof_write_fcs","text":"","code":"tof_write_fcs(tof_tibble, group_cols, out_path, sep = \"_\", file_name)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_fcs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a series of .fcs files from a tof_tbl — tof_write_fcs","text":"tof_tibble `tof_tbl` `tibble`. group_cols Unquoted names columns `tof_tibble` used group cells separate files. Supports tidyselect helpers. Defaults NULL (cells written single file). out_path system path indicating directory output .csv files saved. directory exist, created. sep Delimiter used values `group_cols` create output .fcs file names. Defaults \"_\". file_name `group_cols` specified, name (without extension) used saved .csv file.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_fcs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write a series of .fcs files from a tof_tbl — tof_write_fcs","text":"function return anything. Instead, side-effect saving .fcs files `out_path`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_fcs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write a series of .fcs files from a tof_tbl — tof_write_fcs","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":null,"dir":"Reference","previous_headings":"","what":"Select variables with a function — where","title":"Select variables with a function — where","text":"copy , selection helper selects variables predicate function returns TRUE. See  language details tidyselection.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select variables with a function — where","text":"","code":"where(fn)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select variables with a function — where","text":"fn function returns TRUE FALSE (technically, predicate function). Can also purrr-like formula.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select variables with a function — where","text":"predicate can used select columns data.frame.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Select variables with a function — where","text":"help file replicated verbatim tidyselect-package.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Select variables with a function — where","text":"Lionel Henry Hadley Wickham (2021). tidyselect: Select Set Strings. R package version 1.1.1. https://CRAN.R-project.org/package=tidyselect","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select variables with a function — where","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/news/index.html","id":"tidytof-0991","dir":"Changelog","previous_headings":"","what":"tidytof 0.99.1","title":"tidytof 0.99.1","text":"NEW FEATURES Removed unnecessary files caused build fail. SIGNIFICANT USER-VISIBLE CHANGES None BUG FIXES None","code":""},{"path":"https://keyes-timothy.github.io/tidytof/news/index.html","id":"tidytof-0990","dir":"Changelog","previous_headings":"","what":"tidytof 0.99.0","title":"tidytof 0.99.0","text":"NEW FEATURES Added NEWS.md file track changes package. SIGNIFICANT USER-VISIBLE CHANGES Submitted Bioconductor BUG FIXES None","code":""}]
