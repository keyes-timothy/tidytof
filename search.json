[{"path":"https://keyes-timothy.github.io/tidytof/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to tidytof","title":"Contributing to tidytof","text":"outlines propose change tidytof. detailed info contributing , tidyverse packages, please see development contributing guide.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to tidytof","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to tidytof","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to tidytof","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"keyes-timothy/tidytof\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to tidytof","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to tidytof","text":"Please note tidytof project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2020 Timothy Keyes Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/clustering.html","id":"clustering-with-tof_cluster","dir":"Articles","previous_headings":"","what":"Clustering with tof_cluster()","title":"Clustering and metaclustering","text":"demonstrate, can apply PhenoGraph clustering algorithm tidytof’s built-phenograph_data. Note phenograph_data contains 3000 total cells (1000 3 clusters identified original PhenoGraph publication). demonstration purposes, also metacluster PhenoGraph clusters using k-means clustering. outputs tof_cluster() tof_metacluster() tof_tbl identical input tibble, now addition additional column (case, “.phenograph_cluster” “.kmeans_metacluster”) encodes cluster id cell input tof_tbl. Note output columns added tibble tof_tbl tidytof begin full-stop (“.”) reduce likelihood collisions existing column names. output tof_cluster tof_tbl, can use dplyr’s count method assess accuracy clustering procedure compared original clustering PhenoGraph paper. , can see clustering procedure groups cells PhenoGraph cluster one another (small number mistakes). change clustering algorithm tof_cluster uses, alter method flag. change columns used compute clusters, change cluster_cols flag. finally, want return one-column tibble includes cluster labels (opposed cluster labels added new column input tof_tbl), set augment FALSE.","code":"data(phenograph_data)  set.seed(203L)  phenograph_clusters <-     phenograph_data |>     tof_preprocess() |>     tof_cluster(         cluster_cols = starts_with(\"cd\"),         num_neighbors = 50L,         distance_function = \"cosine\",         method = \"phenograph\"     ) |>     tof_metacluster(         cluster_col = .phenograph_cluster,         metacluster_cols = starts_with(\"cd\"),         num_metaclusters = 3L,         method = \"kmeans\"     )  phenograph_clusters |>     dplyr::select(sample_name, .phenograph_cluster, .kmeans_metacluster) |>     head() #> # A tibble: 6 × 3 #>   sample_name            .phenograph_cluster .kmeans_metacluster #>   <chr>                  <chr>               <chr>               #> 1 H1_PhenoGraph_cluster1 6                   2                   #> 2 H1_PhenoGraph_cluster1 1                   2                   #> 3 H1_PhenoGraph_cluster1 6                   2                   #> 4 H1_PhenoGraph_cluster1 6                   2                   #> 5 H1_PhenoGraph_cluster1 6                   2                   #> 6 H1_PhenoGraph_cluster1 6                   2 phenograph_clusters |>     dplyr::count(phenograph_cluster, .kmeans_metacluster, sort = TRUE) #> # A tibble: 4 × 3 #>   phenograph_cluster .kmeans_metacluster     n #>   <chr>              <chr>               <int> #> 1 cluster2           3                    1000 #> 2 cluster3           1                    1000 #> 3 cluster1           2                     995 #> 4 cluster1           1                       5 # use the kmeans algorithm phenograph_data |>     tof_preprocess() |>     tof_cluster(         cluster_cols = contains(\"cd\"),         method = \"kmeans\"     )  # use the flowsom algorithm phenograph_data |>     tof_preprocess() |>     tof_cluster(         cluster_cols = contains(\"cd\"),         method = \"flowsom\"     ) # will result in a tibble with only 1 column (the cluster labels) phenograph_data |>     tof_preprocess() |>     tof_cluster(         cluster_cols = contains(\"cd\"),         method = \"kmeans\",         augment = FALSE     ) |>     head() #> # A tibble: 6 × 1 #>   .kmeans_cluster #>   <chr>           #> 1 2               #> 2 1               #> 3 19              #> 4 9               #> 5 2               #> 6 9"},{"path":"https://keyes-timothy.github.io/tidytof/articles/clustering.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Clustering and metaclustering","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] dplyr_1.1.4    tidytof_0.99.6 #>  #> loaded via a namespace (and not attached): #>   [1] tidyselect_1.2.1    viridisLite_0.4.2   timeDate_4032.109   #>   [4] farver_2.1.1        viridis_0.6.5       ggraph_2.2.1        #>   [7] fastmap_1.1.1       tweenr_2.0.3        rpart_4.1.23        #>  [10] digest_0.6.35       timechange_0.3.0    lifecycle_1.0.4     #>  [13] yardstick_1.3.1     survival_3.5-8      magrittr_2.0.3      #>  [16] compiler_4.3.3      rlang_1.1.3         sass_0.4.9          #>  [19] tools_4.3.3         igraph_2.0.3        utf8_1.2.4          #>  [22] yaml_2.3.8          data.table_1.15.2   knitr_1.45          #>  [25] graphlayouts_1.1.1  withr_3.0.0         purrr_1.0.2         #>  [28] RProtoBufLib_2.14.1 BiocGenerics_0.48.1 desc_1.4.3          #>  [31] nnet_7.3-19         grid_4.3.3          polyclip_1.10-6     #>  [34] stats4_4.3.3        fansi_1.0.6         RcppHNSW_0.6.0      #>  [37] future_1.33.1       colorspace_2.1-0    ggplot2_3.5.0       #>  [40] globals_0.16.3      scales_1.3.0        iterators_1.0.14    #>  [43] MASS_7.3-60.0.1     cli_3.6.2           rmarkdown_2.26      #>  [46] ragg_1.3.0          generics_0.1.3      future.apply_1.11.1 #>  [49] tzdb_0.4.0          cachem_1.0.8        flowCore_2.14.2     #>  [52] ggforce_0.4.2       stringr_1.5.1       splines_4.3.3       #>  [55] parallel_4.3.3      matrixStats_1.2.0   vctrs_0.6.5         #>  [58] hardhat_1.3.1       glmnet_4.1-8        Matrix_1.6-5        #>  [61] jsonlite_1.8.8      cytolib_2.14.1      hms_1.1.3           #>  [64] S4Vectors_0.40.2    ggrepel_0.9.5       listenv_0.9.1       #>  [67] systemfonts_1.0.6   foreach_1.5.2       gower_1.0.1         #>  [70] tidyr_1.3.1         jquerylib_0.1.4     recipes_1.0.10      #>  [73] parallelly_1.37.1   glue_1.7.0          pkgdown_2.0.7       #>  [76] codetools_0.2-19    stringi_1.8.3       lubridate_1.9.3     #>  [79] gtable_0.3.4        shape_1.4.6.1       munsell_0.5.0       #>  [82] tibble_3.2.1        pillar_1.9.0        htmltools_0.5.7     #>  [85] ipred_0.9-14        lava_1.8.0          R6_2.5.1            #>  [88] textshaping_0.3.7   doParallel_1.0.17   tidygraph_1.3.1     #>  [91] evaluate_0.23       Biobase_2.62.0      lattice_0.22-5      #>  [94] readr_2.1.5         memoise_2.0.1       bslib_0.6.2         #>  [97] class_7.3-22        Rcpp_1.0.12         prodlim_2023.08.28  #> [100] gridExtra_2.3       xfun_0.42           fs_1.6.3            #> [103] pkgconfig_2.0.3"},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"general-guidelines","dir":"Articles","previous_headings":"","what":"General Guidelines","title":"How to contribute code","text":"extend tidytof include new algorithm - example, one ’ve just developed - can take 1 2 general strategies (cases, may take !). first write tidytof-style verb algorithm can included standalone package. case, benefit writing tidytof-style verb algorithm taking advantage tidytof’s design schema make algorithm easy users access without learning much () new syntax still allowing maintain code base independently team. second approach write tidytof-style function ’d like team add tidytof next release. case, code review process take bit time, also allow teams collaborate provide greater degree critical feedback one another well share burden code maintenance future. either case, ’re welcome contact tidytof team review code via pull request /issue tidytof GitHub page. tutorial may helpful don’t lot experience collaborating programmers via GitHub. open request, can submit code team reviewed. Whether want method incorporated tidytof ’re simply looking external code review/feedback team, please mention request.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"code-style","dir":"Articles","previous_headings":"","what":"Code style","title":"How to contribute code","text":"tidytof uses tidyverse style guide. Adhering tidyverse style something team expect code incorporated tidytof, ’s also something encourage functions write analysis packages. experience, best code written just executed, also read humans! also many tools can use lint automatically style R code, {lintr} {styler} packages.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"testing","dir":"Articles","previous_headings":"","what":"Testing","title":"How to contribute code","text":"addition written well-styled code, encourage write unit tests every function write. common practice software engineering world, common probably (!) bioinformatics community. tidytof team uses {testthat} package unit tests, ’s great tutorial .","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"general-principles","dir":"Articles","previous_headings":"How to contribute","what":"General principles","title":"How to contribute code","text":"important part writing function extends tidytof adhere tidytof verb syntax. exceptions, tidytof functions follow specific, shared syntax involves 3 types arguments always occur order. argument types follows: almost tidytof functions, first argument data frame (tibble). enables use pipe (|>) multi-step calculations, means first argument functions implicit (passed previous function using pipe). second group arguments called column specifications, end suffix _col _cols. Column specifications unquoted column names tell tidytof verb columns compute particular operation. example, cluster_cols argument tof_cluster allows user specify column input data frames used perform clustering. Regardless verb requires , column specifications support tidyselect helpers follow rules tidyselection tidyverse verbs like dplyr::select() tidyr::pivot_longer(). Finally, third group arguments tidytof verb called method specifications, ’re comprised every argument isn’t input data frame column specification. Whereas column specifications represent columns used perform operation, method specifications represent details operation performed. example, tof_cluster_phenograph() function requires method specification num_neighbors, specifies many nearest neighbors used construct PhenoGraph algorithm’s k-nearest-neighbor graph. exceptions, tidytof extension include 3 argument types (order). addition, functions extend tidytof name starts prefix tof_. make easier users find tidytof functions using text completion functionality included development environments.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"contributing-a-new-method-to-an-existing-tidytof-verb","dir":"Articles","previous_headings":"How to contribute","what":"Contributing a new method to an existing {tidytof} verb","title":"How to contribute code","text":"tidytof currently includes multiple verbs perform fundamental single-cell data manipulation tasks. Currently, tidytof’s extensible verbs following: tof_analyze_abundance: Perform differential cluster abundance analysis tof_analyze_expression: Perform differential marker expression analysis tof_annotate_clusters: Annotate clusters manual IDs tof_batch_correct: Perform batch correction tof_cluster: Cluster cells subpopulations tof_downsample: Subsample dataset smaller number cells tof_extract: Calculate sample-level summary statistics tof_metacluster: Metacluster clusters smaller number subpopulations tof_plot_cells: Plot cell-level data tof_plot_clusters: Plot cluster-level data tof_plot_model: Plot results sample-level model tof_read_data: Read data memory disk tof_reduce_dimensions: Perform dimensionality reduction tof_transform: Transform marker expression values vectorized fashion tof_upsample: Assign new cells existing clusters (defined downsample dataset) tof_write_data: Write data memory disk tidytof verb wraps family related functions perform basic task. example, tof_cluster verb wrapper following functions: tof_cluster_ddpr, tof_cluster_flowsom, tof_cluster_kmeans, tof_cluster_phenograph. functions implement different clustering algorithm, share underlying logic standardized tof_cluster abstraction. practice, means users can apply DDPR, FlowSOM, K-means, PhenoGraph clustering algorithms datasets either calling one tof_cluster_* functions directly, calling tof_cluster method argument set appropriate value (“ddpr”, “flowsom”, “kmeans”, “phenograph”, respectively). extend existing tidytof verb, write function whose name fits pattern tof_{verb name}_*, “*” represents name algorithm used perform computation. function definition, try share many arguments possible tidytof verb ’re extending, return output object described “Value” heading help file verb extended. example, suppose wanted write tidytof-style interface new clustering algorithm “supercluster”, performs k-means clustering dataset twice outputs final cluster assignment equal two k-means cluster assignments spliced together. add supercluster algorithm tidytof, might write function like : example , note tof_cluster_supercluster named using tof_{verb name}_* style, function definition uses tof_tibble cluster_cols arguments tof_cluster, returned output object tof_tbl single column encoding cluster ids cells tof_tibble.","code":"#' Perform superclustering on high-dimensional cytometry data. #' #' This function applies the silly, hypothetical clustering algorithm #' \"supercluster\" to high-dimensional cytometry data using user-specified #' input variables/cytometry measurements. #' #' @param tof_tibble A `tof_tbl` or `tibble`. #' #' @param cluster_cols Unquoted column names indicating which columns in #' `tof_tibble` to use in computing the supercluster clusters. #' Supports tidyselect helpers. #' #' @param num_kmeans_clusters An integer indicating how many clusters should be #' used for the two k-means clustering steps. #' #' @param sep A string to use when splicing the 2 k-means clustering assignments #' to one another. #' #' @param ... Optional additional parameters to pass to #' \\code{\\link[tidytof]{tof_cluster_kmeans}} #' #' @return A tibble with one column named `.supercluster_cluster` containing #' a character vector of length `nrow(tof_tibble)` indicating the id of the #' supercluster cluster to which each cell (i.e. each row) in `tof_tibble` was #' assigned. #' #' @importFrom dplyr tibble #' tof_cluster_supercluster <-     function(tof_tibble, cluster_cols, num_kmeans_clusters = 10L, sep = \"_\", ...) {         kmeans_1 <-             tof_tibble |>             tof_cluster_kmeans(                 cluster_cols = {{ cluster_cols }},                 num_clusters = num_kmeans_clusters,                 ...             )          kmeans_2 <-             tof_tibble |>             tof_cluster_kmeans(                 cluster_cols = {{ cluster_cols }},                 num_clusters = num_kmeans_clusters,                 ...             )          final_result <-             dplyr::tibble(                 .supercluster_cluster =                     paste(kmeans_1$.kmeans_cluster, kmeans_2$.kmeans_cluster, sep = sep)             )          return(final_result)     }"},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"creating-a-new-tidytof-verb","dir":"Articles","previous_headings":"How to contribute","what":"Creating a new {tidytof} verb","title":"How to contribute code","text":"want contribute function tidytof represents new operation encompassed existing verbs , include suggestion create new verb pull request tidytof team. case, ’ll considerably flexibility define interface tidytof use implement new verb, tidytof team happy work figure makes sense (least brainstorm together).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"a-note-about-modeling-functions","dir":"Articles","previous_headings":"How to contribute","what":"A note about modeling functions","title":"How to contribute code","text":"point development, don’t recommend extending tidytof’s modeling functionality, likely abstracted standalone package (emphasis interoperability tidymodels ecosystem) point future.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"contact-us","dir":"Articles","previous_headings":"","what":"Contact us","title":"How to contribute code","text":"general questions/comments/concerns tidytof, feel free reach team GitHub .","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"How to contribute code","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> loaded via a namespace (and not attached): #>  [1] digest_0.6.35     desc_1.4.3        R6_2.5.1          fastmap_1.1.1     #>  [5] xfun_0.42         magrittr_2.0.3    cachem_1.0.8      knitr_1.45        #>  [9] memoise_2.0.1     htmltools_0.5.7   rmarkdown_2.26    lifecycle_1.0.4   #> [13] cli_3.6.2         vctrs_0.6.5       sass_0.4.9        pkgdown_2.0.7     #> [17] textshaping_0.3.7 jquerylib_0.1.4   systemfonts_1.0.6 compiler_4.3.3    #> [21] purrr_1.0.2       tools_4.3.3       ragg_1.3.0        bslib_0.6.2       #> [25] evaluate_0.23     yaml_2.3.8        jsonlite_1.8.8    rlang_1.1.3       #> [29] fs_1.6.3"},{"path":"https://keyes-timothy.github.io/tidytof/articles/differential-discovery-analysis.html","id":"accessing-the-data-for-this-vignette","dir":"Articles","previous_headings":"","what":"Accessing the data for this vignette","title":"Differential discovery analysis","text":"demonstrate use verbs, ’ll first download dataset originally collected development CITRUS algorithm. data available HDCytoData package, available Bioconductor can downloaded following command: load CITRUS data current R session, can call function HDCytoData, provide us format {flowCore} package (called “flowSet”). convert tidy tibble, can use tidytof built-method converting flowCore objects tof_tbl’s . Thus, can see citrus_data tof_tbl 172791 cells (one row) 39 pieces information cell (one column). can also extract metadata raw data join single-cell data using functions tidyverse: Thus, now sample-level information patient sample collected stimulation condition (“Basal” “BCR-XL”) sample exposed data acquisition. Finally, can join metadata single-cell tof_tbl obtain cleaned dataset. data cleaning steps, now citrus_data, tof_tbl containing cells collected 8 patients. Specifically, 2 samples taken patient: one cells’ B-cell receptors stimulated (BCR-XL) one (Basal). citrus_data, cell’s patient origin stored patient column, cell’s stimulation condition stored stimulation column. addition, population_id column stores information cluster labels applied cell using combination FlowSOM clustering manual merging (details, run ?HDCytoData::Bodenmiller_BCR_XL R console).","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE)) {     install.packages(\"BiocManager\") }  BiocManager::install(\"HDCytoData\") citrus_raw <- HDCytoData::Bodenmiller_BCR_XL_flowSet()  citrus_data <-     citrus_raw |>     as_tof_tbl(sep = \"_\") citrus_metadata <-     tibble(         file_name = as.character(flowCore::pData(citrus_raw)[[1]]),         sample_id = 1:length(file_name),         patient = stringr::str_extract(file_name, \"patient[:digit:]\"),         stimulation = stringr::str_extract(file_name, \"(BCR-XL)|Reference\")     ) |>     mutate(         stimulation = if_else(stimulation == \"Reference\", \"Basal\", stimulation)     )  citrus_metadata |>     head() #> # A tibble: 6 × 4 #>   file_name                          sample_id patient  stimulation #>   <chr>                                  <int> <chr>    <chr>       #> 1 PBMC8_30min_patient1_BCR-XL.fcs            1 patient1 BCR-XL      #> 2 PBMC8_30min_patient1_Reference.fcs         2 patient1 Basal       #> 3 PBMC8_30min_patient2_BCR-XL.fcs            3 patient2 BCR-XL      #> 4 PBMC8_30min_patient2_Reference.fcs         4 patient2 Basal       #> 5 PBMC8_30min_patient3_BCR-XL.fcs            5 patient3 BCR-XL      #> 6 PBMC8_30min_patient3_Reference.fcs         6 patient3 Basal citrus_data <-     citrus_data |>     left_join(citrus_metadata, by = \"sample_id\")"},{"path":"https://keyes-timothy.github.io/tidytof/articles/differential-discovery-analysis.html","id":"differential-abundance-analysis-using-tof_analyze_abundance","dir":"Articles","previous_headings":"","what":"Differential abundance analysis using tof_analyze_abundance()","title":"Differential discovery analysis","text":"might wonder certain clusters expand deplete within patients two stimulation conditions described - question requires differential abundance analysis (DAA). tidytof’s tof_analyze_abundance() verb supports use 3 statistical approaches performing DAA: diffcyt, generalized-linear mixed modeling (GLMMs), simple t-tests. setup described uses paired design 2 experimental conditions interest (Basal vs. BCR-XL), can use paired t-test method: Based output, can see 6 8 clusters statistically different abundance two stimulation conditions. Using tidytof easy integration tidyverse packages, can use result visualize fold-changes cluster (within patient) BCR-XL condition compared Basal condition using ggplot2:  Importantly, output tof_analyze_abundance depends slightly underlying statistical method used, details can found documentation tof_analyze_abundance_* function family member: tof_analyze_abundance_diffcyt tof_analyze_abundance_glmm tof_analyze_abundance_ttest","code":"daa_result <-     citrus_data |>     tof_analyze_abundance(         cluster_col = population_id,         effect_col = stimulation,         group_cols = patient,         test_type = \"paired\",         method = \"ttest\"     )  daa_result #> # A tibble: 8 × 8 #>   population_id    p_val   p_adj significant      t    df mean_diff mean_fc #>   <chr>            <dbl>   <dbl> <chr>        <dbl> <dbl>     <dbl>   <dbl> #> 1 1             0.000924 0.00535 \"*\"         -5.48      7  -0.00743   0.644 #> 2 2             0.00623  0.0166  \"*\"         -3.86      7  -0.0156    0.674 #> 3 3             0.0235   0.0314  \"*\"         -2.88      7  -0.0638    0.849 #> 4 4             0.0235   0.0314  \"*\"          2.88      7   0.0832    1.38  #> 5 5             0.0116   0.0232  \"*\"          3.39      7   0.00246   1.08  #> 6 6             0.371    0.371   \"\"          -0.955     7  -0.0168    0.919 #> 7 7             0.00134  0.00535 \"*\"          5.14      7   0.0202    1.14  #> 8 8             0.236    0.270   \"\"          -1.30      7  -0.00228   0.901 plot_data <-     citrus_data |>     mutate(population_id = as.character(population_id)) |>     left_join(         select(daa_result, population_id, significant, mean_fc),         by = \"population_id\"     ) |>     dplyr::count(patient, stimulation, population_id, significant, mean_fc, name = \"n\") |>     group_by(patient, stimulation) |>     mutate(prop = n / sum(n)) |>     ungroup() |>     pivot_wider(         names_from = stimulation,         values_from = c(prop, n),     ) |>     mutate(         diff = `prop_BCR-XL` - prop_Basal,         fc = `prop_BCR-XL` / prop_Basal,         population_id = fct_reorder(population_id, diff),         direction =             case_when(                 mean_fc > 1 & significant == \"*\" ~ \"increase\",                 mean_fc < 1 & significant == \"*\" ~ \"decrease\",                 TRUE ~ NA_character_             )     )  significance_data <-     plot_data |>     group_by(population_id, significant, direction) |>     summarize(diff = max(diff), fc = max(fc)) |>     ungroup()  plot_data |>     ggplot(aes(x = population_id, y = fc, fill = direction)) +     geom_violin(trim = FALSE) +     geom_hline(yintercept = 1, color = \"red\", linetype = \"dotted\", size = 0.5) +     geom_point() +     geom_text(         aes(x = population_id, y = fc, label = significant),         data = significance_data,         size = 8,         nudge_x = 0.2,         nudge_y = 0.06     ) +     scale_x_discrete(labels = function(x) str_c(\"cluster \", x)) +     scale_fill_manual(         values = c(\"decrease\" = \"#cd5241\", \"increase\" = \"#207394\"),         na.translate = FALSE     ) +     labs(         x = NULL,         y = \"Abundance fold-change (stimulated / basal)\",         fill = \"Effect\",         caption = \"Asterisks indicate significance at an adjusted p-value of 0.05\"     ) #> Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0. #> ℹ Please use `linewidth` instead. #> This warning is displayed once every 8 hours. #> Call `lifecycle::last_lifecycle_warnings()` to see where this warning was #> generated."},{"path":"https://keyes-timothy.github.io/tidytof/articles/differential-discovery-analysis.html","id":"differential-expression-analysis-with-tof_analyze_expression","dir":"Articles","previous_headings":"","what":"Differential expression analysis with tof_analyze_expression()","title":"Differential discovery analysis","text":"Similarly, suppose ’re interested intracellular signaling proteins change expression levels two stimulation conditions clusters. Differential Expression Analysis (DEA) can performed using tidytof’s tof_analyze_expression verb. , can use paired t-tests multiple-hypothesis correction test significant differences cluster’s expression signaling markers stimulation conditions. output tof_analyze_expression() also depends underlying test used, can see result looks relatively similar output tof_analyze_abundance(). , output tibble row represents differential expression results single cluster-marker pair - example, first row represents difference expression pS6 cluster 1 BCR-XL Basal conditions. row includes raw p-value multiple-hypothesis-corrected p-value cluster-marker pair. result can used make volcano plot visualize results cluster-marker pairs:  , details can found documentation tof_analyze_expression_* function family member: tof_analyze_expression_diffcyt tof_analyze_expression_lmm tof_analyze_expression_ttest","code":"signaling_markers <-     c(         \"pNFkB_Nd142\", \"pStat5_Nd150\", \"pAkt_Sm152\", \"pStat1_Eu153\", \"pStat3_Gd158\",         \"pSlp76_Dy164\", \"pBtk_Er166\", \"pErk_Er168\", \"pS6_Yb172\", \"pZap70_Gd156\"     )  dea_result <-     citrus_data |>     tof_preprocess(channel_cols = any_of(signaling_markers)) |>     tof_analyze_expression(         method = \"ttest\",         cluster_col = population_id,         marker_cols = any_of(signaling_markers),         effect_col = stimulation,         group_cols = patient,         test_type = \"paired\"     )  dea_result |>     head() #> # A tibble: 6 × 9 #>   population_id marker   p_val   p_adj significant     t    df mean_diff mean_fc #>   <chr>         <chr>    <dbl>   <dbl> <chr>       <dbl> <dbl>     <dbl>   <dbl> #> 1 1             pS6_Y… 7.58e-8 2.12e-6 *            22.9     7     2.56    4.31  #> 2 2             pS6_Y… 1.16e-7 2.12e-6 *            21.6     7     2.13    2.49  #> 3 3             pBtk_… 1.32e-7 2.12e-6 *           -21.2     7    -0.475   0.289 #> 4 7             pBtk_… 1.18e-7 2.12e-6 *           -21.5     7    -0.518   0.286 #> 5 8             pBtk_… 1.30e-7 2.12e-6 *           -21.2     7    -0.516   0.324 #> 6 4             pBtk_… 7.85e-7 1.05e-5 *           -16.3     7    -0.462   0.296 volcano_data <-     dea_result |>     mutate(         log2_fc = log(mean_fc, base = 2),         log_p = -log(p_adj),         significance =             case_when(                 p_adj < 0.05 & mean_fc > 1 ~ \"increased\",                 p_adj < 0.05 & mean_fc < 1 ~ \"decreased\",                 TRUE ~ NA_character_             ),         marker =             str_extract(marker, \".+_\") |>                 str_remove(\"_\"),         pair = str_c(marker, str_c(\"cluster \", population_id), sep = \"@\")     )  volcano_data |>     ggplot(aes(x = log2_fc, y = log_p, fill = significance)) +     geom_vline(xintercept = 0, linetype = \"dashed\", color = \"gray50\") +     geom_hline(yintercept = -log(0.05), linetype = \"dashed\", color = \"red\") +     geom_point(shape = 21, size = 2) +     ggrepel::geom_text_repel(         aes(label = pair),         data = slice_head(volcano_data, n = 10L),         size = 2     ) +     scale_fill_manual(         values = c(\"decreased\" = \"#cd5241\", \"increased\" = \"#207394\"),         na.value = \"#cdcdcd\"     ) +     labs(         x = \"log2(Fold-change)\",         y = \"-log10(p-value)\",         fill = NULL,         caption = \"Labels indicate the 10 most significant marker-cluster pairs\"     )"},{"path":"https://keyes-timothy.github.io/tidytof/articles/differential-discovery-analysis.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Differential discovery analysis","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats4    stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #>  [1] HDCytoData_1.22.1           flowCore_2.14.2             #>  [3] SummarizedExperiment_1.32.0 Biobase_2.62.0              #>  [5] GenomicRanges_1.54.1        GenomeInfoDb_1.38.8         #>  [7] IRanges_2.36.0              S4Vectors_0.40.2            #>  [9] MatrixGenerics_1.14.0       matrixStats_1.2.0           #> [11] ExperimentHub_2.10.0        AnnotationHub_3.10.0        #> [13] BiocFileCache_2.10.1        dbplyr_2.5.0                #> [15] BiocGenerics_0.48.1         forcats_1.0.0               #> [17] tidyr_1.3.1                 ggplot2_3.5.0               #> [19] stringr_1.5.1               dplyr_1.1.4                 #> [21] tidytof_0.99.6              #>  #> loaded via a namespace (and not attached): #>   [1] jsonlite_1.8.8                shape_1.4.6.1                 #>   [3] magrittr_2.0.3                farver_2.1.1                  #>   [5] rmarkdown_2.26                fs_1.6.3                      #>   [7] zlibbioc_1.48.2               ragg_1.3.0                    #>   [9] vctrs_0.6.5                   memoise_2.0.1                 #>  [11] RCurl_1.98-1.14               htmltools_0.5.7               #>  [13] S4Arrays_1.2.1                curl_5.2.1                    #>  [15] SparseArray_1.2.4             sass_0.4.9                    #>  [17] parallelly_1.37.1             bslib_0.6.2                   #>  [19] desc_1.4.3                    lubridate_1.9.3               #>  [21] cachem_1.0.8                  igraph_2.0.3                  #>  [23] mime_0.12                     lifecycle_1.0.4               #>  [25] iterators_1.0.14              pkgconfig_2.0.3               #>  [27] Matrix_1.6-5                  R6_2.5.1                      #>  [29] fastmap_1.1.1                 shiny_1.8.0                   #>  [31] GenomeInfoDbData_1.2.11       future_1.33.1                 #>  [33] digest_0.6.35                 colorspace_2.1-0              #>  [35] AnnotationDbi_1.64.1          textshaping_0.3.7             #>  [37] RSQLite_2.3.5                 labeling_0.4.3                #>  [39] filelock_1.0.3                cytolib_2.14.1                #>  [41] fansi_1.0.6                   yardstick_1.3.1               #>  [43] timechange_0.3.0              httr_1.4.7                    #>  [45] polyclip_1.10-6               abind_1.4-5                   #>  [47] compiler_4.3.3                bit64_4.0.5                   #>  [49] withr_3.0.0                   doParallel_1.0.17             #>  [51] viridis_0.6.5                 DBI_1.2.2                     #>  [53] highr_0.10                    ggforce_0.4.2                 #>  [55] MASS_7.3-60.0.1               lava_1.8.0                    #>  [57] rappdirs_0.3.3                DelayedArray_0.28.0           #>  [59] tools_4.3.3                   interactiveDisplayBase_1.40.0 #>  [61] httpuv_1.6.14                 future.apply_1.11.1           #>  [63] nnet_7.3-19                   glue_1.7.0                    #>  [65] promises_1.2.1                grid_4.3.3                    #>  [67] generics_0.1.3                recipes_1.0.10                #>  [69] gtable_0.3.4                  tzdb_0.4.0                    #>  [71] class_7.3-22                  data.table_1.15.2             #>  [73] hms_1.1.3                     tidygraph_1.3.1               #>  [75] utf8_1.2.4                    XVector_0.42.0                #>  [77] ggrepel_0.9.5                 BiocVersion_3.18.1            #>  [79] foreach_1.5.2                 pillar_1.9.0                  #>  [81] RcppHNSW_0.6.0                later_1.3.2                   #>  [83] splines_4.3.3                 tweenr_2.0.3                  #>  [85] lattice_0.22-5                survival_3.5-8                #>  [87] bit_4.0.5                     RProtoBufLib_2.14.1           #>  [89] tidyselect_1.2.1              Biostrings_2.70.3             #>  [91] knitr_1.45                    gridExtra_2.3                 #>  [93] xfun_0.42                     graphlayouts_1.1.1            #>  [95] hardhat_1.3.1                 timeDate_4032.109             #>  [97] stringi_1.8.3                 yaml_2.3.8                    #>  [99] evaluate_0.23                 codetools_0.2-19              #> [101] ggraph_2.2.1                  tibble_3.2.1                  #> [103] BiocManager_1.30.22           cli_3.6.2                     #> [105] rpart_4.1.23                  xtable_1.8-4                  #> [107] systemfonts_1.0.6             munsell_0.5.0                 #> [109] jquerylib_0.1.4               Rcpp_1.0.12                   #> [111] globals_0.16.3                png_0.1-8                     #> [113] parallel_4.3.3                ellipsis_0.3.2                #> [115] pkgdown_2.0.7                 gower_1.0.1                   #> [117] readr_2.1.5                   blob_1.2.4                    #> [119] bitops_1.0-7                  listenv_0.9.1                 #> [121] glmnet_4.1-8                  viridisLite_0.4.2             #> [123] ipred_0.9-14                  scales_1.3.0                  #> [125] prodlim_2023.08.28            purrr_1.0.2                   #> [127] crayon_1.5.2                  rlang_1.1.3                   #> [129] KEGGREST_1.42.0"},{"path":"https://keyes-timothy.github.io/tidytof/articles/dimensionality-reduction.html","id":"dimensionality-reduction-with-tof_reduce_dimensions-","dir":"Articles","previous_headings":"","what":"Dimensionality reduction with tof_reduce_dimensions().","title":"Dimensionality reduction","text":"example call tof_reduce_dimensions() use tSNE visualize data tidytof’s built-phenograph_data dataset. default, tof_reduce_dimensions add reduced-dimension feature embeddings input tof_tbl return augmented tof_tbl (, tof_tbl new columns embedding dimension) result. return features embeddings , set augment FALSE (tof_cluster). Changing method argument results different low-dimensional embeddings:","code":"data(phenograph_data)  # perform the dimensionality reduction phenograph_tsne <-     phenograph_data |>     tof_preprocess() |>     tof_reduce_dimensions(method = \"tsne\") #> Loading required namespace: Rtsne  # select only the tsne embedding columns phenograph_tsne |>     select(contains(\"tsne\")) |>     head() #> # A tibble: 6 × 2 #>   .tsne1 .tsne2 #>    <dbl>  <dbl> #> 1   15.1  -5.50 #> 2   10.0   5.06 #> 3   31.4  16.7  #> 4   18.3   6.31 #> 5   18.2  -2.94 #> 6   18.5  14.8 phenograph_data |>     tof_preprocess() |>     tof_reduce_dimensions(method = \"tsne\", augment = FALSE) #> # A tibble: 3,000 × 2 #>    .tsne1  .tsne2 #>     <dbl>   <dbl> #>  1   17.1   2.43  #>  2   16.5  -3.71  #>  3   15.9 -29.0   #>  4   22.1 -11.8   #>  5   19.2  -0.468 #>  6   15.9 -16.9   #>  7   11.7  -8.09  #>  8   14.9 -22.7   #>  9   12.9 -16.7   #> 10   10.9  -1.26  #> # ℹ 2,990 more rows phenograph_data |>     tof_reduce_dimensions(method = \"umap\", augment = FALSE) #> # A tibble: 3,000 × 2 #>    .umap1  .umap2 #>     <dbl>   <dbl> #>  1  7.00  -6.04   #>  2  7.17  -4.98   #>  3  8.25  -1.61   #>  4  7.57  -0.0927 #>  5  6.97  -6.26   #>  6 -0.478  4.35   #>  7  6.80  -6.59   #>  8  8.73  -0.651  #>  9  6.07  -1.20   #> 10  8.87  -6.11   #> # ℹ 2,990 more rows  phenograph_data |>     tof_reduce_dimensions(method = \"pca\", augment = FALSE) #> # A tibble: 3,000 × 5 #>       .pc1     .pc2   .pc3    .pc4   .pc5 #>      <dbl>    <dbl>  <dbl>   <dbl>  <dbl> #>  1 -2.77    1.23    -0.868  0.978   3.49  #>  2 -0.969  -1.02    -0.787  1.22    0.329 #>  3 -2.36    2.54    -1.95  -0.882  -1.30  #>  4 -3.68   -0.00565  0.962  0.410   0.788 #>  5 -4.03    2.07    -0.829  1.59    5.39  #>  6 -2.59   -0.108    1.32  -1.41   -1.24  #>  7 -1.55   -0.651   -0.233  1.08    0.129 #>  8 -1.18   -0.446    0.134 -0.771  -0.932 #>  9 -2.00   -0.485    0.593 -0.0416 -0.658 #> 10 -0.0356 -0.924   -0.692  1.45    0.270 #> # ℹ 2,990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/dimensionality-reduction.html","id":"method-specifications-for-tof_reduce_-functions","dir":"Articles","previous_headings":"","what":"Method specifications for tof_reduce_*() functions","title":"Dimensionality reduction","text":"tof_reduce_dimensions() provides high-level API three lower-level functions: tof_reduce_pca(), tof_reduce_umap(), tof_reduce_tsne(). help files functions provide details algorithm-specific method specifications associated dimensionality reduction approaches. example, tof_reduce_pca takes num_comp argument determine many principal components returned: see ?tof_reduce_pca, ?tof_reduce_umap, ?tof_reduce_tsne additional details.","code":"# 2 principal components phenograph_data |>     tof_reduce_pca(num_comp = 2) #> # A tibble: 3,000 × 2 #>       .pc1     .pc2 #>      <dbl>    <dbl> #>  1 -2.77    1.23    #>  2 -0.969  -1.02    #>  3 -2.36    2.54    #>  4 -3.68   -0.00565 #>  5 -4.03    2.07    #>  6 -2.59   -0.108   #>  7 -1.55   -0.651   #>  8 -1.18   -0.446   #>  9 -2.00   -0.485   #> 10 -0.0356 -0.924   #> # ℹ 2,990 more rows # 3 principal components phenograph_data |>     tof_reduce_pca(num_comp = 3) #> # A tibble: 3,000 × 3 #>       .pc1     .pc2   .pc3 #>      <dbl>    <dbl>  <dbl> #>  1 -2.77    1.23    -0.868 #>  2 -0.969  -1.02    -0.787 #>  3 -2.36    2.54    -1.95  #>  4 -3.68   -0.00565  0.962 #>  5 -4.03    2.07    -0.829 #>  6 -2.59   -0.108    1.32  #>  7 -1.55   -0.651   -0.233 #>  8 -1.18   -0.446    0.134 #>  9 -2.00   -0.485    0.593 #> 10 -0.0356 -0.924   -0.692 #> # ℹ 2,990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/dimensionality-reduction.html","id":"visualization-using-tof_plot_cells_embedding","dir":"Articles","previous_headings":"","what":"Visualization using tof_plot_cells_embedding()","title":"Dimensionality reduction","text":"Regardless method used, reduced-dimension feature embeddings can visualized using ggplot2 (graphics package). tidytof also provides helper functions easily generating dimensionality reduction plots tof_tbl tibble columns representing embedding dimensions:   visualizations can helpful qualitatively describing phenotypic differences clusters dataset. example, example , can see one clusters high CD11b expression, whereas others lower CD11b expression.","code":"# plot the tsne embeddings using color to distinguish between clusters phenograph_tsne |>     tof_plot_cells_embedding(         embedding_cols = contains(\".tsne\"),         color_col = phenograph_cluster     ) # plot the tsne embeddings using color to represent CD11b expression phenograph_tsne |>     tof_plot_cells_embedding(         embedding_cols = contains(\".tsne\"),         color_col = cd11b     ) +     ggplot2::scale_fill_viridis_c()"},{"path":"https://keyes-timothy.github.io/tidytof/articles/dimensionality-reduction.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Dimensionality reduction","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] ggplot2_3.5.0  dplyr_1.1.4    tidytof_0.99.6 #>  #> loaded via a namespace (and not attached): #>   [1] gridExtra_2.3       rlang_1.1.3         magrittr_2.0.3      #>   [4] RcppAnnoy_0.0.22    matrixStats_1.2.0   compiler_4.3.3      #>   [7] systemfonts_1.0.6   vctrs_0.6.5         stringr_1.5.1       #>  [10] pkgconfig_2.0.3     shape_1.4.6.1       fastmap_1.1.1       #>  [13] ellipsis_0.3.2      labeling_0.4.3      ggraph_2.2.1        #>  [16] utf8_1.2.4          rmarkdown_2.26      prodlim_2023.08.28  #>  [19] tzdb_0.4.0          ragg_1.3.0          purrr_1.0.2         #>  [22] xfun_0.42           glmnet_4.1-8        cachem_1.0.8        #>  [25] jsonlite_1.8.8      recipes_1.0.10      highr_0.10          #>  [28] tweenr_2.0.3        irlba_2.3.5.1       parallel_4.3.3      #>  [31] R6_2.5.1            bslib_0.6.2         stringi_1.8.3       #>  [34] parallelly_1.37.1   rpart_4.1.23        lubridate_1.9.3     #>  [37] jquerylib_0.1.4     Rcpp_1.0.12         iterators_1.0.14    #>  [40] knitr_1.45          future.apply_1.11.1 readr_2.1.5         #>  [43] flowCore_2.14.2     Matrix_1.6-5        splines_4.3.3       #>  [46] nnet_7.3-19         igraph_2.0.3        timechange_0.3.0    #>  [49] tidyselect_1.2.1    yaml_2.3.8          viridis_0.6.5       #>  [52] timeDate_4032.109   doParallel_1.0.17   codetools_0.2-19    #>  [55] listenv_0.9.1       lattice_0.22-5      tibble_3.2.1        #>  [58] Biobase_2.62.0      withr_3.0.0         evaluate_0.23       #>  [61] Rtsne_0.17          future_1.33.1       desc_1.4.3          #>  [64] survival_3.5-8      polyclip_1.10-6     embed_1.1.4         #>  [67] pillar_1.9.0        foreach_1.5.2       stats4_4.3.3        #>  [70] generics_0.1.3      RcppHNSW_0.6.0      S4Vectors_0.40.2    #>  [73] hms_1.1.3           munsell_0.5.0       scales_1.3.0        #>  [76] globals_0.16.3      class_7.3-22        glue_1.7.0          #>  [79] tools_4.3.3         data.table_1.15.2   gower_1.0.1         #>  [82] fs_1.6.3            graphlayouts_1.1.1  tidygraph_1.3.1     #>  [85] grid_4.3.3          yardstick_1.3.1     tidyr_1.3.1         #>  [88] RProtoBufLib_2.14.1 ipred_0.9-14        colorspace_2.1-0    #>  [91] ggforce_0.4.2       cli_3.6.2           textshaping_0.3.7   #>  [94] fansi_1.0.6         cytolib_2.14.1      viridisLite_0.4.2   #>  [97] lava_1.8.0          uwot_0.1.16         gtable_0.3.4        #> [100] sass_0.4.9          digest_0.6.35       BiocGenerics_0.48.1 #> [103] ggrepel_0.9.5       farver_2.1.1        memoise_2.0.1       #> [106] htmltools_0.5.7     pkgdown_2.0.7       lifecycle_1.0.4     #> [109] hardhat_1.3.1       MASS_7.3-60.0.1"},{"path":"https://keyes-timothy.github.io/tidytof/articles/downsampling.html","id":"downsampling-with-tof_downsample","dir":"Articles","previous_headings":"","what":"Downsampling with tof_downsample()","title":"Downsampling","text":"Using tidytof’s built-dataset phenograph_data, can see original size dataset 1000 cells per cluster, 3000 cells total: randomly sample 200 cells per cluster, can use tof_downsample() using “constant” method: Alternatively, wanted sample 50% cells cluster, use “prop” method: finally, might also interested taking slightly different approach downsampling reduces number cells fixed constant proportion, fixed density phenotypic space. example, following scatterplot demonstrates certain areas phenotypic density phenograph_data contain cells others along cd34/cd38 axes:  reduce number cells dataset local density around cell dataset relatively constant, can use “density” method tof_downsample:  Thus, can see density downsampling uniform (though exactly uniform) across range cd34/cd38 values phenograph_data.","code":"data(phenograph_data)  phenograph_data |>     dplyr::count(phenograph_cluster) #> # A tibble: 3 × 2 #>   phenograph_cluster     n #>   <chr>              <int> #> 1 cluster1            1000 #> 2 cluster2            1000 #> 3 cluster3            1000 phenograph_data |>     # downsample     tof_downsample(         group_cols = phenograph_cluster,         method = \"constant\",         num_cells = 200     ) |>     # count the number of downsampled cells in each cluster     count(phenograph_cluster) #> # A tibble: 3 × 2 #>   phenograph_cluster     n #>   <chr>              <int> #> 1 cluster1             200 #> 2 cluster2             200 #> 3 cluster3             200 phenograph_data |>     # downsample     tof_downsample(         group_cols = phenograph_cluster,         method = \"prop\",         prop_cells = 0.5     ) |>     # count the number of downsampled cells in each cluster     count(phenograph_cluster) #> # A tibble: 3 × 2 #>   phenograph_cluster     n #>   <chr>              <int> #> 1 cluster1             500 #> 2 cluster2             500 #> 3 cluster3             500 rescale_max <-     function(x, to = c(0, 1), from = range(x, na.rm = TRUE)) {         x / from[2] * to[2]     }  phenograph_data |>     # preprocess all numeric columns in the dataset     tof_preprocess(undo_noise = FALSE) |>     # plot     ggplot(aes(x = cd34, y = cd38)) +     geom_hex() +     coord_fixed(ratio = 0.4) +     scale_x_continuous(limits = c(NA, 1.5)) +     scale_y_continuous(limits = c(NA, 4)) +     scale_fill_viridis_c(         labels = function(x) round(rescale_max(x), 2)     ) +     labs(         fill = \"relative density\"     ) phenograph_data |>     tof_preprocess(undo_noise = FALSE) |>     tof_downsample(method = \"density\", density_cols = c(cd34, cd38)) |>     # plot     ggplot(aes(x = cd34, y = cd38)) +     geom_hex() +     coord_fixed(ratio = 0.4) +     scale_x_continuous(limits = c(NA, 1.5)) +     scale_y_continuous(limits = c(NA, 4)) +     scale_fill_viridis_c(         labels = function(x) round(rescale_max(x), 2)     ) +     labs(         fill = \"relative density\"     )"},{"path":"https://keyes-timothy.github.io/tidytof/articles/downsampling.html","id":"additional-documentation","dir":"Articles","previous_headings":"","what":"Additional documentation","title":"Downsampling","text":"details, check documentation 3 underlying members tof_downsample_* function family (wrapped tof_downsample): tof_downsample_constant tof_downsample_prop tof_downsample_density","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/downsampling.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Downsampling","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] ggplot2_3.5.0  dplyr_1.1.4    tidytof_0.99.6 #>  #> loaded via a namespace (and not attached): #>   [1] gridExtra_2.3       rlang_1.1.3         magrittr_2.0.3      #>   [4] matrixStats_1.2.0   compiler_4.3.3      systemfonts_1.0.6   #>   [7] vctrs_0.6.5         stringr_1.5.1       pkgconfig_2.0.3     #>  [10] shape_1.4.6.1       fastmap_1.1.1       ggraph_2.2.1        #>  [13] utf8_1.2.4          rmarkdown_2.26      prodlim_2023.08.28  #>  [16] tzdb_0.4.0          ragg_1.3.0          purrr_1.0.2         #>  [19] xfun_0.42           glmnet_4.1-8        cachem_1.0.8        #>  [22] jsonlite_1.8.8      recipes_1.0.10      highr_0.10          #>  [25] tweenr_2.0.3        parallel_4.3.3      R6_2.5.1            #>  [28] bslib_0.6.2         stringi_1.8.3       parallelly_1.37.1   #>  [31] rpart_4.1.23        lubridate_1.9.3     jquerylib_0.1.4     #>  [34] Rcpp_1.0.12         iterators_1.0.14    knitr_1.45          #>  [37] future.apply_1.11.1 readr_2.1.5         flowCore_2.14.2     #>  [40] Matrix_1.6-5        splines_4.3.3       nnet_7.3-19         #>  [43] igraph_2.0.3        timechange_0.3.0    tidyselect_1.2.1    #>  [46] yaml_2.3.8          viridis_0.6.5       timeDate_4032.109   #>  [49] doParallel_1.0.17   codetools_0.2-19    listenv_0.9.1       #>  [52] lattice_0.22-5      tibble_3.2.1        Biobase_2.62.0      #>  [55] withr_3.0.0         evaluate_0.23       future_1.33.1       #>  [58] desc_1.4.3          survival_3.5-8      polyclip_1.10-6     #>  [61] pillar_1.9.0        foreach_1.5.2       stats4_4.3.3        #>  [64] generics_0.1.3      RcppHNSW_0.6.0      S4Vectors_0.40.2    #>  [67] hms_1.1.3           munsell_0.5.0       scales_1.3.0        #>  [70] globals_0.16.3      class_7.3-22        glue_1.7.0          #>  [73] tools_4.3.3         data.table_1.15.2   gower_1.0.1         #>  [76] fs_1.6.3            graphlayouts_1.1.1  tidygraph_1.3.1     #>  [79] grid_4.3.3          yardstick_1.3.1     tidyr_1.3.1         #>  [82] RProtoBufLib_2.14.1 ipred_0.9-14        colorspace_2.1-0    #>  [85] ggforce_0.4.2       cli_3.6.2           textshaping_0.3.7   #>  [88] fansi_1.0.6         cytolib_2.14.1      viridisLite_0.4.2   #>  [91] lava_1.8.0          gtable_0.3.4        sass_0.4.9          #>  [94] digest_0.6.35       BiocGenerics_0.48.1 ggrepel_0.9.5       #>  [97] farver_2.1.1        memoise_2.0.1       htmltools_0.5.7     #> [100] pkgdown_2.0.7       lifecycle_1.0.4     hardhat_1.3.1       #> [103] MASS_7.3-60.0.1"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"accessing-the-data-for-this-vignette","dir":"Articles","previous_headings":"","what":"Accessing the data for this vignette","title":"Feature extraction","text":"demonstrate use verbs, ’ll first download dataset originally collected development CITRUS algorithm. data available HDCytoData package, available Bioconductor can downloaded following command: load CITRUS data current R session, can call function HDCytoData, provide us format {flowCore} package (called “flowSet”). convert tidy tibble, can use tidytof built-method converting flowCore objects tof_tbl’s . Thus, can see citrus_data tof_tbl 172791 cells (one row) 39 pieces information cell (one column). can also extract metadata raw data join single-cell data using functions tidyverse: Thus, now sample-level information patient sample collected stimulation condition (“Basal” “BCR-XL”) sample exposed data acquisition. Finally, can join metadata single-cell tof_tbl obtain cleaned dataset. data cleaning steps, now citrus_data, tof_tbl containing cells collected 8 patients. Specifically, 2 samples taken patient: one cells’ B-cell receptors stimulated (BCR-XL) one (Basal). citrus_data, cell’s patient origin stored patient column, cell’s stimulation condition stored stimulation column. addition, population_id column stores information cluster labels applied cell using combination FlowSOM clustering manual merging (details, run ?HDCytoData::Bodenmiller_BCR_XL R console).","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE)) {     install.packages(\"BiocManager\") }  BiocManager::install(\"HDCytoData\") citrus_raw <- HDCytoData::Bodenmiller_BCR_XL_flowSet()  citrus_data <-     citrus_raw |>     as_tof_tbl(sep = \"_\") citrus_metadata <-     tibble(         file_name = as.character(flowCore::pData(citrus_raw)[[1]]),         sample_id = 1:length(file_name),         patient = stringr::str_extract(file_name, \"patient[:digit:]\"),         stimulation = stringr::str_extract(file_name, \"(BCR-XL)|Reference\")     ) |>     mutate(         stimulation = if_else(stimulation == \"Reference\", \"Basal\", stimulation)     )  citrus_metadata |>     head() #> # A tibble: 6 × 4 #>   file_name                          sample_id patient  stimulation #>   <chr>                                  <int> <chr>    <chr>       #> 1 PBMC8_30min_patient1_BCR-XL.fcs            1 patient1 BCR-XL      #> 2 PBMC8_30min_patient1_Reference.fcs         2 patient1 Basal       #> 3 PBMC8_30min_patient2_BCR-XL.fcs            3 patient2 BCR-XL      #> 4 PBMC8_30min_patient2_Reference.fcs         4 patient2 Basal       #> 5 PBMC8_30min_patient3_BCR-XL.fcs            5 patient3 BCR-XL      #> 6 PBMC8_30min_patient3_Reference.fcs         6 patient3 Basal citrus_data <-     citrus_data |>     left_join(citrus_metadata, by = \"sample_id\")"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"calculating-cluster-proportions-using-tof_extract_proportion","dir":"Articles","previous_headings":"","what":"Calculating cluster proportions using tof_extract_proportion()","title":"Feature extraction","text":"First, tof_extract_proportion(), extracts proportion cells cluster within sample (samples defined using group_cols argument): Like members tof_extract_* function family, tof_extract_proportion() returns one row sample (defined unique combination values columns specified group_cols) one column extracted feature (, one column proportion 8 clusters citrus_data). values can also returned “long” format changing format argument:","code":"# preprocess the numeric columns in the citrus dataset citrus_data <-     citrus_data |>     mutate(cluster = str_c(\"cluster\", population_id)) |>     tof_preprocess()  citrus_data |>     tof_extract_proportion(         cluster_col = cluster,         group_cols = c(patient, stimulation)     ) |>     head() #> # A tibble: 6 × 10 #>   patient  stimulation `prop@cluster1` `prop@cluster2` `prop@cluster3` #>   <chr>    <chr>                 <dbl>           <dbl>           <dbl> #> 1 patient1 Basal                0.0190          0.0482           0.447 #> 2 patient1 BCR-XL               0.0109          0.0395           0.268 #> 3 patient2 Basal                0.0130          0.0280           0.491 #> 4 patient2 BCR-XL               0.0101          0.0143           0.358 #> 5 patient3 Basal                0.0326          0.0830           0.397 #> 6 patient3 BCR-XL               0.0200          0.0412           0.323 #> # ℹ 5 more variables: `prop@cluster4` <dbl>, `prop@cluster5` <dbl>, #> #   `prop@cluster6` <dbl>, `prop@cluster7` <dbl>, `prop@cluster8` <dbl> citrus_data |>     tof_extract_proportion(         cluster_col = cluster,         group_cols = c(patient, stimulation),         format = \"long\"     ) |>     head() #> # A tibble: 6 × 4 #>   patient  stimulation cluster     prop #>   <chr>    <chr>       <chr>      <dbl> #> 1 patient1 Basal       cluster1 0.0190  #> 2 patient1 Basal       cluster2 0.0482  #> 3 patient1 Basal       cluster3 0.447   #> 4 patient1 Basal       cluster4 0.237   #> 5 patient1 Basal       cluster5 0.00219 #> 6 patient1 Basal       cluster6 0.0759"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"calculating-cluster-marker-expression-measures-using-tof_extract_central_tendency","dir":"Articles","previous_headings":"","what":"Calculating cluster marker expression measures using tof_extract_central_tendency()","title":"Feature extraction","text":"Another member tof_extract_*() function family, tof_extract_central_tendency(), computes central tendency (e.g. mean median) user-specified markers cluster. argument central_tendency_function can used compute summary statistic. example, following choice central_tendency_function compute 75th percentile marker-cluster pair citrus_data:","code":"citrus_data |>     tof_extract_central_tendency(         cluster_col = cluster,         group_cols = c(patient, stimulation),         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         central_tendency_function = mean     ) |>     head() #> # A tibble: 6 × 26 #>   patient  stimulation `CD45_In115@cluster1_ct` `CD4_Nd145@cluster1_ct` #>   <chr>    <chr>                          <dbl>                   <dbl> #> 1 patient1 BCR-XL                          4.80                  0.0967 #> 2 patient1 Basal                           4.68                  0.765  #> 3 patient2 BCR-XL                          5.00                 -0.0579 #> 4 patient2 Basal                           4.88                  0.808  #> 5 patient3 BCR-XL                          5.04                 -0.0432 #> 6 patient3 Basal                           4.98                  0.745  #> # ℹ 22 more variables: `CD20_Sm147@cluster1_ct` <dbl>, #> #   `CD45_In115@cluster2_ct` <dbl>, `CD4_Nd145@cluster2_ct` <dbl>, #> #   `CD20_Sm147@cluster2_ct` <dbl>, `CD45_In115@cluster3_ct` <dbl>, #> #   `CD4_Nd145@cluster3_ct` <dbl>, `CD20_Sm147@cluster3_ct` <dbl>, #> #   `CD45_In115@cluster4_ct` <dbl>, `CD4_Nd145@cluster4_ct` <dbl>, #> #   `CD20_Sm147@cluster4_ct` <dbl>, `CD45_In115@cluster5_ct` <dbl>, #> #   `CD4_Nd145@cluster5_ct` <dbl>, `CD20_Sm147@cluster5_ct` <dbl>, … citrus_data |>     tof_extract_central_tendency(         cluster_col = cluster,         group_cols = c(patient, stimulation),         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         central_tendency_function = function(x) quantile(x = x, probs = 0.75)     ) |>     head() #> # A tibble: 6 × 26 #>   patient  stimulation `CD45_In115@cluster1_ct` `CD4_Nd145@cluster1_ct` #>   <chr>    <chr>                          <dbl>                   <dbl> #> 1 patient1 BCR-XL                          5.30                 -0.0186 #> 2 patient1 Basal                           5.18                  1.32   #> 3 patient2 BCR-XL                          5.41                 -0.0201 #> 4 patient2 Basal                           5.28                  1.39   #> 5 patient3 BCR-XL                          5.42                 -0.0362 #> 6 patient3 Basal                           5.41                  1.27   #> # ℹ 22 more variables: `CD20_Sm147@cluster1_ct` <dbl>, #> #   `CD45_In115@cluster2_ct` <dbl>, `CD4_Nd145@cluster2_ct` <dbl>, #> #   `CD20_Sm147@cluster2_ct` <dbl>, `CD45_In115@cluster3_ct` <dbl>, #> #   `CD4_Nd145@cluster3_ct` <dbl>, `CD20_Sm147@cluster3_ct` <dbl>, #> #   `CD45_In115@cluster4_ct` <dbl>, `CD4_Nd145@cluster4_ct` <dbl>, #> #   `CD20_Sm147@cluster4_ct` <dbl>, `CD45_In115@cluster5_ct` <dbl>, #> #   `CD4_Nd145@cluster5_ct` <dbl>, `CD20_Sm147@cluster5_ct` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"calculating-the-proportion-of-cells-with-marker-expression-above-a-threshold-using-tof_extract_proportion","dir":"Articles","previous_headings":"","what":"Calculating the proportion of cells with marker expression above a threshold using tof_extract_proportion()","title":"Feature extraction","text":"tof_extract_threshold() similar tof_extract_central_tendency(), calculates proportion cells user-specified expression value marker instead measure central tendency:","code":"citrus_data |>     tof_extract_threshold(         cluster_col = cluster,         group_cols = c(patient, stimulation),         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         threshold = 5     ) |>     head() #> # A tibble: 6 × 26 #>   patient  stimulation `CD45_In115@cluster1_threshold` CD4_Nd145@cluster1_thre…¹ #>   <chr>    <chr>                                 <dbl>                     <dbl> #> 1 patient1 BCR-XL                                0.516                         0 #> 2 patient1 Basal                                 0.365                         0 #> 3 patient2 BCR-XL                                0.554                         0 #> 4 patient2 Basal                                 0.452                         0 #> 5 patient3 BCR-XL                                0.547                         0 #> 6 patient3 Basal                                 0.549                         0 #> # ℹ abbreviated name: ¹​`CD4_Nd145@cluster1_threshold` #> # ℹ 22 more variables: `CD20_Sm147@cluster1_threshold` <dbl>, #> #   `CD45_In115@cluster2_threshold` <dbl>, #> #   `CD4_Nd145@cluster2_threshold` <dbl>, #> #   `CD20_Sm147@cluster2_threshold` <dbl>, #> #   `CD45_In115@cluster3_threshold` <dbl>, #> #   `CD4_Nd145@cluster3_threshold` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"calculating-differences-in-marker-distributions-using-tof_extract_emd-and-tof_extract_jsd","dir":"Articles","previous_headings":"","what":"Calculating differences in marker distributions using tof_extract_emd() and tof_extract_jsd()","title":"Feature extraction","text":"two final members tof_extract_* function family – tof_extract_emd tof_extract_jsd – designed specifically comparing distributions marker expression stimulation conditions. , must given stimulation column (using emd_col jsd_col argument) identifies stimulation condition cell , reference_level specifies reference (.e. unstimulated) condition within emd_col jsd_col. additional arguments, tof_extract_emd computes Earth-mover’s distance marker’s distribution stimulation conditions (within cluster) basal condition; similarly, tof_extract_jsd computes Jensen-Shannon divergence index distributions. values ways compare different 2 distributions one another computationally expensive (also higher-resolution) simply comparing measures central tendency.","code":"# Earth-mover's distance citrus_data |>     tof_extract_emd(         cluster_col = cluster,         group_cols = patient,         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         emd_col = stimulation,         reference_level = \"Basal\"     ) |>     head() #> # A tibble: 6 × 25 #>   patient  BCR-XL_CD45_In115@clu…¹ BCR-XL_CD4_Nd145@clu…² BCR-XL_CD20_Sm147@cl…³ #>   <chr>                      <dbl>                  <dbl>                  <dbl> #> 1 patient1                   0.864                   2.47                  13.0  #> 2 patient2                   1.11                    7.05                  10.8  #> 3 patient3                   0.670                   6.23                  10.5  #> 4 patient4                   2.64                    5.86                   9.90 #> 5 patient5                   0.594                   7.56                   8.13 #> 6 patient6                   0.661                   4.77                   7.97 #> # ℹ abbreviated names: ¹​`BCR-XL_CD45_In115@cluster3_emd`, #> #   ²​`BCR-XL_CD4_Nd145@cluster3_emd`, ³​`BCR-XL_CD20_Sm147@cluster3_emd` #> # ℹ 21 more variables: `BCR-XL_CD45_In115@cluster7_emd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster7_emd` <dbl>, #> #   `BCR-XL_CD20_Sm147@cluster7_emd` <dbl>, #> #   `BCR-XL_CD45_In115@cluster4_emd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster4_emd` <dbl>, … # Jensen-Shannon Divergence citrus_data |>     tof_extract_jsd(         cluster_col = cluster,         group_cols = patient,         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         jsd_col = stimulation,         reference_level = \"Basal\"     ) |>     head() #> # A tibble: 6 × 25 #>   patient  BCR-XL_CD45_In115@clu…¹ BCR-XL_CD4_Nd145@clu…² BCR-XL_CD20_Sm147@cl…³ #>   <chr>                      <dbl>                  <dbl>                  <dbl> #> 1 patient1                 0.0367                  0.0513                  0.347 #> 2 patient2                 0.00831                 0.168                   0.401 #> 3 patient3                 0.0104                  0.115                   0.357 #> 4 patient4                 0.0301                  0.135                   0.205 #> 5 patient5                 0.00911                 0.0789                  0.274 #> 6 patient6                 0.00972                 0.0346                  0.214 #> # ℹ abbreviated names: ¹​`BCR-XL_CD45_In115@cluster3_jsd`, #> #   ²​`BCR-XL_CD4_Nd145@cluster3_jsd`, ³​`BCR-XL_CD20_Sm147@cluster3_jsd` #> # ℹ 21 more variables: `BCR-XL_CD45_In115@cluster7_jsd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster7_jsd` <dbl>, #> #   `BCR-XL_CD20_Sm147@cluster7_jsd` <dbl>, #> #   `BCR-XL_CD45_In115@cluster4_jsd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster4_jsd` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"putting-it-all-together-with-tof_extract_features","dir":"Articles","previous_headings":"","what":"Putting it all together with tof_extract_features()","title":"Feature extraction","text":"Finally, tof_extract_features() verb provides wrapper members function family, allowing users extract multiple features types . example, following code extracts proportion cluster, median several markers cluster, EMD basal condition stimulated condition cluster patients citrus_data.","code":"signaling_markers <-     c(         \"pNFkB_Nd142\", \"pStat5_Nd150\", \"pAkt_Sm152\", \"pStat1_Eu153\", \"pStat3_Gd158\",         \"pSlp76_Dy164\", \"pBtk_Er166\", \"pErk_Er168\", \"pS6_Yb172\", \"pZap70_Gd156\"     )  citrus_data |>     tof_extract_features(         cluster_col = cluster,         group_cols = patient,         stimulation_col = stimulation,         lineage_cols = any_of(c(\"CD45_In115\", \"CD20_Sm147\", \"CD33_Nd148\")),         signaling_cols = any_of(signaling_markers),         signaling_method = \"emd\",         basal_level = \"Basal\"     ) |>     head() #> # A tibble: 6 × 193 #>   patient  `prop@cluster1` `prop@cluster2` `prop@cluster3` `prop@cluster4` #>   <chr>              <dbl>           <dbl>           <dbl>           <dbl> #> 1 patient1          0.0149          0.0438           0.356           0.351 #> 2 patient2          0.0115          0.0212           0.425           0.323 #> 3 patient3          0.0255          0.0594           0.355           0.217 #> 4 patient4          0.0127          0.0418           0.320           0.223 #> 5 patient5          0.0207          0.0423           0.377           0.269 #> 6 patient6          0.0183          0.0493           0.459           0.250 #> # ℹ 188 more variables: `prop@cluster5` <dbl>, `prop@cluster6` <dbl>, #> #   `prop@cluster7` <dbl>, `prop@cluster8` <dbl>, #> #   `CD45_In115@cluster1_ct` <dbl>, `CD20_Sm147@cluster1_ct` <dbl>, #> #   `CD33_Nd148@cluster1_ct` <dbl>, `CD45_In115@cluster2_ct` <dbl>, #> #   `CD20_Sm147@cluster2_ct` <dbl>, `CD33_Nd148@cluster2_ct` <dbl>, #> #   `CD45_In115@cluster3_ct` <dbl>, `CD20_Sm147@cluster3_ct` <dbl>, #> #   `CD33_Nd148@cluster3_ct` <dbl>, `CD45_In115@cluster4_ct` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Feature extraction","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats4    stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #>  [1] HDCytoData_1.22.1           flowCore_2.14.2             #>  [3] SummarizedExperiment_1.32.0 Biobase_2.62.0              #>  [5] GenomicRanges_1.54.1        GenomeInfoDb_1.38.8         #>  [7] IRanges_2.36.0              S4Vectors_0.40.2            #>  [9] MatrixGenerics_1.14.0       matrixStats_1.2.0           #> [11] ExperimentHub_2.10.0        AnnotationHub_3.10.0        #> [13] BiocFileCache_2.10.1        dbplyr_2.5.0                #> [15] BiocGenerics_0.48.1         stringr_1.5.1               #> [17] dplyr_1.1.4                 tidytof_0.99.6              #>  #> loaded via a namespace (and not attached): #>   [1] jsonlite_1.8.8                shape_1.4.6.1                 #>   [3] magrittr_2.0.3                farver_2.1.1                  #>   [5] rmarkdown_2.26                fs_1.6.3                      #>   [7] zlibbioc_1.48.2               ragg_1.3.0                    #>   [9] vctrs_0.6.5                   memoise_2.0.1                 #>  [11] RCurl_1.98-1.14               htmltools_0.5.7               #>  [13] S4Arrays_1.2.1                curl_5.2.1                    #>  [15] SparseArray_1.2.4             sass_0.4.9                    #>  [17] parallelly_1.37.1             bslib_0.6.2                   #>  [19] desc_1.4.3                    lubridate_1.9.3               #>  [21] cachem_1.0.8                  igraph_2.0.3                  #>  [23] mime_0.12                     lifecycle_1.0.4               #>  [25] iterators_1.0.14              pkgconfig_2.0.3               #>  [27] Matrix_1.6-5                  R6_2.5.1                      #>  [29] fastmap_1.1.1                 shiny_1.8.0                   #>  [31] GenomeInfoDbData_1.2.11       future_1.33.1                 #>  [33] digest_0.6.35                 colorspace_2.1-0              #>  [35] AnnotationDbi_1.64.1          textshaping_0.3.7             #>  [37] RSQLite_2.3.5                 philentropy_0.8.0             #>  [39] filelock_1.0.3                cytolib_2.14.1                #>  [41] fansi_1.0.6                   yardstick_1.3.1               #>  [43] timechange_0.3.0              httr_1.4.7                    #>  [45] polyclip_1.10-6               abind_1.4-5                   #>  [47] compiler_4.3.3                bit64_4.0.5                   #>  [49] withr_3.0.0                   doParallel_1.0.17             #>  [51] viridis_0.6.5                 DBI_1.2.2                     #>  [53] ggforce_0.4.2                 MASS_7.3-60.0.1               #>  [55] lava_1.8.0                    rappdirs_0.3.3                #>  [57] DelayedArray_0.28.0           tools_4.3.3                   #>  [59] interactiveDisplayBase_1.40.0 httpuv_1.6.14                 #>  [61] future.apply_1.11.1           nnet_7.3-19                   #>  [63] glue_1.7.0                    promises_1.2.1                #>  [65] grid_4.3.3                    generics_0.1.3                #>  [67] recipes_1.0.10                gtable_0.3.4                  #>  [69] tzdb_0.4.0                    class_7.3-22                  #>  [71] tidyr_1.3.1                   data.table_1.15.2             #>  [73] hms_1.1.3                     tidygraph_1.3.1               #>  [75] utf8_1.2.4                    XVector_0.42.0                #>  [77] ggrepel_0.9.5                 BiocVersion_3.18.1            #>  [79] foreach_1.5.2                 pillar_1.9.0                  #>  [81] RcppHNSW_0.6.0                later_1.3.2                   #>  [83] splines_4.3.3                 tweenr_2.0.3                  #>  [85] lattice_0.22-5                survival_3.5-8                #>  [87] bit_4.0.5                     emdist_0.3-3                  #>  [89] RProtoBufLib_2.14.1           tidyselect_1.2.1              #>  [91] Biostrings_2.70.3             knitr_1.45                    #>  [93] gridExtra_2.3                 xfun_0.42                     #>  [95] graphlayouts_1.1.1            hardhat_1.3.1                 #>  [97] timeDate_4032.109             stringi_1.8.3                 #>  [99] yaml_2.3.8                    evaluate_0.23                 #> [101] codetools_0.2-19              ggraph_2.2.1                  #> [103] tibble_3.2.1                  BiocManager_1.30.22           #> [105] cli_3.6.2                     rpart_4.1.23                  #> [107] xtable_1.8-4                  systemfonts_1.0.6             #> [109] munsell_0.5.0                 jquerylib_0.1.4               #> [111] Rcpp_1.0.12                   globals_0.16.3                #> [113] png_0.1-8                     parallel_4.3.3                #> [115] ellipsis_0.3.2                pkgdown_2.0.7                 #> [117] gower_1.0.1                   ggplot2_3.5.0                 #> [119] readr_2.1.5                   blob_1.2.4                    #> [121] bitops_1.0-7                  listenv_0.9.1                 #> [123] glmnet_4.1-8                  viridisLite_0.4.2             #> [125] ipred_0.9-14                  scales_1.3.0                  #> [127] prodlim_2023.08.28            purrr_1.0.2                   #> [129] crayon_1.5.2                  rlang_1.1.3                   #> [131] KEGGREST_1.42.0"},{"path":"https://keyes-timothy.github.io/tidytof/articles/modeling.html","id":"accessing-the-data-for-this-vignette","dir":"Articles","previous_headings":"","what":"Accessing the data for this vignette","title":"Building predictive models","text":"illustrate work, first download patient-level data paper combine sample-level clinical annotations one tidytof’s built-datasets (ddpr_metadata). data processing steps result tibble called ddpr_patients. numeric columns ddpr_patients represent aggregated cell population features sample (see Supplementary Table 5 paper details). non-numeric columns represent clinical metadata sample (run ?ddpr_metadata information). metadata columns, important ones indicate patient develop refractory disease (“relapse”), /happen. information stored relapse_status time_to_relapse columns, respectively. also preprocessing steps might want perform now save us headaches ’re fitting models later. next part vignette, ’ll use patient-level data build predictive models using resampling procedures like k-fold cross-validation bootstrapping.","code":"data(ddpr_metadata)  # link for downloading the sample-level data from the Nature Medicine website data_link <-     \"https://static-content.springer.com/esm/art%3A10.1038%2Fnm.4505/MediaObjects/41591_2018_BFnm4505_MOESM3_ESM.csv\"  # download the data and combine it with clinical annotations ddpr_patients <-     readr::read_csv(data_link, skip = 2L, n_max = 78L, show_col_types = FALSE) |>     dplyr::rename(patient_id = Patient_ID) |>     dplyr::left_join(ddpr_metadata, by = \"patient_id\") |>     dplyr::filter(!str_detect(patient_id, \"Healthy\"))  # preview only the metadata (i.e. non-numeric) columns ddpr_patients |>     dplyr::select(where(~ !is.numeric(.x))) |>     head() #> # A tibble: 6 × 8 #>   patient_id gender mrd_risk nci_rome_risk relapse_status type_of_relapse cohort #>   <chr>      <chr>  <chr>    <chr>         <chr>          <chr>           <chr>  #> 1 UPN1       Male   Interme… Standard      Yes            Early           Train… #> 2 UPN1-Rx    Male   Interme… Standard      Yes            Early           Train… #> 3 UPN2       Male   Interme… Standard      No             NA              Train… #> 4 UPN3       Female Standard Standard      No             NA              Train… #> 5 UPN4       Male   Standard Standard      No             NA              Valid… #> 6 UPN5       Female Standard High          No             NA              Valid… #> # ℹ 1 more variable: ddpr_risk <chr> ddpr_patients <-     ddpr_patients |>     # convert the relapse_status variable to a factor     # and create the time_to_event and event columns for survival modeling     dplyr::mutate(         relapse_status = as.factor(relapse_status),         time_to_event = dplyr::if_else(relapse_status == \"Yes\", time_to_relapse, ccr),         event = dplyr::if_else(relapse_status == \"Yes\", 1, 0)     )"},{"path":"https://keyes-timothy.github.io/tidytof/articles/modeling.html","id":"building-a-classifier-using-elastic-net-regularized-logistic-regression","dir":"Articles","previous_headings":"","what":"Building a classifier using elastic net-regularized logistic regression","title":"Building predictive models","text":"First, can build elastic net classifier predict patients relapse patients won’t (ignoring time--event data now). , can use relapse_status column ddpr_patients outcome variable: can see samples annotated, can throw away samples don’t clinical outcome associated . original DDPR paper, 10-fold cross-validation used tune glmnet model estimate error model new datasets. , can use tof_split_data() function split cohort training test set either 10 times using k-fold cross-validation bootstrapping. Reading documentation tof_split_data() demonstrates use resampling methods (like bootstrapping). output tof_split_data() varies depending split_method used. cross-validation, result rset object rsample package. rset objects type tibble two columns: splits - column entry rsplit object (contains single resample full dataset) id - character column entry represents name fold entry splits belongs . can inspect one resamples splits column see contain: Note can use rsample::training rsample::testing return training test observations resampling: , can feed training_split tof_train_model function tune logistic regression model predicts relapse_status leukemia patient. sure check tof_create_grid documentation learn make hyperparameter search grid model tuning (case, limit mixture parameter value 1, fits sparse lasso model). Also note , case, illustrative purposes ’re incorporating features one populations interest (population 2) model, whereas original model incorporated features 12 populations (likely required quite bit computational power result). output tof_train_model tof_model, object containing information trained model (can passed tof_predict tof_assess_model verbs). tof_model printed, information optimal hyperparamters printed, table nonzero model coefficients model. training model, might interested seeing performs. One way assess classification model see well works applied directly back data trained (model’s “training data”). , can use tof_assess_model() function arguments: tof_assess_model() returns list several model assessment metrics differ depending kind tof_model trained. two-class classifier models, among useful confusion_matrix, shows classifier classified observation relative true class assignment. case, can see model performed perfectly training data (expected, model optimized using data !). can also visualize model’s performance using tof_plot_model() verb, case two-class model give us Receiver-Operating Characteristic (ROC) curve:  shown , tof_plot_model() return receiver-operating curve two-class model. ’s unusual get AUC 1 machine learning world, can note case, classification problem wasn’t particularly difficult (lot input features work ). training model, generally isn’t sufficient evaluate model performs training data alone, provide overly-optimistic representation model perform data ’s never seen (problem often called “overfitting” model training data). get fairer estimate model’s performance new datasets, can also evaluate cross-validation error calling tof_assess_model() tof_plot_model() new_data argument set “tuning”.  case, plot ROC Curve using predictions observation excluded model training cross-validation, approach gives accurate estimate model’s performance new data simple evaluation training dataset.","code":"# find how many of each outcome we have in our cohort ddpr_patients |>     dplyr::count(relapse_status) #> # A tibble: 3 × 2 #>   relapse_status     n #>   <fct>          <int> #> 1 No                37 #> 2 Yes               24 #> 3 NA                12 ddpr_patients_unannotated <-     ddpr_patients |>     dplyr::filter(is.na(relapse_status))  ddpr_patients <-     ddpr_patients |>     dplyr::filter(!is.na(relapse_status)) set.seed(3000L)  training_split <-     ddpr_patients |>     tof_split_data(         split_method = \"k-fold\",         num_cv_folds = 10,         strata = relapse_status     )  training_split #> #  10-fold cross-validation using stratification  #> # A tibble: 10 × 2 #>    splits         id     #>    <list>         <chr>  #>  1 <split [54/7]> Fold01 #>  2 <split [54/7]> Fold02 #>  3 <split [54/7]> Fold03 #>  4 <split [54/7]> Fold04 #>  5 <split [55/6]> Fold05 #>  6 <split [55/6]> Fold06 #>  7 <split [55/6]> Fold07 #>  8 <split [56/5]> Fold08 #>  9 <split [56/5]> Fold09 #> 10 <split [56/5]> Fold10 my_resample <- training_split$splits[[1]]  print(my_resample) #> <Analysis/Assess/Total> #> <54/7/61> my_resample |>     rsample::training() |>     head() #> # A tibble: 6 × 1,854 #>   patient_id Pop_P_Pop1 CD19_Pop1 CD20_Pop1 CD24_Pop1 CD34_Pop1 CD38_Pop1 #>   <chr>           <dbl>     <dbl>     <dbl>     <dbl>     <dbl>     <dbl> #> 1 UPN1           3.06      0.583    0.00449    0.164       1.94     0.416 #> 2 UPN1-Rx        0.0395    0.618    0.0634     0.572       2.93     0.944 #> 3 UPN2           0.139     0.0662   0.0221     0.0825      2.25     0.454 #> 4 UPN3           0.633     0.0234   0.0165     0.0327      2.25     0.226 #> 5 UPN4           0.0443    0.129    0.0447     0.232       2.47     0.336 #> 6 UPN5           0.0647    0.0577   0.0163     0.162       2.89     0.406 #> # ℹ 1,847 more variables: CD127_Pop1 <dbl>, CD179a_Pop1 <dbl>, #> #   CD179b_Pop1 <dbl>, IgMi_Pop1 <dbl>, IgMs_Pop1 <dbl>, TdT_Pop1 <dbl>, #> #   CD22_Pop1 <dbl>, tIkaros_Pop1 <dbl>, CD79b_Pop1 <dbl>, Ki67_Pop1 <dbl>, #> #   TSLPr_Pop1 <dbl>, RAG1_Pop1 <dbl>, CD123_Pop1 <dbl>, CD45_Pop1 <dbl>, #> #   CD10_Pop1 <dbl>, Pax5_Pop1 <dbl>, CD43_Pop1 <dbl>, CD58_Pop1 <dbl>, #> #   HLADR_Pop1 <dbl>, p4EBP1_FC_Basal_Pop1 <dbl>, pSTAT5_FC_Basal_Pop1 <dbl>, #> #   pPLCg1_2_FC_Basal_Pop1 <dbl>, pAkt_FC_Basal_Pop1 <dbl>, … my_resample |>     rsample::testing() |>     head() #> # A tibble: 6 × 1,854 #>   patient_id Pop_P_Pop1 CD19_Pop1 CD20_Pop1 CD24_Pop1 CD34_Pop1 CD38_Pop1 #>   <chr>           <dbl>     <dbl>     <dbl>     <dbl>     <dbl>     <dbl> #> 1 UPN6          5.62      0.550     0.00374     0.622      2.86     0.342 #> 2 UPN10-Rx      0.00240   0.167     0.203       0.802      2.57     0.822 #> 3 UPN13         0.0634    0.0300    0.0219      0.109      2.34     0.314 #> 4 UPN22-Rx      0.0643    1.68      0.0804      1.56       3.06     0.529 #> 5 UPN58         0.00546   0.00918   0.0168      0.480      2.70     0.112 #> 6 UPN95         0.300     0.389     0.00454     0.697      2.45     0.247 #> # ℹ 1,847 more variables: CD127_Pop1 <dbl>, CD179a_Pop1 <dbl>, #> #   CD179b_Pop1 <dbl>, IgMi_Pop1 <dbl>, IgMs_Pop1 <dbl>, TdT_Pop1 <dbl>, #> #   CD22_Pop1 <dbl>, tIkaros_Pop1 <dbl>, CD79b_Pop1 <dbl>, Ki67_Pop1 <dbl>, #> #   TSLPr_Pop1 <dbl>, RAG1_Pop1 <dbl>, CD123_Pop1 <dbl>, CD45_Pop1 <dbl>, #> #   CD10_Pop1 <dbl>, Pax5_Pop1 <dbl>, CD43_Pop1 <dbl>, CD58_Pop1 <dbl>, #> #   HLADR_Pop1 <dbl>, p4EBP1_FC_Basal_Pop1 <dbl>, pSTAT5_FC_Basal_Pop1 <dbl>, #> #   pPLCg1_2_FC_Basal_Pop1 <dbl>, pAkt_FC_Basal_Pop1 <dbl>, … hyperparams <- tof_create_grid(mixture_values = 1)  class_mod <-     training_split |>     tof_train_model(         predictor_cols = c(contains(\"Pop2\")),         response_col = relapse_status,         model_type = \"two-class\",         hyperparameter_grid = hyperparams,         impute_missing_predictors = TRUE,         remove_zv_predictors = TRUE # often a smart decision     ) print(class_mod) #> A two-class `tof_model` with a mixture parameter (alpha) of 1 and a penalty parameter (lambda) of 1e-10  #> # A tibble: 28 × 2 #>    feature               coefficient #>    <chr>                       <dbl> #>  1 p4EBP1_dP_IL7_Pop2          -3.10 #>  2 pCreb_dP_PVO4_Pop2          -2.66 #>  3 TSLPr_Pop2                   2.07 #>  4 CD43_Pop2                    2.00 #>  5 pSTAT5_FC_PVO4_Pop2         -1.80 #>  6 pS6_dP_IL7_Pop2              1.56 #>  7 pPLCg1_2_dP_PVO4_Pop2        1.44 #>  8 (Intercept)                 -1.43 #>  9 pSTAT5_FC_BCR_Pop2           1.24 #> 10 pErk_dP_IL7_Pop2            -1.23 #> # ℹ 18 more rows training_classifier_metrics <-     class_mod |>     tof_assess_model() training_classifier_metrics$confusion_matrix #> # A tibble: 4 × 3 #>   true_outcome predicted_outcome num_observations #>   <chr>        <chr>                        <int> #> 1 No           No                              37 #> 2 No           Yes                              0 #> 3 Yes          No                               0 #> 4 Yes          Yes                             24 class_mod |>     tof_plot_model() cv_classifier_metrics <-     class_mod |>     tof_assess_model(new_data = \"tuning\")  class_mod |>     tof_plot_model(new_data = \"tuning\")"},{"path":"https://keyes-timothy.github.io/tidytof/articles/modeling.html","id":"building-a-survival-model-using-elastic-net-regularized-cox-regression","dir":"Articles","previous_headings":"","what":"Building a survival model using elastic net-regularized cox regression","title":"Building predictive models","text":"Building ideas , sophisticated way model data simply predict relapse won’t, build time--event model estimates patients’ probabilities relapse function time since diagnosis. approach called “survival modeling” (specifically, case use Cox-proportional hazards modeling) takes account patients adverse events different times course disease (.e. everyone relapses time). build survival model using tidytof, use tof_train_model() verb setting model_type flag “survival”. addition, need provide two outcome columns. first columns (event_col) indicates patient relapsed (.e. experienced event--interest) censored certain amount follow-time. second (time_col) indicates much time took patient relapse censored analysis. survival model trained, can used predict patient’s probability event--interest different times post-diagnosis. However, common way survival models applied practice use patient’s predicted relative risk event--interest divide patients low- high-risk subgroups. tidytof can automatically according optimal split obtained using log-rank test possible split points dataset tof_assess_model(). addition, return predicted survival curve patient time: survival models, tof_plot_model() plots average survival curves low- high-risk groups:","code":"hyperparams <- tof_create_grid(mixture_values = 1)  survival_mod <-     training_split |>     tof_train_model(         predictor_cols = c(contains(\"Pop2\")),         time_col = time_to_event,         event_col = event,         model_type = \"survival\",         hyperparameter_grid = hyperparams,         impute_missing_predictors = TRUE,         remove_zv_predictors = TRUE # often a smart decision     )  print(survival_mod) #> A survival `tof_model` with a mixture parameter (alpha) of 1 and a penalty parameter (lambda) of 3.162e-03  #> # A tibble: 40 × 2 #>    feature               coefficient #>    <chr>                       <dbl> #>  1 pErk_dP_TSLP_Pop2           -7.03 #>  2 pCreb_dP_PVO4_Pop2          -5.47 #>  3 CD19_Pop2                   -3.73 #>  4 CD34_Pop2                    3.63 #>  5 pSTAT5_FC_BCR_Pop2           3.40 #>  6 HLADR_Pop2                  -3.38 #>  7 pPLCg1_2_dP_IL7_Pop2         3.33 #>  8 pPLCg1_2_dP_PVO4_Pop2        3.14 #>  9 pSyk_dP_TSLP_Pop2            2.88 #> 10 CD123_Pop2                   2.77 #> # ℹ 30 more rows survival_metrics <-     survival_mod |>     tof_assess_model()  survival_metrics #> $model_metrics #> # A tibble: 3 × 2 #>   metric                        value #>   <chr>                         <dbl> #> 1 neg_log_partial_likelihood 1.76e+ 1 #> 2 concordance_index          1   e+ 0 #> 3 log_rank_p_value           1.47e-22 #>  #> $survival_curves #> # A tibble: 61 × 6 #>    row_index survival_curve    relative_risk time_to_event event risk_group #>    <chr>     <list>                    <dbl>         <dbl> <dbl> <chr>      #>  1 1         <tibble [54 × 2]>       2.83e+3          1043     1 low        #>  2 2         <tibble [54 × 2]>       2.61e+3          1043     1 low        #>  3 3         <tibble [54 × 2]>       1.58e-8          5406     0 low        #>  4 4         <tibble [54 × 2]>       2.09e-4          4917     0 low        #>  5 5         <tibble [54 × 2]>       9.98e-3          4538     0 low        #>  6 6         <tibble [54 × 2]>       6.62e-1          4490     0 low        #>  7 7         <tibble [54 × 2]>       4.09e+9           136     1 high       #>  8 8         <tibble [54 × 2]>       2.57e+8           364     1 high       #>  9 9         <tibble [54 × 2]>       1.27e+9           237     1 high       #> 10 10        <tibble [54 × 2]>       2.31e+4           886     1 low        #> # ℹ 51 more rows survival_mod |>     tof_plot_model() cv_survival_metrics <-     survival_mod |>     tof_assess_model(new_data = \"tuning\") survival_mod |>     tof_plot_model(new_data = \"tuning\")"},{"path":"https://keyes-timothy.github.io/tidytof/articles/modeling.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Building predictive models","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] stringr_1.5.1  tidytof_0.99.6 #>  #> loaded via a namespace (and not attached): #>   [1] gridExtra_2.3       rlang_1.1.3         magrittr_2.0.3      #>   [4] furrr_0.3.1         matrixStats_1.2.0   compiler_4.3.3      #>   [7] systemfonts_1.0.6   vctrs_0.6.5         crayon_1.5.2        #>  [10] pkgconfig_2.0.3     shape_1.4.6.1       fastmap_1.1.1       #>  [13] ellipsis_0.3.2      labeling_0.4.3      ggraph_2.2.1        #>  [16] utf8_1.2.4          rmarkdown_2.26      prodlim_2023.08.28  #>  [19] tzdb_0.4.0          ragg_1.3.0          bit_4.0.5           #>  [22] purrr_1.0.2         xfun_0.42           glmnet_4.1-8        #>  [25] cachem_1.0.8        jsonlite_1.8.8      recipes_1.0.10      #>  [28] highr_0.10          tweenr_2.0.3        parallel_4.3.3      #>  [31] R6_2.5.1            rsample_1.2.1       bslib_0.6.2         #>  [34] stringi_1.8.3       parallelly_1.37.1   rpart_4.1.23        #>  [37] lubridate_1.9.3     jquerylib_0.1.4     Rcpp_1.0.12         #>  [40] iterators_1.0.14    knitr_1.45          future.apply_1.11.1 #>  [43] readr_2.1.5         flowCore_2.14.2     Matrix_1.6-5        #>  [46] splines_4.3.3       nnet_7.3-19         igraph_2.0.3        #>  [49] timechange_0.3.0    tidyselect_1.2.1    yaml_2.3.8          #>  [52] viridis_0.6.5       timeDate_4032.109   doParallel_1.0.17   #>  [55] codetools_0.2-19    curl_5.2.1          listenv_0.9.1       #>  [58] lattice_0.22-5      tibble_3.2.1        Biobase_2.62.0      #>  [61] withr_3.0.0         evaluate_0.23       future_1.33.1       #>  [64] desc_1.4.3          survival_3.5-8      polyclip_1.10-6     #>  [67] pillar_1.9.0        foreach_1.5.2       stats4_4.3.3        #>  [70] generics_0.1.3      vroom_1.6.5         RcppHNSW_0.6.0      #>  [73] S4Vectors_0.40.2    hms_1.1.3           ggplot2_3.5.0       #>  [76] munsell_0.5.0       scales_1.3.0        globals_0.16.3      #>  [79] class_7.3-22        glue_1.7.0          tools_4.3.3         #>  [82] data.table_1.15.2   gower_1.0.1         fs_1.6.3            #>  [85] graphlayouts_1.1.1  tidygraph_1.3.1     grid_4.3.3          #>  [88] yardstick_1.3.1     tidyr_1.3.1         RProtoBufLib_2.14.1 #>  [91] ipred_0.9-14        colorspace_2.1-0    ggforce_0.4.2       #>  [94] cli_3.6.2           textshaping_0.3.7   fansi_1.0.6         #>  [97] cytolib_2.14.1      viridisLite_0.4.2   lava_1.8.0          #> [100] dplyr_1.1.4         gtable_0.3.4        sass_0.4.9          #> [103] digest_0.6.35       BiocGenerics_0.48.1 ggrepel_0.9.5       #> [106] farver_2.1.1        memoise_2.0.1       htmltools_0.5.7     #> [109] pkgdown_2.0.7       lifecycle_1.0.4     hardhat_1.3.1       #> [112] bit64_4.0.5         MASS_7.3-60.0.1"},{"path":"https://keyes-timothy.github.io/tidytof/articles/preprocessing.html","id":"preprocessing-with-tof_preprocess","dir":"Articles","previous_headings":"","what":"Preprocessing with tof_preprocess","title":"Preprocessing","text":"Generally speaking, raw ion counts measured analyte mass cytometer (content raw FCS files obtained directly mass cytometer) need transformed CyTOF data analysis. Common preprocessing steps may include variance-stabilizing transformations - hyperbolic arcsine (arcsinh) transformation log transformation - scaling/centering, /denoising. perform standard preprocessing tasks tidytof, use tof_preprocess. tof_preprocess’s default behavior apply arcsinh transformation (cofactor 5) numeric column input tof_tibble well remove gaussian noise Fluidigm software adds ion count (noise added visualization purposes, analyses, removing recommended). example, can preprocess tidytof’s built-phenograph_data tof_tibble see first measurements change . alter tof_preprocess’s default behavior, change channel_cols argument specify columns tof_tibble transformed. Alter transform_fun argument specify vector-valued function used transform channel_cols. example, suppose want center scale numeric columns instead arcsinh-transforming : keep gaussian noise added Fluidigm software (working dataset noise), set undo_noise argument FALSE.","code":"data(phenograph_data)  # before preprocessing phenograph_data %>%     select(cd45, cd34, cd38) %>%     head() #> # A tibble: 6 × 3 #>    cd45   cd34  cd38 #>   <dbl>  <dbl> <dbl> #> 1  131.  3.23   1.51 #> 2  230. -0.582 11.4  #> 3  293.  5.20   1.84 #> 4  431.  0.363 13.3  #> # ℹ 2 more rows phenograph_data %>%     # perform preprocessing     tof_preprocess() %>%     # inspect new values     select(cd45, cd34, cd38) %>%     head() #> # A tibble: 6 × 3 #>    cd45    cd34  cd38 #>   <dbl>   <dbl> <dbl> #> 1  3.96  0.608  0.298 #> 2  4.52 -0.116  1.56  #> 3  4.76  0.909  0.360 #> 4  5.15  0.0725 1.70  #> # ℹ 2 more rows phenograph_data %>%     # preprocess     tof_preprocess(transform_fun = scale) %>%     # inspect new values     select(cd45, cd34, cd38) %>%     head() #> # A tibble: 6 × 3 #>   cd45[,1] cd34[,1] cd38[,1] #>      <dbl>    <dbl>    <dbl> #> 1   -1.40     1.01   -0.437  #> 2   -1.15    -0.911   0.0316 #> 3   -0.999    2.00   -0.422  #> 4   -0.661   -0.436   0.120  #> # ℹ 2 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/preprocessing.html","id":"postprocessing-with-tof_postprocess","dir":"Articles","previous_headings":"","what":"Postprocessing with tof_postprocess","title":"Preprocessing","text":"final note, note built-function tof_postprocess works nearly identically tof_preprocess, provides different default behavior (namely, applying reverse arcsinh transformation cofactor 5 numeric columns. See ?tof_postprocess details).","code":"print(phenograph_data) %>%     select(cd45, cd34, cd38) %>%     head() #> # A tibble: 3,000 × 25 #>   sample_name  phenograph_cluster    cd19 cd11b   cd34  cd45  cd123   cd33  cd47 #>   <chr>        <chr>                <dbl> <dbl>  <dbl> <dbl>  <dbl>  <dbl> <dbl> #> 1 H1_PhenoGra… cluster1           -0.168  29.0   3.23   131. -0.609  1.21   13.0 #> 2 H1_PhenoGra… cluster1            1.65    4.83 -0.582  230.  2.53  -0.507  12.9 #> 3 H1_PhenoGra… cluster1            2.79   36.1   5.20   293. -0.265  3.67   27.1 #> 4 H1_PhenoGra… cluster1            0.0816 48.8   0.363  431.  2.04   9.40   41.0 #> # ℹ 2,996 more rows #> # ℹ 16 more variables: cd7 <dbl>, cd44 <dbl>, cd38 <dbl>, cd3 <dbl>, #> #   cd117 <dbl>, cd64 <dbl>, cd41 <dbl>, pstat3 <dbl>, pstat5 <dbl>, #> #   pampk <dbl>, p4ebp1 <dbl>, ps6 <dbl>, pcreb <dbl>, `pzap70-syk` <dbl>, #> #   prb <dbl>, `perk1-2` <dbl> #> # A tibble: 6 × 3 #>    cd45   cd34  cd38 #>   <dbl>  <dbl> <dbl> #> 1  131.  3.23   1.51 #> 2  230. -0.582 11.4  #> 3  293.  5.20   1.84 #> 4  431.  0.363 13.3  #> # ℹ 2 more rows  # after preprocessing and post-processing, the data are the same # except that the re-added noise component is different for each value phenograph_data %>%     tof_preprocess() %>%     tof_postprocess(redo_noise = TRUE) %>%     select(cd45, cd34, cd38) %>%     head() #> # A tibble: 6 × 3 #>    cd45    cd34   cd38 #>   <dbl>   <dbl>  <dbl> #> 1  130.  3.04    0.960 #> 2  229. -1.26   10.7   #> 3  293.  4.96    1.72  #> 4  430.  0.0302 12.7   #> # ℹ 2 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/preprocessing.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Preprocessing","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] dplyr_1.1.4    tidytof_0.99.6 #>  #> loaded via a namespace (and not attached): #>   [1] tidyselect_1.2.1    viridisLite_0.4.2   timeDate_4032.109   #>   [4] farver_2.1.1        viridis_0.6.5       ggraph_2.2.1        #>   [7] fastmap_1.1.1       tweenr_2.0.3        rpart_4.1.23        #>  [10] digest_0.6.35       timechange_0.3.0    lifecycle_1.0.4     #>  [13] yardstick_1.3.1     survival_3.5-8      magrittr_2.0.3      #>  [16] compiler_4.3.3      rlang_1.1.3         sass_0.4.9          #>  [19] tools_4.3.3         igraph_2.0.3        utf8_1.2.4          #>  [22] yaml_2.3.8          data.table_1.15.2   knitr_1.45          #>  [25] graphlayouts_1.1.1  withr_3.0.0         purrr_1.0.2         #>  [28] RProtoBufLib_2.14.1 BiocGenerics_0.48.1 desc_1.4.3          #>  [31] nnet_7.3-19         grid_4.3.3          polyclip_1.10-6     #>  [34] stats4_4.3.3        fansi_1.0.6         RcppHNSW_0.6.0      #>  [37] future_1.33.1       colorspace_2.1-0    ggplot2_3.5.0       #>  [40] globals_0.16.3      scales_1.3.0        iterators_1.0.14    #>  [43] MASS_7.3-60.0.1     cli_3.6.2           rmarkdown_2.26      #>  [46] ragg_1.3.0          generics_0.1.3      future.apply_1.11.1 #>  [49] tzdb_0.4.0          cachem_1.0.8        flowCore_2.14.2     #>  [52] ggforce_0.4.2       stringr_1.5.1       splines_4.3.3       #>  [55] parallel_4.3.3      matrixStats_1.2.0   vctrs_0.6.5         #>  [58] hardhat_1.3.1       glmnet_4.1-8        Matrix_1.6-5        #>  [61] jsonlite_1.8.8      cytolib_2.14.1      hms_1.1.3           #>  [64] S4Vectors_0.40.2    ggrepel_0.9.5       listenv_0.9.1       #>  [67] systemfonts_1.0.6   foreach_1.5.2       gower_1.0.1         #>  [70] tidyr_1.3.1         jquerylib_0.1.4     recipes_1.0.10      #>  [73] parallelly_1.37.1   glue_1.7.0          pkgdown_2.0.7       #>  [76] codetools_0.2-19    stringi_1.8.3       lubridate_1.9.3     #>  [79] gtable_0.3.4        shape_1.4.6.1       munsell_0.5.0       #>  [82] tibble_3.2.1        pillar_1.9.0        htmltools_0.5.7     #>  [85] ipred_0.9-14        lava_1.8.0          R6_2.5.1            #>  [88] textshaping_0.3.7   doParallel_1.0.17   tidygraph_1.3.1     #>  [91] evaluate_0.23       Biobase_2.62.0      lattice_0.22-5      #>  [94] readr_2.1.5         memoise_2.0.1       bslib_0.6.2         #>  [97] class_7.3-22        Rcpp_1.0.12         prodlim_2023.08.28  #> [100] gridExtra_2.3       xfun_0.42           fs_1.6.3            #> [103] pkgconfig_2.0.3"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"accessing-the-data-for-this-vignette","dir":"Articles","previous_headings":"","what":"Accessing the data for this vignette","title":"Quality control","text":"demonstrate use {tidytof}’s quality control verbs, use combination simulated real data vignette. Simulated data generated --fly sections , walk download real dataset section. want download dataset originally collected development PhenoGraph algorithm. data built HDCytoData package, available Bioconductor can downloaded following command: load PhenoGraph data current R session, can call function HDCytoData, provide us format {flowCore} package (called “flowSet”). convert tidy tibble, can use tidytof built-method converting flowCore objects tof_tbl’s. also add lines dplyr code clean column names perform standard arcsinh transformation. Thus, can see levine tof_tbl 265627 cells (one row) 40 pieces information cell (one column).","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE)) {     install.packages(\"BiocManager\") }  BiocManager::install(\"HDCytoData\") levine <-     HDCytoData::Levine_32dim_flowSet() |>     as_tof_tbl() |>     # a bit of data cleaning     dplyr::mutate(population_id = as.character(population_id)) |>     dplyr::rename_with(         .fn = \\(x) stringr::str_to_lower(stringr::str_remove(x, \"\\\\|.+\"))     ) |>     dplyr::mutate(dplyr::across(c(file_number, population_id), as.character)) |>     # arcsinh transformation     tof_preprocess(         channel_cols =             c(-time, -cell_length, -event_number, -file_number, -population_id)     )"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"detect-low-expression-i-e--potentially-failed-channels-with-tof_assess_channels","dir":"Articles","previous_headings":"","what":"Detect low-expression (i.e. potentially failed) channels with tof_assess_channels()","title":"Quality control","text":"data collection, might wonder channels include downstream analyses. particular, might want exclude channels positive values, situation indicates antibody may failed, signal particular channel may weak detected. , can use tof_assess_channels(), verb calculates many cells negative (.e. use-specified threshold, negative_threshold) channel flags channels user-specified proportion negative cells (negative_proportion_flag). levine dataset, look markers 97.5% cells threshold 5 ion counts: can see two channels 97.5% cells dataset 5 counts. given experiment, might expected (.e. marker expressed rare cell population) unexpected (marker expressed many cells). case, can visualize marker negative cells manually inspect (recommend flagged channels).  case, looks like small population cells slightly positive cd14, simply measurement noise/nonspecific binding antibody. user whether include cd14 downstream analyses.","code":"# convert 5 counts to asinh value with a cofactor of 5 threshold <- asinh(5 / 5)  levine |>     tof_assess_channels(         negative_threshold = threshold,         negative_proportion_flag = 0.975     ) #> # A tibble: 38 × 3 #>    channel negative_proportion flagged_channel #>    <chr>                 <dbl> <lgl>           #>  1 cd14                  0.988 TRUE            #>  2 cd133                 0.975 TRUE            #>  3 cd117                 0.969 FALSE           #>  4 cd16                  0.967 FALSE           #>  5 flt3                  0.960 FALSE           #>  6 cd15                  0.940 FALSE           #>  7 cd41                  0.923 FALSE           #>  8 cd34                  0.909 FALSE           #>  9 cd61                  0.890 FALSE           #> 10 cd33                  0.885 FALSE           #> # ℹ 28 more rows levine |>     tof_plot_cells_density(marker_col = cd14)"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"identify-time-periods-of-abnormally-low-or-high-flow-rate-during-data-acquisition-using-tof_assess_flow_rate","dir":"Articles","previous_headings":"","what":"Identify time periods of abnormally low or high flow rate during data acquisition using tof_assess_flow_rate()","title":"Quality control","text":"Large changes flow rate cytometer can impact quality signal acquired data collection: example, abnormally low flow rates can caused partial occlusions cytometer’s flow cell, leading debris air infiltration cytometer’s microfluidics system. Thus, can useful perform quality control step explicitly interrogates flow rate course cytometry experiment order flag cells collected unusually high low rates acquisition. , {tidytof} provides tof_assess_flow_rate(), function implements simplified version FlowAI’s flow rate analysis. short, relative flow rates timestep cytometry experiment calculated, outlier timepoints particularly high low flow rates (.e. beyond extreme values t-distribution across timesteps) flagged. size timesteps user-defined parameter calculation, significance level (0 1) within t-distribution determines anomalous time step’s flow rate must cells flagged. can apply tof_assess_flow_rate() levine dataset , using  result , can see last several timesteps flagged potentially low flow rates. decision include exclude cells analyses left user. group_cols argument can also used analyze flow rates samples, patients, mass cytometry barcode plates, etc. separately.","code":"levine |>     tof_assess_flow_rate(         time_col = time,         num_timesteps = 200,         # flag timepoints in which flow rates are high or low at a signicance level         # of p = 0.01         alpha_threshold = 0.01,         # plot the number of cells in each timestep, and whether or not the         # rates were flagged as too high or too low         visualize = TRUE     ) levine |>     tof_assess_flow_rate(         time_col = time,         # analyze two files in the levine dataset separately         group_cols = file_number,         alpha_threshold = 0.01,         visualize = TRUE     )"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"flag-cells-that-are-unusually-far-from-the-centroid-of-a-cluster-to-which-they-have-been-assigned-with-tof_assess_clusters_distance","dir":"Articles","previous_headings":"","what":"Flag cells that are unusually far from the centroid of a cluster to which they have been assigned with tof_assess_clusters_distance()","title":"Quality control","text":"using favorite clustering algorithm define cell subpopulations (example, using tof_cluster()), may wonder well clustering procedure worked. example, may clusters contain outliers - , cells less similar cells cluster typical. detect cells, tidytof provides tof_assess_clusters_distance() verb, computes Mahalanobis distance cell centroid cluster assigned. , computes z-score mahalanobis distances cells cluster flags cells z-score user-specified threshold. Altogether, procedure flags cells unusually far cluster centroid - .e. candidate outliers. demonstrate use tof_assess_clusters_distance() simulated data. simulate data 3 clusters, large population cells “truly” belong cluster well small population outliers cells erroneously assigned cluster. following plots visualize simulated data described :   Using dataset, see tof_assess_clusters_distance() can successfully flag majority outlier cells cluster.","code":"set.seed(2020L)  # simulate large population of cells that truly belong in their assigned cluster sim_data_base <-     dplyr::tibble(         cd45 = c(rnorm(n = 600), rnorm(n = 500, mean = -4)),         cd38 =             c(                 rnorm(n = 100, sd = 0.5),                 rnorm(n = 500, mean = -3),                 rnorm(n = 500, mean = 8)             ),         cd34 =             c(                 rnorm(n = 100, sd = 0.2, mean = -10),                 rnorm(n = 500, mean = 4),                 rnorm(n = 500, mean = 60)             ),         cd19 = c(rnorm(n = 100, sd = 0.3, mean = 10), rnorm(n = 1000)),         cluster_id = c(rep(\"a\", 100), rep(\"b\", 500), rep(\"c\", 500)),         dataset = \"non-outlier\"     )  # simulate outlier cells that do not belong in their assigned cluster sim_data_outlier <-     dplyr::tibble(         cd45 = c(rnorm(n = 10), rnorm(50, mean = 3), rnorm(n = 50, mean = -12)),         cd38 =             c(                 rnorm(n = 10, sd = 0.5),                 rnorm(n = 50, mean = -10),                 rnorm(n = 50, mean = 10)             ),         cd34 =             c(                 rnorm(n = 10, sd = 0.2, mean = -15),                 rnorm(n = 50, mean = 15),                 rnorm(n = 50, mean = 70)             ),         cd19 = c(rnorm(n = 10, sd = 0.3, mean = 19), rnorm(n = 100)),         cluster_id = c(rep(\"a\", 10), rep(\"b\", 50), rep(\"c\", 50)),         dataset = \"outlier\"     )  # bind simulated data together sim_data <- bind_rows(sim_data_base, sim_data_outlier) sim_data |>     tof_plot_cells_embedding(color_col = cluster_id) sim_data |>     tof_plot_cells_embedding(color_col = dataset) sim_data |>     tof_assess_clusters_distance(         cluster_col = cluster_id,         # flag cells with a mahalanobis distance z-score over 3         z_threshold = 3,         augment = TRUE     ) |>     # visualize result as above     dplyr::select(-dplyr::starts_with(\".mahala\"), -z_score) |>     dplyr::mutate(flagged_cell = as.character(flagged_cell)) |>     tof_plot_cells_embedding(color_col = flagged_cell) +     scale_fill_manual(values = tof_generate_palette(num_colors = 2))"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"flag-cells-whose-cluster-assignment-is-ambiguous-with-tof_assess_clusters_entropy","dir":"Articles","previous_headings":"","what":"Flag cells whose cluster assignment is ambiguous with tof_assess_clusters_entropy()","title":"Quality control","text":"may also wish evaluate clustering result based cell’s absolute distance centroid cluster assigned, based relative distances cell cluster centroids. , order confident cell’s cluster assignment, ideally want cell close centroid cluster assigned, relatively distant clusters. contrasts scenario cell might similarly close centroids 2-3 clusters, case might think cell “ambiguous” phenotype, phenotype intermediate clusters clustering algorithm identified. flag “ambiguous” clusters, {tidytof} provides tof_assess_clusters_entropy() verb. tof_assess_clusters_entropy() computes entropy L1-scaled mahalanobis distance vector (.e. mahalanobis distance cell centroids clusters dataset) - entropy low (close 0) confident cell’s cluster assignment, high (near 1) equally close multiple cluster centroids. demonstrate use function simulated data levine dataset .","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"simulated-data","dir":"Articles","previous_headings":"Flag cells whose cluster assignment is ambiguous with tof_assess_clusters_entropy()","what":"Simulated data","title":"Quality control","text":"First, simulate fake dataset 3000 cells 4 channels. simulated dataset, two well-defined clusters (“b” “c”) dispersed cluster intermediate others (“”). data visualized :  dataset, can imagine first analysis approach might involve clustering cells 2 distinct clusters. data simulated, already know number clusters small - can calculating entropy cells resulting clusters help us realize without prior knowledge? check, can use tof_assess_clusters_entropy():   plots , can see cells middle 2 k-means clusters (correspond well ground-truth clusters “b” “c” ) high entropy values, whereas cells closer one centroids low entropy values. can also see tof_assess_clusters_entropy() flags cells potentially anomalous (.e. intermediate phenotype two clusters identified) entropy values 75th percentile (user-specified parameter) entropy values dataset. user wish recluster dataset, filter anomalous cells, processing steps.  can see , expected, intermediate cluster (“”) higher entropies either distinct clusters (“b” “c”).","code":"sim_data <-     dplyr::tibble(         cd45 =             c(                 rnorm(n = 1000, sd = 2),                 rnorm(n = 1000, mean = 2),                 rnorm(n = 1000, mean = -2)             ),         cd38 =             c(                 rnorm(n = 1000, sd = 2),                 rnorm(n = 1000, mean = 2),                 rnorm(n = 1000, mean = -2)             ),         cd34 =             c(                 rnorm(n = 1000, sd = 2),                 rnorm(n = 1000, mean = 2),                 rnorm(n = 1000, mean = -2)             ),         cd19 =             c(                 rnorm(n = 1000, sd = 2),                 rnorm(n = 1000, mean = 2),                 rnorm(n = 1000, mean = -2)             ),         cluster_id = c(rep(\"a\", 1000), rep(\"b\", 1000), rep(\"c\", 1000))     ) sim_data |>     tof_reduce_dimensions(method = \"pca\") |>     tof_plot_cells_embedding(         embedding_cols = c(.pc1, .pc2),         color_col = cluster_id     ) set.seed(17L)  entropy_result <-     sim_data |>     # cluster into 2 clusters     tof_cluster(         num_clusters = 2,         method = \"kmeans\"     ) |>     # calculate the entropy of all cells     tof_assess_clusters_entropy(         cluster_col = .kmeans_cluster,         marker_cols = starts_with(\"cd\"),         entropy_quantile = 0.8,         augment = TRUE     )  # plot the clusters in PCA space entropy_result |>     select(-starts_with(\".mahala\"), -flagged_cell) |>     tof_reduce_dimensions(pca_cols = starts_with(\"cd\"), method = \"pca\") |>     tof_plot_cells_embedding(embedding_cols = c(.pc1, .pc2), color_col = .kmeans_cluster) # show the entropy values for each cell entropy_result |>     select(-starts_with(\".mahala\"), -flagged_cell) |>     tof_reduce_dimensions(pca_cols = starts_with(\"cd\"), method = \"pca\") |>     tof_plot_cells_embedding(embedding_cols = c(.pc1, .pc2), color_col = entropy) +     scale_fill_viridis_c() entropy_result |>     select(-starts_with(\".mahala\")) |>     tof_reduce_dimensions(pca_cols = starts_with(\"cd\"), method = \"pca\") |>     tof_plot_cells_embedding(embedding_cols = c(.pc1, .pc2), color_col = flagged_cell) +     scale_fill_viridis_d() entropy_result |>     ggplot(aes(x = entropy, fill = cluster_id)) +     geom_density(alpha = 0.4) +     theme_bw()"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"real-data","dir":"Articles","previous_headings":"Flag cells whose cluster assignment is ambiguous with tof_assess_clusters_entropy()","what":"Real data","title":"Quality control","text":"can also apply tof_assess_clusters_entropy() dataset derived levine data. Suppose take 5 largest clusters levine save result small_levine tof_tbl. , can perturb dataset replacing labels cells smallest cluster (cluster 9) random labels. effectively creates population cells dataset whose “true” cluster label absent. scenario, expect cells perturbed cluster relatively distant remaining clusters, whereas unperturbed cells relatively close cluster centroid (correct centroid). Thus, can test tof_assess_clusters_entropy() successfully flags cells perturbed cluster relative others: plot , can see cells cluster 9 larger entropy values cells clusters, expected.  Similarly, can see majority cells 9 successfully flagged tof_assess_clusters_entropy() using entropy quantile threshold 0.9. Conversely, cells cluster (cluster 15) flagged.","code":"clusters_to_keep <-     levine |>     dplyr::count(population_id) |>     dplyr::slice_max(order_by = n, n = 5L) |>     dplyr::arrange(n) |>     pull(population_id)  smallest_cluster <- clusters_to_keep[1] largest_cluster <- clusters_to_keep[[length(clusters_to_keep)]]  small_levine <-     levine |>     dplyr::filter(population_id %in% clusters_to_keep) # perform the perturbation small_levine <-     small_levine |>     dplyr::mutate(         new_population_id =             dplyr::if_else(                 population_id %in% smallest_cluster,                 sample(                     clusters_to_keep[-which(clusters_to_keep %in% smallest_cluster)],                     size = nrow(small_levine),                     replace = TRUE                 ),                 population_id             )     )  # perform the entropy assessment entropy_levine <-     small_levine |>     tof_assess_clusters_entropy(         cluster_col = new_population_id,         marker_cols = starts_with(\"cd\"),         augment = TRUE     ) entropy_levine |>     mutate(population_id = fct_reorder(population_id, entropy)) |>     tof_plot_cells_density(         marker_col = entropy,         group_col = population_id,         use_ggridges = TRUE,         scale = 0.1     ) +     ggplot2::theme(legend.position = \"none\") +     ggplot2::labs(x = \"Entropy\", y = \"Cluster ID\") entropy_levine |>     mutate(flagged_cell = entropy > quantile(entropy, prob = 0.9)) |>     dplyr::count(population_id, flagged_cell) |>     group_by(population_id) |>     mutate(prop = n / sum(n)) |>     ungroup() |>     dplyr::filter(flagged_cell) #> # A tibble: 2 × 4 #>   population_id flagged_cell     n   prop #>   <chr>         <lgl>        <int>  <dbl> #> 1 15            TRUE         12888 0.0798 #> 2 9             TRUE         11666 0.706"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Quality control","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats4    stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #>  [1] HDCytoData_1.22.1           flowCore_2.14.2             #>  [3] SummarizedExperiment_1.32.0 Biobase_2.62.0              #>  [5] GenomicRanges_1.54.1        GenomeInfoDb_1.38.8         #>  [7] IRanges_2.36.0              S4Vectors_0.40.2            #>  [9] MatrixGenerics_1.14.0       matrixStats_1.2.0           #> [11] ExperimentHub_2.10.0        AnnotationHub_3.10.0        #> [13] BiocFileCache_2.10.1        dbplyr_2.5.0                #> [15] BiocGenerics_0.48.1         forcats_1.0.0               #> [17] ggplot2_3.5.0               dplyr_1.1.4                 #> [19] tidytof_0.99.6              #>  #> loaded via a namespace (and not attached): #>   [1] jsonlite_1.8.8                shape_1.4.6.1                 #>   [3] magrittr_2.0.3                farver_2.1.1                  #>   [5] rmarkdown_2.26                fs_1.6.3                      #>   [7] zlibbioc_1.48.2               ragg_1.3.0                    #>   [9] vctrs_0.6.5                   memoise_2.0.1                 #>  [11] RCurl_1.98-1.14               htmltools_0.5.7               #>  [13] S4Arrays_1.2.1                curl_5.2.1                    #>  [15] SparseArray_1.2.4             sass_0.4.9                    #>  [17] parallelly_1.37.1             bslib_0.6.2                   #>  [19] desc_1.4.3                    lubridate_1.9.3               #>  [21] cachem_1.0.8                  igraph_2.0.3                  #>  [23] mime_0.12                     lifecycle_1.0.4               #>  [25] iterators_1.0.14              pkgconfig_2.0.3               #>  [27] Matrix_1.6-5                  R6_2.5.1                      #>  [29] fastmap_1.1.1                 shiny_1.8.0                   #>  [31] GenomeInfoDbData_1.2.11       future_1.33.1                 #>  [33] digest_0.6.35                 colorspace_2.1-0              #>  [35] AnnotationDbi_1.64.1          textshaping_0.3.7             #>  [37] RSQLite_2.3.5                 labeling_0.4.3                #>  [39] filelock_1.0.3                cytolib_2.14.1                #>  [41] fansi_1.0.6                   yardstick_1.3.1               #>  [43] timechange_0.3.0              httr_1.4.7                    #>  [45] polyclip_1.10-6               abind_1.4-5                   #>  [47] compiler_4.3.3                bit64_4.0.5                   #>  [49] withr_3.0.0                   doParallel_1.0.17             #>  [51] viridis_0.6.5                 DBI_1.2.2                     #>  [53] highr_0.10                    ggforce_0.4.2                 #>  [55] MASS_7.3-60.0.1               lava_1.8.0                    #>  [57] rappdirs_0.3.3                DelayedArray_0.28.0           #>  [59] tools_4.3.3                   interactiveDisplayBase_1.40.0 #>  [61] httpuv_1.6.14                 future.apply_1.11.1           #>  [63] nnet_7.3-19                   glue_1.7.0                    #>  [65] promises_1.2.1                grid_4.3.3                    #>  [67] generics_0.1.3                recipes_1.0.10                #>  [69] gtable_0.3.4                  tzdb_0.4.0                    #>  [71] class_7.3-22                  tidyr_1.3.1                   #>  [73] data.table_1.15.2             hms_1.1.3                     #>  [75] tidygraph_1.3.1               utf8_1.2.4                    #>  [77] XVector_0.42.0                ggrepel_0.9.5                 #>  [79] BiocVersion_3.18.1            foreach_1.5.2                 #>  [81] pillar_1.9.0                  stringr_1.5.1                 #>  [83] RcppHNSW_0.6.0                later_1.3.2                   #>  [85] splines_4.3.3                 tweenr_2.0.3                  #>  [87] lattice_0.22-5                survival_3.5-8                #>  [89] bit_4.0.5                     RProtoBufLib_2.14.1           #>  [91] tidyselect_1.2.1              Biostrings_2.70.3             #>  [93] knitr_1.45                    gridExtra_2.3                 #>  [95] xfun_0.42                     graphlayouts_1.1.1            #>  [97] hardhat_1.3.1                 timeDate_4032.109             #>  [99] stringi_1.8.3                 yaml_2.3.8                    #> [101] evaluate_0.23                 codetools_0.2-19              #> [103] ggraph_2.2.1                  tibble_3.2.1                  #> [105] BiocManager_1.30.22           cli_3.6.2                     #> [107] rpart_4.1.23                  xtable_1.8-4                  #> [109] systemfonts_1.0.6             munsell_0.5.0                 #> [111] jquerylib_0.1.4               Rcpp_1.0.12                   #> [113] globals_0.16.3                png_0.1-8                     #> [115] parallel_4.3.3                ellipsis_0.3.2                #> [117] pkgdown_2.0.7                 gower_1.0.1                   #> [119] readr_2.1.5                   blob_1.2.4                    #> [121] bitops_1.0-7                  listenv_0.9.1                 #> [123] glmnet_4.1-8                  viridisLite_0.4.2             #> [125] ipred_0.9-14                  ggridges_0.5.6                #> [127] scales_1.3.0                  prodlim_2023.08.28            #> [129] purrr_1.0.2                   crayon_1.5.2                  #> [131] rlang_1.1.3                   KEGGREST_1.42.0"},{"path":"https://keyes-timothy.github.io/tidytof/articles/reading-and-writing-data.html","id":"accessing-the-data-for-this-vignette","dir":"Articles","previous_headings":"","what":"Accessing the data for this vignette","title":"Reading and writing data","text":"tidytof comes bundled several example mass cytometry datasets. access raw FCS CSV files containing data, use tidytof_example_data function. called arguments, tidytof_example_data return character vector naming datasets contained tidytof: details datasets contained directories isn’t particularly important, basic information follows: aml - one FCS file containing myeloid cells healthy bone marrow one FCS file containing myeloid cells AML patient bone marrow ddpr - two FCS files containing B-cell lineage cells paper mix - two FCS files different CyTOF antigen panels (one FCS file “aml” directory one “phenograph” directory) mix2 - three files different CyTOF antigen panels different file extensions (one FCS file “aml” directory two CSV files “phenograph_csv directory) phenograph - three FCS files containing AML cells paper phenograph_csv - cells “phenograph” directory, stored CSV files scaffold - three FCS files paper statistical_scaffold - three FCS files paper surgery - three FCS files paper obtain file path directory containing dataset, call tidytof_example_data one dataset names argument. example, obtain directory phenograph data, use following command:","code":"tidytof_example_data() #> [1] \"aml\"               \"ddpr\"              \"ddpr_metadata.csv\" #> [4] \"mix\"               \"mix2\"              \"phenograph\"        #> [7] \"phenograph_csv\"    \"surgery\" tidytof_example_data(\"phenograph\") #> [1] \"/home/runner/work/_temp/Library/tidytof/extdata/phenograph\""},{"path":"https://keyes-timothy.github.io/tidytof/articles/reading-and-writing-data.html","id":"reading-data-with-tof_read_data","dir":"Articles","previous_headings":"","what":"Reading Data with tof_read_data","title":"Reading and writing data","text":"Using one directories (directory containing CyTOF data local machine), can use tof_read_data read CyTOF data raw files. Acceptable formats include FCS files CSV files. Importantly, tof_read_data smart enough read single FCS/CSV files multiple FCS/CSV files depending whether first argument (path) leads single file directory files. , can use tof_read_data read FCS files “phenograph” example dataset bundled tidytof store phenograph variable. Regardless input data file type, tidytof reads data extended tibble class called tof_tbl (pronounced “tof tibble”). tof tibbles S3 class identical tbl_df, one additional attribute (“panel”). tidytof stores additional attribute tof_tbls , addition analyzing CyTOF data individual experiments, CyTOF users often want compare panels experiments find common markers compare metals associated particular markers across panels. retrieve panel information tof_tbl, use tof_get_panel: additional notes tof_tbls: tof_tbls contains one cell per row one CyTOF channel per column (provide data “tidy” format). tof_read_data adds additional column output tof_tbl encoding name file cell read (“file_name” column). tof_tbls inherit tbl_df class, methods available tibbles also available tof_tbls.","code":"phenograph <-     tidytof_example_data(\"phenograph\") %>%     tof_read_data()  phenograph %>%     class() #> [1] \"tof_tbl\"    \"tbl_df\"     \"tbl\"        \"data.frame\" phenograph %>%     tof_get_panel() #> # A tibble: 44 × 2 #>   metals      antigens    #>   <chr>       <chr>       #> 1 Time        Time        #> 2 Cell_length Cell_length #> 3 Ir191       DNA1        #> 4 Ir193       DNA2        #> # ℹ 40 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/reading-and-writing-data.html","id":"using-tibble-methods-with-tidytof-tibbles","dir":"Articles","previous_headings":"","what":"Using tibble methods with {tidytof} tibbles","title":"Reading and writing data","text":"extension tbl_df class, tof_tbls get access dplyr tidyr free. can useful performing variety common operations. example, phenograph object two columns - PhenoGraph Condition - encode categorical variables numeric codes. might interested converting types columns strings make sure don’t accidentally perform quantitative operations later. Thus, dplyr’s useful mutate method can applied phenograph convert two columns character vectors. note tof_tbl class preserved even transformations. Importantly, tof_read_data uses opinionated heuristic mine different keyword slots input FCS file(s) guess metals antigens used data acquisition. Thus, CSV files read using tof_read_data, recommended use panel_info argument provide panel manually (CSV files, unlike FCS files, provide built-metadata columns contain).","code":"phenograph <-     phenograph %>%     # mutate the input tof_tbl     mutate(         PhenoGraph = as.character(PhenoGraph),         Condition = as.character(Condition)     )  phenograph %>%     # use dplyr's select method to show     # that the columns have been changed     select(where(is.character)) #> # A tibble: 300 × 3 #>   file_name                  PhenoGraph Condition #>   <chr>                      <chr>      <chr>     #> 1 H1_PhenoGraph_cluster1.fcs 7          7         #> 2 H1_PhenoGraph_cluster1.fcs 6          6         #> 3 H1_PhenoGraph_cluster1.fcs 9          9         #> 4 H1_PhenoGraph_cluster1.fcs 2          2         #> # ℹ 296 more rows phenograph %>%     class() #> [1] \"tof_tbl\"    \"tbl_df\"     \"tbl\"        \"data.frame\" # when csv files are read, the tof_tibble's \"panel\" # attribute will be empty by default tidytof_example_data(\"phenograph_csv\") %>%     tof_read_data() %>%     tof_get_panel() #> # A tibble: 0 × 0  # to add a panel manually, provide it as a tibble # to tof_read_data phenograph_panel <-     phenograph %>%     tof_get_panel()  tidytof_example_data(\"phenograph_csv\") %>%     tof_read_data(panel_info = phenograph_panel) %>%     tof_get_panel() #> # A tibble: 44 × 2 #>   antigens    metals      #>   <chr>       <chr>       #> 1 Time        Time        #> 2 Cell_length Cell_length #> 3 DNA1        Ir191       #> 4 DNA2        Ir193       #> # ℹ 40 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/reading-and-writing-data.html","id":"writing-data-from-a-tof_tbl-to-disk","dir":"Articles","previous_headings":"","what":"Writing data from a tof_tbl to disk","title":"Reading and writing data","text":"Users may wish store CyTOF data FCS CSV files transformation, concatenation, filtering, data processing. write single-cell data tof_tbl FCS CSV files, use tof_write_data. illustrate use verb, use tidytof’s built-phenograph_data dataset. tof_write_data’s trickiest argument group_cols, argument used specify columns tof_tibble used group cells (rows tof_tibble) separate FCS CSV files. Simply put, argument allows tof_write_data create single FCS CSV file unique combination values group_cols columns specified user. example , cells grouped 3 output FCS files - one 3 clusters encoded phenograph_cluster column phenograph_data. files following names (derived values phenograph_cluster column): cluster1.fcs cluster2.fcs cluster3.fcs Note file names match distinct values group_cols column (phenograph_cluster): However, suppose wanted write multiple files cluster breaking cells two groups: express high levels pstat5 express low levels pstat5. can use dplyr::mutate create new column phenograph_data breaks cells high- low-pstat5 expression groups, add column group_cols specification: write 6 files following names (derived values phenograph_cluster expression_group). cluster1_low.fcs cluster1_high.fcs cluster2_low.fcs cluster2_high.fcs cluster3_low.fcs cluster3_high.fcs , note file names match distinct values group_cols columns (phenograph_cluster expression_group): useful feature tof_write_data automatically concatenate cells single FCS CSV files based specified group_cols regardless many unique files cells came . allows easy concatenation FCS CSV files containing data single sample acquired multiple CyTOF runs, example.","code":"data(phenograph_data)  print(phenograph_data) #> # A tibble: 3,000 × 25 #>   sample_name  phenograph_cluster    cd19 cd11b   cd34  cd45  cd123   cd33  cd47 #>   <chr>        <chr>                <dbl> <dbl>  <dbl> <dbl>  <dbl>  <dbl> <dbl> #> 1 H1_PhenoGra… cluster1           -0.168  29.0   3.23   131. -0.609  1.21   13.0 #> 2 H1_PhenoGra… cluster1            1.65    4.83 -0.582  230.  2.53  -0.507  12.9 #> 3 H1_PhenoGra… cluster1            2.79   36.1   5.20   293. -0.265  3.67   27.1 #> 4 H1_PhenoGra… cluster1            0.0816 48.8   0.363  431.  2.04   9.40   41.0 #> # ℹ 2,996 more rows #> # ℹ 16 more variables: cd7 <dbl>, cd44 <dbl>, cd38 <dbl>, cd3 <dbl>, #> #   cd117 <dbl>, cd64 <dbl>, cd41 <dbl>, pstat3 <dbl>, pstat5 <dbl>, #> #   pampk <dbl>, p4ebp1 <dbl>, ps6 <dbl>, pcreb <dbl>, `pzap70-syk` <dbl>, #> #   prb <dbl>, `perk1-2` <dbl> # when copying and pasting this code, feel free to change this path # to wherever you'd like to save your output files my_path <- file.path(\"~\", \"Desktop\", \"tidytof_vignette_files\")  phenograph_data %>%     tof_write_data(         group_cols = phenograph_cluster,         out_path = my_path,         format = \"fcs\"     ) phenograph_data %>%     distinct(phenograph_cluster) #> # A tibble: 3 × 1 #>   phenograph_cluster #>   <chr>              #> 1 cluster1           #> 2 cluster2           #> 3 cluster3 phenograph_data %>%     # create a variable representing if a cell is above or below     # the median expression level of pstat5     mutate(         expression_group = if_else(pstat5 > median(pstat5), \"high\", \"low\")     ) %>%     tof_write_data(         group_cols = c(phenograph_cluster, expression_group),         out_path = my_path,         format = \"fcs\"     ) phenograph_data %>%     mutate(         expression_group = if_else(pstat5 > median(pstat5), \"high\", \"low\")     ) %>%     distinct(phenograph_cluster, expression_group) #> # A tibble: 6 × 2 #>   phenograph_cluster expression_group #>   <chr>              <chr>            #> 1 cluster1           low              #> 2 cluster1           high             #> 3 cluster2           low              #> 4 cluster2           high             #> # ℹ 2 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/reading-and-writing-data.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Reading and writing data","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] dplyr_1.1.4    tidytof_0.99.6 #>  #> loaded via a namespace (and not attached): #>   [1] gridExtra_2.3       rlang_1.1.3         magrittr_2.0.3      #>   [4] matrixStats_1.2.0   compiler_4.3.3      systemfonts_1.0.6   #>   [7] vctrs_0.6.5         stringr_1.5.1       crayon_1.5.2        #>  [10] pkgconfig_2.0.3     shape_1.4.6.1       fastmap_1.1.1       #>  [13] ggraph_2.2.1        utf8_1.2.4          rmarkdown_2.26      #>  [16] prodlim_2023.08.28  tzdb_0.4.0          ragg_1.3.0          #>  [19] bit_4.0.5           purrr_1.0.2         xfun_0.42           #>  [22] glmnet_4.1-8        cachem_1.0.8        jsonlite_1.8.8      #>  [25] recipes_1.0.10      tweenr_2.0.3        parallel_4.3.3      #>  [28] R6_2.5.1            bslib_0.6.2         stringi_1.8.3       #>  [31] parallelly_1.37.1   rpart_4.1.23        lubridate_1.9.3     #>  [34] jquerylib_0.1.4     Rcpp_1.0.12         iterators_1.0.14    #>  [37] knitr_1.45          future.apply_1.11.1 readr_2.1.5         #>  [40] flowCore_2.14.2     Matrix_1.6-5        splines_4.3.3       #>  [43] nnet_7.3-19         igraph_2.0.3        timechange_0.3.0    #>  [46] tidyselect_1.2.1    yaml_2.3.8          viridis_0.6.5       #>  [49] timeDate_4032.109   doParallel_1.0.17   codetools_0.2-19    #>  [52] listenv_0.9.1       lattice_0.22-5      tibble_3.2.1        #>  [55] Biobase_2.62.0      withr_3.0.0         evaluate_0.23       #>  [58] future_1.33.1       desc_1.4.3          survival_3.5-8      #>  [61] polyclip_1.10-6     pillar_1.9.0        foreach_1.5.2       #>  [64] stats4_4.3.3        generics_0.1.3      vroom_1.6.5         #>  [67] RcppHNSW_0.6.0      S4Vectors_0.40.2    hms_1.1.3           #>  [70] ggplot2_3.5.0       munsell_0.5.0       scales_1.3.0        #>  [73] globals_0.16.3      class_7.3-22        glue_1.7.0          #>  [76] tools_4.3.3         data.table_1.15.2   gower_1.0.1         #>  [79] fs_1.6.3            graphlayouts_1.1.1  tidygraph_1.3.1     #>  [82] grid_4.3.3          yardstick_1.3.1     tidyr_1.3.1         #>  [85] RProtoBufLib_2.14.1 ipred_0.9-14        colorspace_2.1-0    #>  [88] ggforce_0.4.2       cli_3.6.2           textshaping_0.3.7   #>  [91] fansi_1.0.6         cytolib_2.14.1      viridisLite_0.4.2   #>  [94] lava_1.8.0          gtable_0.3.4        sass_0.4.9          #>  [97] digest_0.6.35       BiocGenerics_0.48.1 ggrepel_0.9.5       #> [100] farver_2.1.1        memoise_2.0.1       htmltools_0.5.7     #> [103] pkgdown_2.0.7       lifecycle_1.0.4     hardhat_1.3.1       #> [106] bit64_4.0.5         MASS_7.3-60.0.1"},{"path":"https://keyes-timothy.github.io/tidytof/articles/tidytof.html","id":"prerequisites","dir":"Articles","previous_headings":"","what":"Prerequisites","title":"Getting started with tidytof","text":"tidytof makes heavy use two concepts may unfamiliar R beginners. first pipe (|>), can read . second “grouping” data data.frame tibble using dplyr::group_by, can read . tidytof users also benefit relatively -depth understanding dplyr package, wonderful introductory vignette : Everything else self-explanatory beginner advanced R users, though zero background running R code, read chapter R Data Science Hadley Wickham.","code":"vignette(\"dplyr\")"},{"path":"https://keyes-timothy.github.io/tidytof/articles/tidytof.html","id":"workflow-basics","dir":"Articles","previous_headings":"","what":"Workflow basics","title":"Getting started with tidytof","text":"Broadly speaking, tidytof’s functionality organized support 3 levels analysis inherent single-cell data described : Reading, writing, preprocessing, visualizing data level individual cells Identifying describing cell subpopulations clusters Building models (inference prediction) level patients samples tidytof provides functions (“verbs”) operate levels analysis: Cell-level data: tof_read_data() reads single-cell data FCS CSV files disk tidy data frame called tof_tbl. tof_tbls represent cell row protein measurement (piece information associated given cell) column. tof_preprocess() transforms protein expression values using user-provided function (.e. log-transformation, centering, scaling) tof_downsample() reduces number cells tof_tibble via subsampling. tof_reduce_dimensions() performs dimensionality reduction (across columns) tof_write_data writes single-cell data tof_tibble back disk form FCS CSV file. Cluster-level data: tof_cluster() clusters cells using one several algorithms commonly applied high-dimensional cytometry data tof_metacluster() agglomerates clusters smaller number metaclusters tof_analyze_abundance() performs differential abundance analysis (DAA) clusters metaclusters across experimental groups tof_analyze_expression() performs differential expression analysis (DEA) clusters’ metaclusters’ marker expression levels across experimental groups tof_extract_features() computes summary statistics (mean marker expression) cluster. Also (optionally) pivots summary statistics sample-level tidy data frame row represents sample column represents cluster-level summary statistic. Sample-level data: tof_split_data() splits sample-level data training test set predictive modeling tof_create_grid() creates elastic net hyperparameter search grid model tuning tof_train_model() trains sample-level elastic net model saves tof_model object tof_predict() Applies trained tof_model new data predict sample-level outcomes tof_assess_model() calculates performance metrics trained tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/tidytof.html","id":"tidytof-verb-syntax","dir":"Articles","previous_headings":"","what":"{tidytof} verb syntax","title":"Getting started with tidytof","text":"exceptions, tidytof functions follow specific, shared syntax involves 3 types arguments always occur order. argument types follows: almost tidytof functions, first argument data frame (tibble). enables use pipe (|>) multi-step calculations, means first argument functions implicit (passed previous function using pipe). also means tidytof functions -called “single-table verbs,” exception tof_cluster_ddpr, “two-table verb” (details use tof_cluster_ddpr, see “clustering--metaclustering” vignette). second group arguments called column specifications, end suffix _col _cols. Column specifications unquoted column names tell tidytof verb columns compute particular operation. example, cluster_cols argument tof_cluster allows user specify column input data frames used perform clustering. Regardless verb requires , column specifications support tidyselect helpers follow rules tidyselection tidyverse verbs like dplyr::select() tidyr::pivot_longer(). Finally, third group arguments tidytof verb called method specifications, ’re comprised every argument isn’t input data frame column specification. Whereas column specifications represent columns used perform operation, method specifications represent details operation performed. example, tof_cluster_phenograph() function requires method specification num_neighbors, specifies many nearest neighbors used construct PhenoGraph algorithm’s k-nearest-neighbor graph. cases, tidytof sets reasonable defaults verb’s particular method specifications, workflows can also customized experimenting non-default values. following code demonstrates tidytof verb syntax looks practice, column method specifications explicitly pointed :","code":"data(ddpr_data)  set.seed(777L)  ddpr_data |>     tof_preprocess() |>     tof_cluster(         cluster_cols = starts_with(\"cd\"), # column specification         method = \"phenograph\", # method specification,     ) |>     tof_metacluster(         cluster_col = .phenograph_cluster, # column specification         num_metaclusters = 4, # method specification         method = \"kmeans\" # method specification     ) |>     tof_downsample(         group_cols = .kmeans_metacluster, # column specification         num_cells = 200, # method specification         method = \"constant\" # method specification     ) |>     tof_plot_cells_layout(         knn_cols = starts_with(\"cd\"), # column specification         color_col = .kmeans_metacluster, # column specification         num_neighbors = 7L, # method specification         node_size = 2L # method specification     )"},{"path":"https://keyes-timothy.github.io/tidytof/articles/tidytof.html","id":"pipelines","dir":"Articles","previous_headings":"","what":"Pipelines","title":"Getting started with tidytof","text":"tidytof verbs can used combination one another using pipe (|>) operator. example, multistep “pipeline” takes built-tidytof dataset performs following analytical steps: Arcsinh-transform column protein measurements (default behavior tof_preprocess verb Cluster cells based surface markers panel Downsample dataset 100 random cells picked cluster Perform dimensionality reduction downsampled dataset using tSNE Visualize clusters using low-dimensional tSNE embedding","code":"ddpr_data |>     # step 1     tof_preprocess() |>     # step 2     tof_cluster(         cluster_cols = starts_with(\"cd\"),         method = \"phenograph\",         # num_metaclusters = 4L,         seed = 2020L     ) |>     # step 3     tof_downsample(         group_cols = .phenograph_cluster,         method = \"constant\",         num_cells = 400     ) |>     # step 4     tof_reduce_dimensions(method = \"tsne\") |>     # step 5     tof_plot_cells_embedding(         embedding_cols = contains(\"tsne\"),         color_col = .phenograph_cluster     ) +     ggplot2::theme(legend.position = \"none\") #> Loading required namespace: Rtsne"},{"path":"https://keyes-timothy.github.io/tidytof/articles/tidytof.html","id":"other-tips","dir":"Articles","previous_headings":"","what":"Other tips","title":"Getting started with tidytof","text":"tidytof designed multidisciplinary team wet-lab biologists, bioinformaticians, physician-scientists analyze high-dimensional cytometry kinds single-cell data solve variety problems. result, tidytof’s high-level API designed great care mirror tidyverse - , human-centered, consistent, composable, inclusive wide userbase. Practically speaking, means things using tidytof. First, means tidytof designed quality--life features mind. example, may notice tidytof functions begin prefix tof_. intentional, allow use development environment’s code-completing software search tidytof functions easily (even can’t remember specific function name). reason, recommend using tidytof within RStudio development environment; however, many code editors predictive text functionality serves similar function. general, tidytof verbs organized way IDE’s code-completion tools also allow search (compare) related functions relative ease. (instance, tof_cluster_ prefix used clustering functions, tof_downsample_ prefix used downsampling functions). Second, means tidytof functions relatively intuitive use due shared logic - words, understand use one tidytof function, understand use others. example shared logic across tidytof functions argument group_cols, shows multiple verbs (tof_downsample, tof_cluster, tof_daa, tof_dea, tof_extract_features, tof_write_data). case, group_cols works way: accepts unquoted vector column names (specified manually using tidyselection) used group cells operation performed. idea generalizes throughout tidytof: see argument one place, behave identically (least similarly) wherever else encounter . Finally, means tidytof optimized first ease--use, performance. humans computers interact data differently, always trade-choosing data representation intuitive human user vs. choosing data representation optimized computational speed memory efficiency. design choices conflict one another, team tends err side choosing representation easy--understand users even expense small performance costs. Ultimately, means tidytof may optimal tool every high-dimensional cytometry analysis, though hopefully general framework provide users useful functionality.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/tidytof.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Getting started with tidytof","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] tidytof_0.99.6 #>  #> loaded via a namespace (and not attached): #>   [1] gridExtra_2.3       rlang_1.1.3         magrittr_2.0.3      #>   [4] matrixStats_1.2.0   compiler_4.3.3      systemfonts_1.0.6   #>   [7] vctrs_0.6.5         stringr_1.5.1       pkgconfig_2.0.3     #>  [10] shape_1.4.6.1       fastmap_1.1.1       labeling_0.4.3      #>  [13] ggraph_2.2.1        utf8_1.2.4          rmarkdown_2.26      #>  [16] prodlim_2023.08.28  tzdb_0.4.0          ragg_1.3.0          #>  [19] purrr_1.0.2         xfun_0.42           glmnet_4.1-8        #>  [22] cachem_1.0.8        jsonlite_1.8.8      recipes_1.0.10      #>  [25] highr_0.10          tweenr_2.0.3        parallel_4.3.3      #>  [28] R6_2.5.1            bslib_0.6.2         stringi_1.8.3       #>  [31] parallelly_1.37.1   rpart_4.1.23        lubridate_1.9.3     #>  [34] jquerylib_0.1.4     Rcpp_1.0.12         iterators_1.0.14    #>  [37] knitr_1.45          future.apply_1.11.1 readr_2.1.5         #>  [40] flowCore_2.14.2     Matrix_1.6-5        splines_4.3.3       #>  [43] nnet_7.3-19         igraph_2.0.3        timechange_0.3.0    #>  [46] tidyselect_1.2.1    yaml_2.3.8          viridis_0.6.5       #>  [49] timeDate_4032.109   doParallel_1.0.17   codetools_0.2-19    #>  [52] listenv_0.9.1       lattice_0.22-5      tibble_3.2.1        #>  [55] Biobase_2.62.0      withr_3.0.0         Rtsne_0.17          #>  [58] evaluate_0.23       future_1.33.1       desc_1.4.3          #>  [61] survival_3.5-8      polyclip_1.10-6     pillar_1.9.0        #>  [64] foreach_1.5.2       stats4_4.3.3        generics_0.1.3      #>  [67] RcppHNSW_0.6.0      S4Vectors_0.40.2    hms_1.1.3           #>  [70] ggplot2_3.5.0       munsell_0.5.0       scales_1.3.0        #>  [73] globals_0.16.3      class_7.3-22        glue_1.7.0          #>  [76] tools_4.3.3         data.table_1.15.2   gower_1.0.1         #>  [79] fs_1.6.3            graphlayouts_1.1.1  tidygraph_1.3.1     #>  [82] grid_4.3.3          yardstick_1.3.1     tidyr_1.3.1         #>  [85] RProtoBufLib_2.14.1 ipred_0.9-14        colorspace_2.1-0    #>  [88] ggforce_0.4.2       cli_3.6.2           textshaping_0.3.7   #>  [91] fansi_1.0.6         cytolib_2.14.1      viridisLite_0.4.2   #>  [94] lava_1.8.0          dplyr_1.1.4         gtable_0.3.4        #>  [97] sass_0.4.9          digest_0.6.35       BiocGenerics_0.48.1 #> [100] ggrepel_0.9.5       farver_2.1.1        memoise_2.0.1       #> [103] htmltools_0.5.7     pkgdown_2.0.7       lifecycle_1.0.4     #> [106] hardhat_1.3.1       MASS_7.3-60.0.1"},{"path":"https://keyes-timothy.github.io/tidytof/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Timothy Keyes. Maintainer. Kara Davis. Research team head, owner. Garry Nolan. Research team head, owner.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Keyes T, Davis K, Nolan G (2024). tidytof: user-friendly framework scalable reproducible high-dimensional cytometry data analysis. doi:10.18129/B9.bioc.tidytof, https://github.com/keyes-timothy/tidytof/tidytof - R package version 0.99.6, http://www.bioconductor.org/packages/tidytof. Keyes, J. T, Koladiya, Abhishek, Lo, Yu-Chen, Nolan, P. G, Davis, L. K (2023). “tidytof: user-friendly framework scalable reproducible high-dimensional cytometry data analysis.” Bioinformatics Advances, 3(1). doi:10.1093/bioadv/vbad071, https://academic.oup.com/bioinformaticsadvances/article/3/1/vbad071/7192984.","code":"@Manual{,   title = {tidytof: a user-friendly framework for scalable and reproducible high-dimensional cytometry data analysis},   author = {Timothy Keyes and Kara Davis and Garry Nolan},   year = {2024},   url = {http://www.bioconductor.org/packages/tidytof},   note = {https://github.com/keyes-timothy/tidytof/tidytof - R package version 0.99.6},   doi = {10.18129/B9.bioc.tidytof}, } @Article{,   title = {tidytof: a user-friendly framework for scalable and reproducible high-dimensional cytometry data analysis},   author = {{Keyes} and Timothy J. and {Koladiya} and {Abhishek} and {Lo} and {Yu-Chen} and {Nolan} and Garry P. and {Davis} and Kara L.},   year = {2023},   journal = {Bioinformatics Advances},   volume = {3},   number = {1},   doi = {10.1093/bioadv/vbad071},   url = {https://academic.oup.com/bioinformaticsadvances/article/3/1/vbad071/7192984}, }"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"tidytof-a-user-friendly-framework-for-interactive-and-reproducible-cytometry-data-analysis-","dir":"","previous_headings":"","what":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"tidytof R package implements open-source, integrated “grammar” single-cell data analysis high-dimensional cytometry data (.e. mass cytometry, full-spectrum flow cytometry, sequence-based cytometry). Specifically, tidytof provides easy--use pipeline handling high-dimensional cytometry data multiple levels observation - single-cell level, cell subpopulation (cluster) level, whole-sample level - automating many common data-processing tasks common “tidy data” interface. extension tidyverse ecosystem data manipulation tools R, tidytof’s functions developed internally consistent, human-centered set design principles. means using tidytof equally intuitive among scientists wide range coding experience (including beginners).","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"prerequisites","dir":"","previous_headings":"Getting started","what":"Prerequisites","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"tidytof makes heavy use two concepts R beginners may unfamiliar . first pipe (|>), can read . second “grouping” data data.frame tibble using dplyr::group_by, can read . Everything else self-explanatory beginner advanced R users, though zero background running R code, read chapter R Data Science Hadley Wickham.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"package-structure","dir":"","previous_headings":"Getting started","what":"Package structure","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"Broadly speaking, tidytof’s functionality organized support 3 levels analysis inherent single-cell data: Reading, writing, preprocessing, visualizing data level single cells Identifying describing cell subpopulations clusters Building models (inference prediction) level patients samples use tidytof levels cytometry data analysis detailed “Usage” section .","code":""},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"can install development version tidytof GitHub following command: tidytof installed, can attach current R session using following code: addition, can install load packages need vignette:","code":"if (!require(devtools)) install.packages(\"devtools\") devtools::install_github(\"keyes-timothy/tidytof\") library(tidytof) if (!require(FlowSOM)) BiocManager::install(\"FlowSOM\") library(FlowSOM)  if (!require(tidyverse)) install.packages(\"tidyverse\") library(tidyverse)"},{"path":[]},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"reading-data-with-tof_read_data","dir":"","previous_headings":"Usage > Analyzing data at the single-cell level","what":"Reading data with tof_read_data","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"tidytof comes bundled several example mass cytometry datasets. access raw .fcs .csv files containing data, use tidytof_example_data function. called arguments, tidytof_example_data return character vector naming datasets contained tidytof: obtain file path directory containing dataset, call tidytof_example_data one dataset names argument. example, obtain directory phenograph data, use following command: Using one directories (directory containing cytometry data local machine), can use tof_read_data read cytometry data raw files. Acceptable formats include .fcs files .csv files. Importantly, tof_read_data smart enough read single .fcs/.csv files multiple .fcs/.csv files depending whether first argument (path) leads single file directory files. , can use tof_read_data read .fcs files “phenograph” example dataset bundled tidytof store phenograph variable. Regardless input format, tidytof reads data extended tibble called tof_tbl (pronounced “tof tibble”), S3 class identical tbl_df, one additional attribute (“panel”). tidytof stores additional attribute tof_tbls , addition analyzing cytometry data individual experiments, cytometry users often want compare panels experiments find common markers compare metals associated particular markers across panels. notes tof_tbls: tof_tbls contains one cell per row one cytometry channel per column (provide data “tidy” format). tof_read_data adds additional column output tof_tbl encoding name file cell read (“file_name” column). tof_tbls inherit tbl_df class, methods available tibbles also available tof_tbls. example, dplyr’s useful mutate method can applied tof_tbl named phenograph convert columns encoding phenograph cluster ID stimulation condition cell belongs character vectors (instead original numeric codes uncleaned dataset). tof_tbl class preserved even transformations. Finally, retrieve panel information tof_tbl, use tof_get_panel: Importantly, tof_read_data uses opinionated heuristic mine different keyword slots input .fcs file(s) guess metals antigens used data collection. Thus, .csv files read using tof_read_data, recommended use panel_info argument provide panel manually (.csv files, unlike .fcs files, provide built-metadata columns contain).","code":"tidytof_example_data() #>  [1] \"aml\"                  \"ddpr\"                 \"ddpr_metadata.csv\"    #>  [4] \"mix\"                  \"mix2\"                 \"phenograph\"           #>  [7] \"phenograph_csv\"       \"scaffold\"             \"statistical_scaffold\" #> [10] \"surgery\" tidytof_example_data(\"phenograph\") #> [1] \"/Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/library/tidytof/extdata/phenograph\" phenograph <-     tidytof_example_data(\"phenograph\") |>     tof_read_data()  phenograph |>     class() #> [1] \"tof_tbl\"    \"tbl_df\"     \"tbl\"        \"data.frame\" phenograph <-     phenograph |>     # mutate the input tof_tbl     mutate(         PhenoGraph = as.character(PhenoGraph),         Condition = as.character(Condition)     )  phenograph |>     # use dplyr's select method to show that the columns have been changed     select(where(is.character)) |>     head() #> # A tibble: 6 × 3 #>   file_name                  PhenoGraph Condition #>   <chr>                      <chr>      <chr>     #> 1 H1_PhenoGraph_cluster1.fcs 7          7         #> 2 H1_PhenoGraph_cluster1.fcs 6          6         #> 3 H1_PhenoGraph_cluster1.fcs 9          9         #> 4 H1_PhenoGraph_cluster1.fcs 2          2         #> 5 H1_PhenoGraph_cluster1.fcs 15         15        #> 6 H1_PhenoGraph_cluster1.fcs 12         12 phenograph |>     class() #> [1] \"tof_tbl\"    \"tbl_df\"     \"tbl\"        \"data.frame\" phenograph |>     tof_get_panel() |>     head() #> # A tibble: 6 × 2 #>   metals      antigens    #>   <chr>       <chr>       #> 1 Time        Time        #> 2 Cell_length Cell_length #> 3 Ir191       DNA1        #> 4 Ir193       DNA2        #> 5 Pd104       BC1         #> 6 Pd106       BC2"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"pre-processing-with-tof_preprocess","dir":"","previous_headings":"Usage > Analyzing data at the single-cell level","what":"Pre-processing with tof_preprocess","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"Generally, raw ion counts analyte measured mass cytometer need transformed cytometry data analysis. Common preprocessing steps may include variance-stabilizing transformations - hyperbolic arcsine (arcsinh) transformation log transformation - scaling/centering, /denoising. perform standard preprocessing tasks tidytof, use tof_preprocess. tof_preprocess’s default behavior apply arcsinh transformation (cofactor 5) numeric column input tof_tibble well remove gaussian noise Fluidigm software adds ion count (noise added visualization purposes, analyses, removing recommended). example, can preprocess phenograph tof_tibble see first measurements change . alter tof_preprocess’s default behavior, change channel_cols argument (specify columns tof_tibble transformed) transform_fun argument (specify vector-valued function used transform channel_cols). keep gaussian noise added Fluidigm software (working dataset noise), set undo_noise argument FALSE. Finally, note built-function tof_postprocess works nearly identically tof_preprocess, provides different default behavior (namely, applying reverse arcsinh transformation cofactor 5 numeric columns. See ?tof_postprocess details).","code":"# before preprocessing phenograph |>     select(`CD45|Sm154`, `CD34|Nd148`, `CD38|Er167`) |>     head() #> # A tibble: 6 × 3 #>   `CD45|Sm154` `CD34|Nd148` `CD38|Er167` #>          <dbl>        <dbl>        <dbl> #> 1        440.         0.256        18.7  #> 2        705.         1.96         41.2  #> 3        383.        -0.302         6.51 #> 4         44.4        2.74         27.2  #> 5        892.         4.08         24.5  #> 6        448.         2.69         11.1 # perform preprocessing phenograph <-     phenograph |>     tof_preprocess()  # inspect new values phenograph |>     select(`CD45|Sm154`, `CD34|Nd148`, `CD38|Er167`) |>     head() #> # A tibble: 6 × 3 #>   `CD45|Sm154` `CD34|Nd148` `CD38|Er167` #>          <dbl>        <dbl>        <dbl> #> 1         5.17       0.0512         2.03 #> 2         5.64       0.382          2.81 #> 3         5.03      -0.0603         1.08 #> 4         2.88       0.524          2.40 #> 5         5.88       0.746          2.29 #> 6         5.19       0.515          1.54"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"downsampling-with-tof_downsample","dir":"","previous_headings":"Usage > Analyzing data at the single-cell level","what":"Downsampling with tof_downsample","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"Often, cytometry experiments collect tens hundreds millions cells total, can useful downsample smaller, computationally tractable number cells - either final analysis developing code. , tidytof implements tof_downsample verb, allows downsampling using 3 methods. Using tidytof’s built-dataset phenograph_data (smaller version dataset read ), can see original size dataset 1000 cells per cluster, 3000 cells total: randomly sample 200 cells per cluster, can use tof_downsample using “constant” method: Alternatively, wanted sample 50% cells cluster, use “prop” method: finally, might also interested taking slightly different approach downsampling downsamples number cells fixed constant proportion, fixed density phenotypic space. example, following scatterplot demonstrates certain areas phenotypic density phenograph_data contain cells others along cd34/cd38 axes:  reduce number cells dataset local density around cell dataset relatively constant, can use “density” method tof_downsample:  details, check documentation 3 underlying members tof_downsample_* function family (wrapped tof_downsample): tof_downsample_constant tof_downsample_prop tof_downsample_density","code":"data(phenograph_data)  phenograph_data |>     count(phenograph_cluster) #> # A tibble: 3 × 2 #>   phenograph_cluster     n #>   <chr>              <int> #> 1 cluster1            1000 #> 2 cluster2            1000 #> 3 cluster3            1000 phenograph_data |>     # downsample     tof_downsample(         method = \"constant\",         group_cols = phenograph_cluster,         num_cells = 200     ) |>     # count the number of downsampled cells in each cluster     count(phenograph_cluster) #> # A tibble: 3 × 2 #>   phenograph_cluster     n #>   <chr>              <int> #> 1 cluster1             200 #> 2 cluster2             200 #> 3 cluster3             200 phenograph_data |>     # downsample     tof_downsample(         method = \"prop\",         group_cols = phenograph_cluster,         prop_cells = 0.5     ) |>     # count the number of downsampled cells in each cluster     count(phenograph_cluster) #> # A tibble: 3 × 2 #>   phenograph_cluster     n #>   <chr>              <int> #> 1 cluster1             500 #> 2 cluster2             500 #> 3 cluster3             500 phenograph_data |>     # preprocess all numeric columns in the dataset     tof_preprocess(undo_noise = FALSE) |>     # make a scatterplot     ggplot(aes(x = cd34, y = cd38)) +     geom_point(alpha = 0.5) +     scale_x_continuous(limits = c(NA, 1.5)) +     scale_y_continuous(limits = c(NA, 4)) +     theme_bw() phenograph_data |>     tof_preprocess(undo_noise = FALSE) |>     tof_downsample(         density_cols = c(cd34, cd38),         target_prop_cells = 0.25,         method = \"density\",     ) |>     ggplot(aes(x = cd34, y = cd38)) +     geom_point(alpha = 0.5) +     scale_x_continuous(limits = c(NA, 1.5)) +     scale_y_continuous(limits = c(NA, 4)) +     theme_bw()"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"writing-data-with-tof_write_data","dir":"","previous_headings":"Usage > Analyzing data at the single-cell level","what":"Writing data with tof_write_data","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"Finally, users may wish store single-cell data .fcs .csv files transformation, concatenation, filtering, data processing steps dimensionality reduction /clustering (see ). write single-cell data tof_tbl .fcs .csv files, use tof_write_data. tof_write_data’s trickiest argument group_cols, argument used specify columns tof_tibble used group cells (.e. rows tof_tibble) separate .fcs .csv files. Simply put, argument allows tof_write_data create single .fcs .csv file unique combination values columns specified user. example , cells grouped 3 output .fcs files - one 3 clusters encoded phenograph_cluster column phenograph_data. files following names (derived values phenograph_cluster column): cluster1.fcs cluster2.fcs cluster3.fcs However, suppose wanted write multiple files cluster breaking cells two groups: express high levels pstat5 express low levels pstat5. can use dplyr::mutate create new column phenograph_data breaks cells high- low-pstat5 expression groups, add column group_cols specification: write 6 files following names (derived values phenograph_cluster expression_group). cluster1_low.fcs cluster1_high.fcs cluster2_low.fcs cluster2_high.fcs cluster3_low.fcs cluster3_high.fcs useful feature tof_write_data automatically concatenate cells single .fcs .csv files based specified group_cols regardless many unique files cells came , allowing easy concatenation .fcs .csv files containing data single sample acquired multiple cytometry runs.","code":"# when copying and pasting this code, feel free to change this path # to wherever you'd like to save your output files my_path <- file.path(\"~\", \"Desktop\", \"tidytof_vignette_files\")  phenograph_data |>     tof_write_data(         group_cols = phenograph_cluster,         out_path = my_path,         format = \"fcs\"     ) phenograph_data |>     # create a variable representing if a cell is above or below the median     # expression level of pstat5     mutate(expression_group = if_else(pstat5 > median(pstat5), \"high\", \"low\")) |>     tof_write_data(         group_cols = c(phenograph_cluster, expression_group),         out_path = my_path,         format = \"fcs\"     )"},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"identifying-clusters-with-tof_cluster","dir":"","previous_headings":"Usage > Analyzing data at the cluster-level","what":"Identifying clusters with tof_cluster","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"input files read tabular format preprocessed/downsampled, might interested clustering data define communities cells shared characteristics. , can use tof_cluster verb. Several clustering methods implemented tidytof, including FlowSOM, PhenoGraph, k-means, others. demonstrate, can apply FlowSOM clustering algorithm phenograph_data . Note phenograph_data contains 6000 total cells (2000 3 clusters identified original PhenoGraph publication). output tof_cluster tof_tbl identical input tibble, now addition additional column (“.flowsom_metacluster”) encodes cluster id cell input tof_tbl. Note output columns added tibble tof_tbl tidytof begin full-stop (“.”) reduce likelihood collisions existing column names. output tof_cluster tof_tbl, can use dplyr’s count method assess accuracy FlowSOM clustering compared original clustering PhenoGraph paper. , can see FlowSOM algorithm groups cells PhenoGraph cluster one another (small number mistakes per PhenoGraph cluster). change clustering algorithm tof_cluster uses, alter method flag; change columns used compute clusters, change cluster_cols flag. finally, want return tibble includes cluster labels (cluster labels added new column input tof_tbl), set augment FALSE.","code":"phenograph_clusters <-     phenograph_data |>     tof_preprocess() |>     tof_cluster(method = \"flowsom\", cluster_cols = contains(\"cd\"))  phenograph_clusters |>     select(sample_name, .flowsom_metacluster, everything()) |>     head() #> # A tibble: 6 × 26 #>   sample_name      .flowsom_metacluster phenograph_cluster    cd19 cd11b    cd34 #>   <chr>            <chr>                <chr>                <dbl> <dbl>   <dbl> #> 1 H1_PhenoGraph_c… 13                   cluster1           -0.0336 2.46   0.608  #> 2 H1_PhenoGraph_c… 18                   cluster1            0.324  0.856 -0.116  #> 3 H1_PhenoGraph_c… 10                   cluster1            0.532  2.67   0.909  #> 4 H1_PhenoGraph_c… 8                    cluster1            0.0163 2.97   0.0725 #> 5 H1_PhenoGraph_c… 13                   cluster1            0.144  2.98   0.128  #> 6 H1_PhenoGraph_c… 8                    cluster1            0.742  3.41   0.336  #> # ℹ 20 more variables: cd45 <dbl>, cd123 <dbl>, cd33 <dbl>, cd47 <dbl>, #> #   cd7 <dbl>, cd44 <dbl>, cd38 <dbl>, cd3 <dbl>, cd117 <dbl>, cd64 <dbl>, #> #   cd41 <dbl>, pstat3 <dbl>, pstat5 <dbl>, pampk <dbl>, p4ebp1 <dbl>, #> #   ps6 <dbl>, pcreb <dbl>, `pzap70-syk` <dbl>, prb <dbl>, `perk1-2` <dbl> phenograph_clusters |>     count(phenograph_cluster, .flowsom_metacluster, sort = TRUE) #> # A tibble: 23 × 3 #>    phenograph_cluster .flowsom_metacluster     n #>    <chr>              <chr>                <int> #>  1 cluster3           12                     323 #>  2 cluster3           15                     318 #>  3 cluster2           3                      309 #>  4 cluster1           17                     234 #>  5 cluster2           2                      218 #>  6 cluster2           4                      206 #>  7 cluster1           8                      182 #>  8 cluster1           18                     167 #>  9 cluster1           9                      162 #> 10 cluster3           20                     162 #> # ℹ 13 more rows # will result in a tibble with only 1 column (the cluster labels) phenograph_data |>     tof_preprocess() |>     tof_cluster(method = \"flowsom\", cluster_cols = contains(\"cd\"), augment = FALSE) |>     head() #> # A tibble: 6 × 1 #>   .flowsom_metacluster #>   <chr>                #> 1 13                   #> 2 3                    #> 3 10                   #> 4 11                   #> 5 10                   #> 6 11"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"dimensionality-reduction-with-tof_reduce_dimensions","dir":"","previous_headings":"Usage > Analyzing data at the cluster-level","what":"Dimensionality reduction with tof_reduce_dimensions()","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"clusters identified, useful tool visualizing dimensionality reduction, form unsupervised machine learning used represent high-dimensional datasets smaller, easier--visualize number dimensions. tidytof includes several algorithms commonly used biologists dimensionality reduction: Principal component analysis (PCA), t-distributed stochastic neighbor embedding (tSNE), uniform manifold approximation projection (UMAP). apply dataset, use tof_reduce_dimensions: default, tof_reduce_dimensions add reduced-dimension feature embeddings input tof_tbl return augmented tof_tbl (, tof_tbl new columns embedding dimension) result. return features embeddings , set augment FALSE (tof_cluster). Regardless method used, reduced-dimension feature embeddings can visualized using ggplot2 (graphics package):   visualizations can helpful qualitatively describing phenotypic differences clusters dataset. example, example , can see one clusters high CD11b expression, whereas others lower CD11b expression.","code":"# perform the dimensionality reduction phenograph_tsne <-     phenograph_clusters |>     tof_reduce_dimensions(method = \"tsne\")  # select only the tsne embedding columns using a tidyselect helper (contains) phenograph_tsne |>     select(contains(\"tsne\")) |>     head() #> # A tibble: 6 × 2 #>   .tsne1 .tsne2 #>    <dbl>  <dbl> #> 1  -8.41   17.2 #> 2   1.91   13.6 #> 3  23.9    20.1 #> 4   4.79   22.3 #> 5  -4.99   22.4 #> 6  11.0    20.2 # plot the tsne embeddings using color to distinguish between clusters phenograph_tsne |>     ggplot(aes(x = .tsne1, y = .tsne2, fill = phenograph_cluster)) +     geom_point(shape = 21) +     theme_bw() +     labs(fill = NULL) # plot the tsne embeddings using color to represent CD11b expression phenograph_tsne |>     ggplot(aes(x = .tsne1, y = .tsne2, fill = cd11b)) +     geom_point(shape = 21) +     scale_fill_viridis_c() +     theme_bw() +     labs(fill = \"CD11b expression\")"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"differential-discovery-analysis-with-tof_analyze_abundance-and-tof_analyze_expression","dir":"","previous_headings":"Usage > Analyzing data at the cluster-level","what":"Differential discovery analysis with tof_analyze_abundance and tof_analyze_expression","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"dimensionality reduction can used visualize clustering result, many cytometry users also want use statistical tools rigorously quantify clusters(s) dataset associate particular experimental clinical variable. analyses often grouped umbrella term differential discovery analysis include comparing relative size clusters experimental conditions (differential abundance analysis; DAA) well comparing marker expression patterns clusters experimental conditions (differential expression analysis; DEA). tidytof provides tof_analyze_abundance tof_analyze_expression verbs differential abundance differential expression analyses, respectively. demonstrate use verbs, ’ll first download dataset originally collected development CITRUS algorithm. data available HDCytoData package, available Bioconductor can downloaded following command: load CITRUS data current R session, can call function HDCytoData, provide us format {flowCore} package (called “flowSet”). convert tidy tibble, can use tidytof built-method converting flowCore objects tof_tbl’s . Thus, can see citrus_data tof_tbl 172791 cells (one row) 39 pieces information cell (one column). can also extract metadata raw data join single-cell data using functions tidyverse: Thus, now sample-level information patient sample collected stimulation condition (“Basal” “BCR-XL”) sample exposed data acquisition. Finally, can join metadata single-cell tof_tbl obtain cleaned dataset. data cleaning steps, now citrus_data, tof_tbl containing cells collected 8 patients. Specifically, 2 samples taken patient: one cells’ B-cell receptors stimulated (BCR-XL) one (Basal). citrus_data, cell’s patient origin stored patient column, cell’s stimulation condition stored stimulation column. addition, population_id column stores information cluster labels applied cell using combination FlowSOM clustering manual merging (details, run ?HDCytoData::Bodenmiller_BCR_XL R console). might wonder certain clusters expand deplete within patients two stimulation conditions described - question requires differential abundance analysis (DAA). tidytof’s tof_analyze_abundance verb supports use 3 statistical approaches performing DAA: diffcyt, generalized-linear mixed modeling (GLMMs), simple t-tests. setup described uses paired design 2 experimental conditions interest (Basal vs. BCR-XL), can use paired t-test method: Based output, can see 6 8 clusters statistically different abundance two stimulation conditions. Using tidytof easy integration tidyverse packages, can use result visualize fold-changes cluster (within patient) BCR-XL condition compared Basal condition using ggplot2:  Importantly, output tof_analyze_abundance depends slightly underlying statistical method used, details can found documentation tof_analyze_abundance_* function family member: tof_analyze_abundance_diffcyt tof_analyze_abundance_glmm tof_analyze_abundance_ttest Similarly, suppose ’re interested intracellular signaling proteins change expression levels two stimulation conditions clusters. Differential Expression Analysis (DEA) can performed using tidytof’s tof_analyze_expression verb. , can use paired t-tests multiple-hypothesis correction test significant differences cluster’s expression signaling markers stimulation conditions. output tof_analyze_expression() also depends underlying test used, can see result looks relatively similar output tof_analyze_abundance(). , output tibble row represents differential expression results single cluster-marker pair - example, first row represents difference expression pS6 cluster 1 BCR-XL Basal conditions. row includes raw p-value multiple-hypothesis-corrected p-value cluster-marker pair. result can used make volcano plot visualize results cluster-marker pairs:","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE)) {     install.packages(\"BiocManager\") }  BiocManager::install(\"HDCytoData\") citrus_raw <- HDCytoData::Bodenmiller_BCR_XL_flowSet()  citrus_data <-     citrus_raw |>     as_tof_tbl(sep = \"_\") citrus_metadata <-     tibble(         file_name = as.character(flowCore::pData(citrus_raw)[[1]]),         sample_id = seq_along(file_name),         patient = str_extract(file_name, \"patient[:digit:]\"),         stimulation = str_extract(file_name, \"(BCR-XL)|Reference\")     ) |>     mutate(         stimulation = if_else(stimulation == \"Reference\", \"Basal\", stimulation)     )  citrus_metadata |>     head() #> # A tibble: 6 × 4 #>   file_name                          sample_id patient  stimulation #>   <chr>                                  <int> <chr>    <chr>       #> 1 PBMC8_30min_patient1_BCR-XL.fcs            1 patient1 BCR-XL      #> 2 PBMC8_30min_patient1_Reference.fcs         2 patient1 Basal       #> 3 PBMC8_30min_patient2_BCR-XL.fcs            3 patient2 BCR-XL      #> 4 PBMC8_30min_patient2_Reference.fcs         4 patient2 Basal       #> 5 PBMC8_30min_patient3_BCR-XL.fcs            5 patient3 BCR-XL      #> 6 PBMC8_30min_patient3_Reference.fcs         6 patient3 Basal citrus_data <-     citrus_data |>     left_join(citrus_metadata, by = \"sample_id\") daa_result <-     citrus_data |>     tof_analyze_abundance(         cluster_col = population_id,         effect_col = stimulation,         group_cols = patient,         test_type = \"paired\",         method = \"ttest\"     )  daa_result #> # A tibble: 8 × 8 #>   population_id    p_val   p_adj significant      t    df mean_diff mean_fc #>   <chr>            <dbl>   <dbl> <chr>        <dbl> <dbl>     <dbl>   <dbl> #> 1 1             0.000924 0.00535 \"*\"         -5.48      7  -0.00743   0.644 #> 2 2             0.00623  0.0166  \"*\"         -3.86      7  -0.0156    0.674 #> 3 3             0.0235   0.0314  \"*\"         -2.88      7  -0.0638    0.849 #> 4 4             0.0235   0.0314  \"*\"          2.88      7   0.0832    1.38  #> 5 5             0.0116   0.0232  \"*\"          3.39      7   0.00246   1.08  #> 6 6             0.371    0.371   \"\"          -0.955     7  -0.0168    0.919 #> 7 7             0.00134  0.00535 \"*\"          5.14      7   0.0202    1.14  #> 8 8             0.236    0.270   \"\"          -1.30      7  -0.00228   0.901 plot_data <-     citrus_data |>     mutate(population_id = as.character(population_id)) |>     left_join(         select(daa_result, population_id, significant, mean_fc),         by = \"population_id\"     ) |>     dplyr::count(patient, stimulation, population_id, significant, mean_fc, name = \"n\") |>     group_by(patient, stimulation) |>     mutate(prop = n / sum(n)) |>     ungroup() |>     pivot_wider(         names_from = stimulation,         values_from = c(prop, n),     ) |>     mutate(         diff = `prop_BCR-XL` - prop_Basal,         fc = `prop_BCR-XL` / prop_Basal,         population_id = fct_reorder(population_id, diff),         direction =             case_when(                 mean_fc > 1 & significant == \"*\" ~ \"increase\",                 mean_fc < 1 & significant == \"*\" ~ \"decrease\",                 TRUE ~ NA_character_             )     )  significance_data <-     plot_data |>     group_by(population_id, significant, direction) |>     summarize(diff = max(diff), fc = max(fc)) |>     ungroup()  plot_data |>     ggplot(aes(x = population_id, y = fc, fill = direction)) +     geom_violin(trim = FALSE) +     geom_hline(yintercept = 1, color = \"red\", linetype = \"dotted\", size = 0.5) +     geom_point() +     geom_text(         aes(x = population_id, y = fc, label = significant),         data = significance_data,         size = 8,         nudge_x = 0.2,         nudge_y = 0.06     ) +     scale_x_discrete(labels = function(x) str_c(\"cluster \", x)) +     scale_fill_manual(         values = c(\"decrease\" = \"#cd5241\", \"increase\" = \"#207394\"),         na.translate = FALSE     ) +     labs(         x = NULL,         y = \"Abundance fold-change (stimulated / basal)\",         fill = \"Effect\",         caption = \"Asterisks indicate significance at an adjusted p-value of 0.05\"     ) signaling_markers <-     c(         \"pNFkB_Nd142\", \"pStat5_Nd150\", \"pAkt_Sm152\", \"pStat1_Eu153\", \"pStat3_Gd158\",         \"pSlp76_Dy164\", \"pBtk_Er166\", \"pErk_Er168\", \"pS6_Yb172\", \"pZap70_Gd156\"     )  dea_result <-     citrus_data |>     tof_preprocess(channel_cols = any_of(signaling_markers)) |>     tof_analyze_expression(         cluster_col = population_id,         marker_cols = any_of(signaling_markers),         effect_col = stimulation,         group_cols = patient,         test_type = \"paired\",         method = \"ttest\"     )  dea_result |>     head() #> # A tibble: 6 × 9 #>   population_id marker   p_val   p_adj significant     t    df mean_diff mean_fc #>   <chr>         <chr>    <dbl>   <dbl> <chr>       <dbl> <dbl>     <dbl>   <dbl> #> 1 1             pS6_Y… 7.58e-8 2.12e-6 *            22.9     7     2.56    4.31  #> 2 2             pS6_Y… 1.16e-7 2.12e-6 *            21.6     7     2.13    2.49  #> 3 3             pBtk_… 1.32e-7 2.12e-6 *           -21.2     7    -0.475   0.289 #> 4 7             pBtk_… 1.18e-7 2.12e-6 *           -21.5     7    -0.518   0.286 #> 5 8             pBtk_… 1.30e-7 2.12e-6 *           -21.2     7    -0.516   0.324 #> 6 4             pBtk_… 7.85e-7 1.05e-5 *           -16.3     7    -0.462   0.296 volcano_plot <-     dea_result |>     tof_plot_clusters_volcano(         use_ggrepel = TRUE     )  volcano_plot"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"analyzing-data-at-the-patient--and-sample-level","dir":"","previous_headings":"Usage","what":"Analyzing data at the patient- and sample-level","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"addition verbs operate single-cell data directly, tidytof implements functions aggregating single-cell measurements cluster- sample-level summary statistics can analyzed using variety statistical models.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"feature-extraction-with-tof_extract_features","dir":"","previous_headings":"Usage > Analyzing data at the patient- and sample-level","what":"Feature extraction with tof_extract_features","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"addition functions analyzing visualizing cytometry data single-cell cluster levels, tidytof’s tof_extract_features verb allows users aggregate single-cell cluster-level information order summarize whole-samples (whole-patients) cells collected. features can useful visualizing differences patients samples different experimental conditions building machine learning models. understand tof_extract_features verb works, ’s easiest look subroutines (members tof_extract_* function family) independently. First, tof_extract_proportion, extracts proportion cells cluster within sample (samples defined using group_cols argument): Like members tof_extract_* function family, tof_extract_proportion() returns one row sample (defined unique combination values group_cols) one column extracted feature (, one column proportion 8 clusters citrus_data). values can also returned “long” format changing format argument: Another member function family, tof_extract_central_tendency, computes central tendency (e.g. mean median) user-specified markers cluster. tof_extract_threshold similar tof_extract_central_tendency, calculates proportion cells user-specified expression value marker instead measure central tendency: two final members tof_extract_* function family – tof_extract_emd tof_extract_jsd designed specifically comparing distributions marker expression stimulation conditions. , must given stimulation_col identifies stimulation condition cell , basal_level specifies reference (.e. unstimulated) condition within stimulation_col. additional arguments, tof_extract_emd computes Earth-mover’s distance marker’s distribution stimulation conditions (within cluster) basal condition; similarly, tof_extract_jsd computes Jensen-Shannon divergence index distributions. values ways compare different 2 distributions one another computationally expensive (also higher-resolution) simply comparing measures central tendency. Finally, tof_extract_features verb provides wrapper members function family, allowing users extract multiple features types . example, following code extracts proportion cluster, median several markers cluster, EMD basal condition stimulated condition cluster patients citrus_data.","code":"# preprocess the numeric columns in the citrus dataset citrus_data <-     citrus_data |>     mutate(cluster = str_c(\"cluster\", population_id)) |>     tof_preprocess()  citrus_data |>     tof_extract_proportion(         cluster_col = cluster,         group_cols = c(patient, stimulation)     ) |>     head() #> # A tibble: 6 × 10 #>   patient  stimulation `prop@cluster1` `prop@cluster2` `prop@cluster3` #>   <chr>    <chr>                 <dbl>           <dbl>           <dbl> #> 1 patient1 Basal                0.0190          0.0482           0.447 #> 2 patient1 BCR-XL               0.0109          0.0395           0.268 #> 3 patient2 Basal                0.0130          0.0280           0.491 #> 4 patient2 BCR-XL               0.0101          0.0143           0.358 #> 5 patient3 Basal                0.0326          0.0830           0.397 #> 6 patient3 BCR-XL               0.0200          0.0412           0.323 #> # ℹ 5 more variables: `prop@cluster4` <dbl>, `prop@cluster5` <dbl>, #> #   `prop@cluster6` <dbl>, `prop@cluster7` <dbl>, `prop@cluster8` <dbl> citrus_data |>     tof_extract_proportion(         cluster_col = cluster,         group_cols = c(patient, stimulation),         format = \"long\"     ) |>     head() #> # A tibble: 6 × 4 #>   patient  stimulation cluster     prop #>   <chr>    <chr>       <chr>      <dbl> #> 1 patient1 Basal       cluster1 0.0190  #> 2 patient1 Basal       cluster2 0.0482  #> 3 patient1 Basal       cluster3 0.447   #> 4 patient1 Basal       cluster4 0.237   #> 5 patient1 Basal       cluster5 0.00219 #> 6 patient1 Basal       cluster6 0.0759 citrus_data |>     tof_extract_central_tendency(         cluster_col = cluster,         group_cols = c(patient, stimulation),         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         central_tendency_function = mean     ) |>     head() #> # A tibble: 6 × 26 #>   patient  stimulation `CD45_In115@cluster1_ct` `CD4_Nd145@cluster1_ct` #>   <chr>    <chr>                          <dbl>                   <dbl> #> 1 patient1 BCR-XL                          4.80                  0.0967 #> 2 patient1 Basal                           4.68                  0.765  #> 3 patient2 BCR-XL                          5.00                 -0.0579 #> 4 patient2 Basal                           4.88                  0.808  #> 5 patient3 BCR-XL                          5.04                 -0.0432 #> 6 patient3 Basal                           4.98                  0.745  #> # ℹ 22 more variables: `CD20_Sm147@cluster1_ct` <dbl>, #> #   `CD45_In115@cluster2_ct` <dbl>, `CD4_Nd145@cluster2_ct` <dbl>, #> #   `CD20_Sm147@cluster2_ct` <dbl>, `CD45_In115@cluster3_ct` <dbl>, #> #   `CD4_Nd145@cluster3_ct` <dbl>, `CD20_Sm147@cluster3_ct` <dbl>, #> #   `CD45_In115@cluster4_ct` <dbl>, `CD4_Nd145@cluster4_ct` <dbl>, #> #   `CD20_Sm147@cluster4_ct` <dbl>, `CD45_In115@cluster5_ct` <dbl>, #> #   `CD4_Nd145@cluster5_ct` <dbl>, `CD20_Sm147@cluster5_ct` <dbl>, … citrus_data |>     tof_extract_threshold(         cluster_col = cluster,         group_cols = c(patient, stimulation),         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         threshold = 5     ) |>     head() #> # A tibble: 6 × 26 #>   patient  stimulation `CD45_In115@cluster1_threshold` CD4_Nd145@cluster1_thre…¹ #>   <chr>    <chr>                                 <dbl>                     <dbl> #> 1 patient1 BCR-XL                                0.516                         0 #> 2 patient1 Basal                                 0.365                         0 #> 3 patient2 BCR-XL                                0.554                         0 #> 4 patient2 Basal                                 0.452                         0 #> 5 patient3 BCR-XL                                0.547                         0 #> 6 patient3 Basal                                 0.549                         0 #> # ℹ abbreviated name: ¹​`CD4_Nd145@cluster1_threshold` #> # ℹ 22 more variables: `CD20_Sm147@cluster1_threshold` <dbl>, #> #   `CD45_In115@cluster2_threshold` <dbl>, #> #   `CD4_Nd145@cluster2_threshold` <dbl>, #> #   `CD20_Sm147@cluster2_threshold` <dbl>, #> #   `CD45_In115@cluster3_threshold` <dbl>, #> #   `CD4_Nd145@cluster3_threshold` <dbl>, … # Earth-mover's distance citrus_data |>     tof_extract_emd(         cluster_col = cluster,         group_cols = patient,         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         emd_col = stimulation,         reference_level = \"Basal\"     ) |>     head() #> # A tibble: 6 × 25 #>   patient  BCR-XL_CD45_In115@clu…¹ BCR-XL_CD4_Nd145@clu…² BCR-XL_CD20_Sm147@cl…³ #>   <chr>                      <dbl>                  <dbl>                  <dbl> #> 1 patient1                   0.864                   2.47                  13.0  #> 2 patient2                   1.11                    7.05                  10.8  #> 3 patient3                   0.670                   6.23                  10.5  #> 4 patient4                   2.64                    5.86                   9.90 #> 5 patient5                   0.594                   7.56                   8.13 #> 6 patient6                   0.661                   4.77                   7.97 #> # ℹ abbreviated names: ¹​`BCR-XL_CD45_In115@cluster3_emd`, #> #   ²​`BCR-XL_CD4_Nd145@cluster3_emd`, ³​`BCR-XL_CD20_Sm147@cluster3_emd` #> # ℹ 21 more variables: `BCR-XL_CD45_In115@cluster7_emd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster7_emd` <dbl>, #> #   `BCR-XL_CD20_Sm147@cluster7_emd` <dbl>, #> #   `BCR-XL_CD45_In115@cluster4_emd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster4_emd` <dbl>, … # Jensen-Shannon Divergence citrus_data |>     tof_extract_jsd(         cluster_col = cluster,         group_cols = patient,         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         jsd_col = stimulation,         reference_level = \"Basal\"     ) |>     head() #> # A tibble: 6 × 25 #>   patient  BCR-XL_CD45_In115@clu…¹ BCR-XL_CD4_Nd145@clu…² BCR-XL_CD20_Sm147@cl…³ #>   <chr>                      <dbl>                  <dbl>                  <dbl> #> 1 patient1                 0.0367                  0.0513                  0.347 #> 2 patient2                 0.00831                 0.168                   0.401 #> 3 patient3                 0.0104                  0.115                   0.357 #> 4 patient4                 0.0301                  0.135                   0.205 #> 5 patient5                 0.00911                 0.0789                  0.274 #> 6 patient6                 0.00972                 0.0346                  0.214 #> # ℹ abbreviated names: ¹​`BCR-XL_CD45_In115@cluster3_jsd`, #> #   ²​`BCR-XL_CD4_Nd145@cluster3_jsd`, ³​`BCR-XL_CD20_Sm147@cluster3_jsd` #> # ℹ 21 more variables: `BCR-XL_CD45_In115@cluster7_jsd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster7_jsd` <dbl>, #> #   `BCR-XL_CD20_Sm147@cluster7_jsd` <dbl>, #> #   `BCR-XL_CD45_In115@cluster4_jsd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster4_jsd` <dbl>, … citrus_data |>     tof_extract_features(         cluster_col = cluster,         group_cols = patient,         stimulation_col = stimulation,         lineage_cols = any_of(c(\"CD45_In115\", \"CD20_Sm147\", \"CD33_Nd148\")),         signaling_cols = any_of(signaling_markers),         signaling_method = \"emd\",         basal_level = \"Basal\"     ) |>     head()"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"outcomes-modeling-with-tof_model","dir":"","previous_headings":"Usage > Analyzing data at the patient- and sample-level","what":"Outcomes modeling with tof_model","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"[brief intro building predictive models might motivated .] tidytof implements several functions building predictive models using sample- patient-level data. illustrate work, first download patient-level data paper combining sample-level clinical annotations one tidytof’s built-data objects (ddpr_metadata). data processing steps result ddpr_patients tibble. numeric columns ddpr_patients represent aggregated cell population features sample (see Supplementary Table 5 paper details). non-numeric columns represent clinical metadata sample (run ?ddpr_metadata information). also preprocessing steps might want perform now save us headaches ’re fitting models later.","code":"data(ddpr_metadata)  # link for downloading the sample-level data from the Nature Medicine website data_link <-     \"https://static-content.springer.com/esm/art%3A10.1038%2Fnm.4505/MediaObjects/41591_2018_BFnm4505_MOESM3_ESM.csv\"  # downloading the data and combining it with clinical annotations ddpr_patients <-     readr::read_csv(data_link, skip = 2L, n_max = 78L, show_col_types = FALSE) |>     dplyr::rename(patient_id = Patient_ID) |>     left_join(ddpr_metadata, by = \"patient_id\") |>     dplyr::filter(!str_detect(patient_id, \"Healthy\"))  ddpr_patients |>     select(where(~ !is.numeric(.x))) |>     head() #> # A tibble: 6 × 8 #>   patient_id gender mrd_risk nci_rome_risk relapse_status type_of_relapse cohort #>   <chr>      <chr>  <chr>    <chr>         <chr>          <chr>           <chr>  #> 1 UPN1       Male   Interme… Standard      Yes            Early           Train… #> 2 UPN1-Rx    Male   Interme… Standard      Yes            Early           Train… #> 3 UPN2       Male   Interme… Standard      No             <NA>            Train… #> 4 UPN3       Female Standard Standard      No             <NA>            Train… #> 5 UPN4       Male   Standard Standard      No             <NA>            Valid… #> 6 UPN5       Female Standard High          No             <NA>            Valid… #> # ℹ 1 more variable: ddpr_risk <chr> ddpr_patients <-     ddpr_patients |>     # convert the relapse_status variable to a factor first,     # which is something we'll want for fitting the model later     # and create the time_to_event and event columns for survival modeling     mutate(         relapse_status = as.factor(relapse_status),         time_to_event = if_else(relapse_status == \"Yes\", time_to_relapse, ccr),         event = if_else(relapse_status == \"Yes\", 1, 0)     )"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"separating-the-training-and-validation-cohorts","dir":"","previous_headings":"Usage > Analyzing data at the patient- and sample-level > Outcomes modeling with tof_model","what":"Separating the training and validation cohorts","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"original DDPR paper, patients used fit model rest used assess model tuned. can separate training validation cohorts using cohort variable ddpr_patients","code":"ddpr_training <-     ddpr_patients |>     dplyr::filter(cohort == \"Training\")  ddpr_validation <-     ddpr_patients |>     dplyr::filter(cohort == \"Validation\") nrow(ddpr_training) #> [1] 49  nrow(ddpr_validation) #> [1] 12"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"building-a-classifier-using-logistic-regression","dir":"","previous_headings":"Usage > Analyzing data at the patient- and sample-level > Outcomes modeling with tof_model","what":"Building a classifier using logistic regression","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"First, can build elastic net classifier predict patients relapse patients won’t (ignoring time--event data now). , can use relapse_status column ddpr_training outcome variable: Specifically, can use tof_split_data function split cohort training test set either (“simple” split) multiple times (using either k-fold cross-validation bootstrapping). case, use 5-fold cross-validation, reading documentation tof_split_data demonstrates use methods. output tof_split_data varies depending split_method used. cross-validation, result rset object rsample package. rset objects type tibble two columns: splits - column entry rsplit object (contains single resample full dataset) id - character column entry represents name fold entry splits belongs . can inspect one resamples splits column see contain: Note can use rsample::training rsample::testing return training test obeservations resampling: , can feed training_split tof_train_model function tune logistic regression model predicts relapse_status leukemia patient. sure check tof_create_grid documentation learn make hyperparameter search grid model tuning (case, limit mixture parameter value 1, fits sparse lasso model). Also note demonstration purposes, include features come one cell population (“Population 2”) original dataset, means probably shouldn’t expect model perform well one original paper (select many features). output tof_train_model tof_model, object containing information trained model (can passed tof_predict tof_assess_model verbs). tof_model printed, information optimal hyperparamters printed, table nonzero model coefficients model. can use trained model make predictions validation data set aside earlier: can see model gets (!) predictions correct validation set set aside. can also assess model directly using tof_assess_model can make ROC curve using metrics:  can assess model validation data…","code":"# find how many of each outcome we have in our cohort ddpr_training |>     dplyr::count(relapse_status) #> # A tibble: 2 × 2 #>   relapse_status     n #>   <fct>          <int> #> 1 No                31 #> 2 Yes               18 training_split <-     ddpr_training |>     tof_split_data(         split_method = \"k-fold\",         num_cv_folds = 5,         strata = relapse_status     )  training_split #> #  5-fold cross-validation using stratification  #> # A tibble: 5 × 2 #>   splits          id    #>   <list>          <chr> #> 1 <split [38/11]> Fold1 #> 2 <split [39/10]> Fold2 #> 3 <split [39/10]> Fold3 #> 4 <split [40/9]>  Fold4 #> 5 <split [40/9]>  Fold5 my_resample <- training_split$splits[[1]]  print(my_resample) #> <Analysis/Assess/Total> #> <38/11/49>  class(my_resample) #> [1] \"vfold_split\" \"rsplit\" my_resample |>     rsample::training() |>     head() #> # A tibble: 6 × 1,854 #>   patient_id Pop_P_Pop1 CD19_Pop1 CD20_Pop1 CD24_Pop1 CD34_Pop1 CD38_Pop1 #>   <chr>           <dbl>     <dbl>     <dbl>     <dbl>     <dbl>     <dbl> #> 1 UPN1          3.06       0.583   0.00449     0.164       1.94     0.416 #> 2 UPN1-Rx       0.0395     0.618   0.0634      0.572       2.93     0.944 #> 3 UPN3          0.633      0.0234  0.0165      0.0327      2.25     0.226 #> 4 UPN8          0.951      0.958   0.161       0.556       3.18     0.556 #> 5 UPN10         0.00374    0.761   0.000696    0.829       3.19     0.886 #> 6 UPN10-Rx      0.00240    0.167   0.203       0.802       2.57     0.822 #> # ℹ 1,847 more variables: CD127_Pop1 <dbl>, CD179a_Pop1 <dbl>, #> #   CD179b_Pop1 <dbl>, IgMi_Pop1 <dbl>, IgMs_Pop1 <dbl>, TdT_Pop1 <dbl>, #> #   CD22_Pop1 <dbl>, tIkaros_Pop1 <dbl>, CD79b_Pop1 <dbl>, Ki67_Pop1 <dbl>, #> #   TSLPr_Pop1 <dbl>, RAG1_Pop1 <dbl>, CD123_Pop1 <dbl>, CD45_Pop1 <dbl>, #> #   CD10_Pop1 <dbl>, Pax5_Pop1 <dbl>, CD43_Pop1 <dbl>, CD58_Pop1 <dbl>, #> #   HLADR_Pop1 <dbl>, p4EBP1_FC_Basal_Pop1 <dbl>, pSTAT5_FC_Basal_Pop1 <dbl>, #> #   pPLCg1_2_FC_Basal_Pop1 <dbl>, pAkt_FC_Basal_Pop1 <dbl>, …  my_resample |>     rsample::testing() |>     head() #> # A tibble: 6 × 1,854 #>   patient_id Pop_P_Pop1 CD19_Pop1 CD20_Pop1 CD24_Pop1 CD34_Pop1 CD38_Pop1 #>   <chr>           <dbl>     <dbl>     <dbl>     <dbl>     <dbl>     <dbl> #> 1 UPN2           0.139     0.0662   0.0221     0.0825      2.25     0.454 #> 2 UPN6           5.62      0.550    0.00374    0.622       2.86     0.342 #> 3 UPN7           0.474     0.966    0.124      1.24        2.59     0.243 #> 4 UPN9          15.6       0.446    0.0445     0.163       2.86     0.434 #> 5 UPN12          0.0565    0.185    0.0115     0.142       2.49     0.254 #> 6 UPN17          1.40      1.52     0.0128     0.284       3.46     0.656 #> # ℹ 1,847 more variables: CD127_Pop1 <dbl>, CD179a_Pop1 <dbl>, #> #   CD179b_Pop1 <dbl>, IgMi_Pop1 <dbl>, IgMs_Pop1 <dbl>, TdT_Pop1 <dbl>, #> #   CD22_Pop1 <dbl>, tIkaros_Pop1 <dbl>, CD79b_Pop1 <dbl>, Ki67_Pop1 <dbl>, #> #   TSLPr_Pop1 <dbl>, RAG1_Pop1 <dbl>, CD123_Pop1 <dbl>, CD45_Pop1 <dbl>, #> #   CD10_Pop1 <dbl>, Pax5_Pop1 <dbl>, CD43_Pop1 <dbl>, CD58_Pop1 <dbl>, #> #   HLADR_Pop1 <dbl>, p4EBP1_FC_Basal_Pop1 <dbl>, pSTAT5_FC_Basal_Pop1 <dbl>, #> #   pPLCg1_2_FC_Basal_Pop1 <dbl>, pAkt_FC_Basal_Pop1 <dbl>, … class_mod <-     training_split |>     tof_train_model(         predictor_cols = contains(\"Pop2\"),         response_col = relapse_status,         model_type = \"two-class\",         hyperparameter_grid = tof_create_grid(mixture_values = 1),         impute_missing_predictors = TRUE,         remove_zv_predictors = TRUE # often a smart decision     ) print(class_mod) #> A two-class `tof_model` with a mixture parameter (alpha) of 1 and a penalty parameter (lambda) of 1e-05  #> # A tibble: 25 × 2 #>    feature             coefficient #>    <chr>                     <dbl> #>  1 p4EBP1_dP_IL7_Pop2        -2.59 #>  2 CD58_Pop2                  2.23 #>  3 (Intercept)               -1.83 #>  4 pSTAT5_dP_TSLP_Pop2        1.69 #>  5 p4EBP1_FC_IL7_Pop2         1.46 #>  6 CD43_Pop2                  1.37 #>  7 HLADR_Pop2                -1.32 #>  8 pSyk_dP_TSLP_Pop2          1.08 #>  9 pErk_dP_IL7_Pop2          -1.05 #> 10 Ki67_Pop2                 -1.05 #> # ℹ 15 more rows class_predictions <-     class_mod |>     tof_predict(new_data = ddpr_validation, prediction_type = \"class\")  class_predictions |>     dplyr::mutate(         truth = ddpr_validation$relapse_status     ) #> # A tibble: 12 × 2 #>    .pred truth #>    <chr> <fct> #>  1 Yes   No    #>  2 No    No    #>  3 No    Yes   #>  4 No    No    #>  5 No    No    #>  6 Yes   Yes   #>  7 Yes   Yes   #>  8 No    No    #>  9 No    No    #> 10 No    Yes   #> 11 No    Yes   #> 12 No    Yes # calling the function with no new_data evaluates the # the nodel using its training data training_assessment <-     class_mod |>     tof_assess_model()  training_assessment #> $model_metrics #> # A tibble: 6 × 2 #>   metric                    value #>   <chr>                     <dbl> #> 1 binomial_deviance       0.0291  #> 2 misclassification_error 0       #> 3 roc_auc                 1       #> 4 mse                     0.00119 #> 5 mae                     0.0285  #> 6 accuracy                1       #>  #> $roc_curve #> # A tibble: 51 × 5 #>       .threshold specificity sensitivity   tpr   fpr #>            <dbl>       <dbl>       <dbl> <dbl> <dbl> #>  1 -Inf               0                1     1 1     #>  2    0.00000114      0                1     1 1     #>  3    0.0000955       0.0323           1     1 0.968 #>  4    0.000160        0.0645           1     1 0.935 #>  5    0.000190        0.0968           1     1 0.903 #>  6    0.000612        0.129            1     1 0.871 #>  7    0.000896        0.161            1     1 0.839 #>  8    0.00135         0.194            1     1 0.806 #>  9    0.00142         0.226            1     1 0.774 #> 10    0.00194         0.258            1     1 0.742 #> # ℹ 41 more rows #>  #> $confusion_matrix #> # A tibble: 4 × 3 #>   true_outcome predicted_outcome num_observations #>   <chr>        <chr>                        <int> #> 1 No           No                              31 #> 2 No           Yes                              0 #> 3 Yes          No                               0 #> 4 Yes          Yes                             18 class_mod |>     tof_plot_model() +     labs(subtitle = \"ROC Curve (Training data)\") validation_assessment <-     class_mod |>     tof_assess_model(new_data = ddpr_validation)  validation_assessment #> $model_metrics #> # A tibble: 6 × 2 #>   metric                  value #>   <chr>                   <dbl> #> 1 binomial_deviance       4.75  #> 2 misclassification_error 0.417 #> 3 roc_auc                 0.639 #> 4 mse                     0.759 #> 5 mae                     0.879 #> 6 accuracy                0.583 #>  #> $roc_curve #> # A tibble: 14 × 5 #>     .threshold specificity sensitivity   tpr   fpr #>          <dbl>       <dbl>       <dbl> <dbl> <dbl> #>  1 -Inf              0           1     1     1     #>  2    0.000240       0           1     1     1     #>  3    0.00105        0.167       1     1     0.833 #>  4    0.00195        0.167       0.833 0.833 0.833 #>  5    0.00230        0.333       0.833 0.833 0.667 #>  6    0.00472        0.5         0.833 0.833 0.5   #>  7    0.00618        0.667       0.833 0.833 0.333 #>  8    0.0464         0.667       0.667 0.667 0.333 #>  9    0.273          0.667       0.5   0.5   0.333 #> 10    0.286          0.667       0.333 0.333 0.333 #> 11    0.844          0.833       0.333 0.333 0.167 #> 12    0.852          0.833       0.167 0.167 0.167 #> 13    1.00           0.833       0     0     0.167 #> 14  Inf              1           0     0     0     #>  #> $confusion_matrix #> # A tibble: 4 × 3 #>   true_outcome predicted_outcome num_observations #>   <chr>        <chr>                        <int> #> 1 No           No                               5 #> 2 No           Yes                              1 #> 3 Yes          No                               4 #> 4 Yes          Yes                              2 class_mod |>     tof_plot_model(new_data = ddpr_validation) +     labs(subtitle = \"ROC Curve (Validation data)\")"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"tidytofs-design-principles-and-some-tips","dir":"","previous_headings":"","what":"{tidytof}’s Design Principles (and some tips)","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"{tidytof} designed multidisciplinary team wet-lab biologists, bioinformaticians, physician-scientists analyze cytometry kinds single-cell data solve variety problems. result, tidytof’s high-level API designed great care mirror tidyverse - , human-centered, consistent, composable, inclusive wide userbase. section, describe miscellaneous design decisions tips using tidytof may help enthusiastic user.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"id_1-use-the-tof_-prefix-to-your-advantage","dir":"","previous_headings":"{tidytof}’s Design Principles (and some tips)","what":"1. Use the tof_ prefix to your advantage.","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"may notice tidytof functions begin prefix tof_. intentional, allow use development environment’s code-completing software search functions easily (even don’t remember function name). reason, recommend using tidytof within RStudio development environment; however, many code editors predictive text functionality serves similar function. general, tidytof verbs organized way IDE’s code-completion tools also allow search (compare) related functions relative ease. (instance, tof_cluster_ prefix used clustering functions, tof_downsample_ prefix used downsampling functions).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"id_2-tidytof-functions-use-2-kinds-of-arguments","dir":"","previous_headings":"{tidytof}’s Design Principles (and some tips)","what":"2. {tidytof} functions use 2 kinds of arguments","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"tidytof functions optimized working “tidy” data form tibbles data.frames. means tidytof functions share basic design principles terms arguments work. details design principles, check Getting Started tidytof vignette","code":""},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"id_3-use-tidytof-to-write-human-readable-pipelines","dir":"","previous_headings":"{tidytof}’s Design Principles (and some tips)","what":"3. Use {tidytof} to write human-readable pipelines","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"real “magic” tidytof derives ability simplify multistep data-processing tasks simple readable chunk code. example, suppose just acquired .fcs files mass cytometer want perform following analysis: Read .fcs files R session Arcsinh-transform column protein measurements Cluster cells based surface markers panel Downsample dataset 100 random cells picked cluster Perform dimensionality reduction downsampled dataset using tSNE Visualize clusters using low-dimensional tSNE embedding using appropriate tidytof verbs step analysis, can easily write code function call corresponds exactly one step pipeline:  shown , stringing together tidytof verbs creates pipeline can read easily left--right top--bottom – means relatively easy return code later (modify , write methods section next high-impact manuscript!) , perhaps importantly, one colleagues return later want recreate analysis.","code":"input_path <- tidytof_example_data(\"phenograph\")  set.seed(0012)  input_path |>     # step 1     tof_read_data() |>     # step 2     tof_preprocess() |>     # step 3     tof_cluster(method = \"phenograph\") |>     # step 4     tof_downsample(         group_cols = .phenograph_cluster,         num_cells = 100,         method = \"constant\"     ) |>     # step 5     tof_reduce_dimensions(perplexity = 50, method = \"tsne\") |>     # step 6     tof_plot_cells_embedding(         embedding_cols = starts_with(\".tsne\"),         color_col = .phenograph_cluster     )"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"id_4-additional-resources","dir":"","previous_headings":"{tidytof}’s Design Principles (and some tips)","what":"4. Additional resources","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"tidytof built top tidyverse family R packages. result, users tidytof benefit substantially spending hours dplyr, ggplot2, tidyr package vignettes learn many useful functions packages provide. access recommended list package vignettes, run following lines R code console:","code":"# dplyr vignette(topic = \"dplyr\", package = \"dplyr\") vignette(topic = \"grouping\", package = \"dplyr\") vignette(topic = \"colwise\", package = \"dplyr\")  # ggplot2 vignette(topic = \"ggplot2-specs\", package = \"ggplot2\")  # tidyr vignette(topic = \"tidy-data\", package = \"tidyr\") vignette(topic = \"nest\", package = \"tidyr\")"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_SingleCellExperiment.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce an object into a SingleCellExperiment — as_SingleCellExperiment","title":"Coerce an object into a SingleCellExperiment — as_SingleCellExperiment","text":"Coerce object SingleCellExperiment Coerce tof_tbl SingleCellExperiment","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_SingleCellExperiment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce an object into a SingleCellExperiment — as_SingleCellExperiment","text":"","code":"as_SingleCellExperiment(x, ...)  # S3 method for tof_tbl as_SingleCellExperiment(   x,   channel_cols = where(tof_is_numeric),   reduced_dimensions_cols,   metadata_cols = where(function(.x) !tof_is_numeric(.x)),   split_reduced_dimensions = FALSE,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_SingleCellExperiment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce an object into a SingleCellExperiment — as_SingleCellExperiment","text":"x tof_tbl ... Unused. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. nothing specified, default numeric columns. reduced_dimensions_cols Unquoted column names representing columns contain dimensionality reduction embeddings, tSNE UMAP embeddings. Supports tidyselect helpers. metadata_cols Unquoted column names representing columns contain metadata samples cell collected. nothing specified, default non-numeric columns. split_reduced_dimensions boolean value indicating whether dimensionality results x split separate slots resulting SingleCellExperiment. FALSE (default), split performed reducedDims slot result single entry (\"tidytof_reduced_dimensions\"). TRUE, split performed reducedDims slot result 1-4 entries depending dimensionality reduction results present x (\"tidytof_pca\", \"tidytof_tsne\", \"tidytof_umap\", \"tidytof_reduced_dimensions\"). Note \"tidytof_reduced_dimensions\" include dimensionality reduction results named according tidytof's pca, umap, tsne conventions.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_SingleCellExperiment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce an object into a SingleCellExperiment — as_SingleCellExperiment","text":"SingleCellExperiment SingleCellExperiment.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_SingleCellExperiment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce an object into a SingleCellExperiment — as_SingleCellExperiment","text":"","code":"NULL #> NULL  NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce an object into a flowFrame — as_flowFrame","title":"Coerce an object into a flowFrame — as_flowFrame","text":"Coerce object flowFrame Coerce tof_tbl flowFrame","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowFrame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce an object into a flowFrame — as_flowFrame","text":"","code":"as_flowFrame(x, ...)  # S3 method for tof_tbl as_flowFrame(x, ...)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowFrame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce an object into a flowFrame — as_flowFrame","text":"x tof_tbl. ... Unused.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowFrame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce an object into a flowFrame — as_flowFrame","text":"flowFrame flowFrame. Note non-numeric columns `x` removed.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowFrame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce an object into a flowFrame — as_flowFrame","text":"","code":"NULL #> NULL  NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce an object into a flowSet — as_flowSet","title":"Coerce an object into a flowSet — as_flowSet","text":"Coerce object flowSet Coerce tof_tbl flowSet","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce an object into a flowSet — as_flowSet","text":"","code":"as_flowSet(x, ...)  # S3 method for tof_tbl as_flowSet(x, group_cols, ...)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce an object into a flowSet — as_flowSet","text":"x tof_tbl. ... Unused. group_cols Unquoted names columns `x` used group cells separate flowFrames. Supports tidyselect helpers. Defaults NULL (cells written single flowFrame).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce an object into a flowSet — as_flowSet","text":"flowSet flowSet. Note non-numeric columns `x` removed.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowSet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce an object into a flowSet — as_flowSet","text":"","code":"NULL #> NULL  NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_seurat.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce an object into a SeuratObject — as_seurat","title":"Coerce an object into a SeuratObject — as_seurat","text":"Coerce object SeuratObject Coerce tof_tbl SeuratObject","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_seurat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce an object into a SeuratObject — as_seurat","text":"","code":"as_seurat(x, ...)  # S3 method for tof_tbl as_seurat(   x,   channel_cols = where(tof_is_numeric),   reduced_dimensions_cols,   metadata_cols = where(function(.x) !tof_is_numeric(.x)),   split_reduced_dimensions = FALSE,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_seurat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce an object into a SeuratObject — as_seurat","text":"x tof_tbl ... Unused. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. nothing specified, default numeric columns. reduced_dimensions_cols Unquoted column names representing columns contain dimensionality reduction embeddings, tSNE UMAP embeddings. Supports tidyselect helpers. metadata_cols Unquoted column names representing columns contain metadata samples cell collected. nothing specified, default non-numeric columns. split_reduced_dimensions boolean value indicating whether dimensionality results x split separate slots resulting SingleCellExperiment. FALSE (default), split performed reducedDims slot result single entry (\"tidytof_reduced_dimensions\"). TRUE, split performed reducedDims slot result 1-4 entries depending dimensionality reduction results present x (\"tidytof_pca\", \"tidytof_tsne\", \"tidytof_umap\", \"tidytof_reduced_dimensions\"). Note \"tidytof_reduced_dimensions\" include dimensionality reduction results named according tidytof's pca, umap, tsne conventions.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_seurat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce an object into a SeuratObject — as_seurat","text":"SeuratObject SeuratObject.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_seurat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce an object into a SeuratObject — as_seurat","text":"","code":"NULL #> NULL  NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.flowSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an object into a tof_tbl — as_tof_tbl.flowSet","title":"Convert an object into a tof_tbl — as_tof_tbl.flowSet","text":"Convert object tof_tbl","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.flowSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an object into a tof_tbl — as_tof_tbl.flowSet","text":"","code":"# S3 method for flowSet as_tof_tbl(flow_data, sep = \"|\")"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.flowSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an object into a tof_tbl — as_tof_tbl.flowSet","text":"flow_data FlowSet sep string use separate antigen name associated metal column names output tibble. Defaults \"|\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.flowSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert an object into a tof_tbl — as_tof_tbl.flowSet","text":"`tof_tbl`","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce flowFrames or flowSets into tof_tbl's. — as_tof_tbl","title":"Coerce flowFrames or flowSets into tof_tbl's. — as_tof_tbl","text":"Coerce flowFrames flowSets tof_tbl's.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce flowFrames or flowSets into tof_tbl's. — as_tof_tbl","text":"","code":"as_tof_tbl(flow_data, sep = \"|\")"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce flowFrames or flowSets into tof_tbl's. — as_tof_tbl","text":"flow_data flowFrame flowSet sep string indicating symbol used separate antigen names metal names columns output tof_tbl.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce flowFrames or flowSets into tof_tbl's. — as_tof_tbl","text":"tof_tbl.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce flowFrames or flowSets into tof_tbl's. — as_tof_tbl","text":"","code":"input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]]  input_flowframe <- flowCore::read.FCS(input_file)  tof_tibble <- as_tof_tbl(input_flowframe)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/cosine_similarity.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the cosine similarity between two vectors — cosine_similarity","title":"Find the cosine similarity between two vectors — cosine_similarity","text":"Find cosine similarity two vectors","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/cosine_similarity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the cosine similarity between two vectors — cosine_similarity","text":"","code":"cosine_similarity(x, y)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/cosine_similarity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the cosine similarity between two vectors — cosine_similarity","text":"x numeric vector y numeric vector","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/cosine_similarity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the cosine similarity between two vectors — cosine_similarity","text":"scalar value representing cosine similarity x y","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_data.html","id":null,"dir":"Reference","previous_headings":"","what":"CyTOF data from two samples: 5,000 B-cell lineage cells from a healthy\npatient and 5,000 B-cell lineage cells from a B-cell precursor Acute\nLymphoblastic Leukemia (BCP-ALL) patient. — ddpr_data","title":"CyTOF data from two samples: 5,000 B-cell lineage cells from a healthy\npatient and 5,000 B-cell lineage cells from a B-cell precursor Acute\nLymphoblastic Leukemia (BCP-ALL) patient. — ddpr_data","text":"dataset containing CyTOF measurements immune cells originally studied following paper:   Good Z, Sarno J, et al. Single-cell developmental classification B cell precursor acute lymphoblastic leukemia diagnosis reveals predictors relapse. Nat Med. 2018 May;24(4):474-483. doi: 10.1038/nm.4505. Epub 2018 Mar 5. PMID: 29505032; PMCID: PMC5953207.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CyTOF data from two samples: 5,000 B-cell lineage cells from a healthy\npatient and 5,000 B-cell lineage cells from a B-cell precursor Acute\nLymphoblastic Leukemia (BCP-ALL) patient. — ddpr_data","text":"","code":"data(ddpr_data)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"CyTOF data from two samples: 5,000 B-cell lineage cells from a healthy\npatient and 5,000 B-cell lineage cells from a B-cell precursor Acute\nLymphoblastic Leukemia (BCP-ALL) patient. — ddpr_data","text":"data frame 10000 rows 24 variables: sample_name name sample data read cd45 CyTOF measurement raw ion counts cd19 CyTOF measurement raw ion counts cd22 CyTOF measurement raw ion counts cd79b CyTOF measurement raw ion counts cd20 CyTOF measurement raw ion counts cd34 CyTOF measurement raw ion counts cd123 CyTOF measurement raw ion counts cd10 CyTOF measurement raw ion counts cd24 CyTOF measurement raw ion counts cd127 CyTOF measurement raw ion counts cd43 CyTOF measurement raw ion counts cd38 CyTOF measurement raw ion counts cd58 CyTOF measurement raw ion counts psyk CyTOF measurement raw ion counts p4ebp1 CyTOF measurement raw ion counts pstat5 CyTOF measurement raw ion counts pakt CyTOF measurement raw ion counts ps6 CyTOF measurement raw ion counts perk CyTOF measurement raw ion counts pcreb CyTOF measurement raw ion counts","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"CyTOF data from two samples: 5,000 B-cell lineage cells from a healthy\npatient and 5,000 B-cell lineage cells from a B-cell precursor Acute\nLymphoblastic Leukemia (BCP-ALL) patient. — ddpr_data","text":"https://github.com/kara-davis-lab/DDPR","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CyTOF data from two samples: 5,000 B-cell lineage cells from a healthy\npatient and 5,000 B-cell lineage cells from a B-cell precursor Acute\nLymphoblastic Leukemia (BCP-ALL) patient. — ddpr_data","text":"data.frame","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Clinical metadata for each patient sample in Good & Sarno et al. (2018). — ddpr_metadata","title":"Clinical metadata for each patient sample in Good & Sarno et al. (2018). — ddpr_metadata","text":"dataset containing patient-level clinical metadata samples originally studied following paper:  Good Z, Sarno J, et al. Single-cell developmental classification B cell precursor acute lymphoblastic leukemia diagnosis reveals predictors relapse. Nat Med. 2018 May;24(4):474-483. doi: 10.1038/nm.4505. Epub 2018 Mar 5. PMID: 29505032; PMCID: PMC5953207.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clinical metadata for each patient sample in Good & Sarno et al. (2018). — ddpr_metadata","text":"","code":"data(ddpr_metadata)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_metadata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Clinical metadata for each patient sample in Good & Sarno et al. (2018). — ddpr_metadata","text":"data frame 10000 rows 12 variables: patient_id Name sample data read gender Gender patient sample collected age_at_diagnosis Age (years) patient sample collected wbc_count diagnostic White Blood Cell (WBC) count patient sample collected mrd_risk Risk stratification category patient using minimal residual disease (MRD) criteria nci_rome_risk Risk stratification category patient using National Cancer Institute (NCI) criteria relapse_status string representing whether patient relapsed time_to_relapse time (days) took patient relapse. Patients relapse value NA type_of_relapse string representing timing relapse patient.   \"early\" relapses occurred less 18 months diagnosis;   \"Early\" relapses occurred 18 months 32 months diagnosis;   \"Late\" relapses occurred later 32 months diagnosis. ccr number documented days continuous complete remission (CCR) patients relapse. patients relapsed value NA. cohort string representing sample used \"Training\" \"Validation\" cohort original study ddpr_risk risk category (\"Low\" \"High\") assigned sample using original paper's risk-stratification algorithm","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_metadata.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Clinical metadata for each patient sample in Good & Sarno et al. (2018). — ddpr_metadata","text":"Good Z, Sarno J, et al. Single-cell developmental classification B cell precursor acute lymphoblastic leukemia diagnosis reveals predictors relapse. Nat Med. 2018 May;24(4):474-483. doi: 10.1038/nm.4505. Epub 2018 Mar 5. PMID: 29505032; PMCID: PMC5953207. Supplementary Table 1.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clinical metadata for each patient sample in Good & Sarno et al. (2018). — ddpr_metadata","text":"data.frame","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/dot.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the dot product between two vectors. — dot","title":"Find the dot product between two vectors. — dot","text":"Find dot product two vectors.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/dot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the dot product between two vectors. — dot","text":"","code":"dot(x, y)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/dot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the dot product between two vectors. — dot","text":"x numeric vector. y numeric vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/dot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the dot product between two vectors. — dot","text":"dot product x y.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/get_extension.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the extension for a file — get_extension","title":"Find the extension for a file — get_extension","text":"Find extension file","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/get_extension.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the extension for a file — get_extension","text":"","code":"get_extension(filename)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/get_extension.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the extension for a file — get_extension","text":"filename string representing name file local directory","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/get_extension.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the extension for a file — get_extension","text":"file extension `filename`","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/l2_normalize.html","id":null,"dir":"Reference","previous_headings":"","what":"L2 normalize an input vector x to a length of 1 — l2_normalize","title":"L2 normalize an input vector x to a length of 1 — l2_normalize","text":"L2 normalize input vector x length 1","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/l2_normalize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"L2 normalize an input vector x to a length of 1 — l2_normalize","text":"","code":"l2_normalize(x)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/l2_normalize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"L2 normalize an input vector x to a length of 1 — l2_normalize","text":"x numeric vector","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/l2_normalize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"L2 normalize an input vector x to a length of 1 — l2_normalize","text":"vector length length(x) magnitude 1","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/magnitude.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the magnitude of a vector. — magnitude","title":"Find the magnitude of a vector. — magnitude","text":"Find magnitude vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/magnitude.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the magnitude of a vector. — magnitude","text":"","code":"magnitude(x)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/magnitude.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the magnitude of a vector. — magnitude","text":"x numeric vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/magnitude.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the magnitude of a vector. — magnitude","text":"scalar value (magnitude x).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/make_flowcore_annotated_data_frame.html","id":null,"dir":"Reference","previous_headings":"","what":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","title":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","text":"Make AnnotatedDataFrame needed flowFrame class","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/make_flowcore_annotated_data_frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","text":"","code":"make_flowcore_annotated_data_frame(maxes_and_mins)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/make_flowcore_annotated_data_frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","text":"maxes_and_mins data.frame containing information max min values channel saved flowFrame.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/make_flowcore_annotated_data_frame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","text":"AnnotatedDataFrame.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/make_flowcore_annotated_data_frame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/metal_masterlist.html","id":null,"dir":"Reference","previous_headings":"","what":"A character vector of metal name patterns supported by tidytof. — metal_masterlist","title":"A character vector of metal name patterns supported by tidytof. — metal_masterlist","text":"character vector used `tof_read_fcs` `tof_read_data` detect parse CyTOF metals correspond channel input .fcs file.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/metal_masterlist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A character vector of metal name patterns supported by tidytof. — metal_masterlist","text":"","code":"data(metal_masterlist)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/metal_masterlist.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A character vector of metal name patterns supported by tidytof. — metal_masterlist","text":"character vector entry pattern tidytof searches every CyTOF channel input .fcs files. patterns amalgamate example .fcs files sampled studies linked .","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/metal_masterlist.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"A character vector of metal name patterns supported by tidytof. — metal_masterlist","text":"https://github.com/kara-davis-lab/DDPR https://cytobank.org/nolanlab/reports/Levine2015.html https://cytobank.org/nolanlab/reports/Spitzer2015.html https://cytobank.org/nolanlab/reports/Spitzer2017.html https://community.cytobank.org/cytobank/projects/609","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/metal_masterlist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A character vector of metal name patterns supported by tidytof. — metal_masterlist","text":"named character vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor for a tof_model. — new_tof_model","title":"Constructor for a tof_model. — new_tof_model","text":"Constructor tof_model.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor for a tof_model. — new_tof_model","text":"","code":"new_tof_model(   model,   recipe,   penalty,   mixture,   model_type = c(\"linear\", \"two-class\", \"multiclass\", \"survival\"),   outcome_colnames,   training_data )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor for a tof_model. — new_tof_model","text":"model glmnet model. recipe prepped recipe object. penalty double indicating lambda value used within glmnet path. mixture double indicating alpha value used fit glmnet model. model_type string indicating type glmnet model fit. outcome_colnames training_data ","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructor for a tof_model. — new_tof_model","text":"`tof_model`, S3 class includes trained glmnet model recipe used perform associated preprocessing.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor for a tof_tibble. — new_tof_tibble","title":"Constructor for a tof_tibble. — new_tof_tibble","text":"Constructor tof_tibble.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor for a tof_tibble. — new_tof_tibble","text":"","code":"new_tof_tibble(x = dplyr::tibble(), panel = dplyr::tibble())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor for a tof_tibble. — new_tof_tibble","text":"x data.frame tibble containing single-cell mass cytometry data rows cells columns CyTOF measurements. panel data.frame tibble containing information panel mass cytometry data x.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_tibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructor for a tof_tibble. — new_tof_tibble","text":"`tof_tbl`, tibble extension tracks attributes useful CyTOF data analysis.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/phenograph_data.html","id":null,"dir":"Reference","previous_headings":"","what":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","title":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","text":"dataset containing CyTOF measurements healthy control cells originally studied following paper:   Levine JH, Simonds EF, et al. Data-Driven Phenotypic Dissection AML Reveals Progenitor-like Cells Correlate Prognosis. Cell. 2015 Jul 2;162(1):184-97. doi: 10.1016/j.cell.2015.05.047. Epub 2015 Jun 18. PMID: 26095251; PMCID: PMC4508757.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/phenograph_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","text":"","code":"data(phenograph_data)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/phenograph_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","text":"data frame 6000 rows 26 variables: sample_name Name sample data read phenograph_cluster Numeric ID cluster assignment row cd19 CyTOF measurement raw ion counts cd11b CyTOF measurement raw ion counts cd34 CyTOF measurement raw ion counts cd45 CyTOF measurement raw ion counts cd123 CyTOF measurement raw ion counts cd33 CyTOF measurement raw ion counts cd47 CyTOF measurement raw ion counts cd7 CyTOF measurement raw ion counts cd44 CyTOF measurement raw ion counts cd38 CyTOF measurement raw ion counts cd3 CyTOF measurement raw ion counts cd117 CyTOF measurement raw ion counts cd64 CyTOF measurement raw ion counts cd41 CyTOF measurement raw ion counts pstat3 CyTOF measurement raw ion counts pstat5 CyTOF measurement raw ion counts pampk CyTOF measurement raw ion counts p4ebp1 CyTOF measurement raw ion counts ps6 CyTOF measurement raw ion counts pcreb CyTOF measurement raw ion counts pzap70-syk CyTOF measurement raw ion counts prb CyTOF measurement raw ion counts perk1-2 CyTOF measurement raw ion counts","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/phenograph_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","text":"https://cytobank.org/nolanlab/reports/Levine2015.html","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/phenograph_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","text":"data.frame","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/phenograph_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","text":"2000 cells 3 clusters identified original paper sampled.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. dplyr %>% rlang :=, .data tidyselect all_of, any_of, contains, ends_with, everything, last_col, matches, num_range, starts_with","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/reexports.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Objects exported from other packages — reexports","text":"See documentation object's original package.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/reexports.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Objects exported from other packages — reexports","text":"","code":"# See examples in each object's original package NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/rev_asinh.html","id":null,"dir":"Reference","previous_headings":"","what":"Reverses arcsinh transformation with cofactor `scale_factor` and a\nshift of `shift_factor`. — rev_asinh","title":"Reverses arcsinh transformation with cofactor `scale_factor` and a\nshift of `shift_factor`. — rev_asinh","text":"Reverses arcsinh transformation cofactor `scale_factor` shift `shift_factor`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/rev_asinh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reverses arcsinh transformation with cofactor `scale_factor` and a\nshift of `shift_factor`. — rev_asinh","text":"","code":"rev_asinh(x, shift_factor, scale_factor)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/rev_asinh.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reverses arcsinh transformation with cofactor `scale_factor` and a\nshift of `shift_factor`. — rev_asinh","text":"x numeric vector. shift_factor scalar value `` following equation used transform high-dimensional cytometry raw data ion counts using hyperbolic arcsinh function:    `new_x <- asinh(+ b * x)`. scale_factor scalar value `b` following equation used transform high-dimensional cytometry raw data ion counts using hyperbolic arcsinh function:    `new_x <- asinh(+ b * x)`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/rev_asinh.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reverses arcsinh transformation with cofactor `scale_factor` and a\nshift of `shift_factor`. — rev_asinh","text":"numeric vector undergoing reverse arcsinh transformation","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/rev_asinh.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reverses arcsinh transformation with cofactor `scale_factor` and a\nshift of `shift_factor`. — rev_asinh","text":"","code":"shift_factor <- 0 scale_factor <- 1 / 5  input_value <- 20 asinh_value <- asinh(shift_factor + input_value * scale_factor)  restored_value <- rev_asinh(asinh_value, shift_factor, scale_factor)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tidytof_example_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get paths to tidytof example data — tidytof_example_data","title":"Get paths to tidytof example data — tidytof_example_data","text":"tidytof comes bundled number sample .fcs files inst/extdata directory. function makes easy access.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tidytof_example_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get paths to tidytof example data — tidytof_example_data","text":"","code":"tidytof_example_data(dataset_name = NULL)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tidytof_example_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get paths to tidytof example data — tidytof_example_data","text":"dataset_name Name dataset want access. NULL, names datasets (different study) listed.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tidytof_example_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get paths to tidytof example data — tidytof_example_data","text":"character vector file paths requested .fcs files located. `dataset_name` NULL, character vector dataset names (can used values `dataset_name`) returned instead.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tidytof_example_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get paths to tidytof example data — tidytof_example_data","text":"","code":"tidytof_example_data() #> [1] \"aml\"               \"ddpr\"              \"ddpr_metadata.csv\" #> [4] \"mix\"               \"mix2\"              \"phenograph\"        #> [7] \"phenograph_csv\"    \"surgery\"           tidytof_example_data(dataset_name = \"phenograph\") #> [1] \"/home/runner/work/_temp/Library/tidytof/extdata/phenograph\""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Differential Abundance Analysis (DAA) on high-dimensional cytometry data — tof_analyze_abundance","title":"Perform Differential Abundance Analysis (DAA) on high-dimensional cytometry data — tof_analyze_abundance","text":"function performs differential abundance analysis cell clusters contained within `tof_tbl` using one three methods (\"diffcyt\", \"glmm\", \"ttest\"). wraps members `tof_analyze_abundance_*` function family: tof_analyze_abundance_diffcyt, tof_analyze_abundance_glmm, tof_analyze_abundance_ttest.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Differential Abundance Analysis (DAA) on high-dimensional cytometry data — tof_analyze_abundance","text":"","code":"tof_analyze_abundance(tof_tibble, method = c(\"diffcyt\", \"glmm\", \"ttest\"), ...)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Differential Abundance Analysis (DAA) on high-dimensional cytometry data — tof_analyze_abundance","text":"tof_tibble `tof_tbl` `tibble`. method string indicating statistical method used. Valid values include \"diffcyt\", \"glmm\", \"ttest\". ... Additional arguments pass onto `tof_analyze_abundance_*` function family member corresponding chosen method.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform Differential Abundance Analysis (DAA) on high-dimensional cytometry data — tof_analyze_abundance","text":"tibble nested tibble containing differential abundance results chosen method. See tof_analyze_abundance_diffcyt, tof_analyze_abundance_glmm, tof_analyze_abundance_ttest details.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform Differential Abundance Analysis (DAA) on high-dimensional cytometry data — tof_analyze_abundance","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_diffcyt.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","title":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","text":"function performs differential abundance analysis cell clusters contained within `tof_tbl` using one three methods implemented diffcyt package differential discovery analysis high-dimensional cytometry data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_diffcyt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","text":"","code":"tof_analyze_abundance_diffcyt(   tof_tibble,   sample_col,   cluster_col,   fixed_effect_cols,   random_effect_cols,   diffcyt_method = c(\"glmm\", \"edgeR\", \"voom\"),   include_observation_level_random_effects = FALSE,   min_cells = 3,   min_samples = 5,   alpha = 0.05,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_diffcyt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","text":"tof_tibble `tof_tbl` `tibble`. sample_col unquoted column name indicating column `tof_tibble` represents id sample cell collected. `sample_col` serve unique identifier sample collected data acquisition - cells value `sample_col` treated part observational unit. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. fixed_effect_cols Unquoted column names representing columns `tof_tibble` used model fixed effects differential abundance analysis. Generally speaking, fixed effects represent comparisons biological interest (often variables manipulated experiments), treated vs. non-treated, -treatment vs. -treatment, healthy vs. non-healthy. random_effect_cols Optional. Unquoted column names representing columns `tof_tibble` used model random effects differential abundance analysis. Generally speaking, random effects represent variables researcher wants control/account , necessarily biological interest. Example random effect variables might include batch id, patient id (paired design), patient age. Note without multiple samples level random effect variables, can easy overfit mixed models. high-dimensional cytometry experiments, 2 fewer (often 0) random effect variables appropriate. diffcyt_method string indicating diffcyt method used differential abundance analysis. Valid methods include \"glmm\" (default), \"edgeR\", \"voom\". include_observation_level_random_effects boolean value indicating \"observation-level random effects\" (OLREs) included random effect terms \"glmm\" differential abundance model. details OLREs , see diffcyt paper. \"glmm\" method can model observation-level random effects, values ignore argument (throw warning set TRUE). Defaults FALSE. min_cells integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 3. min_samples integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 5. alpha numeric value 0 1 indicating significance level applied multiple-comparison adjusted p-values differential abundance analysis. Defaults 0.05. ... Optional additional arguments pass --hood diffcyt function used perform differential abundance analysis. See testDA_GLMM, testDA_edgeR, testDA_voom details.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_diffcyt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","text":"nested tibble two columns: `tested_effect` `daa_results`. first column, `tested_effect` character vector indicating term differential abundance model used significance testing. values row obtained pasting together column names fixed effect variable values. example, fixed effect column named `fixed_effect` levels \"\", \"b\", \"c\" two terms `tested_effect`: \"fixed_effectb\" \"fixed_effectc\" (note level \"\" fixed_effect set reference level dummy coding). values correspond terms differential abundance model represent difference cluster abundances samples fixed_effect = \"b\" fixed_effect = \"\" samples fixed_effect = \"c\" fixed_effect = \"\", respectively. addition, first row `tested_effect` always represent \"omnibus\" test, test significant differences levels fixed effect variable model. second column, `daa_results` list tibbles entry gives differential abundance results tested_effect. Within entry `daa_results`, find several columns including following: * `p_val`, p-value associated tested effect input cluster * `p_adj`, multiple-comparison adjusted p-value (using p.adjust function) * values associated underlying method used perform differential abundance analysis (log-fold change cluster abundance levels compared). details, see glmFit, voom, topTable, testDA_GLMM.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_diffcyt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","text":"three methods based generalized linear mixed models (\"glmm\"), edgeR (\"edgeR\"), voom (\"voom\"). \"glmm\" \"voom\" methods can model fixed effects random effects, \"edgeR\" method can model fixed effects.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_diffcyt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_glmm.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Abundance Analysis (DAA) with generalized linear mixed-models (GLMMs) — tof_analyze_abundance_glmm","title":"Differential Abundance Analysis (DAA) with generalized linear mixed-models (GLMMs) — tof_analyze_abundance_glmm","text":"function performs differential abundance analysis cell clusters contained within `tof_tbl` using generalized linear mixed-models. Users specify columns represent sample, cluster, fixed effect, random effect information, (mixed) binomial regression model fit using either glmer glm.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_glmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Abundance Analysis (DAA) with generalized linear mixed-models (GLMMs) — tof_analyze_abundance_glmm","text":"","code":"tof_analyze_abundance_glmm(   tof_tibble,   sample_col,   cluster_col,   fixed_effect_cols,   random_effect_cols,   min_cells = 3,   min_samples = 5,   alpha = 0.05 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_glmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Abundance Analysis (DAA) with generalized linear mixed-models (GLMMs) — tof_analyze_abundance_glmm","text":"tof_tibble `tof_tbl` `tibble`. sample_col unquoted column name indicating column `tof_tibble` represents id sample cell collected. `sample_col` serve unique identifier sample collected data acquisition - cells value `sample_col` treated part observational unit. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. fixed_effect_cols Unquoted column names representing columns `tof_tibble` used model fixed effects differential abundance analysis. Supports tidyselect helpers. Generally speaking, fixed effects represent comparisons biological interest (often variables manipulated experiments), treated vs. non-treated, -treatment vs. -treatment, healthy vs. non-healthy. random_effect_cols Unquoted column names representing columns `tof_tibble` used model random effects differential abundance analysis. Supports tidyselection. Generally speaking, random effects represent variables researcher wants control/account , necessarily biological interest. Example random effect variables might include batch id, patient id (paired design), patient age. Note without many samples level random effect variables, can easy overfit mixed models. high-dimensional cytometry experiments, 2 fewer (often 0) random effect variables appropriate. min_cells integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 3. min_samples integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 5. alpha numeric value 0 1 indicating significance level applied multiple-comparison adjusted p-values differential abundance analysis. Defaults 0.05.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_glmm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Abundance Analysis (DAA) with generalized linear mixed-models (GLMMs) — tof_analyze_abundance_glmm","text":"nested tibble two columns: `tested_effect` `daa_results`. first column, `tested_effect`, character vector indicating term differential abundance model used significance testing. values row obtained pasting together column names fixed effect variable values. example, fixed effect column named fixed_effect levels \"\", \"b\", \"c\" two terms `tested_effect`: \"fixed_effectb\" \"fixed_effectc\" (note level \"\" fixed_effect set reference level dummy coding). values correspond terms differential abundance model represent difference cluster abundances samples fixed_effect = \"b\" fixed_effect = \"\" samples fixed_effect = \"c\" fixed_effect = \"\", respectively. addition, note first row `tested_effect` always represent \"omnibus\" test, test significant differences levels fixed effect variable model. second column, `daa_results`, list tibbles entry gives differential abundance results tested_effect. Within entry `daa_results`, find `p_value`, p-value associated tested effect input cluster; `p_adj`, multiple-comparison adjusted p-value (using p.adjust function), values associated underlying method used perform differential abundance analysis (log-fold change cluster abundance levels compared).","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_glmm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Abundance Analysis (DAA) with generalized linear mixed-models (GLMMs) — tof_analyze_abundance_glmm","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_ttest.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Abundance Analysis (DAA) with t-tests — tof_analyze_abundance_ttest","title":"Differential Abundance Analysis (DAA) with t-tests — tof_analyze_abundance_ttest","text":"function performs differential abundance analysis cell clusters contained within `tof_tbl` using simple t-tests. Users specify columns represent sample, cluster, effect information, either paired unpaired t-test (one per cluster) used detect significant differences sample types.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_ttest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Abundance Analysis (DAA) with t-tests — tof_analyze_abundance_ttest","text":"","code":"tof_analyze_abundance_ttest(   tof_tibble,   cluster_col,   effect_col,   group_cols,   test_type = c(\"unpaired\", \"paired\"),   min_cells = 3,   min_samples = 5,   alpha = 0.05,   quiet = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_ttest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Abundance Analysis (DAA) with t-tests — tof_analyze_abundance_ttest","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. effect_col Unquoted column name representing column `tof_tibble` used break samples groups t-test. 2 unique values. group_cols Unquoted names columns `effect_col` used group cells independent observations. Fills similar role `sample_col` `tof_analyze_abundance_*` functions. example, experiment involves analyzing samples taken multiple patients two timepoints (`effect_col = timepoint`), group_cols name column representing patient IDs. test_type string indicating whether t-test \"unpaired\" (default) \"paired\". min_cells integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 3. min_samples integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 5. alpha numeric value 0 1 indicating significance level applied multiple-comparison adjusted p-values differential abundance analysis. Defaults 0.05. quiet boolean value indicating whether warnings printed. Defaults `TRUE`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_ttest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Abundance Analysis (DAA) with t-tests — tof_analyze_abundance_ttest","text":"tibble 7 columns: {cluster_col} name/ID cluster tested.   entry column match unique value input   {cluster_col}. t t-statistic computed cluster. df degrees freedom used t-test cluster. p_val (unadjusted) p-value t-test cluster. p_adj p.adjust-adjusted p-value t-test cluster. significant character vector \"*\" clusters    p_adj < alpha \"\" otherwise. mean_diff unpaired t-test, difference average   proportions cluster two levels `effect_col`. paired   t-test, average difference proportions cluster   two levels `effect_col` within given patient. mean_fc unpaired t-test, ratio average   proportions cluster two levels `effect_col`. paired   t-test, average ratio proportions cluster   two levels `effect_col` within given patient. 0.001 added   denominator ratio avoid divide--zero errors. \"levels\" attribute result indicates order different levels `effect_col` considered. `mean_diff` value row output computed subtracting second level first level, `mean_fc` value row computed dividing first level second level.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_ttest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Abundance Analysis (DAA) with t-tests — tof_analyze_abundance_ttest","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Differential Expression Analysis (DEA) on high-dimensional cytometry data — tof_analyze_expression","title":"Perform Differential Expression Analysis (DEA) on high-dimensional cytometry data — tof_analyze_expression","text":"function performs differential expression analysis cell clusters contained within `tof_tbl` using one three methods (\"diffcyt\", \"glmm\", \"ttest\"). wraps members `tof_analyze_expression_*` function family: tof_analyze_expression_diffcyt, tof_analyze_expression_lmm, tof_analyze_expression_ttest.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Differential Expression Analysis (DEA) on high-dimensional cytometry data — tof_analyze_expression","text":"","code":"tof_analyze_expression(tof_tibble, method = c(\"diffcyt\", \"glmm\", \"ttest\"), ...)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Differential Expression Analysis (DEA) on high-dimensional cytometry data — tof_analyze_expression","text":"tof_tibble `tof_tbl` `tibble`. method string indicating statistical method used. Valid values include \"diffcyt\", \"lmm\", \"ttest\". ... Additional arguments pass onto `tof_analyze_expression_*` function family member corresponding chosen method.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform Differential Expression Analysis (DEA) on high-dimensional cytometry data — tof_analyze_expression","text":"tibble nested tibble containing differential abundance results chosen method. See tof_analyze_expression_diffcyt, tof_analyze_expression_lmm, tof_analyze_expression_ttest details.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform Differential Expression Analysis (DEA) on high-dimensional cytometry data — tof_analyze_expression","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_diffcyt.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","title":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","text":"function performs differential expression analysis cell clusters contained within `tof_tbl` using one two methods implemented diffcyt package differential discovery analysis high-dimensional cytometry data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_diffcyt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","text":"","code":"tof_analyze_expression_diffcyt(   tof_tibble,   sample_col,   cluster_col,   marker_cols = where(tof_is_numeric),   fixed_effect_cols,   random_effect_cols,   diffcyt_method = c(\"lmm\", \"limma\"),   include_observation_level_random_effects = FALSE,   min_cells = 3,   min_samples = 5,   alpha = 0.05,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_diffcyt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","text":"tof_tibble `tof_tbl` `tibble`. sample_col unquoted column name indicating column `tof_tibble` represents id sample cell collected. `sample_col` serve unique identifier sample collected data acquisition - cells value `sample_col` treated part observational unit. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names representing columns `tof_tibble` (.e. high-dimensional cytometry protein measurements) tested differential expression levels `fixed_effect_cols`. Defaults numeric (integer double) columns. Supports tidyselect helpers. fixed_effect_cols Unquoted column names representing columns `tof_tibble` used model fixed effects differential expression analysis. Generally speaking, fixed effects represent comparisons biological interest (often variables manipulated experiments), treated vs. non-treated, -treatment vs. -treatment, healthy vs. non-healthy. random_effect_cols Unquoted column names representing columns `tof_tibble` used model random effects differential expression analysis. Generally speaking, random effects represent variables researcher wants control/account , necessarily biological interest. Example random effect variables might include batch id, patient id (paired design), patient age. Note without many samples level random effect variables, can easy overfit mixed models. high-dimensional cytometry experiments, 2 fewer (often 0) random effect variables appropriate. diffcyt_method string indicating diffcyt method used differential expression analysis. Valid methods include \"lmm\" (default) \"limma\". include_observation_level_random_effects boolean value indicating \"observation-level random effects\" (OLREs) included random effect terms \"lmm\" differential expression model. details OLREs , see diffcyt paper. Defaults FALSE. min_cells integer value used filter clusters differential expression analysis. Clusters included differential expression testing least `min_cells` least `min_samples` samples. Defaults 3. min_samples integer value used filter clusters differential expression analysis. Clusters included differential expression testing least `min_cells` least `min_samples` samples. Defaults 5. alpha numeric value 0 1 indicating significance level applied multiple-comparison adjusted p-values differential abundance analysis. Defaults 0.05. ... Optional additional arguments pass --hood diffcyt function used perform differential expression analysis. See testDS_LMM testDS_limma details.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_diffcyt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","text":"nested tibble two columns: `tested_effect` `dea_results`. first column, `tested_effect` character vector indicating term differential expression model used significance testing. values row obtained pasting together column names fixed effect variable values. example, fixed effect column named fixed_effect levels \"\", \"b\", \"c\" two terms `tested_effect`: \"fixed_effectb\" \"fixed_effectc\" (note level \"\" fixed_effect set reference level dummy coding). values correspond terms differential expression model represent difference cluster median expression values marker samples fixed_effect = \"b\" fixed_effect = \"\" samples fixed_effect = \"c\" fixed_effect = \"\", respectively. addition, note first row `tested_effect` always represent \"omnibus\" test, test significant differences levels fixed effect variable model. second column, `dea_results` list tibbles entry gives differential expression results tested_effect. Within entry `dea_results`, find `p_val`, p-value associated tested effect input cluster/marker pair; `p_adj`, multiple-comparison adjusted p-value (using p.adjust function), values associated underlying method used perform differential expression analysis (log-fold change clusters' median marker expression values conditions compared). tibble `dea_results` also two columns representing cluster marker corresponding p-value row.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_diffcyt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","text":"two methods based linear mixed models (\"lmm\") limma (\"limma\"). \"lmm\" \"limma\" methods can model fixed effects random effects.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_diffcyt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_lmm.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","title":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","text":"function performs differential expression analysis cell clusters contained within `tof_tbl` using linear mixed-models. Users specify columns represent sample, cluster, marker, fixed effect, random effect information, (mixed) linear regression model fit using either lmer glm.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_lmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","text":"","code":"tof_analyze_expression_lmm(   tof_tibble,   sample_col,   cluster_col,   marker_cols = where(tof_is_numeric),   fixed_effect_cols,   random_effect_cols,   central_tendency_function = median,   min_cells = 3,   min_samples = 5,   alpha = 0.05 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_lmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","text":"tof_tibble `tof_tbl` `tibble`. sample_col unquoted column name indicating column `tof_tibble` represents id sample cell collected. `sample_col` serve unique identifier sample collected data acquisition - cells value `sample_col` treated part observational unit. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names representing columns `tof_tibble` (.e. high-dimensional cytometry protein measurements) included differential discovery analysis. Defaults numeric (integer double) columns. Supports tidyselection. fixed_effect_cols Unquoted column names representing columns `tof_tibble` used model fixed effects differential expression analysis. Supports tidyselection. Generally speaking, fixed effects represent comparisons biological interest (often variables manipulated experiments), treated vs. non-treated, -treatment vs. -treatment, healthy vs. non-healthy. random_effect_cols Optional. Unquoted column names representing columns `tof_tibble` used model random effects differential expression analysis. Supports tidyselection. Generally speaking, random effects represent variables researcher wants control/account , necessarily biological interest. Example random effect variables might include batch id, patient id (paired design), patient age. analyses include random effects. central_tendency_function function used calculate measurement central tendency cluster/marker pair (used dependent variable linear model). Defaults median. min_cells integer value used filter clusters differential expression analysis. Clusters included differential expression testing least `min_cells` least `min_samples` samples. Defaults 3. min_samples integer value used filter clusters differential expression analysis. Clusters included differential expression testing least `min_cells` least `min_samples` samples. Defaults 5. alpha numeric value 0 1 indicating significance level applied multiple-comparison adjusted p-values differential abundance analysis. Defaults 0.05.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_lmm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","text":"nested tibble two columns: `tested_effect` `dea_results`. first column, `tested_effect` character vector indicating term differential expression model used significance testing. values row obtained pasting together column names fixed effect variable values. example, fixed effect column named fixed_effect levels \"\", \"b\", \"c\" two terms `tested_effect`: \"fixed_effectb\" \"fixed_effectc\" (note level \"\" fixed_effect set reference level dummy coding). values correspond terms differential expression model represent difference cluster median expression values marker samples fixed_effect = \"b\" fixed_effect = \"\" samples fixed_effect = \"c\" fixed_effect = \"\", respectively. addition, note first row `tested_effect` always represent \"omnibus\" test, test significant differences levels fixed effect variable model. second column, `dea_results` list tibbles entry gives differential expression results tested_effect. Within entry `daa_results`, find `p_val`, p-value associated tested effect input cluster/marker pair; `p_adj`, multiple-comparison adjusted p-value (using p.adjust function), values associated underlying method used perform differential expression analysis (log-fold change clusters' median marker expression values levels compared).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_lmm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","text":"Specifically, one linear model fit cluster/marker pair. cluster/marker pair, user-supplied measurement central tendency (`central_tendency_function`), mean median, calculated across cells cluster sample--sample basis. , central tendency value used dependent variable linear model `fixed_effect_cols` fixed effects predictors `random_effect_cols` random effects predictors. models (one per cluster/marker pair) fit, p-values coefficient model multiple-comparisons adjusted using p.adjust function.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_lmm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_ttest.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Expression Analysis (DEA) with t-tests — tof_analyze_expression_ttest","title":"Differential Expression Analysis (DEA) with t-tests — tof_analyze_expression_ttest","text":"function performs differential expression analysis cell clusters contained within `tof_tbl` using simple t-tests. Specifically, either unpaired paired t-test compare samples' marker expression distributions (two conditions) within cluster using user-specified summary function (.e. mean median). One t-test conducted per cluster/marker pair significant differences sample types detected multiple-hypothesis correction.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_ttest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Expression Analysis (DEA) with t-tests — tof_analyze_expression_ttest","text":"","code":"tof_analyze_expression_ttest(   tof_tibble,   cluster_col,   marker_cols = where(tof_is_numeric),   effect_col,   group_cols,   test_type = c(\"unpaired\", \"paired\"),   summary_function = mean,   min_cells = 3,   min_samples = 5,   alpha = 0.05,   quiet = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_ttest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Expression Analysis (DEA) with t-tests — tof_analyze_expression_ttest","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names representing columns `tof_tibble` (.e. high-dimensional cytometry protein measurements) tested differential expression levels `effect_col`. Defaults numeric (integer double) columns. Supports tidyselect helpers. effect_col Unquoted column name representing column `tof_tibble` used break samples groups t-test. 2 unique values. group_cols Unquoted names columns `effect_col` used group cells independent observations. Fills similar role `sample_col` `tof_analyze_abundance_*` functions. example, experiment involves analyzing samples taken multiple patients two timepoints (`effect_col = timepoint`), group_cols name column representing patient IDs. test_type string indicating whether t-test \"unpaired\" (default) \"paired\". summary_function vector-valued function used summarize distribution marker cluster (within sample, grouped `group_cols`). Defaults `mean`. min_cells integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 3. min_samples integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 5. alpha numeric value 0 1 indicating significance level applied multiple-comparison adjusted p-values differential abundance analysis. Defaults 0.05. quiet boolean value indicating whether warnings printed. Defaults `TRUE`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_ttest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Expression Analysis (DEA) with t-tests — tof_analyze_expression_ttest","text":"tibble 7 columns: {cluster_col} name/ID cluster cluster/marker pair   tested. entry column match unique value input   {cluster_col}. marker name marker cluster/marker pair tested. t t-statistic computed cluster. df degrees freedom used t-test cluster. p_val (unadjusted) p-value t-test cluster. p_adj p.adjust-adjusted p-value t-test cluster. significant character vector \"*\" clusters    p_adj < alpha \"\" otherwise. mean_diff unpaired t-test, difference average   proportions cluster two levels `effect_col`. paired   t-test, average difference proportions cluster   two levels `effect_col` within given patient. mean_fc unpaired t-test, ratio average   proportions cluster two levels `effect_col`. paired   t-test, average ratio proportions cluster   two levels `effect_col` within given patient. 0.001 added   denominator ratio avoid divide--zero errors. \"levels\" attribute result indicates order different levels `effect_col` considered. `mean_diff` value row output computed subtracting second level first level, `mean_fc` value row computed dividing first level second level.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_ttest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Expression Analysis (DEA) with t-tests — tof_analyze_expression_ttest","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_annotate_clusters.html","id":null,"dir":"Reference","previous_headings":"","what":"Manually annotate tidytof-computed clusters using user-specified labels — tof_annotate_clusters","title":"Manually annotate tidytof-computed clusters using user-specified labels — tof_annotate_clusters","text":"function adds additional column `tibble` `tof_tbl` allow users incorporate manual cell type labels clusters identified using unsupervised algorithms.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_annotate_clusters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Manually annotate tidytof-computed clusters using user-specified labels — tof_annotate_clusters","text":"","code":"tof_annotate_clusters(tof_tibble, cluster_col, annotations)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_annotate_clusters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Manually annotate tidytof-computed clusters using user-specified labels — tof_annotate_clusters","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` contains ids unsupervised cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. annotations data structure indicating annotate cluster id `cluster_col`. `annotations` can provided data.frame two columns (first name `cluster_col` contain unique cluster id; second can name contain character vector indicating manual annotation matched cluster id first column). `annotations` can also provided named character vector; case, entry `annotations` unique cluster id, names entry corresponding manual cluster annotation. See examples.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_annotate_clusters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Manually annotate tidytof-computed clusters using user-specified labels — tof_annotate_clusters","text":"`tof_tbl` number rows `tof_tibble` one additional column containing manual cluster annotations cell (character vector). `annotations` provided data.frame, new column name column containing cluster annotations `annotations`. `annotations` provided named character vector, new column named `{cluster_col}_annotation`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_annotate_clusters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Manually annotate tidytof-computed clusters using user-specified labels — tof_annotate_clusters","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = c(rnorm(n = 500), rnorm(n = 500, mean = 2)),         cd34 = c(rnorm(n = 500), rnorm(n = 500, mean = 4)),         cd19 = rnorm(n = 1000),         cluster_id = c(rep(\"a\", 500), rep(\"b\", 500))     )  # using named character vector sim_data |>     tof_annotate_clusters(         cluster_col = cluster_id,         annotations = c(\"macrophage\" = \"a\", \"dendritic cell\" = \"b\")     ) #> # A tibble: 1,000 × 6 #>        cd45   cd38   cd34   cd19 cluster_id cluster_id_annotation #>       <dbl>  <dbl>  <dbl>  <dbl> <chr>      <chr>                 #>  1 -1.40    -0.337 -0.166  1.12  a          macrophage            #>  2  0.255   -0.216  0.120  0.400 a          macrophage            #>  3 -2.44     0.621 -0.662 -0.985 a          macrophage            #>  4 -0.00557 -1.28  -0.531 -0.503 a          macrophage            #>  5  0.622   -1.30  -0.301  0.987 a          macrophage            #>  6  1.15    -0.377 -0.602  2.19  a          macrophage            #>  7 -1.82     0.104 -0.318 -0.165 a          macrophage            #>  8 -0.247   -0.704  0.308 -0.686 a          macrophage            #>  9 -0.244    1.50   0.799  0.941 a          macrophage            #> 10 -0.283   -0.303  1.75  -0.164 a          macrophage            #> # ℹ 990 more rows  # using two-column data.frame annotation_data_frame <-     data.frame(         cluster_id = c(\"a\", \"b\"),         cluster_annotation = c(\"macrophage\", \"dendritic cell\")     )  sim_data |>     tof_annotate_clusters(         cluster_col = cluster_id,         annotations = annotation_data_frame     ) #> # A tibble: 1,000 × 6 #>        cd45   cd38   cd34   cd19 cluster_id cluster_annotation #>       <dbl>  <dbl>  <dbl>  <dbl> <chr>      <chr>              #>  1 -1.40    -0.337 -0.166  1.12  a          macrophage         #>  2  0.255   -0.216  0.120  0.400 a          macrophage         #>  3 -2.44     0.621 -0.662 -0.985 a          macrophage         #>  4 -0.00557 -1.28  -0.531 -0.503 a          macrophage         #>  5  0.622   -1.30  -0.301  0.987 a          macrophage         #>  6  1.15    -0.377 -0.602  2.19  a          macrophage         #>  7 -1.82     0.104 -0.318 -0.165 a          macrophage         #>  8 -0.247   -0.704  0.308 -0.686 a          macrophage         #>  9 -0.244    1.50   0.799  0.941 a          macrophage         #> 10 -0.283   -0.303  1.75  -0.164 a          macrophage         #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_apply_classifier.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform developmental clustering on CyTOF data using a pre-fit classifier — tof_apply_classifier","title":"Perform developmental clustering on CyTOF data using a pre-fit classifier — tof_apply_classifier","text":"Perform developmental clustering CyTOF data using pre-fit classifier","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_apply_classifier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform developmental clustering on CyTOF data using a pre-fit classifier — tof_apply_classifier","text":"","code":"tof_apply_classifier(   cancer_tibble = NULL,   classifier_fit = NULL,   distance_function = c(\"mahalanobis\", \"cosine\", \"pearson\"),   num_cores = 1,   parallel_vars )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_apply_classifier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform developmental clustering on CyTOF data using a pre-fit classifier — tof_apply_classifier","text":"cancer_tibble `tibble` `tof_tibble` containing cells classified nearest healthy subpopulation (generally cancer cells). classifier_fit nested `tibble` produced `tof_build_classifier` row represents healthy cell subpopulation cells `cancer_tibble` classified using minimum distance. distance_function string indicating distance function used perform classification. Options \"mahalanobis\" (default), \"cosine\", \"pearson\". num_cores integer indicating number CPU cores used parallelize classification. Defaults 1 (single core). parallel_vars Unquoted column names indicating columns `cancer_tibble` use breaking data order parallelize classification. Defaults NULL. Supports tidyselect helpers.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_apply_classifier.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform developmental clustering on CyTOF data using a pre-fit classifier — tof_apply_classifier","text":"tibble `nrow(cancer_tibble)` rows `nrow(classifier_fit) + 1` columns. row represents cell `cancer_tibble`, `nrow(classifier_fit)` columns represent distance cell healthy subpopulations' cluster centroids. final column represents cluster id healthy subpopulation minimum distance cell represented row.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_apply_classifier.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform developmental clustering on CyTOF data using a pre-fit classifier — tof_apply_classifier","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_channels.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect low-expression (i.e. potentially failed) channels in high-dimensional cytometry data — tof_assess_channels","title":"Detect low-expression (i.e. potentially failed) channels in high-dimensional cytometry data — tof_assess_channels","text":"Detect low-expression (.e. potentially failed) channels high-dimensional cytometry data","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_channels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect low-expression (i.e. potentially failed) channels in high-dimensional cytometry data — tof_assess_channels","text":"","code":"tof_assess_channels(   tof_tibble,   channel_cols = where(tof_is_numeric),   negative_threshold = asinh(10/5),   negative_proportion_flag = 0.95 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_channels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect low-expression (i.e. potentially failed) channels in high-dimensional cytometry data — tof_assess_channels","text":"tof_tibble `tof_tbl` `tibble`. channel_cols vector unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. nothing specified, default analyze numeric columns. negative_threshold scalar indicating threshold measurement considered negative. Defaults hyperbolic arcsine transformation 10 counts. negative_proportion_flag scalar 0 1 indicating proportion cells tof_tibble need `negative_threshold` given marker order marker flagged. Defaults 0.95.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_channels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect low-expression (i.e. potentially failed) channels in high-dimensional cytometry data — tof_assess_channels","text":"tibble 3 columns number rows equal number columns `tof_tibble` chosen `channel_cols`. three columns \"channel\", character vector channel names, \"negative_proportion\", numeric vector values 0 1 indicating many cells `tof_tibble` `negative_threshold` channel, `flagged_channel`, boolean vector indicating whether channel flagged potentially failed (TRUE means channel large number cells `negative_threshold`).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_channels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect low-expression (i.e. potentially failed) channels in high-dimensional cytometry data — tof_assess_channels","text":"","code":"# simulate some data sim_data <-     data.frame(         cd4 = rnorm(n = 100, mean = 5, sd = 0.5),         cd8 = rnorm(n = 100, mean = 0, sd = 0.1),         cd33 = rnorm(n = 100, mean = 10, sd = 0.1)     )  tof_assess_channels(tof_tibble = sim_data) #> # A tibble: 3 × 3 #>   channel negative_proportion flagged_channel #>   <chr>                 <dbl> <lgl>           #> 1 cd8                       1 TRUE            #> 2 cd4                       0 FALSE           #> 3 cd33                      0 FALSE            tof_assess_channels(tof_tibble = sim_data, channel_cols = c(cd4, cd8)) #> # A tibble: 2 × 3 #>   channel negative_proportion flagged_channel #>   <chr>                 <dbl> <lgl>           #> 1 cd8                       1 TRUE            #> 2 cd4                       0 FALSE            tof_assess_channels(tof_tibble = sim_data, negative_threshold = 2) #> # A tibble: 3 × 3 #>   channel negative_proportion flagged_channel #>   <chr>                 <dbl> <lgl>           #> 1 cd8                       1 TRUE            #> 2 cd4                       0 FALSE           #> 3 cd33                      0 FALSE"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_distance.html","id":null,"dir":"Reference","previous_headings":"","what":"Assess a clustering result by calculating the z-score of each cell's\nmahalanobis distance to its cluster centroid and flagging outliers. — tof_assess_clusters_distance","title":"Assess a clustering result by calculating the z-score of each cell's\nmahalanobis distance to its cluster centroid and flagging outliers. — tof_assess_clusters_distance","text":"function evaluates result clustering procedure comparing mahalanobis distance cell centroid cluster assigned among cells given cluster. cells mahalanobis-distance z-score user-specified threshold flagged potentially anomalous. Note z-score calculated using modified formula minimize effect outliers (Z = x - median(x) / mad(x)).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assess a clustering result by calculating the z-score of each cell's\nmahalanobis distance to its cluster centroid and flagging outliers. — tof_assess_clusters_distance","text":"","code":"tof_assess_clusters_distance(   tof_tibble,   cluster_col,   marker_cols = where(tof_is_numeric),   z_threshold = 3,   augment = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_distance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assess a clustering result by calculating the z-score of each cell's\nmahalanobis distance to its cluster centroid and flagging outliers. — tof_assess_clusters_distance","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names indicating column `tof_tibble` interpreted markers used mahalanobis distance calculation. Defaults numeric columns. Supports tidyselection. z_threshold scalar indicating distance z-score threshold cell considered anomalous. Defaults 3. augment boolean value indicating output column-bind computed flags cell (see ) new columns `tof_tibble` (TRUE) tibble including computed flags returned (FALSE, default).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_distance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assess a clustering result by calculating the z-score of each cell's\nmahalanobis distance to its cluster centroid and flagging outliers. — tof_assess_clusters_distance","text":"augment = FALSE (default), tibble 3 columns: \".mahalanobis_distance\" (mahalanobis distance cell centroid tits assigned cluster), \"z_score\" (modified z-score cell's mahalanobis distance relative cells dataset), \"flagged_cell\" (boolean indicating whether cell flagged z-score z_threshold). augment = TRUE, 3 columns column-bound tof_tibble, resulting tibble returned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_distance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assess a clustering result by calculating the z-score of each cell's\nmahalanobis distance to its cluster centroid and flagging outliers. — tof_assess_clusters_distance","text":"","code":"# simulate data sim_data_inner <-     dplyr::tibble(         cd45 = c(rnorm(n = 600), rnorm(n = 500, mean = -4)),         cd38 =             c(                 rnorm(n = 100, sd = 0.5),                 rnorm(n = 500, mean = -3),                 rnorm(n = 500, mean = 8)             ),         cd34 =             c(                 rnorm(n = 100, sd = 0.2, mean = -10),                 rnorm(n = 500, mean = 4),                 rnorm(n = 500, mean = 60)             ),         cd19 = c(rnorm(n = 100, sd = 0.3, mean = 10), rnorm(n = 1000)),         cluster_id = c(rep(\"a\", 100), rep(\"b\", 500), rep(\"c\", 500)),         dataset = \"inner\"     )  sim_data_outer <-     dplyr::tibble(         cd45 = c(rnorm(n = 10), rnorm(50, mean = 3), rnorm(n = 50, mean = -12)),         cd38 =             c(                 rnorm(n = 10, sd = 0.5),                 rnorm(n = 50, mean = -10),                 rnorm(n = 50, mean = 10)             ),         cd34 =             c(                 rnorm(n = 10, sd = 0.2, mean = -15),                 rnorm(n = 50, mean = 15),                 rnorm(n = 50, mean = 70)             ),         cd19 = c(rnorm(n = 10, sd = 0.3, mean = 19), rnorm(n = 100)),         cluster_id = c(rep(\"a\", 10), rep(\"b\", 50), rep(\"c\", 50)),         dataset = \"outer\"     )  sim_data <- rbind(sim_data_inner, sim_data_outer)  # detect anomalous cells (in this case, the \"outer\" dataset contains small # clusters that get lumped into the larger clusters in the \"inner\" dataset) z_result <-     sim_data |>     tof_assess_clusters_distance(cluster_col = cluster_id, z_threshold = 2.5)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_entropy.html","id":null,"dir":"Reference","previous_headings":"","what":"Assess a clustering result by calculating the shannon entropy of each cell's\nmahalanobis distance to all cluster centroids and flagging outliers. — tof_assess_clusters_entropy","title":"Assess a clustering result by calculating the shannon entropy of each cell's\nmahalanobis distance to all cluster centroids and flagging outliers. — tof_assess_clusters_entropy","text":"function evaluates result clustering procedure calculating mahalanobis distance cell centroids clusters dataset finding shannon entropy resulting vector distances. cells entropy threshold user-specified threshold flagged potentially anomalous. Entropy minimized (0) cell close one (small number) clusters, far rest . cell close multiple cluster centroids (.e. ambiguous phenotype), entropy large.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_entropy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assess a clustering result by calculating the shannon entropy of each cell's\nmahalanobis distance to all cluster centroids and flagging outliers. — tof_assess_clusters_entropy","text":"","code":"tof_assess_clusters_entropy(   tof_tibble,   cluster_col,   marker_cols = where(tof_is_numeric),   entropy_threshold,   entropy_quantile = 0.9,   num_closest_clusters,   augment = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_entropy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assess a clustering result by calculating the shannon entropy of each cell's\nmahalanobis distance to all cluster centroids and flagging outliers. — tof_assess_clusters_entropy","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names indicating column `tof_tibble` interpreted markers used mahalanobis distance calculation. Defaults numeric columns. Supports tidyselection. entropy_threshold scalar indicating entropy threshold cell considered anomalous. unspecified, threshold computed using `entropy_quantile` (see ). (Note: Entropy often 0 1, can larger many classes/clusters). entropy_quantile scalar 0 1 indicating entropy quantile cell considered anomalous. Defaults 0.9, means cells entropy 90th percentile flagged. Ignored entropy_threshold specified directly. num_closest_clusters integer indicating many cell's closest cluster centroids mahalanobis distance included entropy calculation. Playing argument allow ignore distances clusters far away cell (thus may distort result, many distant centroids large distances can artificially inflate cells' entropy value; said, rarely issue empirically). Defaults clusters tof_tibble. augment boolean value indicating output column-bind computed flags cell (see ) new columns `tof_tibble` (TRUE) tibble including computed flags returned (FALSE, default).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_entropy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assess a clustering result by calculating the shannon entropy of each cell's\nmahalanobis distance to all cluster centroids and flagging outliers. — tof_assess_clusters_entropy","text":"augment = FALSE (default), tibble 2 + NUM_CLUSTERS columns. NUM_CLUSTERS number unique clusters cluster_col. Two columns \"entropy\" (entropy value cell) \"flagged_cell\" (boolean value indicating cell entropy value entropy_threshold). NUM_CLUSTERS columns contain mahalanobis distances cell clusters cluster_col (named \".mahalanobis_{cluster_name}\"). augment = TRUE, 2 + NUM_CLUSTERS columns column-bound tof_tibble, resulting tibble returned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_entropy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assess a clustering result by calculating the shannon entropy of each cell's\nmahalanobis distance to all cluster centroids and flagging outliers. — tof_assess_clusters_entropy","text":"","code":"# simulate data sim_data <-     dplyr::tibble(         cd45 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cd38 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cd34 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cd19 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cluster_id = c(rep(\"a\", 1000), rep(\"b\", 1000), rep(\"c\", 1000))     )  # imagine a \"reference\" dataset in which \"cluster a\" isn't present sim_data_reference <-     sim_data |>     dplyr::filter(cluster_id %in% c(\"b\", \"c\"))  # if we cluster into the reference dataset, we will force all cells in # cluster a into a population where they don't fit very well sim_data <-     sim_data |>     tof_cluster(         healthy_tibble = sim_data_reference,         healthy_label_col = cluster_id,         method = \"ddpr\"     )  # we can evaluate the clustering quality by calculating by the entropy of the # mahalanobis distance vector for each cell to all cluster centroids entropy_result <-     sim_data |>     tof_assess_clusters_entropy(         cluster_col = .mahalanobis_cluster,         marker_cols = starts_with(\"cd\"),         entropy_quantile = 0.8,         augment = TRUE     )  # most cells in \"cluster a\" are flagged, and few cells in the other clusters are flagged_cluster_proportions <-     entropy_result |>     dplyr::group_by(cluster_id) |>     dplyr::summarize(         prop_flagged = mean(flagged_cell)     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_knn.html","id":null,"dir":"Reference","previous_headings":"","what":"Assess a clustering result by calculating a cell's cluster assignment to that\nof its K nearest neighbors. — tof_assess_clusters_knn","title":"Assess a clustering result by calculating a cell's cluster assignment to that\nof its K nearest neighbors. — tof_assess_clusters_knn","text":"function evaluates result clustering procedure finding cell's K nearest neighbors, determining cluster majority assigned , checking matches cell's cluster assignment. cluster assignment majority cell's nearest neighbors match cell's cluster assignment, cell flagged potentially anomalous.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_knn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assess a clustering result by calculating a cell's cluster assignment to that\nof its K nearest neighbors. — tof_assess_clusters_knn","text":"","code":"tof_assess_clusters_knn(   tof_tibble,   cluster_col,   marker_cols = where(tof_is_numeric),   num_neighbors = min(10, nrow(tof_tibble)),   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\"),   augment = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_knn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assess a clustering result by calculating a cell's cluster assignment to that\nof its K nearest neighbors. — tof_assess_clusters_knn","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names indicating column `tof_tibble` interpreted markers used mahalanobis distance calculation. Defaults numeric columns. Supports tidyselection. num_neighbors integer indicating many neighbors found nearest neighbor calculation. distance_function string indicating distance function used perform k nearest neighbor calculation.  Options \"euclidean\" (default) \"cosine\". augment boolean value indicating output column-bind computed flags cell (see ) new columns `tof_tibble` (TRUE) tibble including computed flags returned (FALSE, default).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_knn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assess a clustering result by calculating a cell's cluster assignment to that\nof its K nearest neighbors. — tof_assess_clusters_knn","text":"augment = FALSE (default), tibble 2 columns: \".knn_cluster\" (character vector indicating cluster received majority vote cell's k nearest neighbors) \"flagged_cell\" (boolean value indicating cell's cluster assignment matched majority vote (TRUE) (FALSE)). augment = TRUE, 2 columns column-bound tof_tibble, resulting tibble returned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_knn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assess a clustering result by calculating a cell's cluster assignment to that\nof its K nearest neighbors. — tof_assess_clusters_knn","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cd38 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cd34 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cd19 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cluster_id = c(rep(\"a\", 1000), rep(\"b\", 1000), rep(\"c\", 1000))     )  knn_result <-     sim_data |>     tof_assess_clusters_knn(         cluster_col = cluster_id,         num_neighbors = 10     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect flow rate abnormalities in high-dimensional cytometry data — tof_assess_flow_rate","title":"Detect flow rate abnormalities in high-dimensional cytometry data — tof_assess_flow_rate","text":"function performs simplified version flowAI's statistical test detect time periods abnormal flow rates course flow cytometry experiment. Briefly, relative flow rates timestep throughout data acquisition calculated (see tof_calculate_flow_rate), outlier timepoints particularly high low flow rates (.e. beyond extreme values t-distribution across timesteps) flagged.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect flow rate abnormalities in high-dimensional cytometry data — tof_assess_flow_rate","text":"","code":"tof_assess_flow_rate(   tof_tibble,   time_col,   group_cols,   num_timesteps = nrow(tof_tibble)/1000,   alpha_threshold = 0.01,   visualize = FALSE,   ...,   augment = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect flow rate abnormalities in high-dimensional cytometry data — tof_assess_flow_rate","text":"tof_tibble `tof_tbl` `tibble`. time_col unquoted column name indicating column `tof_tibble` contains time cell collected. group_cols Optional. Unquoted column names indicating columns used group cells analysis. Flow rate calculation performed independently within group. Supports tidyselect helpers. num_timesteps number bins `time_col` split. define \"timesteps\" data collection process. number cells analyzed cytometer counted bin separately represent relative average flow rate timestep data collection. alpha_threshold scalar 0 1 indicating two-tailed significance level draw outlier thresholds t-distribution `num_timesteps` - 1 degrees freedom. Defaults 0.01. visualize boolean value indicating plot generated visualize timestep's relative flow rate (group) instead returning tibble directly. Defaults FALSE. ... Optional additional arguments pass facet_wrap. Ignored visualize = FALSE. augment boolean value indicating output column-bind computed flags cell (see ) new columns `tof_tibble` (TRUE) tibble including computed flags returned (FALSE, default).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect flow rate abnormalities in high-dimensional cytometry data — tof_assess_flow_rate","text":"tibble number rows `tof_tibble`. augment = FALSE (default), 3 columns: \"{time_col}\" (column `time_col`), \"timestep\" (numeric timestep cell assigned based value `time_col`), \"flagged_window\" (boolean vector indicating cell collecting timestep flagged high low flow rate). augment = TRUE, 3 columns column-bound `tof_tibble` return augmented version input dataset. (Note case, time_col duplicated). visualize = TRUE, ggplot object returned instead tibble.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect flow rate abnormalities in high-dimensional cytometry data — tof_assess_flow_rate","text":"","code":"set.seed(1000L) sim_data <-     data.frame(         cd4 = rnorm(n = 1000, mean = 5, sd = 0.5),         cd8 = rnorm(n = 1000, mean = 0, sd = 0.1),         cd33 = rnorm(n = 1000, mean = 10, sd = 0.1),         file_name = c(rep(\"a\", times = 500), rep(\"b\", times = 500)),         time =             c(                 sample(1:100, size = 200, replace = TRUE),                 sample(100:400, size = 300, replace = TRUE),                 sample(1:150, size = 400, replace = TRUE),                 sample(1:500, size = 100, replace = TRUE)             )     )  sim_data |>     tof_assess_flow_rate(         time_col = time,         num_timesteps = 20,         visualize = TRUE     )   sim_data |>     tof_assess_flow_rate(         time_col = time,         group_cols = file_name,         num_timesteps = 20,         visualize = TRUE     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect flow rate abnormalities in high-dimensional cytometry data (stored in a\nsingle data.frame) — tof_assess_flow_rate_tibble","title":"Detect flow rate abnormalities in high-dimensional cytometry data (stored in a\nsingle data.frame) — tof_assess_flow_rate_tibble","text":"function performs simplified version flowAI's statistical test detect time periods abnormal flow rates course flow cytometry experiment. Briefly, relative flow rates timestep throughout data acquisition calculated (see tof_calculate_flow_rate), outlier timepoints particularly high low flow rates (.e. beyond extreme values t-distribution across timesteps) flagged.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect flow rate abnormalities in high-dimensional cytometry data (stored in a\nsingle data.frame) — tof_assess_flow_rate_tibble","text":"","code":"tof_assess_flow_rate_tibble(   tof_tibble,   time_col,   num_timesteps = nrow(tof_tibble)/1000,   alpha_threshold = 0.01,   augment = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect flow rate abnormalities in high-dimensional cytometry data (stored in a\nsingle data.frame) — tof_assess_flow_rate_tibble","text":"tof_tibble `tof_tbl` `tibble`. time_col unquoted column name indicating column `tof_tibble` contains time cell collected. num_timesteps number bins `time_col` split. define \"timesteps\" data collection process. number cells analyzed cytometer counted bin separately represent relative average flow rate timestep data collection. alpha_threshold scalar 0 1 indicating two-tailed significance level draw outlier thresholds t-distribution `num_timesteps` - 1 degrees freedom. Defaults 0.01. augment boolean value indicating output column-bind computed flags cell (see ) new columns `tof_tibble` (TRUE) tibble including computed flags returned (FALSE, default).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate_tibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect flow rate abnormalities in high-dimensional cytometry data (stored in a\nsingle data.frame) — tof_assess_flow_rate_tibble","text":"tibble number rows `tof_tibble`. augment = FALSE (default), 3 columns: \"{time_col}\" (column `time_col`), \"timestep\" (numeric timestep cell assigned based value `time_col`), \"flagged_window\" (boolean vector indicating cell collecting timestep flagged high low flow rate). augment = TRUE, 3 columns column-bound `tof_tibble` return augmented version input dataset. (Note case, time_col duplicated).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate_tibble.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect flow rate abnormalities in high-dimensional cytometry data (stored in a\nsingle data.frame) — tof_assess_flow_rate_tibble","text":"","code":"set.seed(1000L) sim_data <-     data.frame(         cd4 = rnorm(n = 1000, mean = 5, sd = 0.5),         cd8 = rnorm(n = 1000, mean = 0, sd = 0.1),         cd33 = rnorm(n = 1000, mean = 10, sd = 0.1),         time =             c(                 sample(1:100, size = 200, replace = TRUE),                 sample(100:400, size = 300, replace = TRUE),                 sample(1:150, size = 400, replace = TRUE),                 sample(1:500, size = 100, replace = TRUE)             )     )  sim_data |>     tof_assess_flow_rate(         time_col = time,         num_timesteps = 20,         visualize = TRUE     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Assess a trained elastic net model — tof_assess_model","title":"Assess a trained elastic net model — tof_assess_model","text":"function assesses trained `tof_model`'s performance new data computing model type-specific performance measurements. new data provided, performance metrics training data provided.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assess a trained elastic net model — tof_assess_model","text":"","code":"tof_assess_model(tof_model, new_data)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assess a trained elastic net model — tof_assess_model","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations used evaluate `tof_model`'s performance. new_data provided, model evaluation performed using training data used fit model. Alternatively, string \"tuning\" can provided access model's performance metrics (resampled) model tuning process.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assess a trained elastic net model — tof_assess_model","text":"list performance metrics whose components depend model type: \"model_metrics\" tibble two columns (\"metric\" \"value\") containing standard performance metrics model type. linear models, \"mse\" (mean squared error predictions) \"mae\" (mean absolute error predictions). two-class models, \"roc_auc\" (area Receiver-Operating Curve classification), \"misclassification error\" (proportion misclassified observations), \"binomial_deviance\" (see deviance.glmnet), \"mse\" (mean squared error logit function), \"mae\" (mean absolute error logit function). multiclass models, \"roc_auc\" (area Receiver-Operating Curve classification using Hand-Till generalization ROC AUC multiclass models roc_auc), \"misclassification error\" (proportion misclassified observations), \"multinomial_deviance\" (see deviance.glmnet), \"mse\" \"mae\" . survival models, \"concordance_index\" (Harrel's C index; see deviance.glmnet) \"partial_likelihood_deviance\" (see deviance.glmnet). \"roc_curve\" Reported \"two-class\" \"multiclass\" models. ,  tibble provided reporting true-positive rate (tpr) false-positive  rate (fpr) threshold classification use plotting  receiver-operating curve. \"multiclass\" models, \".level\" column  allows separating values roc_curve one ROC can plotted  class. \"confusion_matrix\" Reported \"two-class\" \"multiclass\" models. , tibble provided reporting \"confusion matrix\" classification long-format. \"survival_curves\" Reported \"survival\" models. tibble indicating patient's probability survival (1 - probability(event)) timepoint dataset whether sample placed \"high\" \"low\" risk group according predicted relative risk (tof_model's optimal relative_risk cutoff training dataset).","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assess a trained elastic net model — tof_assess_model","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100)     )  new_tibble <-     dplyr::tibble(         sample = as.character(1:20),         cd45 = runif(n = 20),         pstat5 = runif(n = 20),         cd34 = runif(n = 20),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(20)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  # assess the model on new data tof_assess_model(tof_model = regression_model, new_data = new_tibble) #> $model_metrics #> # A tibble: 2 × 2 #>   metric value #>   <chr>  <dbl> #> 1 mse    0.795 #> 2 mae    0.788 #>"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_new_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute a trained elastic net model's performance metrics using new_data. — tof_assess_model_new_data","title":"Compute a trained elastic net model's performance metrics using new_data. — tof_assess_model_new_data","text":"Compute trained elastic net model's performance metrics using new_data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_new_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute a trained elastic net model's performance metrics using new_data. — tof_assess_model_new_data","text":"","code":"tof_assess_model_new_data(tof_model, new_data)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_new_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute a trained elastic net model's performance metrics using new_data. — tof_assess_model_new_data","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations used evaluate `tof_model`'s performance.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_new_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute a trained elastic net model's performance metrics using new_data. — tof_assess_model_new_data","text":"list performance metrics whose components depend model type.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_tuning.html","id":null,"dir":"Reference","previous_headings":"","what":"Access a trained elastic net model's performance metrics using its tuning data. — tof_assess_model_tuning","title":"Access a trained elastic net model's performance metrics using its tuning data. — tof_assess_model_tuning","text":"Access trained elastic net model's performance metrics using tuning data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_tuning.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Access a trained elastic net model's performance metrics using its tuning data. — tof_assess_model_tuning","text":"","code":"tof_assess_model_tuning(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_tuning.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Access a trained elastic net model's performance metrics using its tuning data. — tof_assess_model_tuning","text":"tof_model `tof_model` trained using tof_train_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_tuning.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Access a trained elastic net model's performance metrics using its tuning data. — tof_assess_model_tuning","text":"list performance metrics whose components depend model type.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct","text":"function performs quantile normalization high-dimensional cytometry data tidy format using either linear rescaling quantile normalization. channel specified `channel_cols` batch corrected, `group_cols` can used break cells groups batch correction performed separately.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct","text":"","code":"tof_batch_correct(   tof_tibble,   channel_cols,   group_cols,   augment = TRUE,   method = c(\"rescale\", \"quantile\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct","text":"tof_tibble `tof_tbl` `tibble`. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. group_cols Optional. Unquoted column names indicating columns used group cells batch correction. Batch correction performed independently within group. Supports tidyselect helpers. augment boolean value indicating output replace `channel_cols` `tof_tibble` new, batch corrected columns (TRUE, default) return batch-corrected columns (FALSE) columns omitted. method string indicating batch correction method used. Valid options \"rescale\" linear scaling (default) \"quantile\" quantile normalization using normalize.quantiles.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct","text":"augment = TRUE, tibble number rows columns tof_tibble, columns specified `channel_cols` batch-corrected. augment = FALSE, tibble containing batch-corrected `channel_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile.html","id":null,"dir":"Reference","previous_headings":"","what":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile","text":"function performs quantile normalization high-dimensional cytometry data tidy format using normalize.quantiles. Optionally, groups can specified normalized separately.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile","text":"","code":"tof_batch_correct_quantile(   tof_tibble,   channel_cols,   group_cols,   augment = TRUE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile","text":"tof_tibble `tof_tbl` `tibble`. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. group_cols Optional. Unquoted column names indicating columns used group cells batch correction. Batch correction performed independently within group. Supports tidyselect helpers. augment boolean value indicating output replace `channel_cols` `tof_tibble` new, batch corrected columns (TRUE, default) return batch-corrected columns (FALSE) columns omitted.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile","text":"augment = TRUE, tibble number rows columns tof_tibble, columns specified `channel_cols` batch-corrected. augment = FALSE, tibble containing batch-corrected `channel_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile_tibble","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile_tibble","text":"function performs quantile normalization high-dimensional cytometry data tidy format using normalize.quantiles.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile_tibble","text":"","code":"tof_batch_correct_quantile_tibble(tof_tibble, channel_cols, augment = TRUE)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile_tibble","text":"tof_tibble `tof_tbl` `tibble`. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. augment boolean value indicating output replace `channel_cols` `tof_tibble` new, batch corrected columns (TRUE, default) return batch-corrected columns (FALSE) columns omitted.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile_tibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile_tibble","text":"augment = TRUE, tibble number rows columns tof_tibble, columns specified `channel_cols` batch-corrected. augment = FALSE, tibble containing batch-corrected `channel_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile_tibble.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile_tibble","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_rescale.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct_rescale","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct_rescale","text":"function performs quantile normalization high-dimensional cytometry data tidy format using linear rescaling. channel specified `channel_cols` rescaled maximum value 1 minimum value 0. `group_cols` specifies columns used break cells groups rescaling performed separately.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_rescale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct_rescale","text":"","code":"tof_batch_correct_rescale(tof_tibble, channel_cols, group_cols, augment = TRUE)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_rescale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct_rescale","text":"tof_tibble `tof_tbl` `tibble`. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. group_cols Optional. Unquoted column names indicating columns used group cells batch correction. Batch correction performed independently within group. Supports tidyselect helpers. augment boolean value indicating output replace `channel_cols` `tof_tibble` new, batch corrected columns (TRUE, default) return batch-corrected columns (FALSE) columns omitted.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_rescale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct_rescale","text":"augment = TRUE, tibble number rows columns tof_tibble, columns specified `channel_cols` batch-corrected. augment = FALSE, tibble containing batch-corrected `channel_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_rescale.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct_rescale","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_build_classifier.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate centroids and covariance matrices for each cell subpopulation in\nhealthy CyTOF data. — tof_build_classifier","title":"Calculate centroids and covariance matrices for each cell subpopulation in\nhealthy CyTOF data. — tof_build_classifier","text":"function takes `tibble` `tof_tibble` storing healthy cell measurements rows vector (`healthy_cell_labels`) representing cell subpopulation cell belongs. uses values calculate several values required perform \"developmental classification\" described paper.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_build_classifier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate centroids and covariance matrices for each cell subpopulation in\nhealthy CyTOF data. — tof_build_classifier","text":"","code":"tof_build_classifier(   healthy_tibble = NULL,   healthy_cell_labels = NULL,   classifier_markers = where(tof_is_numeric),   verbose = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_build_classifier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate centroids and covariance matrices for each cell subpopulation in\nhealthy CyTOF data. — tof_build_classifier","text":"healthy_tibble `tibble` `tof_tibble` containing cells healthy control samples (.e. disease samples). healthy_cell_labels character integer vector length `nrow(healthy_tibble)`. entry vector represent cell subpopulation label (cluster id) corresponding row `healthy_tibble`. classifier_markers Unquoted column names indicating columns `healthy_tibble` use developmental classification. Defaults numeric columns `healthy_tibble`. Supports tidyselect helpers. verbose boolean value indicating updates printed console classification. Defaults FALSE.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_build_classifier.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate centroids and covariance matrices for each cell subpopulation in\nhealthy CyTOF data. — tof_build_classifier","text":"tibble three columns: population (id healthy cell population), centroid (centroid vector cell population), covariance_matrix (covariance matrix cell population)","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_calculate_flow_rate.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the relative flow rates of different timepoints throughout a flow\nor mass cytometry run. — tof_calculate_flow_rate","title":"Calculate the relative flow rates of different timepoints throughout a flow\nor mass cytometry run. — tof_calculate_flow_rate","text":"Calculate relative flow rates different timepoints throughout flow mass cytometry run.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_calculate_flow_rate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the relative flow rates of different timepoints throughout a flow\nor mass cytometry run. — tof_calculate_flow_rate","text":"","code":"tof_calculate_flow_rate(   tof_tibble,   time_col,   num_timesteps = nrow(tof_tibble)/1000 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_calculate_flow_rate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the relative flow rates of different timepoints throughout a flow\nor mass cytometry run. — tof_calculate_flow_rate","text":"tof_tibble `tof_tbl` `tibble`. time_col unquoted column name indicating column `tof_tibble` contains time cell collected. num_timesteps number bins `time_col` split. define \"timesteps\" data collection process. number cells analyzed cytometer counted bin separately represent relative average flow rate timestep data collection.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_calculate_flow_rate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the relative flow rates of different timepoints throughout a flow\nor mass cytometry run. — tof_calculate_flow_rate","text":"tibble 3 columns num_timesteps rows. row represent single timestep (error thrown `num_timesteps` larger number rows `tof_tibble`). three columns follows: \"timestep\", numeric vector indicating timestep represented given row; \"time_window\", factor showing interval `time_col` \"timestep\" defined; \"num_cells\", number cells collected timestep.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_calculate_flow_rate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the relative flow rates of different timepoints throughout a flow\nor mass cytometry run. — tof_calculate_flow_rate","text":"","code":"# simulate some data sim_data <-     data.frame(         cd4 = rnorm(n = 100, mean = 5, sd = 0.5),         cd8 = rnorm(n = 100, mean = 0, sd = 0.1),         cd33 = rnorm(n = 100, mean = 10, sd = 0.1),         time = sample(1:300, size = 100)     )  tof_calculate_flow_rate(tof_tibble = sim_data, time_col = time, num_timesteps = 20L) #>    timestep time_window num_cells #> 1         1 (6.71,21.6]         4 #> 2         2 (21.6,36.2]         6 #> 3         3 (36.2,50.8]         7 #> 4         4 (50.8,65.4]         7 #> 5         5   (65.4,80]         5 #> 6         6   (80,94.6]         4 #> 7         7  (94.6,109]         5 #> 8         8   (109,124]         4 #> 9         9   (124,138]         1 #> 10       10   (138,153]         7 #> 11       11   (153,168]         5 #> 12       12   (168,182]         2 #> 13       13   (182,197]         7 #> 14       14   (197,211]         7 #> 15       15   (211,226]         5 #> 16       16   (226,241]         2 #> 17       17   (241,255]         4 #> 18       18   (255,270]         5 #> 19       19   (270,284]         7 #> 20       20   (284,299]         6"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_check_model_args.html","id":null,"dir":"Reference","previous_headings":"","what":"Check argument specifications for a glmnet model. — tof_check_model_args","title":"Check argument specifications for a glmnet model. — tof_check_model_args","text":"Check argument specifications glmnet model.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_check_model_args.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check argument specifications for a glmnet model. — tof_check_model_args","text":"","code":"tof_check_model_args(   split_data,   model_type = c(\"linear\", \"two-class\", \"multiclass\", \"survival\"),   best_model_type = c(\"best\", \"best with sparsity\"),   response_col,   time_col,   event_col )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_check_model_args.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check argument specifications for a glmnet model. — tof_check_model_args","text":"split_data `rsplit` `rset` object rsample package containing sample-level data use modeling. Alternatively, unsplit tbl_df can provided, though recommended. model_type string indicating kind elastic net model build. continuous response predicted, use \"linear\" linear regression; categorical response 2 classes predicted, use \"two-class\" logistic regression; categorical response 2 levels predicted, use \"multiclass\" multinomial regression; time--event outcome predicted, use \"survival\" Cox regression. best_model_type Currently unused. response_col Unquoted column name indicating column data contained `split_data` used outcome \"two-class\", \"multiclass\", \"linear\" elastic net model. Must factor \"two-class\" \"multiclass\" models must numeric \"linear\" models. Ignored `model_type` \"survival\". time_col Unquoted column name indicating column data contained `split_data` represents time--event outcome \"survival\" elastic net model. Must numeric. Ignored `model_type` \"two-class\", \"multiclass\", \"linear\". event_col Unquoted column name indicating column data contained `split_data` represents time--event outcome \"survival\" elastic net model. Must binary column - values either 0 1 (1 indicating adverse event) FALSE TRUE (TRUE indicating adverse event). Ignored `model_type` \"two-class\", \"multiclass\", \"linear\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_check_model_args.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check argument specifications for a glmnet model. — tof_check_model_args","text":"tibble. arguments specified correctly, tibble can used create recipe preprocessing.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_classify_cells.html","id":null,"dir":"Reference","previous_headings":"","what":"Classify each cell (i.e. each row) in a matrix of cancer cells into its most\nsimilar healthy developmental subpopulation. — tof_classify_cells","title":"Classify each cell (i.e. each row) in a matrix of cancer cells into its most\nsimilar healthy developmental subpopulation. — tof_classify_cells","text":"function uses specified distance metric classify cell data.frame matrix (`cancer_data`) one `nrow(classifier_fit)` subpopulations based minimum distance, described paper.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_classify_cells.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Classify each cell (i.e. each row) in a matrix of cancer cells into its most\nsimilar healthy developmental subpopulation. — tof_classify_cells","text":"","code":"tof_classify_cells(   classifier_fit,   cancer_data,   distance_function = c(\"mahalanobis\", \"cosine\", \"pearson\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_classify_cells.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Classify each cell (i.e. each row) in a matrix of cancer cells into its most\nsimilar healthy developmental subpopulation. — tof_classify_cells","text":"classifier_fit tibble produced tof_build_classifier. cancer_data matrix row corresponds cell column corresponds measured CyTOF antigen. distance_function string indicating three distance functions used calculate distances row `cancer_data` healthy developmental subpopulations corresponding row `classifier_fit`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_classify_cells.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Classify each cell (i.e. each row) in a matrix of cancer cells into its most\nsimilar healthy developmental subpopulation. — tof_classify_cells","text":"data.frame column represents distance cell input data healthy subpopulation cells classified .","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_clean_metric_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename glmnet's default model evaluation metrics to make them more interpretable — tof_clean_metric_names","title":"Rename glmnet's default model evaluation metrics to make them more interpretable — tof_clean_metric_names","text":"Rename glmnet's default model evaluation metrics make interpretable","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_clean_metric_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename glmnet's default model evaluation metrics to make them more interpretable — tof_clean_metric_names","text":"","code":"tof_clean_metric_names(metric_tibble, model_type)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_clean_metric_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename glmnet's default model evaluation metrics to make them more interpretable — tof_clean_metric_names","text":"metric_tibble tibble column represents glmnet model evaluation metric default name. model_type string indicating type glmnet model trained.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_clean_metric_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename glmnet's default model evaluation metrics to make them more interpretable — tof_clean_metric_names","text":"tibble column represents glmnet model evaluation metric \"cleaned\" name.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster high-dimensional cytometry data. — tof_cluster","title":"Cluster high-dimensional cytometry data. — tof_cluster","text":"function wrapper around tidytof's tof_cluster_* function family. performs clustering high-dimensional cytometry data using user-specified method (5 choices) method's corresponding input parameters.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster high-dimensional cytometry data. — tof_cluster","text":"","code":"tof_cluster(   tof_tibble,   cluster_cols = where(tof_is_numeric),   group_cols = NULL,   ...,   augment = TRUE,   method )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster high-dimensional cytometry data. — tof_cluster","text":"tof_tibble `tof_tbl` `tibble`. cluster_cols Unquoted column names indicating columns `tof_tibble` use computing clusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. group_cols Optional. Unquoted column names indicating columns used group cells clustering. Clustering performed group independently. Supports tidyselect helpers. ... Additional arguments pass `tof_cluster_*` function family member corresponding chosen method. augment boolean value indicating output column-bind cluster ids cell new column `tof_tibble` (TRUE, default) single-column tibble including cluster ids returned (FALSE). method string indicating clustering methods used. Valid values include \"flowsom\", \"phenograph\", \"kmeans\", \"ddpr\", \"xshift\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cluster high-dimensional cytometry data. — tof_cluster","text":"`tof_tbl` `tibble` augment = FALSE, single column encoding cluster ids cell `tof_tibble`. augment = TRUE, ncol(tof_tibble) + 1 columns: (unaltered) columns `tof_tibble` plus additional column encoding cluster ids.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cluster high-dimensional cytometry data. — tof_cluster","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 500),         cd38 = rnorm(n = 500),         cd34 = rnorm(n = 500),         cd19 = rnorm(n = 500)     )  tof_cluster(tof_tibble = sim_data, method = \"kmeans\") #> # A tibble: 500 × 5 #>      cd45   cd38   cd34   cd19 .kmeans_cluster #>     <dbl>  <dbl>  <dbl>  <dbl> <chr>           #>  1  1.33  -0.447  1.50   0.436 11              #>  2 -1.20  -0.481 -0.391 -1.54  9               #>  3 -0.541  0.666 -1.68  -0.986 16              #>  4 -1.22   1.32   0.689 -0.791 10              #>  5  0.639  0.519 -1.32  -0.204 18              #>  6 -0.239  0.397 -0.780  0.372 1               #>  7  0.651  0.997 -0.665  0.805 18              #>  8  0.788  1.26   0.584 -0.953 19              #>  9 -0.344  0.388 -0.407 -0.442 13              #> 10  0.120  0.885 -2.26   0.583 17              #> # ℹ 490 more rows tof_cluster(tof_tibble = sim_data, method = \"phenograph\") #> # A tibble: 500 × 5 #>      cd45   cd38   cd34   cd19 .phenograph_cluster #>     <dbl>  <dbl>  <dbl>  <dbl> <chr>               #>  1  1.33  -0.447  1.50   0.436 2                   #>  2 -1.20  -0.481 -0.391 -1.54  1                   #>  3 -0.541  0.666 -1.68  -0.986 1                   #>  4 -1.22   1.32   0.689 -0.791 3                   #>  5  0.639  0.519 -1.32  -0.204 5                   #>  6 -0.239  0.397 -0.780  0.372 5                   #>  7  0.651  0.997 -0.665  0.805 4                   #>  8  0.788  1.26   0.584 -0.953 8                   #>  9 -0.344  0.388 -0.407 -0.442 1                   #> 10  0.120  0.885 -2.26   0.583 5                   #> # ℹ 490 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_ddpr.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform developmental clustering on high-dimensional cytometry data. — tof_cluster_ddpr","title":"Perform developmental clustering on high-dimensional cytometry data. — tof_cluster_ddpr","text":"function performs distance-based clustering high-dimensional cytometry data sorting cancer cells (passed function `tof_tibble`) phenotypically similar healthy cell subpopulation (passed function using `healthy_tibble`). details algorithm used perform clustering, see paper.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_ddpr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform developmental clustering on high-dimensional cytometry data. — tof_cluster_ddpr","text":"","code":"tof_cluster_ddpr(   tof_tibble,   healthy_tibble,   healthy_label_col,   cluster_cols = where(tof_is_numeric),   distance_function = c(\"mahalanobis\", \"cosine\", \"pearson\"),   num_cores = 1L,   parallel_cols,   return_distances = FALSE,   verbose = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_ddpr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform developmental clustering on high-dimensional cytometry data. — tof_cluster_ddpr","text":"tof_tibble `tibble` `tof_tbl` containing cells classified nearest healthy subpopulation (generally cancer cells). healthy_tibble `tibble` `tof_tibble` containing cells healthy control samples (.e. disease samples). healthy_label_col unquoted column name indicating column `healthy_tibble` contains subpopulation label (cluster id) cell `healthy_tibble`. cluster_cols Unquoted column names indicating columns `tof_tibble` use computing DDPR clusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. distance_function string indicating distance function used perform classification. Options \"mahalanobis\" (default), \"cosine\", \"pearson\". num_cores integer indicating number CPU cores used parallelize classification. Defaults 1 (single core). parallel_cols Optional. Unquoted column names indicating columns `tof_tibble` use breaking data order parallelize classification using `foreach` `doParallel` backend. Supports tidyselect helpers. return_distances boolean value indicating whether returned result include one column, cluster ids corresponding row `tof_tibble` (return_distances = FALSE, default), returned result include additional columns representing distance row `tof_tibble` healthy subpopulation centroids (return_distances = TRUE). verbose boolean value indicating whether progress updates printed developmental classification. Default FALSE.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_ddpr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform developmental clustering on high-dimensional cytometry data. — tof_cluster_ddpr","text":"`return_distances = FALSE`, tibble one column named `.{distance_function}_cluster`, character vector length `nrow(tof_tibble)` indicating id developmental cluster cell (.e. row) `tof_tibble` assigned. `return_distances = TRUE`, tibble `nrow(tof_tibble)` rows `nrow(classifier_fit) + 1` columns. row represents cell `tof_tibble`, `nrow(classifier_fit)` columns represent distance cell healthy subpopulations' cluster centroids. final column represents cluster id healthy subpopulation minimum distance cell represented row. `return_distances = FALSE`, tibble one column named `.{distance_function}_cluster`. column contain integer vector length `nrow(tof_tibble)` indicating id developmental cluster cell (.e. row) `tof_tibble` assigned.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_ddpr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform developmental clustering on high-dimensional cytometry data. — tof_cluster_ddpr","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  healthy_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200),         cluster_id = c(rep(\"a\", times = 100), rep(\"b\", times = 100))     )  tof_cluster_ddpr(     tof_tibble = sim_data,     healthy_tibble = healthy_data,     healthy_label_col = cluster_id ) #> # A tibble: 1,000 × 1 #>    .mahalanobis_cluster #>    <chr>                #>  1 b                    #>  2 b                    #>  3 b                    #>  4 a                    #>  5 b                    #>  6 b                    #>  7 b                    #>  8 a                    #>  9 a                    #> 10 b                    #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_flowsom.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","title":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","text":"function performs FlowSOM clustering high-dimensional cytometry data using user-specified selection input variables/high-dimensional cytometry measurements. mostly convenient wrapper around SOM MetaClustering.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_flowsom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","text":"","code":"tof_cluster_flowsom(   tof_tibble = NULL,   cluster_cols = where(tof_is_numeric),   som_xdim = 10,   som_ydim = 10,   som_distance_function = c(\"euclidean\", \"manhattan\", \"chebyshev\", \"cosine\"),   perform_metaclustering = TRUE,   num_metaclusters = 20,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_flowsom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","text":"tof_tibble `tof_tbl` `tibble`. cluster_cols Unquoted column names indicating columns `tof_tibble` use computing flowSOM clusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. som_xdim width grid used self-organizing map. total number clusters returned FlowSOM som_xdim * som_ydim, adjust value affect final number clusters. Defaults 10. som_ydim height grid used self-organizing map. total number clusters returned FlowSOM som_xdim * som_ydim, adjust value affect final number clusters. Defaults 10. som_distance_function distance function used self-organizing map calculations. Options \"euclidean\" (default), \"manhattan\", \"chebyshev\", \"cosine\". perform_metaclustering boolean value indicating metaclustering performed initial clustering result returned FlowSOM. Defaults TRUE. num_metaclusters integer indicating maximum number metaclusters returned metaclustering. Defaults 20. ... Optional additional parameters can passed BuildSOM function.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_flowsom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","text":"tibble one column named `.flowsom_cluster` `.flowsom_metacluster` depending value `perform_metaclustering`. column contain integer vector length `nrow(tof_tibble)` indicating id flowSOM cluster cell (.e. row) `tof_tibble` assigned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_flowsom.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","text":"additional details FlowSOM algorithm, see paper.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_flowsom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200)     )  tof_cluster_flowsom(tof_tibble = sim_data, cluster_cols = c(cd45, cd19)) #> # A tibble: 200 × 1 #>    .flowsom_metacluster #>    <chr>                #>  1 10                   #>  2 10                   #>  3 8                    #>  4 5                    #>  5 10                   #>  6 15                   #>  7 6                    #>  8 8                    #>  9 15                   #> 10 2                    #> # ℹ 190 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_grouped.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster (grouped) high-dimensional cytometry data. — tof_cluster_grouped","title":"Cluster (grouped) high-dimensional cytometry data. — tof_cluster_grouped","text":"function wrapper around tidytof's tof_cluster_* function family provides low-level API clustering grouped data frames. subroutine tof_cluster called directly users.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_grouped.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster (grouped) high-dimensional cytometry data. — tof_cluster_grouped","text":"","code":"tof_cluster_grouped(tof_tibble, group_cols, ..., augment = TRUE, method)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_grouped.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster (grouped) high-dimensional cytometry data. — tof_cluster_grouped","text":"tof_tibble `tof_tbl` `tibble`. group_cols unquoted column name indicating columns used group cells clustering. Clustering performed group independently. ... Additional arguments pass `tof_cluster_*` function family member corresponding chosen method. augment boolean value indicating output column-bind cluster ids cell new column `tof_tibble` (TRUE, default) single-column tibble including cluster ids returned (FALSE). method string indicating clustering methods used. Valid values include \"flowsom\", \"phenograph\", \"kmeans\", \"ddpr\", \"xshift\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_grouped.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cluster (grouped) high-dimensional cytometry data. — tof_cluster_grouped","text":"`tof_tbl` `tibble` augment = FALSE, single column encoding cluster ids cell `tof_tibble`. augment = TRUE, ncol(tof_tibble) + 1 columns: (unaltered) columns `tof_tibble` plus additional column encoding cluster ids.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_kmeans.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform k-means clustering on high-dimensional cytometry data. — tof_cluster_kmeans","title":"Perform k-means clustering on high-dimensional cytometry data. — tof_cluster_kmeans","text":"function performs k-means clustering high-dimensional cytometry data using user-specified selection input variables/high-dimensional cytometry measurements. mostly convenient wrapper around kmeans.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_kmeans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform k-means clustering on high-dimensional cytometry data. — tof_cluster_kmeans","text":"","code":"tof_cluster_kmeans(   tof_tibble,   cluster_cols = where(tof_is_numeric),   num_clusters = 20,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_kmeans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform k-means clustering on high-dimensional cytometry data. — tof_cluster_kmeans","text":"tof_tibble `tof_tibble`. cluster_cols Unquoted column names indicating columns `tof_tibble` use computing k-means clusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. num_clusters integer indicating maximum number clusters returned. Defaults 20. ... Optional additional arguments can passed kmeans.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_kmeans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform k-means clustering on high-dimensional cytometry data. — tof_cluster_kmeans","text":"tibble one column named `.kmeans_cluster`. column contain integer vector length `nrow(tof_tibble)` indicating id k-means cluster cell (.e. row) `tof_tibble` assigned.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_kmeans.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform k-means clustering on high-dimensional cytometry data. — tof_cluster_kmeans","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     ) tof_cluster_kmeans(tof_tibble = sim_data) #> # A tibble: 1,000 × 1 #>    .kmeans_cluster #>    <chr>           #>  1 8               #>  2 19              #>  3 16              #>  4 6               #>  5 6               #>  6 19              #>  7 15              #>  8 20              #>  9 10              #> 10 1               #> # ℹ 990 more rows tof_cluster_kmeans(tof_tibble = sim_data, cluster_cols = c(cd45, cd19)) #> # A tibble: 1,000 × 1 #>    .kmeans_cluster #>    <chr>           #>  1 7               #>  2 9               #>  3 19              #>  4 7               #>  5 16              #>  6 12              #>  7 13              #>  8 11              #>  9 13              #> 10 1               #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_phenograph.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","title":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","text":"function performs PhenoGraph clustering high-dimensional cytometry data using user-specified selection input variables/high-dimensional cytometry measurements.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_phenograph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","text":"","code":"tof_cluster_phenograph(   tof_tibble,   cluster_cols = where(tof_is_numeric),   num_neighbors = 30,   distance_function = c(\"euclidean\", \"cosine\"),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_phenograph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","text":"tof_tibble `tof_tbl` `tibble`. cluster_cols Unquoted column names indicating columns `tof_tibble` use computing PhenoGraph clusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. num_neighbors integer indicating number neighbors use constructing PhenoGraph's k-nearest-neighbor graph. Smaller values emphasize local graph structure; larger values emphasize global graph structure (add time computation). Defaults 30. distance_function string indicating distance function use nearest-neighbor calculation. Options include \"euclidean\" (default) \"cosine\" distances. ... Optional additional parameters can passed tof_find_knn.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_phenograph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","text":"tibble one column named `.phenograph_cluster`. column contain integer vector length `nrow(tof_tibble)` indicating id PhenoGraph cluster cell (.e. row) `tof_tibble` assigned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_phenograph.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","text":"additional details Phenograph algorithm, see paper.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_phenograph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     ) tof_cluster_phenograph(tof_tibble = sim_data) #> # A tibble: 1,000 × 1 #>    .phenograph_cluster #>    <chr>               #>  1 6                   #>  2 2                   #>  3 3                   #>  4 10                  #>  5 3                   #>  6 3                   #>  7 3                   #>  8 10                  #>  9 4                   #> 10 10                  #> # ℹ 990 more rows tof_cluster_phenograph(tof_tibble = sim_data, cluster_cols = c(cd45, cd19)) #> # A tibble: 1,000 × 1 #>    .phenograph_cluster #>    <chr>               #>  1 1                   #>  2 7                   #>  3 1                   #>  4 1                   #>  5 2                   #>  6 1                   #>  7 7                   #>  8 1                   #>  9 13                  #> 10 3                   #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster (ungrouped) high-dimensional cytometry data. — tof_cluster_tibble","title":"Cluster (ungrouped) high-dimensional cytometry data. — tof_cluster_tibble","text":"function wrapper around tidytof's tof_cluster_* function family provides low-level API clustering ungrouped data frames. subroutine tof_cluster called directly users.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster (ungrouped) high-dimensional cytometry data. — tof_cluster_tibble","text":"","code":"tof_cluster_tibble(tof_tibble, ..., augment = TRUE, method)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster (ungrouped) high-dimensional cytometry data. — tof_cluster_tibble","text":"tof_tibble `tof_tbl` `tibble`. ... Additional arguments pass `tof_cluster_*` function family member corresponding chosen method. augment boolean value indicating output column-bind cluster ids cell new column `tof_tibble` (TRUE, default) single-column tibble including cluster ids returned (FALSE). method string indicating clustering methods used. Valid values include \"flowsom\", \"phenograph\", \"kmeans\", \"ddpr\", \"xshift\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_tibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cluster (ungrouped) high-dimensional cytometry data. — tof_cluster_tibble","text":"`tof_tbl` `tibble` augment = FALSE, single column encoding cluster ids cell `tof_tibble`. augment = TRUE, ncol(tof_tibble) + 1 columns: (unaltered) columns `tof_tibble` plus additional column encoding cluster ids.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_compute_km_curve.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute a Kaplan-Meier curve from sample-level survival data — tof_compute_km_curve","title":"Compute a Kaplan-Meier curve from sample-level survival data — tof_compute_km_curve","text":"Compute Kaplan-Meier curve sample-level survival data","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_compute_km_curve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute a Kaplan-Meier curve from sample-level survival data — tof_compute_km_curve","text":"","code":"tof_compute_km_curve(survival_curves)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_compute_km_curve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute a Kaplan-Meier curve from sample-level survival data — tof_compute_km_curve","text":"survival_curves tibble Kaplan-Meier curve computed. row must represent observation must two columns named \"time_to_event\" \"event\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_compute_km_curve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute a Kaplan-Meier curve from sample-level survival data — tof_compute_km_curve","text":"tibble 3 columns: time_to_event, survival_probability, is_censored (whether event censored timepoint).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cosine_dist.html","id":null,"dir":"Reference","previous_headings":"","what":"A function for finding the cosine distance between each of the rows of a numeric\nmatrix and a numeric vector. — tof_cosine_dist","title":"A function for finding the cosine distance between each of the rows of a numeric\nmatrix and a numeric vector. — tof_cosine_dist","text":"function finding cosine distance rows numeric matrix numeric vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cosine_dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function for finding the cosine distance between each of the rows of a numeric\nmatrix and a numeric vector. — tof_cosine_dist","text":"","code":"tof_cosine_dist(matrix, vector)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cosine_dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function for finding the cosine distance between each of the rows of a numeric\nmatrix and a numeric vector. — tof_cosine_dist","text":"matrix numeric matrix. vector numeric vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cosine_dist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function for finding the cosine distance between each of the rows of a numeric\nmatrix and a numeric vector. — tof_cosine_dist","text":"numeric vector distances length `nrow(matrix)` ith entry represents cosine distance ith row `matrix` `vector`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cosine_dist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A function for finding the cosine distance between each of the rows of a numeric\nmatrix and a numeric vector. — tof_cosine_dist","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an elastic net hyperparameter search grid of a specified size — tof_create_grid","title":"Create an elastic net hyperparameter search grid of a specified size — tof_create_grid","text":"function creates regular hyperparameter search grid (form tibble) specifying search space two hyperparameters generalized linear model using glmnet package: regularization penalty term lasso/ridge regression mixture term.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an elastic net hyperparameter search grid of a specified size — tof_create_grid","text":"","code":"tof_create_grid(   penalty_values,   mixture_values,   num_penalty_values = 5,   num_mixture_values = 5 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an elastic net hyperparameter search grid of a specified size — tof_create_grid","text":"penalty_values numeric vector unique elastic net penalty values (\"lambda\") include hyperparameter grid. unspecified, regular grid `num_penalty_values` 10^(-10) 10^(0) used. mixture_values numeric vector elastic net mixture values (\"alpha\") include hyperparameter grid. unspecified, regular grid `num_mixture_values` 0 1 used. num_penalty_values Optional. `penalty_values` supplied, `num_penalty_values` (integer) can given specify many equally-spaced penalty values 10^(-10) 1 included hyperparameter grid. method used, regular grid always returned. Defaults 5. num_mixture_values Optional. `mixture_values` supplied, `num_mixture_values` (integer) can given specify many equally-spaced penalty values 0 (ridge regression) 1 (lasso) included hyperparameter grid. method used, regular grid always returned. Defaults 5.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an elastic net hyperparameter search grid of a specified size — tof_create_grid","text":"tibble two numeric columns: `penalty` `mixture`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_grid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an elastic net hyperparameter search grid of a specified size — tof_create_grid","text":"","code":"tof_create_grid() #> # A tibble: 25 × 2 #>         penalty mixture #>           <dbl>   <dbl> #>  1 0.0000000001    0    #>  2 0.0000000001    0.25 #>  3 0.0000000001    0.5  #>  4 0.0000000001    0.75 #>  5 0.0000000001    1    #>  6 0.0000000316    0    #>  7 0.0000000316    0.25 #>  8 0.0000000316    0.5  #>  9 0.0000000316    0.75 #> 10 0.0000000316    1    #> # ℹ 15 more rows  tof_create_grid(num_penalty_values = 10, num_mixture_values = 5) #> # A tibble: 50 × 2 #>          penalty mixture #>            <dbl>   <dbl> #>  1 0.0000000001     0    #>  2 0.0000000001     0.25 #>  3 0.0000000001     0.5  #>  4 0.0000000001     0.75 #>  5 0.0000000001     1    #>  6 0.00000000129    0    #>  7 0.00000000129    0.25 #>  8 0.00000000129    0.5  #>  9 0.00000000129    0.75 #> 10 0.00000000129    1    #> # ℹ 40 more rows  tof_create_grid(penalty_values = c(0.01, 0.1, 0.5)) #> # A tibble: 15 × 2 #>    penalty mixture #>      <dbl>   <dbl> #>  1    0.01    0    #>  2    0.01    0.25 #>  3    0.01    0.5  #>  4    0.01    0.75 #>  5    0.01    1    #>  6    0.1     0    #>  7    0.1     0.25 #>  8    0.1     0.5  #>  9    0.1     0.75 #> 10    0.1     1    #> 11    0.5     0    #> 12    0.5     0.25 #> 13    0.5     0.5  #> 14    0.5     0.75 #> 15    0.5     1"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_recipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a recipe for preprocessing sample-level cytometry data for an elastic net model — tof_create_recipe","title":"Create a recipe for preprocessing sample-level cytometry data for an elastic net model — tof_create_recipe","text":"Create recipe preprocessing sample-level cytometry data elastic net model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_recipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a recipe for preprocessing sample-level cytometry data for an elastic net model — tof_create_recipe","text":"","code":"tof_create_recipe(   feature_tibble,   predictor_cols,   outcome_cols,   standardize_predictors = TRUE,   remove_zv_predictors = FALSE,   impute_missing_predictors = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_recipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a recipe for preprocessing sample-level cytometry data for an elastic net model — tof_create_recipe","text":"feature_tibble tibble row represents sample- patient- level observation, produced tof_extract_features. predictor_cols Unquoted column names indicating columns data contained `feature_tibble` used predictors elastic net model. Supports tidyselect helpers. outcome_cols Unquoted column names indicating columns `feature_tibble` used outcome variables elastic net model. Supports tidyselect helpers. standardize_predictors logical value indicating numeric predictor columns standardized (centered scaled) model fitting. Defaults TRUE. remove_zv_predictors logical value indicating predictor columns near-zero variance removed model fitting using step_nzv. Defaults FALSE. impute_missing_predictors logical value indicating predictor columns missing values imputed using k-nearest neighbors model fitting (see step_impute_knn). Imputation performed using observation's 5 nearest-neighbors. Defaults FALSE.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_recipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a recipe for preprocessing sample-level cytometry data for an elastic net model — tof_create_recipe","text":"recipe object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample.html","id":null,"dir":"Reference","previous_headings":"","what":"Downsample high-dimensional cytometry data. — tof_downsample","title":"Downsample high-dimensional cytometry data. — tof_downsample","text":"function downsamples number cells `tof_tbl` using one three methods (randomly sampling constant number cells, randomly sampling proportion cells, performing density-dependent downsampling per algorithm Qiu et al., (2011)).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downsample high-dimensional cytometry data. — tof_downsample","text":"","code":"tof_downsample(   tof_tibble,   group_cols = NULL,   ...,   method = c(\"constant\", \"prop\", \"density\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downsample high-dimensional cytometry data. — tof_downsample","text":"tof_tibble `tof_tbl` `tibble`. group_cols Unquoted names columns `tof_tibble` used define groups within downsampling performed. Supports tidyselect helpers. Defaults `NULL` (grouping). ... Additional arguments pass `tof_downsample_*` function family member corresponding chosen method. method string indicating downsampling method use: \"constant\" (default), \"prop\", \"density\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downsample high-dimensional cytometry data. — tof_downsample","text":"downsampled `tof_tbl` number columns input `tof_tibble`, fewer rows. number rows result depend chosen downsampling method.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downsample high-dimensional cytometry data. — tof_downsample","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  # sample 200 cells from the input data tof_downsample(     tof_tibble = sim_data,     num_cells = 200L,     method = \"constant\" ) #> # A tibble: 200 × 5 #>      cd45    cd38   cd34     cd19 cluster_id #>     <dbl>   <dbl>  <dbl>    <dbl> <chr>      #>  1  0.489  0.556  -0.922 -1.27    j          #>  2  1.26  -0.478  -1.50  -0.151   c          #>  3  1.17  -0.381   0.822 -1.61    e          #>  4 -0.105 -0.0497  1.96   1.34    s          #>  5 -0.664  0.344   1.17  -0.146   h          #>  6 -1.04  -0.169   0.531  0.00258 p          #>  7 -0.411 -0.952  -1.77  -0.791   n          #>  8  1.33  -0.275  -1.16   0.528   d          #>  9 -0.553 -0.395  -1.47   0.171   h          #> 10  0.117  0.489  -1.32   1.47    y          #> # ℹ 190 more rows  # sample 10% of all cells from the input data tof_downsample(     tof_tibble = sim_data,     prop_cells = 0.1,     method = \"prop\" ) #> # A tibble: 100 × 5 #>      cd45    cd38   cd34    cd19 cluster_id #>     <dbl>   <dbl>  <dbl>   <dbl> <chr>      #>  1 -0.541 -1.73    0.940 -0.845  z          #>  2 -0.759  0.281  -0.203  0.396  k          #>  3  1.87  -0.297   0.725 -0.403  a          #>  4  1.63  -0.994  -0.504 -0.301  y          #>  5  0.111  2.62   -0.228 -1.61   v          #>  6  0.114  0.584  -1.24  -0.0323 v          #>  7 -1.81  -0.0831 -0.106  1.22   e          #>  8 -1.32   0.410   0.128 -0.611  w          #>  9 -0.132 -1.71    1.17  -0.834  g          #> 10  0.282  1.35    0.199 -0.658  t          #> # ℹ 90 more rows  # sample ~10% of cells from the input data using density dependence tof_downsample(     tof_tibble = sim_data,     target_prop_cells = 0.1,     method = \"density\" ) #> # A tibble: 97 × 5 #>      cd45   cd38      cd34   cd19 cluster_id #>     <dbl>  <dbl>     <dbl>  <dbl> <chr>      #>  1  0.431  0.822 -0.0118    0.711 y          #>  2  0.560 -0.383 -0.349     0.773 c          #>  3 -0.693 -0.179  0.991    -0.709 f          #>  4 -0.498  0.731 -0.000700  2.55  n          #>  5 -0.439 -0.954  0.133     0.457 e          #>  6  0.294  1.47   0.561    -0.109 g          #>  7  0.243 -0.482 -0.0116    1.23  j          #>  8 -1.28  -0.526  2.42     -1.28  z          #>  9 -1.28  -0.921 -1.35     -0.119 r          #> 10  0.273 -1.14   0.347    -1.08  h          #> # ℹ 87 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_constant.html","id":null,"dir":"Reference","previous_headings":"","what":"Downsample high-dimensional cytometry data by randomly selecting a constant number of cells per group. — tof_downsample_constant","title":"Downsample high-dimensional cytometry data by randomly selecting a constant number of cells per group. — tof_downsample_constant","text":"function downsamples number cells `tof_tbl` randomly selecting `num_cells` cells unique combination values `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_constant.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downsample high-dimensional cytometry data by randomly selecting a constant number of cells per group. — tof_downsample_constant","text":"","code":"tof_downsample_constant(tof_tibble, group_cols = NULL, num_cells)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_constant.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downsample high-dimensional cytometry data by randomly selecting a constant number of cells per group. — tof_downsample_constant","text":"tof_tibble `tof_tbl` `tibble`. group_cols Unquoted names columns `tof_tibble` used define groups `num_cells` downsampled. Supports tidyselect helpers. Defaults `NULL` (grouping). num_cells integer number cells sampled group defined `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_constant.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downsample high-dimensional cytometry data by randomly selecting a constant number of cells per group. — tof_downsample_constant","text":"`tof_tbl` number columns input `tof_tibble`, fewer rows. Specifically, number rows `num_cells` multiplied number unique combinations values `group_cols`. group fewer `num_cells` number cells, cells group kept.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_constant.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downsample high-dimensional cytometry data by randomly selecting a constant number of cells per group. — tof_downsample_constant","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  # sample 500 cells from the input data tof_downsample_constant(     tof_tibble = sim_data,     num_cells = 500L ) #> # A tibble: 500 × 5 #>       cd45    cd38    cd34   cd19 cluster_id #>      <dbl>   <dbl>   <dbl>  <dbl> <chr>      #>  1 -0.193   0.593   0.341   0.211 w          #>  2 -0.835   0.0424  0.732   0.192 q          #>  3  0.0328  1.32    0.0969  0.381 g          #>  4 -0.292   1.20    2.06   -0.790 j          #>  5 -1.93   -1.49   -0.912  -2.03  x          #>  6  0.343  -1.15   -0.0872 -0.366 z          #>  7 -0.875   0.202  -0.723  -2.01  d          #>  8  1.59   -1.06   -0.443  -0.773 a          #>  9 -0.302   2.03    1.30    1.42  a          #> 10  0.608   0.635  -0.772  -1.61  m          #> # ℹ 490 more rows  # sample 20 cells per cluster from the input data tof_downsample_constant(     tof_tibble = sim_data,     group_cols = cluster_id,     num_cells = 20L ) #> # A tibble: 520 × 5 #>       cd45    cd38    cd34   cd19 cluster_id #>      <dbl>   <dbl>   <dbl>  <dbl> <chr>      #>  1 -0.835   0.0424  0.732   0.192 q          #>  2  0.0328  1.32    0.0969  0.381 g          #>  3 -2.12   -0.734   0.611  -0.449 u          #>  4 -1.93   -1.49   -0.912  -2.03  x          #>  5  0.808   0.267   0.0300 -1.61  u          #>  6 -0.302   2.03    1.30    1.42  a          #>  7  0.972   0.171   0.797   0.583 d          #>  8  1.18    0.161   0.267   1.42  r          #>  9  0.856   0.421   0.239   1.62  r          #> 10 -0.0120 -1.03   -0.0682  0.587 k          #> # ℹ 510 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_density","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_density","text":"function downsamples number cells `tof_tbl` using density-dependent downsampling algorithm described Qiu et al., (2011).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_density","text":"","code":"tof_downsample_density(   tof_tibble,   group_cols = NULL,   density_cols = where(tof_is_numeric),   target_num_cells,   target_prop_cells,   target_percentile = 0.03,   outlier_percentile = 0.01,   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\"),   density_estimation_method = c(\"mean_distance\", \"sum_distance\", \"spade\"),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_density","text":"tof_tibble `tof_tbl` `tibble`. group_cols Unquoted names columns `tof_tibble` used define groups within downsampling performed. Supports tidyselect helpers. Defaults `NULL` (grouping). density_cols Unquoted names columns `tof_tibble` use density estimation cell. Defaults numeric columns `tof_tibble`. target_num_cells approximate constant number cells (0 1) sampled group defined `group_cols`. Slightly fewer cells may returned due density calculation performed. target_prop_cells approximate proportion cells (0 1) sampled group defined `group_cols`. Slightly fewer cells may returned due density calculation performed. Ignored `target_num_cells` specified. target_percentile local density percentile (.e. value 0 1) downsampling procedure adjust cells. short, algorithm continue remove cells input `tof_tibble` local densities remaining cells equal `target_percentile`. Lower values result cells removed. See Qiu et al., (2011) details. Defaults 0.1 (10th percentile local densities). Ignored either `target_num_cells` `target_prop_cells` specified. outlier_percentile local density percentile (.e. value 0 1) cells considered outliers (discarded). Cells local density `outlier_percentile` never selected downsampling procedure. Defaults 0.01 (cells 1st local density percentile removed). distance_function string indicating distance function use cell--cell distance calculations. Options include \"euclidean\" (default) \"cosine\" distances. density_estimation_method string indicating algorithm used calculate local density estimate cell. Options include k-nearest neighbor density estimation using mean distance cell's k-nearest neighbors (\"mean_distance\"; default), k-nearest neighbor density estimation using summed distance cell's k nearest neighbors (\"sum_distance\") counting number neighboring cells within spherical radius around cell described Qiu et al., 2011  (\"spade\"). \"spade\" often produces best results, slower knn-density estimation methods. ... Optional additional arguments pass tof_knn_density tof_spade_density.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_density","text":"`tof_tbl` number columns input `tof_tibble`, fewer rows. number rows depend chosen value `target_percentile`, fewer cells selected lower values `target_percentile`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_density","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  tof_downsample_density(     tof_tibble = sim_data,     density_cols = c(cd45, cd34, cd38),     target_prop_cells = 0.5,     density_estimation_method = \"spade\" ) #> # A tibble: 494 × 4 #>      cd45   cd38   cd34    cd19 #>     <dbl>  <dbl>  <dbl>   <dbl> #>  1  2.30  -0.117  0.452  0.169  #>  2  0.849 -0.468 -1.23  -1.36   #>  3 -0.645 -0.783  0.390 -0.957  #>  4  0.755 -0.255  0.990 -0.781  #>  5 -1.61  -2.06  -1.20   1.29   #>  6 -1.19  -1.02   0.711 -0.757  #>  7 -1.11  -1.09   0.883 -0.0390 #>  8  0.756 -0.257  0.336  0.0263 #>  9 -1.13  -0.717 -0.820 -0.215  #> 10 -0.459  2.63  -1.40   2.06   #> # ℹ 484 more rows  tof_downsample_density(     tof_tibble = sim_data,     density_cols = c(cd45, cd34, cd38),     target_num_cells = 200L,     density_estimation_method = \"spade\" ) #> # A tibble: 208 × 4 #>       cd45    cd38   cd34    cd19 #>      <dbl>   <dbl>  <dbl>   <dbl> #>  1  2.30   -0.117   0.452  0.169  #>  2  0.849  -0.468  -1.23  -1.36   #>  3 -0.772  -0.0932 -0.160 -0.725  #>  4  0.756  -0.257   0.336  0.0263 #>  5 -0.459   2.63   -1.40   2.06   #>  6 -0.612   1.19   -0.590  1.69   #>  7 -1.82    0.654  -1.08  -1.64   #>  8  1.05   -0.490  -0.408 -0.828  #>  9 -1.33    1.57    1.42   0.651  #> 10  0.0380  0.105   0.287 -1.22   #> # ℹ 198 more rows  tof_downsample_density(     tof_tibble = sim_data,     density_cols = c(cd45, cd34, cd38),     target_num_cells = 200L,     density_estimation_method = \"mean_distance\" ) #> # A tibble: 189 × 4 #>      cd45   cd38    cd34   cd19 #>     <dbl>  <dbl>   <dbl>  <dbl> #>  1  0.755 -0.255  0.990  -0.781 #>  2  1.52   0.469  0.837  -1.32  #>  3 -1.79   0.793 -1.16   -0.858 #>  4  1.70   1.13   0.211  -1.50  #>  5 -0.606  1.21  -0.520  -0.812 #>  6 -0.612  1.19  -0.590   1.69  #>  7  0.882 -0.443  0.0380  0.380 #>  8 -1.82   0.654 -1.08   -1.64  #>  9  2.58  -1.16  -1.09   -1.01  #> 10 -0.865  0.770 -0.0151  0.306 #> # ℹ 179 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_prop.html","id":null,"dir":"Reference","previous_headings":"","what":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_prop","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_prop","text":"function downsamples number cells `tof_tbl` randomly selecting `prop_cells` proportion total number cells unique combination values `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_prop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_prop","text":"","code":"tof_downsample_prop(tof_tibble, group_cols = NULL, prop_cells)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_prop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_prop","text":"tof_tibble `tof_tbl` `tibble`. group_cols Unquoted names columns `tof_tibble` used define groups `prop_cells` downsampled. Supports tidyselect helpers. Defaults `NULL` (grouping). prop_cells proportion cells (0 1) sampled group defined `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_prop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_prop","text":"`tof_tbl` number columns input `tof_tibble`, fewer rows. Specifically, number rows `prop_cells` times number rows input `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_prop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_prop","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  # sample 10% of all cells from the input data tof_downsample_prop(     tof_tibble = sim_data,     prop_cells = 0.1 ) #> # A tibble: 100 × 5 #>       cd45    cd38   cd34    cd19 cluster_id #>      <dbl>   <dbl>  <dbl>   <dbl> <chr>      #>  1  2.20    0.0964 -0.225 -0.493  q          #>  2  0.902  -0.592   1.05   0.0945 c          #>  3  0.453  -0.901   1.69   0.199  c          #>  4  1.50    1.03   -0.381  0.512  w          #>  5  1.65   -0.981  -0.491 -0.102  a          #>  6  0.220   0.412  -1.39  -0.602  u          #>  7  0.0567  0.0226 -2.14  -0.686  j          #>  8 -2.07   -0.144   0.114  0.447  a          #>  9 -0.764  -1.04    1.04  -0.541  d          #> 10 -0.443  -1.80    0.565 -0.724  u          #> # ℹ 90 more rows  # sample 10% of all cells from each cluster in the input data tof_downsample_prop(     tof_tibble = sim_data,     group_cols = cluster_id,     prop_cells = 0.1 ) #> # A tibble: 87 × 5 #>       cd45     cd38    cd34   cd19 cluster_id #>      <dbl>    <dbl>   <dbl>  <dbl> <chr>      #>  1  0.970   0.597    1.87    1.30  a          #>  2  1.16    0.482    0.849  -0.463 a          #>  3  2.22   -2.16    -0.0835 -0.386 a          #>  4 -0.505  -0.298   -1.35    0.969 b          #>  5 -0.259  -0.821   -1.46   -0.883 b          #>  6  0.579   1.38    -1.50    0.364 b          #>  7 -0.0326  0.683    0.658  -1.34  c          #>  8  0.0540 -1.04    -0.626   2.23  c          #>  9  0.459   0.0338   0.758  -2.44  c          #> 10  0.477  -0.00942  0.533   0.483 d          #> # ℹ 77 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_estimate_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate the local densities for all cells in a high-dimensional cytometry dataset. — tof_estimate_density","title":"Estimate the local densities for all cells in a high-dimensional cytometry dataset. — tof_estimate_density","text":"function wrapper around tidytof's tof_*_density() function family. performs local density estimation high-dimensional cytometry data using user-specified method (3 choices) method's corresponding input parameters.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_estimate_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate the local densities for all cells in a high-dimensional cytometry dataset. — tof_estimate_density","text":"","code":"tof_estimate_density(   tof_tibble,   distance_cols = where(tof_is_numeric),   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\"),   normalize = TRUE,   ...,   augment = TRUE,   method = c(\"mean_distance\", \"sum_distance\", \"spade\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_estimate_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate the local densities for all cells in a high-dimensional cytometry dataset. — tof_estimate_density","text":"tof_tibble `tof_tbl` `tibble`. distance_cols Unquoted names columns `tof_tibble` use calculating cell--cell distances local density estimation cell. Defaults numeric columns `tof_tibble`. distance_function string indicating distance function use calculating cell--cell distances local density estimation. Options include \"euclidean\" (default) \"cosine\". normalize boolean value indicating vector local density estimates normalized values 0 1. Defaults TRUE. ... Additional arguments pass `tof_*_density()` function family member corresponding chosen `method`. augment boolean value indicating output column-bind local density estimates cell new column `tof_tibble` (TRUE; default) single-column tibble including local density estimates returned (FALSE). method string indicating local density estimation method used. Valid values include \"mean_distance\", \"sum_distance\", \"spade\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_estimate_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate the local densities for all cells in a high-dimensional cytometry dataset. — tof_estimate_density","text":"`tof_tbl` `tibble` augment = FALSE, single column encoding local density estimates cell `tof_tibble`. augment = TRUE, ncol(tof_tibble) + 1 columns: (unaltered) columns `tof_tibble` plus additional column encoding local density estimates.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_estimate_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate the local densities for all cells in a high-dimensional cytometry dataset. — tof_estimate_density","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  # perform the density estimation tof_estimate_density(tof_tibble = sim_data, method = \"spade\") #> # A tibble: 1,000 × 5 #>       cd45   cd38   cd34    cd19 .spade_density #>      <dbl>  <dbl>  <dbl>   <dbl>          <dbl> #>  1 -2.82    1.00   0.133 -0.0564              1 #>  2  0.695  -1.33   0.591 -0.518               1 #>  3  0.0889  0.320 -0.328 -2.13                1 #>  4  1.69    0.695  0.847  1.71                1 #>  5  0.435   1.39  -0.921 -1.57                1 #>  6 -0.894   0.347 -0.958  0.728               1 #>  7 -0.420   1.10   0.227  1.38                1 #>  8 -0.783   0.340 -1.32  -0.982               1 #>  9  0.347   0.490 -1.88  -0.737               1 #> 10  1.12   -1.95   1.12  -0.583               1 #> # ℹ 990 more rows  # perform the density estimation with a smaller search radius around # each cell tof_estimate_density(     tof_tibble = sim_data,     alpha_multiplier = 2,     method = \"spade\" ) #> # A tibble: 1,000 × 5 #>       cd45   cd38   cd34    cd19 .spade_density #>      <dbl>  <dbl>  <dbl>   <dbl>          <dbl> #>  1 -2.82    1.00   0.133 -0.0564            0.1 #>  2  0.695  -1.33   0.591 -0.518             1   #>  3  0.0889  0.320 -0.328 -2.13              0.5 #>  4  1.69    0.695  0.847  1.71              0.2 #>  5  0.435   1.39  -0.921 -1.57              0.3 #>  6 -0.894   0.347 -0.958  0.728             1   #>  7 -0.420   1.10   0.227  1.38              0.9 #>  8 -0.783   0.340 -1.32  -0.982             1   #>  9  0.347   0.490 -1.88  -0.737             0.6 #> 10  1.12   -1.95   1.12  -0.583             0.1 #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_central_tendency.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the central tendencies of CyTOF markers in each cluster in a `tof_tibble`. — tof_extract_central_tendency","title":"Extract the central tendencies of CyTOF markers in each cluster in a `tof_tibble`. — tof_extract_central_tendency","text":"feature extraction function calculates user-specified measurement central tendency (.e. median mode) cells cluster `tof_tibble` across user-specified selection CyTOF markers. calculations can done either overall (across cells dataset) breaking cells subgroups using `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_central_tendency.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the central tendencies of CyTOF markers in each cluster in a `tof_tibble`. — tof_extract_central_tendency","text":"","code":"tof_extract_central_tendency(   tof_tibble,   cluster_col,   group_cols = NULL,   marker_cols = where(tof_is_numeric),   stimulation_col = NULL,   central_tendency_function = stats::median,   format = c(\"wide\", \"long\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_central_tendency.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the central tendencies of CyTOF markers in each cluster in a `tof_tibble`. — tof_extract_central_tendency","text":"tof_tibble `tof_tibble` `tibble` row represents single cell column represents CyTOF measurement piece metadata (.e. cluster id, patient id, etc.) cell. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. group_cols Unquoted column names representing columns `tof_tibble` used break rows `tof_tibble` subgroups feature extraction calculation. Defaults NULL (.e. performing extraction without subgroups). marker_cols Unquoted column names representing columns `tof_tibble` (.e. CyTOF protein measurements) included feature extraction calculation. Defaults numeric (integer double) columns. Supports tidyselection. stimulation_col Optional. unquoted column name indicates column `tof_tibble` contains information stimulation condition cell exposed data acquisition. provided, feature extraction broken subgroups stimulation condition (features stimulation condition included features wide format). central_tendency_function function used calculate measurement central tendency cluster (used dependent variable linear model). Defaults median. format string indicating data returned \"wide\" format (default; cluster feature given column) \"long\" format (cluster feature provided row).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_central_tendency.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the central tendencies of CyTOF markers in each cluster in a `tof_tibble`. — tof_extract_central_tendency","text":"tibble. format == \"wide\", tibble 1 row combination grouping variables provided `group_cols` one column grouping variable, one column extracted feature (central tendency given marker given cluster). names column containing cluster features obtained using following pattern: \"{marker_id}@{cluster_id}_ct\". format == \"long\", tibble 1 row combination grouping variables `group_cols`, cluster id (.e. level) `cluster_col`, marker `marker_cols`. one column grouping variable, one column cluster ids, one column CyTOF channel names, one column (`value`) containing features.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_central_tendency.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract the central tendencies of CyTOF markers in each cluster in a `tof_tibble`. — tof_extract_central_tendency","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         patient = sample(c(\"kirby\", \"mario\"), size = 1000, replace = TRUE),         stim = sample(c(\"basal\", \"stim\"), size = 1000, replace = TRUE)     )  # extract proportion of each cluster in each patient in wide format tof_extract_central_tendency(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient ) #> # A tibble: 2 × 105 #>   patient `cd45@a_ct` `cd38@a_ct` `cd34@a_ct` `cd19@a_ct` `cd45@b_ct` #>   <chr>         <dbl>       <dbl>       <dbl>       <dbl>       <dbl> #> 1 kirby        -0.700      0.391      -0.171      -0.481        0.332 #> 2 mario         0.113      0.0664     -0.0706     -0.0268      -0.194 #> # ℹ 99 more variables: `cd38@b_ct` <dbl>, `cd34@b_ct` <dbl>, `cd19@b_ct` <dbl>, #> #   `cd45@c_ct` <dbl>, `cd38@c_ct` <dbl>, `cd34@c_ct` <dbl>, `cd19@c_ct` <dbl>, #> #   `cd45@d_ct` <dbl>, `cd38@d_ct` <dbl>, `cd34@d_ct` <dbl>, `cd19@d_ct` <dbl>, #> #   `cd45@e_ct` <dbl>, `cd38@e_ct` <dbl>, `cd34@e_ct` <dbl>, `cd19@e_ct` <dbl>, #> #   `cd45@f_ct` <dbl>, `cd38@f_ct` <dbl>, `cd34@f_ct` <dbl>, `cd19@f_ct` <dbl>, #> #   `cd45@g_ct` <dbl>, `cd38@g_ct` <dbl>, `cd34@g_ct` <dbl>, `cd19@g_ct` <dbl>, #> #   `cd45@h_ct` <dbl>, `cd38@h_ct` <dbl>, `cd34@h_ct` <dbl>, …  # extract proportion of each cluster in each patient in long format tof_extract_central_tendency(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     format = \"long\" ) #> # A tibble: 208 × 4 #>    patient cluster_id channel  values #>    <chr>   <chr>      <chr>     <dbl> #>  1 kirby   a          cd45    -0.700  #>  2 kirby   a          cd38     0.391  #>  3 kirby   a          cd34    -0.171  #>  4 kirby   a          cd19    -0.481  #>  5 kirby   b          cd45     0.332  #>  6 kirby   b          cd38     0.0532 #>  7 kirby   b          cd34    -0.233  #>  8 kirby   b          cd19     0.304  #>  9 kirby   c          cd45    -0.0569 #> 10 kirby   c          cd38    -0.413  #> # ℹ 198 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_emd.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract aggregated features from CyTOF data using earth-mover's distance (EMD) — tof_extract_emd","title":"Extract aggregated features from CyTOF data using earth-mover's distance (EMD) — tof_extract_emd","text":"feature extraction function calculates earth-mover's distance (EMD) stimulated unstimulated (\"basal\") experimental conditions samples CyTOF experiment. calculation performed across user-specified selection CyTOF antigens can performed either overall (across cells dataset) breaking cells subgroups using `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_emd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract aggregated features from CyTOF data using earth-mover's distance (EMD) — tof_extract_emd","text":"","code":"tof_extract_emd(   tof_tibble,   cluster_col,   group_cols = NULL,   marker_cols = where(tof_is_numeric),   emd_col,   reference_level,   format = c(\"wide\", \"long\"),   num_bins = 100 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_emd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract aggregated features from CyTOF data using earth-mover's distance (EMD) — tof_extract_emd","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. group_cols Unquoted column names representing columns `tof_tibble` used break rows `tof_tibble` subgroups feature extraction calculation. Defaults NULL (.e. performing extraction without subgroups). marker_cols Unquoted column names representing columns `tof_tibble` (.e. CyTOF protein measurements) included earth-mover's distance calculation. Defaults numeric (integer double) columns. Supports tidyselect helpers. emd_col unquoted column name indicates column `tof_tibble` used group cells different distributions compared one another EMD calculation. example, want compare marker expression distributions across stimulation conditions, `emd_col` column `tof_tibble` containing information stimulation condition cell exposed data acquisition. provided, feature extraction broken subgroups stimulation condition (features stimulation condition included features wide format). reference_level string indicating value `emd_col` corresponds \"reference\" value values `emd_col` compared. example, `emd_col` represents stimulation condition cell, reference_level might take value \"basal\" \"unstimulated\" want compare stimulation basal state. format string indicating data returned \"wide\" format (default; cluster feature given column) \"long\" format (cluster feature provided row). num_bins Optional. number bins use dividing one-dimensional marker distributions discrete segments EMD calculation. Defaults 100.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_emd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract aggregated features from CyTOF data using earth-mover's distance (EMD) — tof_extract_emd","text":"tibble. format == \"wide\", tibble 1 row combination grouping variables provided `group_cols` one column grouping variable, one column extracted feature (EMD distribution given marker given cluster basal condition distribution marker given cluster stimulated condition). names column containing cluster features obtained using following pattern: \"{stimulation_id}_{marker_id}@{cluster_id}_emd\". format == \"long\", tibble 1 row combination grouping variables `group_cols`, cluster id (.e. level) `cluster_col`, marker `marker_cols`. one column grouping variable, one column cluster ids, one column CyTOF channel names, one column (`value`) containing features.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_emd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract aggregated features from CyTOF data using earth-mover's distance (EMD) — tof_extract_emd","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         patient = sample(c(\"kirby\", \"mario\"), size = 1000, replace = TRUE),         stim = sample(c(\"basal\", \"stim\"), size = 1000, replace = TRUE)     )  # extract emd of each cluster in each patient (using the \"basal\" stim # condition as a reference) in wide format tof_extract_emd(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     emd_col = stim,     reference_level = \"basal\" ) #> # A tibble: 2 × 105 #>   patient `stim_cd45@j_emd` `stim_cd38@j_emd` `stim_cd34@j_emd` #>   <chr>               <dbl>             <dbl>             <dbl> #> 1 kirby                  NA                NA                NA #> 2 mario                  NA                NA                NA #> # ℹ 101 more variables: `stim_cd19@j_emd` <dbl>, `stim_cd45@k_emd` <dbl>, #> #   `stim_cd38@k_emd` <dbl>, `stim_cd34@k_emd` <dbl>, `stim_cd19@k_emd` <dbl>, #> #   `stim_cd45@c_emd` <dbl>, `stim_cd38@c_emd` <dbl>, `stim_cd34@c_emd` <dbl>, #> #   `stim_cd19@c_emd` <dbl>, `stim_cd45@v_emd` <dbl>, `stim_cd38@v_emd` <dbl>, #> #   `stim_cd34@v_emd` <dbl>, `stim_cd19@v_emd` <dbl>, `stim_cd45@u_emd` <dbl>, #> #   `stim_cd38@u_emd` <dbl>, `stim_cd34@u_emd` <dbl>, `stim_cd19@u_emd` <dbl>, #> #   `stim_cd45@r_emd` <dbl>, `stim_cd38@r_emd` <dbl>, …  # extract emd of each cluster (using the \"basal\" stim # condition as a reference) in long format tof_extract_emd(     tof_tibble = sim_data,     cluster_col = cluster_id,     emd_col = stim,     reference_level = \"basal\",     format = \"long\" ) #> # A tibble: 104 × 4 #>    cluster_id marker stimulation   emd #>    <chr>      <chr>  <chr>       <dbl> #>  1 j          cd45   stim         9.84 #>  2 j          cd38   stim         8.25 #>  3 j          cd34   stim         6.97 #>  4 j          cd19   stim         5.22 #>  5 k          cd45   stim         4.19 #>  6 k          cd38   stim         5.40 #>  7 k          cd34   stim         6.18 #>  8 k          cd19   stim         5.19 #>  9 c          cd45   stim         9.74 #> 10 c          cd38   stim         6.28 #> # ℹ 94 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","title":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","text":"function wraps members `tof_extract_*` function family extract sample-level features lineage (.e. cell surface antigen) CyTOF channels assumed stable across stimulation conditions signaling CyTOF channels assumed change across stimulation conditions. Features extracted cluster within independent sample (defined `group_cols` argument).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","text":"","code":"tof_extract_features(   tof_tibble,   cluster_col,   group_cols = NULL,   stimulation_col = NULL,   lineage_cols,   signaling_cols,   central_tendency_function = stats::median,   signaling_method = c(\"threshold\", \"emd\", \"jsd\", \"central tendency\"),   basal_level = NULL,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. group_cols Unquoted column names representing columns `tof_tibble` used break rows `tof_tibble` subgroups feature extraction calculation. Defaults NULL (.e. performing extraction without subgroups). stimulation_col Optional. unquoted column name indicates column `tof_tibble` contains information stimulation condition cell exposed data acquisition. provided, feature extraction broken subgroups stimulation condition (features stimulation condition included features wide format). lineage_cols Unquoted column names representing columns `tof_tibble` (.e. CyTOF protein measurements) considered lineage markers feature extraction calculation. Supports tidyselect helpers. signaling_cols Unquoted column names representing columns `tof_tibble` (.e. CyTOF protein measurements) considered signaling markers feature extraction calculation. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster (used dependent variable linear model). Defaults median. signaling_method string indicating feature extraction method use signaling markers (identified `signaling_cols` argument). Options \"threshold\" (default), \"emd\", \"jsd\", \"central tendency\". basal_level string indicating value `stimulation_col` corresponds basal stimulation condition (.e. \"basal\" \"unstimulated\"). ... Optional additional arguments passed tof_extract_threshold, tof_extract_emd, tof_extract_jsd.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","text":"tibble. output tibble 1 row combination grouping variables provided `group_cols` (thus, row represent considered single \"sample\" based grouping provided). one column grouping variable one column extracted feature (\"wide\" format).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_features.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","text":"Lineage channels specified using `lineage_cols` argument, extracted features measurements central tendency (computed user-supplied `central_tendency_function`). Signaling channels specified using `signaling_cols` argument, extracted features depend user's chosen `signaling_method`. `signaling method` == \"threshold\" (default), tof_extract_threshold used calculate proportion cells cluster signaling marker expression `threshold` stimulation condition. `signaling_method` == \"emd\" `signaling_method` == \"jsd\", tof_extract_emd tof_extract_jsd used calculate earth-mover's distance (EMD) Jensen-Shannon Distance (JSD), respectively, basal condition stimulated conditions cluster sample. Finally, none options chosen, tof_extract_central_tendency used calculate measurements central tendency. addition, tof_extract_proportion used extract proportion cells cluster computed sample. calculations can performed either overall (across cells dataset) breaking cells subgroups using `group_cols`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_features.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         patient = sample(c(\"kirby\", \"mario\"), size = 1000, replace = TRUE),         stim = sample(c(\"basal\", \"stim\"), size = 1000, replace = TRUE)     )  # extract the following features from each cluster in each # patient/stimulation: #    - proportion of each cluster #    - central tendency (median) of cd45 and cd38 in each cluster #    - the proportion of cells in each cluster with cd34 expression over #      the default threshold (asinh(10 / 5)) tof_extract_features(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     lineage_cols = c(cd45, cd38),     signaling_cols = cd34,     stimulation_col = stim ) #> # A tibble: 2 × 131 #>   patient `prop@a` `prop@b` `prop@c` `prop@d` `prop@e` `prop@f` `prop@g` #>   <chr>      <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl> #> 1 kirby     0.0296   0.0415   0.0534   0.0593   0.0296   0.0296   0.0277 #> 2 mario     0.0344   0.0364   0.0466   0.0202   0.0445   0.0324   0.0364 #> # ℹ 123 more variables: `prop@h` <dbl>, `prop@i` <dbl>, `prop@j` <dbl>, #> #   `prop@k` <dbl>, `prop@l` <dbl>, `prop@m` <dbl>, `prop@n` <dbl>, #> #   `prop@o` <dbl>, `prop@p` <dbl>, `prop@q` <dbl>, `prop@r` <dbl>, #> #   `prop@s` <dbl>, `prop@t` <dbl>, `prop@u` <dbl>, `prop@v` <dbl>, #> #   `prop@w` <dbl>, `prop@x` <dbl>, `prop@y` <dbl>, `prop@z` <dbl>, #> #   `cd45@a_ct` <dbl>, `cd38@a_ct` <dbl>, `cd45@b_ct` <dbl>, `cd38@b_ct` <dbl>, #> #   `cd45@c_ct` <dbl>, `cd38@c_ct` <dbl>, `cd45@d_ct` <dbl>, …  # extract the following features from each cluster in each # patient/stimulation: #    - proportion of each cluster #    - central tendency (mean) of cd45 and cd38 in each cluster #    - the earth mover's distance between each cluster's cd34 histogram in #      the \"basal\" and \"stim\" conditions tof_extract_features(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     lineage_cols = c(cd45, cd38),     signaling_cols = cd34,     central_tendency_function = mean,     stimulation_col = stim,     signaling_method = \"emd\",     basal_level = \"basal\" ) #> # A tibble: 2 × 131 #>   patient `prop@a` `prop@b` `prop@c` `prop@d` `prop@e` `prop@f` `prop@g` #>   <chr>      <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl> #> 1 kirby     0.0296   0.0415   0.0534   0.0593   0.0296   0.0296   0.0277 #> 2 mario     0.0344   0.0364   0.0466   0.0202   0.0445   0.0324   0.0364 #> # ℹ 123 more variables: `prop@h` <dbl>, `prop@i` <dbl>, `prop@j` <dbl>, #> #   `prop@k` <dbl>, `prop@l` <dbl>, `prop@m` <dbl>, `prop@n` <dbl>, #> #   `prop@o` <dbl>, `prop@p` <dbl>, `prop@q` <dbl>, `prop@r` <dbl>, #> #   `prop@s` <dbl>, `prop@t` <dbl>, `prop@u` <dbl>, `prop@v` <dbl>, #> #   `prop@w` <dbl>, `prop@x` <dbl>, `prop@y` <dbl>, `prop@z` <dbl>, #> #   `cd45@a_ct` <dbl>, `cd38@a_ct` <dbl>, `cd45@b_ct` <dbl>, `cd38@b_ct` <dbl>, #> #   `cd45@c_ct` <dbl>, `cd38@c_ct` <dbl>, `cd45@d_ct` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_jsd.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract aggregated features from CyTOF data using the Jensen-Shannon Distance (JSD) — tof_extract_jsd","title":"Extract aggregated features from CyTOF data using the Jensen-Shannon Distance (JSD) — tof_extract_jsd","text":"feature extraction function calculates Jensen-Shannon Distance (JSD) stimulated unstimulated (\"basal\") experimental conditions samples CyTOF experiment. calculation performed across user-specified selection CyTOF antigens can performed either overall (across cells dataset) breaking cells subgroups using `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_jsd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract aggregated features from CyTOF data using the Jensen-Shannon Distance (JSD) — tof_extract_jsd","text":"","code":"tof_extract_jsd(   tof_tibble,   cluster_col,   group_cols = NULL,   marker_cols = where(tof_is_numeric),   jsd_col,   reference_level,   format = c(\"wide\", \"long\"),   num_bins = 100 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_jsd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract aggregated features from CyTOF data using the Jensen-Shannon Distance (JSD) — tof_extract_jsd","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. group_cols Unquoted column names representing columns `tof_tibble` used break rows `tof_tibble` subgroups feature extraction calculation. Defaults NULL (.e. performing extraction without subgroups). marker_cols Unquoted column names representing columns `tof_tibble` (.e. CyTOF protein measurements) included feature extraction calculation. Defaults numeric (integer double) columns. Supports tidyselect helpers. jsd_col unquoted column name indicates column `tof_tibble` contains information stimulation condition cell exposed data acquisition. provided, feature extraction broken subgroups stimulation condition (features stimulation condition included features wide format). reference_level string indicating value `jsd_col` corresponds basal stimulation condition (.e. \"basal\" \"unstimulated\"). format string indicating data returned \"wide\" format (default; cluster feature given column) \"long\" format (cluster feature provided row). num_bins Optional. number bins use dividing one-dimensional marker distributions discrete segments JSD calculation. Defaults 100.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_jsd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract aggregated features from CyTOF data using the Jensen-Shannon Distance (JSD) — tof_extract_jsd","text":"tibble. format == \"wide\", tibble 1 row combination grouping variables provided `group_cols` one column grouping variable, one column extracted feature (JSD distribution given marker given cluster basal condition distribution marker cluster stimulated condition). names column containing cluster features obtained using following pattern: \"{stimulation_id}_{marker_id}@{cluster_id}_jsd\". format == \"long\", tibble 1 row combination grouping variables `group_cols`, cluster id (.e. level) `cluster_col`, marker `marker_cols`. one column grouping variable, one column cluster ids, one column CyTOF channel names, one column (`value`) containing features.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_jsd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract aggregated features from CyTOF data using the Jensen-Shannon Distance (JSD) — tof_extract_jsd","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         patient = sample(c(\"kirby\", \"mario\"), size = 1000, replace = TRUE),         stim = sample(c(\"basal\", \"stim\"), size = 1000, replace = TRUE)     )  # extract jsd of each cluster in each patient (using the \"basal\" stim # condition as a reference) in wide format tof_extract_jsd(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     jsd_col = stim,     reference_level = \"basal\" ) #> # A tibble: 2 × 105 #>   patient `stim_cd45@l_jsd` `stim_cd38@l_jsd` `stim_cd34@l_jsd` #>   <chr>               <dbl>             <dbl>             <dbl> #> 1 kirby              NA                    NA                NA #> 2 mario               0.909                 1                 1 #> # ℹ 101 more variables: `stim_cd19@l_jsd` <dbl>, `stim_cd45@i_jsd` <dbl>, #> #   `stim_cd38@i_jsd` <dbl>, `stim_cd34@i_jsd` <dbl>, `stim_cd19@i_jsd` <dbl>, #> #   `stim_cd45@m_jsd` <dbl>, `stim_cd38@m_jsd` <dbl>, `stim_cd34@m_jsd` <dbl>, #> #   `stim_cd19@m_jsd` <dbl>, `stim_cd45@v_jsd` <dbl>, `stim_cd38@v_jsd` <dbl>, #> #   `stim_cd34@v_jsd` <dbl>, `stim_cd19@v_jsd` <dbl>, `stim_cd45@r_jsd` <dbl>, #> #   `stim_cd38@r_jsd` <dbl>, `stim_cd34@r_jsd` <dbl>, `stim_cd19@r_jsd` <dbl>, #> #   `stim_cd45@n_jsd` <dbl>, `stim_cd38@n_jsd` <dbl>, …  # extract jsd of each cluster (using the \"basal\" stim # condition as a reference) in long format tof_extract_jsd(     tof_tibble = sim_data,     cluster_col = cluster_id,     jsd_col = stim,     reference_level = \"basal\",     format = \"long\" ) #> # A tibble: 104 × 4 #>    cluster_id marker stimulation   jsd #>    <chr>      <chr>  <chr>       <dbl> #>  1 l          cd45   stim        0.715 #>  2 l          cd38   stim        0.673 #>  3 l          cd34   stim        0.826 #>  4 l          cd19   stim        0.747 #>  5 i          cd45   stim        0.786 #>  6 i          cd38   stim        0.912 #>  7 i          cd34   stim        1     #>  8 i          cd19   stim        0.937 #>  9 m          cd45   stim        0.839 #> 10 m          cd38   stim        0.749 #> # ℹ 94 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_proportion.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the proportion of cells in each cluster in a `tof_tibble`. — tof_extract_proportion","title":"Extract the proportion of cells in each cluster in a `tof_tibble`. — tof_extract_proportion","text":"feature extraction function allows calculate proportion cells cluster `tof_tibble` - either overall broken subgroups using `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_proportion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the proportion of cells in each cluster in a `tof_tibble`. — tof_extract_proportion","text":"","code":"tof_extract_proportion(   tof_tibble,   cluster_col,   group_cols = NULL,   format = c(\"wide\", \"long\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_proportion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the proportion of cells in each cluster in a `tof_tibble`. — tof_extract_proportion","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. group_cols Unquoted column names representing columns `tof_tibble` used break rows `tof_tibble` subgroups feature extraction calculation. Defaults NULL (.e. performing extraction without subgroups). format string indicating data returned \"wide\" format (default; cluster proportion given column) \"long\" format (cluster proportion provided row).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_proportion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the proportion of cells in each cluster in a `tof_tibble`. — tof_extract_proportion","text":"tibble. format == \"wide\", tibble 1 row combination grouping variables provided `group_cols` one column grouping variable well one column proportion cells cluster. names column containing cluster proportions obtained using following pattern: \"prop@{cluster_id}\". format == \"long\", tibble 1 row combination grouping variables `group_cols` cluster id (.e. level) `cluster_col`. one column grouping variable, one column cluster ids, one column (`prop`) containing cluster proportions.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_proportion.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract the proportion of cells in each cluster in a `tof_tibble`. — tof_extract_proportion","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         patient = sample(c(\"kirby\", \"mario\"), size = 1000, replace = TRUE),         stim = sample(c(\"basal\", \"stim\"), size = 1000, replace = TRUE)     )  # extract proportion of each cluster in each patient in wide format tof_extract_proportion(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient ) #> # A tibble: 2 × 27 #>   patient `prop@a` `prop@b` `prop@c` `prop@d` `prop@e` `prop@f` `prop@g` #>   <chr>      <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl> #> 1 kirby     0.0368   0.0450   0.0429   0.0348   0.0532   0.0307   0.0348 #> 2 mario     0.0509   0.0391   0.0372   0.0548   0.0313   0.0274   0.0450 #> # ℹ 19 more variables: `prop@h` <dbl>, `prop@i` <dbl>, `prop@j` <dbl>, #> #   `prop@k` <dbl>, `prop@l` <dbl>, `prop@m` <dbl>, `prop@n` <dbl>, #> #   `prop@o` <dbl>, `prop@p` <dbl>, `prop@q` <dbl>, `prop@r` <dbl>, #> #   `prop@s` <dbl>, `prop@t` <dbl>, `prop@u` <dbl>, `prop@v` <dbl>, #> #   `prop@w` <dbl>, `prop@x` <dbl>, `prop@y` <dbl>, `prop@z` <dbl>  # extract proportion of each cluster in each patient in long format tof_extract_proportion(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     format = \"long\" ) #> # A tibble: 52 × 3 #>    patient cluster_id   prop #>    <chr>   <chr>       <dbl> #>  1 kirby   a          0.0368 #>  2 kirby   b          0.0450 #>  3 kirby   c          0.0429 #>  4 kirby   d          0.0348 #>  5 kirby   e          0.0532 #>  6 kirby   f          0.0307 #>  7 kirby   g          0.0348 #>  8 kirby   h          0.0389 #>  9 kirby   i          0.0450 #> 10 kirby   j          0.0368 #> # ℹ 42 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_threshold.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract aggregated features from CyTOF data using a binary threshold — tof_extract_threshold","title":"Extract aggregated features from CyTOF data using a binary threshold — tof_extract_threshold","text":"feature extraction function calculates proportion cells given cluster CyTOF antigen expression user-specified threshold across user-specified selection CyTOF markers. calculations can done either overall (across cells dataset) breaking cells subgroups using `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_threshold.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract aggregated features from CyTOF data using a binary threshold — tof_extract_threshold","text":"","code":"tof_extract_threshold(   tof_tibble,   cluster_col,   group_cols = NULL,   marker_cols = where(tof_is_numeric),   stimulation_col = NULL,   threshold = asinh(10/5),   format = c(\"wide\", \"long\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_threshold.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract aggregated features from CyTOF data using a binary threshold — tof_extract_threshold","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. group_cols Unquoted column names representing columns `tof_tibble` used break rows `tof_tibble` subgroups feature extraction calculation. Defaults NULL (.e. performing extraction without subgroups). marker_cols Unquoted column names representing columns `tof_tibble` (.e. CyTOF protein measurements) included feature extraction calculation. Defaults numeric (integer double) columns. Supports tidyselect helpers. stimulation_col Optional. unquoted column name indicates column `tof_tibble` contains information stimulation condition cell exposed data acquisition. provided, feature extraction broken subgroups stimulation condition (features stimulation condition included features wide format). threshold double integer length 1 indicating threshold used. format string indicating data returned \"wide\" format (default; cluster feature given column) \"long\" format (cluster feature provided row).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_threshold.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract aggregated features from CyTOF data using a binary threshold — tof_extract_threshold","text":"tibble. format == \"wide\", tibble 1 row combination grouping variables provided `group_cols` one column grouping variable, one column extracted feature (proportion cells given cluster marker expression values `threshold`). names column containing cluster features obtained using following pattern: \"{marker_id}@{cluster_id}_threshold\". format == \"long\", tibble 1 row combination grouping variables `group_cols`, cluster id (.e. level) `cluster_col`, marker `marker_cols`. one column grouping variable, one column cluster ids, one column CyTOF channel names, one column (`value`) containing features.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_threshold.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract aggregated features from CyTOF data using a binary threshold — tof_extract_threshold","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         patient = sample(c(\"kirby\", \"mario\"), size = 1000, replace = TRUE),         stim = sample(c(\"basal\", \"stim\"), size = 1000, replace = TRUE)     )  # extract proportion of each cluster in each patient in wide format tof_extract_threshold(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient ) #> # A tibble: 2 × 105 #>   patient `cd45@a_threshold` `cd38@a_threshold` `cd34@a_threshold` #>   <chr>                <dbl>              <dbl>              <dbl> #> 1 kirby               0.0476             0                  0.0476 #> 2 mario               0                  0.0769             0.154  #> # ℹ 101 more variables: `cd19@a_threshold` <dbl>, `cd45@b_threshold` <dbl>, #> #   `cd38@b_threshold` <dbl>, `cd34@b_threshold` <dbl>, #> #   `cd19@b_threshold` <dbl>, `cd45@c_threshold` <dbl>, #> #   `cd38@c_threshold` <dbl>, `cd34@c_threshold` <dbl>, #> #   `cd19@c_threshold` <dbl>, `cd45@d_threshold` <dbl>, #> #   `cd38@d_threshold` <dbl>, `cd34@d_threshold` <dbl>, #> #   `cd19@d_threshold` <dbl>, `cd45@e_threshold` <dbl>, …  # extract proportion of each cluster in each patient in long format tof_extract_threshold(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     format = \"long\" ) #> # A tibble: 208 × 4 #>    patient cluster_id channel values #>    <chr>   <chr>      <chr>    <dbl> #>  1 kirby   a          cd45    0.0476 #>  2 kirby   a          cd38    0      #>  3 kirby   a          cd34    0.0476 #>  4 kirby   a          cd19    0.0952 #>  5 kirby   b          cd45    0      #>  6 kirby   b          cd38    0.158  #>  7 kirby   b          cd34    0.158  #>  8 kirby   b          cd19    0.105  #>  9 kirby   c          cd45    0.105  #> 10 kirby   c          cd38    0.158  #> # ℹ 198 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_best.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the optimal hyperparameters for an elastic net model from candidate performance metrics — tof_find_best","title":"Find the optimal hyperparameters for an elastic net model from candidate performance metrics — tof_find_best","text":"Find optimal hyperparameters elastic net model candidate performance metrics","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_best.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the optimal hyperparameters for an elastic net model from candidate performance metrics — tof_find_best","text":"","code":"tof_find_best(performance_metrics, model_type, optimization_metric)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_best.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the optimal hyperparameters for an elastic net model from candidate performance metrics — tof_find_best","text":"performance_metrics tibble performance metrics elastic net model (wide format) model_type string indicating type glmnet model trained. optimization_metric string indicating performance metric used select optimal model.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_best.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the optimal hyperparameters for an elastic net model from candidate performance metrics — tof_find_best","text":"tibble 3 columns: \"mixture\", \"penalty\", column containing chosen optimization metric. returned tibble 1 column, means 1 mixture/penalty combination yielded optimal result (.e. tuning procedure resulted tie).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_cv_predictions.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate and store the predicted outcomes for each validation set observation during model tuning — tof_find_cv_predictions","title":"Calculate and store the predicted outcomes for each validation set observation during model tuning — tof_find_cv_predictions","text":"Calculate store predicted outcomes validation set observation model tuning","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_cv_predictions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate and store the predicted outcomes for each validation set observation during model tuning — tof_find_cv_predictions","text":"","code":"tof_find_cv_predictions(   split_data,   prepped_recipe,   lambda,   alpha,   model_type,   outcome_colnames )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_cv_predictions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate and store the predicted outcomes for each validation set observation during model tuning — tof_find_cv_predictions","text":"split_data `rsplit` object rsample package. Alternatively, unsplit tbl_df can provided, though recommended. prepped_recipe trained recipe lambda single numeric value indicating penalty (lambda) value used make predictions alpha single numeric value indicating mixture (alpha) value used make predictions model_type string indicating kind elastic net model build. continuous response predicted, use \"linear\" linear regression; categorical response 2 classes predicted, use \"two-class\" logistic regression; categorical response 2 levels predicted, use \"multiclass\" multinomial regression; time--event outcome predicted, use \"survival\" Cox regression. outcome_colnames Quoted column names indicating columns data fit represent outcome variables (others assumed predictors).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_cv_predictions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate and store the predicted outcomes for each validation set observation during model tuning — tof_find_cv_predictions","text":"tibble containing predicted true values outcome validation observations `split_data`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_emd.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the earth-mover's distance between two numeric vectors — tof_find_emd","title":"Find the earth-mover's distance between two numeric vectors — tof_find_emd","text":"Find earth-mover's distance two numeric vectors","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_emd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the earth-mover's distance between two numeric vectors — tof_find_emd","text":"","code":"tof_find_emd(vec_1, vec_2, num_bins = 100)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_emd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the earth-mover's distance between two numeric vectors — tof_find_emd","text":"vec_1 numeric vector. vec_2 numeric vector. num_bins integer number bins use performing kernel density estimation two vectors. Defaults 100.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_emd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the earth-mover's distance between two numeric vectors — tof_find_emd","text":"double (length 1) representing EMD two vectors.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_jsd.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the Jensen-Shannon Divergence (JSD) between two numeric vectors — tof_find_jsd","title":"Find the Jensen-Shannon Divergence (JSD) between two numeric vectors — tof_find_jsd","text":"Find Jensen-Shannon Divergence (JSD) two numeric vectors","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_jsd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the Jensen-Shannon Divergence (JSD) between two numeric vectors — tof_find_jsd","text":"","code":"tof_find_jsd(vec_1, vec_2, num_bins = 100)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_jsd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the Jensen-Shannon Divergence (JSD) between two numeric vectors — tof_find_jsd","text":"vec_1 numeric vector. vec_2 numeric vector. num_bins integer number bins use binning across two vectors' combined range. Defaults 100.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_jsd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the Jensen-Shannon Divergence (JSD) between two numeric vectors — tof_find_jsd","text":"double (length 1) representing JSD two vectors.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_knn.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the k-nearest neighbors of each cell in a high-dimensional cytometry dataset. — tof_find_knn","title":"Find the k-nearest neighbors of each cell in a high-dimensional cytometry dataset. — tof_find_knn","text":"Find k-nearest neighbors cell high-dimensional cytometry dataset.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_knn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the k-nearest neighbors of each cell in a high-dimensional cytometry dataset. — tof_find_knn","text":"","code":"tof_find_knn(   .data,   k = min(10, nrow(.data)),   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\"),   .query,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_knn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the k-nearest neighbors of each cell in a high-dimensional cytometry dataset. — tof_find_knn","text":".data `tof_tibble` `tibble` row represents cell column represents high-dimensional cytometry measurement. k integer indicating number nearest neighbors return cell. distance_function string indicating distance function use nearest-neighbor calculation. Options include \"euclidean\" (default) \"cosine\" distances. .query set cells queried .data (.e. set cells find nearest neighbors within .data). Defaults .data , .e. finding nearest neighbors cells .data. ... Optional additional arguments pass hnsw_knn","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_knn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the k-nearest neighbors of each cell in a high-dimensional cytometry dataset. — tof_find_knn","text":"list two elements: \"neighbor_ids\" \"neighbor_distances,\" n k matrices (n number cells input `.data`. [,j]-th entry \"neighbor_ids\" represents row index j-th nearest neighbor cell -th row `.data`. [,j]-th entry \"neighbor_distances\" represents distance two cells according `distance_function`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_knn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find the k-nearest neighbors of each cell in a high-dimensional cytometry dataset. — tof_find_knn","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  # Find the 10 nearest neighbors of each cell in the dataset tof_find_knn(     .data = sim_data,     k = 10,     distance_function = \"euclidean\" ) #> $neighbor_ids #>         [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] #>    [1,]  902  974  449  933  372   48  776  757   26   812 #>    [2,]  931  806  397  903    5  748  600  676  798   889 #>    [3,]  786   84  423  597  198  119  480  454  817   603 #>    [4,]  774   53  713  337  942  856  707  166  481   726 #>    [5,]  748  519  397  289  568  718  331  889  969   676 #>    [6,]  935  820  587  393   28  671  416  949  613   767 #>    [7,]  709  708  815  890   49  860  710  995  369   492 #>    [8,]  453  305   67  934  654  706  497  681  375   357 #>    [9,]  124  508  319  178  987  162  402  168  418    81 #>   [10,]  106  300  169  837   45  251  220  369  237   869 #>   [11,]  212  597  906  792  559  437  197  803  957   611 #>   [12,]  889  879  193  575  451  267  568  410   36   136 #>   [13,]   70   50  483   54  184  512  244  638  142   433 #>   [14,]  426  335  306  540  608  307  693  204  337    35 #>   [15,]  605  614  358  316  218  377  888  491   31   657 #>   [16,]  199  616  832   20  156  586  174  378  255    87 #>   [17,]  270  283  880  420  810  602  930  499  700   143 #>   [18,]  433  952  551  669  524  244   50  854  188   677 #>   [19,]  750  741  799  729  593  486  560  419  788   171 #>   [20,]  652  771  805  586  199  964  571  192  950   724 #>   [21,]  781  872  216  542  110   94  135  894  710   409 #>   [22,]  672  163  721  443  170  809  195   28   99   671 #>   [23,]  151  594  798  808  736  600  254  852  833   938 #>   [24,]  142   90  641  323   70  886  541  513  473   678 #>   [25,]  301  350  421  364  296  836  190  424  977   498 #>   [26,]  776  521  431  343  185  737  955   77  885   974 #>   [27,]  152  467  666  766  102  883  892  685  645   411 #>   [28,]  671  506  195  809  699  935  170  393  248   439 #>   [29,]   75  216  864  447  210   54   21  142  409   872 #>   [30,]   66  847  514  140  830  846  998   65  775   656 #>   [31,]  910  491  888  275  955  720  768  457  870   645 #>   [32,]  351  309  883  965  945  129  356  290  666   461 #>   [33,]  570   69   43  275  797  563  680  138  401   632 #>   [34,]  944  961  189  202  487  997  529  972  239   308 #>   [35,]  665  711  209  307  426  496  540  204  268   200 #>   [36,]  276  193  289  267  136  697  596  968  703   568 #>   [37,]  858  375  150  140  359  983  838  854   65   305 #>   [38,]  157  867  550  628  523  296  577  260  283   306 #>   [39,]  153  163  826  256  721  672  315  116  526   606 #>   [40,]  966  968  922  959  267  519  413   64  865   219 #>   [41,]  764  531  644  394  196  106  300  574   10   478 #>   [42,]   86   70  796  483   24  835  142   90  371    75 #>   [43,]   33  680   69  570  401  870  275  200   92   563 #>   [44,]  381  264  615  627  246  821  936  514  846    65 #>   [45,]  237  468   10  895  486  138  300  169  869   319 #>   [46,]  598  461  438  791  661  304  118  458  351   137 #>   [47,]  824   99  183  231  102  315  340  807  826   721 #>   [48,]  993  974  187  372  902    1  569  449  348   830 #>   [49,]  890  709  492  348    7  277  278  500  465   749 #>   [50,]  433  667   13  244   54  677  738   18  542   922 #>   [51,]  533  968  548  596  128  314  979  718  580   519 #>   [52,]   59  589  155  615  874  172  209   44  821   627 #>   [53,]  166  481  617  213  905  856  942  719  774   693 #>   [54,]  542   13  332  963  110   50  483  781  371   872 #>   [55,]  859  586  726  346  950  553  255  652  977   229 #>   [56,]  399  518  772  780   91  997  191  239  160   827 #>   [57,]  133   32  845  132  290  404  779  309  965   351 #>   [58,]  485  294  164  810  696  105  390  130  143   711 #>   [59,]   52  553  131  172  155  346  896  514  198   537 #>   [60,]  245  880  817  567  930  700  988  766  763   503 #>   [61,]  307  268   35  426  228  479   14  693  499   365 #>   [62,]  637  784  601  625  848  299  466  932  999   236 #>   [63,]  787  759  790  589  155   84  663  480  560   722 #>   [64,]  456  949  249  112   79   40  545  173  613   770 #>   [65,]  846  983  854  269  875   44  656  381  775   140 #>   [66,]   30  514  847  553  830  846  313  474  950   537 #>   [67,]  654  403  896   98  681  453  706  604  474   926 #>   [68,]  314  659  979  686  747  568  362  519  884   748 #>   [69,]  570   33  870  955   43  275  431  776  138   768 #>   [70,]  483   13  142   42  835   24   86  371  512    54 #>   [71,]  290  133   22   57  841   39  404  163  672   721 #>   [72,]   89  632  841  958  439  871  398  404   81   418 #>   [73,]  564  911  813  573  822  544  976  409  612   864 #>   [74,]  688  473  137  939  673  678  326  992  215   599 #>   [75,]   29  447  840  210  154   42   86  483  216    70 #>   [76,]  719  735  579  919  179  337  608  693  166   713 #>   [77,]  885  651  369  185  710  278   26  869  220   214 #>   [78,]  135  683   94  386  878  578  344  623  868    97 #>   [79,]  492  545   64  388  456  112  668  737  633   916 #>   [80,]  963  679  272  161  558  332   54  647  816   278 #>   [81,]  339   89  460  740  508    9  987  418  168    72 #>   [82,]  453  229  706  681  482  308  576  896   98   131 #>   [83,]  899  686  747  111  886  676  315  826  688   231 #>   [84,]  480  198  759   63  361  119  926  589  790   155 #>   [85,]  543  288  836  148  455  150  838  950  977   192 #>   [86,]   42  689  796  483   70  512  835   75   13    29 #>   [87,]  260  832  329  586  379  692  695  199  550   859 #>   [88,]  104  128  763  177  661  311  507  533  580   452 #>   [89,]   72   81  987  531  339  632  439  871  418   319 #>   [90,]   24  886  142  641  111  473  323  541  678   513 #>   [91,]  997  772  239  368  518   56  202  441  442   866 #>   [92,]  200  390  711  596  245  680  503  294  496   810 #>   [93,]  118  505  293  194  383  327  622  609  356   122 #>   [94,]  623  683  135   78  332   97  542  781  783    21 #>   [95,]  309  467  132  666  892  797  552  398  563    27 #>   [96,]  455  255   85  148  977  836  288  543  950   773 #>   [97,]  927  583  777  495  406  269  623  412  775   344 #>   [98,]  654  604  576  896  706  360  453   67  295   317 #>   [99,]  947  721  824   47  807  443  567  801  666   271 #>  [100,]  312  684  767  113  762  587  286  595  407   459 #>  [101,]  302  970  253  732  829  898  920  125  169   252 #>  [102,]  340  533  231  666   47   27  580  824  152   881 #>  [103,]  493   29  590  840  864  976   75  484  447   564 #>  [104,]  128   88  533  507  311  177  580  548   51   763 #>  [105,]  370  485   58  238  696  880  164  294  700   130 #>  [106,]   10  300  169  837  981  196  220  970  904   394 #>  [107,]  201  233  901  211  818  549  412  913  921   425 #>  [108,]  982  299  446  621  263  724  557  715  771   690 #>  [109,]  365  236  786  817  729  751  801   60  268   602 #>  [110,]  542  781  872   21  332  358  218  682   94   894 #>  [111,]  886   90  473  641  415  678  881   24  513   688 #>  [112,]  937  716  995  613  456   64  285  949   79   855 #>  [113,]  100  877  684  328  208  900  182  250  767   286 #>  [114,]  928  929  941  973  487 1000  635  330  203     8 #>  [115,]  760  123  918  388  933  168  633  213  449   508 #>  [116,]  674  862  153   39  163  526  826  488  606   672 #>  [117,]  980  951  266  622  243  373  409  415  565   261 #>  [118,]  137   93  599  293  609  461  215  194  177   883 #>  [119,]  665  198  926   84  209  789  604  172   52   589 #>  [120,]  833  946  254  472    8  193   82  189  795   497 #>  [121,]  508  342  918  538  668  396  439  168  871   761 #>  [122,]  383  813  894  642  980  549  572  505  951   377 #>  [123,]  115  900  760  918  168  595  823  758  286   592 #>  [124,]    9  319  162  402  508  178  987  975  761   757 #>  [125,]  302  954  234  144  520  829  578  920  227   224 #>  [126,]  349  447  840  619  708  210  501  860  971   422 #>  [127,]  853  734  336  701  317  604  232  778  276   978 #>  [128,]  104  533  311  507  548   88  177  580   51   231 #>  [129,]  751  947  801  848  666   99   95  132  567   271 #>  [130,]  620  485  294  659   58  164  314  696  390   362 #>  [131,]  172  450  209  229   59  576  706  604  204   896 #>  [132,]   95  404  309  129  841  429  398  133  240    32 #>  [133,]  290  404  841  240   32  287  132   57  393    71 #>  [134,]  814  629  924  395  744  624  743  638  448   780 #>  [135,]   78  386  683   94  868   21  573  542  623   781 #>  [136,]  502  158  879   36  179  451  193  496  620   916 #>  [137,]  688  118  293  461  473   74  939  311  678   599 #>  [138,]  486  797  385  563   33  402  570  468  799   398 #>  [139,]  334  653  417  923  855  367  456   79  441   410 #>  [140,]  272  816  998  558   65   37   30  656  269   827 #>  [141,]  451  608  232  164  193  946  136  335  306   540 #>  [142,]   24  641   90   70  513  541  371  323  886   483 #>  [143,]  810  499  284  270   58  700  294  485  271   567 #>  [144,]  520  345  829  227  302  324  954  578  234   186 #>  [145,]  662  569  562  698  993  436  912  964  419   812 #>  [146,]  262  555  222  609  673  582  667  599  914   850 #>  [147,]  725  985  470  893  851  230  758  123  213   877 #>  [148,]  455   85  192  150  188  669  858  543  241   621 #>  [149,]  366  866  368  469  320  633  562  834  341   912 #>  [150,]  858  838  584  242  983  854   37  241  375   192 #>  [151,]  594  600  289   23  193   36  254  798   12   267 #>  [152,]   27  467  766  645  411  892  666  685  423   401 #>  [153,]  826  526   39  606   88  163  661   47  862   256 #>  [154,]  820  210  371  682  142  641  886   75   24   447 #>  [155,]   63  775  589   52  571  759  787   59  553    84 #>  [156,]  174  489  769  832  741  329  695   16  428    87 #>  [157,]  991  887  306  482   38  232  707  833  141   392 #>  [158,]  502  496  136  179  916  540  444  164  596   962 #>  [159,]  344  176  927  722  376   97  583  775  578   819 #>  [160,]  504  876  191  432  773  518  515  448   56   772 #>  [161,]  272  558   80  524  395  816  140  827  998   868 #>  [162,]  782  975  687  402  909  124  319  948  486   178 #>  [163,]  721  672  826  315   22  443   39  170   47    99 #>  [164,]  696  540   58  485  390  158  335  711  496   502 #>  [165,]  747  248  899  686  935  676    6   83   68   671 #>  [166,]  213   53  617  481  719  693  919   76  337   905 #>  [167,]  323   90  886   42   24  541  754  111  796   142 #>  [168,]  918  508  121  286    9  900  339  115  123   418 #>  [169,]  300  837  970   10  106   45  981  251  237   869 #>  [170,]  443  809  979  195  824  506  362  721  315   671 #>  [171,]  741  999  804  299  729  329  236  560   19   466 #>  [172,]  131  209   59  962   52  450  706  665  119   735 #>  [173,]  694  916  770  684  285  884  286   64  456    79 #>  [174,]  156  741  145  419  695  329  378  832  171    19 #>  [175,]  714  986  852  405   12  292  575  879  459   451 #>  [176,]  344  241  584  242  188  159   97  583  878   683 #>  [177,]  507  311  580  803  128  533  217   88  104   207 #>  [178,]  909    9  479  418  124  162  975  782  687   319 #>  [179,]  916  158  984  502  703  136  962   76  444   451 #>  [180,]  629  493  618  646  103  184  754  564  323   544 #>  [181,]  556  705  611  354  915  523  434  664  802   957 #>  [182,]  460  195  699  362  339  694  684  809  506   286 #>  [183,]  315  231   47  340  824  881  548  517  826   102 #>  [184,]  544  573  864  638   13  868  386  822  564   433 #>  [185,]  343  495  521  623  278   26   77  269  333   477 #>  [186,]  345  253  829  465  756  333  277  783  384   348 #>  [187,]   48  993  569  974  626  756  348  753  895   902 #>  [188,]  669  176  241  952  584  242  150  996   18   344 #>  [189,]  833  946  120   34  944  405  254  487  529   961 #>  [190,]  295  298  360  336  301  392  296  317  994   897 #>  [191,]  160  518  504  772  399   56  773  876  746   368 #>  [192,]  838  571  150  584  652  950  159  241  858   724 #>  [193,]   36  451  276  136  703  267   12  879  472   575 #>  [194,]  377  383  967  505  917  599  207  609  642   291 #>  [195,]  506  362  170  671   28  809  182  979  443   699 #>  [196,]  904  394  106  619   10  478  860  369  220   761 #>  [197,]  908  778  701  347  452  734  697  853  658   580 #>  [198,]  480   84  603  897  119  926   59  209  759   131 #>  [199,]   16  586   20  832  255   87  108  260  859   174 #>  [200,]   92  680  503  390  401  245  711  423  596    43 #>  [201,]  818  107  913  901  412  549  462  233  878   211 #>  [202,]  765  972  795  944  239  313  472  656  793   497 #>  [203,]  941  463  582  445  222  973  206  244  330   952 #>  [204,]  450  426  335  209  131  603  232   35  540   337 #>  [205,]  247  996  621  280  525  690  960  455  878   148 #>  [206,]  582  850  357  739  403  914  555  994  325   952 #>  [207,]  291  803  685  906  599  194  580  437  177   347 #>  [208,]  702  250  328  113  195  362  248  182  877   100 #>  [209,]  665  172  131   35  119  204  450   52  603   198 #>  [210,]  154  447  820  216  815  971  710  682  297   872 #>  [211,]  901  233  614  412  440  777  927  406  201   218 #>  [212,]   11  597  957  539  263  611  906  559  932   546 #>  [213,]  166   53  481  617  719  919  693  760  687    76 #>  [214,]  885  369  220  651  660  742  605  815   77   869 #>  [215,]  599  609  473  194  118  678  513  383  850   667 #>  [216,]   21  781  872  710  542   29  210  409  324    94 #>  [217,]  507  219  580  850  697  533  177  347  959   311 #>  [218,]  657  377  894  614  406  358   15  642  605   777 #>  [219,]  959  850  217  673  922  697  865  718  968    40 #>  [220,]  369  651  869  885  214   77  660  815  981   440 #>  [221,]  237  251  471  552  385  547  837  468  660   869 #>  [222,]  582  146  914  463  673  992  203  941  206   262 #>  [223,]  844  587  312  716  937  367  303  762  613   407 #>  [224,]  920  435  731  440  561  655  211  651  660   901 #>  [225,]  755  410  249  966  407  456  459  613  949    64 #>  [226,]  490  717  653  827  956  475  441  139  257   334 #>  [227,]  578  525  960  144  954  520  234   78  280   878 #>  [228,]  329  602   61  786  695  550  307  268  236   171 #>  [229,]  450  482  131   82  576  346  603   59  896   553 #>  [230,]  740  178    9  851  725  124  147  975   81   909 #>  [231,]  340  881  183  102  548   47  128  883  533   104 #>  [232,]  576  450  127  336  204  131  335  306  540   604 #>  [233,]  211  107  547  201  412  901  777  927  440   425 #>  [234,]  954  976  227  144  520  125  484  868  578   322 #>  [235,]  964  834  442  847  652   66  368  562  830   698 #>  [236,]  786  999  729  637  601  466  799  109  365   299 #>  [237,]  221  251   45  385  552  468  837  471  486   138 #>  [238,]  370  105  802  523  907  577  700  880  485   488 #>  [239,]   91  772  202  997  972  518  827  944  441   656 #>  [240,]  404  478  536  958  742  841  251  287  660    95 #>  [241,]  584  242  176  891  361  854  188  150  983   838 #>  [242,]  584  854  241  983  176  344  838  150  846   952 #>  [243,]  373  117  287  639  261  266  565  951  622   980 #>  [244,]  849   50  667   18  677   13  433  941  463   203 #>  [245,]  503  567  200  880  390   92   60  700  930   807 #>  [246,]  627  264  545   44  821  457  381  615  768   413 #>  [247,]  205  455  148  621  525  861  996  510  669   960 #>  [248,]  195  671   28  165  935  747  328  506  899   208 #>  [249,]  225  410  949  456  755  407  613   64  459   966 #>  [250,]  702  208  362  113  130  620  195  684  100    68 #>  [251,]  660  237  221  837   10  214  634  536  240   220 #>  [252,]  318  419  804  732  788  378  753  805  174   535 #>  [253,]  186  345  829  756  384  333  187  819  465   302 #>  [254,]  833  120  151  991  189  946   23  141  852   193 #>  [255,]  586  859   55  977  199  350  260  692  950   832 #>  [256,]  458  526  153  438   39  351   46   83  282   461 #>  [257,]  835  755  483  839  490  225  371  363  966   512 #>  [258,]  932  557  704  534  967  437  462  625  906   509 #>  [259,]  945  565  293  461  554  925  939  779  863    46 #>  [260,]   87  379  692  296  832  586  350  329  859   695 #>  [261,]  541  266  886  373  409  641  513  415  142   243 #>  [262,]  146  609  559  599  917  546  673  850  555   304 #>  [263,]  597  321  212  539    3  296  957  867  932   446 #>  [264,]   44  381  627  246  936  615  545  821  962   514 #>  [265,]  662  384  378  145  187  943  964  253  626   732 #>  [266,]  409  117  261  373  541  980  243  513  951   415 #>  [267,]  966   36  959   40  193  703  413  363  289    12 #>  [268,]   61  365  401   35  423  307  680   43  563   892 #>  [269,]  998  775  495  623   97  343  816  185   65   344 #>  [270,]   17  420  143  810  499  700  284   58  880   105 #>  [271,]  730  801  567  563  499  401   99  824  797   443 #>  [272,]  558  140  816  161  998  679   80  827   65   465 #>  [273,]  516  364  424  640  421  279  281  509  455   621 #>  [274,]  460  740   81   22   89  339  182  712   72   418 #>  [275,]  720   31  570  910  491   33  680   69  645   955 #>  [276,]   36  706  317  127  193  604  576  701  357   697 #>  [277,]  348   49  465  890  186  679  320  709    7   500 #>  [278,]  737  185  492  495   77  343  623  521   26   710 #>  [279,]  509  281  953  640  566  917  996  546  967   989 #>  [280,]  960  525  690  578  159  425  107  878  201   376 #>  [281,]  279  640  953  861  509  677  989  566  273   996 #>  [282,]  607  458  526  438  354  181  256  705  530   434 #>  [283,]  602   17  930  577  880  550  786  658   60   817 #>  [284,]  700  143  807  801  567  810  499  271  672   721 #>  [285,]  767  286  342  595  770  456  716  949  173   112 #>  [286,]  285  767  684  595  900  694  918  173  770   342 #>  [287,]  373  427  243  742  971  622  536  117  415   639 #>  [288,]  308   85  836  977  453  382  375    8  950   838 #>  [289,]  331  718   36    5  519  568  889  968  748   267 #>  [290,]  133  841  404   32  393  287  240   71   99   315 #>  [291,]  207  685  803  906  437  194  347  792  908   580 #>  [292,]  986 1000  793  714  765  175  459  225  410   475 #>  [293,]  939  137  118   93  461  678  609  688  599   215 #>  [294,]  390   58  696   92  485  810  130  659  245   314 #>  [295,]  360  298  317  604   98  654  190  897  926   336 #>  [296,]  350  867  379  190  692   25  263  301  424   421 #>  [297,]  971  815  517  416  427  742  682  478  214   210 #>  [298,]  295  360  190  317  654  604  897  994   98   926 #>  [299,]  999  637  804  171  236  454  535  466  601   355 #>  [300,]  169   10  106  837  970   45  251  237  981   574 #>  [301,]   25  190  498  421  364  296  350  424  392   298 #>  [302,]  125  829  144  253  345  101  520  186  920   954 #>  [303,]  844  223  389  367  527  956  716  855  469   717 #>  [304,]  917  437  906  609  598  803  262  967  207   194 #>  [305,]  934  375  359  497    8  681  453   67  656   474 #>  [306,]  335  540   14  608  232  426  164  204  696   711 #>  [307,]   61  426   35  693  919  617  268   14  209   204 #>  [308,]   82  288  382  453  681  474  305  950  375   726 #>  [309,]  965   95  536  132  634  552   32  356  467   327 #>  [310,]   17  420  550  283  628  270  602  391  712   109 #>  [311,]  177  507  128  104  217   88  533  528  580   548 #>  [312,]  762  587  407  100  949  459  767  595  223   937 #>  [313,]  936  514  381  656  202  264   44   66  472    30 #>  [314,]  659  568   51   68  979  884  294  519  968   130 #>  [315,]  183  826   47  163  231  824  443  170  686   671 #>  [316,]  547   15  630  614  377  605  857  634  777   218 #>  [317,]  604  295  654  403   98  360  701  778  298   127 #>  [318,]  732  419  252  237  753  221  626  788   19   804 #>  [319,]  402  761  124    9  757  162  632  486  508   138 #>  [320,]  465  348  847  993   48  277  186  372  187   830 #>  [321,]  628  263  602  786  539  597  867  236  283     3 #>  [322,]  650  822  564   73  544  868  234  573  618   549 #>  [323,]   24   90  142  541   70  925  641  886  678   513 #>  [324,]  520  783  333  623   94  710  216  135  465    21 #>  [325,]  891  546  789  555  967  917  361  850  291   194 #>  [326,]   74  992  414  244  744  323   24   70  688    50 #>  [327,]  791  356  505  437   93  704  430  906  467   304 #>  [328,]  208  248  113  195  702  250  100  182   28   935 #>  [329,]  228  695  741  171   87  550  832  260  156   174 #>  [330,]  973  934  359  865  922  928  941  875  305   206 #>  [331,]  718  289  519    5  969  968  978  697  659    51 #>  [332,]  963  542   94  110  623  269   54  647   65   278 #>  [333,]  783  756  829  623  185  819  927  324  495    94 #>  [334,]  139  441  653  923  417  940  765  367  855   717 #>  [335,]  608  540  426  306  204   14  337  232  164   496 #>  [336,]  127  734  853  604  317  232  190  701  295   576 #>  [337,]  608  335  426  735  693  713  919   76  579   204 #>  [338,]  831  943  300   45  531  626  169  318  987   162 #>  [339,]   81  460  699  508  168  871  918  439  182   121 #>  [340,]  231  881  102  183  883   47  548  517  824   533 #>  [341,]  679  717  749  855  366  653  367  890   49   389 #>  [342,]  285  995  121  668  770  767  439  699  538   286 #>  [343,]  185  495  521   26  269  776  615  477  278   737 #>  [344,]  176  683  854  242   97  584  775  269  159   983 #>  [345,]  186  253  829  819  465  333  783  520  384   144 #>  [346,]  553   59  229  603  436  198  759  480  663   450 #>  [347,]  908  778  197  701  559  697  452  789  217   850 #>  [348,]  277   49  890  187   48  465  320  500  974   756 #>  [349,]  126  840  619  447  860  708  590  501  422   882 #>  [350,]  296  692   25  379  977  897  543  421  482   360 #>  [351,]   32  845   46  438  945  458  461  661  256   526 #>  [352,]  643  572  612  745  733  800  122  921  813   505 #>  [353,]  312  956  223  407  292  762  459  587  367   873 #>  [354,]  611  181  843  526  556  523  862  988  763   661 #>  [355,]  454  857  376  535  715  787  560  788  630   425 #>  [356,]  327  733   93  965  505  675  430  622  791   745 #>  [357,]  994  206  317  582    8  276  914  654  403   392 #>  [358,]   15  218  605  614  894  377  110  682  872   742 #>  [359,]  934  305  551  973  330  375  928  363  875   656 #>  [360,]  295  298  897   98  604  317  926  654  190   361 #>  [361,]  926  480  891  789   84  897  360  198  241   325 #>  [362,]  195  170  979  506  314   68  884  659  130   294 #>  [363,]  413  839  865  934  922  359  966  875  647   703 #>  [364,]  421  424  273  301   25  836  516  739  498   296 #>  [365,]  109  268  563  797  817  401  892  801  730   271 #>  [366,]  749  633  500  855  469  341  115  890  149   923 #>  [367,]  937  716  855  844  653  112  139  334  717   613 #>  [368,]   91  997  442  866  746  772  847  591  235   149 #>  [369,]  220  885  651  214   77  869  815  710  660   904 #>  [370,]  105  238  485   58  696  802  880  164  700   306 #>  [371,]  835  483  154  142   54   24   70  641  755   922 #>  [372,]  974   48  902  993    1  776  449  343   26   830 #>  [373,]  422  243  427  287  639  266  117  261  971   409 #>  [374,]  469  123  727  230  115  366  149  740  918   147 #>  [375,]  305  359   37  929    8  973  150  934  928   382 #>  [376,]  355  857  715  425  535  412  583  777  630   454 #>  [377,]  218  194  657  383  642  894  406  358  630   316 #>  [378,]  252  174  964  145  662  616  265   20  419    16 #>  [379,]  692  603  296  260  350  897  198    3  346   480 #>  [380,]    4  942  707  774  698  834  726   55   53   856 #>  [381,]   44  264  936  514  246  627  615  656  846   821 #>  [382,]  929  308  375  487  635   37  585  961  288   305 #>  [383,]  642  194  122  377  505  967  894   93  218   738 #>  [384,]  253  186  345  265  811  320  829  187  348   302 #>  [385,]  431  468  138  570  892  799  411  790  221   237 #>  [386,]  573  135  868  433   78  683  184  738  542   544 #>  [387,]  588  643  612  352  745  921  572  842  800   911 #>  [388,]  444  760   79  633  449  776    1  902  213   870 #>  [389,]  717  341  303  866  527  367  956  844  441   679 #>  [390,]   92  294  200  696  711  978  596  245  503   164 #>  [391,]  321  628   62  466  236  982  637  786  109   171 #>  [392,]  336  691  576  994  357  190  317  295  276    98 #>  [393,]  416  427  517  971  297   28  287  478  671     6 #>  [394,]  196  619  904  106  860  981   10  708  644   300 #>  [395,]  524  638  161  551  827  512  814   18  272   868 #>  [396,]  121  538  995  709  749  342  716  500  723     7 #>  [397,]    5  969  748  931  676    2  519  718  649   528 #>  [398,]  138  797  486  563   95  632  237   45  552   319 #>  [399,]   56  191  518  827  772  160  448  780   91   239 #>  [400,]  743  858  876  669  515  148  188  150  861   814 #>  [401,]  680  423  200  563   43  892  797  645  152   730 #>  [402,]  319  761  757  162  138  486  124  632   45   933 #>  [403,]   67  654  317  926  896  604  875  789   98   295 #>  [404,]  240  841  133  290  132  536  478   95  958    72 #>  [405,]  946  852  795  765  451  714  793  189  575   175 #>  [406,]  777  657  412  583  218  630   97  511  927   377 #>  [407,]  762  949  459  312  249  456  613  410  225   587 #>  [408,]  825  675  464  745  552  733  430  252  318   466 #>  [409,]  266  117   21  261  216  872  864  373   73   980 #>  [410,]  225  249  755  459  456  407  966  949   64   762 #>  [411,]  645  680  892  152  423   31  401  790  275   385 #>  [412,]  777  406  927  583  630  376   97  657  857   511 #>  [413,]  363  875  865  246  821  934  703  922  828   497 #>  [414,]  744  326  244  476  992  649  463  941  849   835 #>  [415,]  682  641  513  358  872  111  881  678  473   517 #>  [416,]  517  393  297  971  427  183  682  794  881   820 #>  [417,]  139  653  936  647  363  545  334  703  839   264 #>  [418,]  871  178  508  479  460  168    9  632  124    81 #>  [419,]  788  804  753  805  560   19  318  732  569   252 #>  [420,]  270   17  284  700  143  810  880  499  283   801 #>  [421,]  424  364  298   25  301  739  350  360  190   296 #>  [422,]  373  427  447  639  785  971  261  840  882   266 #>  [423,]  817  766  401  645  152  680  411  200  658   268 #>  [424,]  421  364  273  296  301  212   25  263  298   516 #>  [425,]  715  535  376  690  355  857  412  201  913   818 #>  [426,]  204  335   14  307   35  540  693  337  608   919 #>  [427,]  971  422  373  297  287  478  393  416  639   815 #>  [428,]  489  156   16  174  378  769  252  741  616   199 #>  [429,]  552  132  398   95  466  471  729  309  237   712 #>  [430,]  675  913  733  534  745  462  704  505  327   356 #>  [431,]  468  385   26  895  521  776   69  885  570   955 #>  [432,]  160  585  780  876  382  743  635  518  773   504 #>  [433,]   18  738  386   50  677  683  667  952  573   135 #>  [434,]  528  969  530  705  311  914  331  718  907   507 #>  [435,]  224  920  440  561  731  921  211  901  655   660 #>  [436,]  663  537  346  553  874  698   63  155  856    59 #>  [437,]  906  304  791  291  917  803  207  685  792   967 #>  [438,]  458   46  526  351  256  598  661  153  282   461 #>  [439,]  871  632  121  342  958  508  668  699  538   809 #>  [440,]  651  920  660  869  224  731  211  655  435   837 #>  [441,]  334  653  717  475  139  940  765  417  239   202 #>  [442,]  997  368  235  834  772   66   91  847  518   726 #>  [443,]  170  824  809  721   99   47  672  163  807   979 #>  [444,]  962  388  496  158  179  502  916  870  919   735 #>  [445,]  494  203  941  463  114  582  222  498  476   357 #>  [446,]  715  724  621  891  361  376  355  857  543   511 #>  [447,]  840  210   75  422  126   29  971  154  349   427 #>  [448,]  160  395  876  504  191  399  161  524  400   515 #>  [449,]  902  933    1  974  812  372  948   48  912   633 #>  [450,]  204  131  229  172  209  232  603  576  482    59 #>  [451,]  879  575  193  136  179  946   12  984  703   141 #>  [452,]  580  908  197  503  507  347  778  533  701   803 #>  [453,]  681  706    8  896   98   67  654   82  305   576 #>  [454,]  355  857  560  787  790  630  535  376  788    63 #>  [455,]  148   85  621  543  247  724  836  192  273   421 #>  [456,]  949   64  249  407  410  613  762  112  937   285 #>  [457,]  768  910  491  545  246  737  955  627  720    31 #>  [458,]  438  526  256   46  153  351  282  661  598   461 #>  [459,]  762  407  410  456  249  312  225  949  923   575 #>  [460,]  339  182   81  418  871  809  699  168  508   195 #>  [461,]  137  118  293   46   93  622  883  881  688   939 #>  [462,]  913  704  818  511  557  534  967  201  430   505 #>  [463,]  203  222  941  582  445  244  992  146  476   667 #>  [464,]  921  965  536  435  561  634  643  574  660   951 #>  [465,]  320  186  783  277  998  348  345   49  558   816 #>  [466,]  999  729  236  471  637  299  601  171  552    62 #>  [467,]   27  152  666  892  883  634  316   15   95   411 #>  [468,]  895  431  385   45   26  812  138  753  486   237 #>  [469,]  366  500  749  341  723  855  149  303  396   389 #>  [470,]  893  985  725  758  900  877  579  147  760   123 #>  [471,]  552  999  221  799  547  466  601  892  237   316 #>  [472,]  497  946  193  706  703   82  120  202  451   179 #>  [473,]  688  678  641   74  513  215  111  137   90    24 #>  [474,]  681  983  896  846  838   67  453  305   59   854 #>  [475,]  441  226  717  765  334  239  653  292  793   490 #>  [476,]  649  992  222  414  463  969  941  528  326   397 #>  [477,]  787  722  583  927  790  343   97  495  521   185 #>  [478,]  240  297  427  958  904  971  742  815  287   404 #>  [479,]  909  693  687  178  919  782  418   61  162   307 #>  [480,]   84  198  759  361  897  926  571   63  603   155 #>  [481,]   53  166  719  213  617  856  874  735  537   905 #>  [482,]  229  576  450   82   98  232  131  453  706   897 #>  [483,]   70  835  371   13  512   42   86   54  142   257 #>  [484,]  234  868  144  322  618  976  564  448  822   227 #>  [485,]   58  105  130  294  164  696  370  810  390   143 #>  [486,]  138  750  402  799  468  398   45  385   19   162 #>  [487,]  972  929  961  382  795  635  928  120  114   202 #>  [488,]  807  700  862  294  763  245  606  503  284   907 #>  [489,]  769  156  741  174  329  428  750   19  943   171 #>  [490,]  226  827  839  653  257  363  417  551  793   963 #>  [491,]  910   31  888  457  768  955  275  720  828   870 #>  [492,]  737  278  890   49  709  545   79  647    7   776 #>  [493,]  103  840  646  501   29   75  447  541   42   631 #>  [494,]  445  941  203  498  114  357  151  649  582   222 #>  [495,]  343  185  623  269  521   97  278  583  477   927 #>  [496,]  158  502  540  596  444   35   92  711  962   136 #>  [497,]  305  934  656  472  681  413  706    8  703   363 #>  [498,]  301  994  392  357  494   25  190  556  364   914 #>  [499,]  810  143  271  730   92  567  268  801  700   284 #>  [500,]  749  890  366   49  709  348  396  633  855     1 #>  [501,]  840  631  126  447  349   75  422  873  882   785 #>  [502,]  158  136  496  179  916  596  444  164  540   962 #>  [503,]  245  200  452  763  390   92  567  580  766   423 #>  [504,]  160  191  876  773  515  432  448  518  399    56 #>  [505,]  704  194   93  967  327  383  913  462  377   437 #>  [506,]  671  195  884  770  979  809   28  170  362   699 #>  [507,]  177  580  217  533  311  128  452  104  803   548 #>  [508,]  121  168  918  871    9  124  439  761  418   319 #>  [509,]  279  557  281  953  258  534  996  462  967   621 #>  [510,]  281  640  509  205  279  516  247  273  800   861 #>  [511,]  630  857  657  406  715  777  967  412  818   462 #>  [512,]  483   13   86   70  689  835  257  490   54   395 #>  [513,]  678  641  473  415  142  215   24  541  261    90 #>  [514,]  936  381   44  313  264   59   66  656  846    52 #>  [515,]  876  858  192  773  400  150  148  160  838    37 #>  [516,]  273  424  364  640  421  279  509  281  258   932 #>  [517,]  416  297  682  881  340  183  231  794  742   415 #>  [518,]  772  997   56  191   91  239  160  382  780    37 #>  [519,]  748  568  968  718    5  331  289  959   51    40 #>  [520,]  144  324  783  829  954  578  333  345   78   135 #>  [521,]  343   26  776  955  495  185  737  615  589   627 #>  [522,]  566  572  612  813  953  925  352  122  383   800 #>  [523,]  577  802  957  539  691  658  930  734  907   880 #>  [524,]  638  868  395   18  386  433  161  184  573   135 #>  [525,]  960  578  227  280  159  878  954   78  996   205 #>  [526,]  458  153  438  256  606  862  661   39  354    88 #>  [527,]  303  389  956  844  873  223  717  367  353   341 #>  [528,]  969  914  434  673  311  718  331  992  507   217 #>  [529,]  946  713  774  719  887   76  472  944    4   735 #>  [530,]  938  434  610  969  798  528  397  331  907   915 #>  [531,]  644  987   89  300   10  196  764   41  106   319 #>  [532,]  752  516  867  364  296  424  273  260   25   108 #>  [533,]  128  580  507  548   51  104  102  177  217   968 #>  [534,]  557  462  430  913  704  745  733  675  258   690 #>  [535,]  355  425  376  788  805  715  771  804  857   454 #>  [536,]  634  240  965  309  251  742  287  660  404   464 #>  [537,]  874  856  436   59   52  481  514  663  553   372 #>  [538,]  668  995  761  121  709  396  342    7   69   439 #>  [539,]  957  867  597  577  212  263  523  321   11   611 #>  [540,]  335  164  608  496  711  426  306   35  158    14 #>  [541,]  261  886   24  142   90  641  266  513  323   111 #>  [542,]  110  781   21  872   54  332   94  216  135   683 #>  [543,]  724   85  571  241  446  897  480  350  192   584 #>  [544,]  184  573  822  564  864  386   73  868  849   638 #>  [545,]  647  246  457  768  737  627  264  492   44    79 #>  [546,]  917  325  891  559  262  967  555  906  304   298 #>  [547,]  316  233  634  221  412  211  857  630  614   471 #>  [548,]  533  128  231  881   51  794  104  507  340   968 #>  [549,]  818  878  201  813  996  901  122  642  107   913 #>  [550,]  602  283  228   14  379  329   17   61  426   321 #>  [551,]  359  928   18  973   37  375  330  934  827   865 #>  [552,]  471  221  237   95  429  251  799  466  309   398 #>  [553,]  346   59  155  571   52  436  229  474  198   537 #>  [554,]  863  522  925  566  800  259  572  612  352   989 #>  [555,]  667  677  146  325  952  262  206  738  609   582 #>  [556,]  181  705  915  611  434  581  994  498  691   523 #>  [557,]  534  462  690  258  913  704  509  715  621   818 #>  [558,]  272  679  140  816  161  998  465   80  827   847 #>  [559,]  347  262  908  546  197  803  207   11  778   291 #>  [560,]  454  788  355  787   63  790  799  999  804   857 #>  [561,]  731  655  920  574  224  837  970  440  435   660 #>  [562,]  912  698  834  905  145  449  537  948  436   662 #>  [563,]  797  730  401   33  271  892  138   43  365   570 #>  [564,]   73  822  544  864  573  646  911  184  976   618 #>  [565,]  980  945  951  117  622  572  243  643  352   356 #>  [566,]  522  953  939  279  572  293  800  609  509   383 #>  [567,]  801  271  245  807   60  503  700  401   99   730 #>  [568,]  519  889  748  314    5  968  289  659  966    40 #>  [569,]  753  993  187  732   48  722  895  830  626   145 #>  [570,]   33   69  275   43  385  955  870  431  138   680 #>  [571,]  759  155  480  553  838  192  775   63  584   543 #>  [572,]  352  612  643  522  122  813  980   93  383   566 #>  [573,]  386  184  544  864  868  135   73  822  564   433 #>  [574,]  561  655  731  837  970  106  660  169   10   920 #>  [575,]  879  451  984  179  916   12  136  193  703   459 #>  [576,]   98  706  604  232  131  317  482  229  896   453 #>  [577,]  523  930  658  283  880  539  602   60  957   817 #>  [578,]  525  227   78  954  159  960  520  878  829   819 #>  [579,]   76  608  893  919  337  719  693  758  335   735 #>  [580,]  507  452  533  177  217  908  803  128  207   102 #>  [581,]  915  802  556  691  392  498  907  664  523   728 #>  [582,]  206  222  914  203  941  146  673  555  357   850 #>  [583,]   97  777  927  406  412  477  787  376  857   722 #>  [584,]  242  241  854  983  838  176  150  344  846   361 #>  [585,]  635  382  743  432  780  814  375  929  858   400 #>  [586,]  859  255   55  832  199   20  692  260  346    87 #>  [587,]  312  949  937  223  767  407  762  716  613   285 #>  [588,]  612  643  921  911  549  387  813  352   73   572 #>  [589,]  790   63  787   52  155   84  521  615  870   955 #>  [590,]  349  708  648  860  277   80  126  840   75   324 #>  [591,]  746  811  866  368  320  558  465  341  679   384 #>  [592,]  823  923  758  940  984  595  123  334  760   900 #>  [593,]  812  663  750  948  895  468   63  560   19   790 #>  [594,]  151  600  798  889  289    5   12   23   36   267 #>  [595,]  285  286  923  716  767  762  823  312  900   855 #>  [596,]  496  968   92  390  200   51  502  697  158   136 #>  [597,]  263   11  212  539    3  906  637  957  786   792 #>  [598,]  304   46  437  906  611  791   11  803  792   917 #>  [599,]  215  609  262  194  207  118  850  917  217   177 #>  [600,]  594  798  151  986  889  931  806   23  808     5 #>  [601,]  637  236  999   62  817  791  471  892  786   152 #>  [602,]  283  786  930  550  321  228  577   17  658   817 #>  [603,]  198  897  450  204  209  346  229  480  131   379 #>  [604,]  317   98  576  295  654  360  706  896  926   403 #>  [605,]  614   15  358  218  214  316  491  742  406   888 #>  [606,]  862  807  947  661  988  763   60   99  567   488 #>  [607,]  705  434  282  528  222  146  939  262  598   530 #>  [608,]  335  337  540  579  426  306   14   76  919   735 #>  [609,]  599  262  917  304  118  215  194  146  207   555 #>  [610,]  938  530  798  915  907  434  581  670   23   802 #>  [611,]  181   11  212  354  598  957  556  539  705   988 #>  [612,]  572  643  352  813  522  122  588  921   73   549 #>  [613,]  949  937  249  456  407  112  820   64  587   225 #>  [614,]  605   15  218  358  211  894  406  316  657   377 #>  [615,]  627   44  821  264  246   52  381  846  521   589 #>  [616,]   16  378  964   20  174  199  832  156  586   235 #>  [617,]  166  693   53  919  905  213  481  307  687   337 #>  [618,]  564  646  822  322   73  911  842  544  976   484 #>  [619,]  860  904  708  394  196  349  126    7  815   369 #>  [620,]  130  879  136  502  659  158  451  164  314   575 #>  [621,]  724  446  715  557  690  996  241  543  425   176 #>  [622,]  951  980  117  883   93  415  118  461  356   287 #>  [623,]   94  495  269  783  185   97  343  278  333   332 #>  [624,]  990  114 1000  928  414  257  689  551  972   929 #>  [625,]  784  932   62  258  637  848  598  791  597   437 #>  [626,]  732  753  187  895  569  468  756   45   48   145 #>  [627,]  246  264  615   44  821  381  737  457  768   955 #>  [628,]  321  602  539  867  283  391  550  577  957   263 #>  [629,]  638  744  180  184  849  395  512   13  544   524 #>  [630,]  511  857  777  406  657  412  316  715  454   377 #>  [631,]  785  501  882  422  840  639  447  126  349   427 #>  [632,]  958  871   33  439  319  797  563  402  138   761 #>  [633,]  449    1   79  749  388  366  492  855  902   974 #>  [634,]  742  316  536  547  467  660   15  614  605   251 #>  [635,]  585  382  929  780  487  114  961  928  375   432 #>  [636,]  961   34  944  997  780  382  487  432  189   635 #>  [637,]  601  299   62  999  236  786  597  466    3   471 #>  [638,]  524  184  849   13  868  395  433  544   18   573 #>  [639,]  785  373  422  243  427  882  287  971  117   266 #>  [640,]  281  279  989  273  509  516  953  566  510   861 #>  [641,]  142  513   24  678  473   90  415  111  886   541 #>  [642,]  383  657  738  218  377  894  122  511  194   818 #>  [643,]  352  612  572  921  745  122  980  813  588   733 #>  [644,]  531  987  196   41  394   89  106   10  300   764 #>  [645,]  411  680  152   31  423  275  401  892  685    27 #>  [646,]  564  925   73  266  409  864  541  544  261   618 #>  [647,]  545  963  246  457  737  417  492  278  332   363 #>  [648,]  277  590  898  186  811  860  348  345  384   253 #>  [649,]  476  992  969  222  528  397  941  914  673   463 #>  [650,]  322  822  996  549  861  878  813  544   73   868 #>  [651,]  220  369  869  885  440   77  214  660  710   731 #>  [652,]  950  192   20  571   66  964  838  553   55   830 #>  [653,]  139  334  717  417  367  441  226  490  855   647 #>  [654,]   67  403   98  896  604  317  453  295  706   360 #>  [655,]  731  561  920  574  837  440  224  970  651   220 #>  [656,]  381  936  497   65  514  305   44  359  363   846 #>  [657,]  406  218  377  777  642  630  511  412  894   614 #>  [658,]  930  423  880  197  817  734  577  853  711   503 #>  [659,]  314  568  130  294   51   68  979  331  390   884 #>  [660,]  214  251  651  440  220  837  742  634  869   731 #>  [661,]  988  763   88  606  792  766  104  751  947   807 #>  [662,]  145  943  562  265  912  964  698  187  626   569 #>  [663,]  436  593   63  812  874  695  589  537  759   346 #>  [664,]  581  556  181  915  498  301  523  957  867   802 #>  [665,]  209  119   35  172  198  496  870   52  131   200 #>  [666,]   27  152  467  102  766  751  883   99  401    95 #>  [667,]  555  677   50  738  952  146  850  244  433   215 #>  [668,]  538  995  342  121  770   69   79  285  871   439 #>  [669,]  188   18  176  952  150  241  996  584  861   242 #>  [670,]  610  728  802  354  238  116  907  915  181   282 #>  [671,]   28  506  195  170  809  315  183  443  979   686 #>  [672,]  721   22  163  443   99  947  284  807  170   801 #>  [673,]  850  219  992  528  914  146  262  217  959   582 #>  [674,]  862  116  672  284  606  700  807  721  488   163 #>  [675,]  733  430  745  534  356  327  913  505  704    62 #>  [676,]  686  794  748  519    5  397  548   68  747   568 #>  [677,]  667  555  738  953  952  433   50  244  849   146 #>  [678,]  513  473  641  215  688  293  415  137   24    90 #>  [679,]  558  341   80  272  465  653  277  717   49   492 #>  [680,]  401  200  645   43  411  275  423   92   33   152 #>  [681,]  474  896  453   67  305  706  497  654  983    82 #>  [682,]  415  872  358  517  110  781  297  910  491   210 #>  [683,]   78   94  135  344  386  623   97  332  269   176 #>  [684,]  286  694  173  767  100  900  770  285  595   884 #>  [685,]  291  207  906  152  803  645  437   27  411   630 #>  [686,]  676  794  747   68  183  315  548  899  671    83 #>  [687,]  782  948  909  975  162  905  617  479  213   166 #>  [688,]   74  137  473  678  939  311  293  118  215   111 #>  [689,]  990   86  796  512  835  483   42  257   70   754 #>  [690,]  425  557  825  462  818  913  715  534  201   280 #>  [691,]  734  853  978  336  701  778  392  127  994   197 #>  [692,]  379  350  603  897  346  260  296  198  480   229 #>  [693,]  919  617  426  166  307  337  213  579   76   735 #>  [694,]  173  770  884  684  286  916  502  285  979   158 #>  [695,]  663  228  346  329  436  603  593  692  905   741 #>  [696,]  164  978  390  853  711  294   58  734  540   485 #>  [697,]  778  701  217  908  347  968  197  452  718   580 #>  [698,]  562  912  905  834  436  856  942  537  145   663 #>  [699,]  767  342  339  286  439  506  871  770  121    28 #>  [700,]  284  880  807  810  567  245   60  488  143   801 #>  [701,]  778  697  197  908  127  734  853  347  317   452 #>  [702,]  208  250  362  113  182  195  328  130  877   620 #>  [703,]  962  179  413  193  916  267  363  246  497   966 #>  [704,]  462  967  505  913  511  194  430  818  437   534 #>  [705,]  556  181  434  607  914  528  222  994  611   559 #>  [706,]  576  453   98  896  604  654  681   67  131   276 #>  [707,]    4  337  774  380  887  608  157  713  893    53 #>  [708,]  860    7  815  619  710  904  709  369  220   210 #>  [709,]  890    7   49  492  538  995  749  396  112   500 #>  [710,]   77  781  815  216  651  885  278   21    7   872 #>  [711,]   35   92  390  540  200  696  930  496  880   853 #>  [712,]  109  801  365  129  132  420  429  271  398   730 #>  [713,]  735  337  719  856   76  450  481  726    4    53 #>  [714,]  175  405  986  852  292  765  793  575   12   795 #>  [715,]  425  376  857  446  511  355  535  630  462   454 #>  [716,]  937  112  855  367  285  595  995  587  844   613 #>  [717,]  653  226  441  367  341  334  679  139  956   389 #>  [718,]  331  519  968  289  959  217  697  969    5   507 #>  [719,]   76  481  735  166  213  713  579   53  919   337 #>  [720,]  275  910   31  768  457  491  955  680  870   570 #>  [721,]  672   99  443  163  807  947  824   47  170    22 #>  [722,]  787  477  775  583  927  155   63  830   97   569 #>  [723,]  396  844  619  500  749  469  716  196  394   709 #>  [724,]  446  621  376  715  543  771  571  241  425   176 #>  [725,]  147  985  470  893  758  900  123  877  851   760 #>  [726,]   55   82  713  229  856  553  346  308  450   482 #>  [727,]  469  374  644  500  898  394  723  831  338   987 #>  [728,]  736  581  802  915  238  370  907  670  610   105 #>  [729,]  236  466   19  799  999  471  109  171  741   365 #>  [730,]  271  563  797  801  401  567  499   33  365   824 #>  [731,]  655  561  920  224  440  574  837  651  435   660 #>  [732,]  626  753  569  318  895  187  419  756  145   468 #>  [733,]  745  675  430  356  534  352  327  505  643   913 #>  [734,]  853  127  701  336  978  691  197  778  696   658 #>  [735,]   76  719  713  919  337  481  172  179  444   209 #>  [736,]   23  728  581  991  915  141  852  798  808   802 #>  [737,]  278  768  492  627  457  776  521  545   26   246 #>  [738,]  642  433  677  667  383  555  386  953  952    50 #>  [739,]  952  206  582  298  546  891  325  421  241   555 #>  [740,]   81  230  339    9  987  460  168  124   89   178 #>  [741,]   19  171  750  329  174  419  729  228  695   560 #>  [742,]  214  634  605  358   15  297  660  614  240   517 #>  [743,]  400  585  814  432  858  876  148  861  669   515 #>  [744,]  414  326  849  244  463   13  629  638  476   992 #>  [745,]  733  675  430  352  534  643  356  800  913   572 #>  [746,]  591  811  866  368  558  320  191  679  847   272 #>  [747,]  686   68  676  315   83  165  826  899  248   183 #>  [748,]    5  519  568  676  397  889  718  289  331   968 #>  [749,]  855  500  366  890  709  633  396  716   49   341 #>  [750,]   19  593  486  741  948  162  799  812  687   782 #>  [751,]  129  848  666  766  947  988  817  801   60   567 #>  [752,]  532  255   96  977   25  350  260  296  586   859 #>  [753,]  569  732  895  626  477  468  756  187  419   722 #>  [754,]  796   42   86  689  167  990   70  835  323   483 #>  [755,]  225  249  410  966  257  371  407  613   40   748 #>  [756,]  333  869  187  253  981   77  753  186  185   651 #>  [757,]  761  933  402    1  319  902  449  974  538   895 #>  [758,]  760  470  579  893  984   76  592  719  900   823 #>  [759,]   63   84  480  571  155  787  198  771  805   790 #>  [760,]  388  758  213  115  123  719   76  984  919   166 #>  [761,]  757  319  402  538  508  121  632  668   45   124 #>  [762,]  407  312  459  949  456  923  587  285  595   937 #>  [763,]  988   88  661  503  452  104  245  792   60   766 #>  [764,]   41  404  531  240  300  478   10  106  574    72 #>  [765,]  793  795  202  839  334  417  405  940  972   441 #>  [766,]  792  152  817  423   27  988  666  751  503   401 #>  [767,]  285  286  770  342  699  587  684  949  595   100 #>  [768,]  457  910  955  491  737  720  545  246  627    31 #>  [769,]  489  156  174  741  943  329  750  831  975   905 #>  [770,]  884  694  173  285  506  342  767  668  286   979 #>  [771,]  805  535  355  759  376  724  788  804  571    63 #>  [772,]  518  997   91  239   56  191  140   30  368   442 #>  [773,]  876  515  504  160  191  652  432  858  518   950 #>  [774,]    4   53  713  719  942  481  166  529  856   337 #>  [775,]  269  155  846  722   97  344  583  495  343   615 #>  [776,]   26  521  955  737  870  902  343  431    1   627 #>  [777,]  412  406  583  927  657   97  630  857  511   376 #>  [778,]  701  908  197  347  697  317  452  734  853   127 #>  [779,]  945   57   32  351  259  290  133  565  243   256 #>  [780,]  635  432  382  585   56  487  518  961  929   772 #>  [781,]  872   21  542  216  110  710   94  358  682   332 #>  [782,]  687  975  162  909  948  905  479  617  213   402 #>  [783,]  333  623  998  816  324  819   94  269  465   185 #>  [784,]  848   62  625  791  601  637  751  327  792   843 #>  [785,]  882  639  422  631  373  427  243  971  447   840 #>  [786,]  236    3  817  602  423  637  321  601  228   365 #>  [787,]   63  790  477  722  589  583  355  454  155   759 #>  [788,]  804  535  560  419  355  805  454  771  999   787 #>  [789,]  926  361  325  347  403  119  828  317  891   908 #>  [790,]  589  787   63  477  454   84  583  560  411   155 #>  [791,]  327  437  792  906  803  766   27  304  291   601 #>  [792,]  766  988  803  791  906  437   11  291  817   685 #>  [793,]  765  795  839 1000  417  410  202  972  363    12 #>  [794,]  676  548  686  519  517   40  748  183  881   968 #>  [795,]  972  793 1000  765  839  202  405  487  497   472 #>  [796,]   42   86  689  835  754  990   70  483  512   257 #>  [797,]  563  730  138  892   33  401  570  398  271    43 #>  [798,]  600  938  594  530  151  806    5   23  289   903 #>  [799,]  892   19  385  729  560  138  471  486  236   999 #>  [800,]  352  572  534  745  566  863  733  522  612   643 #>  [801,]  271  567  730  947   99  807  284  365  751   129 #>  [802,]  907  523  238  370  691  581  577  105  556   915 #>  [803,]  207  291  177  906  792  580  437  507  685   452 #>  [804,]  788  535  805  419  560  771  355  171  999   299 #>  [805,]  771  535  788  355  804  759  376  787   63   560 #>  [806,]  903    2  931  798  600  397  938    5  594   889 #>  [807,]  567  606   99  721  700   47  947  488  284   245 #>  [808,]   23  600  594  798  151  494  938  254  903   806 #>  [809,]  443  170  506  824  979  871  671  195   28   884 #>  [810,]  499  143   58  880  700  294   92  245  390   711 #>  [811,]  591  746  384  345  186  320  465  648  253   144 #>  [812,]  593  902  948  895  663  974  449  468    1   776 #>  [813,]  122   73  549  612  572  383  894  980  522   642 #>  [814,]  743  585  395  400  780  635  551  638   18   524 #>  [815,]  369    7  297  710  214  885  708  220  971    77 #>  [816,]  998  269  140  783  272  623   65   94  558   332 #>  [817,]  423  766   60  786  658  792  930  152  365   751 #>  [818,]  201  462  913  549  511  642  878  996  704   412 #>  [819,]  783  830  333  829  998  345  159  722  269   816 #>  [820,]  613  154  210  937  112  949  995    6  416    64 #>  [821,]  615  246  627  828   44  962  413  875  264   381 #>  [822,]  544  322  650  564  573   73  184  868  386   813 #>  [823,]  592  923  595  900  758  123  762  984  286   334 #>  [824,]   47   99  443  183  102  721  809  271  170   567 #>  [825,]  690  425  557  534  430  107  280  913  535   462 #>  [826,]  315   47  153  163  183  104  721  807  231   128 #>  [827,]  490  272  140  551  239  226  558  395  161    37 #>  [828,]  888  875  821  910  491  865   31  922  789   413 #>  [829,]  345  253  333  186  819  520  783  756  578   302 #>  [830,]  993  722  819  569  372  775   48  847   30    66 #>  [831,]  943  338  975  162  782  124  750  662  933   687 #>  [832,]   87  586  260  329  859  156  199  695  174    16 #>  [833,]  254  120  946  189  991  141  887  472   82   193 #>  [834,]  698  562  235  964  912  442  942  856  436   537 #>  [835,]  483  257  371   70  796   42   13  755  512   142 #>  [836,]   85  288   25  364  421  739  977  301  455   350 #>  [837,]  970  169  251  655   10  300  869  561  660   106 #>  [838,]  983  150  584  474  242  192  854  846  241   571 #>  [839,]  363  793  795  490  267  417  934  497  359   413 #>  [840,]  447  501  126   75  349  422   29  210  154   590 #>  [841,]  404  133  290  240   72  958   99  824  132   478 #>  [842,]  646  618  387  911  565  612  925  564   73   643 #>  [843,]  848  354  784  611  988  625   60  539  751   606 #>  [844,]  223  367  716  937  303  587  112  855  956   873 #>  [845,]  351  129   32   57  947  132  848  751  784   309 #>  [846,]  983   65  775  474   44  615  854  381  875   155 #>  [847,]   30   66  830  320  998  819  993  140  465   235 #>  [848,]  751  784  988  129  791  601  792  817  766   661 #>  [849,]  244  638  677   50  433  544   13  667   18   744 #>  [850,]  219  673  217  206  959  347  599  262  697   325 #>  [851,]  909  975  687  782  166  213  617   53  178   479 #>  [852,]  175  405  451  879  946  714   12  575  986   141 #>  [853,]  734  127  978  701  336  696  691  197  778   711 #>  [854,]  242  983  584   65  846  875  344  241  838   150 #>  [855,]  749  716  367  139  112  923   79  937  633   366 #>  [856,]  537  481  874   53  905  713  698  617  436   346 #>  [857,]  355  630  454  376  715  511  777  412  583   535 #>  [858,]  150   37  838  515  192  375  400  584  983   669 #>  [859,]   55  586  255  977  692  346  726  950  832   260 #>  [860,]  708  619    7  904  815  369  220  710  651   709 #>  [861,]  281  669  188  650  400  996  677  849  953    18 #>  [862,]  606  807  488  674  700  947  284  763   60   661 #>  [863,]  800  554  566  989  522  279  572  352  939   509 #>  [864,]  573  184  544   29  564  386  409  216  868    21 #>  [865,]  922  875  413  363  330  828  934  359  219   966 #>  [866,]  746  368  591  341  149   91  389  441  366   320 #>  [867,]  296  957  539  263  190  321  628  523  301   379 #>  [868,]  386  573  524  135  184   78  433  544  638   864 #>  [869,]  651  220  885  369  440   77  756  837  214   981 #>  [870,]  955   69  776   31  768  521  589  627   43   570 #>  [871,]  439  632  508  809  121  418  668  342  699   958 #>  [872,]  781   21  542  110  216  682  358  415  894   710 #>  [873,]  956  844   75  223  840  367  501  126  613   937 #>  [874,]  537   52   59  856  481  663  436  209  514   735 #>  [875,]  828  413  865  821  854  934  403   65  846   922 #>  [876,]  515  160  773  504  400  858  432  191  743   448 #>  [877,]  113  900  985  470  684  100  758  725  823   182 #>  [878,]  996  549   78  818  201  176  642  901  683   578 #>  [879,]  575  451  136  620   12  193  916  179  502   984 #>  [880,]  930  245   60  700  810  658  711  577  503    17 #>  [881,]  340  231  548  883  517  102  183  415  533   111 #>  [882,]  785  639  631  422  427  349  126  373  971   393 #>  [883,]  340  881   27  666  231  467  102  622  118   152 #>  [884,]  979  770  506  694  314  173  659   51  362    68 #>  [885,]   77  369  220  214  651  869   26  431  815   710 #>  [886,]  111   90   24  541  641  261  142  473  154   415 #>  [887,]  991  713  529   82  833  726  482  157  946   120 #>  [888,]   31  491  910  828   15  955  821  657  406   789 #>  [889,]   12  568    5  748  289  519  267   36  879   594 #>  [890,]   49  709  492    7  348  500  749  277  278     1 #>  [891,]  325  361  546  241  789  511  967  926  446   630 #>  [892,]  411  152  799  797  401  645  467  563  385    27 #>  [893,]  579  470  758   76  725  608  337  693  919   719 #>  [894,]  218  122  377  642  358  614  657  383  901    21 #>  [895,]  468  753  431  812  626  569   45   26  593   385 #>  [896,]  681   67  654   98  474  453  706  604  926   403 #>  [897,]  360  198  480  926  603   98  295  604  361   896 #>  [898,]  981  648  302  101  253  384  655  394  186   106 #>  [899,]   83  686  747  393  315  165  671  886  111   416 #>  [900,]  286  123  684  918  595  168  877  758  823   470 #>  [901,]  211  201  107  233  549  894  921  122  412   435 #>  [902,]  974    1  449  372  933  812   48  776   26   757 #>  [903,]  806    2  931  798  600  938  397  594    5   530 #>  [904,]  196  619  860  815  369  708  478  220  394   106 #>  [905,]  948  617   53  912  687  698  856  942  481   166 #>  [906,]  437  291  803  304  207  792  685  917  791    11 #>  [907,]  802  691  978  488  434  331  696  523  734   763 #>  [908,]  197  347  778  452  701  697  580  559  217   291 #>  [909,]  782  687  479  975  162  178  851  948  617   693 #>  [910,]  491   31  457  768  888  720  275  955  828   870 #>  [911,]   73  976  921  564  813  409  435  588  612   901 #>  [912,]  562  698  905  948  449  537  481  942  812    53 #>  [913,]  462  818  704  201  430  511  505  534  967   425 #>  [914,]  528  994  673  582  222  206  357  969  850   559 #>  [915,]  581  556  181  610  907  802  705  530  434   691 #>  [916,]  179  173  984  502  158  703  444  136  575   694 #>  [917,]  304  967  546  609  194  437  906  262  207   325 #>  [918,]  168  121  508  286  123  900  115  595  339   699 #>  [919,]  693  617   76  735  166  426  579  337  307   213 #>  [920,]  224  731  561  440  655  435  651  211  837   660 #>  [921,]  643  901  435  911  122  980  107  464  612   813 #>  [922,]  865  219  413   40  875  363  828  966  959   330 #>  [923,]  334  823  595  592  139  762  984  855  459   456 #>  [924,]  861  743  400  814  322  650  629  638  849   822 #>  [925,]  522  323  646  678  513  293  939  572  541   544 #>  [926,]  361  789  480  198  403  897  896  119  360   604 #>  [927,]   97  583  777  412  406  477  722  495  211   159 #>  [928,]  973  929  114  359  551  330  934  375  305   839 #>  [929,]  487  928  382  375  114  305  972    8  635   359 #>  [930,]  658  880  577  711   60  817  245  283  423   602 #>  [931,]    2  397  806    5  748  600  903  649  676   889 #>  [932,]  258  625  597  212  263  557   62  637  534   437 #>  [933,]  449    1  902  757  974  948  812  402   48   115 #>  [934,]  305  330  359  973  497  413  875  363    8   865 #>  [935,]    6  587  671   28  820  767  506  248  949   686 #>  [936,]  381  313  514  264   44  656  417  246  627   497 #>  [937,]  112  716  613  367  949  456  587  995  285   407 #>  [938,]  610  798  530  903  806  600  434  397  594   907 #>  [939,]  293  137   74  688  609  566  118  678  146   599 #>  [940,]  334  441  765  984  202  592  923  313  139   417 #>  [941,]  203  582  973  330  463  445  206  357  222   992 #>  [942,]   53  905  698  912    4  774  856  166  562   481 #>  [943,]  831  662  145  975  912  948  562  782  750   933 #>  [944,]   34  202  189  961  972  239  946  487  529   405 #>  [945,]  565  259  461   32  351  622  356  779   46   293 #>  [946,]  405  472  120  451  833  529  193  141  189   795 #>  [947,]   99  129  801  721  606  807  751  567  666    47 #>  [948,]  687  782  905  812  593  449  912  933  162   617 #>  [949,]  456  407  613  249  762   64  937  587  285   112 #>  [950,]  652  838  192  571  553   55   66  474  308   346 #>  [951,]  980  622  117  122  894   93  565  415  634   266 #>  [952,]   18  739  555  242  188  677  667  854  206   241 #>  [953,]  566  677  279  555  738  281  522  667  383   509 #>  [954,]  234  520  578  125  901  976   78  107  224   135 #>  [955,]  870  768  521  776   31  491  457   69  910   627 #>  [956,]  873  226  717  367  844  353  653  223  613   937 #>  [957,]  539  212  867  523   11  597  190  263  577   611 #>  [958,]  632  240   33  439  570  478  742  214  871   297 #>  [959,]  219  718  217  850  968  697  922  267   40   966 #>  [960,]  280  525  578  227  159  878  107  205  954   425 #>  [961,]  487   34  382  944  972  636  635  308  780   929 #>  [962,]  444  821  703  172  627  246  264  179  496    44 #>  [963,]  647  332   80  545   54  278  542  492  363   246 #>  [964,]  235  834  145  652  830  698  993  436  562   662 #>  [965,]  309  536  356  634  464   32  622  327  951   675 #>  [966,]   40  267  922  959  363  755  225  413  410   568 #>  [967,]  704  917  194  511  505  462  383  437  325   546 #>  [968,]   51  519  718  596  697   40  533  959  568   217 #>  [969,]  528  718  397  434  331  673  311  914    5   992 #>  [970,]  837  169  561  655  300  574  731  106   10   440 #>  [971,]  427  297  815  416  422  373  210  478  287   517 #>  [972,]  795  487  202  929 1000  793  239  765  928   839 #>  [973,]  330  934  359  928  941  305  375  865  551     8 #>  [974,]  902    1   48  372  449  933  776  187   26   812 #>  [975,]  782  162  687  909  948  124  178    9  851   933 #>  [976,]  911   73  564  409  954  234  435  224  864   573 #>  [977,]  288  350  859  482   85  255   55   25  950   229 #>  [978,]  853  734  696  390  701  127  691  778  697   503 #>  [979,]  884  170  506   51  314  809  824  770  659   443 #>  [980,]  951  117  622  122  894  266  572  813  565    93 #>  [981,]  220  869  756  106  651  655  369  837  169    10 #>  [982,]  108  299  932   62  557  825  258  637  263   625 #>  [983,]  854  846  474  242  838  584   65  681  150   875 #>  [984,]  179  575  916  923  451   76  703  173  879   758 #>  [985,]  725  470  147  877  758  900  893  123  592   823 #>  [986,]  175  292   12  714  600  852  889 1000  594   405 #>  [987,]    9  531  124  319  644   81   89  508  761   402 #>  [988,]  661  792  763  766   60  751  848  606  817    88 #>  [989,]  640  566  281  279  953  509  146  939  463   522 #>  [990,]  689  796  835  257  624  512   86  483  414   754 #>  [991,]  887  157  833  254  141  189  120  946  529   232 #>  [992,]  649  673  476  222  969  326   74  528  582   941 #>  [993,]   48  830  187  569  372  974  902  722  819   320 #>  [994,]  357  914  778  206  298  559  691  347  317   295 #>  [995,]  112  342  538  668  709  285  937  716  396     7 #>  [996,]  878  818  549  188  738  176  642  669  201   621 #>  [997,]   91  772  239  518  442  368   56  944   34   202 #>  [998,]  816  269  783  140  623   65  465  272  775   819 #>  [999,]  299  236  466  637  471  560  601  729  171   799 #> [1000,]  795  793  972  839  765  928  292  114  257   487 #>  #> $neighbor_distances #>               [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7] #>    [1,] 0.20401328 0.2297934 0.3138135 0.4231108 0.5355298 0.5401591 0.5567491 #>    [2,] 0.32973883 0.6430310 0.7968558 0.8212084 1.0502927 1.0810405 1.1236309 #>    [3,] 0.57497341 0.6313763 0.6795598 0.7046763 0.7298684 0.7306891 0.7345639 #>    [4,] 0.51831285 0.7634264 0.7697531 0.8383359 0.8680102 0.8847910 0.8976446 #>    [5,] 0.24904996 0.4462521 0.5077824 0.5213317 0.5677158 0.5780144 0.5893216 #>    [6,] 0.27555983 0.8092895 0.8411883 1.0214516 1.0608777 1.0700967 1.0707614 #>    [7,] 0.34196056 0.4761885 0.5034966 0.5411459 0.5780769 0.6419423 0.6603372 #>    [8,] 0.42341722 0.4763486 0.5475133 0.5649593 0.5832804 0.5979267 0.6457748 #>    [9,] 0.19231943 0.6145078 0.6294519 0.7061322 0.7081877 0.7728475 0.7956999 #>   [10,] 0.35591332 0.3819807 0.4921715 0.5840243 0.6060206 0.6677208 0.7098107 #>   [11,] 0.46219264 0.5402428 0.5673004 0.5868896 0.6231919 0.7234819 0.7392123 #>   [12,] 0.43083312 0.5794452 0.6483370 0.6705609 0.6861477 0.6994048 0.7227961 #>   [13,] 0.53278656 0.5615111 0.5967172 0.5979869 0.6680145 0.7538365 0.7900894 #>   [14,] 0.44013910 0.5055929 0.5672535 0.5834436 0.6096183 0.6804203 0.7303456 #>   [15,] 0.22442660 0.3470505 0.4231470 0.4517001 0.4997707 0.5691470 0.5776172 #>   [16,] 0.76958516 0.9489897 1.1926012 1.3070545 1.3537301 1.3598960 1.3744396 #>   [17,] 0.51622749 0.5401219 0.7234209 0.7581030 0.7920929 0.8279909 0.8624187 #>   [18,] 0.47179280 0.5837484 0.6898668 0.7268092 0.7290642 0.7365497 0.7597294 #>   [19,] 0.43565819 0.5452349 0.5871641 0.6043339 0.7073436 0.7144698 0.7223383 #>   [20,] 0.80990881 0.8755916 0.9501921 0.9577120 0.9891210 1.0494963 1.0622209 #>   [21,] 0.22700182 0.2863546 0.3559667 0.3895462 0.5214387 0.6016396 0.6285474 #>   [22,] 0.55620113 0.6761119 0.7251096 0.7326979 0.8173047 0.9055574 1.0445476 #>   [23,] 0.91857413 0.9619119 1.0043138 1.0134311 1.0219618 1.0425115 1.0442192 #>   [24,] 0.19730777 0.2636174 0.4236904 0.5930203 0.6018892 0.6034513 0.6369706 #>   [25,] 0.42602438 0.6385229 0.7472823 0.7887490 0.8148026 0.8461533 0.8712837 #>   [26,] 0.25901013 0.2973363 0.4249013 0.4304254 0.4773597 0.4845951 0.5145035 #>   [27,] 0.20551770 0.2950649 0.3805556 0.4767526 0.5489620 0.5686003 0.6132823 #>   [28,] 0.30959217 0.6546507 0.7499530 0.8131680 0.8518826 0.9146160 0.9170140 #>   [29,] 0.49900188 0.6686268 0.6943917 0.7850545 0.8195999 0.8488671 0.9128618 #>   [30,] 0.32203921 0.4746980 0.6323672 0.6934924 0.7284374 0.7338340 0.7349196 #>   [31,] 0.18972562 0.1966582 0.3291049 0.3632984 0.4182481 0.4343620 0.4632650 #>   [32,] 0.74917426 0.9005771 0.9155590 0.9520988 1.0041724 1.0155953 1.0164986 #>   [33,] 0.21768175 0.3204728 0.3811368 0.4807926 0.5195598 0.5230785 0.5691183 #>   [34,] 0.38744169 0.7337911 0.8877099 0.9936655 1.0624526 1.0980638 1.1491190 #>   [35,] 0.37483752 0.4342561 0.4568264 0.4861008 0.5213623 0.5690278 0.5699772 #>   [36,] 0.44244519 0.4443788 0.5147545 0.5206723 0.5501531 0.6842577 0.6929611 #>   [37,] 0.54337093 0.5935788 0.6328591 0.6911977 0.7219199 0.7234359 0.7313953 #>   [38,] 1.31785178 1.3438966 1.3981701 1.3993665 1.5485858 1.6567922 1.6650614 #>   [39,] 0.73369006 0.7503674 0.9358914 1.0864524 1.0976545 1.1126941 1.1159428 #>   [40,] 0.29908750 0.5156511 0.5554737 0.6042603 0.6052681 0.6338556 0.6366219 #>   [41,] 0.81539391 1.1608150 1.1824394 1.3247185 1.3430561 1.4019599 1.4877094 #>   [42,] 0.48515156 0.5646179 0.6039837 0.6758119 0.7892313 0.7998428 0.8051681 #>   [43,] 0.38113677 0.4043257 0.4658812 0.5011849 0.5190625 0.5551641 0.5600718 #>   [44,] 0.17060468 0.2301752 0.3028660 0.3064312 0.3519539 0.4537897 0.4624185 #>   [45,] 0.53600681 0.5812638 0.6060206 0.6490480 0.6754915 0.7363541 0.7394081 #>   [46,] 0.59591158 0.7215075 0.7426337 0.8424369 0.8453762 0.8905146 0.8914415 #>   [47,] 0.39132024 0.4442663 0.4771222 0.5269116 0.5427244 0.5579043 0.5724860 #>   [48,] 0.32474420 0.3294379 0.3395542 0.4064138 0.4986791 0.5401591 0.6187809 #>   [49,] 0.16183479 0.4538520 0.5355462 0.5426983 0.5780769 0.5809784 0.6926520 #>   [50,] 0.52113328 0.5374643 0.5615111 0.6046671 0.6684813 0.6787766 0.7595550 #>   [51,] 0.40156738 0.4023460 0.5363414 0.5584363 0.5807697 0.5976703 0.6052291 #>   [52,] 0.30079828 0.4557239 0.4604964 0.4668121 0.5064915 0.5089135 0.5460592 #>   [53,] 0.30909478 0.4122957 0.4443338 0.5148636 0.5507568 0.6080807 0.6146055 #>   [54,] 0.44679529 0.5979869 0.6239978 0.6450007 0.6588832 0.6684813 0.7141968 #>   [55,] 0.39493483 0.7189337 0.7325849 0.7820193 0.7956558 0.8851459 0.9183576 #>   [56,] 0.77108036 0.7739000 0.8849005 1.0128512 1.0143645 1.0483008 1.0485667 #>   [57,] 1.06809997 1.1194318 1.1477217 1.1701542 1.2074811 1.2570268 1.2753155 #>   [58,] 0.28216295 0.5315811 0.5442454 0.5777386 0.5860639 0.6438529 0.6641861 #>   [59,] 0.30079828 0.3685412 0.4777388 0.4984471 0.5403586 0.5408612 0.5430500 #>   [60,] 0.54911110 0.5516193 0.5530989 0.5632359 0.6033952 0.6136931 0.6328436 #>   [61,] 0.34122072 0.4727413 0.6564684 0.7387685 0.7408450 0.7657995 0.8107526 #>   [62,] 0.55055151 0.6191030 0.7153343 0.7319123 0.8919309 0.8942781 0.9338844 #>   [63,] 0.29705996 0.3385839 0.3871598 0.3965733 0.4219363 0.4457944 0.5142917 #>   [64,] 0.36622729 0.5401748 0.5501888 0.6331443 0.6406151 0.6572527 0.6580332 #>   [65,] 0.33107636 0.4383762 0.4580981 0.5240442 0.5530773 0.5597366 0.5820901 #>   [66,] 0.32203921 0.5758201 0.6129005 0.7565578 0.7595649 0.7998382 0.8057038 #>   [67,] 0.18123428 0.2247761 0.3535610 0.4449773 0.4476027 0.4522011 0.5056599 #>   [68,] 0.60435857 0.6786997 0.7176058 0.7268410 0.7435517 0.7610829 0.7654996 #>   [69,] 0.27664042 0.3204728 0.4557351 0.4637480 0.4658812 0.5131093 0.5685631 #>   [70,] 0.33913853 0.5327866 0.5401326 0.5646179 0.5882994 0.6018892 0.7192089 #>   [71,] 1.12307012 1.1510827 1.3960860 1.4271978 1.4382767 1.5644678 1.5645816 #>   [72,] 0.51348972 0.7497786 0.8325341 0.9052252 0.9182730 0.9211586 0.9578495 #>   [73,] 0.47483946 0.5124828 0.5445280 0.6942919 0.7394045 0.7671737 0.7779473 #>   [74,] 0.28086047 0.5503859 0.6144341 0.6915212 0.7200344 0.7245419 0.7247015 #>   [75,] 0.49900188 0.6559805 0.7608997 0.7807986 0.8315845 0.9564623 0.9584158 #>   [76,] 0.32122941 0.3618321 0.4244000 0.5306241 0.5770327 0.6021410 0.6408433 #>   [77,] 0.23469512 0.4602847 0.4720188 0.4987859 0.5091005 0.5167166 0.5277868 #>   [78,] 0.30479762 0.3391635 0.5063407 0.5650311 0.5770906 0.6597076 0.6888894 #>   [79,] 0.62924214 0.6314090 0.6406151 0.6582699 0.6737791 0.6758646 0.6875514 #>   [80,] 0.56904812 0.6859744 0.7380836 0.7586343 0.8267148 0.8423138 0.8738400 #>   [81,] 0.59223534 0.7168694 0.7833911 0.8421403 0.8520914 0.8550891 0.8868579 #>   [82,] 0.47865278 0.5420481 0.5733051 0.6055804 0.6110951 0.6230804 0.6416285 #>   [83,] 0.86066125 0.9057307 0.9124006 0.9155128 1.0231323 1.0377061 1.0880106 #>   [84,] 0.24359580 0.3277844 0.3706551 0.4457944 0.4902789 0.4958329 0.5006587 #>   [85,] 0.66231896 0.6688171 0.6790670 0.6959096 0.7877392 0.8002646 0.8683374 #>   [86,] 0.48515156 0.6692237 0.6713260 0.6990829 0.7192089 0.7687596 0.8964001 #>   [87,] 0.59092394 0.7057831 0.8944402 1.1485202 1.2116049 1.2583307 1.2819676 #>   [88,] 0.30356128 0.4458033 0.4921373 0.5137588 0.5238729 0.5510023 0.5894836 #>   [89,] 0.51348972 0.7168694 0.8973275 0.9646826 1.0507968 1.0592801 1.0855428 #>   [90,] 0.26361745 0.4124633 0.4396310 0.5177602 0.5350481 0.6223870 0.6416088 #>   [91,] 0.37856273 0.5975214 0.6182114 0.8280729 0.8407136 1.0143645 1.1062100 #>   [92,] 0.26871382 0.2948741 0.4668583 0.5357019 0.5491028 0.5494312 0.5655405 #>   [93,] 0.46669479 0.4830185 0.5945708 0.6005074 0.6229000 0.6347234 0.6740533 #>   [94,] 0.30300129 0.3634852 0.4458159 0.5063407 0.5427644 0.5759731 0.5856994 #>   [95,] 0.64689821 0.6681432 0.6944857 0.7090391 0.7149802 0.7269772 0.7622951 #>   [96,] 1.27663782 1.3199883 1.3429736 1.3927013 1.5225969 1.5735084 1.6646843 #>   [97,] 0.27161819 0.2832884 0.4156592 0.4169496 0.4342024 0.4811261 0.4973792 #>   [98,] 0.30506160 0.3194291 0.3281084 0.3961910 0.4163083 0.4341561 0.4411914 #>   [99,] 0.40396385 0.4139184 0.4371033 0.4442663 0.5593100 0.6000728 0.6078117 #>  [100,] 0.65761819 0.6973730 0.7161104 0.7994855 0.8108696 0.9162485 0.9329003 #>  [101,] 1.00462535 1.1155603 1.2089960 1.2289036 1.2847375 1.2863212 1.3026685 #>  [102,] 0.46681560 0.4854513 0.4957370 0.5289293 0.5427244 0.5489620 0.5584724 #>  [103,] 1.16749318 1.4255889 1.4279828 1.4987907 1.5282706 1.5462409 1.5652861 #>  [104,] 0.20477493 0.3035613 0.4298739 0.4985570 0.5174136 0.5225285 0.5802836 #>  [105,] 0.18633895 0.5271518 0.6438529 0.6963515 0.8379191 0.9070472 0.9138439 #>  [106,] 0.35591332 0.4826891 0.5226356 0.6358919 0.7022439 0.7063970 0.7614513 #>  [107,] 0.40542765 0.4725956 0.5014818 0.6827531 0.7195405 0.7223956 0.7753567 #>  [108,] 0.79274619 1.0019605 1.0021622 1.1024913 1.1125834 1.1358275 1.1708466 #>  [109,] 0.47669145 0.7419817 0.8107973 0.8382090 0.8383188 0.8474351 0.9107903 #>  [110,] 0.31090010 0.4085609 0.4280404 0.5214387 0.5444096 0.5502744 0.6071493 #>  [111,] 0.32825925 0.5350481 0.5786985 0.6291793 0.6540990 0.7224357 0.7226135 #>  [112,] 0.28686090 0.4302441 0.4494518 0.5510449 0.5682325 0.6331443 0.6429299 #>  [113,] 0.79948551 0.8196111 1.1066756 1.1320754 1.1331090 1.1358607 1.2296081 #>  [114,] 0.56229503 0.6530955 0.8385358 0.8567284 0.9437740 0.9452377 0.9842884 #>  [115,] 0.68190952 0.6827447 0.7768682 0.8138382 0.8193365 0.8235315 0.8351158 #>  [116,] 0.86930839 1.0362540 1.0862733 1.1254669 1.2183347 1.2441587 1.2488673 #>  [117,] 0.37592993 0.3849360 0.5197947 0.6065952 0.6279872 0.6766668 0.6911579 #>  [118,] 0.46221343 0.4666948 0.5330444 0.5389871 0.5590301 0.5737281 0.5953139 #>  [119,] 0.32550489 0.4308553 0.4907520 0.4958329 0.4997769 0.5617512 0.5879947 #>  [120,] 0.44293350 0.6414365 0.7178992 0.7404217 0.8105483 0.8682396 0.8682856 #>  [121,] 0.46307862 0.5218040 0.5225292 0.5744182 0.5800488 0.6322197 0.6513177 #>  [122,] 0.41685071 0.4503196 0.4853777 0.5544627 0.5699273 0.6300052 0.6439718 #>  [123,] 0.68274466 0.7148144 0.7221509 0.7384849 0.8249689 0.9304241 0.9374137 #>  [124,] 0.19231943 0.5122173 0.6044755 0.6464817 0.6824075 0.7232993 0.7579198 #>  [125,] 0.74669942 0.8461728 0.9969150 1.1001628 1.1603534 1.1906359 1.2395521 #>  [126,] 0.58774456 0.6793334 0.7105331 0.9124348 0.9244259 0.9363978 0.9454073 #>  [127,] 0.30769230 0.3369371 0.3787409 0.3952376 0.5325051 0.5382691 0.5564518 #>  [128,] 0.20477493 0.3236194 0.3945256 0.3949709 0.4122181 0.4458033 0.4496528 #>  [129,] 0.42276881 0.5196309 0.7173120 0.7289646 0.7634717 0.7944741 0.8430509 #>  [130,] 0.51794009 0.5320436 0.6114427 0.6374624 0.6868356 0.7018262 0.7181447 #>  [131,] 0.21901959 0.3442668 0.4211578 0.4667251 0.4777388 0.4840807 0.5136652 #>  [132,] 0.69448565 0.7728496 0.8054622 0.8556766 0.9882101 1.0163488 1.0405976 #>  [133,] 0.26149733 0.5536779 0.5805117 0.9264914 1.0420040 1.0570509 1.0655072 #>  [134,] 1.80709210 1.8244310 1.9209557 2.3515958 2.3571517 2.4246918 2.4433042 #>  [135,] 0.30479762 0.3728543 0.3940977 0.4458159 0.6126769 0.6285474 0.6390523 #>  [136,] 0.33895971 0.3893701 0.5146600 0.5501531 0.5558873 0.5771503 0.5856428 #>  [137,] 0.39768837 0.4622134 0.5273851 0.5641110 0.6046100 0.6144341 0.6294244 #>  [138,] 0.35398966 0.4949763 0.5149624 0.5747679 0.5749712 0.5758722 0.6047057 #>  [139,] 0.37054568 0.3846383 0.4323529 0.6448516 0.6628599 0.6980144 0.7386627 #>  [140,] 0.39675821 0.5248954 0.5704979 0.6147307 0.6275605 0.6911977 0.6934924 #>  [141,] 0.75849192 0.7667794 0.7812949 0.7981856 0.8070816 0.8071421 0.8291045 #>  [142,] 0.19730777 0.3586291 0.4396310 0.5401326 0.6341855 0.6372363 0.6752942 #>  [143,] 0.48456116 0.5193571 0.5772534 0.6301383 0.7017327 0.7228086 0.7907077 #>  [144,] 0.51283692 0.8493569 0.8940551 0.9453259 0.9588525 0.9604495 0.9744449 #>  [145,] 0.60510531 0.6901113 0.7688724 0.8355959 0.8406920 0.8503548 0.8505269 #>  [146,] 0.38008246 0.5174469 0.5366706 0.5704215 0.5720472 0.6303604 0.6503433 #>  [147,] 0.51747476 0.8234325 1.0669753 1.1481907 1.2432246 1.4530704 1.4741310 #>  [148,] 0.41080444 0.6959096 0.8415028 0.8855237 0.8880658 0.9110587 0.9420925 #>  [149,] 1.11182729 1.1251754 1.1956069 1.3736494 1.4250998 1.4786682 1.5044132 #>  [150,] 0.38923661 0.4078134 0.5105065 0.5729184 0.5922590 0.6070615 0.6328591 #>  [151,] 0.37190259 0.7741268 0.9093037 0.9185741 0.9242594 0.9253622 0.9589677 #>  [152,] 0.20551770 0.3965078 0.4171115 0.4419081 0.4876206 0.4989057 0.5140563 #>  [153,] 0.61019624 0.6864077 0.7336901 0.8395836 0.9070571 0.9356061 0.9410593 #>  [154,] 0.61303925 0.6188304 0.6485613 0.7657118 0.7768925 0.7861819 0.7918673 #>  [155,] 0.42193626 0.4439451 0.4560308 0.4604964 0.5050148 0.5156682 0.5364841 #>  [156,] 0.66488688 0.8727621 0.9055905 1.0700655 1.0800431 1.0847188 1.2958173 #>  [157,] 0.80281371 1.0576050 1.2738280 1.2908589 1.3178518 1.3887935 1.4097812 #>  [158,] 0.08251857 0.3202838 0.3893701 0.4669771 0.5724690 0.5740952 0.5841150 #>  [159,] 0.59827147 0.6142320 0.6161719 0.6426543 0.6494894 0.6762068 0.7021157 #>  [160,] 0.60242534 0.6685740 0.7464622 0.8091821 0.9124871 0.9809949 1.1124419 #>  [161,] 0.67851441 0.7475206 0.7586343 0.8474387 0.8612843 0.8731496 0.9237617 #>  [162,] 0.38300885 0.4971060 0.5108319 0.5622689 0.6015676 0.6044755 0.6742913 #>  [163,] 0.50171175 0.5595339 0.6437879 0.6623004 0.6761119 0.6885849 0.7503674 #>  [164,] 0.32782375 0.4061939 0.5442454 0.6092659 0.6123959 0.6135846 0.6203217 #>  [165,] 0.93673888 1.0165897 1.1200171 1.2571968 1.2810157 1.4182489 1.4440918 #>  [166,] 0.28306922 0.3090948 0.3853429 0.4469073 0.5166841 0.5347049 0.5604893 #>  [167,] 0.92241698 1.0041062 1.0157440 1.1074777 1.1417448 1.1616740 1.2665790 #>  [168,] 0.28601925 0.4802877 0.6767893 0.7685148 0.7993516 0.8017269 0.8029323 #>  [169,] 0.27878599 0.4488099 0.4580025 0.4921715 0.5226356 0.7461676 0.7962490 #>  [170,] 0.32742239 0.4509385 0.5799741 0.6418114 0.6545629 0.6661913 0.6804626 #>  [171,] 0.66649237 0.7289566 0.7531020 0.7781384 0.8451637 0.8461061 0.8530819 #>  [172,] 0.21901959 0.3814825 0.4984471 0.5050149 0.5089135 0.5289326 0.5489104 #>  [173,] 0.37042558 0.3748601 0.5391089 0.6311570 0.6409155 0.6500649 0.6531734 #>  [174,] 0.66488688 0.8405405 0.9304993 0.9437669 0.9845772 1.1291551 1.1617313 #>  [175,] 0.53593978 0.5745735 0.6922306 0.9614575 0.9978652 1.0767146 1.1162551 #>  [176,] 0.43783131 0.4459178 0.4875241 0.5240737 0.5889597 0.6142320 0.6838235 #>  [177,] 0.24634607 0.3173907 0.4104085 0.4240440 0.4496528 0.4872628 0.5002663 #>  [178,] 0.64256880 0.7061322 0.7141463 0.7215714 0.7232993 0.7659614 0.8448669 #>  [179,] 0.36628368 0.4669771 0.4709372 0.4776989 0.5269695 0.5558873 0.5561521 #>  [180,] 1.31920961 1.6440642 1.8091262 1.8434842 1.9498530 1.9804297 1.9986874 #>  [181,] 0.43546370 0.7344356 0.7815346 0.8920985 1.1137932 1.1478094 1.1817211 #>  [182,] 0.67377664 0.8025185 0.8790075 0.9291908 0.9401235 0.9666808 0.9672264 #>  [183,] 0.34924946 0.4354957 0.4771222 0.4820945 0.5515438 0.6405955 0.6885843 #>  [184,] 0.41590068 0.4301620 0.4864748 0.6468469 0.6680145 0.6874523 0.6949055 #>  [185,] 0.21751155 0.3029812 0.4349080 0.4697516 0.4771438 0.4773597 0.4987859 #>  [186,] 0.30295729 0.3516502 0.6103558 0.6435669 0.7077074 0.7526434 0.8033506 #>  [187,] 0.33955421 0.4549501 0.5272792 0.5779029 0.5798669 0.6468002 0.6689514 #>  [188,] 0.21564834 0.5889597 0.6187888 0.6374284 0.6831110 0.6997379 0.7135592 #>  [189,] 0.78782572 0.8255702 0.8788397 0.8877099 0.8892744 0.9074713 0.9721013 #>  [190,] 0.51514554 0.5168043 0.5743189 0.5789114 0.6442138 0.7505992 0.7530720 #>  [191,] 0.74646223 0.7779154 0.7889787 0.9371384 1.0478407 1.0485667 1.0807722 #>  [192,] 0.57570301 0.6651967 0.6923974 0.7023209 0.7280067 0.7367542 0.7565874 #>  [193,] 0.44437883 0.4674799 0.5852641 0.5856428 0.5996138 0.6191242 0.6483370 #>  [194,] 0.36979432 0.3899449 0.4248871 0.4822640 0.5051880 0.5230753 0.5305691 #>  [195,] 0.53829382 0.6102383 0.6418114 0.6521596 0.7499530 0.7798792 0.8025185 #>  [196,] 0.43868757 0.4862272 0.7063970 0.7467186 0.8354277 0.9437305 0.9973785 #>  [197,] 0.16335137 0.2946289 0.3430245 0.3502076 0.3647143 0.5032840 0.5343555 #>  [198,] 0.32175657 0.3277844 0.3565147 0.3758164 0.4308553 0.4533355 0.5728312 #>  [199,] 0.76958516 0.9466156 0.9891210 1.0719087 1.1790514 1.2922184 1.3508964 #>  [200,] 0.26871382 0.3704476 0.4381357 0.4622735 0.4801513 0.4862545 0.5065325 #>  [201,] 0.34893160 0.4054277 0.4555493 0.4900403 0.5462548 0.5481900 0.5669713 #>  [202,] 0.65158393 0.6626830 0.6644675 0.6832722 0.7008561 0.7333116 0.7440060 #>  [203,] 0.33516363 0.5359541 0.5584559 0.6281270 0.7638553 0.8178721 0.8243404 #>  [204,] 0.33461341 0.3827563 0.4977339 0.5014291 0.5573282 0.5716806 0.5790573 #>  [205,] 0.62848784 0.9725958 1.0211071 1.0814176 1.1213197 1.1432801 1.1519308 #>  [206,] 0.36544526 0.5108544 0.5440500 0.6088997 0.6261305 0.6264702 0.6529757 #>  [207,] 0.19119865 0.2619565 0.4183204 0.4824404 0.5303405 0.5305691 0.5439449 #>  [208,] 0.60865670 0.8685995 0.9417848 1.1331090 1.1779231 1.2556026 1.2985542 #>  [209,] 0.32154753 0.3814825 0.4211578 0.4568264 0.4997769 0.5014291 0.5372568 #>  [210,] 0.61883037 0.6559523 0.6859186 0.6963881 0.7238201 0.7250596 0.7375038 #>  [211,] 0.42009776 0.4503940 0.5167553 0.5332695 0.5879256 0.5949924 0.6016056 #>  [212,] 0.46219264 0.5489156 0.6051535 0.7265301 0.7526546 0.7895365 0.8376908 #>  [213,] 0.28306922 0.5148636 0.5297576 0.5379057 0.6158332 0.6419256 0.6437349 #>  [214,] 0.39476493 0.4273674 0.4785127 0.4942636 0.4949205 0.5481625 0.5656577 #>  [215,] 0.30142877 0.5593168 0.5763977 0.5847714 0.5953139 0.6054537 0.6665222 #>  [216,] 0.35596670 0.4006144 0.4818862 0.5655159 0.6063359 0.6686268 0.6963881 #>  [217,] 0.31613550 0.4055515 0.4200514 0.4245837 0.4555194 0.4907996 0.5002663 #>  [218,] 0.28955356 0.2969058 0.3340049 0.3942302 0.4199190 0.4249568 0.4997707 #>  [219,] 0.29096480 0.3071609 0.4055515 0.4919746 0.5207816 0.6248968 0.6584648 #>  [220,] 0.17321531 0.2639242 0.3746465 0.3773212 0.4785127 0.5378144 0.5982043 #>  [221,] 0.30448802 0.5337852 0.6426474 0.6459555 0.6518106 0.6771212 0.7556536 #>  [222,] 0.48586904 0.5366706 0.5536213 0.5681319 0.6911410 0.7077540 0.7638553 #>  [223,] 0.56051232 0.6263591 0.7951173 0.8391085 0.8847027 0.8965293 1.0109512 #>  [224,] 0.23530578 0.3396067 0.5123068 0.5427380 0.5858242 0.6197520 0.7785499 #>  [225,] 0.24442825 0.2513010 0.3143395 0.6247551 0.6453987 0.6608659 0.6791091 #>  [226,] 0.50484430 0.6904654 0.7424494 0.9151752 0.9318542 0.9790811 1.0365884 #>  [227,] 0.53846852 0.5556561 0.8499612 0.9453259 0.9665417 0.9780526 0.9831634 #>  [228,] 0.68912892 0.7389815 0.7408450 0.7674939 0.7744798 0.8183187 0.8534578 #>  [229,] 0.38663098 0.4131254 0.4667251 0.5420481 0.5630024 0.5656736 0.5942101 #>  [230,] 1.00077117 1.2098417 1.3305540 1.3970234 1.3995860 1.4391758 1.4530704 #>  [231,] 0.17515454 0.2931238 0.4354957 0.4957370 0.5036000 0.5269116 0.6132478 #>  [232,] 0.43971723 0.5380106 0.5564518 0.5735190 0.5790573 0.5811772 0.6201964 #>  [233,] 0.45039396 0.4725956 0.5341163 0.5761745 0.5813677 0.6129541 0.7081499 #>  [234,] 0.61904931 0.9251998 0.9831634 0.9872804 0.9928351 0.9969150 1.0043725 #>  [235,] 0.61633703 0.7331541 0.9409469 0.9791345 1.1218063 1.1878096 1.1952520 #>  [236,] 0.43611187 0.4972769 0.5218748 0.5971045 0.6046914 0.6338066 0.6615659 #>  [237,] 0.30448802 0.5027035 0.5360068 0.6621926 0.6647618 0.6842067 0.7467153 #>  [238,] 0.56775846 0.6963515 0.7771968 1.0621761 1.0749882 1.0930035 1.0933495 #>  [239,] 0.61821136 0.6552984 0.7008561 0.7445796 0.8330104 0.8495751 0.8838775 #>  [240,] 0.50552381 0.5244318 0.6198225 0.6633261 0.7396112 0.7520302 0.7620870 #>  [241,] 0.22311976 0.3371321 0.4459178 0.5751907 0.5910346 0.5945413 0.6187888 #>  [242,] 0.20524659 0.2611718 0.3371321 0.3719139 0.5240737 0.5384451 0.5601903 #>  [243,] 0.57406440 0.6279872 0.7002856 0.7730388 0.7920457 0.8121714 0.8867037 #>  [244,] 0.55578851 0.6046671 0.6935579 0.7365497 0.7377775 0.7900894 0.8060516 #>  [245,] 0.23776229 0.4369028 0.4862545 0.5156261 0.5456250 0.5491028 0.5491111 #>  [246,] 0.24997751 0.2888402 0.3267518 0.3519539 0.3939100 0.4026749 0.4141515 #>  [247,] 0.62848784 1.0439089 1.1052575 1.3423886 1.4233242 1.4277366 1.4299831 #>  [248,] 0.95193604 0.9536464 0.9967080 1.0165897 1.0638464 1.0659621 1.1023860 #>  [249,] 0.31433954 0.3441214 0.4287676 0.4413238 0.4486791 0.4948648 0.5262266 #>  [250,] 0.79210093 0.8685995 1.1161382 1.2752111 1.3080934 1.3103431 1.4032183 #>  [251,] 0.49968944 0.5027035 0.5337852 0.5676495 0.6677208 0.6890639 0.7254453 #>  [252,] 0.75954805 0.8196164 0.9311286 0.9683923 1.0100125 1.1276589 1.1520022 #>  [253,] 0.35165024 0.4054241 0.5426372 0.6613450 0.6839377 0.8058893 0.8659156 #>  [254,] 0.41273197 0.7178992 0.9589677 0.9641849 0.9721013 1.0076619 1.0442192 #>  [255,] 0.56688930 0.6350033 0.9183576 0.9372790 1.1790514 1.2176699 1.2343628 #>  [256,] 0.74292670 0.8343664 0.9852739 1.0172983 1.0864524 1.2429250 1.4199128 #>  [257,] 0.55087948 0.6789966 0.7381103 0.7661654 0.7845607 0.8012367 0.8243678 #>  [258,] 0.43734585 0.6126958 0.7393121 0.7437849 0.8196944 0.8216791 0.8530801 #>  [259,] 0.95246655 1.2429699 1.4040245 1.4189796 1.4334735 1.4553728 1.5306088 #>  [260,] 0.59092394 0.7165929 0.7645992 0.9526418 0.9831190 0.9882694 1.0390836 #>  [261,] 0.25401368 0.5271395 0.6949067 0.7036595 0.7124086 0.7290141 0.7337862 #>  [262,] 0.38008246 0.4051110 0.4499029 0.5077115 0.5640228 0.5668903 0.6012427 #>  [263,] 0.47378498 0.7157327 0.7526546 0.7532037 0.8012656 0.8207587 0.8466367 #>  [264,] 0.23017524 0.2362510 0.2505541 0.2888402 0.3952240 0.4289505 0.5045026 #>  [265,] 0.92912468 1.0524651 1.3206137 1.3775153 1.4628882 1.4745637 1.4757093 #>  [266,] 0.26445135 0.5197947 0.5271395 0.6397252 0.7120910 0.7510291 0.8121714 #>  [267,] 0.38833815 0.5206723 0.5983014 0.6052681 0.6191242 0.6212156 0.6435723 #>  [268,] 0.47274128 0.5539597 0.5939476 0.6083871 0.6146372 0.6481409 0.7081471 #>  [269,] 0.39174712 0.3974931 0.3999138 0.4182693 0.4811261 0.4910706 0.5094077 #>  [270,] 0.51622749 0.5600224 0.6301383 0.7450067 0.8113559 0.8900779 0.9056503 #>  [271,] 0.27025056 0.3168458 0.4108726 0.5668994 0.6004276 0.6191246 0.6378444 #>  [272,] 0.31156159 0.3967582 0.6095624 0.6785144 0.6840467 0.7186762 0.7380836 #>  [273,] 0.48964122 0.7204560 0.7966502 0.9058021 0.9321636 1.0576039 1.0860069 #>  [274,] 1.75709465 1.9530654 1.9621119 2.0882192 2.0909319 2.1846034 2.2606986 #>  [275,] 0.30753851 0.3632984 0.3983924 0.4338996 0.4650560 0.4807926 0.4869037 #>  [276,] 0.44244519 0.5239225 0.5775874 0.5809533 0.5852641 0.6309643 0.6375235 #>  [277,] 0.53604942 0.5809784 0.6723120 0.6937390 0.8033506 0.8557962 0.9206419 #>  [278,] 0.40135778 0.4771438 0.4803893 0.5142743 0.5167166 0.5405902 0.5666862 #>  [279,] 0.34854309 0.5656623 0.6427296 0.6937850 0.8096520 0.9601893 1.0327279 #>  [280,] 0.34097658 0.5757183 0.8461882 0.8544188 0.8763056 0.8771065 0.8785884 #>  [281,] 0.56566234 0.6093981 0.7555970 0.7837305 0.8168711 1.0379303 1.0406753 #>  [282,] 1.09312923 1.1264843 1.2432967 1.2538711 1.4581999 1.4601077 1.4762157 #>  [283,] 0.35725147 0.5401219 0.6546179 0.6547907 0.7306714 0.7783759 0.8745025 #>  [284,] 0.43485712 0.5772534 0.6237160 0.6935797 0.6963332 0.7138276 0.7616298 #>  [285,] 0.44624308 0.4857908 0.4923572 0.5251352 0.5732260 0.5908652 0.6129458 #>  [286,] 0.48579078 0.5304625 0.5415076 0.5516804 0.5869491 0.6187994 0.6401527 #>  [287,] 0.61842984 0.6786797 0.7002856 0.7581800 0.7879035 0.8009699 0.8052321 #>  [288,] 0.65294791 0.6688171 0.7356954 0.7427386 0.7558679 0.8514475 0.8736318 #>  [289,] 0.35805071 0.4766878 0.5147545 0.5213317 0.5801831 0.6142137 0.6547724 #>  [290,] 0.26149733 0.5941368 0.7527116 1.0191254 1.0274269 1.0547003 1.0595556 #>  [291,] 0.19119865 0.2485064 0.3523999 0.3926176 0.4833831 0.5652899 0.5946831 #>  [292,] 0.82255792 0.9391717 0.9572128 1.0523702 1.0644494 1.0767146 1.1167754 #>  [293,] 0.42767510 0.5273851 0.5389871 0.5945708 0.6151708 0.6945799 0.7463939 #>  [294,] 0.35820314 0.5315811 0.5619246 0.5667394 0.6012034 0.6072804 0.6114427 #>  [295,] 0.20018385 0.2557875 0.3403952 0.4011844 0.4516372 0.4806257 0.5151455 #>  [296,] 0.55844365 0.6064437 0.7151564 0.7530720 0.7957290 0.8148026 0.8207587 #>  [297,] 0.38689143 0.5066112 0.5320245 0.5431665 0.5959221 0.6476555 0.6791352 #>  [298,] 0.25578753 0.3342785 0.5168043 0.5288416 0.6308023 0.6445227 0.6566873 #>  [299,] 0.45789396 0.5243941 0.7734322 0.7781384 0.7880697 0.7951240 0.8093278 #>  [300,] 0.27878599 0.3819807 0.4826891 0.6029651 0.6640875 0.7394081 0.8030123 #>  [301,] 0.42602438 0.6442138 0.7148594 0.7493914 0.7715875 0.8222286 0.8822187 #>  [302,] 0.74669942 0.8935168 0.9588525 0.9677809 0.9831404 1.0046254 1.0417246 #>  [303,] 0.91644641 1.0109512 1.1295888 1.1379022 1.1676110 1.3381313 1.3392606 #>  [304,] 0.36655105 0.4226697 0.4821518 0.5089932 0.5815658 0.6253706 0.6370944 #>  [305,] 0.39165696 0.4337550 0.4495928 0.4579772 0.4763486 0.4881157 0.5672049 #>  [306,] 0.45064623 0.5304912 0.5672535 0.5704450 0.6229712 0.6756819 0.6770834 #>  [307,] 0.34122072 0.4509998 0.4861008 0.5631227 0.6369279 0.6383539 0.6481409 #>  [308,] 0.62308038 0.6529479 0.6758378 0.6759327 0.6839240 0.7441486 0.7816450 #>  [309,] 0.49559525 0.6468982 0.7357619 0.8054622 0.8591846 0.8896104 0.9005771 #>  [310,] 1.66723531 1.6991170 1.7556121 1.7593284 1.7752385 1.8063187 1.9117680 #>  [311,] 0.31739068 0.3480395 0.3945256 0.5174136 0.5473133 0.5510023 0.5667809 #>  [312,] 0.37657103 0.4617612 0.4702545 0.6576182 0.6668781 0.6695607 0.7361380 #>  [313,] 0.38047207 0.4735541 0.6518904 0.6973398 0.7333116 0.7431527 0.7963710 #>  [314,] 0.12174573 0.5669013 0.5976703 0.6043586 0.6117496 0.6221473 0.6916559 #>  [315,] 0.34924946 0.4913954 0.5579043 0.6623004 0.6975617 0.7063873 0.7276227 #>  [316,] 0.36378665 0.4517001 0.5151031 0.5593225 0.5652559 0.5806789 0.5843107 #>  [317,] 0.26231219 0.3403952 0.4232369 0.4562753 0.4692751 0.4791627 0.4835713 #>  [318,] 0.72444949 0.7469406 0.7595480 0.8657321 0.8725707 0.8840534 0.8905420 #>  [319,] 0.33348333 0.4990196 0.5122173 0.6294519 0.6324910 0.6742913 0.6848153 #>  [320,] 0.62685643 0.7591289 0.8142788 0.8146468 0.8520574 0.9206419 0.9503028 #>  [321,] 0.69655618 0.7157327 0.7290322 0.7542938 0.8096278 0.9046354 0.9555794 #>  [322,] 0.37795906 0.5815460 1.0656377 1.0894078 1.0990921 1.1090498 1.1141702 #>  [323,] 0.59302027 0.6416088 0.7071421 0.7312143 0.8744243 0.8920804 0.8981663 #>  [324,] 0.56909515 0.5719704 0.6863163 0.7130415 0.7161537 0.7257404 0.7504386 #>  [325,] 0.33051150 0.4527824 0.4972676 0.6035550 0.6133253 0.6240290 0.6250859 #>  [326,] 0.72470146 0.7424133 0.7722280 0.8860461 0.9047770 0.9146406 0.9462855 #>  [327,] 0.40961744 0.4705046 0.5134419 0.5903200 0.6347234 0.7202461 0.7477448 #>  [328,] 0.94178479 1.1023860 1.1320754 1.4632099 1.5208933 1.5594303 1.5952807 #>  [329,] 0.68912892 0.7824216 0.8036139 0.8461061 0.8944402 1.0286607 1.0362301 #>  [330,] 0.18476655 0.3980165 0.5454974 0.5583671 0.6495592 0.6551087 0.6653110 #>  [331,] 0.30613672 0.3580507 0.5737033 0.5893216 0.6327976 0.6345145 0.6846897 #>  [332,] 0.53717745 0.5389364 0.5427644 0.5444096 0.5740067 0.6226147 0.6239978 #>  [333,] 0.37261992 0.4877748 0.5509453 0.5672440 0.5985584 0.6493967 0.6511001 #>  [334,] 0.37054568 0.5327298 0.5591274 0.5892841 0.6682378 0.7316927 0.7645229 #>  [335,] 0.24778621 0.2788582 0.3828871 0.4506462 0.4977339 0.5055929 0.5143708 #>  [336,] 0.37874094 0.4190630 0.4778522 0.5583584 0.5696069 0.5735190 0.5789114 #>  [337,] 0.41870462 0.5143708 0.5339270 0.5613954 0.5742257 0.5901557 0.5943029 #>  [338,] 0.80536575 1.2462577 1.3707152 1.3862486 1.3933694 1.4134314 1.4223184 #>  [339,] 0.59223534 0.6479399 0.7006456 0.7787363 0.8029323 0.8356952 0.8677668 #>  [340,] 0.17515454 0.2801641 0.4668156 0.4820945 0.5090536 0.5724860 0.6129909 #>  [341,] 0.61249638 0.7915109 0.7945429 0.8110298 0.8642915 0.8815252 0.9513666 #>  [342,] 0.49235718 0.4942696 0.5218040 0.5356695 0.5903036 0.6088724 0.6513279 #>  [343,] 0.21751155 0.2486374 0.2704184 0.4304254 0.4910706 0.5293803 0.5398231 #>  [344,] 0.43783131 0.4970339 0.5365743 0.5384451 0.5537049 0.5540681 0.5566204 #>  [345,] 0.30295729 0.4054241 0.4618434 0.7248532 0.7556329 0.7728924 0.7825155 #>  [346,] 0.31865059 0.5408612 0.5656736 0.5880962 0.6113862 0.6381846 0.6928123 #>  [347,] 0.22783220 0.2999224 0.3502076 0.4416675 0.4440449 0.4663452 0.5128283 #>  [348,] 0.53604942 0.5426983 0.6393721 0.6689514 0.6721172 0.7173864 0.7591289 #>  [349,] 0.58774456 0.7692025 0.8506729 0.8933690 0.9989787 1.0293950 1.0420955 #>  [350,] 0.55844365 0.6207202 0.6385229 0.7468215 0.7603127 0.7748773 0.8185371 #>  [351,] 0.74917426 0.9115195 0.9332189 0.9405178 1.0308424 1.0441970 1.1753585 #>  [352,] 0.33716792 0.3554676 0.5271486 0.6543397 0.7728129 0.7781706 0.7992024 #>  [353,] 1.08036731 1.1230745 1.1952481 1.2121691 1.2456925 1.2687421 1.2750782 #>  [354,] 0.80538784 0.8920985 0.9503583 1.1780766 1.2233030 1.2329641 1.2370926 #>  [355,] 0.23357173 0.2878990 0.3681476 0.3755080 0.5061161 0.5087746 0.5126216 #>  [356,] 0.47050459 0.6657414 0.7133062 0.7229364 0.7330898 0.7527520 0.7748020 #>  [357,] 0.51773276 0.5440500 0.6555442 0.6647689 0.6715624 0.6768154 0.6860781 #>  [358,] 0.42314698 0.4249568 0.4320065 0.4445580 0.5466209 0.5483717 0.5502744 #>  [359,] 0.40285513 0.4495928 0.4715321 0.4892756 0.5454974 0.5546637 0.5789740 #>  [360,] 0.20018385 0.3342785 0.3406371 0.4341561 0.4418389 0.4791627 0.4916085 #>  [361,] 0.30179066 0.4007912 0.4375850 0.4759808 0.4902789 0.5602613 0.5894852 #>  [362,] 0.61023830 0.6804626 0.7165358 0.7400270 0.7406642 0.7654996 0.7723785 #>  [363,] 0.39237179 0.4218059 0.4517605 0.5629871 0.5753217 0.6008462 0.6134636 #>  [364,] 0.49252024 0.5009735 0.7204560 0.7715875 0.7887490 0.9261705 0.9898672 #>  [365,] 0.47669145 0.5539597 0.6560698 0.6774535 0.6867288 0.6868065 0.6957466 #>  [366,] 0.59673300 0.7003675 0.7073873 0.7690127 0.7953481 0.8642915 1.0296612 #>  [367,] 0.53663006 0.5715972 0.6346743 0.6375514 0.6711839 0.6929153 0.6980144 #>  [368,] 0.82807292 0.8644959 0.9003598 0.9791795 1.0259557 1.0685229 1.1340172 #>  [369,] 0.17321531 0.2907930 0.3517150 0.4273674 0.4720188 0.4801595 0.4985213 #>  [370,] 0.18633895 0.5677585 0.6974104 0.8138376 0.9219311 0.9313451 0.9648434 #>  [371,] 0.58165514 0.5898362 0.6485613 0.6752942 0.7323497 0.7371230 0.7417141 #>  [372,] 0.37240974 0.4064138 0.4513686 0.5172623 0.5355298 0.6053126 0.6077976 #>  [373,] 0.50866762 0.5740644 0.5942177 0.6184298 0.6379249 0.6397252 0.6766668 #>  [374,] 1.75661540 1.8450851 1.8994373 1.9555851 2.0065315 2.0794730 2.1063983 #>  [375,] 0.43375502 0.5546637 0.5935788 0.6408372 0.6687542 0.6751712 0.6818849 #>  [376,] 0.36814765 0.3847786 0.3959542 0.4335672 0.4508878 0.5029404 0.5241491 #>  [377,] 0.29690577 0.3697943 0.3722131 0.5202886 0.5240084 0.5251358 0.5416257 #>  [378,] 1.12765893 1.1617313 1.2276180 1.2333294 1.2405593 1.3154454 1.3206137 #>  [379,] 0.31777450 0.6046190 0.7151564 0.7165929 0.7468215 0.7663198 0.8568059 #>  [380,] 1.07078497 1.2243235 1.3298505 1.3361595 1.5915103 1.5919912 1.5952468 #>  [381,] 0.17060468 0.2362510 0.3073808 0.3849523 0.4141515 0.4236662 0.4718514 #>  [382,] 0.63341221 0.6758378 0.7105710 0.7191353 0.7758646 0.7885021 0.8030875 #>  [383,] 0.35860761 0.3899449 0.4168507 0.5202886 0.5211175 0.5636113 0.6035745 #>  [384,] 0.68393771 0.8144011 0.8313339 1.0524651 1.0807850 1.1384703 1.1473590 #>  [385,] 0.38801460 0.4816196 0.5149624 0.5597335 0.5866919 0.5921308 0.6198539 #>  [386,] 0.37269262 0.3728543 0.4331498 0.5129050 0.5650311 0.5739088 0.6949055 #>  [387,] 0.95764159 1.0284117 1.1470986 1.1742972 1.3193127 1.3618710 1.3929392 #>  [388,] 0.49913431 0.6266850 0.6582699 0.6992041 0.7134074 0.7233620 0.7634721 #>  [389,] 0.99615897 1.0074828 1.1295888 1.1845858 1.2561943 1.3528661 1.3644983 #>  [390,] 0.29487406 0.3582031 0.4622735 0.4638556 0.4847466 0.5344022 0.5443182 #>  [391,] 1.08483194 1.1030793 1.3003762 1.3704923 1.4443850 1.4756071 1.4796430 #>  [392,] 0.63590010 0.6835802 0.7136332 0.7284343 0.7376919 0.7505992 0.7738050 #>  [393,] 0.50433080 0.7556170 0.8112442 0.8124679 0.8509671 0.9297051 0.9363658 #>  [394,] 0.48622719 0.6651181 0.7568072 0.8078562 1.0309572 1.0648231 1.0847978 #>  [395,] 0.69964787 0.8168489 0.8612843 0.9426300 0.9876092 1.0518637 1.0654127 #>  [396,] 0.63221967 0.6505391 0.6768659 0.6868700 0.7620602 0.7699229 0.7963198 #>  [397,] 0.50778236 0.5942373 0.6008128 0.6577957 0.7870127 0.7968558 0.8260345 #>  [398,] 0.64266100 0.6483195 0.6749993 0.7213514 0.7771770 0.7860585 0.8302620 #>  [399,] 0.77108036 1.0478407 1.1502917 1.2429470 1.2622582 1.2794899 1.3594908 #>  [400,] 0.60156054 0.8309377 0.8742567 0.8997621 0.9229262 1.0536440 1.0753792 #>  [401,] 0.29981865 0.4759381 0.4801513 0.4956701 0.5190625 0.5441670 0.5471869 #>  [402,] 0.33348333 0.5186725 0.5539152 0.5622689 0.5758722 0.6078385 0.6464817 #>  [403,] 0.22477613 0.2709687 0.4562753 0.4641039 0.4960628 0.5198857 0.5331268 #>  [404,] 0.50552381 0.5261399 0.5536779 0.7527116 0.7728496 0.8505550 0.9018789 #>  [405,] 0.57934246 0.7370893 0.7721150 0.7932420 0.8441321 0.8769871 0.9036718 #>  [406,] 0.19912319 0.2221535 0.3329455 0.3832908 0.4199190 0.4288252 0.4342024 #>  [407,] 0.32829602 0.3713976 0.4149634 0.4702545 0.4948648 0.5201188 0.5359571 #>  [408,] 1.44353082 1.6467644 1.7274885 1.7539773 1.7676139 1.8118981 1.8350511 #>  [409,] 0.26445135 0.6911579 0.6990133 0.7124086 0.7162156 0.7650673 0.7731901 #>  [410,] 0.25130103 0.3441214 0.4815718 0.5250253 0.5275370 0.6014184 0.6455623 #>  [411,] 0.14537611 0.4556315 0.4686104 0.4876206 0.5384882 0.5639767 0.5751000 #>  [412,] 0.16294453 0.3329455 0.3643884 0.4309863 0.4954945 0.5029404 0.5040281 #>  [413,] 0.39237179 0.4282303 0.4383547 0.4763411 0.4878097 0.5154827 0.5269889 #>  [414,] 0.49314028 0.7722280 0.8842289 0.8876741 0.9560043 1.0053762 1.0196129 #>  [415,] 0.54068112 0.5596423 0.5916973 0.6369037 0.6480868 0.6540990 0.6682059 #>  [416,] 0.34114560 0.5043308 0.5431665 0.6784060 0.7692991 0.8132709 0.8141495 #>  [417,] 0.43235285 0.5839422 0.6155998 0.6305562 0.6609561 0.6624870 0.6682378 #>  [418,] 0.70285048 0.7215714 0.7505091 0.7513484 0.8053635 0.8283192 0.8326396 #>  [419,] 0.50173943 0.6110649 0.7070969 0.7144262 0.7344550 0.7454480 0.7469406 #>  [420,] 0.56002243 0.7581030 0.9022590 0.9201401 0.9640532 1.0971237 1.1588577 #>  [421,] 0.35220251 0.4925202 0.7307232 0.7472823 0.7493914 0.7781336 0.8319861 #>  [422,] 0.50866762 0.5745570 0.6651722 0.6741880 0.7048155 0.7126777 0.8890255 #>  [423,] 0.36937303 0.4580320 0.4759381 0.5112464 0.5161952 0.5290678 0.5384882 #>  [424,] 0.35220251 0.5009735 0.7966502 0.8738491 0.8947064 0.9152315 0.9435427 #>  [425,] 0.37843876 0.3862507 0.4335672 0.5664901 0.5741157 0.5756334 0.6604244 #>  [426,] 0.38275627 0.3828871 0.4401391 0.4509998 0.5213623 0.5263879 0.5288887 #>  [427,] 0.25537230 0.5745570 0.5942177 0.5959221 0.6786797 0.7195483 0.7556170 #>  [428,] 1.40089580 1.4114812 1.6417303 1.7589363 1.9037762 1.9423500 2.0277246 #>  [429,] 0.82310722 1.0163488 1.0332231 1.1195075 1.1380909 1.1775729 1.1899789 #>  [430,] 0.45768310 0.4987332 0.5122122 0.5510684 0.5906991 0.5950993 0.6045558 #>  [431,] 0.31164138 0.3880146 0.4249013 0.5035106 0.5455672 0.5551821 0.5685631 #>  [432,] 0.80918207 0.8904828 0.9008486 1.1003776 1.1169054 1.1479728 1.1722021 #>  [433,] 0.47179280 0.4939649 0.5129050 0.5211333 0.6396292 0.7047325 0.7065787 #>  [434,] 0.52874310 0.6324143 0.7239818 0.7858055 0.7956664 0.8165019 0.8253858 #>  [435,] 0.33960674 0.5072399 0.6446773 0.6536386 0.6661816 0.6988452 0.7029013 #>  [436,] 0.41685006 0.5354866 0.6113862 0.6127771 0.6365716 0.6599165 0.6710285 #>  [437,] 0.19212176 0.4226697 0.4437505 0.4833831 0.5357689 0.5434177 0.5521316 #>  [438,] 0.33861772 0.7426337 0.7965212 0.9405178 1.0172983 1.0447807 1.1930541 #>  [439,] 0.37089696 0.6414317 0.6513177 0.6513279 0.7030771 0.7053925 0.7484992 #>  [440,] 0.44472086 0.4947689 0.5279976 0.5287459 0.5427380 0.5707398 0.5879256 #>  [441,] 0.53272978 0.7021439 0.7231670 0.7578853 0.7660565 0.7778775 0.8746449 #>  [442,] 0.83951520 0.9003598 0.9409469 1.0186633 1.0753158 1.0979386 1.1205528 #>  [443,] 0.32742239 0.4397488 0.4479293 0.4550655 0.6000728 0.6494642 0.6591486 #>  [444,] 0.44916693 0.4991343 0.5569658 0.5841150 0.5882276 0.6081439 0.6126571 #>  [445,] 0.60799349 0.6281270 0.7669429 0.8418070 1.0266394 1.0630114 1.0720858 #>  [446,] 0.47289738 0.5739778 0.6666765 0.6840951 0.7169366 0.7232774 0.7580489 #>  [447,] 0.46142333 0.6559523 0.6559805 0.6651722 0.6793334 0.7850545 0.8471902 #>  [448,] 1.20939144 1.2402423 1.2495558 1.3022366 1.3494722 1.3594908 1.3742346 #>  [449,] 0.26280207 0.3109272 0.3138135 0.3806428 0.6024869 0.6077976 0.6369121 #>  [450,] 0.33461341 0.3442668 0.3866310 0.5289326 0.5372568 0.5380106 0.5407007 #>  [451,] 0.39917065 0.3997512 0.4674799 0.5771503 0.6009565 0.6843317 0.6861477 #>  [452,] 0.28643732 0.3402555 0.3647143 0.4656574 0.4658705 0.5128283 0.5151779 #>  [453,] 0.37681996 0.4074187 0.4234172 0.4392803 0.4411914 0.4522011 0.4662350 #>  [454,] 0.23357173 0.3155262 0.3918509 0.5287666 0.5339531 0.5515561 0.5664964 #>  [455,] 0.41080444 0.7877392 0.9486011 0.9933545 1.0439089 1.1169341 1.1289329 #>  [456,] 0.35567330 0.3662273 0.4413238 0.5201188 0.5275370 0.5322632 0.5463087 #>  [457,] 0.09793014 0.3588884 0.3836579 0.3849811 0.4026749 0.4346651 0.4547941 #>  [458,] 0.33861772 0.5279176 0.7429267 0.9194734 1.0157841 1.0441970 1.1264843 #>  [459,] 0.37786309 0.4149634 0.5250253 0.6357301 0.6453203 0.6695607 0.6791091 #>  [460,] 0.64793993 0.6737766 0.7833911 0.8053635 0.9896717 1.0370066 1.0465927 #>  [461,] 0.56411097 0.5737281 0.6151708 0.7215075 0.7795634 0.7819732 0.7943964 #>  [462,] 0.17505266 0.3203489 0.3620099 0.5355005 0.5414600 0.5435055 0.5490294 #>  [463,] 0.53595412 0.5681319 0.7041623 0.7042716 0.8418070 0.8575791 0.8727119 #>  [464,] 0.79727088 0.9007417 0.9308130 0.9316937 1.0013297 1.0655383 1.0685419 #>  [465,] 0.62685643 0.6435669 0.6444876 0.6723120 0.6733536 0.7173864 0.7556329 #>  [466,] 0.52768623 0.5649872 0.6338066 0.7480970 0.8013397 0.8325139 0.8761250 #>  [467,] 0.29506494 0.3965078 0.5177159 0.5641259 0.6196483 0.6290126 0.6357158 #>  [468,] 0.23676412 0.3116414 0.4816196 0.5812638 0.5938087 0.6146145 0.6371241 #>  [469,] 0.79534807 0.9606588 1.0224230 1.1549013 1.2554544 1.2681026 1.3736494 #>  [470,] 0.59094141 0.6312519 0.6598473 0.6842928 0.9213292 0.9423853 0.9859876 #>  [471,] 0.42842447 0.5764812 0.6426474 0.6497615 0.7262751 0.7480970 0.7508222 #>  [472,] 0.54179871 0.6084815 0.6918275 0.7034378 0.7163240 0.7272024 0.7404217 #>  [473,] 0.41917228 0.4195211 0.5082490 0.5503859 0.5677666 0.5763977 0.5786985 #>  [474,] 0.28753269 0.3668731 0.3963619 0.4509238 0.4655731 0.5346354 0.5849770 #>  [475,] 0.75788525 0.9790811 1.0023212 1.0239386 1.0674116 1.1302608 1.1795602 #>  [476,] 0.22009058 0.5936759 0.8427534 0.8876741 0.9274014 0.9350450 0.9817766 #>  [477,] 0.37864887 0.4390246 0.4706776 0.4814762 0.5213863 0.5400213 0.5623398 #>  [478,] 0.52443185 0.7174918 0.7195483 0.7225592 0.7313639 0.7390628 0.8511439 #>  [479,] 0.51825972 0.6663023 0.6900279 0.7141463 0.7168950 0.7186608 0.7513484 #>  [480,] 0.24359580 0.3217566 0.3760308 0.4007912 0.4035277 0.4434374 0.5823603 #>  [481,] 0.41229566 0.4469073 0.4774407 0.5297576 0.5552023 0.5735306 0.5944636 #>  [482,] 0.41312542 0.5602579 0.6085293 0.6110951 0.6554410 0.6888947 0.7512221 #>  [483,] 0.33913853 0.4083133 0.5898362 0.5967172 0.6445021 0.6758119 0.6990829 #>  [484,] 1.00437246 1.3710958 1.3786229 1.4604084 1.4886643 1.4943511 1.5142226 #>  [485,] 0.28216295 0.5271518 0.5320436 0.6012034 0.6092659 0.6344415 0.6974104 #>  [486,] 0.35398966 0.5968961 0.6078385 0.6539331 0.6619150 0.6749993 0.6754915 #>  [487,] 0.48223849 0.4886463 0.6762780 0.7191353 0.8344054 0.8474372 0.9095290 #>  [488,] 0.61470232 0.6691273 0.7289009 0.7439946 0.7688190 0.7834088 0.8043531 #>  [489,] 0.72174824 0.8727621 1.1886693 1.2867402 1.3916831 1.4008958 1.6007353 #>  [490,] 0.50484430 0.6646966 0.7019912 0.7825501 0.7845607 0.8245678 0.8670778 #>  [491,] 0.08692040 0.1966582 0.3302554 0.3836579 0.3878184 0.4466637 0.4650560 #>  [492,] 0.43080652 0.4803893 0.4814609 0.5355462 0.5589579 0.5967867 0.6292421 #>  [493,] 1.16749318 1.2775070 1.3338929 1.3744239 1.4747958 1.4762461 1.5097560 #>  [494,] 0.60799349 0.9024351 0.9509731 0.9700352 1.0323651 1.0374118 1.0632120 #>  [495,] 0.24863740 0.3029812 0.3772612 0.3999138 0.4060833 0.4169496 0.5142743 #>  [496,] 0.32028376 0.3461473 0.4729973 0.4870009 0.5569658 0.5690278 0.5730288 #>  [497,] 0.45797725 0.4642702 0.5335959 0.5417987 0.5451690 0.5997382 0.6088710 #>  [498,] 0.71485943 0.7651828 0.9045263 0.9323836 0.9700352 0.9869686 1.0564321 #>  [499,] 0.28739585 0.5193571 0.6004276 0.6501507 0.6876804 0.6908618 0.7525574 #>  [500,] 0.46818529 0.6480133 0.7073873 0.7398845 0.7521892 0.7650004 0.8319218 #>  [501,] 0.58561347 0.9142738 0.9454073 0.9455397 1.0544779 1.1783631 1.2086556 #>  [502,] 0.08251857 0.3389597 0.3461473 0.4776989 0.5407808 0.5686652 0.6081439 #>  [503,] 0.23776229 0.4381357 0.4656574 0.5558087 0.5578898 0.5655405 0.5768428 #>  [504,] 0.60242534 0.7889787 0.8730947 0.9013571 1.2957781 1.3000782 1.3022366 #>  [505,] 0.36831502 0.4822640 0.4830185 0.5081476 0.5134419 0.5211175 0.5798589 #>  [506,] 0.47062825 0.5382938 0.5570740 0.5869437 0.5988571 0.6285716 0.6546507 #>  [507,] 0.24634607 0.2829558 0.3161355 0.3437185 0.3480395 0.3949709 0.4658705 #>  [508,] 0.46307862 0.4802877 0.5290812 0.6136998 0.6145078 0.6824075 0.7053925 #>  [509,] 0.34854309 0.7567929 0.8168711 0.8396353 0.8669018 0.8908899 0.9096038 #>  [510,] 1.24873302 1.2525037 1.2738067 1.3051090 1.3164772 1.4663136 1.4786565 #>  [511,] 0.25659161 0.4535740 0.4647846 0.4789001 0.4790036 0.4911753 0.5007537 #>  [512,] 0.64450212 0.7538365 0.7687596 0.7991160 0.8338300 0.8727042 0.9120959 #>  [513,] 0.24836978 0.3794663 0.5677666 0.5916973 0.6341855 0.6665222 0.6698317 #>  [514,] 0.38486936 0.3849523 0.4641601 0.4735541 0.5324600 0.5718985 0.5758201 #>  [515,] 0.56913667 0.7328383 0.8216430 0.8840100 0.9229262 1.0068439 1.0389721 #>  [516,] 0.48964122 0.9882811 0.9898672 1.0309317 1.2415938 1.2437406 1.2464593 #>  [517,] 0.34114560 0.5320245 0.5976816 0.6087374 0.6309471 0.7100166 0.7234823 #>  [518,] 0.28939092 0.7561596 0.7739000 0.7779154 0.8407136 0.8495751 0.9809949 #>  [519,] 0.33106919 0.3849413 0.4094390 0.4149321 0.4462521 0.5737033 0.5801831 #>  [520,] 0.51283692 0.5690951 0.6627104 0.6793102 0.7183519 0.7438016 0.7626898 #>  [521,] 0.27041845 0.2973363 0.3326958 0.3967767 0.4060833 0.4349080 0.4518266 #>  [522,] 0.54738155 0.6187345 0.6844208 0.7640731 0.7788246 0.8635399 0.9119740 #>  [523,] 0.52189471 0.6755866 0.7348125 0.7902633 0.9072679 0.9445646 0.9581181 #>  [524,] 0.55954054 0.5750470 0.6996479 0.7290642 0.7810616 0.7838725 0.8474387 #>  [525,] 0.36282464 0.5252942 0.5556561 0.5757183 0.8527349 0.8717538 1.0215167 #>  [526,] 0.52791759 0.6864077 0.7965212 0.8343664 1.0411350 1.0664360 1.0827126 #>  [527,] 1.16761096 1.2561943 1.6391758 1.6892704 1.7227052 1.8535430 1.9589115 #>  [528,] 0.27430991 0.4676892 0.5287431 0.5418714 0.6174531 0.6477090 0.7129591 #>  [529,] 0.77967256 0.8140504 0.8964562 0.9062245 0.9299038 0.9669062 0.9952032 #>  [530,] 0.68261679 0.7239818 0.8470201 0.9250882 0.9362890 1.0098736 1.0740885 #>  [531,] 0.55805778 0.7451772 0.9646826 1.0956284 1.1014043 1.1198649 1.1357639 #>  [532,] 1.52855757 2.2963392 2.3757753 2.3852870 2.3873380 2.4187600 2.5250859 #>  [533,] 0.32361939 0.3345694 0.3437185 0.3529483 0.4015674 0.4298739 0.4854513 #>  [534,] 0.46151163 0.5435055 0.5510684 0.6014169 0.6367875 0.6644950 0.6814308 #>  [535,] 0.37550804 0.3862507 0.4508878 0.4781338 0.5189696 0.5324833 0.5359243 #>  [536,] 0.61383823 0.6198225 0.6539593 0.7357619 0.7482518 0.7748273 0.8052321 #>  [537,] 0.20395025 0.5193754 0.5354866 0.5739143 0.5840158 0.6205652 0.6541178 #>  [538,] 0.38923872 0.5065403 0.5422442 0.5744182 0.6384446 0.6505391 0.6703705 #>  [539,] 0.30059960 0.6374213 0.6994992 0.7238530 0.7265301 0.7532037 0.7902633 #>  [540,] 0.27885824 0.4061939 0.4439233 0.4729973 0.4911829 0.5263879 0.5304912 #>  [541,] 0.25401368 0.6053636 0.6369706 0.6372363 0.6719544 0.6752793 0.7120910 #>  [542,] 0.31090010 0.3726018 0.3895462 0.4209947 0.4467953 0.5389364 0.5856994 #>  [543,] 0.64384396 0.6623190 0.6961370 0.7643618 0.7710884 0.7887636 0.7894070 #>  [544,] 0.41590068 0.4383878 0.5224334 0.6649547 0.6670069 0.7283386 0.7671737 #>  [545,] 0.27646583 0.3267518 0.3849811 0.4451739 0.4536482 0.4959600 0.5045026 #>  [546,] 0.42707746 0.4527824 0.5448095 0.5616333 0.5668903 0.6147553 0.6717908 #>  [547,] 0.36378665 0.5341163 0.6188892 0.6771212 0.6876992 0.6890210 0.6955107 #>  [548,] 0.35294833 0.4122181 0.5036000 0.5162579 0.5363414 0.5635352 0.5805822 #>  [549,] 0.52500910 0.5264415 0.5481900 0.5540574 0.6235787 0.6277887 0.6300052 #>  [550,] 0.72443044 0.7783759 0.8183187 0.9820073 1.0260291 1.0286607 1.0489784 #>  [551,] 0.47153213 0.6331933 0.6898668 0.7067785 0.7716465 0.7721074 0.8070648 #>  [552,] 0.42842447 0.6459555 0.6647618 0.7622951 0.8231072 0.8542254 0.8836123 #>  [553,] 0.31865059 0.3685412 0.5467098 0.5841965 0.5970924 0.6127771 0.6271443 #>  [554,] 1.08566308 1.1606107 1.3061265 1.3061501 1.4178445 1.4334735 1.4599254 #>  [555,] 0.29282023 0.3894365 0.5174469 0.6035550 0.6228525 0.6328031 0.6529757 #>  [556,] 0.43546370 0.5077577 0.9142750 0.9181753 0.9902984 1.0267943 1.0300866 #>  [557,] 0.46151163 0.5414600 0.5711949 0.6126958 0.6771172 0.6935058 0.7567929 #>  [558,] 0.31156159 0.6007979 0.6147307 0.7102412 0.7475206 0.7512427 0.7817427 #>  [559,] 0.44404490 0.4499029 0.5598402 0.5616333 0.6015621 0.6045771 0.6083097 #>  [560,] 0.39185089 0.4882283 0.5126216 0.5889580 0.5914907 0.5937282 0.6249516 #>  [561,] 0.27845117 0.3149172 0.4918852 0.4923310 0.5858242 0.6163433 0.6173249 #>  [562,] 0.23098692 0.4612636 0.7031679 0.7668224 0.7688724 0.7778238 0.8163371 #>  [563,] 0.11352889 0.3307789 0.4956701 0.5230785 0.5668994 0.5729163 0.5747679 #>  [564,] 0.47483946 0.6587603 0.6649547 0.7206521 0.7210208 0.7273717 0.8084374 #>  [565,] 0.76467775 0.7687075 0.7897419 0.8020842 0.8233101 0.8825427 0.8867037 #>  [566,] 0.54738155 0.5530305 0.7957522 0.8096520 0.8705035 0.9183941 0.9471892 #>  [567,] 0.37402746 0.4108726 0.4369028 0.4537324 0.5632359 0.5768428 0.6005104 #>  [568,] 0.38494129 0.4745738 0.4759475 0.5669013 0.5677158 0.5757744 0.6142137 #>  [569,] 0.38880667 0.5032673 0.5272792 0.6017191 0.6187809 0.6261819 0.6444704 #>  [570,] 0.21768175 0.2766404 0.3983924 0.5011849 0.5597335 0.5708633 0.5760540 #>  [571,] 0.48663204 0.5050148 0.5823603 0.5841965 0.6464074 0.6651967 0.6666625 #>  [572,] 0.35546758 0.4378721 0.5423132 0.6187345 0.6439718 0.6841707 0.7578590 #>  [573,] 0.37269262 0.4301620 0.4383878 0.4623394 0.5071004 0.6390523 0.6942919 #>  [574,] 0.49233098 0.5729460 0.5845934 0.7264279 0.7326556 0.8107185 0.8960332 #>  [575,] 0.39659589 0.3997512 0.4785014 0.6246729 0.6258964 0.6705609 0.7381067 #>  [576,] 0.32810838 0.3335780 0.3568790 0.4397172 0.4840807 0.5506893 0.5602579 #>  [577,] 0.52189471 0.5349257 0.6297392 0.6547907 0.6620030 0.7238530 0.7583145 #>  [578,] 0.52529424 0.5384685 0.6597076 0.7242072 0.7287298 0.7403760 0.7438016 #>  [579,] 0.42440003 0.5057326 0.5809163 0.5841226 0.6241847 0.6534115 0.6566929 #>  [580,] 0.28295577 0.2864373 0.3345694 0.4104085 0.4200514 0.4873261 0.4885325 #>  [581,] 0.56115905 0.9866427 1.0267943 1.0376291 1.1111058 1.1248367 1.1366229 #>  [582,] 0.36544526 0.4858690 0.5502455 0.5584559 0.5668039 0.6303604 0.6462134 #>  [583,] 0.28328844 0.3172386 0.3512925 0.3832908 0.4309863 0.4706776 0.4937784 #>  [584,] 0.20524659 0.2231198 0.4251601 0.4313448 0.4575376 0.4875241 0.5105065 #>  [585,] 0.57847585 0.8030875 0.8606395 0.8904828 0.9391338 1.0157287 1.0314028 #>  [586,] 0.45380068 0.5668893 0.7189337 0.7964055 0.9466156 0.9577120 0.9816626 #>  [587,] 0.46176116 0.6061783 0.6084537 0.6263591 0.6452763 0.6482748 0.6719590 #>  [588,] 0.78427940 0.8971339 0.9013981 0.9137937 0.9545586 0.9576416 1.0533333 #>  [589,] 0.28242870 0.3965733 0.4506096 0.4557239 0.4560308 0.5227947 0.5235872 #>  [590,] 1.04209549 1.0614909 1.1019409 1.1052501 1.1577779 1.1974978 1.2080736 #>  [591,] 0.48465067 0.7930617 1.0038080 1.1570545 1.1782069 1.4535560 1.5354480 #>  [592,] 0.22984645 0.6381023 0.8501075 0.8586937 0.8777318 0.9039319 0.9672334 #>  [593,] 0.37868452 0.4453069 0.5762301 0.6319285 0.6735578 0.6870688 0.6943320 #>  [594,] 0.37190259 0.4409714 0.6882761 0.8413097 0.8419531 0.9392987 0.9446255 #>  [595,] 0.52513516 0.5516804 0.6212175 0.6544077 0.6946125 0.7130878 0.7267944 #>  [596,] 0.48700087 0.4965277 0.5357019 0.5443182 0.5578691 0.5584363 0.5686652 #>  [597,] 0.47378498 0.5402428 0.5489156 0.6994992 0.7046763 0.7221518 0.7778746 #>  [598,] 0.58156577 0.5959116 0.7923291 0.8214195 0.8341281 0.8348457 0.8560383 #>  [599,] 0.30142877 0.3166175 0.5077115 0.5230753 0.5303405 0.5330444 0.5769664 #>  [600,] 0.44097138 0.6487406 0.7741268 0.9311162 0.9496286 0.9582686 0.9808567 #>  [601,] 0.38244946 0.6046914 0.6746760 0.7153343 0.7184948 0.7363799 0.7508222 #>  [602,] 0.35725147 0.5842183 0.6855097 0.7244304 0.7290322 0.7389815 0.7583145 #>  [603,] 0.35651466 0.5110393 0.5407007 0.5716806 0.5746612 0.5880962 0.5942101 #>  [604,] 0.26231219 0.3194291 0.3568790 0.4011844 0.4068254 0.4418389 0.4446362 #>  [605,] 0.21815044 0.2244266 0.4320065 0.5222946 0.5656577 0.5806789 0.6183456 #>  [606,] 0.43473945 0.5072975 0.5669945 0.5678863 0.6920286 0.7026724 0.7681912 #>  [607,] 0.79703875 0.9915469 1.0931292 1.1201504 1.1206381 1.1617939 1.2072768 #>  [608,] 0.24778621 0.4187046 0.4439233 0.5057326 0.5432774 0.5704450 0.6096183 #>  [609,] 0.31661752 0.4051110 0.4585930 0.5089932 0.5590301 0.5593168 0.5596184 #>  [610,] 0.54555109 0.8470201 1.1099022 1.1263021 1.3293030 1.4315592 1.5544563 #>  [611,] 0.78153464 0.7860191 0.7895365 0.8053878 0.8341281 0.8640619 0.9181753 #>  [612,] 0.43787210 0.4937561 0.5271486 0.5790240 0.6844208 0.7705245 0.7842794 #>  [613,] 0.39694991 0.4177458 0.5262266 0.5322632 0.5359571 0.5510449 0.5528149 #>  [614,] 0.21815044 0.3470505 0.3942302 0.4445580 0.5167553 0.5471358 0.5566906 #>  [615,] 0.27982912 0.3028660 0.3854552 0.4289505 0.4371204 0.4668121 0.4718514 #>  [616,] 0.94898965 1.3154454 1.4287038 1.4684871 1.4948052 1.5091747 1.5158241 #>  [617,] 0.38534293 0.3908059 0.4443338 0.4666259 0.5054067 0.5379057 0.5552023 #>  [618,] 0.91982948 1.1140110 1.1513518 1.1923203 1.2558458 1.3788422 1.3979619 #>  [619,] 0.55063292 0.6130727 0.6628949 0.6651181 0.7467186 0.8506729 0.9124348 #>  [620,] 0.51794009 0.5302222 0.6195524 0.7784970 0.7892680 0.8130591 0.8147525 #>  [621,] 0.57957606 0.6666765 0.7581951 0.7725121 0.8514963 0.8569410 0.9184232 #>  [622,] 0.36159365 0.5314421 0.6065952 0.6457739 0.6740533 0.7487713 0.7543795 #>  [623,] 0.30300129 0.3772612 0.4182693 0.4522172 0.4697516 0.4973792 0.5646163 #>  [624,] 1.06283351 1.0884841 1.1248065 1.2221470 1.3479425 1.3506398 1.4531586 #>  [625,] 0.64321529 0.6599258 0.7319123 0.8659277 1.0802069 1.0965436 1.1181591 #>  [626,] 0.34196661 0.5453632 0.5798669 0.5918848 0.6615662 0.7975165 0.8265270 #>  [627,] 0.24997751 0.2505541 0.2798291 0.3064312 0.3942077 0.4236662 0.4317845 #>  [628,] 0.69655618 0.9831815 1.0006282 1.0029299 1.0514904 1.1030793 1.1211072 #>  [629,] 1.09192483 1.2939014 1.3192096 1.3699217 1.3866590 1.4057651 1.4121846 #>  [630,] 0.25659161 0.2896751 0.4271307 0.4288252 0.4637470 0.4954945 0.5151031 #>  [631,] 0.81467180 0.9142738 0.9143281 1.2146147 1.2492331 1.3522093 1.4286229 #>  [632,] 0.43774948 0.5669346 0.6324665 0.6414317 0.6848153 0.6983065 0.7001985 #>  [633,] 0.69048610 0.6918322 0.6932583 0.6981663 0.6992041 0.7003675 0.7612365 #>  [634,] 0.57545061 0.6060237 0.6138382 0.6188892 0.6290126 0.6594736 0.6633578 #>  [635,] 0.57847585 0.7758646 0.8015245 0.8115833 0.8474372 0.9842884 1.0289324 #>  [636,] 1.02693754 1.2363931 1.5816238 1.6549499 1.6908578 1.6952343 1.6971734 #>  [637,] 0.38244946 0.5243941 0.5505515 0.5548033 0.5971045 0.7334902 0.7778746 #>  [638,] 0.55954054 0.6468469 0.7236693 0.7934043 0.8162378 0.8168489 0.8668225 #>  [639,] 0.56645384 0.6379249 0.6741880 0.7730388 0.7928768 0.8263322 0.8388897 #>  [640,] 0.60939806 0.6937850 0.7136209 0.9058021 0.9626506 1.0309317 1.1183621 #>  [641,] 0.35862912 0.3794663 0.4236904 0.4870112 0.5082490 0.5177602 0.5596423 #>  [642,] 0.35860761 0.4280755 0.4763305 0.5179519 0.5240084 0.5358346 0.5544627 #>  [643,] 0.33716792 0.4937561 0.5423132 0.6021526 0.7567741 0.8265146 0.8295043 #>  [644,] 0.55805778 0.8639880 1.1205720 1.1824394 1.1877023 1.2816507 1.3637677 #>  [645,] 0.14537611 0.3864849 0.4419081 0.4993874 0.5112464 0.5465711 0.5511167 #>  [646,] 0.72737167 0.9536991 0.9727181 0.9963824 1.0454571 1.0633879 1.0670054 #>  [647,] 0.27646583 0.3769053 0.5251106 0.5959513 0.6205765 0.6305562 0.6336923 #>  [648,] 1.06357391 1.1019409 1.1902071 1.2814726 1.3301054 1.4250368 1.4655753 #>  [649,] 0.22009058 0.5334972 0.7722540 0.8317345 0.8443217 0.8559487 0.9177287 #>  [650,] 0.37795906 0.6358116 0.9461653 0.9974796 1.0030519 1.0673985 1.0771044 #>  [651,] 0.26392416 0.3517150 0.3643342 0.3957521 0.4447209 0.4602847 0.4942636 #>  [652,] 0.50919544 0.7280067 0.8099088 0.8169258 0.8384654 0.8932890 0.9254841 #>  [653,] 0.38463832 0.5591274 0.5615550 0.5839422 0.6711839 0.7021439 0.7424494 #>  [654,] 0.18123428 0.2709687 0.3050616 0.3822772 0.4068254 0.4232369 0.4662350 #>  [655,] 0.16012735 0.3149172 0.5048134 0.5729460 0.5749059 0.5999547 0.6197520 #>  [656,] 0.50699817 0.5151263 0.5335959 0.5820901 0.5966885 0.6113916 0.6282859 #>  [657,] 0.22215350 0.2895536 0.3722131 0.4048689 0.4280755 0.4637470 0.4647846 #>  [658,] 0.30094004 0.5716936 0.5813339 0.5825898 0.5840534 0.6178053 0.6297392 #>  [659,] 0.12174573 0.6276742 0.6374624 0.6435589 0.6451317 0.6786997 0.7042146 #>  [660,] 0.49492048 0.4996894 0.5103525 0.5279976 0.5982043 0.6201407 0.6516395 #>  [661,] 0.35284859 0.4927960 0.5238729 0.5678863 0.6635098 0.7272837 0.7381796 #>  [662,] 0.60510531 0.7500892 0.8822620 0.9291247 1.0067996 1.0278107 1.0750410 #>  [663,] 0.41685006 0.4453069 0.5142917 0.5952254 0.6313972 0.6563733 0.6579843 #>  [664,] 1.15123434 1.1558260 1.1863894 1.2901462 1.3820553 1.3972506 1.4852787 #>  [665,] 0.32154753 0.3255049 0.3748375 0.5846812 0.6037906 0.6260750 0.6461641 #>  [666,] 0.38055562 0.5140563 0.5177159 0.5289293 0.5667996 0.5912260 0.6003464 #>  [667,] 0.29282023 0.3169622 0.5374643 0.6328909 0.6421087 0.6503433 0.6931954 #>  [668,] 0.38923872 0.5290063 0.5356695 0.5800488 0.6356873 0.6663527 0.6875514 #>  [669,] 0.21564834 0.7268092 0.7450147 0.7499789 0.7701696 0.8131202 0.8212676 #>  [670,] 1.60947677 1.7427251 1.7641898 1.7654593 1.8090196 1.8380717 1.8769592 #>  [671,] 0.30959217 0.4706282 0.6521596 0.7360583 0.7375337 0.7635248 0.8259374 #>  [672,] 0.35204251 0.5562011 0.5595339 0.6591486 0.7322596 0.7512580 0.7701564 #>  [673,] 0.41962493 0.4919746 0.5340924 0.5418714 0.5493676 0.5720472 0.6012427 #>  [674,] 0.75870748 0.8693084 0.9382353 0.9557347 1.0640118 1.1213877 1.1369067 #>  [675,] 0.29142823 0.4576831 0.4882682 0.7253652 0.7527520 0.8560785 0.9427754 #>  [676,] 0.52809183 0.5482617 0.5900072 0.7056204 0.7737849 0.7870127 0.8050748 #>  [677,] 0.31696221 0.3894365 0.5152269 0.5996292 0.6395449 0.6396292 0.6787766 #>  [678,] 0.24836978 0.4195211 0.4870112 0.6054537 0.6368701 0.6945799 0.6983773 #>  [679,] 0.60079791 0.6124964 0.6859744 0.7186762 0.8054213 0.8462417 0.8557962 #>  [680,] 0.29981865 0.3704476 0.3864849 0.4043257 0.4556315 0.4869037 0.5290678 #>  [681,] 0.28753269 0.3196926 0.3768200 0.4476027 0.4881157 0.4944862 0.5451690 #>  [682,] 0.54068112 0.5642458 0.5742944 0.5976816 0.6240429 0.6761378 0.6791352 #>  [683,] 0.33916350 0.3634852 0.3940977 0.4970339 0.5739088 0.5830930 0.5857290 #>  [684,] 0.54150759 0.5935533 0.6311570 0.6667307 0.6973730 0.7331208 0.7718861 #>  [685,] 0.24850637 0.4183204 0.5063229 0.5145445 0.5536558 0.5592037 0.5704276 #>  [686,] 0.52809183 0.5636404 0.6261319 0.7268410 0.7298811 0.7444149 0.8482376 #>  [687,] 0.15988909 0.3879490 0.4305716 0.5058652 0.5108319 0.5906002 0.6439120 #>  [688,] 0.28086047 0.3976884 0.4191723 0.6368701 0.7104758 0.7363326 0.7722860 #>  [689,] 0.55743983 0.6692237 0.6769984 0.8338300 0.9276076 0.9582518 0.9891492 #>  [690,] 0.56649009 0.5711949 0.6124920 0.7036934 0.7357077 0.7377532 0.7471157 #>  [691,] 0.45925460 0.5385875 0.6150161 0.6335841 0.6545515 0.6729848 0.6835802 #>  [692,] 0.31777450 0.6207202 0.6237137 0.6664420 0.7417032 0.7645992 0.7957290 #>  [693,] 0.17603185 0.3908059 0.5288887 0.5347049 0.5631227 0.5742257 0.6437349 #>  [694,] 0.37042558 0.4829757 0.5631911 0.5935533 0.6187994 0.6456734 0.7716931 #>  [695,] 0.65637328 0.7744798 0.7823316 0.7824216 0.7843443 0.8851059 0.9244873 #>  [696,] 0.32782375 0.4494581 0.4638556 0.5143801 0.5516914 0.5619246 0.5860639 #>  [697,] 0.31763224 0.3314143 0.4555194 0.4621425 0.4663452 0.5133922 0.5343555 #>  [698,] 0.46126356 0.4695300 0.6137987 0.6486797 0.6599165 0.6622922 0.7300462 #>  [699,] 0.63890550 0.6580988 0.7006456 0.7592437 0.7687977 0.7700654 0.7744096 #>  [700,] 0.43485712 0.5754230 0.5881388 0.5907718 0.6005104 0.6022413 0.6136931 #>  [701,] 0.17671604 0.3314143 0.3430245 0.3620578 0.3952376 0.4019539 0.4078399 #>  [702,] 0.60865670 0.7921009 1.2909925 1.3626595 1.4163597 1.4448722 1.5208933 #>  [703,] 0.50168056 0.5269695 0.5269889 0.5996138 0.6016762 0.6212156 0.6585099 #>  [704,] 0.32034890 0.3476038 0.3683150 0.3764882 0.5489565 0.6040223 0.6045558 #>  [705,] 0.50775774 0.7344356 0.7858055 0.7970388 0.9053487 0.9884214 0.9939904 #>  [706,] 0.33357802 0.4074187 0.4163083 0.4419418 0.4446362 0.4863547 0.4944862 #>  [707,] 0.89764462 1.1753456 1.2680099 1.3298505 1.3403916 1.3885790 1.4097812 #>  [708,] 0.19966069 0.4761885 0.6185149 0.6628949 0.6987339 0.7256092 0.7566869 #>  [709,] 0.33054160 0.3419606 0.4538520 0.5589579 0.6384446 0.6394285 0.6647808 #>  [710,] 0.50910050 0.5219926 0.5466753 0.5655159 0.5920035 0.6147790 0.6251626 #>  [711,] 0.43425613 0.4668583 0.4847466 0.4911829 0.5065325 0.5516914 0.5794275 #>  [712,] 1.07816895 1.2884836 1.2936970 1.2941501 1.3184700 1.3447150 1.3640997 #>  [713,] 0.49946372 0.5901557 0.6339377 0.6583527 0.6758086 0.6925228 0.7070111 #>  [714,] 0.53593978 0.8769871 0.9113737 0.9533283 1.0523702 1.1768579 1.2750426 #>  [715,] 0.37843876 0.3959542 0.4504540 0.4728974 0.4790036 0.5061161 0.5324833 #>  [716,] 0.36589075 0.4302441 0.5488167 0.5715972 0.6129458 0.6544077 0.6646489 #>  [717,] 0.56155502 0.6904654 0.7231670 0.7875080 0.7915109 0.8633038 0.8767673 #>  [718,] 0.30613672 0.4149321 0.4494910 0.4766878 0.5138718 0.5628032 0.5705900 #>  [719,] 0.32122941 0.4774407 0.4809088 0.5166841 0.6158332 0.6339377 0.6534115 #>  [720,] 0.30753851 0.4068582 0.4343620 0.4406324 0.4771530 0.4789029 0.6069501 #>  [721,] 0.35204251 0.4139184 0.4550655 0.5017117 0.5599067 0.5623358 0.6245796 #>  [722,] 0.43731256 0.4390246 0.5192625 0.5484135 0.5759310 0.5884166 0.5976573 #>  [723,] 0.85696576 1.1233230 1.1248312 1.1850442 1.2101795 1.2554544 1.2626581 #>  [724,] 0.57397783 0.5795761 0.6328770 0.6367327 0.6438440 0.6578703 0.7366509 #>  [725,] 0.51747476 0.5930678 0.6598473 0.9394739 1.1844189 1.2384016 1.2583402 #>  [726,] 0.73258486 0.7330063 0.7486168 0.7688877 0.8053188 0.8746186 0.8848098 #>  [727,] 1.78443316 1.8994373 1.9109782 1.9621897 2.0070276 2.0080814 2.0270406 #>  [728,] 1.09456642 1.2786788 1.3280468 1.4406022 1.5742594 1.6489078 1.6515322 #>  [729,] 0.52187479 0.5649872 0.6043339 0.6050705 0.6776092 0.8207069 0.8383188 #>  [730,] 0.27025056 0.3307789 0.4340782 0.5479447 0.5647924 0.6288813 0.6501507 #>  [731,] 0.16012735 0.2784512 0.4525893 0.5123068 0.5707398 0.5845934 0.6569376 #>  [732,] 0.34196661 0.4243681 0.6017191 0.7244495 0.7289435 0.7422627 0.7793249 #>  [733,] 0.28441403 0.2914282 0.5122122 0.6657414 0.6814308 0.7728129 0.8561090 #>  [734,] 0.10920448 0.3369371 0.4019539 0.4190630 0.4268638 0.4592546 0.5032840 #>  [735,] 0.36183206 0.4809088 0.4994637 0.5487682 0.5613954 0.5960407 0.6011192 #>  [736,] 1.02196181 1.0945664 1.5021812 1.6297174 1.7128142 1.7269086 1.7528242 #>  [737,] 0.40135778 0.4251023 0.4308065 0.4317845 0.4346651 0.4369156 0.4518266 #>  [738,] 0.47633050 0.4939649 0.5152269 0.6328909 0.6499953 0.6563030 0.7008661 #>  [739,] 0.58487261 0.6088997 0.7255150 0.7307830 0.7447280 0.7517222 0.7649300 #>  [740,] 0.84214032 1.0007712 1.1804789 1.2400457 1.2971262 1.3342181 1.3771805 #>  [741,] 0.54523495 0.6664924 0.7243247 0.8036139 0.8405405 0.8532123 0.8564395 #>  [742,] 0.54816247 0.5754506 0.6186975 0.6336996 0.6472880 0.6476555 0.6516395 #>  [743,] 0.60156054 0.8606395 1.0081777 1.1479728 1.1707050 1.1801985 1.2808261 #>  [744,] 0.49314028 0.9047770 0.9244479 0.9621701 1.2096674 1.2706691 1.2939014 #>  [745,] 0.28441403 0.4882682 0.5906991 0.6543397 0.6644950 0.7567741 0.8702741 #>  [746,] 0.48465067 0.8837738 0.9462042 1.0259557 1.0510975 1.0977528 1.2173280 #>  [747,] 0.62613194 0.7435517 0.8579654 0.9090125 0.9124006 0.9367389 0.9657434 #>  [748,] 0.24904996 0.3310692 0.4759475 0.5900072 0.6008128 0.6214531 0.6219190 #>  [749,] 0.43389051 0.4681853 0.5967330 0.6509170 0.6647808 0.6981663 0.7620602 #>  [750,] 0.43565819 0.5762301 0.5968961 0.7243247 0.7740098 0.7782454 0.7834383 #>  [751,] 0.42276881 0.4872496 0.5912260 0.6149423 0.6284766 0.6701844 0.6925201 #>  [752,] 1.52855757 1.8371047 1.8635101 2.0466099 2.0918427 2.1536776 2.1722558 #>  [753,] 0.38880667 0.4243681 0.4978232 0.5453632 0.6149649 0.6555521 0.6923202 #>  [754,] 0.81071812 1.1237496 1.1579587 1.1937617 1.2665790 1.2698035 1.5011186 #>  [755,] 0.24442825 0.4486791 0.4815718 0.6214195 0.6789966 0.7691889 0.8056446 #>  [756,] 0.48777484 0.5523776 0.6468002 0.6613450 0.6866159 0.6880896 0.6923202 #>  [757,] 0.42159029 0.4741343 0.5539152 0.5859156 0.6324910 0.6976086 0.7025640 #>  [758,] 0.63266178 0.6842928 0.6964153 0.7052174 0.7867425 0.8025458 0.8501075 #>  [759,] 0.33858392 0.3706551 0.3760308 0.4866320 0.5156682 0.5377990 0.5835731 #>  [760,] 0.62668502 0.6326618 0.6685580 0.6819095 0.7221509 0.7707604 0.7982965 #>  [761,] 0.42159029 0.4990196 0.5186725 0.5422442 0.7248737 0.7322902 0.7434416 #>  [762,] 0.32829602 0.3765710 0.3778631 0.5306654 0.5463087 0.6530798 0.6719590 #>  [763,] 0.46195697 0.4921373 0.4927960 0.5558087 0.5727180 0.6367149 0.6414264 #>  [764,] 0.81539391 1.0627282 1.1357639 1.1724926 1.2799663 1.2858048 1.3164525 #>  [765,] 0.32834619 0.5446123 0.6515839 0.7628014 0.7645229 0.7728831 0.7932420 #>  [766,] 0.38673197 0.4171115 0.4214987 0.4580320 0.4767526 0.5489112 0.5667996 #>  [767,] 0.44624308 0.5304625 0.5959858 0.6088724 0.6389055 0.6452763 0.6667307 #>  [768,] 0.09793014 0.3650662 0.3837766 0.3878184 0.4251023 0.4406324 0.4451739 #>  [769,] 0.72174824 0.9055905 1.2745698 1.2873109 1.3202543 1.3519281 1.4502325 #>  [770,] 0.42300840 0.4829757 0.5391089 0.5732260 0.5869437 0.5903036 0.5959858 #>  [771,] 0.18694140 0.5359243 0.6145491 0.6215770 0.6352886 0.6578703 0.6893276 #>  [772,] 0.28939092 0.5469313 0.5975214 0.6552984 0.8849005 0.9371384 1.0407122 #>  [773,] 0.78095095 0.8840100 0.9013571 0.9124871 1.0807722 1.1959582 1.2394457 #>  [774,] 0.51831285 0.7350785 0.8336697 0.8592510 0.8700080 0.8832749 0.8863406 #>  [775,] 0.39749310 0.4439451 0.4448272 0.5192625 0.5208184 0.5566204 0.5591503 #>  [776,] 0.25901013 0.3326958 0.4032070 0.4369156 0.4655521 0.5096223 0.5293803 #>  [777,] 0.16294453 0.1991232 0.3172386 0.3565114 0.4048689 0.4156592 0.4271307 #>  [778,] 0.17671604 0.2805367 0.2946289 0.2999224 0.3176322 0.5097468 0.5151779 #>  [779,] 1.13821899 1.2753155 1.4860382 1.4928169 1.5801845 1.6657402 1.6857693 #>  [780,] 0.81158330 0.9008486 0.9280799 0.9391338 1.0128512 1.0464698 1.0504111 #>  [781,] 0.21918464 0.2270018 0.3726018 0.4006144 0.4085609 0.5219926 0.5895014 #>  [782,] 0.15988909 0.3739637 0.3830088 0.4255069 0.4473558 0.7164621 0.7186608 #>  [783,] 0.37261992 0.4522172 0.5349356 0.5708778 0.5719704 0.5770565 0.5917509 #>  [784,] 0.50286995 0.6191030 0.6432153 0.7972929 0.8830504 0.9369949 0.9458268 #>  [785,] 0.48729262 0.5664538 0.7048155 0.8146718 0.9812514 1.0233116 1.1321643 #>  [786,] 0.43611187 0.5749734 0.5821693 0.5842183 0.7182777 0.7334902 0.7542938 #>  [787,] 0.29705996 0.3128272 0.3786489 0.4373126 0.4506096 0.4937784 0.5087746 #>  [788,] 0.30910517 0.4781338 0.4882283 0.5017394 0.5398482 0.5451222 0.5942179 #>  [789,] 0.40532656 0.4759808 0.4972676 0.5189760 0.5424646 0.5617512 0.5821245 #>  [790,] 0.28242870 0.3128272 0.3871598 0.5213863 0.5339531 0.5412305 0.5889692 #>  [791,] 0.40961744 0.4437505 0.5016762 0.5575626 0.6528292 0.6840621 0.6887980 #>  [792,] 0.38673197 0.4435799 0.4815263 0.5016762 0.5029650 0.5724926 0.5868896 #>  [793,] 0.32834619 0.4629471 0.5005318 0.6622738 0.7606690 0.7767120 0.8212055 #>  [794,] 0.54826174 0.5635352 0.5636404 0.6726623 0.7329217 0.7710559 0.7855226 #>  [795,] 0.43277488 0.4629471 0.5380283 0.5446123 0.6441826 0.6644675 0.7721150 #>  [796,] 0.60398370 0.6713260 0.6769984 0.7324106 0.8107181 0.8204475 0.8603664 #>  [797,] 0.11352889 0.4340782 0.4949763 0.5122320 0.5195598 0.5471869 0.6361805 #>  [798,] 0.64874056 0.6766462 0.6882761 0.9362890 0.9647318 0.9774574 1.0012763 #>  [799,] 0.51077127 0.5871641 0.5921308 0.6050705 0.6249516 0.6390824 0.6497615 #>  [800,] 0.77817058 0.8753256 0.8887665 0.9117526 0.9471892 0.9510739 0.9931238 #>  [801,] 0.31684582 0.3740275 0.5479447 0.5526417 0.6115549 0.6494973 0.6935797 #>  [802,] 0.59057930 0.6755866 0.7771968 0.9313451 0.9386429 0.9866427 1.0315395 #>  [803,] 0.26195646 0.3523999 0.4240440 0.4775053 0.4815263 0.4885325 0.5434177 #>  [804,] 0.30910517 0.5482191 0.6077460 0.6110649 0.6821129 0.7128517 0.7295240 #>  [805,] 0.18694140 0.5189696 0.5451222 0.5746533 0.6077460 0.6280397 0.6670032 #>  [806,] 0.24073700 0.6430310 0.8276502 0.9774574 0.9808567 1.1371607 1.1530979 #>  [807,] 0.45373238 0.5072975 0.5593100 0.5599067 0.5881388 0.5887911 0.5899455 #>  [808,] 1.01343112 1.0595107 1.1813501 1.1969793 1.2477153 1.3919395 1.5690312 #>  [809,] 0.44792929 0.4509385 0.6285716 0.6445984 0.6460288 0.6626825 0.7375337 #>  [810,] 0.28739585 0.4845612 0.5777386 0.5794881 0.5907718 0.6072804 0.6175804 #>  [811,] 0.79306165 0.8837738 1.0807850 1.1292851 1.1586246 1.1798654 1.2837395 #>  [812,] 0.37868452 0.4904270 0.4998193 0.5378534 0.5952254 0.5971503 0.6024869 #>  [813,] 0.45031962 0.5445280 0.5540574 0.5790240 0.6841707 0.7288483 0.7400100 #>  [814,] 1.00817770 1.0157287 1.0654127 1.1455165 1.2900896 1.2946340 1.3002880 #>  [815,] 0.49852129 0.5034966 0.5066112 0.5466753 0.5704412 0.5892895 0.6185149 #>  [816,] 0.21076587 0.5094077 0.5248954 0.5708778 0.6095624 0.6317495 0.6656358 #>  [817,] 0.36937303 0.4214987 0.5530989 0.5821693 0.5840534 0.6051173 0.6134026 #>  [818,] 0.34893160 0.3620099 0.3686780 0.5250091 0.5275454 0.5620804 0.6013644 #>  [819,] 0.57705654 0.6229272 0.6493967 0.6666687 0.7057053 0.7248532 0.7290958 #>  [820,] 0.55281495 0.6130392 0.6859186 0.7147601 0.7289496 0.7475510 0.7657063 #>  [821,] 0.38545522 0.3939100 0.3942077 0.4525436 0.4537897 0.4705179 0.4878097 #>  [822,] 0.52243339 0.5815460 0.6358116 0.6587603 0.6967940 0.7394045 0.7992771 #>  [823,] 0.22984645 0.5917905 0.7267944 0.9056000 0.9163814 0.9374137 0.9550651 #>  [824,] 0.39132024 0.4371033 0.4397488 0.5515438 0.5790049 0.6245796 0.6445984 #>  [825,] 0.61249205 0.9657706 1.0003800 1.0032046 1.0770719 1.1032810 1.1164662 #>  [826,] 0.49139542 0.5915108 0.6101962 0.6437879 0.7131537 0.7668768 0.8228212 #>  [827,] 0.66469656 0.7558682 0.8341269 0.8547442 0.8838775 0.9151752 0.9782313 #>  [828,] 0.40204620 0.4137604 0.4525436 0.5029389 0.5110079 0.5696524 0.5721110 #>  [829,] 0.46184341 0.5426372 0.5509453 0.6103558 0.6666687 0.6793102 0.6988857 #>  [830,] 0.40948251 0.5993714 0.6229272 0.6450176 0.6606326 0.6862891 0.6898521 #>  [831,] 0.61419772 0.8053657 0.9951511 1.1070456 1.2160172 1.2733013 1.3095161 #>  [832,] 0.70578308 0.7964055 0.9831190 1.0362301 1.0448910 1.0700655 1.0719087 #>  [833,] 0.41273197 0.4429335 0.7771476 0.7878257 0.8425901 0.9468914 0.9589994 #>  [834,] 0.64867967 0.7031679 0.7331541 0.8056564 0.8662043 1.0186633 1.0252064 #>  [835,] 0.40831326 0.5508795 0.5816551 0.5882994 0.7324106 0.7998428 0.8603052 #>  [836,] 0.67906696 0.7356954 0.8461533 0.9261705 0.9267812 0.9554272 1.0858239 #>  [837,] 0.36241130 0.4488099 0.5676495 0.5749059 0.5840243 0.6029651 0.6157143 #>  [838,] 0.40519563 0.4078134 0.4575376 0.4655731 0.5601903 0.5757030 0.5989309 #>  [839,] 0.42180587 0.5005318 0.6441826 0.7019912 0.7148023 0.7154212 0.7156344 #>  [840,] 0.46142333 0.5856135 0.7105331 0.7608997 0.7692025 0.9092685 1.0069293 #>  [841,] 0.52613990 0.5805117 0.5941368 0.7520302 0.8325341 0.8391375 0.9389026 #>  [842,] 1.18178599 1.3979619 1.4095979 1.4141126 1.4617969 1.4754367 1.5171937 #>  [843,] 0.94138909 0.9503583 1.0139246 1.1255989 1.1439733 1.2619369 1.2703485 #>  [844,] 0.56051232 0.6375514 0.7032494 0.7872126 0.9164464 0.9301487 0.9657619 #>  [845,] 0.91151952 1.0915679 1.1381902 1.1477217 1.3060090 1.3378451 1.3574739 #>  [846,] 0.31246441 0.3310764 0.4448272 0.4509238 0.4711815 0.4818327 0.4869058 #>  [847,] 0.47469797 0.6129005 0.7099831 0.8142788 0.8871062 0.8992796 0.9059468 #>  [848,] 0.48724961 0.5028700 0.6841890 0.7289646 0.7675046 0.7936582 0.8030150 #>  [849,] 0.55578851 0.7236693 0.7777544 0.8243966 0.8356903 0.8487347 0.8622542 #>  [850,] 0.30716094 0.4196249 0.4245837 0.5108544 0.5390855 0.5661164 0.5769664 #>  [851,] 0.75425937 0.9270503 0.9999610 1.0184707 1.0248926 1.0264243 1.0941132 #>  [852,] 0.69223055 0.7370893 0.8722353 0.9286435 0.9443460 0.9533283 0.9993540 #>  [853,] 0.10920448 0.3076923 0.3721154 0.4078399 0.4778522 0.5143801 0.5385875 #>  [854,] 0.26117182 0.2876869 0.4251601 0.4580981 0.4869058 0.5227786 0.5365743 #>  [855,] 0.43389051 0.5488167 0.6346743 0.6628599 0.6802992 0.6850455 0.7084815 #>  [856,] 0.51937543 0.5735306 0.5917287 0.6080807 0.6248467 0.6583527 0.6622922 #>  [857,] 0.28789901 0.2896751 0.3155262 0.3847786 0.4504540 0.4535740 0.4813088 #>  [858,] 0.38923661 0.5433709 0.6511651 0.7328383 0.7821499 0.8199283 0.8309377 #>  [859,] 0.39493483 0.4538007 0.6350033 0.8556782 0.9249944 0.9339963 1.0190714 #>  [860,] 0.19966069 0.5506329 0.6419423 0.6651020 0.7134097 0.7708306 0.7995570 #>  [861,] 0.78373046 0.8492235 0.9752858 1.0030519 1.0819807 1.1320426 1.1452983 #>  [862,] 0.43473945 0.7087581 0.7289009 0.7587075 0.8031402 0.9048955 0.9179546 #>  [863,] 0.95107386 1.0856631 1.1582391 1.2372949 1.4063799 1.4988644 1.5041738 #>  [864,] 0.46233937 0.4864748 0.6670069 0.6943917 0.7206521 0.7446449 0.7731901 #>  [865,] 0.20034565 0.4324301 0.4383547 0.4517605 0.5583671 0.5696524 0.5770712 #>  [866,] 0.94620425 0.9791795 1.0038080 1.0520268 1.1251754 1.1445001 1.1845858 #>  [867,] 0.60644372 0.6103127 0.6374213 0.8771256 0.9348839 0.9555794 1.0029299 #>  [868,] 0.43314978 0.5071004 0.5750470 0.6126769 0.6874523 0.7279788 0.7862407 #>  [869,] 0.36433422 0.3746465 0.4464526 0.4801595 0.5287459 0.5335880 0.5523776 #>  [870,] 0.18729279 0.4557351 0.4655521 0.4915142 0.5049339 0.5258481 0.5289644 #>  [871,] 0.37089696 0.5669346 0.6136998 0.6626825 0.6806766 0.7028505 0.7178708 #>  [872,] 0.21918464 0.2863546 0.4209947 0.4280404 0.4818862 0.5642458 0.5818563 #>  [873,] 0.69117110 1.0801821 1.1238442 1.1920982 1.2766771 1.2774818 1.2842762 #>  [874,] 0.20395025 0.5064915 0.5768825 0.5917287 0.5944636 0.6313972 0.6365716 #>  [875,] 0.41376043 0.4282303 0.4324301 0.5157480 0.5227786 0.5240320 0.5331268 #>  [876,] 0.56913667 0.6685740 0.7809509 0.8730947 0.8742567 0.9936128 1.1003776 #>  [877,] 0.81961110 0.8667355 0.8807279 0.9423853 1.1264544 1.1815195 1.2361055 #>  [878,] 0.47351194 0.5264415 0.5770906 0.6013644 0.6501416 0.6869942 0.7185237 #>  [879,] 0.39659589 0.3991706 0.5146600 0.5302222 0.5794452 0.6816691 0.7127105 #>  [880,] 0.33377071 0.5156261 0.5516193 0.5754230 0.5794881 0.5813339 0.5840481 #>  [881,] 0.28016408 0.2931238 0.5162579 0.5590186 0.6087374 0.6204562 0.6405955 #>  [882,] 0.48729262 0.8263322 0.9143281 0.9280911 1.0652537 1.2318797 1.2448297 #>  [883,] 0.50905361 0.5590186 0.5686003 0.6003464 0.6135916 0.6196483 0.6255875 #>  [884,] 0.35146754 0.4230084 0.5570740 0.5631911 0.6221473 0.6500649 0.7326900 #>  [885,] 0.23469512 0.2907930 0.3773212 0.3947649 0.3957521 0.4464526 0.5703871 #>  [886,] 0.32825925 0.4124633 0.6034513 0.6053636 0.6625722 0.6949067 0.7094449 #>  [887,] 0.78484110 0.9272853 0.9299038 0.9393366 0.9589994 0.9888866 0.9899323 #>  [888,] 0.32910487 0.3302554 0.3714611 0.4020462 0.5776172 0.5802703 0.5893337 #>  [889,] 0.43083312 0.4745738 0.5905341 0.6214531 0.6547724 0.7360752 0.7526224 #>  [890,] 0.16183479 0.3305416 0.4814609 0.5411459 0.6393721 0.6480133 0.6509170 #>  [891,] 0.33051150 0.4375850 0.5448095 0.5751907 0.5915261 0.6035787 0.6230742 #>  [892,] 0.46861039 0.4989057 0.5107713 0.5122320 0.5441670 0.5562677 0.5641259 #>  [893,] 0.58091634 0.5909414 0.7052174 0.9323451 0.9394739 0.9585959 1.0064993 #>  [894,] 0.33400489 0.4853777 0.5251358 0.5358346 0.5466209 0.5471358 0.5515886 #>  [895,] 0.23676412 0.4978232 0.5035106 0.5378534 0.5918848 0.6444704 0.6490480 #>  [896,] 0.31969257 0.3535610 0.3822772 0.3961910 0.3963619 0.4392803 0.4419418 #>  [897,] 0.34063708 0.3758164 0.4035277 0.4780104 0.5110393 0.5203146 0.5258108 #>  [898,] 1.08633114 1.1902071 1.2795182 1.2863212 1.3122812 1.3227461 1.3800149 #>  [899,] 0.86066125 0.8858478 0.9706693 1.0350605 1.1069475 1.1200171 1.1720295 #>  [900,] 0.58694910 0.7148144 0.7331208 0.7479689 0.7971560 0.8017269 0.8667355 #>  [901,] 0.42009776 0.4900403 0.5014818 0.6129541 0.6277887 0.6308840 0.6474697 #>  [902,] 0.18497174 0.2040133 0.2628021 0.4513686 0.4536434 0.4904270 0.4986791 #>  [903,] 0.24073700 0.8212084 1.0115344 1.0470990 1.0744304 1.1471457 1.3242169 #>  [904,] 0.43868757 0.6130727 0.6651020 0.6977118 0.7009247 0.7256092 0.7313639 #>  [905,] 0.49127230 0.5054067 0.5507568 0.5657486 0.5906002 0.6137987 0.6248467 #>  [906,] 0.19212176 0.3926176 0.4775053 0.4821518 0.4824404 0.5029650 0.5063229 #>  [907,] 0.59057930 0.8006178 0.8421320 0.8660138 0.9393745 1.0019716 1.0105771 #>  [908,] 0.16335137 0.2278322 0.2805367 0.3402555 0.3620578 0.4621425 0.4873261 #>  [909,] 0.42550685 0.4305716 0.5182597 0.5380510 0.6015676 0.6425688 0.7542594 #>  [910,] 0.08692040 0.1897256 0.3588884 0.3650662 0.3714611 0.4068582 0.4338996 #>  [911,] 0.51248278 0.5657121 0.7454840 0.8084374 0.8433335 0.8551885 0.8727563 #>  [912,] 0.23098692 0.4695300 0.5657486 0.6418820 0.6852159 0.7619909 0.7794319 #>  [913,] 0.17505266 0.3686780 0.3764882 0.4555493 0.4987332 0.5453142 0.5798589 #>  [914,] 0.46768917 0.5314038 0.5493676 0.5502455 0.5536213 0.6264702 0.6860781 #>  [915,] 0.56115905 0.9142750 1.1137932 1.1263021 1.1293500 1.1454330 1.1634319 #>  [916,] 0.36628368 0.3748601 0.5035798 0.5407808 0.5724690 0.6016762 0.6126571 #>  [917,] 0.36655105 0.3883614 0.4270775 0.4585930 0.5051880 0.5357689 0.5412652 #>  [918,] 0.28601925 0.5225292 0.5290812 0.6401527 0.7384849 0.7479689 0.7768682 #>  [919,] 0.17603185 0.4666259 0.5306241 0.5487682 0.5604893 0.5730035 0.5841226 #>  [920,] 0.23530578 0.4525893 0.4918852 0.4947689 0.5048134 0.5072399 0.7970969 #>  [921,] 0.60215265 0.6474697 0.6988452 0.7454840 0.7749711 0.7810787 0.7894779 #>  [922,] 0.20034565 0.5207816 0.5408695 0.5554737 0.5751441 0.5753217 0.5816145 #>  [923,] 0.58928411 0.5917905 0.6212175 0.6381023 0.6448516 0.6530798 0.6783533 #>  [924,] 1.26519608 1.5706653 1.5726567 1.5902462 1.6363500 1.6631545 1.6973186 #>  [925,] 0.86353992 0.8920804 0.9536991 0.9775745 1.0083607 1.0197534 1.0268523 #>  [926,] 0.30179066 0.4053266 0.4434374 0.4533355 0.4641039 0.4780104 0.4867597 #>  [927,] 0.27161819 0.3512925 0.3565114 0.3643884 0.4809309 0.4814762 0.5759310 #>  [928,] 0.51130129 0.5264391 0.5622950 0.5789740 0.6331933 0.6551087 0.7028216 #>  [929,] 0.48864632 0.5264391 0.6334122 0.6408372 0.6530955 0.6712083 0.7016903 #>  [930,] 0.30094004 0.3337707 0.5349257 0.5794275 0.6033952 0.6134026 0.6272293 #>  [931,] 0.32973883 0.6577957 0.8276502 0.8776227 0.9122305 0.9582686 1.0115344 #>  [932,] 0.43734585 0.6599258 0.8295273 0.8770007 0.8825770 0.9281769 0.9472670 #>  [933,] 0.31092722 0.4231108 0.4536434 0.4741343 0.5437369 0.6609321 0.6880491 #>  [934,] 0.39165696 0.3980165 0.4028551 0.4419178 0.4642702 0.5154827 0.5240320 #>  [935,] 0.27555983 0.8735704 0.9024662 0.9146160 0.9750313 1.0026022 1.0209797 #>  [936,] 0.30738083 0.3804721 0.3848694 0.3952240 0.4624185 0.5151263 0.6155998 #>  [937,] 0.28686090 0.3658907 0.4177458 0.5366301 0.5691114 0.5883255 0.6084537 #>  [938,] 0.54555109 0.6766462 0.6826168 1.1471457 1.1530979 1.2891732 1.3220916 #>  [939,] 0.42767510 0.6294244 0.6915212 0.7104758 0.7545457 0.7957522 0.8148650 #>  [940,] 0.73169267 0.7778775 0.8113084 0.8362149 0.8436871 0.8586937 0.9004565 #>  [941,] 0.33516363 0.5668039 0.6109643 0.6653110 0.7041623 0.7669429 0.7898816 #>  [942,] 0.61460549 0.6840200 0.7300462 0.7904285 0.8680102 0.8700080 0.8771143 #>  [943,] 0.61419772 0.7500892 0.9476445 1.0471452 1.0973790 1.1269387 1.1318945 #>  [944,] 0.38744169 0.6832722 0.8892744 0.9294315 0.9503554 0.9618203 0.9847990 #>  [945,] 0.76870753 0.9524665 0.9923883 1.0041724 1.0308424 1.1220585 1.1311287 #>  [946,] 0.57934246 0.6084815 0.6414365 0.6843317 0.7771476 0.7796726 0.8033214 #>  [947,] 0.40396385 0.5196309 0.5526417 0.5623358 0.5669945 0.5899455 0.6284766 #>  [948,] 0.38794902 0.4473558 0.4912723 0.4998193 0.6319285 0.6369121 0.6418820 #>  [949,] 0.35567330 0.3713976 0.3969499 0.4287676 0.5306654 0.5401748 0.5691114 #>  [950,] 0.50919544 0.6573315 0.7367542 0.7494382 0.7511671 0.7956558 0.8179325 #>  [951,] 0.21846069 0.3615937 0.3849360 0.6802317 0.7339454 0.7507426 0.7897419 #>  [952,] 0.58374838 0.5848726 0.6228525 0.6229873 0.6374284 0.6395449 0.6421087 #>  [953,] 0.55303055 0.5996292 0.6427296 0.7375295 0.7407752 0.7555970 0.7788246 #>  [954,] 0.61904931 0.7183519 0.7242072 0.8461728 0.8467702 0.8674439 0.8694139 #>  [955,] 0.18729279 0.3837766 0.3967767 0.4032070 0.4182481 0.4466637 0.4547941 #>  [956,] 0.69117110 0.9318542 0.9458940 0.9698277 1.0795523 1.1230745 1.2029018 #>  [957,] 0.30059960 0.6051535 0.6103127 0.7348125 0.7732156 0.7927551 0.8324120 #>  [958,] 0.43774948 0.6633261 0.6841983 0.7030771 0.7212125 0.7225592 0.7858000 #>  [959,] 0.29096480 0.5138718 0.5243456 0.5390855 0.5599074 0.5808172 0.5884435 #>  [960,] 0.34097658 0.3628246 0.7403760 0.8499612 0.9125742 1.0573759 1.1190948 #>  [961,] 0.67627799 0.7337911 0.8448059 0.9294315 1.0253020 1.0269375 1.0289324 #>  [962,] 0.44916693 0.4705179 0.5016806 0.5050149 0.5232892 0.5241068 0.5246158 #>  [963,] 0.37690533 0.5371775 0.5690481 0.6360886 0.6450007 0.6941157 0.8004949 #>  [964,] 0.61633703 0.8056564 0.8596810 0.8932890 0.9018807 0.9857076 1.0092159 #>  [965,] 0.49559525 0.6539593 0.7229364 0.8617392 0.9007417 0.9520988 1.0066839 #>  [966,] 0.29908750 0.3883381 0.5860764 0.6072989 0.6134636 0.6214195 0.6247551 #>  [967,] 0.34760378 0.3883614 0.4248871 0.5007537 0.5081476 0.5490294 0.5636113 #>  [968,] 0.40234603 0.4094390 0.4494910 0.4965277 0.5133922 0.5156511 0.5587166 #>  [969,] 0.27430991 0.5746765 0.5942373 0.6324143 0.6327976 0.6582406 0.6790151 #>  [970,] 0.36241130 0.4580025 0.6173249 0.6466024 0.6640875 0.7326556 0.7532215 #>  [971,] 0.25537230 0.3868914 0.6564652 0.6784060 0.7126777 0.7175116 0.7250596 #>  [972,] 0.43277488 0.4822385 0.6626830 0.7016903 0.7215342 0.8236006 0.8330104 #>  [973,] 0.18476655 0.4419178 0.4892756 0.5113013 0.6109643 0.6528859 0.6751712 #>  [974,] 0.18497174 0.2297934 0.3294379 0.3724097 0.3806428 0.5437369 0.5727271 #>  [975,] 0.37396373 0.4971060 0.5058652 0.5380510 0.7471951 0.7740898 0.8448669 #>  [976,] 0.56571213 0.7779473 0.8477325 0.8647583 0.8674439 0.9251998 0.9445375 #>  [977,] 0.74273858 0.7603127 0.8556782 0.8618090 0.9175525 0.9372790 0.9535624 #>  [978,] 0.37211541 0.4268638 0.4494581 0.5344022 0.5634229 0.6133399 0.6150161 #>  [979,] 0.35146754 0.5799741 0.5988571 0.6052291 0.6117496 0.6460288 0.6647724 #>  [980,] 0.21846069 0.3759299 0.5314421 0.5699273 0.6952990 0.7510291 0.7578590 #>  [981,] 0.63366225 0.6393457 0.6866159 0.7022439 0.7311723 0.7355500 0.7411951 #>  [982,] 0.79274619 1.0769120 1.0918450 1.2404404 1.3170953 1.3296679 1.3297863 #>  [983,] 0.28768685 0.3124644 0.3668731 0.3719139 0.4051956 0.4313448 0.4383762 #>  [984,] 0.47093724 0.4785014 0.5035798 0.6783533 0.6938075 0.7485039 0.7486774 #>  [985,] 0.59306776 0.6312519 0.8234325 0.8807279 0.9875674 1.0028268 1.0291793 #>  [986,] 0.57457351 0.8225579 0.9000355 0.9113737 0.9311162 1.0153285 1.0424952 #>  [987,] 0.70818765 0.7451772 0.7579198 0.7764394 0.8639880 0.8868579 0.8973275 #>  [988,] 0.35284859 0.4435799 0.4619570 0.5489112 0.6328436 0.6701844 0.6841890 #>  [989,] 0.71362092 1.0246550 1.0406753 1.0548111 1.1935232 1.3600957 1.3889036 #>  [990,] 0.55743983 0.8204475 1.0204570 1.0360598 1.0628335 1.0813629 1.1239237 #>  [991,] 0.78484110 0.8028137 0.8425901 0.9641849 1.0958663 1.2063217 1.2346762 #>  [992,] 0.53349724 0.5340924 0.5936759 0.7077540 0.7338871 0.7424133 0.7425975 #>  [993,] 0.32474420 0.4094825 0.4549501 0.5032673 0.5172623 0.6167127 0.7574429 #>  [994,] 0.51773276 0.5314038 0.6497083 0.6541173 0.6628199 0.6730095 0.6893834 #>  [995,] 0.44945182 0.4942696 0.5065403 0.5290063 0.6394285 0.6462010 0.6632443 #>  [996,] 0.47351194 0.6099997 0.6235787 0.7622161 0.7886939 0.7901162 0.8193234 #>  [997,] 0.37856273 0.5469313 0.7445796 0.7561596 0.8395152 0.8644959 1.0483008 #>  [998,] 0.21076587 0.3917471 0.5349356 0.5704979 0.5856392 0.6291380 0.6733536 #>  [999,] 0.45789396 0.4972769 0.5276862 0.5548033 0.5764812 0.6676759 0.6746760 #> [1000,] 0.53802828 0.6622738 0.7215342 0.7538623 0.8762827 0.8853043 0.9391717 #>              [,8]      [,9]     [,10] #>    [1,] 0.5859156 0.5952739 0.6670840 #>    [2,] 1.1240560 1.2409679 1.2793152 #>    [3,] 0.7519818 0.7764310 0.7898001 #>    [4,] 0.9520251 1.0157151 1.0259759 #>    [5,] 0.5905341 0.7089360 0.7737849 #>    [6,] 1.0709559 1.0822576 1.0932387 #>    [7,] 0.7024389 0.7035109 0.7096631 #>    [8,] 0.6532847 0.6687542 0.6715624 #>    [9,] 0.7993516 0.8326396 0.8550891 #>   [10,] 0.7940439 0.7946135 0.8126015 #>   [11,] 0.7540596 0.7732156 0.7860191 #>   [12,] 0.7575852 0.7842788 0.8389359 #>   [13,] 0.7934043 0.7960111 0.8015449 #>   [14,] 0.7315699 0.7454232 0.7553627 #>   [15,] 0.5886339 0.5950166 0.6284738 #>   [16,] 1.4502682 1.6380875 1.6416224 #>   [17,] 0.8936820 0.9191168 0.9702651 #>   [18,] 0.7643977 0.7656029 0.8090534 #>   [19,] 0.7454480 0.8635664 0.8740571 #>   [20,] 1.1020038 1.1317461 1.1454045 #>   [21,] 0.6340431 0.6556940 0.6990133 #>   [22,] 1.0589658 1.0602518 1.0809041 #>   [23,] 1.1924685 1.4140081 1.4365322 #>   [24,] 0.6698317 0.6850918 0.7040804 #>   [25,] 0.9435427 0.9850920 0.9869686 #>   [26,] 0.5277868 0.5703871 0.5808027 #>   [27,] 0.6140383 0.6146086 0.6636555 #>   [28,] 0.9297051 0.9967080 1.0005068 #>   [29,] 0.9400081 0.9408808 0.9628811 #>   [30,] 0.7460410 0.7821864 0.7870456 #>   [31,] 0.4868733 0.4915142 0.4993874 #>   [32,] 1.0191254 1.0206080 1.0260125 #>   [33,] 0.5749712 0.6166605 0.6324665 #>   [34,] 1.1582234 1.1708099 1.1797648 #>   [35,] 0.6050252 0.6083871 0.6441785 #>   [36,] 0.7133837 0.7262724 0.7526444 #>   [37,] 0.7468265 0.7506479 0.7599770 #>   [38,] 1.6769154 1.6781664 1.6858244 #>   [39,] 1.1254669 1.1655841 1.2507043 #>   [40,] 0.6572527 0.6730094 0.6987602 #>   [41,] 1.5067549 1.5326383 1.5929913 #>   [42,] 0.8949210 0.9416934 0.9564623 #>   [43,] 0.6039726 0.6190102 0.6332547 #>   [44,] 0.4641601 0.4711815 0.5597366 #>   [45,] 0.7461676 0.7535958 0.7654086 #>   [46,] 0.9194734 0.9332189 0.9626178 #>   [47,] 0.5887911 0.5915108 0.6261130 #>   [48,] 0.6556809 0.6721172 0.6898521 #>   [49,] 0.7398845 0.7794631 0.7932228 #>   [50,] 0.7597294 0.7681317 0.7859511 #>   [51,] 0.6100554 0.6122305 0.6149601 #>   [52,] 0.5623349 0.5656838 0.5742545 #>   [53,] 0.6565426 0.7350785 0.7408905 #>   [54,] 0.7281612 0.7323497 0.7543943 #>   [55,] 0.9399600 0.9535624 0.9943066 #>   [56,] 1.0625651 1.2313187 1.3543886 #>   [57,] 1.3513961 1.3795127 1.4252314 #>   [58,] 0.6868356 0.7017327 0.7108687 #>   [59,] 0.5718985 0.5728312 0.5739143 #>   [60,] 0.6814039 0.6865517 0.6902828 #>   [61,] 0.8202704 0.8773038 0.8879654 #>   [62,] 0.9472670 0.9649645 0.9907691 #>   [63,] 0.5909552 0.5914907 0.5976573 #>   [64,] 0.6626524 0.6718494 0.6908867 #>   [65,] 0.6034897 0.6043297 0.6275605 #>   [66,] 0.8109475 0.8179325 0.8286855 #>   [67,] 0.5269628 0.5346354 0.5392505 #>   [68,] 0.7724946 0.7741917 0.8224099 #>   [69,] 0.5989732 0.6465635 0.6532775 #>   [70,] 0.7417141 0.7991160 0.8103572 #>   [71,] 1.5934575 1.6601212 1.7684665 #>   [72,] 0.9700214 1.0241940 1.0550848 #>   [73,] 0.8160037 0.8239984 0.8353971 #>   [74,] 0.7425975 0.8317666 0.8414877 #>   [75,] 1.0077181 1.0205950 1.0566610 #>   [76,] 0.6592935 0.6721577 0.6758086 #>   [77,] 0.5335880 0.5378144 0.5713980 #>   [78,] 0.7272820 0.7279788 0.7330853 #>   [79,] 0.6932491 0.6932583 0.6964082 #>   [80,] 0.8755787 0.9005702 0.9404834 #>   [81,] 0.9074225 0.9845362 1.0241940 #>   [82,] 0.6905801 0.7137954 0.7184054 #>   [83,] 1.1196927 1.1409751 1.1575593 #>   [84,] 0.5227947 0.5412305 0.5598681 #>   [85,] 0.9170751 0.9175525 0.9179790 #>   [86,] 0.9584158 1.0985868 1.1228491 #>   [87,] 1.2922184 1.3363160 1.3609834 #>   [88,] 0.6592809 0.6770606 0.7032165 #>   [89,] 1.1314950 1.1687817 1.1783481 #>   [90,] 0.6719544 0.7079217 0.7386199 #>   [91,] 1.1118401 1.1205528 1.1445001 #>   [92,] 0.5667394 0.5730288 0.6175804 #>   [93,] 0.7005076 0.7133062 0.7153348 #>   [94,] 0.5895014 0.5917509 0.6016396 #>   [95,] 0.7771770 0.7884985 0.8315416 #>   [96,] 1.7265126 1.7435906 1.7445030 #>   [97,] 0.5040281 0.5208184 0.5537049 #>   [98,] 0.4449773 0.4516372 0.4692751 #>   [99,] 0.6115549 0.6158304 0.6378444 #>  [100,] 0.9354204 0.9455693 0.9905251 #>  [101,] 1.3341838 1.3623201 1.3752225 #>  [102,] 0.5790049 0.6174315 0.6204562 #>  [103,] 1.5930851 1.6862912 1.6971924 #>  [104,] 0.5805822 0.6228565 0.6367149 #>  [105,] 0.9493255 0.9705761 0.9815498 #>  [106,] 0.7654577 0.7878546 0.8078562 #>  [107,] 0.7851285 0.7894779 0.8227354 #>  [108,] 1.1885097 1.2019631 1.2058480 #>  [109,] 0.9167986 0.9568587 0.9655608 #>  [110,] 0.6240429 0.6396556 0.6568937 #>  [111,] 0.7240371 0.7788490 0.8015642 #>  [112,] 0.6546214 0.6758646 0.6802992 #>  [113,] 1.2752111 1.2884554 1.3515871 #>  [114,] 0.9883806 1.0074200 1.0100816 #>  [115,] 0.8558795 0.9063029 0.9142399 #>  [116,] 1.2545192 1.3128152 1.3605657 #>  [117,] 0.7824744 0.8020842 0.8029824 #>  [118,] 0.6627432 0.6766574 0.6941181 #>  [119,] 0.5958303 0.6028659 0.6198447 #>  [120,] 0.8788397 0.9048350 0.9056991 #>  [121,] 0.6767893 0.6806766 0.7322902 #>  [122,] 0.6653807 0.6802317 0.6825346 #>  [123,] 0.9489922 0.9564090 0.9672334 #>  [124,] 0.7740898 0.8171240 0.8370736 #>  [125,] 1.2644675 1.2798187 1.3189938 #>  [126,] 0.9898653 0.9900246 1.0105372 #>  [127,] 0.5588387 0.5809533 0.6133399 #>  [128,] 0.5372039 0.5807697 0.6132478 #>  [129,] 0.8556766 0.9230649 0.9447409 #>  [130,] 0.7305971 0.8272327 0.8457194 #>  [131,] 0.5506301 0.5573282 0.5679666 #>  [132,] 1.0655072 1.0808979 1.1334305 #>  [133,] 1.0681000 1.1386012 1.1510827 #>  [134,] 2.4872799 2.5959676 2.6552762 #>  [135,] 0.6618954 0.7348770 0.7598212 #>  [136,] 0.5928107 0.6195524 0.6251270 #>  [137,] 0.6740272 0.7008330 0.7054827 #>  [138,] 0.6371241 0.6390824 0.6426610 #>  [139,] 0.7462865 0.7660565 0.8072935 #>  [140,] 0.7280391 0.8339013 0.8341269 #>  [141,] 0.8558880 0.8762773 0.8823643 #>  [142,] 0.7071421 0.7094449 0.7288543 #>  [143,] 0.8340858 0.9183314 0.9629230 #>  [144,] 0.9865250 0.9872804 1.0053108 #>  [145,] 0.8596810 0.8604560 0.8626647 #>  [146,] 0.6846134 0.7174378 0.7343442 #>  [147,] 1.5118111 1.6141575 1.6432792 #>  [148,] 0.9722573 1.0088331 1.0143987 #>  [149,] 1.5163554 1.5915532 1.5973644 #>  [150,] 0.6337434 0.6818849 0.6923974 #>  [151,] 0.9647318 1.0097287 1.0158450 #>  [152,] 0.5145445 0.5161952 0.5636673 #>  [153,] 0.9591380 0.9731357 0.9852739 #>  [154,] 0.8315845 0.8442390 0.8533837 #>  [155,] 0.5403586 0.5467098 0.5598681 #>  [156,] 1.3537301 1.4114812 1.4394674 #>  [157,] 1.4454133 1.4607410 1.5064948 #>  [158,] 0.6135846 0.6180253 0.6664163 #>  [159,] 0.7250932 0.7287298 0.7290958 #>  [160,] 1.2093914 1.2313187 1.2556414 #>  [161,] 1.0089855 1.0538522 1.0785440 #>  [162,] 0.6757462 0.7240766 0.7659614 #>  [163,] 0.7687130 0.8082824 0.8171735 #>  [164,] 0.6233329 0.6304890 0.6313050 #>  [165,] 1.4616999 1.5174514 1.5721274 #>  [166,] 0.6721577 0.6994169 0.7038862 #>  [167,] 1.2768195 1.2814395 1.3036571 #>  [168,] 0.8235315 0.8249689 0.8283192 #>  [169,] 0.8198426 0.8202999 0.8479362 #>  [170,] 0.7108881 0.7346666 0.7360583 #>  [171,] 0.8718665 0.8740571 0.8776989 #>  [172,] 0.5846812 0.5958303 0.6011192 #>  [173,] 0.6626524 0.6653122 0.7266105 #>  [174,] 1.1819443 1.2076964 1.2120583 #>  [175,] 1.1313783 1.1891393 1.2026427 #>  [176,] 0.6859557 0.6869942 0.6878991 #>  [177,] 0.5137588 0.5225285 0.5557493 #>  [178,] 0.8959700 0.9796314 1.0364860 #>  [179,] 0.5770327 0.5882276 0.6009565 #>  [180,] 2.0204604 2.0694040 2.0749518 #>  [181,] 1.1863894 1.1923790 1.2206770 #>  [182,] 0.9832776 0.9884910 1.0023324 #>  [183,] 0.7100166 0.7131537 0.7155197 #>  [184,] 0.7992771 0.8237054 0.8714729 #>  [185,] 0.5218213 0.5985584 0.6034474 #>  [186,] 0.8047047 0.8144011 0.8541661 #>  [187,] 0.6924126 0.7150785 0.7278058 #>  [188,] 0.7622161 0.7656029 0.7953220 #>  [189,] 1.1427388 1.1431726 1.1546493 #>  [190,] 0.7701470 0.7790233 0.8067909 #>  [191,] 1.1606581 1.2173280 1.2795418 #>  [192,] 0.7788434 0.7821499 0.7919436 #>  [193,] 0.6816691 0.6918275 0.7467989 #>  [194,] 0.5596184 0.5606233 0.5652899 #>  [195,] 0.9206690 0.9298060 0.9355456 #>  [196,] 1.0049236 1.0205277 1.0592125 #>  [197,] 0.5426305 0.5825898 0.5862209 #>  [198,] 0.5791427 0.5835731 0.5858753 #>  [199,] 1.3948949 1.3987834 1.4445324 #>  [200,] 0.5557377 0.5578691 0.6039726 #>  [201,] 0.5761745 0.6501416 0.6598097 #>  [202,] 0.8067877 0.8212055 0.8279510 #>  [203,] 0.8736216 0.8950173 0.9058240 #>  [204,] 0.6050252 0.6418883 0.6550492 #>  [205,] 1.2295807 1.2576538 1.2583885 #>  [206,] 0.6541173 0.6681480 0.6944895 #>  [207,] 0.5521316 0.5557493 0.5694808 #>  [208,] 1.3707962 1.6141597 1.6176440 #>  [209,] 0.5460592 0.5746612 0.5791427 #>  [210,] 0.7617271 0.7680534 0.7719148 #>  [211,] 0.6542407 0.6598097 0.6727760 #>  [212,] 0.8612413 0.8770007 0.8870729 #>  [213,] 0.6685580 0.7420385 0.7763022 #>  [214,] 0.5704412 0.5713980 0.6179979 #>  [215,] 0.6764995 0.6915562 0.7127908 #>  [216,] 0.7162156 0.7504386 0.7673691 #>  [217,] 0.5232179 0.5243456 0.5473133 #>  [218,] 0.5179519 0.5222946 0.5700427 #>  [219,] 0.6831924 0.6933770 0.6987602 #>  [220,] 0.6333113 0.6336623 0.6593403 #>  [221,] 0.7588550 0.7775146 0.7841923 #>  [222,] 0.8017039 0.8022013 0.8048482 #>  [223,] 1.0557908 1.0800392 1.0892926 #>  [224,] 0.8168935 0.8647643 0.8731232 #>  [225,] 0.6919281 0.7096687 0.7864836 #>  [226,] 1.0455905 1.0628956 1.0861493 #>  [227,] 1.0612889 1.1025347 1.1203133 #>  [228,] 0.8592549 0.8789890 0.8801880 #>  [229,] 0.5992759 0.6214324 0.6271443 #>  [230,] 1.4684446 1.4924547 1.5477174 #>  [231,] 0.6135916 0.6156317 0.6643319 #>  [232,] 0.6229712 0.6605482 0.6674715 #>  [233,] 0.7380231 0.7551373 0.7783057 #>  [234,] 1.0565866 1.0614860 1.1141702 #>  [235,] 1.1990580 1.2107537 1.2539164 #>  [236,] 0.7419817 0.7677127 0.7880697 #>  [237,] 0.7717364 0.7745483 0.7754042 #>  [238,] 1.1208359 1.1692810 1.1800529 #>  [239,] 0.9618203 0.9878033 1.0345625 #>  [240,] 0.8605979 0.9219014 0.9260924 #>  [241,] 0.6337434 0.6370999 0.6386616 #>  [242,] 0.5729184 0.5931668 0.6229873 #>  [243,] 0.9142293 0.9200378 0.9539042 #>  [244,] 0.8382138 0.8575791 0.8736216 #>  [245,] 0.6022413 0.6272293 0.6304719 #>  [246,] 0.4371204 0.4519493 0.4763411 #>  [247,] 1.4786565 1.4843226 1.4928706 #>  [248,] 1.1699997 1.2653772 1.2985542 #>  [249,] 0.5501888 0.6453203 0.6783014 #>  [250,] 1.4210078 1.4473385 1.4500830 #>  [251,] 0.7482518 0.7620870 0.7989422 #>  [252,] 1.2218823 1.2487337 1.2651450 #>  [253,] 0.8999477 0.9029546 0.9677809 #>  [254,] 1.0605155 1.1967939 1.2252802 #>  [255,] 1.2437312 1.2448090 1.2488599 #>  [256,] 1.4472249 1.4762157 1.4778053 #>  [257,] 0.8705738 0.8743691 0.9120959 #>  [258,] 0.8659277 0.8660807 0.8669018 #>  [259,] 1.5801845 1.5963285 1.6262633 #>  [260,] 1.0736334 1.0834241 1.1798489 #>  [261,] 0.7478492 0.7888394 0.7920457 #>  [262,] 0.6141430 0.6328031 0.6370944 #>  [263,] 0.8771256 0.8825770 0.8890167 #>  [264,] 0.5194277 0.5246158 0.5324600 #>  [265,] 1.4875086 1.4909569 1.5096642 #>  [266,] 0.8152250 0.8434764 0.8517215 #>  [267,] 0.6737327 0.6993310 0.6994048 #>  [268,] 0.7114841 0.7225600 0.7300092 #>  [269,] 0.5218213 0.5240442 0.5570848 #>  [270,] 0.9300854 0.9702421 0.9946128 #>  [271,] 0.6451166 0.6662427 0.7271567 #>  [272,] 0.7558682 0.9200208 0.9482881 #>  [273,] 1.1026412 1.1506770 1.1986956 #>  [274,] 2.2658752 2.2668154 2.2932933 #>  [275,] 0.5131093 0.5465711 0.5519121 #>  [276,] 0.6594803 0.6768154 0.6929480 #>  [277,] 0.9393172 0.9702215 0.9704283 #>  [278,] 0.5965604 0.6182062 0.6251626 #>  [279,] 1.0348800 1.0530027 1.0548111 #>  [280,] 0.9378431 0.9924480 1.0477207 #>  [281,] 1.0691395 1.0860069 1.1019515 #>  [282,] 1.4818429 1.5489017 1.5584826 #>  [283,] 0.8969979 0.9400798 0.9939801 #>  [284,] 0.7645820 0.7701564 0.7853868 #>  [285,] 0.6250507 0.6409155 0.6429299 #>  [286,] 0.6531734 0.6577293 0.7326011 #>  [287,] 0.8089842 0.8240828 0.8388897 #>  [288,] 0.9161174 0.9223275 0.9235403 #>  [289,] 0.6597154 0.6640741 0.6993310 #>  [290,] 1.1230701 1.1621211 1.1942615 #>  [291,] 0.5992808 0.6123358 0.6226461 #>  [292,] 1.1510527 1.1711552 1.1814694 #>  [293,] 0.7722860 0.8520193 0.8702193 #>  [294,] 0.6435589 0.6560564 0.6916559 #>  [295,] 0.5258108 0.5649370 0.5890305 #>  [296,] 0.8222286 0.8738491 0.8851107 #>  [297,] 0.7174918 0.7564149 0.7680534 #>  [298,] 0.6628199 0.6694307 0.6700224 #>  [299,] 0.8325139 0.8352397 0.8406132 #>  [300,] 0.8433463 0.9733627 0.9750751 #>  [301,] 0.8947064 0.8951026 0.8956492 #>  [302,] 1.0425240 1.0725057 1.1829959 #>  [303,] 1.3922346 1.4175112 1.4303798 #>  [304,] 0.6452326 0.6480840 0.6621922 #>  [305,] 0.5754223 0.6113916 0.6144553 #>  [306,] 0.6800106 0.8150319 0.8170298 #>  [307,] 0.6804203 0.6885744 0.6999392 #>  [308,] 0.8404210 0.8832859 0.8921384 #>  [309,] 0.9014225 0.9197764 1.0259928 #>  [310,] 1.9617745 1.9651043 1.9913546 #>  [311,] 0.6174531 0.6196682 0.6387606 #>  [312,] 0.7845100 0.7951173 0.7980494 #>  [313,] 0.8057038 0.8233448 0.8322304 #>  [314,] 0.7051281 0.7157954 0.7181447 #>  [315,] 0.7346666 0.7444149 0.7635248 #>  [316,] 0.6060237 0.6162332 0.6202699 #>  [317,] 0.5097468 0.5288416 0.5325051 #>  [318,] 0.9294858 0.9607273 1.0185192 #>  [319,] 0.7535961 0.7572446 0.7602896 #>  [320,] 0.9526575 0.9676288 0.9959417 #>  [321,] 1.0002893 1.0060970 1.0273897 #>  [322,] 1.1760579 1.1923203 1.2204804 #>  [323,] 0.8988852 0.8989069 0.9118014 #>  [324,] 0.8468315 0.8764557 0.8823249 #>  [325,] 0.6559040 0.6620518 0.6651776 #>  [326,] 0.9539751 0.9745271 0.9773662 #>  [327,] 0.7670299 0.7892028 0.7976156 #>  [328,] 1.7499195 1.7531118 1.7659691 #>  [329,] 1.0736334 1.0847188 1.1291551 #>  [330,] 0.6882587 0.7041084 0.7196825 #>  [331,] 0.6943131 0.7052746 0.7071739 #>  [332,] 0.6360933 0.6462391 0.6497605 #>  [333,] 0.6863163 0.7229695 0.7414229 #>  [334,] 0.7807869 0.7845168 0.8633038 #>  [335,] 0.6201964 0.6203217 0.6615527 #>  [336,] 0.5882569 0.5890305 0.6098724 #>  [337,] 0.6021410 0.6241847 0.6550492 #>  [338,] 1.4292412 1.4534723 1.5570138 #>  [339,] 0.8761457 0.9401235 0.9787645 #>  [340,] 0.6309471 0.6833368 0.6974513 #>  [341,] 0.9623328 1.0058668 1.0074828 #>  [342,] 0.6580988 0.6703705 0.7326011 #>  [343,] 0.5400213 0.5405902 0.5482370 #>  [344,] 0.5570848 0.5982715 0.6439753 #>  [345,] 0.8198152 0.8313339 0.8493569 #>  [346,] 0.7095800 0.7157843 0.7207543 #>  [347,] 0.5189760 0.5232179 0.5661164 #>  [348,] 0.7650004 0.7851644 0.8159160 #>  [349,] 1.0544779 1.0743902 1.2318797 #>  [350,] 0.8319861 0.8388067 0.8404836 #>  [351,] 1.2361865 1.2429250 1.2602225 #>  [352,] 0.8676969 0.8952482 0.9037302 #>  [353,] 1.3360647 1.4224385 1.4548295 #>  [354,] 1.2396821 1.2783272 1.3064367 #>  [355,] 0.5398482 0.5721248 0.5741157 #>  [356,] 0.7954430 0.8290888 0.8702741 #>  [357,] 0.6968270 0.7160482 0.7376919 #>  [358,] 0.5742944 0.5818563 0.6336996 #>  [359,] 0.6008462 0.6280186 0.6307834 #>  [360,] 0.4996912 0.5743189 0.5894852 #>  [361,] 0.5910014 0.5910346 0.6250859 #>  [362,] 0.7777525 0.8457194 0.9055225 #>  [363,] 0.6503458 0.6541122 0.6585099 #>  [364,] 1.0361401 1.0653292 1.1203451 #>  [365,] 0.7036223 0.7161262 0.7328319 #>  [366,] 1.0925544 1.1118273 1.1671282 #>  [367,] 0.7807869 0.7875080 0.8027907 #>  [368,] 1.1570545 1.1952520 1.1956069 #>  [369,] 0.6749353 0.6818377 0.7009247 #>  [370,] 1.0198081 1.0600902 1.0888265 #>  [371,] 0.7541132 0.7691889 0.8204806 #>  [372,] 0.6314640 0.6558178 0.6606326 #>  [373,] 0.7036595 0.7175116 0.7860624 #>  [374,] 2.1698917 2.2416224 2.2589534 #>  [375,] 0.6880611 0.7048888 0.7105710 #>  [376,] 0.5354308 0.5626250 0.5696255 #>  [377,] 0.5483717 0.5518659 0.5652559 #>  [378,] 1.3459084 1.4141992 1.4502682 #>  [379,] 0.9217319 0.9254085 0.9299128 #>  [380,] 1.5960042 1.6002309 1.6084539 #>  [381,] 0.5069982 0.5527998 0.5598889 #>  [382,] 0.8448059 0.8514475 0.8670271 #>  [383,] 0.6229000 0.6388276 0.6499953 #>  [384,] 1.2073556 1.2296689 1.2652180 #>  [385,] 0.6433032 0.6518106 0.6621926 #>  [386,] 0.7008661 0.7059969 0.7283386 #>  [387,] 1.4095979 1.5009565 1.5194139 #>  [388,] 0.7665269 0.7777589 0.7899283 #>  [389,] 1.3766332 1.3855522 1.3926060 #>  [390,] 0.5456250 0.5578898 0.6123959 #>  [391,] 1.4828447 1.4877927 1.5048957 #>  [392,] 0.7846228 0.7892625 0.7922531 #>  [393,] 0.9516774 0.9682656 1.0214516 #>  [394,] 1.1772781 1.1877023 1.2362356 #>  [395,] 1.1009524 1.2174639 1.2343266 #>  [396,] 0.8319218 0.8569658 0.8846019 #>  [397,] 0.8424373 0.8559487 0.8644651 #>  [398,] 0.8913806 0.9004634 0.9069602 #>  [399,] 1.3929024 1.4127868 1.4349287 #>  [400,] 1.0771750 1.0819807 1.1455165 #>  [401,] 0.5511167 0.5636673 0.5647924 #>  [402,] 0.7235669 0.7701206 0.7757607 #>  [403,] 0.5424646 0.5535756 0.5958036 #>  [404,] 0.9602615 0.9609521 0.9700214 #>  [405,] 0.9074713 0.9363919 0.9614575 #>  [406,] 0.4789001 0.4809309 0.5416257 #>  [407,] 0.6014184 0.6453987 0.6482748 #>  [408,] 1.8438934 1.8499127 1.8744516 #>  [409,] 0.7860624 0.8160037 0.8550086 #>  [410,] 0.6757577 0.7049714 0.7393873 #>  [411,] 0.6092421 0.6105505 0.6198539 #>  [412,] 0.5074470 0.5085829 0.5140278 #>  [413,] 0.5408695 0.5902875 0.5997382 #>  [414,] 1.1017652 1.1078181 1.1804890 #>  [415,] 0.6983773 0.7445439 0.7448935 #>  [416,] 0.8237971 0.8449966 0.8621819 #>  [417,] 0.7114302 0.7154212 0.7413690 #>  [418,] 0.8457616 0.8838627 0.9074225 #>  [419,] 0.7793249 0.7967961 0.8196164 #>  [420,] 1.1596871 1.1765319 1.2036378 #>  [421,] 0.8584644 0.8620416 0.8851107 #>  [422,] 0.9092685 0.9280911 0.9414407 #>  [423,] 0.5557377 0.5716936 0.6146372 #>  [424,] 0.9676111 0.9701419 0.9882811 #>  [425,] 0.6646183 0.6726100 0.6801906 #>  [426,] 0.5339270 0.5432774 0.5730035 #>  [427,] 0.7692991 0.7928768 0.8754856 #>  [428,] 2.0587619 2.0905179 2.0975611 #>  [429,] 1.2060544 1.2846109 1.3640997 #>  [430,] 0.6479132 0.7477448 0.7748020 #>  [431,] 0.5802528 0.5809487 0.6057094 #>  [432,] 1.1796561 1.2394457 1.3000782 #>  [433,] 0.7418976 0.7454514 0.7795770 #>  [434,] 0.9147704 0.9393745 0.9568413 #>  [435,] 0.7063428 0.8004034 0.8144299 #>  [436,] 0.6941012 0.7122063 0.7530836 #>  [437,] 0.5704276 0.5724926 0.5729782 #>  [438,] 1.2523472 1.2538711 1.2788447 #>  [439,] 0.7687977 0.7742435 0.8753143 #>  [440,] 0.5999547 0.6446773 0.6457773 #>  [441,] 0.9073379 0.9878033 1.0085987 #>  [442,] 1.1395834 1.2084802 1.2232158 #>  [443,] 0.6885849 0.7079957 0.7133029 #>  [444,] 0.6249295 0.6526159 0.6591370 #>  [445,] 1.1534727 1.2155114 1.2229782 #>  [446,] 0.7676981 0.7710884 0.7712676 #>  [447,] 0.8533837 0.8933690 0.9023371 #>  [448,] 1.3816140 1.4492035 1.4963114 #>  [449,] 0.6556809 0.6852159 0.6904861 #>  [450,] 0.6027037 0.6085293 0.6709511 #>  [451,] 0.6938075 0.7407056 0.7584919 #>  [452,] 0.5593995 0.5614941 0.5627290 #>  [453,] 0.4786528 0.5672049 0.5672148 #>  [454,] 0.5696255 0.5942179 0.6332046 #>  [455,] 1.1486103 1.1506770 1.1949200 #>  [456,] 0.5682325 0.5883255 0.5908652 #>  [457,] 0.4569881 0.4771530 0.4868733 #>  [458,] 1.2009537 1.2508458 1.3211556 #>  [459,] 0.6899226 0.7654472 0.7933649 #>  [460,] 1.0503209 1.1170957 1.1491785 #>  [461,] 0.9098028 0.9104124 0.9469539 #>  [462,] 0.5669713 0.5950993 0.5973878 #>  [463,] 0.8753298 0.9274014 0.9515346 #>  [464,] 1.1157987 1.1217176 1.1379320 #>  [465,] 0.7794631 0.7817427 0.7850899 #>  [466,] 0.8776989 0.8875375 0.9338844 #>  [467,] 0.6610730 0.6681432 0.7049075 #>  [468,] 0.6555521 0.6619150 0.6842067 #>  [469,] 1.4175112 1.4374870 1.4441436 #>  [470,] 1.0669753 1.0912390 1.1733893 #>  [471,] 0.7524963 0.7717364 0.7991995 #>  [472,] 0.7440060 0.7620013 0.7639201 #>  [473,] 0.6046100 0.6223870 0.6850918 #>  [474,] 0.6144553 0.6274192 0.6317866 #>  [475,] 1.1814694 1.1887158 1.2239230 #>  [476,] 0.9890464 0.9914821 0.9983024 #>  [477,] 0.5764663 0.5848560 0.6034474 #>  [478,] 0.8672449 0.9017760 0.9018789 #>  [479,] 0.7657995 0.7730291 0.7752574 #>  [480,] 0.5909552 0.5994868 0.6007187 #>  [481,] 0.5960407 0.6205652 0.6880698 #>  [482,] 0.7835007 0.7915309 0.7998295 #>  [483,] 0.7141968 0.7288543 0.7381103 #>  [484,] 1.5381696 1.5492691 1.5545486 #>  [485,] 0.8085637 0.8103715 0.8340858 #>  [486,] 0.7012934 0.7144698 0.7240766 #>  [487,] 0.9230013 0.9437740 0.9624609 #>  [488,] 0.8353649 0.8549561 0.8660138 #>  [489,] 1.6086686 1.6259682 1.6602191 #>  [490,] 0.8980701 0.9055363 0.9238546 #>  [491,] 0.4789029 0.5110079 0.5781169 #>  [492,] 0.6336923 0.7096631 0.7459129 #>  [493,] 1.5261036 1.5714135 1.5869488 #>  [494,] 1.0993698 1.1529893 1.1537603 #>  [495,] 0.5651353 0.5764663 0.5784332 #>  [496,] 0.5817762 0.5857739 0.5928107 #>  [497,] 0.6457748 0.6642713 0.6648085 #>  [498,] 1.0615903 1.0653292 1.0704088 #>  [499,] 0.7534195 0.7614039 0.7616298 #>  [500,] 0.8431450 0.9000017 0.9000385 #>  [501,] 1.2842762 1.3008964 1.3021851 #>  [502,] 0.6313050 0.6315009 0.6706960 #>  [503,] 0.5970748 0.6161625 0.6458729 #>  [504,] 1.3665107 1.5239847 1.5512407 #>  [505,] 0.5973878 0.6072654 0.6236160 #>  [506,] 0.6661913 0.7400270 0.7700654 #>  [507,] 0.4985570 0.5447432 0.5821272 #>  [508,] 0.7248737 0.7505091 0.7572446 #>  [509,] 0.9155180 0.9425447 0.9584064 #>  [510,] 1.4943602 1.5699976 1.6299051 #>  [511,] 0.5140278 0.5275454 0.5355005 #>  [512,] 1.0043735 1.0343591 1.0518637 #>  [513,] 0.7247602 0.7337862 0.7386199 #>  [514,] 0.5966885 0.6228441 0.6251581 #>  [515,] 1.1124419 1.1195610 1.1386404 #>  [516,] 1.3823112 1.3975161 1.4043618 #>  [517,] 0.7329217 0.7444304 0.7448935 #>  [518,] 1.0368266 1.0504111 1.0522302 #>  [519,] 0.6135174 0.6149601 0.6338556 #>  [520,] 0.8198152 0.8267141 0.8659946 #>  [521,] 0.4891539 0.5235872 0.5256944 #>  [522,] 0.9635550 1.0336388 1.0366009 #>  [523,] 1.0145764 1.0344742 1.0477628 #>  [524,] 0.8751181 0.9209766 0.9785296 #>  [525,] 1.0617627 1.0788509 1.1213197 #>  [526,] 1.1655841 1.1780766 1.1904503 #>  [527,] 2.0010917 2.0749150 2.1131478 #>  [528,] 0.7562352 0.7641880 0.7719467 #>  [529,] 1.0242264 1.0746578 1.0826059 #>  [530,] 1.1393663 1.1617176 1.1985682 #>  [531,] 1.1608150 1.1729075 1.2203816 #>  [532,] 2.5262203 2.5273686 2.6100900 #>  [533,] 0.4872628 0.4907996 0.5587166 #>  [534,] 0.7253652 0.7437849 0.7659800 #>  [535,] 0.5482191 0.5639746 0.5664964 #>  [536,] 0.8158878 0.8505550 0.9308130 #>  [537,] 0.6635077 0.6777638 0.7086041 #>  [538,] 0.7588007 0.7603440 0.7742435 #>  [539,] 0.8096278 0.8153108 0.9767769 #>  [540,] 0.5699772 0.5740952 0.5834436 #>  [541,] 0.7247602 0.7312143 0.8199662 #>  [542,] 0.6063359 0.6618954 0.6963415 #>  [543,] 0.8185371 0.8445616 0.8528579 #>  [544,] 0.8160204 0.8487347 0.8673344 #>  [545,] 0.5967867 0.6257806 0.6314090 #>  [546,] 0.6862685 0.7038275 0.7203133 #>  [547,] 0.7162099 0.7171399 0.7262751 #>  [548,] 0.5821272 0.6129909 0.6225136 #>  [549,] 0.6900631 0.7223956 0.7620719 #>  [550,] 1.0864606 1.0880151 1.1135628 #>  [551,] 0.8454389 0.8547442 0.8742379 #>  [552,] 0.8875375 0.8896104 0.9004634 #>  [553,] 0.6617464 0.6725148 0.6777638 #>  [554,] 1.4883536 1.5957792 1.6362332 #>  [555,] 0.6563030 0.6590473 0.6612733 #>  [556,] 1.0615903 1.0622204 1.0899279 #>  [557,] 0.7697998 0.7725121 0.7730722 #>  [558,] 0.8267148 0.9782313 1.0216452 #>  [559,] 0.6231919 0.6378069 0.6665560 #>  [560,] 0.6676759 0.6821129 0.6980749 #>  [561,] 0.6473393 0.6536386 0.7373403 #>  [562,] 0.8399622 0.8458083 0.8822620 #>  [563,] 0.6332547 0.6560698 0.6681171 #>  [564,] 0.8237054 0.8477325 0.9198295 #>  [565,] 0.9062639 0.9558143 1.0381904 #>  [566,] 0.9779375 0.9825040 1.0098124 #>  [567,] 0.6017092 0.6078117 0.6288813 #>  [568,] 0.6276742 0.6607649 0.7019213 #>  [569,] 0.6450176 0.6615662 0.6901113 #>  [570,] 0.5809487 0.6047057 0.6082076 #>  [571,] 0.6775523 0.6813331 0.6961370 #>  [572,] 0.7731688 0.8487742 0.8705035 #>  [573,] 0.6967940 0.7210208 0.7454514 #>  [574,] 0.9469842 0.9591797 0.9653947 #>  [575,] 0.7467989 0.7545943 0.7933649 #>  [576,] 0.5630024 0.5647258 0.5672148 #>  [577,] 0.8008168 0.8496007 0.9295336 #>  [578,] 0.7693043 0.8117581 0.8448464 #>  [579,] 0.6964153 0.7058938 0.7078000 #>  [580,] 0.5372039 0.5439449 0.5584724 #>  [581,] 1.1512343 1.2583814 1.2786788 #>  [582,] 0.6612733 0.6647689 0.6893928 #>  [583,] 0.5241491 0.5437051 0.5484135 #>  [584,] 0.5540681 0.6572929 0.6594479 #>  [585,] 1.0486903 1.1096647 1.1473866 #>  [586,] 0.9882694 1.1165813 1.1485202 #>  [587,] 0.6774138 0.6875551 0.7442190 #>  [588,] 1.0616415 1.0721961 1.1691563 #>  [589,] 0.5256661 0.5289644 0.5628365 #>  [590,] 1.2205609 1.2421270 1.2561108 #>  [591,] 1.5400110 1.5479703 1.5597250 #>  [592,] 0.9994317 1.0345185 1.0370780 #>  [593,] 0.6991892 0.7073436 0.7273214 #>  [594,] 0.9619119 1.0240389 1.0359169 #>  [595,] 0.7845100 0.7971560 0.8078429 #>  [596,] 0.5787623 0.6180253 0.6469025 #>  [597,] 0.7927551 0.8125518 0.8231040 #>  [598,] 0.8764223 0.8815677 0.9226117 #>  [599,] 0.6408979 0.6563265 0.6565797 #>  [600,] 1.0425115 1.0595107 1.0667413 #>  [601,] 0.7526025 0.7602851 0.7626178 #>  [602,] 0.8279909 0.8363286 0.8797174 #>  [603,] 0.5994868 0.6024918 0.6046190 #>  [604,] 0.4844312 0.4955157 0.5198857 #>  [605,] 0.6186975 0.6485714 0.6573254 #>  [606,] 0.7819503 0.7928378 0.8043531 #>  [607,] 1.2410962 1.2437602 1.2439333 #>  [608,] 0.6408433 0.6515345 0.6689682 #>  [609,] 0.5704215 0.6279854 0.6590473 #>  [610,] 1.6094768 1.6108162 1.6298917 #>  [611,] 0.9767769 1.0167508 1.0977857 #>  [612,] 0.7980223 0.8239984 0.8250816 #>  [613,] 0.6718494 0.6875551 0.6919281 #>  [614,] 0.5593225 0.5793365 0.6079135 #>  [615,] 0.4818327 0.4891539 0.5256661 #>  [616,] 1.5505222 1.5926211 1.6220918 #>  [617,] 0.6383539 0.6439120 0.6630961 #>  [618,] 1.4085910 1.4379822 1.4886643 #>  [619,] 0.9926408 1.0616810 1.1225953 #>  [620,] 0.8176453 0.8282937 0.8886644 #>  [621,] 0.9257454 0.9290334 0.9422082 #>  [622,] 0.7819732 0.7954430 0.8009699 #>  [623,] 0.5666862 0.5672440 0.5740067 #>  [624,] 1.4875922 1.4972065 1.5048458 #>  [625,] 1.1221206 1.1274130 1.1480688 #>  [626,] 0.8359799 0.8586241 0.8876100 #>  [627,] 0.4569881 0.4629106 0.4895099 #>  [628,] 1.1968027 1.2375482 1.2878974 #>  [629,] 1.5304827 1.5511506 1.5638936 #>  [630,] 0.5479738 0.5515561 0.5518659 #>  [631,] 1.5111475 1.5360287 1.5560707 #>  [632,] 0.7235669 0.7257831 0.7434416 #>  [633,] 0.7686938 0.7826500 0.8125389 #>  [634,] 0.6860529 0.7049286 0.7254453 #>  [635,] 1.1356901 1.1363977 1.1722021 #>  [636,] 1.6980906 1.7485351 1.7805267 #>  [637,] 0.8013397 0.8605681 0.8882029 #>  [638,] 0.8673344 0.8815566 0.9099989 #>  [639,] 1.0334768 1.1674369 1.2106855 #>  [640,] 1.2081791 1.2525037 1.3375542 #>  [641,] 0.6291793 0.6625722 0.6752793 #>  [642,] 0.5604979 0.5606233 0.5620804 #>  [643,] 0.8770783 0.8971339 0.9058263 #>  [644,] 1.4137658 1.4321012 1.4879238 #>  [645,] 0.5562677 0.5592037 0.6146086 #>  [646,] 1.0996227 1.1054306 1.1140110 #>  [647,] 0.6357168 0.6360933 0.6541122 #>  [648,] 1.4806357 1.4810798 1.4911379 #>  [649,] 0.9243285 0.9372296 1.0010246 #>  [650,] 1.0874832 1.1171587 1.1259687 #>  [651,] 0.5103525 0.5920035 0.6572339 #>  [652,] 0.9363277 0.9399600 0.9666460 #>  [653,] 0.7825501 0.8308333 0.8345242 #>  [654,] 0.4806257 0.4863547 0.4996912 #>  [655,] 0.6466024 0.6596178 0.7215252 #>  [656,] 0.6307834 0.6843629 0.6885073 #>  [657,] 0.5074470 0.5515886 0.5793365 #>  [658,] 0.6378617 0.6420237 0.6725318 #>  [659,] 0.7052746 0.7147273 0.7326900 #>  [660,] 0.6594736 0.6703015 0.6777440 #>  [661,] 0.8022871 0.8180311 0.8183737 #>  [662,] 1.0984769 1.1103467 1.1550984 #>  [663,] 0.6635077 0.7032007 0.7157843 #>  [664,] 1.4904191 1.5549141 1.5765536 #>  [665,] 0.6519719 0.6626190 0.6745747 #>  [666,] 0.6158304 0.7074511 0.7090391 #>  [667,] 0.6935579 0.7065787 0.7127908 #>  [668,] 0.7017065 0.7178708 0.7484992 #>  [669,] 0.8439341 0.8492235 0.8541900 #>  [670,] 1.9294222 1.9333575 2.0201173 #>  [671,] 0.8806450 0.8837030 0.8966701 #>  [672,] 0.7904778 0.8538019 0.8816684 #>  [673,] 0.6089156 0.6114181 0.6462134 #>  [674,] 1.1377923 1.1903373 1.1934671 #>  [675,] 0.9600437 0.9702363 0.9999900 #>  [676,] 0.8247554 0.8579654 0.9085854 #>  [677,] 0.7377775 0.7777544 0.7892439 #>  [678,] 0.7008330 0.7040804 0.7079217 #>  [679,] 0.8767673 0.8772204 0.9020767 #>  [680,] 0.5494312 0.5691183 0.5897962 #>  [681,] 0.5589401 0.5873715 0.6055804 #>  [682,] 0.7150047 0.7291237 0.7617271 #>  [683,] 0.6644178 0.6748338 0.6878991 #>  [684,] 0.8065490 0.8745432 0.8794170 #>  [685,] 0.6140383 0.6209437 0.6460955 #>  [686,] 0.8858478 0.8966701 0.9057307 #>  [687,] 0.6900279 0.7420385 0.8230467 #>  [688,] 0.7762597 0.7890128 0.8015642 #>  [689,] 1.0195234 1.1216178 1.1937617 #>  [690,] 0.7659800 0.8100529 0.8461882 #>  [691,] 0.6854161 0.6893834 0.7257976 #>  [692,] 0.8006179 0.8010006 0.8574266 #>  [693,] 0.6566929 0.6592935 0.6658073 #>  [694,] 0.7922009 0.7950528 0.8122076 #>  [695,] 0.9309842 0.9361434 0.9457543 #>  [696,] 0.5959279 0.6008488 0.6344415 #>  [697,] 0.5649460 0.5705900 0.5762921 #>  [698,] 0.7777422 0.8355959 0.8870819 #>  [699,] 0.8074017 0.8244606 0.8518826 #>  [700,] 0.6691273 0.7228086 0.7514214 #>  [701,] 0.4416675 0.4835713 0.5614941 #>  [702,] 1.5246309 1.5250993 1.6700976 #>  [703,] 0.6629617 0.6642713 0.6806742 #>  [704,] 0.6161617 0.6323766 0.6367875 #>  [705,] 1.0135039 1.0167508 1.0258161 #>  [706,] 0.5056599 0.5136652 0.5239225 #>  [707,] 1.4269409 1.4528911 1.4550048 #>  [708,] 0.7672032 0.8327254 0.8417376 #>  [709,] 0.6868700 0.7447043 0.7521892 #>  [710,] 0.6556940 0.6603372 0.6631790 #>  [711,] 0.5817762 0.5840481 0.5961188 #>  [712,] 1.4455238 1.4607682 1.4902975 #>  [713,] 0.7486168 0.7697531 0.7983128 #>  [714,] 1.3064830 1.3490520 1.3609314 #>  [715,] 0.5479738 0.6315642 0.6345632 #>  [716,] 0.6774138 0.7032494 0.7726654 #>  [717,] 0.8847665 0.9458940 0.9961590 #>  [718,] 0.5746765 0.5780144 0.5916516 #>  [719,] 0.6565426 0.6660602 0.7035857 #>  [720,] 0.6327114 0.6432912 0.6593207 #>  [721,] 0.6261130 0.7108881 0.7251096 #>  [722,] 0.5993714 0.6219347 0.6261819 #>  [723,] 1.2714293 1.2761044 1.2982269 #>  [724,] 0.7406153 0.7827858 0.7835375 #>  [725,] 1.2636153 1.2950369 1.3927261 #>  [726,] 0.8921384 0.9493428 0.9514043 #>  [727,] 2.0891104 2.0988071 2.1174602 #>  [728,] 1.7427251 1.7612634 1.8007512 #>  [729,] 0.8451637 0.8564395 0.8591737 #>  [730,] 0.7147256 0.7161262 0.7317048 #>  [731,] 0.6572339 0.6661816 0.6777440 #>  [732,] 0.8498092 0.8953462 0.9212065 #>  [733,] 0.8840818 0.9058263 0.9438279 #>  [734,] 0.5191217 0.5959279 0.6178053 #>  [735,] 0.6538694 0.6591370 0.6656352 #>  [736,] 1.8073290 1.8085672 1.8115494 #>  [737,] 0.4536482 0.4845951 0.5071320 #>  [738,] 0.7407752 0.7510001 0.7595550 #>  [739,] 0.7781336 0.7874836 0.7893646 #>  [740,] 1.4223086 1.4272539 1.4345792 #>  [741,] 0.8893151 0.9457543 0.9915007 #>  [742,] 0.7145709 0.7396112 0.7444304 #>  [743,] 1.2888107 1.3329890 1.3817675 #>  [744,] 1.3036603 1.3201893 1.3261474 #>  [745,] 0.9117526 0.9461540 0.9795200 #>  [746,] 1.2572706 1.3153443 1.3219236 #>  [747,] 0.9706693 1.0659621 1.1027559 #>  [748,] 0.6640741 0.7208367 0.7300210 #>  [749,] 0.7877414 0.7932228 0.7945429 #>  [750,] 0.8083600 0.8236727 0.8297242 #>  [751,] 0.7095698 0.7153317 0.7586032 #>  [752,] 2.2207353 2.2781567 2.2790495 #>  [753,] 0.6924126 0.7070969 0.7554013 #>  [754,] 1.5305455 1.5831158 1.6039306 #>  [755,] 0.8058912 0.8073589 0.8238956 #>  [756,] 0.7077074 0.7090962 0.7168126 #>  [757,] 0.7512681 0.8195388 0.8275135 #>  [758,] 0.8621037 0.8820646 0.9163814 #>  [759,] 0.6215770 0.6280397 0.6415001 #>  [760,] 0.8234540 0.8478420 0.8583675 #>  [761,] 0.7894291 0.8139216 0.8171240 #>  [762,] 0.7010134 0.7130878 0.7152066 #>  [763,] 0.6753249 0.6865517 0.7009963 #>  [764,] 1.3666873 1.3822680 1.4003774 #>  [765,] 0.8113084 0.8348751 0.8746449 #>  [766,] 0.6149423 0.6161625 0.6516934 #>  [767,] 0.6885980 0.6946125 0.7161104 #>  [768,] 0.4519493 0.4629106 0.4632650 #>  [769,] 1.4845558 1.5504697 1.5782156 #>  [770,] 0.6356873 0.6577293 0.6860807 #>  [771,] 0.7128517 0.7460711 0.7701499 #>  [772,] 1.0654329 1.0685229 1.0753158 #>  [773,] 1.2684713 1.2754179 1.3116894 #>  [774,] 0.8964562 0.9974350 1.0387351 #>  [775,] 0.5821840 0.5859265 0.5875396 #>  [776,] 0.5551821 0.5567491 0.5617691 #>  [777,] 0.4813088 0.4911753 0.5354308 #>  [778,] 0.5191217 0.5473822 0.5588387 #>  [779,] 1.7129920 1.7878073 1.7925053 #>  [780,] 1.0594263 1.1701245 1.2203744 #>  [781,] 0.6711664 0.6761378 0.6873665 #>  [782,] 0.7935263 0.8160338 0.8175912 #>  [783,] 0.6112961 0.6444876 0.6547623 #>  [784,] 0.9647918 1.0091396 1.0139246 #>  [785,] 1.2511772 1.2523496 1.2894025 #>  [786,] 0.7602851 0.7674939 0.7924642 #>  [787,] 0.5287666 0.5364841 0.5377990 #>  [788,] 0.6893276 0.7531499 0.7543146 #>  [789,] 0.5865689 0.5915261 0.6131425 #>  [790,] 0.5937282 0.6092421 0.6158410 #>  [791,] 0.7100434 0.7266770 0.7363799 #>  [792,] 0.5992808 0.6051173 0.6568859 #>  [793,] 0.8236006 0.8527914 0.8578296 #>  [794,] 0.7905301 0.7948651 0.8025507 #>  [795,] 0.8344054 0.8429054 0.8837404 #>  [796,] 0.8627346 1.1001945 1.1399438 #>  [797,] 0.6483195 0.6662427 0.6709759 #>  [798,] 1.0043138 1.0346461 1.0470990 #>  [799,] 0.6539331 0.6615659 0.7317779 #>  [800,] 1.0366009 1.0792730 1.0897362 #>  [801,] 0.7036223 0.7095698 0.7173120 #>  [802,] 1.0629841 1.1434335 1.1454330 #>  [803,] 0.5447432 0.5536558 0.5627290 #>  [804,] 0.7531020 0.7532264 0.7734322 #>  [805,] 0.6865914 0.6971818 0.7011391 #>  [806,] 1.2555711 1.3212603 1.3442423 #>  [807,] 0.6147023 0.6237160 0.6304719 #>  [808,] 1.5858533 1.6190736 1.6808092 #>  [809,] 0.7798792 0.8131680 0.8288728 #>  [810,] 0.6337421 0.6561129 0.6574949 #>  [811,] 1.3301054 1.3504344 1.3520881 #>  [812,] 0.6146145 0.6670840 0.6713635 #>  [813,] 0.7613076 0.7640731 0.7788107 #>  [814,] 1.3180094 1.3579259 1.3927111 #>  [815,] 0.6333113 0.6564652 0.6749622 #>  [816,] 0.6978285 0.7102412 0.7222923 #>  [817,] 0.6785017 0.6867288 0.6925201 #>  [818,] 0.6099997 0.6161617 0.6707772 #>  [819,] 0.7475345 0.7696312 0.8014515 #>  [820,] 0.8092895 0.8621819 0.8639836 #>  [821,] 0.5157480 0.5194277 0.5598889 #>  [822,] 0.8385401 0.9064292 0.9217130 #>  [823,] 0.9558771 1.0168915 1.0282078 #>  [824,] 0.6451166 0.6545629 0.6590783 #>  [825,] 1.1331606 1.1437051 1.1573543 #>  [826,] 0.8244246 0.8625524 0.8734347 #>  [827,] 0.9876092 1.0089855 1.0473738 #>  [828,] 0.5816145 0.5821245 0.5902875 #>  [829,] 0.7394314 0.8117581 0.8935168 #>  [830,] 0.7099831 0.7284374 0.7595649 #>  [831,] 1.3158441 1.3406045 1.3428040 #>  [832,] 1.0926628 1.1819443 1.1926012 #>  [833,] 1.0681265 1.0868664 1.1312595 #>  [834,] 1.0528163 1.0742713 1.1142734 #>  [835,] 0.8616688 0.8727042 0.8837234 #>  [836,] 1.1059082 1.1289329 1.1373547 #>  [837,] 0.6163433 0.6201407 0.6358919 #>  [838,] 0.6274124 0.6386616 0.6464074 #>  [839,] 0.7260054 0.7302858 0.7450133 #>  [840,] 1.0663065 1.1968417 1.2205609 #>  [841,] 0.9651652 0.9882101 0.9964577 #>  [842,] 1.5292432 1.5516059 1.6027580 #>  [843,] 1.2991866 1.3125365 1.3307219 #>  [844,] 0.9909166 1.0795523 1.0801821 #>  [845,] 1.4048352 1.4904643 1.5031894 #>  [846,] 0.5527998 0.5652342 0.5739848 #>  [847,] 0.9142588 0.9574488 0.9791345 #>  [848,] 0.8445824 0.8461923 0.8872914 #>  [849,] 0.9128998 0.9173449 0.9244479 #>  [850,] 0.6141430 0.6500180 0.6559040 #>  [851,] 1.0963204 1.1196485 1.1329699 #>  [852,] 1.0130919 1.0153285 1.1058432 #>  [853,] 0.5426305 0.5473822 0.5961188 #>  [854,] 0.5945413 0.5989309 0.6070615 #>  [855,] 0.7505316 0.7686938 0.7690127 #>  [856,] 0.6852619 0.7122063 0.7352953 #>  [857,] 0.5085829 0.5437051 0.5639746 #>  [858,] 0.8576930 0.8678566 0.8706792 #>  [859,] 1.0295704 1.0448910 1.0834241 #>  [860,] 0.7998880 0.8473913 0.8953262 #>  [861,] 1.1526658 1.1567115 1.2143747 #>  [862,] 0.9229113 0.9269937 0.9368132 #>  [863,] 1.5424075 1.5575410 1.5732576 #>  [864,] 0.8094113 0.8217711 0.8321998 #>  [865,] 0.6336404 0.6584648 0.6641545 #>  [866,] 1.2364799 1.2977233 1.3276629 #>  [867,] 1.0477999 1.0521985 1.0555509 #>  [868,] 0.8160204 0.8162378 0.8217711 #>  [869,] 0.6157143 0.6179979 0.6393457 #>  [870,] 0.5544833 0.5551641 0.5760540 #>  [871,] 0.7531053 0.7744096 0.7887121 #>  [872,] 0.6480868 0.6514130 0.6631790 #>  [873,] 1.3610281 1.3685976 1.3929656 #>  [874,] 0.6968903 0.7065625 0.7175028 #>  [875,] 0.5530773 0.5652342 0.5751441 #>  [876,] 1.1606581 1.1801985 1.2495558 #>  [877,] 1.2636153 1.2935682 1.3037417 #>  [878,] 0.7415840 0.7536032 0.7693043 #>  [879,] 0.7215488 0.7584428 0.7860282 #>  [880,] 0.6620030 0.6957156 0.7234209 #>  [881,] 0.6682059 0.6842877 0.7226135 #>  [882,] 1.2625156 1.2767390 1.2888469 #>  [883,] 0.6457739 0.6941181 0.7609667 #>  [884,] 0.7442968 0.7723785 0.7741917 #>  [885,] 0.5802528 0.5892895 0.6147790 #>  [886,] 0.7814274 0.7918673 0.8073640 #>  [887,] 1.0576050 1.0802290 1.1070560 #>  [888,] 0.6073992 0.6091643 0.6144596 #>  [889,] 0.8071269 0.8136941 0.8413097 #>  [890,] 0.6937390 0.7336385 0.8071460 #>  [891,] 0.6714188 0.6840951 0.7016805 #>  [892,] 0.5729163 0.5866919 0.6132823 #>  [893,] 1.0072007 1.0096866 1.0218735 #>  [894,] 0.6035745 0.6308840 0.6340431 #>  [895,] 0.6525002 0.6735578 0.6921982 #>  [896,] 0.4844312 0.4867597 0.4960628 #>  [897,] 0.5512842 0.5602613 0.5783890 #>  [898,] 1.3869135 1.3895350 1.4157752 #>  [899,] 1.1960630 1.1977910 1.2016139 #>  [900,] 0.8820646 0.9056000 0.9213292 #>  [901,] 0.6942762 0.7024868 0.7063428 #>  [902,] 0.5096223 0.5830090 0.6976086 #>  [903,] 1.4399614 1.4678503 1.5274850 #>  [904,] 0.7501829 0.7568072 0.7878546 #>  [905,] 0.6840200 0.6880698 0.7038862 #>  [906,] 0.5412652 0.5575626 0.5673004 #>  [907,] 1.0344742 1.0347944 1.0524186 #>  [908,] 0.5598402 0.5953920 0.6123358 #>  [909,] 0.8162899 0.8215150 0.8464029 #>  [910,] 0.4705165 0.5029389 0.5862635 #>  [911,] 0.9137937 0.9178391 0.9545429 #>  [912,] 0.7904285 0.8172677 0.8229667 #>  [913,] 0.6014169 0.6342783 0.6726100 #>  [914,] 0.6953018 0.6968671 0.6972326 #>  [915,] 1.1985682 1.2612687 1.2661228 #>  [916,] 0.6251270 0.6258964 0.6456734 #>  [917,] 0.5640228 0.6106094 0.6240290 #>  [918,] 0.8669339 0.8677668 0.8731709 #>  [919,] 0.5943029 0.6369279 0.6419256 #>  [920,] 0.8565600 0.8668430 0.8825103 #>  [921,] 0.7972709 0.7980223 0.8272415 #>  [922,] 0.5860764 0.5884435 0.6495592 #>  [923,] 0.6850455 0.7654472 0.7706749 #>  [924,] 1.7065007 1.7595070 1.8249732 #>  [925,] 1.1178787 1.1194445 1.1359168 #>  [926,] 0.4907520 0.4916085 0.4955157 #>  [927,] 0.5784332 0.6016056 0.6161719 #>  [928,] 0.7048888 0.7323566 0.7916425 #>  [929,] 0.7115772 0.8015245 0.8215053 #>  [930,] 0.6546179 0.6619326 0.6855097 #>  [931,] 1.0722065 1.0723158 1.1020991 #>  [932,] 0.9980646 1.0604965 1.0765086 #>  [933,] 0.7757607 0.7930099 0.8193365 #>  [934,] 0.5629871 0.5649593 0.5770712 #>  [935,] 1.0638464 1.0695847 1.0752060 #>  [936,] 0.6264248 0.6425354 0.7248970 #>  [937,] 0.6632443 0.6921858 0.6961303 #>  [938,] 1.3328130 1.3545681 1.3579707 #>  [939,] 0.8268073 0.9011029 0.9029088 #>  [940,] 0.9664973 0.9796088 1.0266497 #>  [941,] 0.7978928 0.8017039 0.8084930 #>  [942,] 0.8793117 0.9010832 0.9217125 #>  [943,] 1.1561239 1.1920915 1.1952666 #>  [944,] 1.0224345 1.0242264 1.0463134 #>  [945,] 1.1382190 1.2527440 1.2535125 #>  [946,] 0.8071421 0.8255702 0.9097442 #>  [947,] 0.6516008 0.7321110 0.7468037 #>  [948,] 0.6609321 0.6757462 0.7089911 #>  [949,] 0.6061783 0.6250507 0.6546214 #>  [950,] 0.8262618 0.8404210 0.9108580 #>  [951,] 0.8081213 0.8137469 0.8434764 #>  [952,] 0.6655876 0.6944895 0.7246373 #>  [953,] 0.8237289 0.8324806 0.8396353 #>  [954,] 0.9336559 0.9448788 0.9609628 #>  [955,] 0.4637480 0.4705165 0.4895099 #>  [956,] 1.2063945 1.2768583 1.2840039 #>  [957,] 0.8466367 0.8496007 0.8640619 #>  [958,] 0.7870399 0.7887121 0.8228038 #>  [959,] 0.5983014 0.6042603 0.6072989 #>  [960,] 1.1519308 1.1575222 1.1754310 #>  [961,] 1.0534669 1.0594263 1.0608318 #>  [962,] 0.5561521 0.5857739 0.6251021 #>  [963,] 0.8132124 0.8205225 0.8508148 #>  [964,] 1.0106294 1.0158536 1.0278107 #>  [965,] 1.0498917 1.0525609 1.0756027 #>  [966,] 0.6316439 0.6455623 0.6607649 #>  [967,] 0.5729782 0.6133253 0.6147553 #>  [968,] 0.5599074 0.5757744 0.5953842 #>  [969,] 0.6953018 0.7089360 0.7338871 #>  [970,] 0.7654577 0.8152321 0.8400739 #>  [971,] 0.7390628 0.7879035 0.7952061 #>  [972,] 0.8348751 0.8631450 0.8759023 #>  [973,] 0.6865588 0.7067785 0.7140006 #>  [974,] 0.5779029 0.5808027 0.5971503 #>  [975,] 0.9033908 0.9270503 0.9353552 #>  [976,] 0.9457776 0.9532405 1.0476685 #>  [977,] 0.9850920 1.0021861 1.0223407 #>  [978,] 0.6570430 0.6571258 0.6726350 #>  [979,] 0.6860807 0.7042146 0.7133029 #>  [980,] 0.7613076 0.7646777 0.7708042 #>  [981,] 0.7773028 0.7962490 0.8501908 #>  [982,] 1.3356171 1.3676695 1.3976510 #>  [983,] 0.5873715 0.5922590 0.5944336 #>  [984,] 0.7526279 0.7860282 0.7867425 #>  [985,] 1.0762780 1.3243189 1.3385517 #>  [986,] 1.0800934 1.1162436 1.1803477 #>  [987,] 0.9394888 0.9895079 1.0984208 #>  [988,] 0.6920286 0.7220081 0.7437893 #>  [989,] 1.4046873 1.4340445 1.4666231 #>  [990,] 1.2089288 1.2304501 1.2698035 #>  [991,] 1.2740422 1.3739619 1.3900003 #>  [992,] 0.7562352 0.7934426 0.8084930 #>  [993,] 0.8052861 0.8071302 0.8146468 #>  [994,] 0.7117729 0.7124551 0.7153672 #>  [995,] 0.6646489 0.6768659 0.7024389 #>  [996,] 0.8212676 0.8524414 0.8569410 #>  [997,] 1.0598168 1.0980638 1.1330660 #>  [998,] 0.6840467 0.6907489 0.7057053 #>  [999,] 0.6776092 0.7289566 0.7317779 #> [1000,] 0.9452377 1.0298628 1.0511209 #>   # Find the 10 approximate nearest neighbors tof_find_knn(     .data = sim_data,     k = 10,     distance_function = \"euclidean\", ) #> $neighbor_ids #>         [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] #>    [1,]  902  974  449  933  372   48  776  757   26   812 #>    [2,]  931  806  397  903    5  748  600  676  798   889 #>    [3,]  786   84  423  597  198  119  480  454  817   603 #>    [4,]  774   53  713  337  942  856  707  166  481   726 #>    [5,]  748  519  397  289  568  718  331  889  969   676 #>    [6,]  935  820  587  393   28  671  416  949  613   767 #>    [7,]  709  708  815  890   49  860  710  995  369   492 #>    [8,]  453  305   67  934  654  706  497  681  375   357 #>    [9,]  124  508  319  178  987  162  402  168  418    81 #>   [10,]  106  300  169  837   45  251  220  369  237   869 #>   [11,]  212  597  906  792  559  437  197  803  957   611 #>   [12,]  889  879  193  575  451  267  568  410   36   136 #>   [13,]   70   50  483   54  184  512  244  638  142   433 #>   [14,]  426  335  306  540  608  307  693  204  337    35 #>   [15,]  605  614  358  316  218  377  888  491   31   657 #>   [16,]  199  616  832   20  156  586  174  378  255    87 #>   [17,]  270  283  880  420  810  602  930  499  700   143 #>   [18,]  433  952  551  669  524  244   50  854  188   677 #>   [19,]  750  741  799  729  593  486  560  419  788   171 #>   [20,]  652  771  805  586  199  964  571  192  950   724 #>   [21,]  781  872  216  542  110   94  135  894  710   409 #>   [22,]  672  163  721  443  170  809  195   28   99   671 #>   [23,]  151  594  798  808  736  600  254  852  833   938 #>   [24,]  142   90  641  323   70  886  541  513  473   678 #>   [25,]  301  350  421  364  296  836  190  424  977   498 #>   [26,]  776  521  431  343  185  737  955   77  885   974 #>   [27,]  152  467  666  766  102  883  892  685  645   411 #>   [28,]  671  506  195  809  699  935  170  393  248   439 #>   [29,]   75  216  864  447  210   54   21  142  409   872 #>   [30,]   66  847  514  140  830  846  998   65  775   656 #>   [31,]  910  491  888  275  955  720  768  457  870   645 #>   [32,]  351  309  883  965  945  129  356  290  666   461 #>   [33,]  570   69   43  275  797  563  680  138  401   632 #>   [34,]  944  961  189  202  487  997  529  972  239   308 #>   [35,]  665  711  209  307  426  496  540  204  268   200 #>   [36,]  276  193  289  267  136  697  596  968  703   568 #>   [37,]  858  375  150  140  359  983  838  854   65   305 #>   [38,]  157  867  550  628  523  296  577  260  283   306 #>   [39,]  153  163  826  256  721  672  315  116  526   606 #>   [40,]  966  968  922  959  267  519  413   64  865   219 #>   [41,]  764  531  644  394  196  106  300  574   10   478 #>   [42,]   86   70  796  483   24  835  142   90  371    75 #>   [43,]   33  680   69  570  401  870  275  200   92   563 #>   [44,]  381  264  615  627  246  821  936  514  846    65 #>   [45,]  237  468   10  895  486  138  300  169  869   319 #>   [46,]  598  461  438  791  661  304  118  458  351   137 #>   [47,]  824   99  183  231  102  315  340  807  826   721 #>   [48,]  993  974  187  372  902    1  569  449  348   830 #>   [49,]  890  709  492  348    7  277  278  500  465   749 #>   [50,]  433  667   13  244   54  677  738   18  542   922 #>   [51,]  533  968  548  596  128  314  979  718  580   519 #>   [52,]   59  589  155  615  874  172  209   44  821   627 #>   [53,]  166  481  617  213  905  856  942  719  774   693 #>   [54,]  542   13  332  963  110   50  483  781  371   872 #>   [55,]  859  586  726  346  950  553  255  652  977   229 #>   [56,]  399  518  772  780   91  997  191  239  160   827 #>   [57,]  133   32  845  132  290  404  779  309  965   351 #>   [58,]  485  294  164  810  696  105  390  130  143   711 #>   [59,]   52  553  131  172  155  346  896  514  198   537 #>   [60,]  245  880  817  567  930  700  988  766  763   503 #>   [61,]  307  268   35  426  228  479   14  693  499   365 #>   [62,]  637  784  601  625  848  299  466  932  999   236 #>   [63,]  787  759  790  589  155   84  663  480  560   722 #>   [64,]  456  949  249  112   79   40  545  173  613   770 #>   [65,]  846  983  854  269  875   44  656  381  775   140 #>   [66,]   30  514  847  553  830  846  313  474  950   537 #>   [67,]  654  403  896   98  681  453  706  604  474   926 #>   [68,]  314  659  979  686  747  568  362  519  884   748 #>   [69,]  570   33  870  955   43  275  431  776  138   768 #>   [70,]  483   13  142   42  835   24   86  371  512    54 #>   [71,]  290  133   22   57  841   39  404  163  672   721 #>   [72,]   89  632  841  958  439  871  398  404   81   418 #>   [73,]  564  911  813  573  822  544  976  409  612   864 #>   [74,]  688  473  137  939  673  678  326  992  215   599 #>   [75,]   29  447  840  210  154   42   86  483  216    70 #>   [76,]  719  735  579  919  179  337  608  693  166   713 #>   [77,]  885  651  369  185  710  278   26  869  220   214 #>   [78,]  135  683   94  386  878  578  344  623  868    97 #>   [79,]  492  545   64  388  456  112  668  737  633   916 #>   [80,]  963  679  272  161  558  332   54  647  816   278 #>   [81,]  339   89  460  740  508    9  987  418  168    72 #>   [82,]  453  229  706  681  482  308  576  896   98   131 #>   [83,]  899  686  747  111  886  676  315  826  688   231 #>   [84,]  480  198  759   63  361  119  926  589  790   155 #>   [85,]  543  288  836  148  455  150  838  950  977   192 #>   [86,]   42  689  796  483   70  512  835   75   13    29 #>   [87,]  260  832  329  586  379  692  695  199  550   859 #>   [88,]  104  128  763  177  661  311  507  533  580   452 #>   [89,]   72   81  987  531  339  632  439  871  418   319 #>   [90,]   24  886  142  641  111  473  323  541  678   513 #>   [91,]  997  772  239  368  518   56  202  441  442   866 #>   [92,]  200  390  711  596  245  680  503  294  496   810 #>   [93,]  118  505  293  194  383  327  622  609  356   122 #>   [94,]  623  683  135   78  332   97  542  781  783    21 #>   [95,]  309  467  132  666  892  797  552  398  563    27 #>   [96,]  455  255   85  148  977  836  288  543  950   773 #>   [97,]  927  583  777  495  406  269  623  412  775   344 #>   [98,]  654  604  576  896  706  360  453   67  295   317 #>   [99,]  947  721  824   47  807  443  567  801  666   271 #>  [100,]  312  684  767  113  762  587  286  595  407   459 #>  [101,]  302  970  253  732  829  898  920  125  169   252 #>  [102,]  340  533  231  666   47   27  580  824  152   881 #>  [103,]  493   29  590  840  864  976   75  484  447   564 #>  [104,]  128   88  533  507  311  177  580  548   51   763 #>  [105,]  370  485   58  238  696  880  164  294  700   130 #>  [106,]   10  300  169  837  981  196  220  970  904   394 #>  [107,]  201  233  901  211  818  549  412  913  921   425 #>  [108,]  982  299  446  621  263  724  557  715  771   690 #>  [109,]  365  236  786  817  729  751  801   60  268   602 #>  [110,]  542  781  872   21  332  358  218  682   94   894 #>  [111,]  886   90  473  641  415  678  881   24  513   688 #>  [112,]  937  716  995  613  456   64  285  949   79   855 #>  [113,]  100  877  684  328  208  900  182  250  767   286 #>  [114,]  928  929  941  973  487 1000  635  330  203     8 #>  [115,]  760  123  918  388  933  168  633  213  449   508 #>  [116,]  674  862  153   39  163  526  826  488  606   672 #>  [117,]  980  951  266  622  243  373  409  415  565   261 #>  [118,]  137   93  599  293  609  461  215  194  177   883 #>  [119,]  665  198  926   84  209  789  604  172   52   589 #>  [120,]  833  946  254  472    8  193   82  189  795   497 #>  [121,]  508  342  918  538  668  396  439  168  871   761 #>  [122,]  383  813  894  642  980  549  572  505  951   377 #>  [123,]  115  900  760  918  168  595  823  758  286   592 #>  [124,]    9  319  162  402  508  178  987  975  761   757 #>  [125,]  302  954  234  144  520  829  578  920  227   224 #>  [126,]  349  447  840  619  708  210  501  860  971   422 #>  [127,]  853  734  336  701  317  604  232  778  276   978 #>  [128,]  104  533  311  507  548   88  177  580   51   231 #>  [129,]  751  947  801  848  666   99   95  132  567   271 #>  [130,]  620  485  294  659   58  164  314  696  390   362 #>  [131,]  172  450  209  229   59  576  706  604  204   896 #>  [132,]   95  404  309  129  841  429  398  133  240    32 #>  [133,]  290  404  841  240   32  287  132   57  393    71 #>  [134,]  814  629  924  395  744  624  743  638  448   780 #>  [135,]   78  386  683   94  868   21  573  542  623   781 #>  [136,]  502  158  879   36  179  451  193  496  620   916 #>  [137,]  688  118  293  461  473   74  939  311  678   599 #>  [138,]  486  797  385  563   33  402  570  468  799   398 #>  [139,]  334  653  417  923  855  367  456   79  441   410 #>  [140,]  272  816  998  558   65   37   30  656  269   827 #>  [141,]  451  608  232  164  193  946  136  335  306   540 #>  [142,]   24  641   90   70  513  541  371  323  886   483 #>  [143,]  810  499  284  270   58  700  294  485  271   567 #>  [144,]  520  345  829  227  302  324  954  578  234   186 #>  [145,]  662  569  562  698  993  436  912  964  419   812 #>  [146,]  262  555  222  609  673  582  667  599  914   850 #>  [147,]  725  985  470  893  851  230  758  123  213   877 #>  [148,]  455   85  192  150  188  669  858  543  241   621 #>  [149,]  366  866  368  469  320  633  562  834  341   912 #>  [150,]  858  838  584  242  983  854   37  241  375   192 #>  [151,]  594  600  289   23  193   36  254  798   12   267 #>  [152,]   27  467  766  645  411  892  666  685  423   401 #>  [153,]  826  526   39  606   88  163  661   47  862   256 #>  [154,]  820  210  371  682  142  641  886   75   24   447 #>  [155,]   63  775  589   52  571  759  787   59  553    84 #>  [156,]  174  489  769  832  741  329  695   16  428    87 #>  [157,]  991  887  306  482   38  232  707  833  141   392 #>  [158,]  502  496  136  179  916  540  444  164  596   962 #>  [159,]  344  176  927  722  376   97  583  775  578   819 #>  [160,]  504  876  191  432  773  518  515  448   56   772 #>  [161,]  272  558   80  524  395  816  140  827  998   868 #>  [162,]  782  975  687  402  909  124  319  948  486   178 #>  [163,]  721  672  826  315   22  443   39  170   47    99 #>  [164,]  696  540   58  485  390  158  335  711  496   502 #>  [165,]  747  248  899  686  935  676    6   83   68   671 #>  [166,]  213   53  617  481  719  693  919   76  337   905 #>  [167,]  323   90  886   42   24  541  754  111  796   142 #>  [168,]  918  508  121  286    9  900  339  115  123   418 #>  [169,]  300  837  970   10  106   45  981  251  237   869 #>  [170,]  443  809  979  195  824  506  362  721  315   671 #>  [171,]  741  999  804  299  729  329  236  560   19   466 #>  [172,]  131  209   59  962   52  450  706  665  119   735 #>  [173,]  694  916  770  684  285  884  286   64  456    79 #>  [174,]  156  741  145  419  695  329  378  832  171    19 #>  [175,]  714  986  852  405   12  292  575  879  459   451 #>  [176,]  344  241  584  242  188  159   97  583  878   683 #>  [177,]  507  311  580  803  128  533  217   88  104   207 #>  [178,]  909    9  479  418  124  162  975  782  687   319 #>  [179,]  916  158  984  502  703  136  962   76  444   451 #>  [180,]  629  493  618  646  103  184  754  564  323   544 #>  [181,]  556  705  611  354  915  523  434  664  802   957 #>  [182,]  460  195  699  362  339  694  684  809  506   286 #>  [183,]  315  231   47  340  824  881  548  517  826   102 #>  [184,]  544  573  864  638   13  868  386  822  564   433 #>  [185,]  343  495  521  623  278   26   77  269  333   477 #>  [186,]  345  253  829  465  756  333  277  783  384   348 #>  [187,]   48  993  569  974  626  756  348  753  895   902 #>  [188,]  669  176  241  952  584  242  150  996   18   344 #>  [189,]  833  946  120   34  944  405  254  487  529   961 #>  [190,]  295  298  360  336  301  392  296  317  994   897 #>  [191,]  160  518  504  772  399   56  773  876  746   368 #>  [192,]  838  571  150  584  652  950  159  241  858   724 #>  [193,]   36  451  276  136  703  267   12  879  472   575 #>  [194,]  377  383  967  505  917  599  207  609  642   291 #>  [195,]  506  362  170  671   28  809  182  979  443   699 #>  [196,]  904  394  106  619   10  478  860  369  220   761 #>  [197,]  908  778  701  347  452  734  697  853  658   580 #>  [198,]  480   84  603  897  119  926   59  209  759   131 #>  [199,]   16  586   20  832  255   87  108  260  859   174 #>  [200,]   92  680  503  390  401  245  711  423  596    43 #>  [201,]  818  107  913  901  412  549  462  233  878   211 #>  [202,]  765  972  795  944  239  313  472  656  793   497 #>  [203,]  941  463  582  445  222  973  206  244  330   952 #>  [204,]  450  426  335  209  131  603  232   35  540   337 #>  [205,]  247  996  621  280  525  690  960  455  878   148 #>  [206,]  582  850  357  739  403  914  555  994  325   952 #>  [207,]  291  803  685  906  599  194  580  437  177   347 #>  [208,]  702  250  328  113  195  362  248  182  877   100 #>  [209,]  665  172  131   35  119  204  450   52  603   198 #>  [210,]  154  447  820  216  815  971  710  682  297   872 #>  [211,]  901  233  614  412  440  777  927  406  201   218 #>  [212,]   11  597  957  539  263  611  906  559  932   546 #>  [213,]  166   53  481  617  719  919  693  760  687    76 #>  [214,]  885  369  220  651  660  742  605  815   77   869 #>  [215,]  599  609  473  194  118  678  513  383  850   667 #>  [216,]   21  781  872  710  542   29  210  409  324    94 #>  [217,]  507  219  580  850  697  533  177  347  959   311 #>  [218,]  657  377  894  614  406  358   15  642  605   777 #>  [219,]  959  850  217  673  922  697  865  718  968    40 #>  [220,]  369  651  869  885  214   77  660  815  981   440 #>  [221,]  237  251  471  552  385  547  837  468  660   869 #>  [222,]  582  146  914  463  673  992  203  941  206   262 #>  [223,]  844  587  312  716  937  367  303  762  613   407 #>  [224,]  920  435  731  440  561  655  211  651  660   901 #>  [225,]  755  410  249  966  407  456  459  613  949    64 #>  [226,]  490  717  653  827  956  475  441  139  257   334 #>  [227,]  578  525  960  144  954  520  234   78  280   878 #>  [228,]  329  602   61  786  695  550  307  268  236   171 #>  [229,]  450  482  131   82  576  346  603   59  896   553 #>  [230,]  740  178    9  851  725  124  147  975   81   909 #>  [231,]  340  881  183  102  548   47  128  883  533   104 #>  [232,]  576  450  127  336  204  131  335  306  540   604 #>  [233,]  211  107  547  201  412  901  777  927  440   425 #>  [234,]  954  976  227  144  520  125  484  868  578   322 #>  [235,]  964  834  442  847  652   66  368  562  830   698 #>  [236,]  786  999  729  637  601  466  799  109  365   299 #>  [237,]  221  251   45  385  552  468  837  471  486   138 #>  [238,]  370  105  802  523  907  577  700  880  485   488 #>  [239,]   91  772  202  997  972  518  827  944  441   656 #>  [240,]  404  478  536  958  742  841  251  287  660    95 #>  [241,]  584  242  176  891  361  854  188  150  983   838 #>  [242,]  584  854  241  983  176  344  838  150  846   952 #>  [243,]  373  117  287  639  261  266  565  951  622   980 #>  [244,]  849   50  667   18  677   13  433  941  463   203 #>  [245,]  503  567  200  880  390   92   60  700  930   807 #>  [246,]  627  264  545   44  821  457  381  615  768   413 #>  [247,]  205  455  148  621  525  861  996  510  669   960 #>  [248,]  195  671   28  165  935  747  328  506  899   208 #>  [249,]  225  410  949  456  755  407  613   64  459   966 #>  [250,]  702  208  362  113  130  620  195  684  100    68 #>  [251,]  660  237  221  837   10  214  634  536  240   220 #>  [252,]  318  419  804  732  788  378  753  805  174   535 #>  [253,]  186  345  829  756  384  333  187  819  465   302 #>  [254,]  833  120  151  991  189  946   23  141  852   193 #>  [255,]  586  859   55  977  199  350  260  692  950   832 #>  [256,]  458  526  153  438   39  351   46   83  282   461 #>  [257,]  835  755  483  839  490  225  371  363  966   512 #>  [258,]  932  557  704  534  967  437  462  625  906   509 #>  [259,]  945  565  293  461  554  925  939  779  863    46 #>  [260,]   87  379  692  296  832  586  350  329  859   695 #>  [261,]  541  266  886  373  409  641  513  415  142   243 #>  [262,]  146  609  559  599  917  546  673  850  555   304 #>  [263,]  597  321  212  539    3  296  957  867  932   446 #>  [264,]   44  381  627  246  936  615  545  821  962   514 #>  [265,]  662  384  378  145  187  943  964  253  626   732 #>  [266,]  409  117  261  373  541  980  243  513  951   415 #>  [267,]  966   36  959   40  193  703  413  363  289    12 #>  [268,]   61  365  401   35  423  307  680   43  563   892 #>  [269,]  998  775  495  623   97  343  816  185   65   344 #>  [270,]   17  420  143  810  499  700  284   58  880   105 #>  [271,]  730  801  567  563  499  401   99  824  797   443 #>  [272,]  558  140  816  161  998  679   80  827   65   465 #>  [273,]  516  364  424  640  421  279  281  509  455   621 #>  [274,]  460  740   81   22   89  339  182  712   72   418 #>  [275,]  720   31  570  910  491   33  680   69  645   955 #>  [276,]   36  706  317  127  193  604  576  701  357   697 #>  [277,]  348   49  465  890  186  679  320  709    7   500 #>  [278,]  737  185  492  495   77  343  623  521   26   710 #>  [279,]  509  281  953  640  566  917  996  546  967   989 #>  [280,]  960  525  690  578  159  425  107  878  201   376 #>  [281,]  279  640  953  861  509  677  989  566  273   996 #>  [282,]  607  458  526  438  354  181  256  705  530   434 #>  [283,]  602   17  930  577  880  550  786  658   60   817 #>  [284,]  700  143  807  801  567  810  499  271  672   721 #>  [285,]  767  286  342  595  770  456  716  949  173   112 #>  [286,]  285  767  684  595  900  694  918  173  770   342 #>  [287,]  373  427  243  742  971  622  536  117  415   639 #>  [288,]  308   85  836  977  453  382  375    8  950   838 #>  [289,]  331  718   36    5  519  568  889  968  748   267 #>  [290,]  133  841  404   32  393  287  240   71   99   315 #>  [291,]  207  685  803  906  437  194  347  792  908   580 #>  [292,]  986 1000  793  714  765  175  459  225  410   475 #>  [293,]  939  137  118   93  461  678  609  688  599   215 #>  [294,]  390   58  696   92  485  810  130  659  245   314 #>  [295,]  360  298  317  604   98  654  190  897  926   336 #>  [296,]  350  867  379  190  692   25  263  301  424   421 #>  [297,]  971  815  517  416  427  742  682  478  214   210 #>  [298,]  295  360  190  317  654  604  897  994   98   926 #>  [299,]  999  637  804  171  236  454  535  466  601   355 #>  [300,]  169   10  106  837  970   45  251  237  981   574 #>  [301,]   25  190  498  421  364  296  350  424  392   298 #>  [302,]  125  829  144  253  345  101  520  186  920   954 #>  [303,]  844  223  389  367  527  956  716  855  469   717 #>  [304,]  917  437  906  609  598  803  262  967  207   194 #>  [305,]  934  375  359  497    8  681  453   67  656   474 #>  [306,]  335  540   14  608  232  426  164  204  696   711 #>  [307,]   61  426   35  693  919  617  268   14  209   204 #>  [308,]   82  288  382  453  681  474  305  950  375   726 #>  [309,]  965   95  536  132  634  552   32  356  467   327 #>  [310,]   17  420  550  283  628  270  602  391  712   109 #>  [311,]  177  507  128  104  217   88  533  528  580   548 #>  [312,]  762  587  407  100  949  459  767  595  223   937 #>  [313,]  936  514  381  656  202  264   44   66  472    30 #>  [314,]  659  568   51   68  979  884  294  519  968   130 #>  [315,]  183  826   47  163  231  824  443  170  686   671 #>  [316,]  547   15  630  614  377  605  857  634  777   218 #>  [317,]  604  295  654  403   98  360  701  778  298   127 #>  [318,]  732  419  252  237  753  221  626  788   19   804 #>  [319,]  402  761  124    9  757  162  632  486  508   138 #>  [320,]  465  348  847  993   48  277  186  372  187   830 #>  [321,]  628  263  602  786  539  597  867  236  283     3 #>  [322,]  650  822  564   73  544  868  234  573  618   549 #>  [323,]   24   90  142  541   70  925  641  886  678   513 #>  [324,]  520  783  333  623   94  710  216  135  465    21 #>  [325,]  891  546  789  555  967  917  361  850  291   194 #>  [326,]   74  992  414  244  744  323   24   70  688    50 #>  [327,]  791  356  505  437   93  704  430  906  467   304 #>  [328,]  208  248  113  195  702  250  100  182   28   935 #>  [329,]  228  695  741  171   87  550  832  260  156   174 #>  [330,]  973  934  359  865  922  928  941  875  305   206 #>  [331,]  718  289  519    5  969  968  978  697  659    51 #>  [332,]  963  542   94  110  623  269   54  647   65   278 #>  [333,]  783  756  829  623  185  819  927  324  495    94 #>  [334,]  139  441  653  923  417  940  765  367  855   717 #>  [335,]  608  540  426  306  204   14  337  232  164   496 #>  [336,]  127  734  853  604  317  232  190  701  295   576 #>  [337,]  608  335  426  735  693  713  919   76  579   204 #>  [338,]  831  943  300   45  531  626  169  318  987   162 #>  [339,]   81  460  699  508  168  871  918  439  182   121 #>  [340,]  231  881  102  183  883   47  548  517  824   533 #>  [341,]  679  717  749  855  366  653  367  890   49   389 #>  [342,]  285  995  121  668  770  767  439  699  538   286 #>  [343,]  185  495  521   26  269  776  615  477  278   737 #>  [344,]  176  683  854  242   97  584  775  269  159   983 #>  [345,]  186  253  829  819  465  333  783  520  384   144 #>  [346,]  553   59  229  603  436  198  759  480  663   450 #>  [347,]  908  778  197  701  559  697  452  789  217   850 #>  [348,]  277   49  890  187   48  465  320  500  974   756 #>  [349,]  126  840  619  447  860  708  590  501  422   882 #>  [350,]  296  692   25  379  977  897  543  421  482   360 #>  [351,]   32  845   46  438  945  458  461  661  256   526 #>  [352,]  643  572  612  745  733  800  122  921  813   505 #>  [353,]  312  956  223  407  292  762  459  587  367   873 #>  [354,]  611  181  843  526  556  523  862  988  763   661 #>  [355,]  454  857  376  535  715  787  560  788  630   425 #>  [356,]  327  733   93  965  505  675  430  622  791   745 #>  [357,]  994  206  317  582    8  276  914  654  403   392 #>  [358,]   15  218  605  614  894  377  110  682  872   742 #>  [359,]  934  305  551  973  330  375  928  363  875   656 #>  [360,]  295  298  897   98  604  317  926  654  190   361 #>  [361,]  926  480  891  789   84  897  360  198  241   325 #>  [362,]  195  170  979  506  314   68  884  659  130   294 #>  [363,]  413  839  865  934  922  359  966  875  647   703 #>  [364,]  421  424  273  301   25  836  516  739  498   296 #>  [365,]  109  268  563  797  817  401  892  801  730   271 #>  [366,]  749  633  500  855  469  341  115  890  149   923 #>  [367,]  937  716  855  844  653  112  139  334  717   613 #>  [368,]   91  997  442  866  746  772  847  591  235   149 #>  [369,]  220  885  651  214   77  869  815  710  660   904 #>  [370,]  105  238  485   58  696  802  880  164  700   306 #>  [371,]  835  483  154  142   54   24   70  641  755   922 #>  [372,]  974   48  902  993    1  776  449  343   26   830 #>  [373,]  422  243  427  287  639  266  117  261  971   409 #>  [374,]  469  123  727  230  115  366  149  740  918   147 #>  [375,]  305  359   37  929    8  973  150  934  928   382 #>  [376,]  355  857  715  425  535  412  583  777  630   454 #>  [377,]  218  194  657  383  642  894  406  358  630   316 #>  [378,]  252  174  964  145  662  616  265   20  419    16 #>  [379,]  692  603  296  260  350  897  198    3  346   480 #>  [380,]    4  942  707  774  698  834  726   55   53   856 #>  [381,]   44  264  936  514  246  627  615  656  846   821 #>  [382,]  929  308  375  487  635   37  585  961  288   305 #>  [383,]  642  194  122  377  505  967  894   93  218   738 #>  [384,]  253  186  345  265  811  320  829  187  348   302 #>  [385,]  431  468  138  570  892  799  411  790  221   237 #>  [386,]  573  135  868  433   78  683  184  738  542   544 #>  [387,]  588  643  612  352  745  921  572  842  800   911 #>  [388,]  444  760   79  633  449  776    1  902  213   870 #>  [389,]  717  341  303  866  527  367  956  844  441   679 #>  [390,]   92  294  200  696  711  978  596  245  503   164 #>  [391,]  321  628   62  466  236  982  637  786  109   171 #>  [392,]  336  691  576  994  357  190  317  295  276    98 #>  [393,]  416  427  517  971  297   28  287  478  671     6 #>  [394,]  196  619  904  106  860  981   10  708  644   300 #>  [395,]  524  638  161  551  827  512  814   18  272   868 #>  [396,]  121  538  995  709  749  342  716  500  723     7 #>  [397,]    5  969  748  931  676    2  519  718  649   528 #>  [398,]  138  797  486  563   95  632  237   45  552   319 #>  [399,]   56  191  518  827  772  160  448  780   91   239 #>  [400,]  743  858  876  669  515  148  188  150  861   814 #>  [401,]  680  423  200  563   43  892  797  645  152   730 #>  [402,]  319  761  757  162  138  486  124  632   45   933 #>  [403,]   67  654  317  926  896  604  875  789   98   295 #>  [404,]  240  841  133  290  132  536  478   95  958    72 #>  [405,]  946  852  795  765  451  714  793  189  575   175 #>  [406,]  777  657  412  583  218  630   97  511  927   377 #>  [407,]  762  949  459  312  249  456  613  410  225   587 #>  [408,]  825  675  464  745  552  733  430  252  318   466 #>  [409,]  266  117   21  261  216  872  864  373   73   980 #>  [410,]  225  249  755  459  456  407  966  949   64   762 #>  [411,]  645  680  892  152  423   31  401  790  275   385 #>  [412,]  777  406  927  583  630  376   97  657  857   511 #>  [413,]  363  875  865  246  821  934  703  922  828   497 #>  [414,]  744  326  244  476  992  649  463  941  849   835 #>  [415,]  682  641  513  358  872  111  881  678  473   517 #>  [416,]  517  393  297  971  427  183  682  794  881   820 #>  [417,]  139  653  936  647  363  545  334  703  839   264 #>  [418,]  871  178  508  479  460  168    9  632  124    81 #>  [419,]  788  804  753  805  560   19  318  732  569   252 #>  [420,]  270   17  284  700  143  810  880  499  283   801 #>  [421,]  424  364  298   25  301  739  350  360  190   296 #>  [422,]  373  427  447  639  785  971  261  840  882   266 #>  [423,]  817  766  401  645  152  680  411  200  658   268 #>  [424,]  421  364  273  296  301  212   25  263  298   516 #>  [425,]  715  535  376  690  355  857  412  201  913   818 #>  [426,]  204  335   14  307   35  540  693  337  608   919 #>  [427,]  971  422  373  297  287  478  393  416  639   815 #>  [428,]  489  156   16  174  378  769  252  741  616   199 #>  [429,]  552  132  398   95  466  471  729  309  237   712 #>  [430,]  675  913  733  534  745  462  704  505  327   356 #>  [431,]  468  385   26  895  521  776   69  885  570   955 #>  [432,]  160  585  780  876  382  743  635  518  773   504 #>  [433,]   18  738  386   50  677  683  667  952  573   135 #>  [434,]  528  969  530  705  311  914  331  718  907   507 #>  [435,]  224  920  440  561  731  921  211  901  655   660 #>  [436,]  663  537  346  553  874  698   63  155  856    59 #>  [437,]  906  304  791  291  917  803  207  685  792   967 #>  [438,]  458   46  526  351  256  598  661  153  282   461 #>  [439,]  871  632  121  342  958  508  668  699  538   809 #>  [440,]  651  920  660  869  224  731  211  655  435   837 #>  [441,]  334  653  717  475  139  940  765  417  239   202 #>  [442,]  997  368  235  834  772   66   91  847  518   726 #>  [443,]  170  824  809  721   99   47  672  163  807   979 #>  [444,]  962  388  496  158  179  502  916  870  919   735 #>  [445,]  494  203  941  463  114  582  222  498  476   357 #>  [446,]  715  724  621  891  361  376  355  857  543   511 #>  [447,]  840  210   75  422  126   29  971  154  349   427 #>  [448,]  160  395  876  504  191  399  161  524  400   515 #>  [449,]  902  933    1  974  812  372  948   48  912   633 #>  [450,]  204  131  229  172  209  232  603  576  482    59 #>  [451,]  879  575  193  136  179  946   12  984  703   141 #>  [452,]  580  908  197  503  507  347  778  533  701   803 #>  [453,]  681  706    8  896   98   67  654   82  305   576 #>  [454,]  355  857  560  787  790  630  535  376  788    63 #>  [455,]  148   85  621  543  247  724  836  192  273   421 #>  [456,]  949   64  249  407  410  613  762  112  937   285 #>  [457,]  768  910  491  545  246  737  955  627  720    31 #>  [458,]  438  526  256   46  153  351  282  661  598   461 #>  [459,]  762  407  410  456  249  312  225  949  923   575 #>  [460,]  339  182   81  418  871  809  699  168  508   195 #>  [461,]  137  118  293   46   93  622  883  881  688   939 #>  [462,]  913  704  818  511  557  534  967  201  430   505 #>  [463,]  203  222  941  582  445  244  992  146  476   667 #>  [464,]  921  965  536  435  561  634  643  574  660   951 #>  [465,]  320  186  783  277  998  348  345   49  558   816 #>  [466,]  999  729  236  471  637  299  601  171  552    62 #>  [467,]   27  152  666  892  883  634  316   15   95   411 #>  [468,]  895  431  385   45   26  812  138  753  486   237 #>  [469,]  366  500  749  341  723  855  149  303  396   389 #>  [470,]  893  985  725  758  900  877  579  147  760   123 #>  [471,]  552  999  221  799  547  466  601  892  237   316 #>  [472,]  497  946  193  706  703   82  120  202  451   179 #>  [473,]  688  678  641   74  513  215  111  137   90    24 #>  [474,]  681  983  896  846  838   67  453  305   59   854 #>  [475,]  441  226  717  765  334  239  653  292  793   490 #>  [476,]  649  992  222  414  463  969  941  528  326   397 #>  [477,]  787  722  583  927  790  343   97  495  521   185 #>  [478,]  240  297  427  958  904  971  742  815  287   404 #>  [479,]  909  693  687  178  919  782  418   61  162   307 #>  [480,]   84  198  759  361  897  926  571   63  603   155 #>  [481,]   53  166  719  213  617  856  874  735  537   905 #>  [482,]  229  576  450   82   98  232  131  453  706   897 #>  [483,]   70  835  371   13  512   42   86   54  142   257 #>  [484,]  234  868  144  322  618  976  564  448  822   227 #>  [485,]   58  105  130  294  164  696  370  810  390   143 #>  [486,]  138  750  402  799  468  398   45  385   19   162 #>  [487,]  972  929  961  382  795  635  928  120  114   202 #>  [488,]  807  700  862  294  763  245  606  503  284   907 #>  [489,]  769  156  741  174  329  428  750   19  943   171 #>  [490,]  226  827  839  653  257  363  417  551  793   963 #>  [491,]  910   31  888  457  768  955  275  720  828   870 #>  [492,]  737  278  890   49  709  545   79  647    7   776 #>  [493,]  103  840  646  501   29   75  447  541   42   631 #>  [494,]  445  941  203  498  114  357  151  649  582   222 #>  [495,]  343  185  623  269  521   97  278  583  477   927 #>  [496,]  158  502  540  596  444   35   92  711  962   136 #>  [497,]  305  934  656  472  681  413  706    8  703   363 #>  [498,]  301  994  392  357  494   25  190  556  364   914 #>  [499,]  810  143  271  730   92  567  268  801  700   284 #>  [500,]  749  890  366   49  709  348  396  633  855     1 #>  [501,]  840  631  126  447  349   75  422  873  882   785 #>  [502,]  158  136  496  179  916  596  444  164  540   962 #>  [503,]  245  200  452  763  390   92  567  580  766   423 #>  [504,]  160  191  876  773  515  432  448  518  399    56 #>  [505,]  704  194   93  967  327  383  913  462  377   437 #>  [506,]  671  195  884  770  979  809   28  170  362   699 #>  [507,]  177  580  217  533  311  128  452  104  803   548 #>  [508,]  121  168  918  871    9  124  439  761  418   319 #>  [509,]  279  557  281  953  258  534  996  462  967   621 #>  [510,]  281  640  509  205  279  516  247  273  800   861 #>  [511,]  630  857  657  406  715  777  967  412  818   462 #>  [512,]  483   13   86   70  689  835  257  490   54   395 #>  [513,]  678  641  473  415  142  215   24  541  261    90 #>  [514,]  936  381   44  313  264   59   66  656  846    52 #>  [515,]  876  858  192  773  400  150  148  160  838    37 #>  [516,]  273  424  364  640  421  279  509  281  258   932 #>  [517,]  416  297  682  881  340  183  231  794  742   415 #>  [518,]  772  997   56  191   91  239  160  382  780    37 #>  [519,]  748  568  968  718    5  331  289  959   51    40 #>  [520,]  144  324  783  829  954  578  333  345   78   135 #>  [521,]  343   26  776  955  495  185  737  615  589   627 #>  [522,]  566  572  612  813  953  925  352  122  383   800 #>  [523,]  577  802  957  539  691  658  930  734  907   880 #>  [524,]  638  868  395   18  386  433  161  184  573   135 #>  [525,]  960  578  227  280  159  878  954   78  996   205 #>  [526,]  458  153  438  256  606  862  661   39  354    88 #>  [527,]  303  389  956  844  873  223  717  367  353   341 #>  [528,]  969  914  434  673  311  718  331  992  507   217 #>  [529,]  946  713  774  719  887   76  472  944    4   735 #>  [530,]  938  434  610  969  798  528  397  331  907   915 #>  [531,]  644  987   89  300   10  196  764   41  106   319 #>  [532,]  752  516  867  364  296  424  273  260   25   108 #>  [533,]  128  580  507  548   51  104  102  177  217   968 #>  [534,]  557  462  430  913  704  745  733  675  258   690 #>  [535,]  355  425  376  788  805  715  771  804  857   454 #>  [536,]  634  240  965  309  251  742  287  660  404   464 #>  [537,]  874  856  436   59   52  481  514  663  553   372 #>  [538,]  668  995  761  121  709  396  342    7   69   439 #>  [539,]  957  867  597  577  212  263  523  321   11   611 #>  [540,]  335  164  608  496  711  426  306   35  158    14 #>  [541,]  261  886   24  142   90  641  266  513  323   111 #>  [542,]  110  781   21  872   54  332   94  216  135   683 #>  [543,]  724   85  571  241  446  897  480  350  192   584 #>  [544,]  184  573  822  564  864  386   73  868  849   638 #>  [545,]  647  246  457  768  737  627  264  492   44    79 #>  [546,]  917  325  891  559  262  967  555  906  304   298 #>  [547,]  316  233  634  221  412  211  857  630  614   471 #>  [548,]  533  128  231  881   51  794  104  507  340   968 #>  [549,]  818  878  201  813  996  901  122  642  107   913 #>  [550,]  602  283  228   14  379  329   17   61  426   321 #>  [551,]  359  928   18  973   37  375  330  934  827   865 #>  [552,]  471  221  237   95  429  251  799  466  309   398 #>  [553,]  346   59  155  571   52  436  229  474  198   537 #>  [554,]  863  522  925  566  800  259  572  612  352   989 #>  [555,]  667  677  146  325  952  262  206  738  609   582 #>  [556,]  181  705  915  611  434  581  994  498  691   523 #>  [557,]  534  462  690  258  913  704  509  715  621   818 #>  [558,]  272  679  140  816  161  998  465   80  827   847 #>  [559,]  347  262  908  546  197  803  207   11  778   291 #>  [560,]  454  788  355  787   63  790  799  999  804   857 #>  [561,]  731  655  920  574  224  837  970  440  435   660 #>  [562,]  912  698  834  905  145  449  537  948  436   662 #>  [563,]  797  730  401   33  271  892  138   43  365   570 #>  [564,]   73  822  544  864  573  646  911  184  976   618 #>  [565,]  980  945  951  117  622  572  243  643  352   356 #>  [566,]  522  953  939  279  572  293  800  609  509   383 #>  [567,]  801  271  245  807   60  503  700  401   99   730 #>  [568,]  519  889  748  314    5  968  289  659  966    40 #>  [569,]  753  993  187  732   48  722  895  830  626   145 #>  [570,]   33   69  275   43  385  955  870  431  138   680 #>  [571,]  759  155  480  553  838  192  775   63  584   543 #>  [572,]  352  612  643  522  122  813  980   93  383   566 #>  [573,]  386  184  544  864  868  135   73  822  564   433 #>  [574,]  561  655  731  837  970  106  660  169   10   920 #>  [575,]  879  451  984  179  916   12  136  193  703   459 #>  [576,]   98  706  604  232  131  317  482  229  896   453 #>  [577,]  523  930  658  283  880  539  602   60  957   817 #>  [578,]  525  227   78  954  159  960  520  878  829   819 #>  [579,]   76  608  893  919  337  719  693  758  335   735 #>  [580,]  507  452  533  177  217  908  803  128  207   102 #>  [581,]  915  802  556  691  392  498  907  664  523   728 #>  [582,]  206  222  914  203  941  146  673  555  357   850 #>  [583,]   97  777  927  406  412  477  787  376  857   722 #>  [584,]  242  241  854  983  838  176  150  344  846   361 #>  [585,]  635  382  743  432  780  814  375  929  858   400 #>  [586,]  859  255   55  832  199   20  692  260  346    87 #>  [587,]  312  949  937  223  767  407  762  716  613   285 #>  [588,]  612  643  921  911  549  387  813  352   73   572 #>  [589,]  790   63  787   52  155   84  521  615  870   955 #>  [590,]  349  708  648  860  277   80  126  840   75   324 #>  [591,]  746  811  866  368  320  558  465  341  679   384 #>  [592,]  823  923  758  940  984  595  123  334  760   900 #>  [593,]  812  663  750  948  895  468   63  560   19   790 #>  [594,]  151  600  798  889  289    5   12   23   36   267 #>  [595,]  285  286  923  716  767  762  823  312  900   855 #>  [596,]  496  968   92  390  200   51  502  697  158   136 #>  [597,]  263   11  212  539    3  906  637  957  786   792 #>  [598,]  304   46  437  906  611  791   11  803  792   917 #>  [599,]  215  609  262  194  207  118  850  917  217   177 #>  [600,]  594  798  151  986  889  931  806   23  808     5 #>  [601,]  637  236  999   62  817  791  471  892  786   152 #>  [602,]  283  786  930  550  321  228  577   17  658   817 #>  [603,]  198  897  450  204  209  346  229  480  131   379 #>  [604,]  317   98  576  295  654  360  706  896  926   403 #>  [605,]  614   15  358  218  214  316  491  742  406   888 #>  [606,]  862  807  947  661  988  763   60   99  567   488 #>  [607,]  705  434  282  528  222  146  939  262  598   530 #>  [608,]  335  337  540  579  426  306   14   76  919   735 #>  [609,]  599  262  917  304  118  215  194  146  207   555 #>  [610,]  938  530  798  915  907  434  581  670   23   802 #>  [611,]  181   11  212  354  598  957  556  539  705   988 #>  [612,]  572  643  352  813  522  122  588  921   73   549 #>  [613,]  949  937  249  456  407  112  820   64  587   225 #>  [614,]  605   15  218  358  211  894  406  316  657   377 #>  [615,]  627   44  821  264  246   52  381  846  521   589 #>  [616,]   16  378  964   20  174  199  832  156  586   235 #>  [617,]  166  693   53  919  905  213  481  307  687   337 #>  [618,]  564  646  822  322   73  911  842  544  976   484 #>  [619,]  860  904  708  394  196  349  126    7  815   369 #>  [620,]  130  879  136  502  659  158  451  164  314   575 #>  [621,]  724  446  715  557  690  996  241  543  425   176 #>  [622,]  951  980  117  883   93  415  118  461  356   287 #>  [623,]   94  495  269  783  185   97  343  278  333   332 #>  [624,]  990  114 1000  928  414  257  689  551  972   929 #>  [625,]  784  932   62  258  637  848  598  791  597   437 #>  [626,]  732  753  187  895  569  468  756   45   48   145 #>  [627,]  246  264  615   44  821  381  737  457  768   955 #>  [628,]  321  602  539  867  283  391  550  577  957   263 #>  [629,]  638  744  180  184  849  395  512   13  544   524 #>  [630,]  511  857  777  406  657  412  316  715  454   377 #>  [631,]  785  501  882  422  840  639  447  126  349   427 #>  [632,]  958  871   33  439  319  797  563  402  138   761 #>  [633,]  449    1   79  749  388  366  492  855  902   974 #>  [634,]  742  316  536  547  467  660   15  614  605   251 #>  [635,]  585  382  929  780  487  114  961  928  375   432 #>  [636,]  961   34  944  997  780  382  487  432  189   635 #>  [637,]  601  299   62  999  236  786  597  466    3   471 #>  [638,]  524  184  849   13  868  395  433  544   18   573 #>  [639,]  785  373  422  243  427  882  287  971  117   266 #>  [640,]  281  279  989  273  509  516  953  566  510   861 #>  [641,]  142  513   24  678  473   90  415  111  886   541 #>  [642,]  383  657  738  218  377  894  122  511  194   818 #>  [643,]  352  612  572  921  745  122  980  813  588   733 #>  [644,]  531  987  196   41  394   89  106   10  300   764 #>  [645,]  411  680  152   31  423  275  401  892  685    27 #>  [646,]  564  925   73  266  409  864  541  544  261   618 #>  [647,]  545  963  246  457  737  417  492  278  332   363 #>  [648,]  277  590  898  186  811  860  348  345  384   253 #>  [649,]  476  992  969  222  528  397  941  914  673   463 #>  [650,]  322  822  996  549  861  878  813  544   73   868 #>  [651,]  220  369  869  885  440   77  214  660  710   731 #>  [652,]  950  192   20  571   66  964  838  553   55   830 #>  [653,]  139  334  717  417  367  441  226  490  855   647 #>  [654,]   67  403   98  896  604  317  453  295  706   360 #>  [655,]  731  561  920  574  837  440  224  970  651   220 #>  [656,]  381  936  497   65  514  305   44  359  363   846 #>  [657,]  406  218  377  777  642  630  511  412  894   614 #>  [658,]  930  423  880  197  817  734  577  853  711   503 #>  [659,]  314  568  130  294   51   68  979  331  390   884 #>  [660,]  214  251  651  440  220  837  742  634  869   731 #>  [661,]  988  763   88  606  792  766  104  751  947   807 #>  [662,]  145  943  562  265  912  964  698  187  626   569 #>  [663,]  436  593   63  812  874  695  589  537  759   346 #>  [664,]  581  556  181  915  498  301  523  957  867   802 #>  [665,]  209  119   35  172  198  496  870   52  131   200 #>  [666,]   27  152  467  102  766  751  883   99  401    95 #>  [667,]  555  677   50  738  952  146  850  244  433   215 #>  [668,]  538  995  342  121  770   69   79  285  871   439 #>  [669,]  188   18  176  952  150  241  996  584  861   242 #>  [670,]  610  728  802  354  238  116  907  915  181   282 #>  [671,]   28  506  195  170  809  315  183  443  979   686 #>  [672,]  721   22  163  443   99  947  284  807  170   801 #>  [673,]  850  219  992  528  914  146  262  217  959   582 #>  [674,]  862  116  672  284  606  700  807  721  488   163 #>  [675,]  733  430  745  534  356  327  913  505  704    62 #>  [676,]  686  794  748  519    5  397  548   68  747   568 #>  [677,]  667  555  738  953  952  433   50  244  849   146 #>  [678,]  513  473  641  215  688  293  415  137   24    90 #>  [679,]  558  341   80  272  465  653  277  717   49   492 #>  [680,]  401  200  645   43  411  275  423   92   33   152 #>  [681,]  474  896  453   67  305  706  497  654  983    82 #>  [682,]  415  872  358  517  110  781  297  910  491   210 #>  [683,]   78   94  135  344  386  623   97  332  269   176 #>  [684,]  286  694  173  767  100  900  770  285  595   884 #>  [685,]  291  207  906  152  803  645  437   27  411   630 #>  [686,]  676  794  747   68  183  315  548  899  671    83 #>  [687,]  782  948  909  975  162  905  617  479  213   166 #>  [688,]   74  137  473  678  939  311  293  118  215   111 #>  [689,]  990   86  796  512  835  483   42  257   70   754 #>  [690,]  425  557  825  462  818  913  715  534  201   280 #>  [691,]  734  853  978  336  701  778  392  127  994   197 #>  [692,]  379  350  603  897  346  260  296  198  480   229 #>  [693,]  919  617  426  166  307  337  213  579   76   735 #>  [694,]  173  770  884  684  286  916  502  285  979   158 #>  [695,]  663  228  346  329  436  603  593  692  905   741 #>  [696,]  164  978  390  853  711  294   58  734  540   485 #>  [697,]  778  701  217  908  347  968  197  452  718   580 #>  [698,]  562  912  905  834  436  856  942  537  145   663 #>  [699,]  767  342  339  286  439  506  871  770  121    28 #>  [700,]  284  880  807  810  567  245   60  488  143   801 #>  [701,]  778  697  197  908  127  734  853  347  317   452 #>  [702,]  208  250  362  113  182  195  328  130  877   620 #>  [703,]  962  179  413  193  916  267  363  246  497   966 #>  [704,]  462  967  505  913  511  194  430  818  437   534 #>  [705,]  556  181  434  607  914  528  222  994  611   559 #>  [706,]  576  453   98  896  604  654  681   67  131   276 #>  [707,]    4  337  774  380  887  608  157  713  893    53 #>  [708,]  860    7  815  619  710  904  709  369  220   210 #>  [709,]  890    7   49  492  538  995  749  396  112   500 #>  [710,]   77  781  815  216  651  885  278   21    7   872 #>  [711,]   35   92  390  540  200  696  930  496  880   853 #>  [712,]  109  801  365  129  132  420  429  271  398   730 #>  [713,]  735  337  719  856   76  450  481  726    4    53 #>  [714,]  175  405  986  852  292  765  793  575   12   795 #>  [715,]  425  376  857  446  511  355  535  630  462   454 #>  [716,]  937  112  855  367  285  595  995  587  844   613 #>  [717,]  653  226  441  367  341  334  679  139  956   389 #>  [718,]  331  519  968  289  959  217  697  969    5   507 #>  [719,]   76  481  735  166  213  713  579   53  919   337 #>  [720,]  275  910   31  768  457  491  955  680  870   570 #>  [721,]  672   99  443  163  807  947  824   47  170    22 #>  [722,]  787  477  775  583  927  155   63  830   97   569 #>  [723,]  396  844  619  500  749  469  716  196  394   709 #>  [724,]  446  621  376  715  543  771  571  241  425   176 #>  [725,]  147  985  470  893  758  900  123  877  851   760 #>  [726,]   55   82  713  229  856  553  346  308  450   482 #>  [727,]  469  374  644  500  898  394  723  831  338   987 #>  [728,]  736  581  802  915  238  370  907  670  610   105 #>  [729,]  236  466   19  799  999  471  109  171  741   365 #>  [730,]  271  563  797  801  401  567  499   33  365   824 #>  [731,]  655  561  920  224  440  574  837  651  435   660 #>  [732,]  626  753  569  318  895  187  419  756  145   468 #>  [733,]  745  675  430  356  534  352  327  505  643   913 #>  [734,]  853  127  701  336  978  691  197  778  696   658 #>  [735,]   76  719  713  919  337  481  172  179  444   209 #>  [736,]   23  728  581  991  915  141  852  798  808   802 #>  [737,]  278  768  492  627  457  776  521  545   26   246 #>  [738,]  642  433  677  667  383  555  386  953  952    50 #>  [739,]  952  206  582  298  546  891  325  421  241   555 #>  [740,]   81  230  339    9  987  460  168  124   89   178 #>  [741,]   19  171  750  329  174  419  729  228  695   560 #>  [742,]  214  634  605  358   15  297  660  614  240   517 #>  [743,]  400  585  814  432  858  876  148  861  669   515 #>  [744,]  414  326  849  244  463   13  629  638  476   992 #>  [745,]  733  675  430  352  534  643  356  800  913   572 #>  [746,]  591  811  866  368  558  320  191  679  847   272 #>  [747,]  686   68  676  315   83  165  826  899  248   183 #>  [748,]    5  519  568  676  397  889  718  289  331   968 #>  [749,]  855  500  366  890  709  633  396  716   49   341 #>  [750,]   19  593  486  741  948  162  799  812  687   782 #>  [751,]  129  848  666  766  947  988  817  801   60   567 #>  [752,]  532  255   96  977   25  350  260  296  586   859 #>  [753,]  569  732  895  626  477  468  756  187  419   722 #>  [754,]  796   42   86  689  167  990   70  835  323   483 #>  [755,]  225  249  410  966  257  371  407  613   40   748 #>  [756,]  333  869  187  253  981   77  753  186  185   651 #>  [757,]  761  933  402    1  319  902  449  974  538   895 #>  [758,]  760  470  579  893  984   76  592  719  900   823 #>  [759,]   63   84  480  571  155  787  198  771  805   790 #>  [760,]  388  758  213  115  123  719   76  984  919   166 #>  [761,]  757  319  402  538  508  121  632  668   45   124 #>  [762,]  407  312  459  949  456  923  587  285  595   937 #>  [763,]  988   88  661  503  452  104  245  792   60   766 #>  [764,]   41  404  531  240  300  478   10  106  574    72 #>  [765,]  793  795  202  839  334  417  405  940  972   441 #>  [766,]  792  152  817  423   27  988  666  751  503   401 #>  [767,]  285  286  770  342  699  587  684  949  595   100 #>  [768,]  457  910  955  491  737  720  545  246  627    31 #>  [769,]  489  156  174  741  943  329  750  831  975   905 #>  [770,]  884  694  173  285  506  342  767  668  286   979 #>  [771,]  805  535  355  759  376  724  788  804  571    63 #>  [772,]  518  997   91  239   56  191  140   30  368   442 #>  [773,]  876  515  504  160  191  652  432  858  518   950 #>  [774,]    4   53  713  719  942  481  166  529  856   337 #>  [775,]  269  155  846  722   97  344  583  495  343   615 #>  [776,]   26  521  955  737  870  902  343  431    1   627 #>  [777,]  412  406  583  927  657   97  630  857  511   376 #>  [778,]  701  908  197  347  697  317  452  734  853   127 #>  [779,]  945   57   32  351  259  290  133  565  243   256 #>  [780,]  635  432  382  585   56  487  518  961  929   772 #>  [781,]  872   21  542  216  110  710   94  358  682   332 #>  [782,]  687  975  162  909  948  905  479  617  213   402 #>  [783,]  333  623  998  816  324  819   94  269  465   185 #>  [784,]  848   62  625  791  601  637  751  327  792   843 #>  [785,]  882  639  422  631  373  427  243  971  447   840 #>  [786,]  236    3  817  602  423  637  321  601  228   365 #>  [787,]   63  790  477  722  589  583  355  454  155   759 #>  [788,]  804  535  560  419  355  805  454  771  999   787 #>  [789,]  926  361  325  347  403  119  828  317  891   908 #>  [790,]  589  787   63  477  454   84  583  560  411   155 #>  [791,]  327  437  792  906  803  766   27  304  291   601 #>  [792,]  766  988  803  791  906  437   11  291  817   685 #>  [793,]  765  795  839 1000  417  410  202  972  363    12 #>  [794,]  676  548  686  519  517   40  748  183  881   968 #>  [795,]  972  793 1000  765  839  202  405  487  497   472 #>  [796,]   42   86  689  835  754  990   70  483  512   257 #>  [797,]  563  730  138  892   33  401  570  398  271    43 #>  [798,]  600  938  594  530  151  806    5   23  289   903 #>  [799,]  892   19  385  729  560  138  471  486  236   999 #>  [800,]  352  572  534  745  566  863  733  522  612   643 #>  [801,]  271  567  730  947   99  807  284  365  751   129 #>  [802,]  907  523  238  370  691  581  577  105  556   915 #>  [803,]  207  291  177  906  792  580  437  507  685   452 #>  [804,]  788  535  805  419  560  771  355  171  999   299 #>  [805,]  771  535  788  355  804  759  376  787   63   560 #>  [806,]  903    2  931  798  600  397  938    5  594   889 #>  [807,]  567  606   99  721  700   47  947  488  284   245 #>  [808,]   23  600  594  798  151  494  938  254  903   806 #>  [809,]  443  170  506  824  979  871  671  195   28   884 #>  [810,]  499  143   58  880  700  294   92  245  390   711 #>  [811,]  591  746  384  345  186  320  465  648  253   144 #>  [812,]  593  902  948  895  663  974  449  468    1   776 #>  [813,]  122   73  549  612  572  383  894  980  522   642 #>  [814,]  743  585  395  400  780  635  551  638   18   524 #>  [815,]  369    7  297  710  214  885  708  220  971    77 #>  [816,]  998  269  140  783  272  623   65   94  558   332 #>  [817,]  423  766   60  786  658  792  930  152  365   751 #>  [818,]  201  462  913  549  511  642  878  996  704   412 #>  [819,]  783  830  333  829  998  345  159  722  269   816 #>  [820,]  613  154  210  937  112  949  995    6  416    64 #>  [821,]  615  246  627  828   44  962  413  875  264   381 #>  [822,]  544  322  650  564  573   73  184  868  386   813 #>  [823,]  592  923  595  900  758  123  762  984  286   334 #>  [824,]   47   99  443  183  102  721  809  271  170   567 #>  [825,]  690  425  557  534  430  107  280  913  535   462 #>  [826,]  315   47  153  163  183  104  721  807  231   128 #>  [827,]  490  272  140  551  239  226  558  395  161    37 #>  [828,]  888  875  821  910  491  865   31  922  789   413 #>  [829,]  345  253  333  186  819  520  783  756  578   302 #>  [830,]  993  722  819  569  372  775   48  847   30    66 #>  [831,]  943  338  975  162  782  124  750  662  933   687 #>  [832,]   87  586  260  329  859  156  199  695  174    16 #>  [833,]  254  120  946  189  991  141  887  472   82   193 #>  [834,]  698  562  235  964  912  442  942  856  436   537 #>  [835,]  483  257  371   70  796   42   13  755  512   142 #>  [836,]   85  288   25  364  421  739  977  301  455   350 #>  [837,]  970  169  251  655   10  300  869  561  660   106 #>  [838,]  983  150  584  474  242  192  854  846  241   571 #>  [839,]  363  793  795  490  267  417  934  497  359   413 #>  [840,]  447  501  126   75  349  422   29  210  154   590 #>  [841,]  404  133  290  240   72  958   99  824  132   478 #>  [842,]  646  618  387  911  565  612  925  564   73   643 #>  [843,]  848  354  784  611  988  625   60  539  751   606 #>  [844,]  223  367  716  937  303  587  112  855  956   873 #>  [845,]  351  129   32   57  947  132  848  751  784   309 #>  [846,]  983   65  775  474   44  615  854  381  875   155 #>  [847,]   30   66  830  320  998  819  993  140  465   235 #>  [848,]  751  784  988  129  791  601  792  817  766   661 #>  [849,]  244  638  677   50  433  544   13  667   18   744 #>  [850,]  219  673  217  206  959  347  599  262  697   325 #>  [851,]  909  975  687  782  166  213  617   53  178   479 #>  [852,]  175  405  451  879  946  714   12  575  986   141 #>  [853,]  734  127  978  701  336  696  691  197  778   711 #>  [854,]  242  983  584   65  846  875  344  241  838   150 #>  [855,]  749  716  367  139  112  923   79  937  633   366 #>  [856,]  537  481  874   53  905  713  698  617  436   346 #>  [857,]  355  630  454  376  715  511  777  412  583   535 #>  [858,]  150   37  838  515  192  375  400  584  983   669 #>  [859,]   55  586  255  977  692  346  726  950  832   260 #>  [860,]  708  619    7  904  815  369  220  710  651   709 #>  [861,]  281  669  188  650  400  996  677  849  953    18 #>  [862,]  606  807  488  674  700  947  284  763   60   661 #>  [863,]  800  554  566  989  522  279  572  352  939   509 #>  [864,]  573  184  544   29  564  386  409  216  868    21 #>  [865,]  922  875  413  363  330  828  934  359  219   966 #>  [866,]  746  368  591  341  149   91  389  441  366   320 #>  [867,]  296  957  539  263  190  321  628  523  301   379 #>  [868,]  386  573  524  135  184   78  433  544  638   864 #>  [869,]  651  220  885  369  440   77  756  837  214   981 #>  [870,]  955   69  776   31  768  521  589  627   43   570 #>  [871,]  439  632  508  809  121  418  668  342  699   958 #>  [872,]  781   21  542  110  216  682  358  415  894   710 #>  [873,]  956  844   75  223  840  367  501  126  613   937 #>  [874,]  537   52   59  856  481  663  436  209  514   735 #>  [875,]  828  413  865  821  854  934  403   65  846   922 #>  [876,]  515  160  773  504  400  858  432  191  743   448 #>  [877,]  113  900  985  470  684  100  758  725  823   182 #>  [878,]  996  549   78  818  201  176  642  901  683   578 #>  [879,]  575  451  136  620   12  193  916  179  502   984 #>  [880,]  930  245   60  700  810  658  711  577  503    17 #>  [881,]  340  231  548  883  517  102  183  415  533   111 #>  [882,]  785  639  631  422  427  349  126  373  971   393 #>  [883,]  340  881   27  666  231  467  102  622  118   152 #>  [884,]  979  770  506  694  314  173  659   51  362    68 #>  [885,]   77  369  220  214  651  869   26  431  815   710 #>  [886,]  111   90   24  541  641  261  142  473  154   415 #>  [887,]  991  713  529   82  833  726  482  157  946   120 #>  [888,]   31  491  910  828   15  955  821  657  406   789 #>  [889,]   12  568    5  748  289  519  267   36  879   594 #>  [890,]   49  709  492    7  348  500  749  277  278     1 #>  [891,]  325  361  546  241  789  511  967  926  446   630 #>  [892,]  411  152  799  797  401  645  467  563  385    27 #>  [893,]  579  470  758   76  725  608  337  693  919   719 #>  [894,]  218  122  377  642  358  614  657  383  901    21 #>  [895,]  468  753  431  812  626  569   45   26  593   385 #>  [896,]  681   67  654   98  474  453  706  604  926   403 #>  [897,]  360  198  480  926  603   98  295  604  361   896 #>  [898,]  981  648  302  101  253  384  655  394  186   106 #>  [899,]   83  686  747  393  315  165  671  886  111   416 #>  [900,]  286  123  684  918  595  168  877  758  823   470 #>  [901,]  211  201  107  233  549  894  921  122  412   435 #>  [902,]  974    1  449  372  933  812   48  776   26   757 #>  [903,]  806    2  931  798  600  938  397  594    5   530 #>  [904,]  196  619  860  815  369  708  478  220  394   106 #>  [905,]  948  617   53  912  687  698  856  942  481   166 #>  [906,]  437  291  803  304  207  792  685  917  791    11 #>  [907,]  802  691  978  488  434  331  696  523  734   763 #>  [908,]  197  347  778  452  701  697  580  559  217   291 #>  [909,]  782  687  479  975  162  178  851  948  617   693 #>  [910,]  491   31  457  768  888  720  275  955  828   870 #>  [911,]   73  976  921  564  813  409  435  588  612   901 #>  [912,]  562  698  905  948  449  537  481  942  812    53 #>  [913,]  462  818  704  201  430  511  505  534  967   425 #>  [914,]  528  994  673  582  222  206  357  969  850   559 #>  [915,]  581  556  181  610  907  802  705  530  434   691 #>  [916,]  179  173  984  502  158  703  444  136  575   694 #>  [917,]  304  967  546  609  194  437  906  262  207   325 #>  [918,]  168  121  508  286  123  900  115  595  339   699 #>  [919,]  693  617   76  735  166  426  579  337  307   213 #>  [920,]  224  731  561  440  655  435  651  211  837   660 #>  [921,]  643  901  435  911  122  980  107  464  612   813 #>  [922,]  865  219  413   40  875  363  828  966  959   330 #>  [923,]  334  823  595  592  139  762  984  855  459   456 #>  [924,]  861  743  400  814  322  650  629  638  849   822 #>  [925,]  522  323  646  678  513  293  939  572  541   544 #>  [926,]  361  789  480  198  403  897  896  119  360   604 #>  [927,]   97  583  777  412  406  477  722  495  211   159 #>  [928,]  973  929  114  359  551  330  934  375  305   839 #>  [929,]  487  928  382  375  114  305  972    8  635   359 #>  [930,]  658  880  577  711   60  817  245  283  423   602 #>  [931,]    2  397  806    5  748  600  903  649  676   889 #>  [932,]  258  625  597  212  263  557   62  637  534   437 #>  [933,]  449    1  902  757  974  948  812  402   48   115 #>  [934,]  305  330  359  973  497  413  875  363    8   865 #>  [935,]    6  587  671   28  820  767  506  248  949   686 #>  [936,]  381  313  514  264   44  656  417  246  627   497 #>  [937,]  112  716  613  367  949  456  587  995  285   407 #>  [938,]  610  798  530  903  806  600  434  397  594   907 #>  [939,]  293  137   74  688  609  566  118  678  146   599 #>  [940,]  334  441  765  984  202  592  923  313  139   417 #>  [941,]  203  582  973  330  463  445  206  357  222   992 #>  [942,]   53  905  698  912    4  774  856  166  562   481 #>  [943,]  831  662  145  975  912  948  562  782  750   933 #>  [944,]   34  202  189  961  972  239  946  487  529   405 #>  [945,]  565  259  461   32  351  622  356  779   46   293 #>  [946,]  405  472  120  451  833  529  193  141  189   795 #>  [947,]   99  129  801  721  606  807  751  567  666    47 #>  [948,]  687  782  905  812  593  449  912  933  162   617 #>  [949,]  456  407  613  249  762   64  937  587  285   112 #>  [950,]  652  838  192  571  553   55   66  474  308   346 #>  [951,]  980  622  117  122  894   93  565  415  634   266 #>  [952,]   18  739  555  242  188  677  667  854  206   241 #>  [953,]  566  677  279  555  738  281  522  667  383   509 #>  [954,]  234  520  578  125  901  976   78  107  224   135 #>  [955,]  870  768  521  776   31  491  457   69  910   627 #>  [956,]  873  226  717  367  844  353  653  223  613   937 #>  [957,]  539  212  867  523   11  597  190  263  577   611 #>  [958,]  632  240   33  439  570  478  742  214  871   297 #>  [959,]  219  718  217  850  968  697  922  267   40   966 #>  [960,]  280  525  578  227  159  878  107  205  954   425 #>  [961,]  487   34  382  944  972  636  635  308  780   929 #>  [962,]  444  821  703  172  627  246  264  179  496    44 #>  [963,]  647  332   80  545   54  278  542  492  363   246 #>  [964,]  235  834  145  652  830  698  993  436  562   662 #>  [965,]  309  536  356  634  464   32  622  327  951   675 #>  [966,]   40  267  922  959  363  755  225  413  410   568 #>  [967,]  704  917  194  511  505  462  383  437  325   546 #>  [968,]   51  519  718  596  697   40  533  959  568   217 #>  [969,]  528  718  397  434  331  673  311  914    5   992 #>  [970,]  837  169  561  655  300  574  731  106   10   440 #>  [971,]  427  297  815  416  422  373  210  478  287   517 #>  [972,]  795  487  202  929 1000  793  239  765  928   839 #>  [973,]  330  934  359  928  941  305  375  865  551     8 #>  [974,]  902    1   48  372  449  933  776  187   26   812 #>  [975,]  782  162  687  909  948  124  178    9  851   933 #>  [976,]  911   73  564  409  954  234  435  224  864   573 #>  [977,]  288  350  859  482   85  255   55   25  950   229 #>  [978,]  853  734  696  390  701  127  691  778  697   503 #>  [979,]  884  170  506   51  314  809  824  770  659   443 #>  [980,]  951  117  622  122  894  266  572  813  565    93 #>  [981,]  220  869  756  106  651  655  369  837  169    10 #>  [982,]  108  299  932   62  557  825  258  637  263   625 #>  [983,]  854  846  474  242  838  584   65  681  150   875 #>  [984,]  179  575  916  923  451   76  703  173  879   758 #>  [985,]  725  470  147  877  758  900  893  123  592   823 #>  [986,]  175  292   12  714  600  852  889 1000  594   405 #>  [987,]    9  531  124  319  644   81   89  508  761   402 #>  [988,]  661  792  763  766   60  751  848  606  817    88 #>  [989,]  640  566  281  279  953  509  146  939  463   522 #>  [990,]  689  796  835  257  624  512   86  483  414   754 #>  [991,]  887  157  833  254  141  189  120  946  529   232 #>  [992,]  649  673  476  222  969  326   74  528  582   941 #>  [993,]   48  830  187  569  372  974  902  722  819   320 #>  [994,]  357  914  778  206  298  559  691  347  317   295 #>  [995,]  112  342  538  668  709  285  937  716  396     7 #>  [996,]  878  818  549  188  738  176  642  669  201   621 #>  [997,]   91  772  239  518  442  368   56  944   34   202 #>  [998,]  816  269  783  140  623   65  465  272  775   819 #>  [999,]  299  236  466  637  471  560  601  729  171   799 #> [1000,]  795  793  972  839  765  928  292  114  257   487 #>  #> $neighbor_distances #>               [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7] #>    [1,] 0.20401328 0.2297934 0.3138135 0.4231108 0.5355298 0.5401591 0.5567491 #>    [2,] 0.32973883 0.6430310 0.7968558 0.8212084 1.0502927 1.0810405 1.1236309 #>    [3,] 0.57497341 0.6313763 0.6795598 0.7046763 0.7298684 0.7306891 0.7345639 #>    [4,] 0.51831285 0.7634264 0.7697531 0.8383359 0.8680102 0.8847910 0.8976446 #>    [5,] 0.24904996 0.4462521 0.5077824 0.5213317 0.5677158 0.5780144 0.5893216 #>    [6,] 0.27555983 0.8092895 0.8411883 1.0214516 1.0608777 1.0700967 1.0707614 #>    [7,] 0.34196056 0.4761885 0.5034966 0.5411459 0.5780769 0.6419423 0.6603372 #>    [8,] 0.42341722 0.4763486 0.5475133 0.5649593 0.5832804 0.5979267 0.6457748 #>    [9,] 0.19231943 0.6145078 0.6294519 0.7061322 0.7081877 0.7728475 0.7956999 #>   [10,] 0.35591332 0.3819807 0.4921715 0.5840243 0.6060206 0.6677208 0.7098107 #>   [11,] 0.46219264 0.5402428 0.5673004 0.5868896 0.6231919 0.7234819 0.7392123 #>   [12,] 0.43083312 0.5794452 0.6483370 0.6705609 0.6861477 0.6994048 0.7227961 #>   [13,] 0.53278656 0.5615111 0.5967172 0.5979869 0.6680145 0.7538365 0.7900894 #>   [14,] 0.44013910 0.5055929 0.5672535 0.5834436 0.6096183 0.6804203 0.7303456 #>   [15,] 0.22442660 0.3470505 0.4231470 0.4517001 0.4997707 0.5691470 0.5776172 #>   [16,] 0.76958516 0.9489897 1.1926012 1.3070545 1.3537301 1.3598960 1.3744396 #>   [17,] 0.51622749 0.5401219 0.7234209 0.7581030 0.7920929 0.8279909 0.8624187 #>   [18,] 0.47179280 0.5837484 0.6898668 0.7268092 0.7290642 0.7365497 0.7597294 #>   [19,] 0.43565819 0.5452349 0.5871641 0.6043339 0.7073436 0.7144698 0.7223383 #>   [20,] 0.80990881 0.8755916 0.9501921 0.9577120 0.9891210 1.0494963 1.0622209 #>   [21,] 0.22700182 0.2863546 0.3559667 0.3895462 0.5214387 0.6016396 0.6285474 #>   [22,] 0.55620113 0.6761119 0.7251096 0.7326979 0.8173047 0.9055574 1.0445476 #>   [23,] 0.91857413 0.9619119 1.0043138 1.0134311 1.0219618 1.0425115 1.0442192 #>   [24,] 0.19730777 0.2636174 0.4236904 0.5930203 0.6018892 0.6034513 0.6369706 #>   [25,] 0.42602438 0.6385229 0.7472823 0.7887490 0.8148026 0.8461533 0.8712837 #>   [26,] 0.25901013 0.2973363 0.4249013 0.4304254 0.4773597 0.4845951 0.5145035 #>   [27,] 0.20551770 0.2950649 0.3805556 0.4767526 0.5489620 0.5686003 0.6132823 #>   [28,] 0.30959217 0.6546507 0.7499530 0.8131680 0.8518826 0.9146160 0.9170140 #>   [29,] 0.49900188 0.6686268 0.6943917 0.7850545 0.8195999 0.8488671 0.9128618 #>   [30,] 0.32203921 0.4746980 0.6323672 0.6934924 0.7284374 0.7338340 0.7349196 #>   [31,] 0.18972562 0.1966582 0.3291049 0.3632984 0.4182481 0.4343620 0.4632650 #>   [32,] 0.74917426 0.9005771 0.9155590 0.9520988 1.0041724 1.0155953 1.0164986 #>   [33,] 0.21768175 0.3204728 0.3811368 0.4807926 0.5195598 0.5230785 0.5691183 #>   [34,] 0.38744169 0.7337911 0.8877099 0.9936655 1.0624526 1.0980638 1.1491190 #>   [35,] 0.37483752 0.4342561 0.4568264 0.4861008 0.5213623 0.5690278 0.5699772 #>   [36,] 0.44244519 0.4443788 0.5147545 0.5206723 0.5501531 0.6842577 0.6929611 #>   [37,] 0.54337093 0.5935788 0.6328591 0.6911977 0.7219199 0.7234359 0.7313953 #>   [38,] 1.31785178 1.3438966 1.3981701 1.3993665 1.5485858 1.6567922 1.6650614 #>   [39,] 0.73369006 0.7503674 0.9358914 1.0864524 1.0976545 1.1126941 1.1159428 #>   [40,] 0.29908750 0.5156511 0.5554737 0.6042603 0.6052681 0.6338556 0.6366219 #>   [41,] 0.81539391 1.1608150 1.1824394 1.3247185 1.3430561 1.4019599 1.4877094 #>   [42,] 0.48515156 0.5646179 0.6039837 0.6758119 0.7892313 0.7998428 0.8051681 #>   [43,] 0.38113677 0.4043257 0.4658812 0.5011849 0.5190625 0.5551641 0.5600718 #>   [44,] 0.17060468 0.2301752 0.3028660 0.3064312 0.3519539 0.4537897 0.4624185 #>   [45,] 0.53600681 0.5812638 0.6060206 0.6490480 0.6754915 0.7363541 0.7394081 #>   [46,] 0.59591158 0.7215075 0.7426337 0.8424369 0.8453762 0.8905146 0.8914415 #>   [47,] 0.39132024 0.4442663 0.4771222 0.5269116 0.5427244 0.5579043 0.5724860 #>   [48,] 0.32474420 0.3294379 0.3395542 0.4064138 0.4986791 0.5401591 0.6187809 #>   [49,] 0.16183479 0.4538520 0.5355462 0.5426983 0.5780769 0.5809784 0.6926520 #>   [50,] 0.52113328 0.5374643 0.5615111 0.6046671 0.6684813 0.6787766 0.7595550 #>   [51,] 0.40156738 0.4023460 0.5363414 0.5584363 0.5807697 0.5976703 0.6052291 #>   [52,] 0.30079828 0.4557239 0.4604964 0.4668121 0.5064915 0.5089135 0.5460592 #>   [53,] 0.30909478 0.4122957 0.4443338 0.5148636 0.5507568 0.6080807 0.6146055 #>   [54,] 0.44679529 0.5979869 0.6239978 0.6450007 0.6588832 0.6684813 0.7141968 #>   [55,] 0.39493483 0.7189337 0.7325849 0.7820193 0.7956558 0.8851459 0.9183576 #>   [56,] 0.77108036 0.7739000 0.8849005 1.0128512 1.0143645 1.0483008 1.0485667 #>   [57,] 1.06809997 1.1194318 1.1477217 1.1701542 1.2074811 1.2570268 1.2753155 #>   [58,] 0.28216295 0.5315811 0.5442454 0.5777386 0.5860639 0.6438529 0.6641861 #>   [59,] 0.30079828 0.3685412 0.4777388 0.4984471 0.5403586 0.5408612 0.5430500 #>   [60,] 0.54911110 0.5516193 0.5530989 0.5632359 0.6033952 0.6136931 0.6328436 #>   [61,] 0.34122072 0.4727413 0.6564684 0.7387685 0.7408450 0.7657995 0.8107526 #>   [62,] 0.55055151 0.6191030 0.7153343 0.7319123 0.8919309 0.8942781 0.9338844 #>   [63,] 0.29705996 0.3385839 0.3871598 0.3965733 0.4219363 0.4457944 0.5142917 #>   [64,] 0.36622729 0.5401748 0.5501888 0.6331443 0.6406151 0.6572527 0.6580332 #>   [65,] 0.33107636 0.4383762 0.4580981 0.5240442 0.5530773 0.5597366 0.5820901 #>   [66,] 0.32203921 0.5758201 0.6129005 0.7565578 0.7595649 0.7998382 0.8057038 #>   [67,] 0.18123428 0.2247761 0.3535610 0.4449773 0.4476027 0.4522011 0.5056599 #>   [68,] 0.60435857 0.6786997 0.7176058 0.7268410 0.7435517 0.7610829 0.7654996 #>   [69,] 0.27664042 0.3204728 0.4557351 0.4637480 0.4658812 0.5131093 0.5685631 #>   [70,] 0.33913853 0.5327866 0.5401326 0.5646179 0.5882994 0.6018892 0.7192089 #>   [71,] 1.12307012 1.1510827 1.3960860 1.4271978 1.4382767 1.5644678 1.5645816 #>   [72,] 0.51348972 0.7497786 0.8325341 0.9052252 0.9182730 0.9211586 0.9578495 #>   [73,] 0.47483946 0.5124828 0.5445280 0.6942919 0.7394045 0.7671737 0.7779473 #>   [74,] 0.28086047 0.5503859 0.6144341 0.6915212 0.7200344 0.7245419 0.7247015 #>   [75,] 0.49900188 0.6559805 0.7608997 0.7807986 0.8315845 0.9564623 0.9584158 #>   [76,] 0.32122941 0.3618321 0.4244000 0.5306241 0.5770327 0.6021410 0.6408433 #>   [77,] 0.23469512 0.4602847 0.4720188 0.4987859 0.5091005 0.5167166 0.5277868 #>   [78,] 0.30479762 0.3391635 0.5063407 0.5650311 0.5770906 0.6597076 0.6888894 #>   [79,] 0.62924214 0.6314090 0.6406151 0.6582699 0.6737791 0.6758646 0.6875514 #>   [80,] 0.56904812 0.6859744 0.7380836 0.7586343 0.8267148 0.8423138 0.8738400 #>   [81,] 0.59223534 0.7168694 0.7833911 0.8421403 0.8520914 0.8550891 0.8868579 #>   [82,] 0.47865278 0.5420481 0.5733051 0.6055804 0.6110951 0.6230804 0.6416285 #>   [83,] 0.86066125 0.9057307 0.9124006 0.9155128 1.0231323 1.0377061 1.0880106 #>   [84,] 0.24359580 0.3277844 0.3706551 0.4457944 0.4902789 0.4958329 0.5006587 #>   [85,] 0.66231896 0.6688171 0.6790670 0.6959096 0.7877392 0.8002646 0.8683374 #>   [86,] 0.48515156 0.6692237 0.6713260 0.6990829 0.7192089 0.7687596 0.8964001 #>   [87,] 0.59092394 0.7057831 0.8944402 1.1485202 1.2116049 1.2583307 1.2819676 #>   [88,] 0.30356128 0.4458033 0.4921373 0.5137588 0.5238729 0.5510023 0.5894836 #>   [89,] 0.51348972 0.7168694 0.8973275 0.9646826 1.0507968 1.0592801 1.0855428 #>   [90,] 0.26361745 0.4124633 0.4396310 0.5177602 0.5350481 0.6223870 0.6416088 #>   [91,] 0.37856273 0.5975214 0.6182114 0.8280729 0.8407136 1.0143645 1.1062100 #>   [92,] 0.26871382 0.2948741 0.4668583 0.5357019 0.5491028 0.5494312 0.5655405 #>   [93,] 0.46669479 0.4830185 0.5945708 0.6005074 0.6229000 0.6347234 0.6740533 #>   [94,] 0.30300129 0.3634852 0.4458159 0.5063407 0.5427644 0.5759731 0.5856994 #>   [95,] 0.64689821 0.6681432 0.6944857 0.7090391 0.7149802 0.7269772 0.7622951 #>   [96,] 1.27663782 1.3199883 1.3429736 1.3927013 1.5225969 1.5735084 1.6646843 #>   [97,] 0.27161819 0.2832884 0.4156592 0.4169496 0.4342024 0.4811261 0.4973792 #>   [98,] 0.30506160 0.3194291 0.3281084 0.3961910 0.4163083 0.4341561 0.4411914 #>   [99,] 0.40396385 0.4139184 0.4371033 0.4442663 0.5593100 0.6000728 0.6078117 #>  [100,] 0.65761819 0.6973730 0.7161104 0.7994855 0.8108696 0.9162485 0.9329003 #>  [101,] 1.00462535 1.1155603 1.2089960 1.2289036 1.2847375 1.2863212 1.3026685 #>  [102,] 0.46681560 0.4854513 0.4957370 0.5289293 0.5427244 0.5489620 0.5584724 #>  [103,] 1.16749318 1.4255889 1.4279828 1.4987907 1.5282706 1.5462409 1.5652861 #>  [104,] 0.20477493 0.3035613 0.4298739 0.4985570 0.5174136 0.5225285 0.5802836 #>  [105,] 0.18633895 0.5271518 0.6438529 0.6963515 0.8379191 0.9070472 0.9138439 #>  [106,] 0.35591332 0.4826891 0.5226356 0.6358919 0.7022439 0.7063970 0.7614513 #>  [107,] 0.40542765 0.4725956 0.5014818 0.6827531 0.7195405 0.7223956 0.7753567 #>  [108,] 0.79274619 1.0019605 1.0021622 1.1024913 1.1125834 1.1358275 1.1708466 #>  [109,] 0.47669145 0.7419817 0.8107973 0.8382090 0.8383188 0.8474351 0.9107903 #>  [110,] 0.31090010 0.4085609 0.4280404 0.5214387 0.5444096 0.5502744 0.6071493 #>  [111,] 0.32825925 0.5350481 0.5786985 0.6291793 0.6540990 0.7224357 0.7226135 #>  [112,] 0.28686090 0.4302441 0.4494518 0.5510449 0.5682325 0.6331443 0.6429299 #>  [113,] 0.79948551 0.8196111 1.1066756 1.1320754 1.1331090 1.1358607 1.2296081 #>  [114,] 0.56229503 0.6530955 0.8385358 0.8567284 0.9437740 0.9452377 0.9842884 #>  [115,] 0.68190952 0.6827447 0.7768682 0.8138382 0.8193365 0.8235315 0.8351158 #>  [116,] 0.86930839 1.0362540 1.0862733 1.1254669 1.2183347 1.2441587 1.2488673 #>  [117,] 0.37592993 0.3849360 0.5197947 0.6065952 0.6279872 0.6766668 0.6911579 #>  [118,] 0.46221343 0.4666948 0.5330444 0.5389871 0.5590301 0.5737281 0.5953139 #>  [119,] 0.32550489 0.4308553 0.4907520 0.4958329 0.4997769 0.5617512 0.5879947 #>  [120,] 0.44293350 0.6414365 0.7178992 0.7404217 0.8105483 0.8682396 0.8682856 #>  [121,] 0.46307862 0.5218040 0.5225292 0.5744182 0.5800488 0.6322197 0.6513177 #>  [122,] 0.41685071 0.4503196 0.4853777 0.5544627 0.5699273 0.6300052 0.6439718 #>  [123,] 0.68274466 0.7148144 0.7221509 0.7384849 0.8249689 0.9304241 0.9374137 #>  [124,] 0.19231943 0.5122173 0.6044755 0.6464817 0.6824075 0.7232993 0.7579198 #>  [125,] 0.74669942 0.8461728 0.9969150 1.1001628 1.1603534 1.1906359 1.2395521 #>  [126,] 0.58774456 0.6793334 0.7105331 0.9124348 0.9244259 0.9363978 0.9454073 #>  [127,] 0.30769230 0.3369371 0.3787409 0.3952376 0.5325051 0.5382691 0.5564518 #>  [128,] 0.20477493 0.3236194 0.3945256 0.3949709 0.4122181 0.4458033 0.4496528 #>  [129,] 0.42276881 0.5196309 0.7173120 0.7289646 0.7634717 0.7944741 0.8430509 #>  [130,] 0.51794009 0.5320436 0.6114427 0.6374624 0.6868356 0.7018262 0.7181447 #>  [131,] 0.21901959 0.3442668 0.4211578 0.4667251 0.4777388 0.4840807 0.5136652 #>  [132,] 0.69448565 0.7728496 0.8054622 0.8556766 0.9882101 1.0163488 1.0405976 #>  [133,] 0.26149733 0.5536779 0.5805117 0.9264914 1.0420040 1.0570509 1.0655072 #>  [134,] 1.80709210 1.8244310 1.9209557 2.3515958 2.3571517 2.4246918 2.4433042 #>  [135,] 0.30479762 0.3728543 0.3940977 0.4458159 0.6126769 0.6285474 0.6390523 #>  [136,] 0.33895971 0.3893701 0.5146600 0.5501531 0.5558873 0.5771503 0.5856428 #>  [137,] 0.39768837 0.4622134 0.5273851 0.5641110 0.6046100 0.6144341 0.6294244 #>  [138,] 0.35398966 0.4949763 0.5149624 0.5747679 0.5749712 0.5758722 0.6047057 #>  [139,] 0.37054568 0.3846383 0.4323529 0.6448516 0.6628599 0.6980144 0.7386627 #>  [140,] 0.39675821 0.5248954 0.5704979 0.6147307 0.6275605 0.6911977 0.6934924 #>  [141,] 0.75849192 0.7667794 0.7812949 0.7981856 0.8070816 0.8071421 0.8291045 #>  [142,] 0.19730777 0.3586291 0.4396310 0.5401326 0.6341855 0.6372363 0.6752942 #>  [143,] 0.48456116 0.5193571 0.5772534 0.6301383 0.7017327 0.7228086 0.7907077 #>  [144,] 0.51283692 0.8493569 0.8940551 0.9453259 0.9588525 0.9604495 0.9744449 #>  [145,] 0.60510531 0.6901113 0.7688724 0.8355959 0.8406920 0.8503548 0.8505269 #>  [146,] 0.38008246 0.5174469 0.5366706 0.5704215 0.5720472 0.6303604 0.6503433 #>  [147,] 0.51747476 0.8234325 1.0669753 1.1481907 1.2432246 1.4530704 1.4741310 #>  [148,] 0.41080444 0.6959096 0.8415028 0.8855237 0.8880658 0.9110587 0.9420925 #>  [149,] 1.11182729 1.1251754 1.1956069 1.3736494 1.4250998 1.4786682 1.5044132 #>  [150,] 0.38923661 0.4078134 0.5105065 0.5729184 0.5922590 0.6070615 0.6328591 #>  [151,] 0.37190259 0.7741268 0.9093037 0.9185741 0.9242594 0.9253622 0.9589677 #>  [152,] 0.20551770 0.3965078 0.4171115 0.4419081 0.4876206 0.4989057 0.5140563 #>  [153,] 0.61019624 0.6864077 0.7336901 0.8395836 0.9070571 0.9356061 0.9410593 #>  [154,] 0.61303925 0.6188304 0.6485613 0.7657118 0.7768925 0.7861819 0.7918673 #>  [155,] 0.42193626 0.4439451 0.4560308 0.4604964 0.5050148 0.5156682 0.5364841 #>  [156,] 0.66488688 0.8727621 0.9055905 1.0700655 1.0800431 1.0847188 1.2958173 #>  [157,] 0.80281371 1.0576050 1.2738280 1.2908589 1.3178518 1.3887935 1.4097812 #>  [158,] 0.08251857 0.3202838 0.3893701 0.4669771 0.5724690 0.5740952 0.5841150 #>  [159,] 0.59827147 0.6142320 0.6161719 0.6426543 0.6494894 0.6762068 0.7021157 #>  [160,] 0.60242534 0.6685740 0.7464622 0.8091821 0.9124871 0.9809949 1.1124419 #>  [161,] 0.67851441 0.7475206 0.7586343 0.8474387 0.8612843 0.8731496 0.9237617 #>  [162,] 0.38300885 0.4971060 0.5108319 0.5622689 0.6015676 0.6044755 0.6742913 #>  [163,] 0.50171175 0.5595339 0.6437879 0.6623004 0.6761119 0.6885849 0.7503674 #>  [164,] 0.32782375 0.4061939 0.5442454 0.6092659 0.6123959 0.6135846 0.6203217 #>  [165,] 0.93673888 1.0165897 1.1200171 1.2571968 1.2810157 1.4182489 1.4440918 #>  [166,] 0.28306922 0.3090948 0.3853429 0.4469073 0.5166841 0.5347049 0.5604893 #>  [167,] 0.92241698 1.0041062 1.0157440 1.1074777 1.1417448 1.1616740 1.2665790 #>  [168,] 0.28601925 0.4802877 0.6767893 0.7685148 0.7993516 0.8017269 0.8029323 #>  [169,] 0.27878599 0.4488099 0.4580025 0.4921715 0.5226356 0.7461676 0.7962490 #>  [170,] 0.32742239 0.4509385 0.5799741 0.6418114 0.6545629 0.6661913 0.6804626 #>  [171,] 0.66649237 0.7289566 0.7531020 0.7781384 0.8451637 0.8461061 0.8530819 #>  [172,] 0.21901959 0.3814825 0.4984471 0.5050149 0.5089135 0.5289326 0.5489104 #>  [173,] 0.37042558 0.3748601 0.5391089 0.6311570 0.6409155 0.6500649 0.6531734 #>  [174,] 0.66488688 0.8405405 0.9304993 0.9437669 0.9845772 1.1291551 1.1617313 #>  [175,] 0.53593978 0.5745735 0.6922306 0.9614575 0.9978652 1.0767146 1.1162551 #>  [176,] 0.43783131 0.4459178 0.4875241 0.5240737 0.5889597 0.6142320 0.6838235 #>  [177,] 0.24634607 0.3173907 0.4104085 0.4240440 0.4496528 0.4872628 0.5002663 #>  [178,] 0.64256880 0.7061322 0.7141463 0.7215714 0.7232993 0.7659614 0.8448669 #>  [179,] 0.36628368 0.4669771 0.4709372 0.4776989 0.5269695 0.5558873 0.5561521 #>  [180,] 1.31920961 1.6440642 1.8091262 1.8434842 1.9498530 1.9804297 1.9986874 #>  [181,] 0.43546370 0.7344356 0.7815346 0.8920985 1.1137932 1.1478094 1.1817211 #>  [182,] 0.67377664 0.8025185 0.8790075 0.9291908 0.9401235 0.9666808 0.9672264 #>  [183,] 0.34924946 0.4354957 0.4771222 0.4820945 0.5515438 0.6405955 0.6885843 #>  [184,] 0.41590068 0.4301620 0.4864748 0.6468469 0.6680145 0.6874523 0.6949055 #>  [185,] 0.21751155 0.3029812 0.4349080 0.4697516 0.4771438 0.4773597 0.4987859 #>  [186,] 0.30295729 0.3516502 0.6103558 0.6435669 0.7077074 0.7526434 0.8033506 #>  [187,] 0.33955421 0.4549501 0.5272792 0.5779029 0.5798669 0.6468002 0.6689514 #>  [188,] 0.21564834 0.5889597 0.6187888 0.6374284 0.6831110 0.6997379 0.7135592 #>  [189,] 0.78782572 0.8255702 0.8788397 0.8877099 0.8892744 0.9074713 0.9721013 #>  [190,] 0.51514554 0.5168043 0.5743189 0.5789114 0.6442138 0.7505992 0.7530720 #>  [191,] 0.74646223 0.7779154 0.7889787 0.9371384 1.0478407 1.0485667 1.0807722 #>  [192,] 0.57570301 0.6651967 0.6923974 0.7023209 0.7280067 0.7367542 0.7565874 #>  [193,] 0.44437883 0.4674799 0.5852641 0.5856428 0.5996138 0.6191242 0.6483370 #>  [194,] 0.36979432 0.3899449 0.4248871 0.4822640 0.5051880 0.5230753 0.5305691 #>  [195,] 0.53829382 0.6102383 0.6418114 0.6521596 0.7499530 0.7798792 0.8025185 #>  [196,] 0.43868757 0.4862272 0.7063970 0.7467186 0.8354277 0.9437305 0.9973785 #>  [197,] 0.16335137 0.2946289 0.3430245 0.3502076 0.3647143 0.5032840 0.5343555 #>  [198,] 0.32175657 0.3277844 0.3565147 0.3758164 0.4308553 0.4533355 0.5728312 #>  [199,] 0.76958516 0.9466156 0.9891210 1.0719087 1.1790514 1.2922184 1.3508964 #>  [200,] 0.26871382 0.3704476 0.4381357 0.4622735 0.4801513 0.4862545 0.5065325 #>  [201,] 0.34893160 0.4054277 0.4555493 0.4900403 0.5462548 0.5481900 0.5669713 #>  [202,] 0.65158393 0.6626830 0.6644675 0.6832722 0.7008561 0.7333116 0.7440060 #>  [203,] 0.33516363 0.5359541 0.5584559 0.6281270 0.7638553 0.8178721 0.8243404 #>  [204,] 0.33461341 0.3827563 0.4977339 0.5014291 0.5573282 0.5716806 0.5790573 #>  [205,] 0.62848784 0.9725958 1.0211071 1.0814176 1.1213197 1.1432801 1.1519308 #>  [206,] 0.36544526 0.5108544 0.5440500 0.6088997 0.6261305 0.6264702 0.6529757 #>  [207,] 0.19119865 0.2619565 0.4183204 0.4824404 0.5303405 0.5305691 0.5439449 #>  [208,] 0.60865670 0.8685995 0.9417848 1.1331090 1.1779231 1.2556026 1.2985542 #>  [209,] 0.32154753 0.3814825 0.4211578 0.4568264 0.4997769 0.5014291 0.5372568 #>  [210,] 0.61883037 0.6559523 0.6859186 0.6963881 0.7238201 0.7250596 0.7375038 #>  [211,] 0.42009776 0.4503940 0.5167553 0.5332695 0.5879256 0.5949924 0.6016056 #>  [212,] 0.46219264 0.5489156 0.6051535 0.7265301 0.7526546 0.7895365 0.8376908 #>  [213,] 0.28306922 0.5148636 0.5297576 0.5379057 0.6158332 0.6419256 0.6437349 #>  [214,] 0.39476493 0.4273674 0.4785127 0.4942636 0.4949205 0.5481625 0.5656577 #>  [215,] 0.30142877 0.5593168 0.5763977 0.5847714 0.5953139 0.6054537 0.6665222 #>  [216,] 0.35596670 0.4006144 0.4818862 0.5655159 0.6063359 0.6686268 0.6963881 #>  [217,] 0.31613550 0.4055515 0.4200514 0.4245837 0.4555194 0.4907996 0.5002663 #>  [218,] 0.28955356 0.2969058 0.3340049 0.3942302 0.4199190 0.4249568 0.4997707 #>  [219,] 0.29096480 0.3071609 0.4055515 0.4919746 0.5207816 0.6248968 0.6584648 #>  [220,] 0.17321531 0.2639242 0.3746465 0.3773212 0.4785127 0.5378144 0.5982043 #>  [221,] 0.30448802 0.5337852 0.6426474 0.6459555 0.6518106 0.6771212 0.7556536 #>  [222,] 0.48586904 0.5366706 0.5536213 0.5681319 0.6911410 0.7077540 0.7638553 #>  [223,] 0.56051232 0.6263591 0.7951173 0.8391085 0.8847027 0.8965293 1.0109512 #>  [224,] 0.23530578 0.3396067 0.5123068 0.5427380 0.5858242 0.6197520 0.7785499 #>  [225,] 0.24442825 0.2513010 0.3143395 0.6247551 0.6453987 0.6608659 0.6791091 #>  [226,] 0.50484430 0.6904654 0.7424494 0.9151752 0.9318542 0.9790811 1.0365884 #>  [227,] 0.53846852 0.5556561 0.8499612 0.9453259 0.9665417 0.9780526 0.9831634 #>  [228,] 0.68912892 0.7389815 0.7408450 0.7674939 0.7744798 0.8183187 0.8534578 #>  [229,] 0.38663098 0.4131254 0.4667251 0.5420481 0.5630024 0.5656736 0.5942101 #>  [230,] 1.00077117 1.2098417 1.3305540 1.3970234 1.3995860 1.4391758 1.4530704 #>  [231,] 0.17515454 0.2931238 0.4354957 0.4957370 0.5036000 0.5269116 0.6132478 #>  [232,] 0.43971723 0.5380106 0.5564518 0.5735190 0.5790573 0.5811772 0.6201964 #>  [233,] 0.45039396 0.4725956 0.5341163 0.5761745 0.5813677 0.6129541 0.7081499 #>  [234,] 0.61904931 0.9251998 0.9831634 0.9872804 0.9928351 0.9969150 1.0043725 #>  [235,] 0.61633703 0.7331541 0.9409469 0.9791345 1.1218063 1.1878096 1.1952520 #>  [236,] 0.43611187 0.4972769 0.5218748 0.5971045 0.6046914 0.6338066 0.6615659 #>  [237,] 0.30448802 0.5027035 0.5360068 0.6621926 0.6647618 0.6842067 0.7467153 #>  [238,] 0.56775846 0.6963515 0.7771968 1.0621761 1.0749882 1.0930035 1.0933495 #>  [239,] 0.61821136 0.6552984 0.7008561 0.7445796 0.8330104 0.8495751 0.8838775 #>  [240,] 0.50552381 0.5244318 0.6198225 0.6633261 0.7396112 0.7520302 0.7620870 #>  [241,] 0.22311976 0.3371321 0.4459178 0.5751907 0.5910346 0.5945413 0.6187888 #>  [242,] 0.20524659 0.2611718 0.3371321 0.3719139 0.5240737 0.5384451 0.5601903 #>  [243,] 0.57406440 0.6279872 0.7002856 0.7730388 0.7920457 0.8121714 0.8867037 #>  [244,] 0.55578851 0.6046671 0.6935579 0.7365497 0.7377775 0.7900894 0.8060516 #>  [245,] 0.23776229 0.4369028 0.4862545 0.5156261 0.5456250 0.5491028 0.5491111 #>  [246,] 0.24997751 0.2888402 0.3267518 0.3519539 0.3939100 0.4026749 0.4141515 #>  [247,] 0.62848784 1.0439089 1.1052575 1.3423886 1.4233242 1.4277366 1.4299831 #>  [248,] 0.95193604 0.9536464 0.9967080 1.0165897 1.0638464 1.0659621 1.1023860 #>  [249,] 0.31433954 0.3441214 0.4287676 0.4413238 0.4486791 0.4948648 0.5262266 #>  [250,] 0.79210093 0.8685995 1.1161382 1.2752111 1.3080934 1.3103431 1.4032183 #>  [251,] 0.49968944 0.5027035 0.5337852 0.5676495 0.6677208 0.6890639 0.7254453 #>  [252,] 0.75954805 0.8196164 0.9311286 0.9683923 1.0100125 1.1276589 1.1520022 #>  [253,] 0.35165024 0.4054241 0.5426372 0.6613450 0.6839377 0.8058893 0.8659156 #>  [254,] 0.41273197 0.7178992 0.9589677 0.9641849 0.9721013 1.0076619 1.0442192 #>  [255,] 0.56688930 0.6350033 0.9183576 0.9372790 1.1790514 1.2176699 1.2343628 #>  [256,] 0.74292670 0.8343664 0.9852739 1.0172983 1.0864524 1.2429250 1.4199128 #>  [257,] 0.55087948 0.6789966 0.7381103 0.7661654 0.7845607 0.8012367 0.8243678 #>  [258,] 0.43734585 0.6126958 0.7393121 0.7437849 0.8196944 0.8216791 0.8530801 #>  [259,] 0.95246655 1.2429699 1.4040245 1.4189796 1.4334735 1.4553728 1.5306088 #>  [260,] 0.59092394 0.7165929 0.7645992 0.9526418 0.9831190 0.9882694 1.0390836 #>  [261,] 0.25401368 0.5271395 0.6949067 0.7036595 0.7124086 0.7290141 0.7337862 #>  [262,] 0.38008246 0.4051110 0.4499029 0.5077115 0.5640228 0.5668903 0.6012427 #>  [263,] 0.47378498 0.7157327 0.7526546 0.7532037 0.8012656 0.8207587 0.8466367 #>  [264,] 0.23017524 0.2362510 0.2505541 0.2888402 0.3952240 0.4289505 0.5045026 #>  [265,] 0.92912468 1.0524651 1.3206137 1.3775153 1.4628882 1.4745637 1.4757093 #>  [266,] 0.26445135 0.5197947 0.5271395 0.6397252 0.7120910 0.7510291 0.8121714 #>  [267,] 0.38833815 0.5206723 0.5983014 0.6052681 0.6191242 0.6212156 0.6435723 #>  [268,] 0.47274128 0.5539597 0.5939476 0.6083871 0.6146372 0.6481409 0.7081471 #>  [269,] 0.39174712 0.3974931 0.3999138 0.4182693 0.4811261 0.4910706 0.5094077 #>  [270,] 0.51622749 0.5600224 0.6301383 0.7450067 0.8113559 0.8900779 0.9056503 #>  [271,] 0.27025056 0.3168458 0.4108726 0.5668994 0.6004276 0.6191246 0.6378444 #>  [272,] 0.31156159 0.3967582 0.6095624 0.6785144 0.6840467 0.7186762 0.7380836 #>  [273,] 0.48964122 0.7204560 0.7966502 0.9058021 0.9321636 1.0576039 1.0860069 #>  [274,] 1.75709465 1.9530654 1.9621119 2.0882192 2.0909319 2.1846034 2.2606986 #>  [275,] 0.30753851 0.3632984 0.3983924 0.4338996 0.4650560 0.4807926 0.4869037 #>  [276,] 0.44244519 0.5239225 0.5775874 0.5809533 0.5852641 0.6309643 0.6375235 #>  [277,] 0.53604942 0.5809784 0.6723120 0.6937390 0.8033506 0.8557962 0.9206419 #>  [278,] 0.40135778 0.4771438 0.4803893 0.5142743 0.5167166 0.5405902 0.5666862 #>  [279,] 0.34854309 0.5656623 0.6427296 0.6937850 0.8096520 0.9601893 1.0327279 #>  [280,] 0.34097658 0.5757183 0.8461882 0.8544188 0.8763056 0.8771065 0.8785884 #>  [281,] 0.56566234 0.6093981 0.7555970 0.7837305 0.8168711 1.0379303 1.0406753 #>  [282,] 1.09312923 1.1264843 1.2432967 1.2538711 1.4581999 1.4601077 1.4762157 #>  [283,] 0.35725147 0.5401219 0.6546179 0.6547907 0.7306714 0.7783759 0.8745025 #>  [284,] 0.43485712 0.5772534 0.6237160 0.6935797 0.6963332 0.7138276 0.7616298 #>  [285,] 0.44624308 0.4857908 0.4923572 0.5251352 0.5732260 0.5908652 0.6129458 #>  [286,] 0.48579078 0.5304625 0.5415076 0.5516804 0.5869491 0.6187994 0.6401527 #>  [287,] 0.61842984 0.6786797 0.7002856 0.7581800 0.7879035 0.8009699 0.8052321 #>  [288,] 0.65294791 0.6688171 0.7356954 0.7427386 0.7558679 0.8514475 0.8736318 #>  [289,] 0.35805071 0.4766878 0.5147545 0.5213317 0.5801831 0.6142137 0.6547724 #>  [290,] 0.26149733 0.5941368 0.7527116 1.0191254 1.0274269 1.0547003 1.0595556 #>  [291,] 0.19119865 0.2485064 0.3523999 0.3926176 0.4833831 0.5652899 0.5946831 #>  [292,] 0.82255792 0.9391717 0.9572128 1.0523702 1.0644494 1.0767146 1.1167754 #>  [293,] 0.42767510 0.5273851 0.5389871 0.5945708 0.6151708 0.6945799 0.7463939 #>  [294,] 0.35820314 0.5315811 0.5619246 0.5667394 0.6012034 0.6072804 0.6114427 #>  [295,] 0.20018385 0.2557875 0.3403952 0.4011844 0.4516372 0.4806257 0.5151455 #>  [296,] 0.55844365 0.6064437 0.7151564 0.7530720 0.7957290 0.8148026 0.8207587 #>  [297,] 0.38689143 0.5066112 0.5320245 0.5431665 0.5959221 0.6476555 0.6791352 #>  [298,] 0.25578753 0.3342785 0.5168043 0.5288416 0.6308023 0.6445227 0.6566873 #>  [299,] 0.45789396 0.5243941 0.7734322 0.7781384 0.7880697 0.7951240 0.8093278 #>  [300,] 0.27878599 0.3819807 0.4826891 0.6029651 0.6640875 0.7394081 0.8030123 #>  [301,] 0.42602438 0.6442138 0.7148594 0.7493914 0.7715875 0.8222286 0.8822187 #>  [302,] 0.74669942 0.8935168 0.9588525 0.9677809 0.9831404 1.0046254 1.0417246 #>  [303,] 0.91644641 1.0109512 1.1295888 1.1379022 1.1676110 1.3381313 1.3392606 #>  [304,] 0.36655105 0.4226697 0.4821518 0.5089932 0.5815658 0.6253706 0.6370944 #>  [305,] 0.39165696 0.4337550 0.4495928 0.4579772 0.4763486 0.4881157 0.5672049 #>  [306,] 0.45064623 0.5304912 0.5672535 0.5704450 0.6229712 0.6756819 0.6770834 #>  [307,] 0.34122072 0.4509998 0.4861008 0.5631227 0.6369279 0.6383539 0.6481409 #>  [308,] 0.62308038 0.6529479 0.6758378 0.6759327 0.6839240 0.7441486 0.7816450 #>  [309,] 0.49559525 0.6468982 0.7357619 0.8054622 0.8591846 0.8896104 0.9005771 #>  [310,] 1.66723531 1.6991170 1.7556121 1.7593284 1.7752385 1.8063187 1.9117680 #>  [311,] 0.31739068 0.3480395 0.3945256 0.5174136 0.5473133 0.5510023 0.5667809 #>  [312,] 0.37657103 0.4617612 0.4702545 0.6576182 0.6668781 0.6695607 0.7361380 #>  [313,] 0.38047207 0.4735541 0.6518904 0.6973398 0.7333116 0.7431527 0.7963710 #>  [314,] 0.12174573 0.5669013 0.5976703 0.6043586 0.6117496 0.6221473 0.6916559 #>  [315,] 0.34924946 0.4913954 0.5579043 0.6623004 0.6975617 0.7063873 0.7276227 #>  [316,] 0.36378665 0.4517001 0.5151031 0.5593225 0.5652559 0.5806789 0.5843107 #>  [317,] 0.26231219 0.3403952 0.4232369 0.4562753 0.4692751 0.4791627 0.4835713 #>  [318,] 0.72444949 0.7469406 0.7595480 0.8657321 0.8725707 0.8840534 0.8905420 #>  [319,] 0.33348333 0.4990196 0.5122173 0.6294519 0.6324910 0.6742913 0.6848153 #>  [320,] 0.62685643 0.7591289 0.8142788 0.8146468 0.8520574 0.9206419 0.9503028 #>  [321,] 0.69655618 0.7157327 0.7290322 0.7542938 0.8096278 0.9046354 0.9555794 #>  [322,] 0.37795906 0.5815460 1.0656377 1.0894078 1.0990921 1.1090498 1.1141702 #>  [323,] 0.59302027 0.6416088 0.7071421 0.7312143 0.8744243 0.8920804 0.8981663 #>  [324,] 0.56909515 0.5719704 0.6863163 0.7130415 0.7161537 0.7257404 0.7504386 #>  [325,] 0.33051150 0.4527824 0.4972676 0.6035550 0.6133253 0.6240290 0.6250859 #>  [326,] 0.72470146 0.7424133 0.7722280 0.8860461 0.9047770 0.9146406 0.9462855 #>  [327,] 0.40961744 0.4705046 0.5134419 0.5903200 0.6347234 0.7202461 0.7477448 #>  [328,] 0.94178479 1.1023860 1.1320754 1.4632099 1.5208933 1.5594303 1.5952807 #>  [329,] 0.68912892 0.7824216 0.8036139 0.8461061 0.8944402 1.0286607 1.0362301 #>  [330,] 0.18476655 0.3980165 0.5454974 0.5583671 0.6495592 0.6551087 0.6653110 #>  [331,] 0.30613672 0.3580507 0.5737033 0.5893216 0.6327976 0.6345145 0.6846897 #>  [332,] 0.53717745 0.5389364 0.5427644 0.5444096 0.5740067 0.6226147 0.6239978 #>  [333,] 0.37261992 0.4877748 0.5509453 0.5672440 0.5985584 0.6493967 0.6511001 #>  [334,] 0.37054568 0.5327298 0.5591274 0.5892841 0.6682378 0.7316927 0.7645229 #>  [335,] 0.24778621 0.2788582 0.3828871 0.4506462 0.4977339 0.5055929 0.5143708 #>  [336,] 0.37874094 0.4190630 0.4778522 0.5583584 0.5696069 0.5735190 0.5789114 #>  [337,] 0.41870462 0.5143708 0.5339270 0.5613954 0.5742257 0.5901557 0.5943029 #>  [338,] 0.80536575 1.2462577 1.3707152 1.3862486 1.3933694 1.4134314 1.4223184 #>  [339,] 0.59223534 0.6479399 0.7006456 0.7787363 0.8029323 0.8356952 0.8677668 #>  [340,] 0.17515454 0.2801641 0.4668156 0.4820945 0.5090536 0.5724860 0.6129909 #>  [341,] 0.61249638 0.7915109 0.7945429 0.8110298 0.8642915 0.8815252 0.9513666 #>  [342,] 0.49235718 0.4942696 0.5218040 0.5356695 0.5903036 0.6088724 0.6513279 #>  [343,] 0.21751155 0.2486374 0.2704184 0.4304254 0.4910706 0.5293803 0.5398231 #>  [344,] 0.43783131 0.4970339 0.5365743 0.5384451 0.5537049 0.5540681 0.5566204 #>  [345,] 0.30295729 0.4054241 0.4618434 0.7248532 0.7556329 0.7728924 0.7825155 #>  [346,] 0.31865059 0.5408612 0.5656736 0.5880962 0.6113862 0.6381846 0.6928123 #>  [347,] 0.22783220 0.2999224 0.3502076 0.4416675 0.4440449 0.4663452 0.5128283 #>  [348,] 0.53604942 0.5426983 0.6393721 0.6689514 0.6721172 0.7173864 0.7591289 #>  [349,] 0.58774456 0.7692025 0.8506729 0.8933690 0.9989787 1.0293950 1.0420955 #>  [350,] 0.55844365 0.6207202 0.6385229 0.7468215 0.7603127 0.7748773 0.8185371 #>  [351,] 0.74917426 0.9115195 0.9332189 0.9405178 1.0308424 1.0441970 1.1753585 #>  [352,] 0.33716792 0.3554676 0.5271486 0.6543397 0.7728129 0.7781706 0.7992024 #>  [353,] 1.08036731 1.1230745 1.1952481 1.2121691 1.2456925 1.2687421 1.2750782 #>  [354,] 0.80538784 0.8920985 0.9503583 1.1780766 1.2233030 1.2329641 1.2370926 #>  [355,] 0.23357173 0.2878990 0.3681476 0.3755080 0.5061161 0.5087746 0.5126216 #>  [356,] 0.47050459 0.6657414 0.7133062 0.7229364 0.7330898 0.7527520 0.7748020 #>  [357,] 0.51773276 0.5440500 0.6555442 0.6647689 0.6715624 0.6768154 0.6860781 #>  [358,] 0.42314698 0.4249568 0.4320065 0.4445580 0.5466209 0.5483717 0.5502744 #>  [359,] 0.40285513 0.4495928 0.4715321 0.4892756 0.5454974 0.5546637 0.5789740 #>  [360,] 0.20018385 0.3342785 0.3406371 0.4341561 0.4418389 0.4791627 0.4916085 #>  [361,] 0.30179066 0.4007912 0.4375850 0.4759808 0.4902789 0.5602613 0.5894852 #>  [362,] 0.61023830 0.6804626 0.7165358 0.7400270 0.7406642 0.7654996 0.7723785 #>  [363,] 0.39237179 0.4218059 0.4517605 0.5629871 0.5753217 0.6008462 0.6134636 #>  [364,] 0.49252024 0.5009735 0.7204560 0.7715875 0.7887490 0.9261705 0.9898672 #>  [365,] 0.47669145 0.5539597 0.6560698 0.6774535 0.6867288 0.6868065 0.6957466 #>  [366,] 0.59673300 0.7003675 0.7073873 0.7690127 0.7953481 0.8642915 1.0296612 #>  [367,] 0.53663006 0.5715972 0.6346743 0.6375514 0.6711839 0.6929153 0.6980144 #>  [368,] 0.82807292 0.8644959 0.9003598 0.9791795 1.0259557 1.0685229 1.1340172 #>  [369,] 0.17321531 0.2907930 0.3517150 0.4273674 0.4720188 0.4801595 0.4985213 #>  [370,] 0.18633895 0.5677585 0.6974104 0.8138376 0.9219311 0.9313451 0.9648434 #>  [371,] 0.58165514 0.5898362 0.6485613 0.6752942 0.7323497 0.7371230 0.7417141 #>  [372,] 0.37240974 0.4064138 0.4513686 0.5172623 0.5355298 0.6053126 0.6077976 #>  [373,] 0.50866762 0.5740644 0.5942177 0.6184298 0.6379249 0.6397252 0.6766668 #>  [374,] 1.75661540 1.8450851 1.8994373 1.9555851 2.0065315 2.0794730 2.1063983 #>  [375,] 0.43375502 0.5546637 0.5935788 0.6408372 0.6687542 0.6751712 0.6818849 #>  [376,] 0.36814765 0.3847786 0.3959542 0.4335672 0.4508878 0.5029404 0.5241491 #>  [377,] 0.29690577 0.3697943 0.3722131 0.5202886 0.5240084 0.5251358 0.5416257 #>  [378,] 1.12765893 1.1617313 1.2276180 1.2333294 1.2405593 1.3154454 1.3206137 #>  [379,] 0.31777450 0.6046190 0.7151564 0.7165929 0.7468215 0.7663198 0.8568059 #>  [380,] 1.07078497 1.2243235 1.3298505 1.3361595 1.5915103 1.5919912 1.5952468 #>  [381,] 0.17060468 0.2362510 0.3073808 0.3849523 0.4141515 0.4236662 0.4718514 #>  [382,] 0.63341221 0.6758378 0.7105710 0.7191353 0.7758646 0.7885021 0.8030875 #>  [383,] 0.35860761 0.3899449 0.4168507 0.5202886 0.5211175 0.5636113 0.6035745 #>  [384,] 0.68393771 0.8144011 0.8313339 1.0524651 1.0807850 1.1384703 1.1473590 #>  [385,] 0.38801460 0.4816196 0.5149624 0.5597335 0.5866919 0.5921308 0.6198539 #>  [386,] 0.37269262 0.3728543 0.4331498 0.5129050 0.5650311 0.5739088 0.6949055 #>  [387,] 0.95764159 1.0284117 1.1470986 1.1742972 1.3193127 1.3618710 1.3929392 #>  [388,] 0.49913431 0.6266850 0.6582699 0.6992041 0.7134074 0.7233620 0.7634721 #>  [389,] 0.99615897 1.0074828 1.1295888 1.1845858 1.2561943 1.3528661 1.3644983 #>  [390,] 0.29487406 0.3582031 0.4622735 0.4638556 0.4847466 0.5344022 0.5443182 #>  [391,] 1.08483194 1.1030793 1.3003762 1.3704923 1.4443850 1.4756071 1.4796430 #>  [392,] 0.63590010 0.6835802 0.7136332 0.7284343 0.7376919 0.7505992 0.7738050 #>  [393,] 0.50433080 0.7556170 0.8112442 0.8124679 0.8509671 0.9297051 0.9363658 #>  [394,] 0.48622719 0.6651181 0.7568072 0.8078562 1.0309572 1.0648231 1.0847978 #>  [395,] 0.69964787 0.8168489 0.8612843 0.9426300 0.9876092 1.0518637 1.0654127 #>  [396,] 0.63221967 0.6505391 0.6768659 0.6868700 0.7620602 0.7699229 0.7963198 #>  [397,] 0.50778236 0.5942373 0.6008128 0.6577957 0.7870127 0.7968558 0.8260345 #>  [398,] 0.64266100 0.6483195 0.6749993 0.7213514 0.7771770 0.7860585 0.8302620 #>  [399,] 0.77108036 1.0478407 1.1502917 1.2429470 1.2622582 1.2794899 1.3594908 #>  [400,] 0.60156054 0.8309377 0.8742567 0.8997621 0.9229262 1.0536440 1.0753792 #>  [401,] 0.29981865 0.4759381 0.4801513 0.4956701 0.5190625 0.5441670 0.5471869 #>  [402,] 0.33348333 0.5186725 0.5539152 0.5622689 0.5758722 0.6078385 0.6464817 #>  [403,] 0.22477613 0.2709687 0.4562753 0.4641039 0.4960628 0.5198857 0.5331268 #>  [404,] 0.50552381 0.5261399 0.5536779 0.7527116 0.7728496 0.8505550 0.9018789 #>  [405,] 0.57934246 0.7370893 0.7721150 0.7932420 0.8441321 0.8769871 0.9036718 #>  [406,] 0.19912319 0.2221535 0.3329455 0.3832908 0.4199190 0.4288252 0.4342024 #>  [407,] 0.32829602 0.3713976 0.4149634 0.4702545 0.4948648 0.5201188 0.5359571 #>  [408,] 1.44353082 1.6467644 1.7274885 1.7539773 1.7676139 1.8118981 1.8350511 #>  [409,] 0.26445135 0.6911579 0.6990133 0.7124086 0.7162156 0.7650673 0.7731901 #>  [410,] 0.25130103 0.3441214 0.4815718 0.5250253 0.5275370 0.6014184 0.6455623 #>  [411,] 0.14537611 0.4556315 0.4686104 0.4876206 0.5384882 0.5639767 0.5751000 #>  [412,] 0.16294453 0.3329455 0.3643884 0.4309863 0.4954945 0.5029404 0.5040281 #>  [413,] 0.39237179 0.4282303 0.4383547 0.4763411 0.4878097 0.5154827 0.5269889 #>  [414,] 0.49314028 0.7722280 0.8842289 0.8876741 0.9560043 1.0053762 1.0196129 #>  [415,] 0.54068112 0.5596423 0.5916973 0.6369037 0.6480868 0.6540990 0.6682059 #>  [416,] 0.34114560 0.5043308 0.5431665 0.6784060 0.7692991 0.8132709 0.8141495 #>  [417,] 0.43235285 0.5839422 0.6155998 0.6305562 0.6609561 0.6624870 0.6682378 #>  [418,] 0.70285048 0.7215714 0.7505091 0.7513484 0.8053635 0.8283192 0.8326396 #>  [419,] 0.50173943 0.6110649 0.7070969 0.7144262 0.7344550 0.7454480 0.7469406 #>  [420,] 0.56002243 0.7581030 0.9022590 0.9201401 0.9640532 1.0971237 1.1588577 #>  [421,] 0.35220251 0.4925202 0.7307232 0.7472823 0.7493914 0.7781336 0.8319861 #>  [422,] 0.50866762 0.5745570 0.6651722 0.6741880 0.7048155 0.7126777 0.8890255 #>  [423,] 0.36937303 0.4580320 0.4759381 0.5112464 0.5161952 0.5290678 0.5384882 #>  [424,] 0.35220251 0.5009735 0.7966502 0.8738491 0.8947064 0.9152315 0.9435427 #>  [425,] 0.37843876 0.3862507 0.4335672 0.5664901 0.5741157 0.5756334 0.6604244 #>  [426,] 0.38275627 0.3828871 0.4401391 0.4509998 0.5213623 0.5263879 0.5288887 #>  [427,] 0.25537230 0.5745570 0.5942177 0.5959221 0.6786797 0.7195483 0.7556170 #>  [428,] 1.40089580 1.4114812 1.6417303 1.7589363 1.9037762 1.9423500 2.0277246 #>  [429,] 0.82310722 1.0163488 1.0332231 1.1195075 1.1380909 1.1775729 1.1899789 #>  [430,] 0.45768310 0.4987332 0.5122122 0.5510684 0.5906991 0.5950993 0.6045558 #>  [431,] 0.31164138 0.3880146 0.4249013 0.5035106 0.5455672 0.5551821 0.5685631 #>  [432,] 0.80918207 0.8904828 0.9008486 1.1003776 1.1169054 1.1479728 1.1722021 #>  [433,] 0.47179280 0.4939649 0.5129050 0.5211333 0.6396292 0.7047325 0.7065787 #>  [434,] 0.52874310 0.6324143 0.7239818 0.7858055 0.7956664 0.8165019 0.8253858 #>  [435,] 0.33960674 0.5072399 0.6446773 0.6536386 0.6661816 0.6988452 0.7029013 #>  [436,] 0.41685006 0.5354866 0.6113862 0.6127771 0.6365716 0.6599165 0.6710285 #>  [437,] 0.19212176 0.4226697 0.4437505 0.4833831 0.5357689 0.5434177 0.5521316 #>  [438,] 0.33861772 0.7426337 0.7965212 0.9405178 1.0172983 1.0447807 1.1930541 #>  [439,] 0.37089696 0.6414317 0.6513177 0.6513279 0.7030771 0.7053925 0.7484992 #>  [440,] 0.44472086 0.4947689 0.5279976 0.5287459 0.5427380 0.5707398 0.5879256 #>  [441,] 0.53272978 0.7021439 0.7231670 0.7578853 0.7660565 0.7778775 0.8746449 #>  [442,] 0.83951520 0.9003598 0.9409469 1.0186633 1.0753158 1.0979386 1.1205528 #>  [443,] 0.32742239 0.4397488 0.4479293 0.4550655 0.6000728 0.6494642 0.6591486 #>  [444,] 0.44916693 0.4991343 0.5569658 0.5841150 0.5882276 0.6081439 0.6126571 #>  [445,] 0.60799349 0.6281270 0.7669429 0.8418070 1.0266394 1.0630114 1.0720858 #>  [446,] 0.47289738 0.5739778 0.6666765 0.6840951 0.7169366 0.7232774 0.7580489 #>  [447,] 0.46142333 0.6559523 0.6559805 0.6651722 0.6793334 0.7850545 0.8471902 #>  [448,] 1.20939144 1.2402423 1.2495558 1.3022366 1.3494722 1.3594908 1.3742346 #>  [449,] 0.26280207 0.3109272 0.3138135 0.3806428 0.6024869 0.6077976 0.6369121 #>  [450,] 0.33461341 0.3442668 0.3866310 0.5289326 0.5372568 0.5380106 0.5407007 #>  [451,] 0.39917065 0.3997512 0.4674799 0.5771503 0.6009565 0.6843317 0.6861477 #>  [452,] 0.28643732 0.3402555 0.3647143 0.4656574 0.4658705 0.5128283 0.5151779 #>  [453,] 0.37681996 0.4074187 0.4234172 0.4392803 0.4411914 0.4522011 0.4662350 #>  [454,] 0.23357173 0.3155262 0.3918509 0.5287666 0.5339531 0.5515561 0.5664964 #>  [455,] 0.41080444 0.7877392 0.9486011 0.9933545 1.0439089 1.1169341 1.1289329 #>  [456,] 0.35567330 0.3662273 0.4413238 0.5201188 0.5275370 0.5322632 0.5463087 #>  [457,] 0.09793014 0.3588884 0.3836579 0.3849811 0.4026749 0.4346651 0.4547941 #>  [458,] 0.33861772 0.5279176 0.7429267 0.9194734 1.0157841 1.0441970 1.1264843 #>  [459,] 0.37786309 0.4149634 0.5250253 0.6357301 0.6453203 0.6695607 0.6791091 #>  [460,] 0.64793993 0.6737766 0.7833911 0.8053635 0.9896717 1.0370066 1.0465927 #>  [461,] 0.56411097 0.5737281 0.6151708 0.7215075 0.7795634 0.7819732 0.7943964 #>  [462,] 0.17505266 0.3203489 0.3620099 0.5355005 0.5414600 0.5435055 0.5490294 #>  [463,] 0.53595412 0.5681319 0.7041623 0.7042716 0.8418070 0.8575791 0.8727119 #>  [464,] 0.79727088 0.9007417 0.9308130 0.9316937 1.0013297 1.0655383 1.0685419 #>  [465,] 0.62685643 0.6435669 0.6444876 0.6723120 0.6733536 0.7173864 0.7556329 #>  [466,] 0.52768623 0.5649872 0.6338066 0.7480970 0.8013397 0.8325139 0.8761250 #>  [467,] 0.29506494 0.3965078 0.5177159 0.5641259 0.6196483 0.6290126 0.6357158 #>  [468,] 0.23676412 0.3116414 0.4816196 0.5812638 0.5938087 0.6146145 0.6371241 #>  [469,] 0.79534807 0.9606588 1.0224230 1.1549013 1.2554544 1.2681026 1.3736494 #>  [470,] 0.59094141 0.6312519 0.6598473 0.6842928 0.9213292 0.9423853 0.9859876 #>  [471,] 0.42842447 0.5764812 0.6426474 0.6497615 0.7262751 0.7480970 0.7508222 #>  [472,] 0.54179871 0.6084815 0.6918275 0.7034378 0.7163240 0.7272024 0.7404217 #>  [473,] 0.41917228 0.4195211 0.5082490 0.5503859 0.5677666 0.5763977 0.5786985 #>  [474,] 0.28753269 0.3668731 0.3963619 0.4509238 0.4655731 0.5346354 0.5849770 #>  [475,] 0.75788525 0.9790811 1.0023212 1.0239386 1.0674116 1.1302608 1.1795602 #>  [476,] 0.22009058 0.5936759 0.8427534 0.8876741 0.9274014 0.9350450 0.9817766 #>  [477,] 0.37864887 0.4390246 0.4706776 0.4814762 0.5213863 0.5400213 0.5623398 #>  [478,] 0.52443185 0.7174918 0.7195483 0.7225592 0.7313639 0.7390628 0.8511439 #>  [479,] 0.51825972 0.6663023 0.6900279 0.7141463 0.7168950 0.7186608 0.7513484 #>  [480,] 0.24359580 0.3217566 0.3760308 0.4007912 0.4035277 0.4434374 0.5823603 #>  [481,] 0.41229566 0.4469073 0.4774407 0.5297576 0.5552023 0.5735306 0.5944636 #>  [482,] 0.41312542 0.5602579 0.6085293 0.6110951 0.6554410 0.6888947 0.7512221 #>  [483,] 0.33913853 0.4083133 0.5898362 0.5967172 0.6445021 0.6758119 0.6990829 #>  [484,] 1.00437246 1.3710958 1.3786229 1.4604084 1.4886643 1.4943511 1.5142226 #>  [485,] 0.28216295 0.5271518 0.5320436 0.6012034 0.6092659 0.6344415 0.6974104 #>  [486,] 0.35398966 0.5968961 0.6078385 0.6539331 0.6619150 0.6749993 0.6754915 #>  [487,] 0.48223849 0.4886463 0.6762780 0.7191353 0.8344054 0.8474372 0.9095290 #>  [488,] 0.61470232 0.6691273 0.7289009 0.7439946 0.7688190 0.7834088 0.8043531 #>  [489,] 0.72174824 0.8727621 1.1886693 1.2867402 1.3916831 1.4008958 1.6007353 #>  [490,] 0.50484430 0.6646966 0.7019912 0.7825501 0.7845607 0.8245678 0.8670778 #>  [491,] 0.08692040 0.1966582 0.3302554 0.3836579 0.3878184 0.4466637 0.4650560 #>  [492,] 0.43080652 0.4803893 0.4814609 0.5355462 0.5589579 0.5967867 0.6292421 #>  [493,] 1.16749318 1.2775070 1.3338929 1.3744239 1.4747958 1.4762461 1.5097560 #>  [494,] 0.60799349 0.9024351 0.9509731 0.9700352 1.0323651 1.0374118 1.0632120 #>  [495,] 0.24863740 0.3029812 0.3772612 0.3999138 0.4060833 0.4169496 0.5142743 #>  [496,] 0.32028376 0.3461473 0.4729973 0.4870009 0.5569658 0.5690278 0.5730288 #>  [497,] 0.45797725 0.4642702 0.5335959 0.5417987 0.5451690 0.5997382 0.6088710 #>  [498,] 0.71485943 0.7651828 0.9045263 0.9323836 0.9700352 0.9869686 1.0564321 #>  [499,] 0.28739585 0.5193571 0.6004276 0.6501507 0.6876804 0.6908618 0.7525574 #>  [500,] 0.46818529 0.6480133 0.7073873 0.7398845 0.7521892 0.7650004 0.8319218 #>  [501,] 0.58561347 0.9142738 0.9454073 0.9455397 1.0544779 1.1783631 1.2086556 #>  [502,] 0.08251857 0.3389597 0.3461473 0.4776989 0.5407808 0.5686652 0.6081439 #>  [503,] 0.23776229 0.4381357 0.4656574 0.5558087 0.5578898 0.5655405 0.5768428 #>  [504,] 0.60242534 0.7889787 0.8730947 0.9013571 1.2957781 1.3000782 1.3022366 #>  [505,] 0.36831502 0.4822640 0.4830185 0.5081476 0.5134419 0.5211175 0.5798589 #>  [506,] 0.47062825 0.5382938 0.5570740 0.5869437 0.5988571 0.6285716 0.6546507 #>  [507,] 0.24634607 0.2829558 0.3161355 0.3437185 0.3480395 0.3949709 0.4658705 #>  [508,] 0.46307862 0.4802877 0.5290812 0.6136998 0.6145078 0.6824075 0.7053925 #>  [509,] 0.34854309 0.7567929 0.8168711 0.8396353 0.8669018 0.8908899 0.9096038 #>  [510,] 1.24873302 1.2525037 1.2738067 1.3051090 1.3164772 1.4663136 1.4786565 #>  [511,] 0.25659161 0.4535740 0.4647846 0.4789001 0.4790036 0.4911753 0.5007537 #>  [512,] 0.64450212 0.7538365 0.7687596 0.7991160 0.8338300 0.8727042 0.9120959 #>  [513,] 0.24836978 0.3794663 0.5677666 0.5916973 0.6341855 0.6665222 0.6698317 #>  [514,] 0.38486936 0.3849523 0.4641601 0.4735541 0.5324600 0.5718985 0.5758201 #>  [515,] 0.56913667 0.7328383 0.8216430 0.8840100 0.9229262 1.0068439 1.0389721 #>  [516,] 0.48964122 0.9882811 0.9898672 1.0309317 1.2415938 1.2437406 1.2464593 #>  [517,] 0.34114560 0.5320245 0.5976816 0.6087374 0.6309471 0.7100166 0.7234823 #>  [518,] 0.28939092 0.7561596 0.7739000 0.7779154 0.8407136 0.8495751 0.9809949 #>  [519,] 0.33106919 0.3849413 0.4094390 0.4149321 0.4462521 0.5737033 0.5801831 #>  [520,] 0.51283692 0.5690951 0.6627104 0.6793102 0.7183519 0.7438016 0.7626898 #>  [521,] 0.27041845 0.2973363 0.3326958 0.3967767 0.4060833 0.4349080 0.4518266 #>  [522,] 0.54738155 0.6187345 0.6844208 0.7640731 0.7788246 0.8635399 0.9119740 #>  [523,] 0.52189471 0.6755866 0.7348125 0.7902633 0.9072679 0.9445646 0.9581181 #>  [524,] 0.55954054 0.5750470 0.6996479 0.7290642 0.7810616 0.7838725 0.8474387 #>  [525,] 0.36282464 0.5252942 0.5556561 0.5757183 0.8527349 0.8717538 1.0215167 #>  [526,] 0.52791759 0.6864077 0.7965212 0.8343664 1.0411350 1.0664360 1.0827126 #>  [527,] 1.16761096 1.2561943 1.6391758 1.6892704 1.7227052 1.8535430 1.9589115 #>  [528,] 0.27430991 0.4676892 0.5287431 0.5418714 0.6174531 0.6477090 0.7129591 #>  [529,] 0.77967256 0.8140504 0.8964562 0.9062245 0.9299038 0.9669062 0.9952032 #>  [530,] 0.68261679 0.7239818 0.8470201 0.9250882 0.9362890 1.0098736 1.0740885 #>  [531,] 0.55805778 0.7451772 0.9646826 1.0956284 1.1014043 1.1198649 1.1357639 #>  [532,] 1.52855757 2.2963392 2.3757753 2.3852870 2.3873380 2.4187600 2.5250859 #>  [533,] 0.32361939 0.3345694 0.3437185 0.3529483 0.4015674 0.4298739 0.4854513 #>  [534,] 0.46151163 0.5435055 0.5510684 0.6014169 0.6367875 0.6644950 0.6814308 #>  [535,] 0.37550804 0.3862507 0.4508878 0.4781338 0.5189696 0.5324833 0.5359243 #>  [536,] 0.61383823 0.6198225 0.6539593 0.7357619 0.7482518 0.7748273 0.8052321 #>  [537,] 0.20395025 0.5193754 0.5354866 0.5739143 0.5840158 0.6205652 0.6541178 #>  [538,] 0.38923872 0.5065403 0.5422442 0.5744182 0.6384446 0.6505391 0.6703705 #>  [539,] 0.30059960 0.6374213 0.6994992 0.7238530 0.7265301 0.7532037 0.7902633 #>  [540,] 0.27885824 0.4061939 0.4439233 0.4729973 0.4911829 0.5263879 0.5304912 #>  [541,] 0.25401368 0.6053636 0.6369706 0.6372363 0.6719544 0.6752793 0.7120910 #>  [542,] 0.31090010 0.3726018 0.3895462 0.4209947 0.4467953 0.5389364 0.5856994 #>  [543,] 0.64384396 0.6623190 0.6961370 0.7643618 0.7710884 0.7887636 0.7894070 #>  [544,] 0.41590068 0.4383878 0.5224334 0.6649547 0.6670069 0.7283386 0.7671737 #>  [545,] 0.27646583 0.3267518 0.3849811 0.4451739 0.4536482 0.4959600 0.5045026 #>  [546,] 0.42707746 0.4527824 0.5448095 0.5616333 0.5668903 0.6147553 0.6717908 #>  [547,] 0.36378665 0.5341163 0.6188892 0.6771212 0.6876992 0.6890210 0.6955107 #>  [548,] 0.35294833 0.4122181 0.5036000 0.5162579 0.5363414 0.5635352 0.5805822 #>  [549,] 0.52500910 0.5264415 0.5481900 0.5540574 0.6235787 0.6277887 0.6300052 #>  [550,] 0.72443044 0.7783759 0.8183187 0.9820073 1.0260291 1.0286607 1.0489784 #>  [551,] 0.47153213 0.6331933 0.6898668 0.7067785 0.7716465 0.7721074 0.8070648 #>  [552,] 0.42842447 0.6459555 0.6647618 0.7622951 0.8231072 0.8542254 0.8836123 #>  [553,] 0.31865059 0.3685412 0.5467098 0.5841965 0.5970924 0.6127771 0.6271443 #>  [554,] 1.08566308 1.1606107 1.3061265 1.3061501 1.4178445 1.4334735 1.4599254 #>  [555,] 0.29282023 0.3894365 0.5174469 0.6035550 0.6228525 0.6328031 0.6529757 #>  [556,] 0.43546370 0.5077577 0.9142750 0.9181753 0.9902984 1.0267943 1.0300866 #>  [557,] 0.46151163 0.5414600 0.5711949 0.6126958 0.6771172 0.6935058 0.7567929 #>  [558,] 0.31156159 0.6007979 0.6147307 0.7102412 0.7475206 0.7512427 0.7817427 #>  [559,] 0.44404490 0.4499029 0.5598402 0.5616333 0.6015621 0.6045771 0.6083097 #>  [560,] 0.39185089 0.4882283 0.5126216 0.5889580 0.5914907 0.5937282 0.6249516 #>  [561,] 0.27845117 0.3149172 0.4918852 0.4923310 0.5858242 0.6163433 0.6173249 #>  [562,] 0.23098692 0.4612636 0.7031679 0.7668224 0.7688724 0.7778238 0.8163371 #>  [563,] 0.11352889 0.3307789 0.4956701 0.5230785 0.5668994 0.5729163 0.5747679 #>  [564,] 0.47483946 0.6587603 0.6649547 0.7206521 0.7210208 0.7273717 0.8084374 #>  [565,] 0.76467775 0.7687075 0.7897419 0.8020842 0.8233101 0.8825427 0.8867037 #>  [566,] 0.54738155 0.5530305 0.7957522 0.8096520 0.8705035 0.9183941 0.9471892 #>  [567,] 0.37402746 0.4108726 0.4369028 0.4537324 0.5632359 0.5768428 0.6005104 #>  [568,] 0.38494129 0.4745738 0.4759475 0.5669013 0.5677158 0.5757744 0.6142137 #>  [569,] 0.38880667 0.5032673 0.5272792 0.6017191 0.6187809 0.6261819 0.6444704 #>  [570,] 0.21768175 0.2766404 0.3983924 0.5011849 0.5597335 0.5708633 0.5760540 #>  [571,] 0.48663204 0.5050148 0.5823603 0.5841965 0.6464074 0.6651967 0.6666625 #>  [572,] 0.35546758 0.4378721 0.5423132 0.6187345 0.6439718 0.6841707 0.7578590 #>  [573,] 0.37269262 0.4301620 0.4383878 0.4623394 0.5071004 0.6390523 0.6942919 #>  [574,] 0.49233098 0.5729460 0.5845934 0.7264279 0.7326556 0.8107185 0.8960332 #>  [575,] 0.39659589 0.3997512 0.4785014 0.6246729 0.6258964 0.6705609 0.7381067 #>  [576,] 0.32810838 0.3335780 0.3568790 0.4397172 0.4840807 0.5506893 0.5602579 #>  [577,] 0.52189471 0.5349257 0.6297392 0.6547907 0.6620030 0.7238530 0.7583145 #>  [578,] 0.52529424 0.5384685 0.6597076 0.7242072 0.7287298 0.7403760 0.7438016 #>  [579,] 0.42440003 0.5057326 0.5809163 0.5841226 0.6241847 0.6534115 0.6566929 #>  [580,] 0.28295577 0.2864373 0.3345694 0.4104085 0.4200514 0.4873261 0.4885325 #>  [581,] 0.56115905 0.9866427 1.0267943 1.0376291 1.1111058 1.1248367 1.1366229 #>  [582,] 0.36544526 0.4858690 0.5502455 0.5584559 0.5668039 0.6303604 0.6462134 #>  [583,] 0.28328844 0.3172386 0.3512925 0.3832908 0.4309863 0.4706776 0.4937784 #>  [584,] 0.20524659 0.2231198 0.4251601 0.4313448 0.4575376 0.4875241 0.5105065 #>  [585,] 0.57847585 0.8030875 0.8606395 0.8904828 0.9391338 1.0157287 1.0314028 #>  [586,] 0.45380068 0.5668893 0.7189337 0.7964055 0.9466156 0.9577120 0.9816626 #>  [587,] 0.46176116 0.6061783 0.6084537 0.6263591 0.6452763 0.6482748 0.6719590 #>  [588,] 0.78427940 0.8971339 0.9013981 0.9137937 0.9545586 0.9576416 1.0533333 #>  [589,] 0.28242870 0.3965733 0.4506096 0.4557239 0.4560308 0.5227947 0.5235872 #>  [590,] 1.04209549 1.0614909 1.1019409 1.1052501 1.1577779 1.1974978 1.2080736 #>  [591,] 0.48465067 0.7930617 1.0038080 1.1570545 1.1782069 1.4535560 1.5354480 #>  [592,] 0.22984645 0.6381023 0.8501075 0.8586937 0.8777318 0.9039319 0.9672334 #>  [593,] 0.37868452 0.4453069 0.5762301 0.6319285 0.6735578 0.6870688 0.6943320 #>  [594,] 0.37190259 0.4409714 0.6882761 0.8413097 0.8419531 0.9392987 0.9446255 #>  [595,] 0.52513516 0.5516804 0.6212175 0.6544077 0.6946125 0.7130878 0.7267944 #>  [596,] 0.48700087 0.4965277 0.5357019 0.5443182 0.5578691 0.5584363 0.5686652 #>  [597,] 0.47378498 0.5402428 0.5489156 0.6994992 0.7046763 0.7221518 0.7778746 #>  [598,] 0.58156577 0.5959116 0.7923291 0.8214195 0.8341281 0.8348457 0.8560383 #>  [599,] 0.30142877 0.3166175 0.5077115 0.5230753 0.5303405 0.5330444 0.5769664 #>  [600,] 0.44097138 0.6487406 0.7741268 0.9311162 0.9496286 0.9582686 0.9808567 #>  [601,] 0.38244946 0.6046914 0.6746760 0.7153343 0.7184948 0.7363799 0.7508222 #>  [602,] 0.35725147 0.5842183 0.6855097 0.7244304 0.7290322 0.7389815 0.7583145 #>  [603,] 0.35651466 0.5110393 0.5407007 0.5716806 0.5746612 0.5880962 0.5942101 #>  [604,] 0.26231219 0.3194291 0.3568790 0.4011844 0.4068254 0.4418389 0.4446362 #>  [605,] 0.21815044 0.2244266 0.4320065 0.5222946 0.5656577 0.5806789 0.6183456 #>  [606,] 0.43473945 0.5072975 0.5669945 0.5678863 0.6920286 0.7026724 0.7681912 #>  [607,] 0.79703875 0.9915469 1.0931292 1.1201504 1.1206381 1.1617939 1.2072768 #>  [608,] 0.24778621 0.4187046 0.4439233 0.5057326 0.5432774 0.5704450 0.6096183 #>  [609,] 0.31661752 0.4051110 0.4585930 0.5089932 0.5590301 0.5593168 0.5596184 #>  [610,] 0.54555109 0.8470201 1.1099022 1.1263021 1.3293030 1.4315592 1.5544563 #>  [611,] 0.78153464 0.7860191 0.7895365 0.8053878 0.8341281 0.8640619 0.9181753 #>  [612,] 0.43787210 0.4937561 0.5271486 0.5790240 0.6844208 0.7705245 0.7842794 #>  [613,] 0.39694991 0.4177458 0.5262266 0.5322632 0.5359571 0.5510449 0.5528149 #>  [614,] 0.21815044 0.3470505 0.3942302 0.4445580 0.5167553 0.5471358 0.5566906 #>  [615,] 0.27982912 0.3028660 0.3854552 0.4289505 0.4371204 0.4668121 0.4718514 #>  [616,] 0.94898965 1.3154454 1.4287038 1.4684871 1.4948052 1.5091747 1.5158241 #>  [617,] 0.38534293 0.3908059 0.4443338 0.4666259 0.5054067 0.5379057 0.5552023 #>  [618,] 0.91982948 1.1140110 1.1513518 1.1923203 1.2558458 1.3788422 1.3979619 #>  [619,] 0.55063292 0.6130727 0.6628949 0.6651181 0.7467186 0.8506729 0.9124348 #>  [620,] 0.51794009 0.5302222 0.6195524 0.7784970 0.7892680 0.8130591 0.8147525 #>  [621,] 0.57957606 0.6666765 0.7581951 0.7725121 0.8514963 0.8569410 0.9184232 #>  [622,] 0.36159365 0.5314421 0.6065952 0.6457739 0.6740533 0.7487713 0.7543795 #>  [623,] 0.30300129 0.3772612 0.4182693 0.4522172 0.4697516 0.4973792 0.5646163 #>  [624,] 1.06283351 1.0884841 1.1248065 1.2221470 1.3479425 1.3506398 1.4531586 #>  [625,] 0.64321529 0.6599258 0.7319123 0.8659277 1.0802069 1.0965436 1.1181591 #>  [626,] 0.34196661 0.5453632 0.5798669 0.5918848 0.6615662 0.7975165 0.8265270 #>  [627,] 0.24997751 0.2505541 0.2798291 0.3064312 0.3942077 0.4236662 0.4317845 #>  [628,] 0.69655618 0.9831815 1.0006282 1.0029299 1.0514904 1.1030793 1.1211072 #>  [629,] 1.09192483 1.2939014 1.3192096 1.3699217 1.3866590 1.4057651 1.4121846 #>  [630,] 0.25659161 0.2896751 0.4271307 0.4288252 0.4637470 0.4954945 0.5151031 #>  [631,] 0.81467180 0.9142738 0.9143281 1.2146147 1.2492331 1.3522093 1.4286229 #>  [632,] 0.43774948 0.5669346 0.6324665 0.6414317 0.6848153 0.6983065 0.7001985 #>  [633,] 0.69048610 0.6918322 0.6932583 0.6981663 0.6992041 0.7003675 0.7612365 #>  [634,] 0.57545061 0.6060237 0.6138382 0.6188892 0.6290126 0.6594736 0.6633578 #>  [635,] 0.57847585 0.7758646 0.8015245 0.8115833 0.8474372 0.9842884 1.0289324 #>  [636,] 1.02693754 1.2363931 1.5816238 1.6549499 1.6908578 1.6952343 1.6971734 #>  [637,] 0.38244946 0.5243941 0.5505515 0.5548033 0.5971045 0.7334902 0.7778746 #>  [638,] 0.55954054 0.6468469 0.7236693 0.7934043 0.8162378 0.8168489 0.8668225 #>  [639,] 0.56645384 0.6379249 0.6741880 0.7730388 0.7928768 0.8263322 0.8388897 #>  [640,] 0.60939806 0.6937850 0.7136209 0.9058021 0.9626506 1.0309317 1.1183621 #>  [641,] 0.35862912 0.3794663 0.4236904 0.4870112 0.5082490 0.5177602 0.5596423 #>  [642,] 0.35860761 0.4280755 0.4763305 0.5179519 0.5240084 0.5358346 0.5544627 #>  [643,] 0.33716792 0.4937561 0.5423132 0.6021526 0.7567741 0.8265146 0.8295043 #>  [644,] 0.55805778 0.8639880 1.1205720 1.1824394 1.1877023 1.2816507 1.3637677 #>  [645,] 0.14537611 0.3864849 0.4419081 0.4993874 0.5112464 0.5465711 0.5511167 #>  [646,] 0.72737167 0.9536991 0.9727181 0.9963824 1.0454571 1.0633879 1.0670054 #>  [647,] 0.27646583 0.3769053 0.5251106 0.5959513 0.6205765 0.6305562 0.6336923 #>  [648,] 1.06357391 1.1019409 1.1902071 1.2814726 1.3301054 1.4250368 1.4655753 #>  [649,] 0.22009058 0.5334972 0.7722540 0.8317345 0.8443217 0.8559487 0.9177287 #>  [650,] 0.37795906 0.6358116 0.9461653 0.9974796 1.0030519 1.0673985 1.0771044 #>  [651,] 0.26392416 0.3517150 0.3643342 0.3957521 0.4447209 0.4602847 0.4942636 #>  [652,] 0.50919544 0.7280067 0.8099088 0.8169258 0.8384654 0.8932890 0.9254841 #>  [653,] 0.38463832 0.5591274 0.5615550 0.5839422 0.6711839 0.7021439 0.7424494 #>  [654,] 0.18123428 0.2709687 0.3050616 0.3822772 0.4068254 0.4232369 0.4662350 #>  [655,] 0.16012735 0.3149172 0.5048134 0.5729460 0.5749059 0.5999547 0.6197520 #>  [656,] 0.50699817 0.5151263 0.5335959 0.5820901 0.5966885 0.6113916 0.6282859 #>  [657,] 0.22215350 0.2895536 0.3722131 0.4048689 0.4280755 0.4637470 0.4647846 #>  [658,] 0.30094004 0.5716936 0.5813339 0.5825898 0.5840534 0.6178053 0.6297392 #>  [659,] 0.12174573 0.6276742 0.6374624 0.6435589 0.6451317 0.6786997 0.7042146 #>  [660,] 0.49492048 0.4996894 0.5103525 0.5279976 0.5982043 0.6201407 0.6516395 #>  [661,] 0.35284859 0.4927960 0.5238729 0.5678863 0.6635098 0.7272837 0.7381796 #>  [662,] 0.60510531 0.7500892 0.8822620 0.9291247 1.0067996 1.0278107 1.0750410 #>  [663,] 0.41685006 0.4453069 0.5142917 0.5952254 0.6313972 0.6563733 0.6579843 #>  [664,] 1.15123434 1.1558260 1.1863894 1.2901462 1.3820553 1.3972506 1.4852787 #>  [665,] 0.32154753 0.3255049 0.3748375 0.5846812 0.6037906 0.6260750 0.6461641 #>  [666,] 0.38055562 0.5140563 0.5177159 0.5289293 0.5667996 0.5912260 0.6003464 #>  [667,] 0.29282023 0.3169622 0.5374643 0.6328909 0.6421087 0.6503433 0.6931954 #>  [668,] 0.38923872 0.5290063 0.5356695 0.5800488 0.6356873 0.6663527 0.6875514 #>  [669,] 0.21564834 0.7268092 0.7450147 0.7499789 0.7701696 0.8131202 0.8212676 #>  [670,] 1.60947677 1.7427251 1.7641898 1.7654593 1.8090196 1.8380717 1.8769592 #>  [671,] 0.30959217 0.4706282 0.6521596 0.7360583 0.7375337 0.7635248 0.8259374 #>  [672,] 0.35204251 0.5562011 0.5595339 0.6591486 0.7322596 0.7512580 0.7701564 #>  [673,] 0.41962493 0.4919746 0.5340924 0.5418714 0.5493676 0.5720472 0.6012427 #>  [674,] 0.75870748 0.8693084 0.9382353 0.9557347 1.0640118 1.1213877 1.1369067 #>  [675,] 0.29142823 0.4576831 0.4882682 0.7253652 0.7527520 0.8560785 0.9427754 #>  [676,] 0.52809183 0.5482617 0.5900072 0.7056204 0.7737849 0.7870127 0.8050748 #>  [677,] 0.31696221 0.3894365 0.5152269 0.5996292 0.6395449 0.6396292 0.6787766 #>  [678,] 0.24836978 0.4195211 0.4870112 0.6054537 0.6368701 0.6945799 0.6983773 #>  [679,] 0.60079791 0.6124964 0.6859744 0.7186762 0.8054213 0.8462417 0.8557962 #>  [680,] 0.29981865 0.3704476 0.3864849 0.4043257 0.4556315 0.4869037 0.5290678 #>  [681,] 0.28753269 0.3196926 0.3768200 0.4476027 0.4881157 0.4944862 0.5451690 #>  [682,] 0.54068112 0.5642458 0.5742944 0.5976816 0.6240429 0.6761378 0.6791352 #>  [683,] 0.33916350 0.3634852 0.3940977 0.4970339 0.5739088 0.5830930 0.5857290 #>  [684,] 0.54150759 0.5935533 0.6311570 0.6667307 0.6973730 0.7331208 0.7718861 #>  [685,] 0.24850637 0.4183204 0.5063229 0.5145445 0.5536558 0.5592037 0.5704276 #>  [686,] 0.52809183 0.5636404 0.6261319 0.7268410 0.7298811 0.7444149 0.8482376 #>  [687,] 0.15988909 0.3879490 0.4305716 0.5058652 0.5108319 0.5906002 0.6439120 #>  [688,] 0.28086047 0.3976884 0.4191723 0.6368701 0.7104758 0.7363326 0.7722860 #>  [689,] 0.55743983 0.6692237 0.6769984 0.8338300 0.9276076 0.9582518 0.9891492 #>  [690,] 0.56649009 0.5711949 0.6124920 0.7036934 0.7357077 0.7377532 0.7471157 #>  [691,] 0.45925460 0.5385875 0.6150161 0.6335841 0.6545515 0.6729848 0.6835802 #>  [692,] 0.31777450 0.6207202 0.6237137 0.6664420 0.7417032 0.7645992 0.7957290 #>  [693,] 0.17603185 0.3908059 0.5288887 0.5347049 0.5631227 0.5742257 0.6437349 #>  [694,] 0.37042558 0.4829757 0.5631911 0.5935533 0.6187994 0.6456734 0.7716931 #>  [695,] 0.65637328 0.7744798 0.7823316 0.7824216 0.7843443 0.8851059 0.9244873 #>  [696,] 0.32782375 0.4494581 0.4638556 0.5143801 0.5516914 0.5619246 0.5860639 #>  [697,] 0.31763224 0.3314143 0.4555194 0.4621425 0.4663452 0.5133922 0.5343555 #>  [698,] 0.46126356 0.4695300 0.6137987 0.6486797 0.6599165 0.6622922 0.7300462 #>  [699,] 0.63890550 0.6580988 0.7006456 0.7592437 0.7687977 0.7700654 0.7744096 #>  [700,] 0.43485712 0.5754230 0.5881388 0.5907718 0.6005104 0.6022413 0.6136931 #>  [701,] 0.17671604 0.3314143 0.3430245 0.3620578 0.3952376 0.4019539 0.4078399 #>  [702,] 0.60865670 0.7921009 1.2909925 1.3626595 1.4163597 1.4448722 1.5208933 #>  [703,] 0.50168056 0.5269695 0.5269889 0.5996138 0.6016762 0.6212156 0.6585099 #>  [704,] 0.32034890 0.3476038 0.3683150 0.3764882 0.5489565 0.6040223 0.6045558 #>  [705,] 0.50775774 0.7344356 0.7858055 0.7970388 0.9053487 0.9884214 0.9939904 #>  [706,] 0.33357802 0.4074187 0.4163083 0.4419418 0.4446362 0.4863547 0.4944862 #>  [707,] 0.89764462 1.1753456 1.2680099 1.3298505 1.3403916 1.3885790 1.4097812 #>  [708,] 0.19966069 0.4761885 0.6185149 0.6628949 0.6987339 0.7256092 0.7566869 #>  [709,] 0.33054160 0.3419606 0.4538520 0.5589579 0.6384446 0.6394285 0.6647808 #>  [710,] 0.50910050 0.5219926 0.5466753 0.5655159 0.5920035 0.6147790 0.6251626 #>  [711,] 0.43425613 0.4668583 0.4847466 0.4911829 0.5065325 0.5516914 0.5794275 #>  [712,] 1.07816895 1.2884836 1.2936970 1.2941501 1.3184700 1.3447150 1.3640997 #>  [713,] 0.49946372 0.5901557 0.6339377 0.6583527 0.6758086 0.6925228 0.7070111 #>  [714,] 0.53593978 0.8769871 0.9113737 0.9533283 1.0523702 1.1768579 1.2750426 #>  [715,] 0.37843876 0.3959542 0.4504540 0.4728974 0.4790036 0.5061161 0.5324833 #>  [716,] 0.36589075 0.4302441 0.5488167 0.5715972 0.6129458 0.6544077 0.6646489 #>  [717,] 0.56155502 0.6904654 0.7231670 0.7875080 0.7915109 0.8633038 0.8767673 #>  [718,] 0.30613672 0.4149321 0.4494910 0.4766878 0.5138718 0.5628032 0.5705900 #>  [719,] 0.32122941 0.4774407 0.4809088 0.5166841 0.6158332 0.6339377 0.6534115 #>  [720,] 0.30753851 0.4068582 0.4343620 0.4406324 0.4771530 0.4789029 0.6069501 #>  [721,] 0.35204251 0.4139184 0.4550655 0.5017117 0.5599067 0.5623358 0.6245796 #>  [722,] 0.43731256 0.4390246 0.5192625 0.5484135 0.5759310 0.5884166 0.5976573 #>  [723,] 0.85696576 1.1233230 1.1248312 1.1850442 1.2101795 1.2554544 1.2626581 #>  [724,] 0.57397783 0.5795761 0.6328770 0.6367327 0.6438440 0.6578703 0.7366509 #>  [725,] 0.51747476 0.5930678 0.6598473 0.9394739 1.1844189 1.2384016 1.2583402 #>  [726,] 0.73258486 0.7330063 0.7486168 0.7688877 0.8053188 0.8746186 0.8848098 #>  [727,] 1.78443316 1.8994373 1.9109782 1.9621897 2.0070276 2.0080814 2.0270406 #>  [728,] 1.09456642 1.2786788 1.3280468 1.4406022 1.5742594 1.6489078 1.6515322 #>  [729,] 0.52187479 0.5649872 0.6043339 0.6050705 0.6776092 0.8207069 0.8383188 #>  [730,] 0.27025056 0.3307789 0.4340782 0.5479447 0.5647924 0.6288813 0.6501507 #>  [731,] 0.16012735 0.2784512 0.4525893 0.5123068 0.5707398 0.5845934 0.6569376 #>  [732,] 0.34196661 0.4243681 0.6017191 0.7244495 0.7289435 0.7422627 0.7793249 #>  [733,] 0.28441403 0.2914282 0.5122122 0.6657414 0.6814308 0.7728129 0.8561090 #>  [734,] 0.10920448 0.3369371 0.4019539 0.4190630 0.4268638 0.4592546 0.5032840 #>  [735,] 0.36183206 0.4809088 0.4994637 0.5487682 0.5613954 0.5960407 0.6011192 #>  [736,] 1.02196181 1.0945664 1.5021812 1.6297174 1.7128142 1.7269086 1.7528242 #>  [737,] 0.40135778 0.4251023 0.4308065 0.4317845 0.4346651 0.4369156 0.4518266 #>  [738,] 0.47633050 0.4939649 0.5152269 0.6328909 0.6499953 0.6563030 0.7008661 #>  [739,] 0.58487261 0.6088997 0.7255150 0.7307830 0.7447280 0.7517222 0.7649300 #>  [740,] 0.84214032 1.0007712 1.1804789 1.2400457 1.2971262 1.3342181 1.3771805 #>  [741,] 0.54523495 0.6664924 0.7243247 0.8036139 0.8405405 0.8532123 0.8564395 #>  [742,] 0.54816247 0.5754506 0.6186975 0.6336996 0.6472880 0.6476555 0.6516395 #>  [743,] 0.60156054 0.8606395 1.0081777 1.1479728 1.1707050 1.1801985 1.2808261 #>  [744,] 0.49314028 0.9047770 0.9244479 0.9621701 1.2096674 1.2706691 1.2939014 #>  [745,] 0.28441403 0.4882682 0.5906991 0.6543397 0.6644950 0.7567741 0.8702741 #>  [746,] 0.48465067 0.8837738 0.9462042 1.0259557 1.0510975 1.0977528 1.2173280 #>  [747,] 0.62613194 0.7435517 0.8579654 0.9090125 0.9124006 0.9367389 0.9657434 #>  [748,] 0.24904996 0.3310692 0.4759475 0.5900072 0.6008128 0.6214531 0.6219190 #>  [749,] 0.43389051 0.4681853 0.5967330 0.6509170 0.6647808 0.6981663 0.7620602 #>  [750,] 0.43565819 0.5762301 0.5968961 0.7243247 0.7740098 0.7782454 0.7834383 #>  [751,] 0.42276881 0.4872496 0.5912260 0.6149423 0.6284766 0.6701844 0.6925201 #>  [752,] 1.52855757 1.8371047 1.8635101 2.0466099 2.0918427 2.1536776 2.1722558 #>  [753,] 0.38880667 0.4243681 0.4978232 0.5453632 0.6149649 0.6555521 0.6923202 #>  [754,] 0.81071812 1.1237496 1.1579587 1.1937617 1.2665790 1.2698035 1.5011186 #>  [755,] 0.24442825 0.4486791 0.4815718 0.6214195 0.6789966 0.7691889 0.8056446 #>  [756,] 0.48777484 0.5523776 0.6468002 0.6613450 0.6866159 0.6880896 0.6923202 #>  [757,] 0.42159029 0.4741343 0.5539152 0.5859156 0.6324910 0.6976086 0.7025640 #>  [758,] 0.63266178 0.6842928 0.6964153 0.7052174 0.7867425 0.8025458 0.8501075 #>  [759,] 0.33858392 0.3706551 0.3760308 0.4866320 0.5156682 0.5377990 0.5835731 #>  [760,] 0.62668502 0.6326618 0.6685580 0.6819095 0.7221509 0.7707604 0.7982965 #>  [761,] 0.42159029 0.4990196 0.5186725 0.5422442 0.7248737 0.7322902 0.7434416 #>  [762,] 0.32829602 0.3765710 0.3778631 0.5306654 0.5463087 0.6530798 0.6719590 #>  [763,] 0.46195697 0.4921373 0.4927960 0.5558087 0.5727180 0.6367149 0.6414264 #>  [764,] 0.81539391 1.0627282 1.1357639 1.1724926 1.2799663 1.2858048 1.3164525 #>  [765,] 0.32834619 0.5446123 0.6515839 0.7628014 0.7645229 0.7728831 0.7932420 #>  [766,] 0.38673197 0.4171115 0.4214987 0.4580320 0.4767526 0.5489112 0.5667996 #>  [767,] 0.44624308 0.5304625 0.5959858 0.6088724 0.6389055 0.6452763 0.6667307 #>  [768,] 0.09793014 0.3650662 0.3837766 0.3878184 0.4251023 0.4406324 0.4451739 #>  [769,] 0.72174824 0.9055905 1.2745698 1.2873109 1.3202543 1.3519281 1.4502325 #>  [770,] 0.42300840 0.4829757 0.5391089 0.5732260 0.5869437 0.5903036 0.5959858 #>  [771,] 0.18694140 0.5359243 0.6145491 0.6215770 0.6352886 0.6578703 0.6893276 #>  [772,] 0.28939092 0.5469313 0.5975214 0.6552984 0.8849005 0.9371384 1.0407122 #>  [773,] 0.78095095 0.8840100 0.9013571 0.9124871 1.0807722 1.1959582 1.2394457 #>  [774,] 0.51831285 0.7350785 0.8336697 0.8592510 0.8700080 0.8832749 0.8863406 #>  [775,] 0.39749310 0.4439451 0.4448272 0.5192625 0.5208184 0.5566204 0.5591503 #>  [776,] 0.25901013 0.3326958 0.4032070 0.4369156 0.4655521 0.5096223 0.5293803 #>  [777,] 0.16294453 0.1991232 0.3172386 0.3565114 0.4048689 0.4156592 0.4271307 #>  [778,] 0.17671604 0.2805367 0.2946289 0.2999224 0.3176322 0.5097468 0.5151779 #>  [779,] 1.13821899 1.2753155 1.4860382 1.4928169 1.5801845 1.6657402 1.6857693 #>  [780,] 0.81158330 0.9008486 0.9280799 0.9391338 1.0128512 1.0464698 1.0504111 #>  [781,] 0.21918464 0.2270018 0.3726018 0.4006144 0.4085609 0.5219926 0.5895014 #>  [782,] 0.15988909 0.3739637 0.3830088 0.4255069 0.4473558 0.7164621 0.7186608 #>  [783,] 0.37261992 0.4522172 0.5349356 0.5708778 0.5719704 0.5770565 0.5917509 #>  [784,] 0.50286995 0.6191030 0.6432153 0.7972929 0.8830504 0.9369949 0.9458268 #>  [785,] 0.48729262 0.5664538 0.7048155 0.8146718 0.9812514 1.0233116 1.1321643 #>  [786,] 0.43611187 0.5749734 0.5821693 0.5842183 0.7182777 0.7334902 0.7542938 #>  [787,] 0.29705996 0.3128272 0.3786489 0.4373126 0.4506096 0.4937784 0.5087746 #>  [788,] 0.30910517 0.4781338 0.4882283 0.5017394 0.5398482 0.5451222 0.5942179 #>  [789,] 0.40532656 0.4759808 0.4972676 0.5189760 0.5424646 0.5617512 0.5821245 #>  [790,] 0.28242870 0.3128272 0.3871598 0.5213863 0.5339531 0.5412305 0.5889692 #>  [791,] 0.40961744 0.4437505 0.5016762 0.5575626 0.6528292 0.6840621 0.6887980 #>  [792,] 0.38673197 0.4435799 0.4815263 0.5016762 0.5029650 0.5724926 0.5868896 #>  [793,] 0.32834619 0.4629471 0.5005318 0.6622738 0.7606690 0.7767120 0.8212055 #>  [794,] 0.54826174 0.5635352 0.5636404 0.6726623 0.7329217 0.7710559 0.7855226 #>  [795,] 0.43277488 0.4629471 0.5380283 0.5446123 0.6441826 0.6644675 0.7721150 #>  [796,] 0.60398370 0.6713260 0.6769984 0.7324106 0.8107181 0.8204475 0.8603664 #>  [797,] 0.11352889 0.4340782 0.4949763 0.5122320 0.5195598 0.5471869 0.6361805 #>  [798,] 0.64874056 0.6766462 0.6882761 0.9362890 0.9647318 0.9774574 1.0012763 #>  [799,] 0.51077127 0.5871641 0.5921308 0.6050705 0.6249516 0.6390824 0.6497615 #>  [800,] 0.77817058 0.8753256 0.8887665 0.9117526 0.9471892 0.9510739 0.9931238 #>  [801,] 0.31684582 0.3740275 0.5479447 0.5526417 0.6115549 0.6494973 0.6935797 #>  [802,] 0.59057930 0.6755866 0.7771968 0.9313451 0.9386429 0.9866427 1.0315395 #>  [803,] 0.26195646 0.3523999 0.4240440 0.4775053 0.4815263 0.4885325 0.5434177 #>  [804,] 0.30910517 0.5482191 0.6077460 0.6110649 0.6821129 0.7128517 0.7295240 #>  [805,] 0.18694140 0.5189696 0.5451222 0.5746533 0.6077460 0.6280397 0.6670032 #>  [806,] 0.24073700 0.6430310 0.8276502 0.9774574 0.9808567 1.1371607 1.1530979 #>  [807,] 0.45373238 0.5072975 0.5593100 0.5599067 0.5881388 0.5887911 0.5899455 #>  [808,] 1.01343112 1.0595107 1.1813501 1.1969793 1.2477153 1.3919395 1.5690312 #>  [809,] 0.44792929 0.4509385 0.6285716 0.6445984 0.6460288 0.6626825 0.7375337 #>  [810,] 0.28739585 0.4845612 0.5777386 0.5794881 0.5907718 0.6072804 0.6175804 #>  [811,] 0.79306165 0.8837738 1.0807850 1.1292851 1.1586246 1.1798654 1.2837395 #>  [812,] 0.37868452 0.4904270 0.4998193 0.5378534 0.5952254 0.5971503 0.6024869 #>  [813,] 0.45031962 0.5445280 0.5540574 0.5790240 0.6841707 0.7288483 0.7400100 #>  [814,] 1.00817770 1.0157287 1.0654127 1.1455165 1.2900896 1.2946340 1.3002880 #>  [815,] 0.49852129 0.5034966 0.5066112 0.5466753 0.5704412 0.5892895 0.6185149 #>  [816,] 0.21076587 0.5094077 0.5248954 0.5708778 0.6095624 0.6317495 0.6656358 #>  [817,] 0.36937303 0.4214987 0.5530989 0.5821693 0.5840534 0.6051173 0.6134026 #>  [818,] 0.34893160 0.3620099 0.3686780 0.5250091 0.5275454 0.5620804 0.6013644 #>  [819,] 0.57705654 0.6229272 0.6493967 0.6666687 0.7057053 0.7248532 0.7290958 #>  [820,] 0.55281495 0.6130392 0.6859186 0.7147601 0.7289496 0.7475510 0.7657063 #>  [821,] 0.38545522 0.3939100 0.3942077 0.4525436 0.4537897 0.4705179 0.4878097 #>  [822,] 0.52243339 0.5815460 0.6358116 0.6587603 0.6967940 0.7394045 0.7992771 #>  [823,] 0.22984645 0.5917905 0.7267944 0.9056000 0.9163814 0.9374137 0.9550651 #>  [824,] 0.39132024 0.4371033 0.4397488 0.5515438 0.5790049 0.6245796 0.6445984 #>  [825,] 0.61249205 0.9657706 1.0003800 1.0032046 1.0770719 1.1032810 1.1164662 #>  [826,] 0.49139542 0.5915108 0.6101962 0.6437879 0.7131537 0.7668768 0.8228212 #>  [827,] 0.66469656 0.7558682 0.8341269 0.8547442 0.8838775 0.9151752 0.9782313 #>  [828,] 0.40204620 0.4137604 0.4525436 0.5029389 0.5110079 0.5696524 0.5721110 #>  [829,] 0.46184341 0.5426372 0.5509453 0.6103558 0.6666687 0.6793102 0.6988857 #>  [830,] 0.40948251 0.5993714 0.6229272 0.6450176 0.6606326 0.6862891 0.6898521 #>  [831,] 0.61419772 0.8053657 0.9951511 1.1070456 1.2160172 1.2733013 1.3095161 #>  [832,] 0.70578308 0.7964055 0.9831190 1.0362301 1.0448910 1.0700655 1.0719087 #>  [833,] 0.41273197 0.4429335 0.7771476 0.7878257 0.8425901 0.9468914 0.9589994 #>  [834,] 0.64867967 0.7031679 0.7331541 0.8056564 0.8662043 1.0186633 1.0252064 #>  [835,] 0.40831326 0.5508795 0.5816551 0.5882994 0.7324106 0.7998428 0.8603052 #>  [836,] 0.67906696 0.7356954 0.8461533 0.9261705 0.9267812 0.9554272 1.0858239 #>  [837,] 0.36241130 0.4488099 0.5676495 0.5749059 0.5840243 0.6029651 0.6157143 #>  [838,] 0.40519563 0.4078134 0.4575376 0.4655731 0.5601903 0.5757030 0.5989309 #>  [839,] 0.42180587 0.5005318 0.6441826 0.7019912 0.7148023 0.7154212 0.7156344 #>  [840,] 0.46142333 0.5856135 0.7105331 0.7608997 0.7692025 0.9092685 1.0069293 #>  [841,] 0.52613990 0.5805117 0.5941368 0.7520302 0.8325341 0.8391375 0.9389026 #>  [842,] 1.18178599 1.3979619 1.4095979 1.4141126 1.4617969 1.4754367 1.5171937 #>  [843,] 0.94138909 0.9503583 1.0139246 1.1255989 1.1439733 1.2619369 1.2703485 #>  [844,] 0.56051232 0.6375514 0.7032494 0.7872126 0.9164464 0.9301487 0.9657619 #>  [845,] 0.91151952 1.0915679 1.1381902 1.1477217 1.3060090 1.3378451 1.3574739 #>  [846,] 0.31246441 0.3310764 0.4448272 0.4509238 0.4711815 0.4818327 0.4869058 #>  [847,] 0.47469797 0.6129005 0.7099831 0.8142788 0.8871062 0.8992796 0.9059468 #>  [848,] 0.48724961 0.5028700 0.6841890 0.7289646 0.7675046 0.7936582 0.8030150 #>  [849,] 0.55578851 0.7236693 0.7777544 0.8243966 0.8356903 0.8487347 0.8622542 #>  [850,] 0.30716094 0.4196249 0.4245837 0.5108544 0.5390855 0.5661164 0.5769664 #>  [851,] 0.75425937 0.9270503 0.9999610 1.0184707 1.0248926 1.0264243 1.0941132 #>  [852,] 0.69223055 0.7370893 0.8722353 0.9286435 0.9443460 0.9533283 0.9993540 #>  [853,] 0.10920448 0.3076923 0.3721154 0.4078399 0.4778522 0.5143801 0.5385875 #>  [854,] 0.26117182 0.2876869 0.4251601 0.4580981 0.4869058 0.5227786 0.5365743 #>  [855,] 0.43389051 0.5488167 0.6346743 0.6628599 0.6802992 0.6850455 0.7084815 #>  [856,] 0.51937543 0.5735306 0.5917287 0.6080807 0.6248467 0.6583527 0.6622922 #>  [857,] 0.28789901 0.2896751 0.3155262 0.3847786 0.4504540 0.4535740 0.4813088 #>  [858,] 0.38923661 0.5433709 0.6511651 0.7328383 0.7821499 0.8199283 0.8309377 #>  [859,] 0.39493483 0.4538007 0.6350033 0.8556782 0.9249944 0.9339963 1.0190714 #>  [860,] 0.19966069 0.5506329 0.6419423 0.6651020 0.7134097 0.7708306 0.7995570 #>  [861,] 0.78373046 0.8492235 0.9752858 1.0030519 1.0819807 1.1320426 1.1452983 #>  [862,] 0.43473945 0.7087581 0.7289009 0.7587075 0.8031402 0.9048955 0.9179546 #>  [863,] 0.95107386 1.0856631 1.1582391 1.2372949 1.4063799 1.4988644 1.5041738 #>  [864,] 0.46233937 0.4864748 0.6670069 0.6943917 0.7206521 0.7446449 0.7731901 #>  [865,] 0.20034565 0.4324301 0.4383547 0.4517605 0.5583671 0.5696524 0.5770712 #>  [866,] 0.94620425 0.9791795 1.0038080 1.0520268 1.1251754 1.1445001 1.1845858 #>  [867,] 0.60644372 0.6103127 0.6374213 0.8771256 0.9348839 0.9555794 1.0029299 #>  [868,] 0.43314978 0.5071004 0.5750470 0.6126769 0.6874523 0.7279788 0.7862407 #>  [869,] 0.36433422 0.3746465 0.4464526 0.4801595 0.5287459 0.5335880 0.5523776 #>  [870,] 0.18729279 0.4557351 0.4655521 0.4915142 0.5049339 0.5258481 0.5289644 #>  [871,] 0.37089696 0.5669346 0.6136998 0.6626825 0.6806766 0.7028505 0.7178708 #>  [872,] 0.21918464 0.2863546 0.4209947 0.4280404 0.4818862 0.5642458 0.5818563 #>  [873,] 0.69117110 1.0801821 1.1238442 1.1920982 1.2766771 1.2774818 1.2842762 #>  [874,] 0.20395025 0.5064915 0.5768825 0.5917287 0.5944636 0.6313972 0.6365716 #>  [875,] 0.41376043 0.4282303 0.4324301 0.5157480 0.5227786 0.5240320 0.5331268 #>  [876,] 0.56913667 0.6685740 0.7809509 0.8730947 0.8742567 0.9936128 1.1003776 #>  [877,] 0.81961110 0.8667355 0.8807279 0.9423853 1.1264544 1.1815195 1.2361055 #>  [878,] 0.47351194 0.5264415 0.5770906 0.6013644 0.6501416 0.6869942 0.7185237 #>  [879,] 0.39659589 0.3991706 0.5146600 0.5302222 0.5794452 0.6816691 0.7127105 #>  [880,] 0.33377071 0.5156261 0.5516193 0.5754230 0.5794881 0.5813339 0.5840481 #>  [881,] 0.28016408 0.2931238 0.5162579 0.5590186 0.6087374 0.6204562 0.6405955 #>  [882,] 0.48729262 0.8263322 0.9143281 0.9280911 1.0652537 1.2318797 1.2448297 #>  [883,] 0.50905361 0.5590186 0.5686003 0.6003464 0.6135916 0.6196483 0.6255875 #>  [884,] 0.35146754 0.4230084 0.5570740 0.5631911 0.6221473 0.6500649 0.7326900 #>  [885,] 0.23469512 0.2907930 0.3773212 0.3947649 0.3957521 0.4464526 0.5703871 #>  [886,] 0.32825925 0.4124633 0.6034513 0.6053636 0.6625722 0.6949067 0.7094449 #>  [887,] 0.78484110 0.9272853 0.9299038 0.9393366 0.9589994 0.9888866 0.9899323 #>  [888,] 0.32910487 0.3302554 0.3714611 0.4020462 0.5776172 0.5802703 0.5893337 #>  [889,] 0.43083312 0.4745738 0.5905341 0.6214531 0.6547724 0.7360752 0.7526224 #>  [890,] 0.16183479 0.3305416 0.4814609 0.5411459 0.6393721 0.6480133 0.6509170 #>  [891,] 0.33051150 0.4375850 0.5448095 0.5751907 0.5915261 0.6035787 0.6230742 #>  [892,] 0.46861039 0.4989057 0.5107713 0.5122320 0.5441670 0.5562677 0.5641259 #>  [893,] 0.58091634 0.5909414 0.7052174 0.9323451 0.9394739 0.9585959 1.0064993 #>  [894,] 0.33400489 0.4853777 0.5251358 0.5358346 0.5466209 0.5471358 0.5515886 #>  [895,] 0.23676412 0.4978232 0.5035106 0.5378534 0.5918848 0.6444704 0.6490480 #>  [896,] 0.31969257 0.3535610 0.3822772 0.3961910 0.3963619 0.4392803 0.4419418 #>  [897,] 0.34063708 0.3758164 0.4035277 0.4780104 0.5110393 0.5203146 0.5258108 #>  [898,] 1.08633114 1.1902071 1.2795182 1.2863212 1.3122812 1.3227461 1.3800149 #>  [899,] 0.86066125 0.8858478 0.9706693 1.0350605 1.1069475 1.1200171 1.1720295 #>  [900,] 0.58694910 0.7148144 0.7331208 0.7479689 0.7971560 0.8017269 0.8667355 #>  [901,] 0.42009776 0.4900403 0.5014818 0.6129541 0.6277887 0.6308840 0.6474697 #>  [902,] 0.18497174 0.2040133 0.2628021 0.4513686 0.4536434 0.4904270 0.4986791 #>  [903,] 0.24073700 0.8212084 1.0115344 1.0470990 1.0744304 1.1471457 1.3242169 #>  [904,] 0.43868757 0.6130727 0.6651020 0.6977118 0.7009247 0.7256092 0.7313639 #>  [905,] 0.49127230 0.5054067 0.5507568 0.5657486 0.5906002 0.6137987 0.6248467 #>  [906,] 0.19212176 0.3926176 0.4775053 0.4821518 0.4824404 0.5029650 0.5063229 #>  [907,] 0.59057930 0.8006178 0.8421320 0.8660138 0.9393745 1.0019716 1.0105771 #>  [908,] 0.16335137 0.2278322 0.2805367 0.3402555 0.3620578 0.4621425 0.4873261 #>  [909,] 0.42550685 0.4305716 0.5182597 0.5380510 0.6015676 0.6425688 0.7542594 #>  [910,] 0.08692040 0.1897256 0.3588884 0.3650662 0.3714611 0.4068582 0.4338996 #>  [911,] 0.51248278 0.5657121 0.7454840 0.8084374 0.8433335 0.8551885 0.8727563 #>  [912,] 0.23098692 0.4695300 0.5657486 0.6418820 0.6852159 0.7619909 0.7794319 #>  [913,] 0.17505266 0.3686780 0.3764882 0.4555493 0.4987332 0.5453142 0.5798589 #>  [914,] 0.46768917 0.5314038 0.5493676 0.5502455 0.5536213 0.6264702 0.6860781 #>  [915,] 0.56115905 0.9142750 1.1137932 1.1263021 1.1293500 1.1454330 1.1634319 #>  [916,] 0.36628368 0.3748601 0.5035798 0.5407808 0.5724690 0.6016762 0.6126571 #>  [917,] 0.36655105 0.3883614 0.4270775 0.4585930 0.5051880 0.5357689 0.5412652 #>  [918,] 0.28601925 0.5225292 0.5290812 0.6401527 0.7384849 0.7479689 0.7768682 #>  [919,] 0.17603185 0.4666259 0.5306241 0.5487682 0.5604893 0.5730035 0.5841226 #>  [920,] 0.23530578 0.4525893 0.4918852 0.4947689 0.5048134 0.5072399 0.7970969 #>  [921,] 0.60215265 0.6474697 0.6988452 0.7454840 0.7749711 0.7810787 0.7894779 #>  [922,] 0.20034565 0.5207816 0.5408695 0.5554737 0.5751441 0.5753217 0.5816145 #>  [923,] 0.58928411 0.5917905 0.6212175 0.6381023 0.6448516 0.6530798 0.6783533 #>  [924,] 1.26519608 1.5706653 1.5726567 1.5902462 1.6363500 1.6631545 1.6973186 #>  [925,] 0.86353992 0.8920804 0.9536991 0.9775745 1.0083607 1.0197534 1.0268523 #>  [926,] 0.30179066 0.4053266 0.4434374 0.4533355 0.4641039 0.4780104 0.4867597 #>  [927,] 0.27161819 0.3512925 0.3565114 0.3643884 0.4809309 0.4814762 0.5759310 #>  [928,] 0.51130129 0.5264391 0.5622950 0.5789740 0.6331933 0.6551087 0.7028216 #>  [929,] 0.48864632 0.5264391 0.6334122 0.6408372 0.6530955 0.6712083 0.7016903 #>  [930,] 0.30094004 0.3337707 0.5349257 0.5794275 0.6033952 0.6134026 0.6272293 #>  [931,] 0.32973883 0.6577957 0.8276502 0.8776227 0.9122305 0.9582686 1.0115344 #>  [932,] 0.43734585 0.6599258 0.8295273 0.8770007 0.8825770 0.9281769 0.9472670 #>  [933,] 0.31092722 0.4231108 0.4536434 0.4741343 0.5437369 0.6609321 0.6880491 #>  [934,] 0.39165696 0.3980165 0.4028551 0.4419178 0.4642702 0.5154827 0.5240320 #>  [935,] 0.27555983 0.8735704 0.9024662 0.9146160 0.9750313 1.0026022 1.0209797 #>  [936,] 0.30738083 0.3804721 0.3848694 0.3952240 0.4624185 0.5151263 0.6155998 #>  [937,] 0.28686090 0.3658907 0.4177458 0.5366301 0.5691114 0.5883255 0.6084537 #>  [938,] 0.54555109 0.6766462 0.6826168 1.1471457 1.1530979 1.2891732 1.3220916 #>  [939,] 0.42767510 0.6294244 0.6915212 0.7104758 0.7545457 0.7957522 0.8148650 #>  [940,] 0.73169267 0.7778775 0.8113084 0.8362149 0.8436871 0.8586937 0.9004565 #>  [941,] 0.33516363 0.5668039 0.6109643 0.6653110 0.7041623 0.7669429 0.7898816 #>  [942,] 0.61460549 0.6840200 0.7300462 0.7904285 0.8680102 0.8700080 0.8771143 #>  [943,] 0.61419772 0.7500892 0.9476445 1.0471452 1.0973790 1.1269387 1.1318945 #>  [944,] 0.38744169 0.6832722 0.8892744 0.9294315 0.9503554 0.9618203 0.9847990 #>  [945,] 0.76870753 0.9524665 0.9923883 1.0041724 1.0308424 1.1220585 1.1311287 #>  [946,] 0.57934246 0.6084815 0.6414365 0.6843317 0.7771476 0.7796726 0.8033214 #>  [947,] 0.40396385 0.5196309 0.5526417 0.5623358 0.5669945 0.5899455 0.6284766 #>  [948,] 0.38794902 0.4473558 0.4912723 0.4998193 0.6319285 0.6369121 0.6418820 #>  [949,] 0.35567330 0.3713976 0.3969499 0.4287676 0.5306654 0.5401748 0.5691114 #>  [950,] 0.50919544 0.6573315 0.7367542 0.7494382 0.7511671 0.7956558 0.8179325 #>  [951,] 0.21846069 0.3615937 0.3849360 0.6802317 0.7339454 0.7507426 0.7897419 #>  [952,] 0.58374838 0.5848726 0.6228525 0.6229873 0.6374284 0.6395449 0.6421087 #>  [953,] 0.55303055 0.5996292 0.6427296 0.7375295 0.7407752 0.7555970 0.7788246 #>  [954,] 0.61904931 0.7183519 0.7242072 0.8461728 0.8467702 0.8674439 0.8694139 #>  [955,] 0.18729279 0.3837766 0.3967767 0.4032070 0.4182481 0.4466637 0.4547941 #>  [956,] 0.69117110 0.9318542 0.9458940 0.9698277 1.0795523 1.1230745 1.2029018 #>  [957,] 0.30059960 0.6051535 0.6103127 0.7348125 0.7732156 0.7927551 0.8324120 #>  [958,] 0.43774948 0.6633261 0.6841983 0.7030771 0.7212125 0.7225592 0.7858000 #>  [959,] 0.29096480 0.5138718 0.5243456 0.5390855 0.5599074 0.5808172 0.5884435 #>  [960,] 0.34097658 0.3628246 0.7403760 0.8499612 0.9125742 1.0573759 1.1190948 #>  [961,] 0.67627799 0.7337911 0.8448059 0.9294315 1.0253020 1.0269375 1.0289324 #>  [962,] 0.44916693 0.4705179 0.5016806 0.5050149 0.5232892 0.5241068 0.5246158 #>  [963,] 0.37690533 0.5371775 0.5690481 0.6360886 0.6450007 0.6941157 0.8004949 #>  [964,] 0.61633703 0.8056564 0.8596810 0.8932890 0.9018807 0.9857076 1.0092159 #>  [965,] 0.49559525 0.6539593 0.7229364 0.8617392 0.9007417 0.9520988 1.0066839 #>  [966,] 0.29908750 0.3883381 0.5860764 0.6072989 0.6134636 0.6214195 0.6247551 #>  [967,] 0.34760378 0.3883614 0.4248871 0.5007537 0.5081476 0.5490294 0.5636113 #>  [968,] 0.40234603 0.4094390 0.4494910 0.4965277 0.5133922 0.5156511 0.5587166 #>  [969,] 0.27430991 0.5746765 0.5942373 0.6324143 0.6327976 0.6582406 0.6790151 #>  [970,] 0.36241130 0.4580025 0.6173249 0.6466024 0.6640875 0.7326556 0.7532215 #>  [971,] 0.25537230 0.3868914 0.6564652 0.6784060 0.7126777 0.7175116 0.7250596 #>  [972,] 0.43277488 0.4822385 0.6626830 0.7016903 0.7215342 0.8236006 0.8330104 #>  [973,] 0.18476655 0.4419178 0.4892756 0.5113013 0.6109643 0.6528859 0.6751712 #>  [974,] 0.18497174 0.2297934 0.3294379 0.3724097 0.3806428 0.5437369 0.5727271 #>  [975,] 0.37396373 0.4971060 0.5058652 0.5380510 0.7471951 0.7740898 0.8448669 #>  [976,] 0.56571213 0.7779473 0.8477325 0.8647583 0.8674439 0.9251998 0.9445375 #>  [977,] 0.74273858 0.7603127 0.8556782 0.8618090 0.9175525 0.9372790 0.9535624 #>  [978,] 0.37211541 0.4268638 0.4494581 0.5344022 0.5634229 0.6133399 0.6150161 #>  [979,] 0.35146754 0.5799741 0.5988571 0.6052291 0.6117496 0.6460288 0.6647724 #>  [980,] 0.21846069 0.3759299 0.5314421 0.5699273 0.6952990 0.7510291 0.7578590 #>  [981,] 0.63366225 0.6393457 0.6866159 0.7022439 0.7311723 0.7355500 0.7411951 #>  [982,] 0.79274619 1.0769120 1.0918450 1.2404404 1.3170953 1.3296679 1.3297863 #>  [983,] 0.28768685 0.3124644 0.3668731 0.3719139 0.4051956 0.4313448 0.4383762 #>  [984,] 0.47093724 0.4785014 0.5035798 0.6783533 0.6938075 0.7485039 0.7486774 #>  [985,] 0.59306776 0.6312519 0.8234325 0.8807279 0.9875674 1.0028268 1.0291793 #>  [986,] 0.57457351 0.8225579 0.9000355 0.9113737 0.9311162 1.0153285 1.0424952 #>  [987,] 0.70818765 0.7451772 0.7579198 0.7764394 0.8639880 0.8868579 0.8973275 #>  [988,] 0.35284859 0.4435799 0.4619570 0.5489112 0.6328436 0.6701844 0.6841890 #>  [989,] 0.71362092 1.0246550 1.0406753 1.0548111 1.1935232 1.3600957 1.3889036 #>  [990,] 0.55743983 0.8204475 1.0204570 1.0360598 1.0628335 1.0813629 1.1239237 #>  [991,] 0.78484110 0.8028137 0.8425901 0.9641849 1.0958663 1.2063217 1.2346762 #>  [992,] 0.53349724 0.5340924 0.5936759 0.7077540 0.7338871 0.7424133 0.7425975 #>  [993,] 0.32474420 0.4094825 0.4549501 0.5032673 0.5172623 0.6167127 0.7574429 #>  [994,] 0.51773276 0.5314038 0.6497083 0.6541173 0.6628199 0.6730095 0.6893834 #>  [995,] 0.44945182 0.4942696 0.5065403 0.5290063 0.6394285 0.6462010 0.6632443 #>  [996,] 0.47351194 0.6099997 0.6235787 0.7622161 0.7886939 0.7901162 0.8193234 #>  [997,] 0.37856273 0.5469313 0.7445796 0.7561596 0.8395152 0.8644959 1.0483008 #>  [998,] 0.21076587 0.3917471 0.5349356 0.5704979 0.5856392 0.6291380 0.6733536 #>  [999,] 0.45789396 0.4972769 0.5276862 0.5548033 0.5764812 0.6676759 0.6746760 #> [1000,] 0.53802828 0.6622738 0.7215342 0.7538623 0.8762827 0.8853043 0.9391717 #>              [,8]      [,9]     [,10] #>    [1,] 0.5859156 0.5952739 0.6670840 #>    [2,] 1.1240560 1.2409679 1.2793152 #>    [3,] 0.7519818 0.7764310 0.7898001 #>    [4,] 0.9520251 1.0157151 1.0259759 #>    [5,] 0.5905341 0.7089360 0.7737849 #>    [6,] 1.0709559 1.0822576 1.0932387 #>    [7,] 0.7024389 0.7035109 0.7096631 #>    [8,] 0.6532847 0.6687542 0.6715624 #>    [9,] 0.7993516 0.8326396 0.8550891 #>   [10,] 0.7940439 0.7946135 0.8126015 #>   [11,] 0.7540596 0.7732156 0.7860191 #>   [12,] 0.7575852 0.7842788 0.8389359 #>   [13,] 0.7934043 0.7960111 0.8015449 #>   [14,] 0.7315699 0.7454232 0.7553627 #>   [15,] 0.5886339 0.5950166 0.6284738 #>   [16,] 1.4502682 1.6380875 1.6416224 #>   [17,] 0.8936820 0.9191168 0.9702651 #>   [18,] 0.7643977 0.7656029 0.8090534 #>   [19,] 0.7454480 0.8635664 0.8740571 #>   [20,] 1.1020038 1.1317461 1.1454045 #>   [21,] 0.6340431 0.6556940 0.6990133 #>   [22,] 1.0589658 1.0602518 1.0809041 #>   [23,] 1.1924685 1.4140081 1.4365322 #>   [24,] 0.6698317 0.6850918 0.7040804 #>   [25,] 0.9435427 0.9850920 0.9869686 #>   [26,] 0.5277868 0.5703871 0.5808027 #>   [27,] 0.6140383 0.6146086 0.6636555 #>   [28,] 0.9297051 0.9967080 1.0005068 #>   [29,] 0.9400081 0.9408808 0.9628811 #>   [30,] 0.7460410 0.7821864 0.7870456 #>   [31,] 0.4868733 0.4915142 0.4993874 #>   [32,] 1.0191254 1.0206080 1.0260125 #>   [33,] 0.5749712 0.6166605 0.6324665 #>   [34,] 1.1582234 1.1708099 1.1797648 #>   [35,] 0.6050252 0.6083871 0.6441785 #>   [36,] 0.7133837 0.7262724 0.7526444 #>   [37,] 0.7468265 0.7506479 0.7599770 #>   [38,] 1.6769154 1.6781664 1.6858244 #>   [39,] 1.1254669 1.1655841 1.2507043 #>   [40,] 0.6572527 0.6730094 0.6987602 #>   [41,] 1.5067549 1.5326383 1.5929913 #>   [42,] 0.8949210 0.9416934 0.9564623 #>   [43,] 0.6039726 0.6190102 0.6332547 #>   [44,] 0.4641601 0.4711815 0.5597366 #>   [45,] 0.7461676 0.7535958 0.7654086 #>   [46,] 0.9194734 0.9332189 0.9626178 #>   [47,] 0.5887911 0.5915108 0.6261130 #>   [48,] 0.6556809 0.6721172 0.6898521 #>   [49,] 0.7398845 0.7794631 0.7932228 #>   [50,] 0.7597294 0.7681317 0.7859511 #>   [51,] 0.6100554 0.6122305 0.6149601 #>   [52,] 0.5623349 0.5656838 0.5742545 #>   [53,] 0.6565426 0.7350785 0.7408905 #>   [54,] 0.7281612 0.7323497 0.7543943 #>   [55,] 0.9399600 0.9535624 0.9943066 #>   [56,] 1.0625651 1.2313187 1.3543886 #>   [57,] 1.3513961 1.3795127 1.4252314 #>   [58,] 0.6868356 0.7017327 0.7108687 #>   [59,] 0.5718985 0.5728312 0.5739143 #>   [60,] 0.6814039 0.6865517 0.6902828 #>   [61,] 0.8202704 0.8773038 0.8879654 #>   [62,] 0.9472670 0.9649645 0.9907691 #>   [63,] 0.5909552 0.5914907 0.5976573 #>   [64,] 0.6626524 0.6718494 0.6908867 #>   [65,] 0.6034897 0.6043297 0.6275605 #>   [66,] 0.8109475 0.8179325 0.8286855 #>   [67,] 0.5269628 0.5346354 0.5392505 #>   [68,] 0.7724946 0.7741917 0.8224099 #>   [69,] 0.5989732 0.6465635 0.6532775 #>   [70,] 0.7417141 0.7991160 0.8103572 #>   [71,] 1.5934575 1.6601212 1.7684665 #>   [72,] 0.9700214 1.0241940 1.0550848 #>   [73,] 0.8160037 0.8239984 0.8353971 #>   [74,] 0.7425975 0.8317666 0.8414877 #>   [75,] 1.0077181 1.0205950 1.0566610 #>   [76,] 0.6592935 0.6721577 0.6758086 #>   [77,] 0.5335880 0.5378144 0.5713980 #>   [78,] 0.7272820 0.7279788 0.7330853 #>   [79,] 0.6932491 0.6932583 0.6964082 #>   [80,] 0.8755787 0.9005702 0.9404834 #>   [81,] 0.9074225 0.9845362 1.0241940 #>   [82,] 0.6905801 0.7137954 0.7184054 #>   [83,] 1.1196927 1.1409751 1.1575593 #>   [84,] 0.5227947 0.5412305 0.5598681 #>   [85,] 0.9170751 0.9175525 0.9179790 #>   [86,] 0.9584158 1.0985868 1.1228491 #>   [87,] 1.2922184 1.3363160 1.3609834 #>   [88,] 0.6592809 0.6770606 0.7032165 #>   [89,] 1.1314950 1.1687817 1.1783481 #>   [90,] 0.6719544 0.7079217 0.7386199 #>   [91,] 1.1118401 1.1205528 1.1445001 #>   [92,] 0.5667394 0.5730288 0.6175804 #>   [93,] 0.7005076 0.7133062 0.7153348 #>   [94,] 0.5895014 0.5917509 0.6016396 #>   [95,] 0.7771770 0.7884985 0.8315416 #>   [96,] 1.7265126 1.7435906 1.7445030 #>   [97,] 0.5040281 0.5208184 0.5537049 #>   [98,] 0.4449773 0.4516372 0.4692751 #>   [99,] 0.6115549 0.6158304 0.6378444 #>  [100,] 0.9354204 0.9455693 0.9905251 #>  [101,] 1.3341838 1.3623201 1.3752225 #>  [102,] 0.5790049 0.6174315 0.6204562 #>  [103,] 1.5930851 1.6862912 1.6971924 #>  [104,] 0.5805822 0.6228565 0.6367149 #>  [105,] 0.9493255 0.9705761 0.9815498 #>  [106,] 0.7654577 0.7878546 0.8078562 #>  [107,] 0.7851285 0.7894779 0.8227354 #>  [108,] 1.1885097 1.2019631 1.2058480 #>  [109,] 0.9167986 0.9568587 0.9655608 #>  [110,] 0.6240429 0.6396556 0.6568937 #>  [111,] 0.7240371 0.7788490 0.8015642 #>  [112,] 0.6546214 0.6758646 0.6802992 #>  [113,] 1.2752111 1.2884554 1.3515871 #>  [114,] 0.9883806 1.0074200 1.0100816 #>  [115,] 0.8558795 0.9063029 0.9142399 #>  [116,] 1.2545192 1.3128152 1.3605657 #>  [117,] 0.7824744 0.8020842 0.8029824 #>  [118,] 0.6627432 0.6766574 0.6941181 #>  [119,] 0.5958303 0.6028659 0.6198447 #>  [120,] 0.8788397 0.9048350 0.9056991 #>  [121,] 0.6767893 0.6806766 0.7322902 #>  [122,] 0.6653807 0.6802317 0.6825346 #>  [123,] 0.9489922 0.9564090 0.9672334 #>  [124,] 0.7740898 0.8171240 0.8370736 #>  [125,] 1.2644675 1.2798187 1.3189938 #>  [126,] 0.9898653 0.9900246 1.0105372 #>  [127,] 0.5588387 0.5809533 0.6133399 #>  [128,] 0.5372039 0.5807697 0.6132478 #>  [129,] 0.8556766 0.9230649 0.9447409 #>  [130,] 0.7305971 0.8272327 0.8457194 #>  [131,] 0.5506301 0.5573282 0.5679666 #>  [132,] 1.0655072 1.0808979 1.1334305 #>  [133,] 1.0681000 1.1386012 1.1510827 #>  [134,] 2.4872799 2.5959676 2.6552762 #>  [135,] 0.6618954 0.7348770 0.7598212 #>  [136,] 0.5928107 0.6195524 0.6251270 #>  [137,] 0.6740272 0.7008330 0.7054827 #>  [138,] 0.6371241 0.6390824 0.6426610 #>  [139,] 0.7462865 0.7660565 0.8072935 #>  [140,] 0.7280391 0.8339013 0.8341269 #>  [141,] 0.8558880 0.8762773 0.8823643 #>  [142,] 0.7071421 0.7094449 0.7288543 #>  [143,] 0.8340858 0.9183314 0.9629230 #>  [144,] 0.9865250 0.9872804 1.0053108 #>  [145,] 0.8596810 0.8604560 0.8626647 #>  [146,] 0.6846134 0.7174378 0.7343442 #>  [147,] 1.5118111 1.6141575 1.6432792 #>  [148,] 0.9722573 1.0088331 1.0143987 #>  [149,] 1.5163554 1.5915532 1.5973644 #>  [150,] 0.6337434 0.6818849 0.6923974 #>  [151,] 0.9647318 1.0097287 1.0158450 #>  [152,] 0.5145445 0.5161952 0.5636673 #>  [153,] 0.9591380 0.9731357 0.9852739 #>  [154,] 0.8315845 0.8442390 0.8533837 #>  [155,] 0.5403586 0.5467098 0.5598681 #>  [156,] 1.3537301 1.4114812 1.4394674 #>  [157,] 1.4454133 1.4607410 1.5064948 #>  [158,] 0.6135846 0.6180253 0.6664163 #>  [159,] 0.7250932 0.7287298 0.7290958 #>  [160,] 1.2093914 1.2313187 1.2556414 #>  [161,] 1.0089855 1.0538522 1.0785440 #>  [162,] 0.6757462 0.7240766 0.7659614 #>  [163,] 0.7687130 0.8082824 0.8171735 #>  [164,] 0.6233329 0.6304890 0.6313050 #>  [165,] 1.4616999 1.5174514 1.5721274 #>  [166,] 0.6721577 0.6994169 0.7038862 #>  [167,] 1.2768195 1.2814395 1.3036571 #>  [168,] 0.8235315 0.8249689 0.8283192 #>  [169,] 0.8198426 0.8202999 0.8479362 #>  [170,] 0.7108881 0.7346666 0.7360583 #>  [171,] 0.8718665 0.8740571 0.8776989 #>  [172,] 0.5846812 0.5958303 0.6011192 #>  [173,] 0.6626524 0.6653122 0.7266105 #>  [174,] 1.1819443 1.2076964 1.2120583 #>  [175,] 1.1313783 1.1891393 1.2026427 #>  [176,] 0.6859557 0.6869942 0.6878991 #>  [177,] 0.5137588 0.5225285 0.5557493 #>  [178,] 0.8959700 0.9796314 1.0364860 #>  [179,] 0.5770327 0.5882276 0.6009565 #>  [180,] 2.0204604 2.0694040 2.0749518 #>  [181,] 1.1863894 1.1923790 1.2206770 #>  [182,] 0.9832776 0.9884910 1.0023324 #>  [183,] 0.7100166 0.7131537 0.7155197 #>  [184,] 0.7992771 0.8237054 0.8714729 #>  [185,] 0.5218213 0.5985584 0.6034474 #>  [186,] 0.8047047 0.8144011 0.8541661 #>  [187,] 0.6924126 0.7150785 0.7278058 #>  [188,] 0.7622161 0.7656029 0.7953220 #>  [189,] 1.1427388 1.1431726 1.1546493 #>  [190,] 0.7701470 0.7790233 0.8067909 #>  [191,] 1.1606581 1.2173280 1.2795418 #>  [192,] 0.7788434 0.7821499 0.7919436 #>  [193,] 0.6816691 0.6918275 0.7467989 #>  [194,] 0.5596184 0.5606233 0.5652899 #>  [195,] 0.9206690 0.9298060 0.9355456 #>  [196,] 1.0049236 1.0205277 1.0592125 #>  [197,] 0.5426305 0.5825898 0.5862209 #>  [198,] 0.5791427 0.5835731 0.5858753 #>  [199,] 1.3948949 1.3987834 1.4445324 #>  [200,] 0.5557377 0.5578691 0.6039726 #>  [201,] 0.5761745 0.6501416 0.6598097 #>  [202,] 0.8067877 0.8212055 0.8279510 #>  [203,] 0.8736216 0.8950173 0.9058240 #>  [204,] 0.6050252 0.6418883 0.6550492 #>  [205,] 1.2295807 1.2576538 1.2583885 #>  [206,] 0.6541173 0.6681480 0.6944895 #>  [207,] 0.5521316 0.5557493 0.5694808 #>  [208,] 1.3707962 1.6141597 1.6176440 #>  [209,] 0.5460592 0.5746612 0.5791427 #>  [210,] 0.7617271 0.7680534 0.7719148 #>  [211,] 0.6542407 0.6598097 0.6727760 #>  [212,] 0.8612413 0.8770007 0.8870729 #>  [213,] 0.6685580 0.7420385 0.7763022 #>  [214,] 0.5704412 0.5713980 0.6179979 #>  [215,] 0.6764995 0.6915562 0.7127908 #>  [216,] 0.7162156 0.7504386 0.7673691 #>  [217,] 0.5232179 0.5243456 0.5473133 #>  [218,] 0.5179519 0.5222946 0.5700427 #>  [219,] 0.6831924 0.6933770 0.6987602 #>  [220,] 0.6333113 0.6336623 0.6593403 #>  [221,] 0.7588550 0.7775146 0.7841923 #>  [222,] 0.8017039 0.8022013 0.8048482 #>  [223,] 1.0557908 1.0800392 1.0892926 #>  [224,] 0.8168935 0.8647643 0.8731232 #>  [225,] 0.6919281 0.7096687 0.7864836 #>  [226,] 1.0455905 1.0628956 1.0861493 #>  [227,] 1.0612889 1.1025347 1.1203133 #>  [228,] 0.8592549 0.8789890 0.8801880 #>  [229,] 0.5992759 0.6214324 0.6271443 #>  [230,] 1.4684446 1.4924547 1.5477174 #>  [231,] 0.6135916 0.6156317 0.6643319 #>  [232,] 0.6229712 0.6605482 0.6674715 #>  [233,] 0.7380231 0.7551373 0.7783057 #>  [234,] 1.0565866 1.0614860 1.1141702 #>  [235,] 1.1990580 1.2107537 1.2539164 #>  [236,] 0.7419817 0.7677127 0.7880697 #>  [237,] 0.7717364 0.7745483 0.7754042 #>  [238,] 1.1208359 1.1692810 1.1800529 #>  [239,] 0.9618203 0.9878033 1.0345625 #>  [240,] 0.8605979 0.9219014 0.9260924 #>  [241,] 0.6337434 0.6370999 0.6386616 #>  [242,] 0.5729184 0.5931668 0.6229873 #>  [243,] 0.9142293 0.9200378 0.9539042 #>  [244,] 0.8382138 0.8575791 0.8736216 #>  [245,] 0.6022413 0.6272293 0.6304719 #>  [246,] 0.4371204 0.4519493 0.4763411 #>  [247,] 1.4786565 1.4843226 1.4928706 #>  [248,] 1.1699997 1.2653772 1.2985542 #>  [249,] 0.5501888 0.6453203 0.6783014 #>  [250,] 1.4210078 1.4473385 1.4500830 #>  [251,] 0.7482518 0.7620870 0.7989422 #>  [252,] 1.2218823 1.2487337 1.2651450 #>  [253,] 0.8999477 0.9029546 0.9677809 #>  [254,] 1.0605155 1.1967939 1.2252802 #>  [255,] 1.2437312 1.2448090 1.2488599 #>  [256,] 1.4472249 1.4762157 1.4778053 #>  [257,] 0.8705738 0.8743691 0.9120959 #>  [258,] 0.8659277 0.8660807 0.8669018 #>  [259,] 1.5801845 1.5963285 1.6262633 #>  [260,] 1.0736334 1.0834241 1.1798489 #>  [261,] 0.7478492 0.7888394 0.7920457 #>  [262,] 0.6141430 0.6328031 0.6370944 #>  [263,] 0.8771256 0.8825770 0.8890167 #>  [264,] 0.5194277 0.5246158 0.5324600 #>  [265,] 1.4875086 1.4909569 1.5096642 #>  [266,] 0.8152250 0.8434764 0.8517215 #>  [267,] 0.6737327 0.6993310 0.6994048 #>  [268,] 0.7114841 0.7225600 0.7300092 #>  [269,] 0.5218213 0.5240442 0.5570848 #>  [270,] 0.9300854 0.9702421 0.9946128 #>  [271,] 0.6451166 0.6662427 0.7271567 #>  [272,] 0.7558682 0.9200208 0.9482881 #>  [273,] 1.1026412 1.1506770 1.1986956 #>  [274,] 2.2658752 2.2668154 2.2932933 #>  [275,] 0.5131093 0.5465711 0.5519121 #>  [276,] 0.6594803 0.6768154 0.6929480 #>  [277,] 0.9393172 0.9702215 0.9704283 #>  [278,] 0.5965604 0.6182062 0.6251626 #>  [279,] 1.0348800 1.0530027 1.0548111 #>  [280,] 0.9378431 0.9924480 1.0477207 #>  [281,] 1.0691395 1.0860069 1.1019515 #>  [282,] 1.4818429 1.5489017 1.5584826 #>  [283,] 0.8969979 0.9400798 0.9939801 #>  [284,] 0.7645820 0.7701564 0.7853868 #>  [285,] 0.6250507 0.6409155 0.6429299 #>  [286,] 0.6531734 0.6577293 0.7326011 #>  [287,] 0.8089842 0.8240828 0.8388897 #>  [288,] 0.9161174 0.9223275 0.9235403 #>  [289,] 0.6597154 0.6640741 0.6993310 #>  [290,] 1.1230701 1.1621211 1.1942615 #>  [291,] 0.5992808 0.6123358 0.6226461 #>  [292,] 1.1510527 1.1711552 1.1814694 #>  [293,] 0.7722860 0.8520193 0.8702193 #>  [294,] 0.6435589 0.6560564 0.6916559 #>  [295,] 0.5258108 0.5649370 0.5890305 #>  [296,] 0.8222286 0.8738491 0.8851107 #>  [297,] 0.7174918 0.7564149 0.7680534 #>  [298,] 0.6628199 0.6694307 0.6700224 #>  [299,] 0.8325139 0.8352397 0.8406132 #>  [300,] 0.8433463 0.9733627 0.9750751 #>  [301,] 0.8947064 0.8951026 0.8956492 #>  [302,] 1.0425240 1.0725057 1.1829959 #>  [303,] 1.3922346 1.4175112 1.4303798 #>  [304,] 0.6452326 0.6480840 0.6621922 #>  [305,] 0.5754223 0.6113916 0.6144553 #>  [306,] 0.6800106 0.8150319 0.8170298 #>  [307,] 0.6804203 0.6885744 0.6999392 #>  [308,] 0.8404210 0.8832859 0.8921384 #>  [309,] 0.9014225 0.9197764 1.0259928 #>  [310,] 1.9617745 1.9651043 1.9913546 #>  [311,] 0.6174531 0.6196682 0.6387606 #>  [312,] 0.7845100 0.7951173 0.7980494 #>  [313,] 0.8057038 0.8233448 0.8322304 #>  [314,] 0.7051281 0.7157954 0.7181447 #>  [315,] 0.7346666 0.7444149 0.7635248 #>  [316,] 0.6060237 0.6162332 0.6202699 #>  [317,] 0.5097468 0.5288416 0.5325051 #>  [318,] 0.9294858 0.9607273 1.0185192 #>  [319,] 0.7535961 0.7572446 0.7602896 #>  [320,] 0.9526575 0.9676288 0.9959417 #>  [321,] 1.0002893 1.0060970 1.0273897 #>  [322,] 1.1760579 1.1923203 1.2204804 #>  [323,] 0.8988852 0.8989069 0.9118014 #>  [324,] 0.8468315 0.8764557 0.8823249 #>  [325,] 0.6559040 0.6620518 0.6651776 #>  [326,] 0.9539751 0.9745271 0.9773662 #>  [327,] 0.7670299 0.7892028 0.7976156 #>  [328,] 1.7499195 1.7531118 1.7659691 #>  [329,] 1.0736334 1.0847188 1.1291551 #>  [330,] 0.6882587 0.7041084 0.7196825 #>  [331,] 0.6943131 0.7052746 0.7071739 #>  [332,] 0.6360933 0.6462391 0.6497605 #>  [333,] 0.6863163 0.7229695 0.7414229 #>  [334,] 0.7807869 0.7845168 0.8633038 #>  [335,] 0.6201964 0.6203217 0.6615527 #>  [336,] 0.5882569 0.5890305 0.6098724 #>  [337,] 0.6021410 0.6241847 0.6550492 #>  [338,] 1.4292412 1.4534723 1.5570138 #>  [339,] 0.8761457 0.9401235 0.9787645 #>  [340,] 0.6309471 0.6833368 0.6974513 #>  [341,] 0.9623328 1.0058668 1.0074828 #>  [342,] 0.6580988 0.6703705 0.7326011 #>  [343,] 0.5400213 0.5405902 0.5482370 #>  [344,] 0.5570848 0.5982715 0.6439753 #>  [345,] 0.8198152 0.8313339 0.8493569 #>  [346,] 0.7095800 0.7157843 0.7207543 #>  [347,] 0.5189760 0.5232179 0.5661164 #>  [348,] 0.7650004 0.7851644 0.8159160 #>  [349,] 1.0544779 1.0743902 1.2318797 #>  [350,] 0.8319861 0.8388067 0.8404836 #>  [351,] 1.2361865 1.2429250 1.2602225 #>  [352,] 0.8676969 0.8952482 0.9037302 #>  [353,] 1.3360647 1.4224385 1.4548295 #>  [354,] 1.2396821 1.2783272 1.3064367 #>  [355,] 0.5398482 0.5721248 0.5741157 #>  [356,] 0.7954430 0.8290888 0.8702741 #>  [357,] 0.6968270 0.7160482 0.7376919 #>  [358,] 0.5742944 0.5818563 0.6336996 #>  [359,] 0.6008462 0.6280186 0.6307834 #>  [360,] 0.4996912 0.5743189 0.5894852 #>  [361,] 0.5910014 0.5910346 0.6250859 #>  [362,] 0.7777525 0.8457194 0.9055225 #>  [363,] 0.6503458 0.6541122 0.6585099 #>  [364,] 1.0361401 1.0653292 1.1203451 #>  [365,] 0.7036223 0.7161262 0.7328319 #>  [366,] 1.0925544 1.1118273 1.1671282 #>  [367,] 0.7807869 0.7875080 0.8027907 #>  [368,] 1.1570545 1.1952520 1.1956069 #>  [369,] 0.6749353 0.6818377 0.7009247 #>  [370,] 1.0198081 1.0600902 1.0888265 #>  [371,] 0.7541132 0.7691889 0.8204806 #>  [372,] 0.6314640 0.6558178 0.6606326 #>  [373,] 0.7036595 0.7175116 0.7860624 #>  [374,] 2.1698917 2.2416224 2.2589534 #>  [375,] 0.6880611 0.7048888 0.7105710 #>  [376,] 0.5354308 0.5626250 0.5696255 #>  [377,] 0.5483717 0.5518659 0.5652559 #>  [378,] 1.3459084 1.4141992 1.4502682 #>  [379,] 0.9217319 0.9254085 0.9299128 #>  [380,] 1.5960042 1.6002309 1.6084539 #>  [381,] 0.5069982 0.5527998 0.5598889 #>  [382,] 0.8448059 0.8514475 0.8670271 #>  [383,] 0.6229000 0.6388276 0.6499953 #>  [384,] 1.2073556 1.2296689 1.2652180 #>  [385,] 0.6433032 0.6518106 0.6621926 #>  [386,] 0.7008661 0.7059969 0.7283386 #>  [387,] 1.4095979 1.5009565 1.5194139 #>  [388,] 0.7665269 0.7777589 0.7899283 #>  [389,] 1.3766332 1.3855522 1.3926060 #>  [390,] 0.5456250 0.5578898 0.6123959 #>  [391,] 1.4828447 1.4877927 1.5048957 #>  [392,] 0.7846228 0.7892625 0.7922531 #>  [393,] 0.9516774 0.9682656 1.0214516 #>  [394,] 1.1772781 1.1877023 1.2362356 #>  [395,] 1.1009524 1.2174639 1.2343266 #>  [396,] 0.8319218 0.8569658 0.8846019 #>  [397,] 0.8424373 0.8559487 0.8644651 #>  [398,] 0.8913806 0.9004634 0.9069602 #>  [399,] 1.3929024 1.4127868 1.4349287 #>  [400,] 1.0771750 1.0819807 1.1455165 #>  [401,] 0.5511167 0.5636673 0.5647924 #>  [402,] 0.7235669 0.7701206 0.7757607 #>  [403,] 0.5424646 0.5535756 0.5958036 #>  [404,] 0.9602615 0.9609521 0.9700214 #>  [405,] 0.9074713 0.9363919 0.9614575 #>  [406,] 0.4789001 0.4809309 0.5416257 #>  [407,] 0.6014184 0.6453987 0.6482748 #>  [408,] 1.8438934 1.8499127 1.8744516 #>  [409,] 0.7860624 0.8160037 0.8550086 #>  [410,] 0.6757577 0.7049714 0.7393873 #>  [411,] 0.6092421 0.6105505 0.6198539 #>  [412,] 0.5074470 0.5085829 0.5140278 #>  [413,] 0.5408695 0.5902875 0.5997382 #>  [414,] 1.1017652 1.1078181 1.1804890 #>  [415,] 0.6983773 0.7445439 0.7448935 #>  [416,] 0.8237971 0.8449966 0.8621819 #>  [417,] 0.7114302 0.7154212 0.7413690 #>  [418,] 0.8457616 0.8838627 0.9074225 #>  [419,] 0.7793249 0.7967961 0.8196164 #>  [420,] 1.1596871 1.1765319 1.2036378 #>  [421,] 0.8584644 0.8620416 0.8851107 #>  [422,] 0.9092685 0.9280911 0.9414407 #>  [423,] 0.5557377 0.5716936 0.6146372 #>  [424,] 0.9676111 0.9701419 0.9882811 #>  [425,] 0.6646183 0.6726100 0.6801906 #>  [426,] 0.5339270 0.5432774 0.5730035 #>  [427,] 0.7692991 0.7928768 0.8754856 #>  [428,] 2.0587619 2.0905179 2.0975611 #>  [429,] 1.2060544 1.2846109 1.3640997 #>  [430,] 0.6479132 0.7477448 0.7748020 #>  [431,] 0.5802528 0.5809487 0.6057094 #>  [432,] 1.1796561 1.2394457 1.3000782 #>  [433,] 0.7418976 0.7454514 0.7795770 #>  [434,] 0.9147704 0.9393745 0.9568413 #>  [435,] 0.7063428 0.8004034 0.8144299 #>  [436,] 0.6941012 0.7122063 0.7530836 #>  [437,] 0.5704276 0.5724926 0.5729782 #>  [438,] 1.2523472 1.2538711 1.2788447 #>  [439,] 0.7687977 0.7742435 0.8753143 #>  [440,] 0.5999547 0.6446773 0.6457773 #>  [441,] 0.9073379 0.9878033 1.0085987 #>  [442,] 1.1395834 1.2084802 1.2232158 #>  [443,] 0.6885849 0.7079957 0.7133029 #>  [444,] 0.6249295 0.6526159 0.6591370 #>  [445,] 1.1534727 1.2155114 1.2229782 #>  [446,] 0.7676981 0.7710884 0.7712676 #>  [447,] 0.8533837 0.8933690 0.9023371 #>  [448,] 1.3816140 1.4492035 1.4963114 #>  [449,] 0.6556809 0.6852159 0.6904861 #>  [450,] 0.6027037 0.6085293 0.6709511 #>  [451,] 0.6938075 0.7407056 0.7584919 #>  [452,] 0.5593995 0.5614941 0.5627290 #>  [453,] 0.4786528 0.5672049 0.5672148 #>  [454,] 0.5696255 0.5942179 0.6332046 #>  [455,] 1.1486103 1.1506770 1.1949200 #>  [456,] 0.5682325 0.5883255 0.5908652 #>  [457,] 0.4569881 0.4771530 0.4868733 #>  [458,] 1.2009537 1.2508458 1.3211556 #>  [459,] 0.6899226 0.7654472 0.7933649 #>  [460,] 1.0503209 1.1170957 1.1491785 #>  [461,] 0.9098028 0.9104124 0.9469539 #>  [462,] 0.5669713 0.5950993 0.5973878 #>  [463,] 0.8753298 0.9274014 0.9515346 #>  [464,] 1.1157987 1.1217176 1.1379320 #>  [465,] 0.7794631 0.7817427 0.7850899 #>  [466,] 0.8776989 0.8875375 0.9338844 #>  [467,] 0.6610730 0.6681432 0.7049075 #>  [468,] 0.6555521 0.6619150 0.6842067 #>  [469,] 1.4175112 1.4374870 1.4441436 #>  [470,] 1.0669753 1.0912390 1.1733893 #>  [471,] 0.7524963 0.7717364 0.7991995 #>  [472,] 0.7440060 0.7620013 0.7639201 #>  [473,] 0.6046100 0.6223870 0.6850918 #>  [474,] 0.6144553 0.6274192 0.6317866 #>  [475,] 1.1814694 1.1887158 1.2239230 #>  [476,] 0.9890464 0.9914821 0.9983024 #>  [477,] 0.5764663 0.5848560 0.6034474 #>  [478,] 0.8672449 0.9017760 0.9018789 #>  [479,] 0.7657995 0.7730291 0.7752574 #>  [480,] 0.5909552 0.5994868 0.6007187 #>  [481,] 0.5960407 0.6205652 0.6880698 #>  [482,] 0.7835007 0.7915309 0.7998295 #>  [483,] 0.7141968 0.7288543 0.7381103 #>  [484,] 1.5381696 1.5492691 1.5545486 #>  [485,] 0.8085637 0.8103715 0.8340858 #>  [486,] 0.7012934 0.7144698 0.7240766 #>  [487,] 0.9230013 0.9437740 0.9624609 #>  [488,] 0.8353649 0.8549561 0.8660138 #>  [489,] 1.6086686 1.6259682 1.6602191 #>  [490,] 0.8980701 0.9055363 0.9238546 #>  [491,] 0.4789029 0.5110079 0.5781169 #>  [492,] 0.6336923 0.7096631 0.7459129 #>  [493,] 1.5261036 1.5714135 1.5869488 #>  [494,] 1.0993698 1.1529893 1.1537603 #>  [495,] 0.5651353 0.5764663 0.5784332 #>  [496,] 0.5817762 0.5857739 0.5928107 #>  [497,] 0.6457748 0.6642713 0.6648085 #>  [498,] 1.0615903 1.0653292 1.0704088 #>  [499,] 0.7534195 0.7614039 0.7616298 #>  [500,] 0.8431450 0.9000017 0.9000385 #>  [501,] 1.2842762 1.3008964 1.3021851 #>  [502,] 0.6313050 0.6315009 0.6706960 #>  [503,] 0.5970748 0.6161625 0.6458729 #>  [504,] 1.3665107 1.5239847 1.5512407 #>  [505,] 0.5973878 0.6072654 0.6236160 #>  [506,] 0.6661913 0.7400270 0.7700654 #>  [507,] 0.4985570 0.5447432 0.5821272 #>  [508,] 0.7248737 0.7505091 0.7572446 #>  [509,] 0.9155180 0.9425447 0.9584064 #>  [510,] 1.4943602 1.5699976 1.6299051 #>  [511,] 0.5140278 0.5275454 0.5355005 #>  [512,] 1.0043735 1.0343591 1.0518637 #>  [513,] 0.7247602 0.7337862 0.7386199 #>  [514,] 0.5966885 0.6228441 0.6251581 #>  [515,] 1.1124419 1.1195610 1.1386404 #>  [516,] 1.3823112 1.3975161 1.4043618 #>  [517,] 0.7329217 0.7444304 0.7448935 #>  [518,] 1.0368266 1.0504111 1.0522302 #>  [519,] 0.6135174 0.6149601 0.6338556 #>  [520,] 0.8198152 0.8267141 0.8659946 #>  [521,] 0.4891539 0.5235872 0.5256944 #>  [522,] 0.9635550 1.0336388 1.0366009 #>  [523,] 1.0145764 1.0344742 1.0477628 #>  [524,] 0.8751181 0.9209766 0.9785296 #>  [525,] 1.0617627 1.0788509 1.1213197 #>  [526,] 1.1655841 1.1780766 1.1904503 #>  [527,] 2.0010917 2.0749150 2.1131478 #>  [528,] 0.7562352 0.7641880 0.7719467 #>  [529,] 1.0242264 1.0746578 1.0826059 #>  [530,] 1.1393663 1.1617176 1.1985682 #>  [531,] 1.1608150 1.1729075 1.2203816 #>  [532,] 2.5262203 2.5273686 2.6100900 #>  [533,] 0.4872628 0.4907996 0.5587166 #>  [534,] 0.7253652 0.7437849 0.7659800 #>  [535,] 0.5482191 0.5639746 0.5664964 #>  [536,] 0.8158878 0.8505550 0.9308130 #>  [537,] 0.6635077 0.6777638 0.7086041 #>  [538,] 0.7588007 0.7603440 0.7742435 #>  [539,] 0.8096278 0.8153108 0.9767769 #>  [540,] 0.5699772 0.5740952 0.5834436 #>  [541,] 0.7247602 0.7312143 0.8199662 #>  [542,] 0.6063359 0.6618954 0.6963415 #>  [543,] 0.8185371 0.8445616 0.8528579 #>  [544,] 0.8160204 0.8487347 0.8673344 #>  [545,] 0.5967867 0.6257806 0.6314090 #>  [546,] 0.6862685 0.7038275 0.7203133 #>  [547,] 0.7162099 0.7171399 0.7262751 #>  [548,] 0.5821272 0.6129909 0.6225136 #>  [549,] 0.6900631 0.7223956 0.7620719 #>  [550,] 1.0864606 1.0880151 1.1135628 #>  [551,] 0.8454389 0.8547442 0.8742379 #>  [552,] 0.8875375 0.8896104 0.9004634 #>  [553,] 0.6617464 0.6725148 0.6777638 #>  [554,] 1.4883536 1.5957792 1.6362332 #>  [555,] 0.6563030 0.6590473 0.6612733 #>  [556,] 1.0615903 1.0622204 1.0899279 #>  [557,] 0.7697998 0.7725121 0.7730722 #>  [558,] 0.8267148 0.9782313 1.0216452 #>  [559,] 0.6231919 0.6378069 0.6665560 #>  [560,] 0.6676759 0.6821129 0.6980749 #>  [561,] 0.6473393 0.6536386 0.7373403 #>  [562,] 0.8399622 0.8458083 0.8822620 #>  [563,] 0.6332547 0.6560698 0.6681171 #>  [564,] 0.8237054 0.8477325 0.9198295 #>  [565,] 0.9062639 0.9558143 1.0381904 #>  [566,] 0.9779375 0.9825040 1.0098124 #>  [567,] 0.6017092 0.6078117 0.6288813 #>  [568,] 0.6276742 0.6607649 0.7019213 #>  [569,] 0.6450176 0.6615662 0.6901113 #>  [570,] 0.5809487 0.6047057 0.6082076 #>  [571,] 0.6775523 0.6813331 0.6961370 #>  [572,] 0.7731688 0.8487742 0.8705035 #>  [573,] 0.6967940 0.7210208 0.7454514 #>  [574,] 0.9469842 0.9591797 0.9653947 #>  [575,] 0.7467989 0.7545943 0.7933649 #>  [576,] 0.5630024 0.5647258 0.5672148 #>  [577,] 0.8008168 0.8496007 0.9295336 #>  [578,] 0.7693043 0.8117581 0.8448464 #>  [579,] 0.6964153 0.7058938 0.7078000 #>  [580,] 0.5372039 0.5439449 0.5584724 #>  [581,] 1.1512343 1.2583814 1.2786788 #>  [582,] 0.6612733 0.6647689 0.6893928 #>  [583,] 0.5241491 0.5437051 0.5484135 #>  [584,] 0.5540681 0.6572929 0.6594479 #>  [585,] 1.0486903 1.1096647 1.1473866 #>  [586,] 0.9882694 1.1165813 1.1485202 #>  [587,] 0.6774138 0.6875551 0.7442190 #>  [588,] 1.0616415 1.0721961 1.1691563 #>  [589,] 0.5256661 0.5289644 0.5628365 #>  [590,] 1.2205609 1.2421270 1.2561108 #>  [591,] 1.5400110 1.5479703 1.5597250 #>  [592,] 0.9994317 1.0345185 1.0370780 #>  [593,] 0.6991892 0.7073436 0.7273214 #>  [594,] 0.9619119 1.0240389 1.0359169 #>  [595,] 0.7845100 0.7971560 0.8078429 #>  [596,] 0.5787623 0.6180253 0.6469025 #>  [597,] 0.7927551 0.8125518 0.8231040 #>  [598,] 0.8764223 0.8815677 0.9226117 #>  [599,] 0.6408979 0.6563265 0.6565797 #>  [600,] 1.0425115 1.0595107 1.0667413 #>  [601,] 0.7526025 0.7602851 0.7626178 #>  [602,] 0.8279909 0.8363286 0.8797174 #>  [603,] 0.5994868 0.6024918 0.6046190 #>  [604,] 0.4844312 0.4955157 0.5198857 #>  [605,] 0.6186975 0.6485714 0.6573254 #>  [606,] 0.7819503 0.7928378 0.8043531 #>  [607,] 1.2410962 1.2437602 1.2439333 #>  [608,] 0.6408433 0.6515345 0.6689682 #>  [609,] 0.5704215 0.6279854 0.6590473 #>  [610,] 1.6094768 1.6108162 1.6298917 #>  [611,] 0.9767769 1.0167508 1.0977857 #>  [612,] 0.7980223 0.8239984 0.8250816 #>  [613,] 0.6718494 0.6875551 0.6919281 #>  [614,] 0.5593225 0.5793365 0.6079135 #>  [615,] 0.4818327 0.4891539 0.5256661 #>  [616,] 1.5505222 1.5926211 1.6220918 #>  [617,] 0.6383539 0.6439120 0.6630961 #>  [618,] 1.4085910 1.4379822 1.4886643 #>  [619,] 0.9926408 1.0616810 1.1225953 #>  [620,] 0.8176453 0.8282937 0.8886644 #>  [621,] 0.9257454 0.9290334 0.9422082 #>  [622,] 0.7819732 0.7954430 0.8009699 #>  [623,] 0.5666862 0.5672440 0.5740067 #>  [624,] 1.4875922 1.4972065 1.5048458 #>  [625,] 1.1221206 1.1274130 1.1480688 #>  [626,] 0.8359799 0.8586241 0.8876100 #>  [627,] 0.4569881 0.4629106 0.4895099 #>  [628,] 1.1968027 1.2375482 1.2878974 #>  [629,] 1.5304827 1.5511506 1.5638936 #>  [630,] 0.5479738 0.5515561 0.5518659 #>  [631,] 1.5111475 1.5360287 1.5560707 #>  [632,] 0.7235669 0.7257831 0.7434416 #>  [633,] 0.7686938 0.7826500 0.8125389 #>  [634,] 0.6860529 0.7049286 0.7254453 #>  [635,] 1.1356901 1.1363977 1.1722021 #>  [636,] 1.6980906 1.7485351 1.7805267 #>  [637,] 0.8013397 0.8605681 0.8882029 #>  [638,] 0.8673344 0.8815566 0.9099989 #>  [639,] 1.0334768 1.1674369 1.2106855 #>  [640,] 1.2081791 1.2525037 1.3375542 #>  [641,] 0.6291793 0.6625722 0.6752793 #>  [642,] 0.5604979 0.5606233 0.5620804 #>  [643,] 0.8770783 0.8971339 0.9058263 #>  [644,] 1.4137658 1.4321012 1.4879238 #>  [645,] 0.5562677 0.5592037 0.6146086 #>  [646,] 1.0996227 1.1054306 1.1140110 #>  [647,] 0.6357168 0.6360933 0.6541122 #>  [648,] 1.4806357 1.4810798 1.4911379 #>  [649,] 0.9243285 0.9372296 1.0010246 #>  [650,] 1.0874832 1.1171587 1.1259687 #>  [651,] 0.5103525 0.5920035 0.6572339 #>  [652,] 0.9363277 0.9399600 0.9666460 #>  [653,] 0.7825501 0.8308333 0.8345242 #>  [654,] 0.4806257 0.4863547 0.4996912 #>  [655,] 0.6466024 0.6596178 0.7215252 #>  [656,] 0.6307834 0.6843629 0.6885073 #>  [657,] 0.5074470 0.5515886 0.5793365 #>  [658,] 0.6378617 0.6420237 0.6725318 #>  [659,] 0.7052746 0.7147273 0.7326900 #>  [660,] 0.6594736 0.6703015 0.6777440 #>  [661,] 0.8022871 0.8180311 0.8183737 #>  [662,] 1.0984769 1.1103467 1.1550984 #>  [663,] 0.6635077 0.7032007 0.7157843 #>  [664,] 1.4904191 1.5549141 1.5765536 #>  [665,] 0.6519719 0.6626190 0.6745747 #>  [666,] 0.6158304 0.7074511 0.7090391 #>  [667,] 0.6935579 0.7065787 0.7127908 #>  [668,] 0.7017065 0.7178708 0.7484992 #>  [669,] 0.8439341 0.8492235 0.8541900 #>  [670,] 1.9294222 1.9333575 2.0201173 #>  [671,] 0.8806450 0.8837030 0.8966701 #>  [672,] 0.7904778 0.8538019 0.8816684 #>  [673,] 0.6089156 0.6114181 0.6462134 #>  [674,] 1.1377923 1.1903373 1.1934671 #>  [675,] 0.9600437 0.9702363 0.9999900 #>  [676,] 0.8247554 0.8579654 0.9085854 #>  [677,] 0.7377775 0.7777544 0.7892439 #>  [678,] 0.7008330 0.7040804 0.7079217 #>  [679,] 0.8767673 0.8772204 0.9020767 #>  [680,] 0.5494312 0.5691183 0.5897962 #>  [681,] 0.5589401 0.5873715 0.6055804 #>  [682,] 0.7150047 0.7291237 0.7617271 #>  [683,] 0.6644178 0.6748338 0.6878991 #>  [684,] 0.8065490 0.8745432 0.8794170 #>  [685,] 0.6140383 0.6209437 0.6460955 #>  [686,] 0.8858478 0.8966701 0.9057307 #>  [687,] 0.6900279 0.7420385 0.8230467 #>  [688,] 0.7762597 0.7890128 0.8015642 #>  [689,] 1.0195234 1.1216178 1.1937617 #>  [690,] 0.7659800 0.8100529 0.8461882 #>  [691,] 0.6854161 0.6893834 0.7257976 #>  [692,] 0.8006179 0.8010006 0.8574266 #>  [693,] 0.6566929 0.6592935 0.6658073 #>  [694,] 0.7922009 0.7950528 0.8122076 #>  [695,] 0.9309842 0.9361434 0.9457543 #>  [696,] 0.5959279 0.6008488 0.6344415 #>  [697,] 0.5649460 0.5705900 0.5762921 #>  [698,] 0.7777422 0.8355959 0.8870819 #>  [699,] 0.8074017 0.8244606 0.8518826 #>  [700,] 0.6691273 0.7228086 0.7514214 #>  [701,] 0.4416675 0.4835713 0.5614941 #>  [702,] 1.5246309 1.5250993 1.6700976 #>  [703,] 0.6629617 0.6642713 0.6806742 #>  [704,] 0.6161617 0.6323766 0.6367875 #>  [705,] 1.0135039 1.0167508 1.0258161 #>  [706,] 0.5056599 0.5136652 0.5239225 #>  [707,] 1.4269409 1.4528911 1.4550048 #>  [708,] 0.7672032 0.8327254 0.8417376 #>  [709,] 0.6868700 0.7447043 0.7521892 #>  [710,] 0.6556940 0.6603372 0.6631790 #>  [711,] 0.5817762 0.5840481 0.5961188 #>  [712,] 1.4455238 1.4607682 1.4902975 #>  [713,] 0.7486168 0.7697531 0.7983128 #>  [714,] 1.3064830 1.3490520 1.3609314 #>  [715,] 0.5479738 0.6315642 0.6345632 #>  [716,] 0.6774138 0.7032494 0.7726654 #>  [717,] 0.8847665 0.9458940 0.9961590 #>  [718,] 0.5746765 0.5780144 0.5916516 #>  [719,] 0.6565426 0.6660602 0.7035857 #>  [720,] 0.6327114 0.6432912 0.6593207 #>  [721,] 0.6261130 0.7108881 0.7251096 #>  [722,] 0.5993714 0.6219347 0.6261819 #>  [723,] 1.2714293 1.2761044 1.2982269 #>  [724,] 0.7406153 0.7827858 0.7835375 #>  [725,] 1.2636153 1.2950369 1.3927261 #>  [726,] 0.8921384 0.9493428 0.9514043 #>  [727,] 2.0891104 2.0988071 2.1174602 #>  [728,] 1.7427251 1.7612634 1.8007512 #>  [729,] 0.8451637 0.8564395 0.8591737 #>  [730,] 0.7147256 0.7161262 0.7317048 #>  [731,] 0.6572339 0.6661816 0.6777440 #>  [732,] 0.8498092 0.8953462 0.9212065 #>  [733,] 0.8840818 0.9058263 0.9438279 #>  [734,] 0.5191217 0.5959279 0.6178053 #>  [735,] 0.6538694 0.6591370 0.6656352 #>  [736,] 1.8073290 1.8085672 1.8115494 #>  [737,] 0.4536482 0.4845951 0.5071320 #>  [738,] 0.7407752 0.7510001 0.7595550 #>  [739,] 0.7781336 0.7874836 0.7893646 #>  [740,] 1.4223086 1.4272539 1.4345792 #>  [741,] 0.8893151 0.9457543 0.9915007 #>  [742,] 0.7145709 0.7396112 0.7444304 #>  [743,] 1.2888107 1.3329890 1.3817675 #>  [744,] 1.3036603 1.3201893 1.3261474 #>  [745,] 0.9117526 0.9461540 0.9795200 #>  [746,] 1.2572706 1.3153443 1.3219236 #>  [747,] 0.9706693 1.0659621 1.1027559 #>  [748,] 0.6640741 0.7208367 0.7300210 #>  [749,] 0.7877414 0.7932228 0.7945429 #>  [750,] 0.8083600 0.8236727 0.8297242 #>  [751,] 0.7095698 0.7153317 0.7586032 #>  [752,] 2.2207353 2.2781567 2.2790495 #>  [753,] 0.6924126 0.7070969 0.7554013 #>  [754,] 1.5305455 1.5831158 1.6039306 #>  [755,] 0.8058912 0.8073589 0.8238956 #>  [756,] 0.7077074 0.7090962 0.7168126 #>  [757,] 0.7512681 0.8195388 0.8275135 #>  [758,] 0.8621037 0.8820646 0.9163814 #>  [759,] 0.6215770 0.6280397 0.6415001 #>  [760,] 0.8234540 0.8478420 0.8583675 #>  [761,] 0.7894291 0.8139216 0.8171240 #>  [762,] 0.7010134 0.7130878 0.7152066 #>  [763,] 0.6753249 0.6865517 0.7009963 #>  [764,] 1.3666873 1.3822680 1.4003774 #>  [765,] 0.8113084 0.8348751 0.8746449 #>  [766,] 0.6149423 0.6161625 0.6516934 #>  [767,] 0.6885980 0.6946125 0.7161104 #>  [768,] 0.4519493 0.4629106 0.4632650 #>  [769,] 1.4845558 1.5504697 1.5782156 #>  [770,] 0.6356873 0.6577293 0.6860807 #>  [771,] 0.7128517 0.7460711 0.7701499 #>  [772,] 1.0654329 1.0685229 1.0753158 #>  [773,] 1.2684713 1.2754179 1.3116894 #>  [774,] 0.8964562 0.9974350 1.0387351 #>  [775,] 0.5821840 0.5859265 0.5875396 #>  [776,] 0.5551821 0.5567491 0.5617691 #>  [777,] 0.4813088 0.4911753 0.5354308 #>  [778,] 0.5191217 0.5473822 0.5588387 #>  [779,] 1.7129920 1.7878073 1.7925053 #>  [780,] 1.0594263 1.1701245 1.2203744 #>  [781,] 0.6711664 0.6761378 0.6873665 #>  [782,] 0.7935263 0.8160338 0.8175912 #>  [783,] 0.6112961 0.6444876 0.6547623 #>  [784,] 0.9647918 1.0091396 1.0139246 #>  [785,] 1.2511772 1.2523496 1.2894025 #>  [786,] 0.7602851 0.7674939 0.7924642 #>  [787,] 0.5287666 0.5364841 0.5377990 #>  [788,] 0.6893276 0.7531499 0.7543146 #>  [789,] 0.5865689 0.5915261 0.6131425 #>  [790,] 0.5937282 0.6092421 0.6158410 #>  [791,] 0.7100434 0.7266770 0.7363799 #>  [792,] 0.5992808 0.6051173 0.6568859 #>  [793,] 0.8236006 0.8527914 0.8578296 #>  [794,] 0.7905301 0.7948651 0.8025507 #>  [795,] 0.8344054 0.8429054 0.8837404 #>  [796,] 0.8627346 1.1001945 1.1399438 #>  [797,] 0.6483195 0.6662427 0.6709759 #>  [798,] 1.0043138 1.0346461 1.0470990 #>  [799,] 0.6539331 0.6615659 0.7317779 #>  [800,] 1.0366009 1.0792730 1.0897362 #>  [801,] 0.7036223 0.7095698 0.7173120 #>  [802,] 1.0629841 1.1434335 1.1454330 #>  [803,] 0.5447432 0.5536558 0.5627290 #>  [804,] 0.7531020 0.7532264 0.7734322 #>  [805,] 0.6865914 0.6971818 0.7011391 #>  [806,] 1.2555711 1.3212603 1.3442423 #>  [807,] 0.6147023 0.6237160 0.6304719 #>  [808,] 1.5858533 1.6190736 1.6808092 #>  [809,] 0.7798792 0.8131680 0.8288728 #>  [810,] 0.6337421 0.6561129 0.6574949 #>  [811,] 1.3301054 1.3504344 1.3520881 #>  [812,] 0.6146145 0.6670840 0.6713635 #>  [813,] 0.7613076 0.7640731 0.7788107 #>  [814,] 1.3180094 1.3579259 1.3927111 #>  [815,] 0.6333113 0.6564652 0.6749622 #>  [816,] 0.6978285 0.7102412 0.7222923 #>  [817,] 0.6785017 0.6867288 0.6925201 #>  [818,] 0.6099997 0.6161617 0.6707772 #>  [819,] 0.7475345 0.7696312 0.8014515 #>  [820,] 0.8092895 0.8621819 0.8639836 #>  [821,] 0.5157480 0.5194277 0.5598889 #>  [822,] 0.8385401 0.9064292 0.9217130 #>  [823,] 0.9558771 1.0168915 1.0282078 #>  [824,] 0.6451166 0.6545629 0.6590783 #>  [825,] 1.1331606 1.1437051 1.1573543 #>  [826,] 0.8244246 0.8625524 0.8734347 #>  [827,] 0.9876092 1.0089855 1.0473738 #>  [828,] 0.5816145 0.5821245 0.5902875 #>  [829,] 0.7394314 0.8117581 0.8935168 #>  [830,] 0.7099831 0.7284374 0.7595649 #>  [831,] 1.3158441 1.3406045 1.3428040 #>  [832,] 1.0926628 1.1819443 1.1926012 #>  [833,] 1.0681265 1.0868664 1.1312595 #>  [834,] 1.0528163 1.0742713 1.1142734 #>  [835,] 0.8616688 0.8727042 0.8837234 #>  [836,] 1.1059082 1.1289329 1.1373547 #>  [837,] 0.6163433 0.6201407 0.6358919 #>  [838,] 0.6274124 0.6386616 0.6464074 #>  [839,] 0.7260054 0.7302858 0.7450133 #>  [840,] 1.0663065 1.1968417 1.2205609 #>  [841,] 0.9651652 0.9882101 0.9964577 #>  [842,] 1.5292432 1.5516059 1.6027580 #>  [843,] 1.2991866 1.3125365 1.3307219 #>  [844,] 0.9909166 1.0795523 1.0801821 #>  [845,] 1.4048352 1.4904643 1.5031894 #>  [846,] 0.5527998 0.5652342 0.5739848 #>  [847,] 0.9142588 0.9574488 0.9791345 #>  [848,] 0.8445824 0.8461923 0.8872914 #>  [849,] 0.9128998 0.9173449 0.9244479 #>  [850,] 0.6141430 0.6500180 0.6559040 #>  [851,] 1.0963204 1.1196485 1.1329699 #>  [852,] 1.0130919 1.0153285 1.1058432 #>  [853,] 0.5426305 0.5473822 0.5961188 #>  [854,] 0.5945413 0.5989309 0.6070615 #>  [855,] 0.7505316 0.7686938 0.7690127 #>  [856,] 0.6852619 0.7122063 0.7352953 #>  [857,] 0.5085829 0.5437051 0.5639746 #>  [858,] 0.8576930 0.8678566 0.8706792 #>  [859,] 1.0295704 1.0448910 1.0834241 #>  [860,] 0.7998880 0.8473913 0.8953262 #>  [861,] 1.1526658 1.1567115 1.2143747 #>  [862,] 0.9229113 0.9269937 0.9368132 #>  [863,] 1.5424075 1.5575410 1.5732576 #>  [864,] 0.8094113 0.8217711 0.8321998 #>  [865,] 0.6336404 0.6584648 0.6641545 #>  [866,] 1.2364799 1.2977233 1.3276629 #>  [867,] 1.0477999 1.0521985 1.0555509 #>  [868,] 0.8160204 0.8162378 0.8217711 #>  [869,] 0.6157143 0.6179979 0.6393457 #>  [870,] 0.5544833 0.5551641 0.5760540 #>  [871,] 0.7531053 0.7744096 0.7887121 #>  [872,] 0.6480868 0.6514130 0.6631790 #>  [873,] 1.3610281 1.3685976 1.3929656 #>  [874,] 0.6968903 0.7065625 0.7175028 #>  [875,] 0.5530773 0.5652342 0.5751441 #>  [876,] 1.1606581 1.1801985 1.2495558 #>  [877,] 1.2636153 1.2935682 1.3037417 #>  [878,] 0.7415840 0.7536032 0.7693043 #>  [879,] 0.7215488 0.7584428 0.7860282 #>  [880,] 0.6620030 0.6957156 0.7234209 #>  [881,] 0.6682059 0.6842877 0.7226135 #>  [882,] 1.2625156 1.2767390 1.2888469 #>  [883,] 0.6457739 0.6941181 0.7609667 #>  [884,] 0.7442968 0.7723785 0.7741917 #>  [885,] 0.5802528 0.5892895 0.6147790 #>  [886,] 0.7814274 0.7918673 0.8073640 #>  [887,] 1.0576050 1.0802290 1.1070560 #>  [888,] 0.6073992 0.6091643 0.6144596 #>  [889,] 0.8071269 0.8136941 0.8413097 #>  [890,] 0.6937390 0.7336385 0.8071460 #>  [891,] 0.6714188 0.6840951 0.7016805 #>  [892,] 0.5729163 0.5866919 0.6132823 #>  [893,] 1.0072007 1.0096866 1.0218735 #>  [894,] 0.6035745 0.6308840 0.6340431 #>  [895,] 0.6525002 0.6735578 0.6921982 #>  [896,] 0.4844312 0.4867597 0.4960628 #>  [897,] 0.5512842 0.5602613 0.5783890 #>  [898,] 1.3869135 1.3895350 1.4157752 #>  [899,] 1.1960630 1.1977910 1.2016139 #>  [900,] 0.8820646 0.9056000 0.9213292 #>  [901,] 0.6942762 0.7024868 0.7063428 #>  [902,] 0.5096223 0.5830090 0.6976086 #>  [903,] 1.4399614 1.4678503 1.5274850 #>  [904,] 0.7501829 0.7568072 0.7878546 #>  [905,] 0.6840200 0.6880698 0.7038862 #>  [906,] 0.5412652 0.5575626 0.5673004 #>  [907,] 1.0344742 1.0347944 1.0524186 #>  [908,] 0.5598402 0.5953920 0.6123358 #>  [909,] 0.8162899 0.8215150 0.8464029 #>  [910,] 0.4705165 0.5029389 0.5862635 #>  [911,] 0.9137937 0.9178391 0.9545429 #>  [912,] 0.7904285 0.8172677 0.8229667 #>  [913,] 0.6014169 0.6342783 0.6726100 #>  [914,] 0.6953018 0.6968671 0.6972326 #>  [915,] 1.1985682 1.2612687 1.2661228 #>  [916,] 0.6251270 0.6258964 0.6456734 #>  [917,] 0.5640228 0.6106094 0.6240290 #>  [918,] 0.8669339 0.8677668 0.8731709 #>  [919,] 0.5943029 0.6369279 0.6419256 #>  [920,] 0.8565600 0.8668430 0.8825103 #>  [921,] 0.7972709 0.7980223 0.8272415 #>  [922,] 0.5860764 0.5884435 0.6495592 #>  [923,] 0.6850455 0.7654472 0.7706749 #>  [924,] 1.7065007 1.7595070 1.8249732 #>  [925,] 1.1178787 1.1194445 1.1359168 #>  [926,] 0.4907520 0.4916085 0.4955157 #>  [927,] 0.5784332 0.6016056 0.6161719 #>  [928,] 0.7048888 0.7323566 0.7916425 #>  [929,] 0.7115772 0.8015245 0.8215053 #>  [930,] 0.6546179 0.6619326 0.6855097 #>  [931,] 1.0722065 1.0723158 1.1020991 #>  [932,] 0.9980646 1.0604965 1.0765086 #>  [933,] 0.7757607 0.7930099 0.8193365 #>  [934,] 0.5629871 0.5649593 0.5770712 #>  [935,] 1.0638464 1.0695847 1.0752060 #>  [936,] 0.6264248 0.6425354 0.7248970 #>  [937,] 0.6632443 0.6921858 0.6961303 #>  [938,] 1.3328130 1.3545681 1.3579707 #>  [939,] 0.8268073 0.9011029 0.9029088 #>  [940,] 0.9664973 0.9796088 1.0266497 #>  [941,] 0.7978928 0.8017039 0.8084930 #>  [942,] 0.8793117 0.9010832 0.9217125 #>  [943,] 1.1561239 1.1920915 1.1952666 #>  [944,] 1.0224345 1.0242264 1.0463134 #>  [945,] 1.1382190 1.2527440 1.2535125 #>  [946,] 0.8071421 0.8255702 0.9097442 #>  [947,] 0.6516008 0.7321110 0.7468037 #>  [948,] 0.6609321 0.6757462 0.7089911 #>  [949,] 0.6061783 0.6250507 0.6546214 #>  [950,] 0.8262618 0.8404210 0.9108580 #>  [951,] 0.8081213 0.8137469 0.8434764 #>  [952,] 0.6655876 0.6944895 0.7246373 #>  [953,] 0.8237289 0.8324806 0.8396353 #>  [954,] 0.9336559 0.9448788 0.9609628 #>  [955,] 0.4637480 0.4705165 0.4895099 #>  [956,] 1.2063945 1.2768583 1.2840039 #>  [957,] 0.8466367 0.8496007 0.8640619 #>  [958,] 0.7870399 0.7887121 0.8228038 #>  [959,] 0.5983014 0.6042603 0.6072989 #>  [960,] 1.1519308 1.1575222 1.1754310 #>  [961,] 1.0534669 1.0594263 1.0608318 #>  [962,] 0.5561521 0.5857739 0.6251021 #>  [963,] 0.8132124 0.8205225 0.8508148 #>  [964,] 1.0106294 1.0158536 1.0278107 #>  [965,] 1.0498917 1.0525609 1.0756027 #>  [966,] 0.6316439 0.6455623 0.6607649 #>  [967,] 0.5729782 0.6133253 0.6147553 #>  [968,] 0.5599074 0.5757744 0.5953842 #>  [969,] 0.6953018 0.7089360 0.7338871 #>  [970,] 0.7654577 0.8152321 0.8400739 #>  [971,] 0.7390628 0.7879035 0.7952061 #>  [972,] 0.8348751 0.8631450 0.8759023 #>  [973,] 0.6865588 0.7067785 0.7140006 #>  [974,] 0.5779029 0.5808027 0.5971503 #>  [975,] 0.9033908 0.9270503 0.9353552 #>  [976,] 0.9457776 0.9532405 1.0476685 #>  [977,] 0.9850920 1.0021861 1.0223407 #>  [978,] 0.6570430 0.6571258 0.6726350 #>  [979,] 0.6860807 0.7042146 0.7133029 #>  [980,] 0.7613076 0.7646777 0.7708042 #>  [981,] 0.7773028 0.7962490 0.8501908 #>  [982,] 1.3356171 1.3676695 1.3976510 #>  [983,] 0.5873715 0.5922590 0.5944336 #>  [984,] 0.7526279 0.7860282 0.7867425 #>  [985,] 1.0762780 1.3243189 1.3385517 #>  [986,] 1.0800934 1.1162436 1.1803477 #>  [987,] 0.9394888 0.9895079 1.0984208 #>  [988,] 0.6920286 0.7220081 0.7437893 #>  [989,] 1.4046873 1.4340445 1.4666231 #>  [990,] 1.2089288 1.2304501 1.2698035 #>  [991,] 1.2740422 1.3739619 1.3900003 #>  [992,] 0.7562352 0.7934426 0.8084930 #>  [993,] 0.8052861 0.8071302 0.8146468 #>  [994,] 0.7117729 0.7124551 0.7153672 #>  [995,] 0.6646489 0.6768659 0.7024389 #>  [996,] 0.8212676 0.8524414 0.8569410 #>  [997,] 1.0598168 1.0980638 1.1330660 #>  [998,] 0.6840467 0.6907489 0.7057053 #>  [999,] 0.6776092 0.7289566 0.7317779 #> [1000,] 0.9452377 1.0298628 1.0511209 #>"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_log_rank_threshold.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"Compute log-rank test p-value difference two survival curves obtained splitting dataset \"low\" \"high\" risk group using possible relative-risk thresholds.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_log_rank_threshold.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"","code":"tof_find_log_rank_threshold(input_data, relative_risk_col, time_col, event_col)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_log_rank_threshold.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"input_data tbl_df data.frame observation row. relative_risk_col unquote column name indicating column contains relative-risk estimates observation. time_col unquoted column name indicating column contains true time--event information observation. event_col unquoted column name indicating column contains outcome (event censorship). Must binary column - values  either 0 1 (1 indicating adverse event 0 indicating  censorship) FALSE TRUE (TRUE indicating adverse event FALSE indicating censorship).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_log_rank_threshold.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"tibble 3 columns: \"candidate_thresholds\" (relative-risk threshold used log-rank test), \"log_rank_p_val\" (p-values log-rank tests) \"is_best\" (logical value indicating candidate threshold gave optimal, .e. smallest, p-value).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_panel_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Use tidytof's opinionated heuristic for extracted a high-dimensional cytometry panel's metal-antigen pairs\nfrom a flowFrame (read from a .fcs file.) — tof_find_panel_info","title":"Use tidytof's opinionated heuristic for extracted a high-dimensional cytometry panel's metal-antigen pairs\nfrom a flowFrame (read from a .fcs file.) — tof_find_panel_info","text":"Using character vectors obtained `name` `desc` columns parameters data flowFrame, figure high-dimensional cytometry panel used collect data return tidy tibble.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_panel_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use tidytof's opinionated heuristic for extracted a high-dimensional cytometry panel's metal-antigen pairs\nfrom a flowFrame (read from a .fcs file.) — tof_find_panel_info","text":"","code":"tof_find_panel_info(input_flowFrame)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_panel_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use tidytof's opinionated heuristic for extracted a high-dimensional cytometry panel's metal-antigen pairs\nfrom a flowFrame (read from a .fcs file.) — tof_find_panel_info","text":"input_flowFrame raw flowFrame (just read .fcs file) high-dimensional cytometry panel extracted","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_panel_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use tidytof's opinionated heuristic for extracted a high-dimensional cytometry panel's metal-antigen pairs\nfrom a flowFrame (read from a .fcs file.) — tof_find_panel_info","text":"tibble 2 columns (`metals` `antigens`) correspond metals antigens high-dimensional cytometry panel used data acquisition.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_fit_split.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a glmnet model and calculate performance metrics using a single rsplit object — tof_fit_split","title":"Fit a glmnet model and calculate performance metrics using a single rsplit object — tof_fit_split","text":"function trains glmnet model training set rsplit object, calculates performance metrics model validation/holdout set combinations mixture penalty hyperparameters provided hyperparameter grid.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_fit_split.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a glmnet model and calculate performance metrics using a single rsplit object — tof_fit_split","text":"","code":"tof_fit_split(   split_data,   prepped_recipe,   hyperparameter_grid,   model_type,   outcome_colnames )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_fit_split.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a glmnet model and calculate performance metrics using a single rsplit object — tof_fit_split","text":"split_data `rsplit` object rsample package. Alternatively, unsplit tbl_df can provided, though recommended. prepped_recipe trained recipe hyperparameter_grid tibble containing hyperparameter values tune. Can created using tof_create_grid model_type string representing type glmnet model fit. outcome_colnames Quoted column names indicating columns data fit represent outcome variables (others assumed predictors).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_fit_split.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit a glmnet model and calculate performance metrics using a single rsplit object — tof_fit_split","text":"tibble number rows input hyperparameter grid. row represents combination mixture penalty, column contains performance metric fitted glmnet model `split_data`'s holdout set. specific performance metrics depend type model fit: \"linear\" mean-squared error (`mse`) mean absolute error (`mae`) \"two-class\" binomial deviance (`binomial_deviance`); misclassification error rate `misclassification_error`; area receiver-operating curve (`roc_auc`); `mse` `mse` \"multiclass\" multinomial deviance (`multinomial_deviance`); misclassification error rate `misclassification_error`; area receiver-operating curve (`roc_auc`) computed using Hand-Till method roc_auc; `mse` `mse` \"survival\" negative log2-transformed partial likelihood (`neg_log_partial_likelihood`) Harrel's concordance index (often simply called \"C\"; `concordance_index`)","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_fit_split.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fit a glmnet model and calculate performance metrics using a single rsplit object — tof_fit_split","text":"Harrel Jr, F. E. Lee, K. L. Mark, D. B. (1996) Tutorial biostatistics: multivariable prognostic models: issues developing models, evaluating assumptions adequacy, measuring reducing error, Statistics Medicine, 15, pages 361–387.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_generate_palette.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a color palette using tidytof. — tof_generate_palette","title":"Generate a color palette using tidytof. — tof_generate_palette","text":"function generates color palette based color palette author's favorite pokemon.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_generate_palette.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a color palette using tidytof. — tof_generate_palette","text":"","code":"tof_generate_palette(num_colors)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_generate_palette.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a color palette using tidytof. — tof_generate_palette","text":"num_colors integer specifying number colors like generate.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_generate_palette.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a color palette using tidytof. — tof_generate_palette","text":"character vector hex codes specifying colors palette.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_generate_palette.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a color palette using tidytof. — tof_generate_palette","text":"","code":"tof_generate_palette(num_colors = 5L) #> [1] \"#D86020\" \"#28A8B8\" \"#F89040\" \"#D0D0D0\" \"#903000\""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_mixture.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s optimal mixture (alpha) value — tof_get_model_mixture","title":"Get a `tof_model`'s optimal mixture (alpha) value — tof_get_model_mixture","text":"Get `tof_model`'s optimal mixture (alpha) value","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_mixture.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s optimal mixture (alpha) value — tof_get_model_mixture","text":"","code":"tof_get_model_mixture(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_mixture.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s optimal mixture (alpha) value — tof_get_model_mixture","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_mixture.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s optimal mixture (alpha) value — tof_get_model_mixture","text":"numeric value","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_mixture.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s optimal mixture (alpha) value — tof_get_model_mixture","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_mixture(regression_model) #> [1] 1"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_outcomes.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s outcome variable name(s) — tof_get_model_outcomes","title":"Get a `tof_model`'s outcome variable name(s) — tof_get_model_outcomes","text":"Get `tof_model`'s outcome variable name(s)","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_outcomes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s outcome variable name(s) — tof_get_model_outcomes","text":"","code":"tof_get_model_outcomes(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_outcomes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s outcome variable name(s) — tof_get_model_outcomes","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_outcomes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s outcome variable name(s) — tof_get_model_outcomes","text":"character vector","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_outcomes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s outcome variable name(s) — tof_get_model_outcomes","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_outcomes(regression_model) #> [1] \"outcome\""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_penalty.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s optimal penalty (lambda) value — tof_get_model_penalty","title":"Get a `tof_model`'s optimal penalty (lambda) value — tof_get_model_penalty","text":"Get `tof_model`'s optimal penalty (lambda) value","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_penalty.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s optimal penalty (lambda) value — tof_get_model_penalty","text":"","code":"tof_get_model_penalty(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_penalty.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s optimal penalty (lambda) value — tof_get_model_penalty","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_penalty.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s optimal penalty (lambda) value — tof_get_model_penalty","text":"numeric value","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_penalty.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s optimal penalty (lambda) value — tof_get_model_penalty","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_penalty(regression_model) #> [1] 0.003162278"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_training_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s training data — tof_get_model_training_data","title":"Get a `tof_model`'s training data — tof_get_model_training_data","text":"Get `tof_model`'s training data","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_training_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s training data — tof_get_model_training_data","text":"","code":"tof_get_model_training_data(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_training_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s training data — tof_get_model_training_data","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_training_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s training data — tof_get_model_training_data","text":"tibble (non-preprocessed) training data used fit model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_training_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s training data — tof_get_model_training_data","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_training_data(regression_model) #> # A tibble: 100 × 9 #>    sample   cd45 pstat5   cd34 outcome class  multiclass event time_to_event #>    <chr>   <dbl>  <dbl>  <dbl>   <dbl> <fct>  <fct>      <dbl>         <dbl> #>  1 10     0.551   0.433 0.322     3.13 class2 class1         0          8.90 #>  2 54     0.282   0.541 0.300     3.53 class1 class2         1         10.9  #>  3 49     0.192   0.320 0.128     3.21 class2 class2         1          8.21 #>  4 100    0.0647  0.455 0.318     2.93 class2 class3         1          8.89 #>  5 57     0.972   0.381 0.304     4.87 class1 class2         1          9.65 #>  6 84     0.397   0.810 0.147     3.36 class2 class3         1         11.6  #>  7 18     0.0170  0.194 0.979     2.44 class2 class1         0         11.1  #>  8 65     0.737   0.298 0.0392    3.02 class2 class3         1          9.73 #>  9 19     0.431   0.604 0.120     2.07 class2 class1         0          9.53 #> 10 69     0.233   0.927 0.560     4.31 class1 class3         1          5.70 #> # ℹ 90 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s model type — tof_get_model_type","title":"Get a `tof_model`'s model type — tof_get_model_type","text":"Get `tof_model`'s model type","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s model type — tof_get_model_type","text":"","code":"tof_get_model_type(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s model type — tof_get_model_type","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s model type — tof_get_model_type","text":"string","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_type.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s model type — tof_get_model_type","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_type(regression_model) #> [1] \"linear\""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_x.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s processed predictor matrix (for glmnet) — tof_get_model_x","title":"Get a `tof_model`'s processed predictor matrix (for glmnet) — tof_get_model_x","text":"Get `tof_model`'s processed predictor matrix (glmnet)","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_x.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s processed predictor matrix (for glmnet) — tof_get_model_x","text":"","code":"tof_get_model_x(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_x.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s processed predictor matrix (for glmnet) — tof_get_model_x","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_x.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s processed predictor matrix (for glmnet) — tof_get_model_x","text":"x value formatted glmnet","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_x.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s processed predictor matrix (for glmnet) — tof_get_model_x","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_x(regression_model) #>               cd45      pstat5          cd34 #>   [1,]  1.73519908 -1.78638492  4.811472e-01 #>   [2,]  0.58326777 -1.24192066  1.480128e+00 #>   [3,] -0.73072845  1.25210026  9.924607e-01 #>   [4,] -1.08228879 -0.66137516 -1.627995e+00 #>   [5,] -0.47701183 -0.53035937 -1.788385e+00 #>   [6,] -1.90055917  1.15801053  1.610779e+00 #>   [7,] -0.72621653  1.28152380 -7.849734e-02 #>   [8,] -1.68493527  0.74565821  3.972474e-01 #>   [9,] -0.31203612 -0.35778463 -8.595572e-01 #>  [10,]  0.30362904 -1.61010621 -1.066058e+00 #>  [11,]  1.06782100  1.24654546 -3.676658e-01 #>  [12,]  0.44430276  0.23807514 -4.233368e-01 #>  [13,] -1.67397978  1.33861680  1.630057e+00 #>  [14,]  0.28311070 -1.73481021 -1.687423e+00 #>  [15,]  0.48844777  0.33748185 -8.232649e-01 #>  [16,] -0.73631445 -0.73481491  9.287150e-03 #>  [17,]  1.73284760 -0.20445255 -1.323766e+00 #>  [18,] -1.17994377 -1.47269305  4.868504e-01 #>  [19,] -1.50621885 -1.79944777 -1.733701e+00 #>  [20,]  1.29532308 -0.35183931 -9.174043e-01 #>  [21,]  0.76225541 -0.68551801  8.793612e-01 #>  [22,] -1.42162212  0.62138572  7.817762e-01 #>  [23,]  1.07115307  0.64753845 -7.422668e-01 #>  [24,]  0.37492692 -0.30781799  3.452201e-05 #>  [25,] -0.36486137  0.64126200  1.114589e+00 #>  [26,] -0.65444613 -0.72129841  7.790784e-02 #>  [27,] -1.26983910  1.35146483  7.060352e-01 #>  [28,]  0.93110466  1.28281521 -4.987826e-01 #>  [29,]  0.73775278  0.85281260 -1.073614e+00 #>  [30,]  0.04928485 -0.25863718 -1.523681e-01 #>  [31,]  0.23396938 -0.59952195 -2.723902e-01 #>  [32,]  1.11861427 -0.46550611 -1.395822e+00 #>  [33,] -1.19654861  0.97105347 -1.275763e+00 #>  [34,]  1.24755931 -1.45849494  9.390430e-01 #>  [35,]  1.38952895  0.16564938  6.312211e-01 #>  [36,]  0.32511257  0.86615118  1.474169e+00 #>  [37,] -1.43713853 -0.02545808 -2.506710e-01 #>  [38,]  0.95673204  1.03291524  1.165612e+00 #>  [39,] -0.04550502  1.32080452  5.905659e-01 #>  [40,] -1.29641430 -0.30023698  1.703221e+00 #>  [41,]  1.05640934  0.25276262 -1.720156e-01 #>  [42,]  0.32810833  1.57256290 -1.663697e+00 #>  [43,]  0.08420423 -0.64988937 -7.737213e-01 #>  [44,] -0.03449929 -0.50194694  4.651621e-02 #>  [45,]  1.28084444 -1.73653332 -7.734204e-01 #>  [46,] -0.61024330  0.38930867 -9.823512e-01 #>  [47,]  1.04441564 -1.00826473  1.199117e-01 #>  [48,]  1.38273475 -0.93818004 -1.102425e+00 #>  [49,]  0.74371131 -0.53538320 -1.440139e+00 #>  [50,]  0.64739933  0.34455372  1.114852e+00 #>  [51,] -1.49537356 -1.77724307 -1.288772e+00 #>  [52,]  0.33749511  0.77604764 -4.376718e-01 #>  [53,] -0.80671440  1.16646593 -1.578843e+00 #>  [54,] -1.32155771  1.29462980  1.326839e-01 #>  [55,] -0.89744950  0.67285394 -7.191944e-01 #>  [56,] -0.56482700  0.58997226  3.454923e-01 #>  [57,]  1.16647070  0.09920542  1.075360e+00 #>  [58,]  0.21903246  0.95097983  1.325189e+00 #>  [59,] -0.27987281 -1.13096932 -6.044580e-01 #>  [60,] -0.88241872  0.68347688  9.698990e-01 #>  [61,]  0.06467662  1.05900001  1.411579e+00 #>  [62,]  1.07019094 -1.79243781  5.733381e-01 #>  [63,]  0.55437260  0.01409500  9.236649e-01 #>  [64,]  0.03220759 -1.07787006  8.706719e-01 #>  [65,] -0.14018736 -0.25977445  8.331653e-01 #>  [66,] -1.34311455 -0.93257595  1.252859e+00 #>  [67,] -0.84340150 -0.31966927 -7.910095e-01 #>  [68,]  1.50945552  0.99016365  1.509541e+00 #>  [69,]  0.31786936 -1.03167798 -1.299478e+00 #>  [70,] -1.35924382 -0.46022365  1.159734e+00 #>  [71,]  1.09006402  1.49338242 -3.906981e-01 #>  [72,]  1.72517700  0.13386536 -7.720775e-01 #>  [73,] -1.71819067 -0.64692424 -1.747606e-01 #>  [74,] -1.54775660 -0.04340985  7.304350e-01 #>  [75,] -1.55578825  1.34131665 -5.396282e-01 #>  [76,]  0.13966413 -0.23912422  9.066069e-01 #>  [77,]  0.15488186 -1.80744521 -3.524499e-01 #>  [78,]  0.76287234  0.26113712  8.518311e-01 #>  [79,]  0.04124025  1.64493383  1.681103e+00 #>  [80,]  0.57528948  1.17833324  8.854072e-01 #>  [81,] -0.08201807  1.04814511 -1.407875e+00 #>  [82,] -1.85643513 -1.16407623 -1.243629e+00 #>  [83,] -0.20805991  0.65510428  6.844027e-01 #>  [84,]  0.32827001 -0.05271488  8.896778e-01 #>  [85,]  0.36362979 -1.37318813 -3.536772e-01 #>  [86,]  0.38269617  1.21921485  1.754511e+00 #>  [87,]  1.01240517  1.25989598  6.584695e-02 #>  [88,] -0.90529943 -0.79705942  1.403972e+00 #>  [89,] -0.59717891  0.77300959 -1.032607e+00 #>  [90,] -0.98394304  0.94491336  4.550603e-01 #>  [91,]  0.78116972 -0.92400930  2.612072e-01 #>  [92,] -1.52349936 -0.22984201 -1.308053e+00 #>  [93,]  0.53751954 -1.04711902 -5.407150e-01 #>  [94,]  1.26630812 -1.82444680 -4.295047e-02 #>  [95,]  1.02121571 -0.21531004 -8.147221e-01 #>  [96,]  0.78923453  1.51371603 -9.404394e-01 #>  [97,]  1.20479704  0.76637874  4.546158e-01 #>  [98,]  1.49723520 -0.51451383  8.618328e-01 #>  [99,] -0.51837050 -0.75937064 -1.404856e+00 #> [100,] -0.87315980  0.65838189  6.026072e-01"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_y.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s processed outcome variable matrix (for glmnet) — tof_get_model_y","title":"Get a `tof_model`'s processed outcome variable matrix (for glmnet) — tof_get_model_y","text":"Get `tof_model`'s processed outcome variable matrix (glmnet)","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_y.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s processed outcome variable matrix (for glmnet) — tof_get_model_y","text":"","code":"tof_get_model_y(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_y.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s processed outcome variable matrix (for glmnet) — tof_get_model_y","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_y.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s processed outcome variable matrix (for glmnet) — tof_get_model_y","text":"y value formatted glmnet","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_y.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s processed outcome variable matrix (for glmnet) — tof_get_model_y","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_y(regression_model) #>   [1]  5.51134090  0.01458007  3.25786140  4.81561395  3.64676649  5.92146800 #>   [7]  4.74959137  1.78283282  3.89865870  4.65974966  1.26168287  6.58325453 #>  [13]  6.01402858  8.44621727  1.26759472  3.25681925  4.56961064  2.37382744 #>  [19]  5.84693707  1.49951701  1.60276542  2.91616838  3.22563677  3.07106565 #>  [25]  2.96834609  2.88036962  2.41717450  6.11006298  0.61748122  0.52611269 #>  [31]  4.36670115  5.02210033  6.57788753  2.26778712  5.14854873  5.74610585 #>  [37]  6.18415223  3.59527092  5.55988986  3.44985849  4.27358681  4.46932748 #>  [43]  2.21620225  2.00486962  2.22092315  1.77450706  1.75209000  0.83956739 #>  [49]  1.71598211  2.90208945  3.12158677 -0.02760596  4.61334888  4.88193125 #>  [55]  0.92451600  5.48655804  3.88060863  4.50617472  4.98792112  2.45418097 #>  [61]  3.79212589  3.31656746  4.86024270  4.91612524  1.92179061  1.41783879 #>  [67]  2.85887208  5.32522755  4.46358775  4.50008809  2.66213463 -0.03464377 #>  [73]  1.95111309  1.82253947  6.34152297  1.88320395  1.12676374  2.60142919 #>  [79]  6.20189088  2.72784513  2.90105601  7.14169053  0.15496470  2.97345749 #>  [85]  4.31965798  4.53228311  1.72329142  4.54663850  2.52325400  1.00197127 #>  [91]  3.69709799  4.90694016  4.04494961  2.19664490  5.11760436  0.16937209 #>  [97]  2.77859722  4.22292799  3.49394365  5.91147568"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_panel.html","id":null,"dir":"Reference","previous_headings":"","what":"Get panel information from a tof_tibble — tof_get_panel","title":"Get panel information from a tof_tibble — tof_get_panel","text":"Get panel information tof_tibble","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_panel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get panel information from a tof_tibble — tof_get_panel","text":"","code":"tof_get_panel(tof_tibble)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_panel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get panel information from a tof_tibble — tof_get_panel","text":"tof_tibble `tof_tbl`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_panel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get panel information from a tof_tibble — tof_get_panel","text":"tibble containing information CyTOF panel used data acquisition data contained `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_panel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get panel information from a tof_tibble — tof_get_panel","text":"","code":"input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]] tof_tibble <- tof_read_data(input_file) tof_get_panel(tof_tibble) #> # A tibble: 59 × 2 #>    metals       antigens     #>    <chr>        <chr>        #>  1 Time         Time         #>  2 Event_length Event_length #>  3 Y89          CD45         #>  4 Pd102        empty        #>  5 Pd104        empty        #>  6 Pd105        empty        #>  7 Pd106        empty        #>  8 Pd108        empty        #>  9 Pd110        empty        #> 10 In113        CD61         #> # ℹ 49 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_is_numeric.html","id":null,"dir":"Reference","previous_headings":"","what":"Find if a vector is numeric — tof_is_numeric","title":"Find if a vector is numeric — tof_is_numeric","text":"function takes input vector `.vec` checks either integer double (.e. type vector might encode high-dimensional cytometry measurements).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_is_numeric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find if a vector is numeric — tof_is_numeric","text":"","code":"tof_is_numeric(.vec)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_is_numeric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find if a vector is numeric — tof_is_numeric","text":".vec vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_is_numeric.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find if a vector is numeric — tof_is_numeric","text":"boolean value indicating .vec type integer double.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_knn_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate cells' local densities using K-nearest-neighbor density estimation — tof_knn_density","title":"Estimate cells' local densities using K-nearest-neighbor density estimation — tof_knn_density","text":"function uses distances cell K nearest neighbors estimate local density cell `tof_tbl` `tibble` containing high-dimensional cytometry data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_knn_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate cells' local densities using K-nearest-neighbor density estimation — tof_knn_density","text":"","code":"tof_knn_density(   tof_tibble,   distance_cols = where(tof_is_numeric),   num_neighbors = min(15L, nrow(tof_tibble)),   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\"),   estimation_method = c(\"mean_distance\", \"sum_distance\"),   normalize = TRUE,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_knn_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate cells' local densities using K-nearest-neighbor density estimation — tof_knn_density","text":"tof_tibble `tof_tbl` `tibble`. distance_cols Unquoted names columns `tof_tibble` use calculating cell--cell distances local density estimation cell. Defaults numeric columns `tof_tibble`. num_neighbors integer indicating number nearest neighbors use estimating local density cell. Defaults minimum 15 number rows `tof_tibble`. distance_function string indicating distance function use calculating cell--cell distances local density estimation. Options include \"euclidean\" (default) \"cosine\". estimation_method string indicating relative density cell calculated distances k nearest neighbors. Options \"mean_distance\" (default; estimates relative density cell's neighborhood taking negative average distances nearest neighbors) \"sum_distance\" (estimates relative density cell's neighborhood taking negative sum distances nearest neighbors). normalize boolean value indicating vector local density estimates normalized values 0 1. Defaults TRUE. ... Additional optional arguments pass tof_find_knn.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_knn_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate cells' local densities using K-nearest-neighbor density estimation — tof_knn_density","text":"tibble single column named \".knn_density\" containing local density estimates input cell `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_log_rank_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"Compute log-rank test p-value difference two survival curves obtained splitting dataset \"low\" \"high\" risk group using given relative-risk threshold.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_log_rank_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"","code":"tof_log_rank_test(   input_data,   relative_risk_col,   time_col,   event_col,   threshold )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_log_rank_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"input_data tbl_df data.frame observation row. relative_risk_col unquote column name indicating column contains relative-risk estimates observation. time_col unquoted column name indicating column contains true time--event information observation. event_col unquoted column name indicating column contains outcome (event censorship). Must binary column - values  either 0 1 (1 indicating adverse event 0 indicating  censorship) FALSE TRUE (TRUE indicating adverse event FALSE indicating censorship). threshold numeric value indicating relative-risk threshold used split observations low- high-risk groups.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_log_rank_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"numeric value <1, p-value log-rank test.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_log_rank_test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_knn_graph.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — tof_make_knn_graph","title":"Title — tof_make_knn_graph","text":"Title","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_knn_graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — tof_make_knn_graph","text":"","code":"tof_make_knn_graph(   tof_tibble,   knn_cols,   num_neighbors,   distance_function = c(\"euclidean\", \"cosine\"),   graph_type = c(\"weighted\", \"unweighted\"),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_knn_graph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — tof_make_knn_graph","text":"tof_tibble tibble tof_tbl. knn_cols Unquoted column names indicating columns tof_tibble used KNN calculation. num_neighbors integer number neighbors find cell ( including ). distance_function string indicating distance function use nearest-neighbor calculation. Options include \"euclidean\" (default) \"cosine\" distances. graph_type string indicating graph's edges weights (\"weighted\"; default) (\"unweighted\"). ... Optional additional arguments pass tof_find_knn","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_knn_graph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — tof_make_knn_graph","text":"tbl_graph.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_knn_graph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title — tof_make_knn_graph","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_roc_curve.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute a receiver-operating curve (ROC) for a two-class or multiclass dataset — tof_make_roc_curve","title":"Compute a receiver-operating curve (ROC) for a two-class or multiclass dataset — tof_make_roc_curve","text":"Compute receiver-operating curve (ROC) two-class multiclass dataset","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_roc_curve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute a receiver-operating curve (ROC) for a two-class or multiclass dataset — tof_make_roc_curve","text":"","code":"tof_make_roc_curve(input_data, truth_col, prob_cols)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_roc_curve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute a receiver-operating curve (ROC) for a two-class or multiclass dataset — tof_make_roc_curve","text":"input_data tof_tbl, tbl_df, data.frame row observation. truth_col unquoted column name indicating column `input_data` contains true class labels observation. Must factor. prob_cols Unquoted column names indicating columns `input_data` contain probability estimates class `truth_col`. columns must specified order factor levels `truth_col`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_roc_curve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute a receiver-operating curve (ROC) for a two-class or multiclass dataset — tof_make_roc_curve","text":"tibble can used plot ROC classification task. candidate probability threshold, following reported: specificity, sensitivity, true-positive rate (tpr), false-positive rate (fpr).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_roc_curve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute a receiver-operating curve (ROC) for a two-class or multiclass dataset — tof_make_roc_curve","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             )     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a logistic regression classifier log_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = class,         model_type = \"two-class\"     )  # make predictions predictions <-     tof_predict(         log_model,         new_data = feature_tibble,         prediction_type = \"response\"     ) prediction_tibble <-     dplyr::tibble(         truth = feature_tibble$class,         prediction = predictions$.pred     )  # make ROC curve tof_make_roc_curve(     input_data = prediction_tibble,     truth_col = truth,     prob_cols = prediction )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster.html","id":null,"dir":"Reference","previous_headings":"","what":"Metacluster clustered CyTOF data. — tof_metacluster","title":"Metacluster clustered CyTOF data. — tof_metacluster","text":"function wrapper around tidytof's tof_metacluster_* function family. performs metaclustering CyTOF data using user-specified method (5 choices) method's corresponding input parameters.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metacluster clustered CyTOF data. — tof_metacluster","text":"","code":"tof_metacluster(   tof_tibble,   cluster_col,   metacluster_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   ...,   augment = TRUE,   method = c(\"consensus\", \"hierarchical\", \"kmeans\", \"phenograph\", \"flowsom\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metacluster clustered CyTOF data. — tof_metacluster","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. metacluster_cols Unquoted column names indicating columns `tof_tibble` use computing metaclusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster metaclustering. function used compute summary statistic input cluster `cluster_col` across columns specified `metacluster_cols`, resulting vector (one cluster) used input metaclustering. Defaults median. ... Additional arguments pass `tof_metacluster_*` function family member corresponding chosen `method`. augment boolean value indicating output column-bind metacluster ids cell new column `tof_tibble` (TRUE; default) single-column tibble including metacluster ids returned (FALSE). method string indicating clustering method used. Valid values include \"consensus\", \"hierarchical\", \"kmeans\", \"phenograph\", \"flowsom\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metacluster clustered CyTOF data. — tof_metacluster","text":"`tof_tbl` `tibble` augment = FALSE, single column encoding metacluster ids cell `tof_tibble`. augment = TRUE, ncol(tof_tibble) + 1 columns: (unaltered) columns `tof_tibble` plus additional column encoding metacluster ids.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metacluster clustered CyTOF data. — tof_metacluster","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  tof_metacluster(     tof_tibble = sim_data,     cluster_col = cluster_id,     clustering_algorithm = \"consensus\",     method = \"flowsom\" ) #> # A tibble: 1,000 × 6 #>       cd45    cd38   cd34    cd19 cluster_id .flowsom_metacluster #>      <dbl>   <dbl>  <dbl>   <dbl> <chr>      <chr>                #>  1  1.69    0.718   0.100 -0.277  v          4                    #>  2 -0.720   0.899  -0.183  0.696  s          1                    #>  3  0.810   0.801  -0.189  0.281  m          1                    #>  4 -0.438   2.40    0.558  0.586  u          1                    #>  5  0.136  -0.0303 -1.52  -0.0729 r          1                    #>  6  0.414  -1.78    0.463 -0.888  q          2                    #>  7  2.68   -0.0537  0.125 -0.224  o          4                    #>  8 -0.564  -1.40    1.10   1.56   y          1                    #>  9  0.716  -0.303  -1.14   0.888  a          1                    #> 10 -0.0444  1.82   -1.05   1.34   v          4                    #> # ℹ 990 more rows  tof_metacluster(     tof_tibble = sim_data,     cluster_col = cluster_id,     method = \"phenograph\" ) #> # A tibble: 1,000 × 6 #>       cd45    cd38   cd34    cd19 cluster_id .phenograph_metacluster #>      <dbl>   <dbl>  <dbl>   <dbl> <chr>      <chr>                   #>  1  1.69    0.718   0.100 -0.277  v          5                       #>  2 -0.720   0.899  -0.183  0.696  s          1                       #>  3  0.810   0.801  -0.189  0.281  m          2                       #>  4 -0.438   2.40    0.558  0.586  u          2                       #>  5  0.136  -0.0303 -1.52  -0.0729 r          1                       #>  6  0.414  -1.78    0.463 -0.888  q          3                       #>  7  2.68   -0.0537  0.125 -0.224  o          1                       #>  8 -0.564  -1.40    1.10   1.56   y          1                       #>  9  0.716  -0.303  -1.14   0.888  a          1                       #> 10 -0.0444  1.82   -1.05   1.34   v          5                       #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_consensus.html","id":null,"dir":"Reference","previous_headings":"","what":"Metacluster clustered CyTOF data using consensus clustering — tof_metacluster_consensus","title":"Metacluster clustered CyTOF data using consensus clustering — tof_metacluster_consensus","text":"function performs consensus metaclustering `tof_tbl` containing CyTOF data using user-specified selection input variables/CyTOF measurements number desired metaclusters. See ConsensusClusterPlus additional details.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_consensus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metacluster clustered CyTOF data using consensus clustering — tof_metacluster_consensus","text":"","code":"tof_metacluster_consensus(   tof_tibble,   cluster_col,   metacluster_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   num_metaclusters = 10L,   proportion_clusters = 0.9,   proportion_features = 1,   num_reps = 20L,   clustering_algorithm = c(\"hierarchical\", \"pam\", \"kmeans\"),   distance_function = c(\"euclidean\", \"minkowski\", \"pearson\", \"spearman\", \"maximum\",     \"binary\", \"canberra\"),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_consensus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metacluster clustered CyTOF data using consensus clustering — tof_metacluster_consensus","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. metacluster_cols Unquoted column names indicating columns `tof_tibble` use computing metaclusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster metaclustering. function used compute summary statistic input cluster `cluster_col` across columns specified `metacluster_cols`, resulting vector (one cluster) used input metaclustering. Defaults median. num_metaclusters integer indicating number clusters returned. Defaults 10. proportion_clusters numeric value 0 1 indicating proportion clusters subsample (total number clusters `cluster_col`) iteration consensus clustering. Defaults 0.9 proportion_features numeric value 0 1 indicating proportion features (.e. proportion columns specified `metacluster_cols`) subsample iteration consensus clustering. Defaults 1 (features included). num_reps integer indicating many subsampled replicates run consensus clustering. Defaults 20. clustering_algorithm string indicating clustering algorithm ConsensusClusterPlus use metacluster subsampled clusters resampling. Options \"hierarchical\" (default), \"pam\" (partitioning around medoids), \"kmeans\". distance_function string indicating distance function used compute distances clusters consensus clustering. Options \"euclidean\" (default), \"manhattan\", \"minkowski\", \"pearson\", \"spearman\", \"maximum\", \"binary\", \"canberra\". See ConsensusClusterPlus. ... Optional additional arguments pass ConsensusClusterPlus.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_consensus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metacluster clustered CyTOF data using consensus clustering — tof_metacluster_consensus","text":"tibble single column (`.consensus_metacluster`) number rows input `tof_tibble`. entry column indicates metacluster label assigned row `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_consensus.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metacluster clustered CyTOF data using consensus clustering — tof_metacluster_consensus","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  tof_metacluster_consensus(tof_tibble = sim_data, cluster_col = cluster_id) #> # A tibble: 1,000 × 1 #>    .consensus_metacluster #>    <chr>                  #>  1 1                      #>  2 1                      #>  3 1                      #>  4 1                      #>  5 4                      #>  6 1                      #>  7 5                      #>  8 1                      #>  9 7                      #> 10 3                      #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_flowsom.html","id":null,"dir":"Reference","previous_headings":"","what":"Metacluster clustered CyTOF data using FlowSOM's built-in metaclustering algorithm — tof_metacluster_flowsom","title":"Metacluster clustered CyTOF data using FlowSOM's built-in metaclustering algorithm — tof_metacluster_flowsom","text":"function performs metaclustering `tof_tbl` containing CyTOF data using user-specified selection input variables/CyTOF measurements number desired metaclusters. takes advantage FlowSOM package's built-functionality automatically detecting number metaclusters can use several strategies adapted FlowSOM team: consensus metaclustering, hierarchical metaclustering, k-means metaclustering, metaclustering using FlowSOM algorithm . See MetaClustering additional details.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_flowsom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metacluster clustered CyTOF data using FlowSOM's built-in metaclustering algorithm — tof_metacluster_flowsom","text":"","code":"tof_metacluster_flowsom(   tof_tibble,   cluster_col,   metacluster_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   num_metaclusters = 10L,   clustering_algorithm = c(\"consensus\", \"hierarchical\", \"kmeans\", \"som\"),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_flowsom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metacluster clustered CyTOF data using FlowSOM's built-in metaclustering algorithm — tof_metacluster_flowsom","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. metacluster_cols Unquoted column names indicating columns `tof_tibble` use computing metaclusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster metaclustering. function used compute summary statistic input cluster `cluster_col` across columns specified `metacluster_cols`, resulting vector (one cluster) used input metaclustering. Defaults median. num_metaclusters integer indicating maximum number clusters returned. Defaults 10. Note function, output may provide small number metaclusters requested. MetaClustering uses \"Elbow method\" automatically detect optimal number metaclusters. clustering_algorithm string indicating clustering algorithm MetaClustering use perform metaclustering. Options \"consensus\" (default), \"hierarchical\", \"kmeans\", \"som\" (.e. self-organizing map; FlowSOM algorithm ). ... Optional additional arguments pass MetaClustering.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_flowsom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metacluster clustered CyTOF data using FlowSOM's built-in metaclustering algorithm — tof_metacluster_flowsom","text":"tibble single column (`.flowsom_metacluster`) number rows input `tof_tibble`. entry column indicates metacluster label assigned row `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_flowsom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metacluster clustered CyTOF data using FlowSOM's built-in metaclustering algorithm — tof_metacluster_flowsom","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  tof_metacluster_flowsom(     tof_tibble = sim_data,     cluster_col = cluster_id,     clustering_algorithm = \"consensus\" ) #> # A tibble: 1,000 × 1 #>    .flowsom_metacluster #>    <chr>                #>  1 1                    #>  2 1                    #>  3 1                    #>  4 1                    #>  5 1                    #>  6 1                    #>  7 1                    #>  8 2                    #>  9 1                    #> 10 2                    #> # ℹ 990 more rows  tof_metacluster_flowsom(     tof_tibble = sim_data,     cluster_col = cluster_id,     clustering_algorithm = \"som\" ) #> # A tibble: 1,000 × 1 #>    .flowsom_metacluster #>    <chr>                #>  1 2                    #>  2 2                    #>  3 3                    #>  4 2                    #>  5 2                    #>  6 2                    #>  7 3                    #>  8 1                    #>  9 3                    #> 10 1                    #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_hierarchical.html","id":null,"dir":"Reference","previous_headings":"","what":"Metacluster clustered CyTOF data using hierarchical agglomerative clustering — tof_metacluster_hierarchical","title":"Metacluster clustered CyTOF data using hierarchical agglomerative clustering — tof_metacluster_hierarchical","text":"function performs hierarchical metaclustering `tof_tbl` containing CyTOF data using user-specified selection input variables/CyTOF measurements number desired metaclusters. See hclust.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_hierarchical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metacluster clustered CyTOF data using hierarchical agglomerative clustering — tof_metacluster_hierarchical","text":"","code":"tof_metacluster_hierarchical(   tof_tibble,   cluster_col,   metacluster_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   num_metaclusters = 10L,   distance_function = c(\"euclidean\", \"manhattan\", \"minkowski\", \"maximum\", \"canberra\",     \"binary\"),   agglomeration_method = c(\"complete\", \"single\", \"average\", \"median\", \"centroid\",     \"ward.D\", \"ward.D2\", \"mcquitty\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_hierarchical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metacluster clustered CyTOF data using hierarchical agglomerative clustering — tof_metacluster_hierarchical","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. metacluster_cols Unquoted column names indicating columns `tof_tibble` use computing metaclusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster metaclustering. function used compute summary statistic input cluster `cluster_col` across columns specified `metacluster_cols`, resulting vector (one cluster) used input metaclustering. Defaults median. num_metaclusters integer indicating number clusters returned. Defaults 10. distance_function string indicating distance function used compute distances clusters hierarchical metaclustering. Options \"euclidean\" (default), \"manhattan\", \"minkowski\", \"maximum\", \"canberra\", \"binary\". See dist additional details. agglomeration_method string indicating agglomeration algorithm used hierarchical cluster combination. Options \"complete\" (default), \"single\", \"average\", \"median\", \"centroid\", \"ward.D\", \"ward.D2\", \"mcquitty\". See hclust details.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_hierarchical.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metacluster clustered CyTOF data using hierarchical agglomerative clustering — tof_metacluster_hierarchical","text":"tibble single column (`.hierarchical_metacluster`) number rows input `tof_tibble`. entry column indicates metacluster label assigned row `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_hierarchical.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metacluster clustered CyTOF data using hierarchical agglomerative clustering — tof_metacluster_hierarchical","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  tof_metacluster_hierarchical(tof_tibble = sim_data, cluster_col = cluster_id) #> # A tibble: 1,000 × 1 #>    .hierarchical_metacluster #>    <chr>                     #>  1 2                         #>  2 7                         #>  3 4                         #>  4 3                         #>  5 3                         #>  6 1                         #>  7 6                         #>  8 4                         #>  9 7                         #> 10 7                         #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_kmeans.html","id":null,"dir":"Reference","previous_headings":"","what":"Metacluster clustered CyTOF data using k-means clustering — tof_metacluster_kmeans","title":"Metacluster clustered CyTOF data using k-means clustering — tof_metacluster_kmeans","text":"function performs k-means metaclustering `tof_tbl` containing CyTOF data using user-specified selection input variables/CyTOF measurements number desired metaclusters. See hclust.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_kmeans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metacluster clustered CyTOF data using k-means clustering — tof_metacluster_kmeans","text":"","code":"tof_metacluster_kmeans(   tof_tibble,   cluster_col,   metacluster_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   num_metaclusters = 10L,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_kmeans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metacluster clustered CyTOF data using k-means clustering — tof_metacluster_kmeans","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. metacluster_cols Unquoted column names indicating columns `tof_tibble` use computing metaclusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster metaclustering. function used compute summary statistic input cluster `cluster_col` across columns specified `metacluster_cols`, resulting vector (one cluster) used input metaclustering. Defaults median. num_metaclusters integer indicating number clusters returned. Defaults 10. ... Optional additional method specifications pass tof_cluster_kmeans.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_kmeans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metacluster clustered CyTOF data using k-means clustering — tof_metacluster_kmeans","text":"tibble single column (`.kmeans_metacluster`) number rows input `tof_tibble`. entry column indicates metacluster label assigned row `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_kmeans.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metacluster clustered CyTOF data using k-means clustering — tof_metacluster_kmeans","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  tof_metacluster_kmeans(tof_tibble = sim_data, cluster_col = cluster_id) #> # A tibble: 1,000 × 1 #>    .kmeans_metacluster #>    <chr>               #>  1 8                   #>  2 10                  #>  3 1                   #>  4 8                   #>  5 3                   #>  6 5                   #>  7 8                   #>  8 8                   #>  9 8                   #> 10 8                   #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_phenograph.html","id":null,"dir":"Reference","previous_headings":"","what":"Metacluster clustered CyTOF data using PhenoGraph clustering — tof_metacluster_phenograph","title":"Metacluster clustered CyTOF data using PhenoGraph clustering — tof_metacluster_phenograph","text":"function performs PhenoGraph metaclustering `tof_tbl` containing CyTOF data using user-specified selection input variables/CyTOF measurements. number metaclusters automatically detected PhenoGraph algorithm. See tof_cluster_phenograph.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_phenograph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metacluster clustered CyTOF data using PhenoGraph clustering — tof_metacluster_phenograph","text":"","code":"tof_metacluster_phenograph(   tof_tibble,   cluster_col,   metacluster_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   num_neighbors = 5L,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_phenograph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metacluster clustered CyTOF data using PhenoGraph clustering — tof_metacluster_phenograph","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. metacluster_cols Unquoted column names indicating columns `tof_tibble` use computing metaclusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster metaclustering. function used compute summary statistic input cluster `cluster_col` across columns specified `metacluster_cols`, resulting vector (one cluster) used input metaclustering. Defaults median. num_neighbors integer indicating number neighbors use constructing PhenoGraph's k-nearest-neighbor graph. Smaller values emphasize local graph structure; larger values emphasize global graph structure (add time computation). Defaults 5. ... Optional additional method specifications pass tof_cluster_phenograph.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_phenograph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metacluster clustered CyTOF data using PhenoGraph clustering — tof_metacluster_phenograph","text":"tibble single column (`.phenograph_metacluster`) number rows input `tof_tibble`. entry column indicates metacluster label assigned row `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_phenograph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metacluster clustered CyTOF data using PhenoGraph clustering — tof_metacluster_phenograph","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  tof_metacluster_phenograph(tof_tibble = sim_data, cluster_col = cluster_id) #> # A tibble: 1,000 × 1 #>    .phenograph_metacluster #>    <chr>                   #>  1 3                       #>  2 3                       #>  3 1                       #>  4 3                       #>  5 1                       #>  6 1                       #>  7 2                       #>  8 1                       #>  9 2                       #> 10 1                       #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot marker expression density plots — tof_plot_cells_density","title":"Plot marker expression density plots — tof_plot_cells_density","text":"function plots marker expression density plots user-specified column tof_tbl. Optionally, cells can grouped plot multiple vertically-arranged density plots","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot marker expression density plots — tof_plot_cells_density","text":"","code":"tof_plot_cells_density(   tof_tibble,   marker_col,   group_col,   num_points = 512,   theme = ggplot2::theme_bw(),   use_ggridges = FALSE,   scale = 1,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot marker expression density plots — tof_plot_cells_density","text":"tof_tibble `tof_tbl` `tibble`. marker_col unquoted column name representing column `tof_tibble` (.e. CyTOF protein measurement) included feature extraction calculation. group_col Unquoted column names representing column `tof_tibble` used break rows `tof_tibble` subgroups plotted separate histograms. Defaults plotting without subgroups. num_points number points along full range `marker_col` density calculated theme ggplot2 theme plot. Defaults theme_bw use_ggridges boolean value indicting geom_ridgeline used plot overlain histograms. Defaults FALSE. TRUE, ggridges package must installed. scale Use set `scale` argument geom_ridgeline, controls far apart (vertically) density plots arranged along y-axis. Defaults 1. ... Additional optional arguments send geom_ridgeline.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot marker expression density plots — tof_plot_cells_density","text":"ggplot object","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot marker expression density plots — tof_plot_cells_density","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(c(\"a\", \"b\"), size = 1000, replace = TRUE)     )  density_plot <-     tof_plot_cells_density(         tof_tibble = sim_data,         marker_col = cd45,         group_col = cluster_id     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_embedding.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot scatterplots of single-cell data using low-dimensional feature embeddings — tof_plot_cells_embedding","title":"Plot scatterplots of single-cell data using low-dimensional feature embeddings — tof_plot_cells_embedding","text":"function makes scatterplots using single-cell data embedded low-dimensional space (generated tof_reduce_dimensions, point colored using user-specified variable.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_embedding.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot scatterplots of single-cell data using low-dimensional feature embeddings — tof_plot_cells_embedding","text":"","code":"tof_plot_cells_embedding(   tof_tibble,   embedding_cols,   color_col,   facet_cols,   compute_embedding_cols = where(tof_is_numeric),   embedding_method = c(\"pca\", \"tsne\", \"umap\"),   embedding_args = list(),   theme = ggplot2::theme_bw(),   ...,   method = c(\"ggplot2\", \"scattermore\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_embedding.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot scatterplots of single-cell data using low-dimensional feature embeddings — tof_plot_cells_embedding","text":"tof_tibble `tof_tbl` `tibble`. embedding_cols Unquoted column names indicating columns `tof_tibble` used x y axes scatterplot. Supports tidyselect helpers. Must select exactly 2 columns. provided, feature embedding can computed scratch using method provided using `embedding_method` argument tof_reduce_dimensions arguments passed `embedding_args`. color_col unquoted column name specifying column `tof_tibble` used color point scatterplot. facet_cols unquoted column name specifying column `tof_tibble` used break scatterplot facets using facet_wrap. compute_embedding_cols Unquoted column names indicating columns 'tof_tibble' use computing embeddings method specified `embedding_method`. Defaults numeric columns 'tof_tibble'. Supports tidyselect helpers. embedding_method string indicating method used feature embedding (`embedding_cols` provided). Options (passed tof_reduce_dimensions) \"pca\" (default), \"tsne\", \"umap\". embedding_args Optional additional arguments pass tof_reduce_dimensions. example, `method = \"tsne\"`, might include `num_comp`, `perplexity`, `theta`. theme ggplot2 theme apply scatterplot. Defaults theme_bw. ... Optional additional arguments pass tof_plot_cells_scatter. method string indicating plotting engine used. Valid values include \"ggplot2\" (default) \"scattermore\" (recommended 100K cells plotted). Note method = \"scattermore\" requires scattermore package installed.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_embedding.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot scatterplots of single-cell data using low-dimensional feature embeddings — tof_plot_cells_embedding","text":"ggplot object.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_embedding.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot scatterplots of single-cell data using low-dimensional feature embeddings — tof_plot_cells_embedding","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = c(rnorm(n = 500), rnorm(n = 500, mean = 2)),         cd34 = c(rnorm(n = 500), rnorm(n = 500, mean = 4)),         cd19 = rnorm(n = 1000),         cluster_id = c(rep(\"a\", 500), rep(\"b\", 500))     )  # embed with pca pca_plot <-     tof_plot_cells_embedding(         tof_tibble = sim_data,         color_col = cd38,         embedding_method = \"pca\",         compute_embedding_cols = starts_with(\"cd\")     )  # embed with tsne tsne_plot <-     tof_plot_cells_embedding(         tof_tibble = sim_data,         color_col = cluster_id,         embedding_method = \"tsne\",         compute_embedding_cols = starts_with(\"cd\")     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_layout.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot force-directed layouts of single-cell data — tof_plot_cells_layout","title":"Plot force-directed layouts of single-cell data — tof_plot_cells_layout","text":"function makes force-directed layouts using single-cell data embedded 2-dimensional space representing k-nearest-neighbor graph constructed using cell--cell similarities. node force-directed layout represents single cell colored using user-specified variable.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_layout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot force-directed layouts of single-cell data — tof_plot_cells_layout","text":"","code":"tof_plot_cells_layout(   tof_tibble,   knn_cols = where(tof_is_numeric),   color_col,   facet_cols,   num_neighbors = 5,   graph_type = c(\"weighted\", \"unweighted\"),   graph_layout = \"fr\",   distance_function = c(\"euclidean\", \"cosine\"),   edge_alpha = 0.25,   node_size = 2,   theme = ggplot2::theme_void(),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_layout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot force-directed layouts of single-cell data — tof_plot_cells_layout","text":"tof_tibble `tof_tbl` `tibble`. knn_cols Unquoted column names indicating columns `tof_tibble` used compute cell--cell distances used construct k-nearest-neighbor graph. Supports tidyselect helpers. Defaults numeric columns. color_col Unquoted column name indicating column `tof_tibble` used color nodes force-directed layout. facet_cols Unquoted column names indicating columns `tof_tibble` used separate nodes different force-directed layouts. num_neighbors integer specifying many neighbors used construct k-nearest neighbor graph. graph_type string specifying k-nearest neighbor graph \"weighted\" (default) \"unweighted\". graph_layout string specifying algorithm used compute force-directed layout. Passed ggraph. Defaults \"fr\", Fruchterman-Reingold algorithm. examples include \"nicely\", \"gem\", \"kk\", many others. See layout_tbl_graph_igraph examples. distance_function string indicating distance function use computing cell--cell distances. Valid options include \"euclidean\" (default) \"cosine\". edge_alpha numeric value 0 1 specifying transparency edges drawn force-directed layout. Defaults 0.25. node_size numeric value specifying size nodes force-directed layout. Defaults 2. theme ggplot2 theme apply force-directed layout. Defaults theme_void ... hnsw_knn","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_layout.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot force-directed layouts of single-cell data — tof_plot_cells_layout","text":"ggraph/ggplot object.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_layout.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot force-directed layouts of single-cell data — tof_plot_cells_layout","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = c(rnorm(n = 500), rnorm(n = 500, mean = 2)),         cd34 = c(rnorm(n = 500), rnorm(n = 500, mean = 4)),         cd19 = rnorm(n = 1000),         cluster_id = c(rep(\"a\", 500), rep(\"b\", 500))     )  # make a layout colored by a marker layout_cd38 <-     tof_plot_cells_layout(         tof_tibble = sim_data,         color_col = cd38     )  # make a layout colored by cluster id layout_cluster <-     tof_plot_cells_layout(         tof_tibble = sim_data,         color_col = cluster_id,     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_scatter.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot scatterplots of single-cell data. — tof_plot_cells_scatter","title":"Plot scatterplots of single-cell data. — tof_plot_cells_scatter","text":"function makes scatterplots single-cell data using user-specified x- y-axes. Additionally, point scatterplot can colored using user-specified variable.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_scatter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot scatterplots of single-cell data. — tof_plot_cells_scatter","text":"","code":"tof_plot_cells_scatter(   tof_tibble,   x_col,   y_col,   color_col,   facet_cols,   theme = ggplot2::theme_bw(),   ...,   method = c(\"ggplot2\", \"scattermore\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_scatter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot scatterplots of single-cell data. — tof_plot_cells_scatter","text":"tof_tibble `tof_tbl` `tibble`. x_col unquoted column name specifying column `tof_tibble` used x-axis. y_col unquoted column name specifying column `tof_tibble` used y-axis. color_col unquoted column name specifying column `tof_tibble` used color point scatterplot. facet_cols unquoted column name specifying column `tof_tibble` used break scatterplot facets using facet_wrap. theme ggplot2 theme apply scatterplot. Defaults theme_bw. ... Optional additional arguments pass geom_point method = \"ggplot2\" geom_scattermore method = \"scattermore\". method string indicating plotting engine used. Valid values include \"ggplot2\" (default) \"scattermore\" (recommended 100K cells plotted). Note method = \"scattermore\" requires scattermore package installed.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_scatter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot scatterplots of single-cell data. — tof_plot_cells_scatter","text":"ggplot object.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_scatter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot scatterplots of single-cell data. — tof_plot_cells_scatter","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = c(rnorm(n = 500), rnorm(n = 500, mean = 2)),         cd34 = c(rnorm(n = 500), rnorm(n = 500, mean = 4)),         cd19 = rnorm(n = 1000),         cluster_id = c(rep(\"a\", 500), rep(\"b\", 500))     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a heatmap summarizing cluster marker expression patterns in CyTOF data — tof_plot_clusters_heatmap","title":"Make a heatmap summarizing cluster marker expression patterns in CyTOF data — tof_plot_clusters_heatmap","text":"function makes heatmap cluster--cluster marker expression patterns single-cell data. Markers plotted along horizontal (x-) axis heatmap cluster IDs plotted along vertical (y-) axis heatmap.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a heatmap summarizing cluster marker expression patterns in CyTOF data — tof_plot_clusters_heatmap","text":"","code":"tof_plot_clusters_heatmap(   tof_tibble,   cluster_col,   marker_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   scale_markerwise = FALSE,   scale_clusterwise = FALSE,   cluster_markers = TRUE,   cluster_clusters = TRUE,   line_width = 0.25,   theme = ggplot2::theme_minimal() )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a heatmap summarizing cluster marker expression patterns in CyTOF data — tof_plot_clusters_heatmap","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names indicating column `tof_tibble` interpreted markers plotted along x-axis heatmap. Supports tidyselect helpers. central_tendency_function function use computing measure central tendency aggregated cluster cluster_col. Defaults median. scale_markerwise boolean value indicating heatmap rescale columns heatmap maximum value marker 1 minimum value 0. Defaults FALSE. scale_clusterwise boolean value indicating heatmap rescale rows heatmap maximum value cluster 1 minimum value 0. Defaults FALSE. cluster_markers boolean value indicating heatmap order columns (.e. markers) using hierarchical clustering. Defaults TRUE. cluster_clusters boolean value indicating heatmap order rows (.e. clusters) using hierarchical clustering. Defaults TRUE. line_width numeric value indicating thick lines separating tiles heatmap . Defaults 0.25. theme ggplot2 theme apply heatmap. Defaults theme_minimal","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a heatmap summarizing cluster marker expression patterns in CyTOF data — tof_plot_clusters_heatmap","text":"ggplot object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_heatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a heatmap summarizing cluster marker expression patterns in CyTOF data — tof_plot_clusters_heatmap","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  heatmap <-     tof_plot_clusters_heatmap(         tof_tibble = sim_data,         cluster_col = cluster_id     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_mst.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize clusters in CyTOF data using a minimum spanning tree (MST). — tof_plot_clusters_mst","title":"Visualize clusters in CyTOF data using a minimum spanning tree (MST). — tof_plot_clusters_mst","text":"function plots minimum-spanning tree using clustered single-cell data order summarize cluster-level characteristics. node MST represents single cluster colored using user-specified variable (either continuous discrete).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_mst.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize clusters in CyTOF data using a minimum spanning tree (MST). — tof_plot_clusters_mst","text":"","code":"tof_plot_clusters_mst(   tof_tibble,   cluster_col,   knn_cols = where(tof_is_numeric),   color_col,   num_neighbors = 5L,   graph_type = c(\"unweighted\", \"weighted\"),   graph_layout = \"nicely\",   central_tendency_function = stats::median,   distance_function = c(\"euclidean\", \"cosine\"),   edge_alpha = 0.4,   node_size = \"cluster_size\",   theme = ggplot2::theme_void(),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_mst.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize clusters in CyTOF data using a minimum spanning tree (MST). — tof_plot_clusters_mst","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. knn_cols Unquoted column names indicating columns `tof_tibble` used compute cluster--cluster distances used construct k-nearest-neighbor graph. Supports tidyselect helpers. Defaults numeric columns. color_col Unquoted column name indicating column `tof_tibble` used color nodes MST. num_neighbors integer specifying many neighbors used construct k-nearest neighbor graph. graph_type string specifying k-nearest neighbor graph \"weighted\" (default) \"unweighted\". graph_layout argument specifies layout MST one two ways. Option 1: Provide string specifying algorithm used compute force-directed layout. Passed ggraph. Defaults \"nicely\", tries automatically select visually-appealing layout. examples include \"fr\", \"gem\", \"kk\", many others. See layout_tbl_graph_igraph examples. Option 2: Provide ggraph object previously generated function. layout used plot ggraph object used template new plot. Using option, number clusters (labels) must identical template. option useful want make multiple plots tof_tibble colored different protein markers, example. central_tendency_function function use computing measure central tendency aggregated cluster cluster_col. Defaults median. distance_function string indicating distance function use computing cluster--clusters distances constructing MST. Valid options include \"euclidean\" (default) \"cosine\". edge_alpha numeric value 0 1 specifying transparency edges drawn force-directed layout. Defaults 0.25. node_size Either numeric value specifying size nodes MST string \"cluster_size\", case size node representing cluster scaled according number cells cluster (default). theme ggplot2 theme apply force-directed layout. Defaults theme_void ... Optional additional arguments hnsw_knn","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_mst.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize clusters in CyTOF data using a minimum spanning tree (MST). — tof_plot_clusters_mst","text":"ggraph/ggplot object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_mst.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize clusters in CyTOF data using a minimum spanning tree (MST). — tof_plot_clusters_mst","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  # make a layout colored by a marker layout_cd38 <-     tof_plot_clusters_mst(         tof_tibble = sim_data,         cluster_col = cluster_id,         color_col = cd38     )  # use the same layout as the plot above to color the same # tree using a different marker layout_cd45 <-     tof_plot_clusters_mst(         tof_tibble = sim_data,         cluster_col = cluster_id,         color_col = cd45,         graph_layout = layout_cd38     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_volcano.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a volcano plot from differential expression analysis results — tof_plot_clusters_volcano","title":"Create a volcano plot from differential expression analysis results — tof_plot_clusters_volcano","text":"function makes volcano plot using results differential expression analysis (DEA) produced one `tof_dea_*` verbs. point volcano plot represents single cluster-marker pair, colored significance level direction marker expression difference.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_volcano.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a volcano plot from differential expression analysis results — tof_plot_clusters_volcano","text":"","code":"tof_plot_clusters_volcano(   dea_result,   num_top_pairs = 10L,   alpha = 0.05,   point_size = 2,   label_size = 3,   nudge_x = 0,   nudge_y = 0.25,   increase_color = \"#207394\",   decrease_color = \"#cd5241\",   insignificant_color = \"#cdcdcd\",   use_ggrepel = FALSE,   theme = ggplot2::theme_bw() )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_volcano.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a volcano plot from differential expression analysis results — tof_plot_clusters_volcano","text":"dea_result tibble containing differential expression analysis (DEA) results produced one members `tof_dea_*` function family. num_top_pairs integer representing number significant cluster-marker pairs labeled volcano plot. alpha numeric value 0 1 representing significance level p-value considered statistically significant. Defaults 0.05. point_size numeric value specifying size points volcano plot. label_size numeric value specifying size text labeling cluster-marker pairs. nudge_x numeric value specifying far cluster-marker pair labels adjusted left (`nudge_x` negative) right (`nudge_x` positive) avoid overlap plotted points. Passed  geom_text, ignored `use_ggrepel` = TRUE. Defaults 0. nudge_y numeric value specifying far cluster-marker pair labels adjusted downwards (`nudge_y` negative) upwards (`nudge_y` positive) avoid overlap plotted points. Passed  geom_text, ignored `use_ggrepel` = TRUE. Defaults 0.25. increase_color hex code specifying fill color used points corresponding cluster-marker pairs significant increases detected. decrease_color hex code specifying fill color used points corresponding cluster-marker pairs significant decreases detected. insignificant_color hex code specifying fill color used points corresponding cluster-marker pairs significant differences detected. use_ggrepel boolean value indicting geom_text_repel used plot labels cluster-marker pairs. Defaults FALSE. TRUE, ggrepel package must installed. theme ggplot2 theme apply volcano plot. Defaults theme_bw","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_volcano.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a volcano plot from differential expression analysis results — tof_plot_clusters_volcano","text":"ggplot object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_volcano.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a volcano plot from differential expression analysis results — tof_plot_clusters_volcano","text":"","code":"# create a mock differential expression analysis result sim_dea_result <-     dplyr::tibble(         cluster_id = rep(letters, 2),         marker = rep(c(\"cd45\", \"cd34\"), times = length(letters)),         p_adj = runif(n = 2 * length(letters), min = 0, max = 0.5),         mean_fc = runif(n = 2 * length(letters), min = 0.01, max = 10),         significant = dplyr::if_else(p_adj < 0.05, \"*\", \"\")     )  attr(sim_dea_result, which = \"dea_method\") <- \"t_unpaired\"  # create the volcano plot volcano <- tof_plot_clusters_volcano(dea_result = sim_dea_result)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a heatmap summarizing group marker expression patterns in high-dimensional cytometry data — tof_plot_heatmap","title":"Make a heatmap summarizing group marker expression patterns in high-dimensional cytometry data — tof_plot_heatmap","text":"function makes heatmap group--group marker expression patterns single-cell data. Markers plotted along horizontal (x-) axis heatmap groups plotted along vertical (y-) axis heatmap.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a heatmap summarizing group marker expression patterns in high-dimensional cytometry data — tof_plot_heatmap","text":"","code":"tof_plot_heatmap(   tof_tibble,   y_col,   marker_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   scale_markerwise = FALSE,   scale_ywise = FALSE,   cluster_markers = TRUE,   cluster_groups = TRUE,   line_width = 0.25,   theme = ggplot2::theme_minimal() )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a heatmap summarizing group marker expression patterns in high-dimensional cytometry data — tof_plot_heatmap","text":"tof_tibble `tof_tbl` `tibble`. y_col unquoted column name indicating column `tof_tibble` stores ids group cell belongs. marker_cols Unquoted column names indicating column `tof_tibble` interpreted markers plotted along x-axis heatmap. Supports tidyselect helpers. central_tendency_function function use computing measure central tendency aggregated cluster cluster_col. Defaults median. scale_markerwise boolean value indicating heatmap rescale columns heatmap maximum value marker 1 minimum value 0. Defaults FALSE. scale_ywise boolean value indicating heatmap rescale rows heatmap maximum value group 1 minimum value 0. Defaults FALSE. cluster_markers boolean value indicating heatmap order columns (.e. markers) using hierarchical clustering. Defaults TRUE. cluster_groups boolean value indicating heatmap order rows (.e. groups) using hierarchical clustering. Defaults TRUE. line_width numeric value indicating thick lines separating tiles heatmap . Defaults 0.25. theme ggplot2 theme apply heatmap. Defaults theme_minimal","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a heatmap summarizing group marker expression patterns in high-dimensional cytometry data — tof_plot_heatmap","text":"ggplot object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the results of a glmnet model fit on sample-level data. — tof_plot_model","title":"Plot the results of a glmnet model fit on sample-level data. — tof_plot_model","text":"Plot results glmnet model fit sample-level data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the results of a glmnet model fit on sample-level data. — tof_plot_model","text":"","code":"tof_plot_model(tof_model, new_data, theme = ggplot2::theme_bw())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the results of a glmnet model fit on sample-level data. — tof_plot_model","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations plot made. new_data provided, plot made using training data used fit model. Alternatively, string \"tuning_data\" can provided, plot generated using predictions generated model tuning. theme ggplot2 theme apply plot Defaults theme_bw","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the results of a glmnet model fit on sample-level data. — tof_plot_model","text":"ggplot object. `tof_model` linear model, scatterplot predicted outcome vs. true outcome returned. `tof_model` two-class model, ROC curve returned. `tof_model` multiclass model, one-versus-ROC curve returned class. `tof_model` survival model, Kaplan-Meier curve returned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the results of a glmnet model fit on sample-level data. — tof_plot_model","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             )     )  new_tibble <-     dplyr::tibble(         sample = as.character(1:20),         cd45 = runif(n = 20),         pstat5 = runif(n = 20),         cd34 = runif(n = 20),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(20),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             )     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  # make the plot plot_1 <- tof_plot_model(tof_model = regression_model, new_data = new_tibble)  # train a logistic regression classifier logistic_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = class,         model_type = \"two-class\"     )  # make the plot  plot_2 <- tof_plot_model(tof_model = logistic_model, new_data = new_tibble)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_linear.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the results of a linear glmnet model fit on sample-level data. — tof_plot_model_linear","title":"Plot the results of a linear glmnet model fit on sample-level data. — tof_plot_model_linear","text":"Plot results linear glmnet model fit sample-level data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_linear.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the results of a linear glmnet model fit on sample-level data. — tof_plot_model_linear","text":"","code":"tof_plot_model_linear(tof_model, new_data, theme = ggplot2::theme_bw())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_linear.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the results of a linear glmnet model fit on sample-level data. — tof_plot_model_linear","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations plot made. new_data provided, plot made using training data used fit model. Alternatively, string \"tuning_data\" can provided, plot generated using predictions generated model tuning. theme ggplot2 theme apply plot Defaults theme_bw","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_linear.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the results of a linear glmnet model fit on sample-level data. — tof_plot_model_linear","text":"ggplot object. Specifically, scatterplot predicted outcome vs. true outcome returned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_logistic.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the results of a two-class glmnet model fit on sample-level data. — tof_plot_model_logistic","title":"Plot the results of a two-class glmnet model fit on sample-level data. — tof_plot_model_logistic","text":"Plot results two-class glmnet model fit sample-level data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_logistic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the results of a two-class glmnet model fit on sample-level data. — tof_plot_model_logistic","text":"","code":"tof_plot_model_logistic(tof_model, new_data, theme = ggplot2::theme_bw())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_logistic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the results of a two-class glmnet model fit on sample-level data. — tof_plot_model_logistic","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations plot made. new_data provided, plot made using training data used fit model. Alternatively, string \"tuning_data\" can provided, plot generated using predictions generated model tuning. theme ggplot2 theme apply plot. Defaults theme_bw","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_logistic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the results of a two-class glmnet model fit on sample-level data. — tof_plot_model_logistic","text":"ggplot object. Specifically, ROC curve..","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_multinomial.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the results of a multiclass glmnet model fit on sample-level data. — tof_plot_model_multinomial","title":"Plot the results of a multiclass glmnet model fit on sample-level data. — tof_plot_model_multinomial","text":"Plot results multiclass glmnet model fit sample-level data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_multinomial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the results of a multiclass glmnet model fit on sample-level data. — tof_plot_model_multinomial","text":"","code":"tof_plot_model_multinomial(tof_model, new_data, theme = ggplot2::theme_bw())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_multinomial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the results of a multiclass glmnet model fit on sample-level data. — tof_plot_model_multinomial","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations plot made. new_data provided, plot made using training data used fit model. Alternatively, string \"tuning_data\" can provided, plot generated using predictions generated model tuning. theme ggplot2 theme apply plot. Defaults theme_bw.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_multinomial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the results of a multiclass glmnet model fit on sample-level data. — tof_plot_model_multinomial","text":"ggplot object. Specifically, one-versus-ROC curve (one class).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_survival.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the results of a survival glmnet model fit on sample-level data. — tof_plot_model_survival","title":"Plot the results of a survival glmnet model fit on sample-level data. — tof_plot_model_survival","text":"Plot results survival glmnet model fit sample-level data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_survival.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the results of a survival glmnet model fit on sample-level data. — tof_plot_model_survival","text":"","code":"tof_plot_model_survival(   tof_model,   new_data,   censor_size = 2.5,   theme = ggplot2::theme_bw() )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_survival.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the results of a survival glmnet model fit on sample-level data. — tof_plot_model_survival","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations plot made. new_data provided, plot made using training data used fit model. Alternatively, string \"tuning_data\" can provided, plot generated using predictions generated model tuning. censor_size numeric value indicating large plot tick marks representing censored values Kaplan-Meier curve. theme ggplot2 theme apply plot. Defaults theme_bw","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_survival.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the results of a survival glmnet model fit on sample-level data. — tof_plot_model_survival","text":"ggplot object. Specifically, Kaplan-Meier curve.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_features","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_features","text":"function makes heatmap sample--sample marker expression patterns single-cell data. Markers plotted along horizontal (x-) axis heatmap sample IDs plotted along vertical (y-) axis heatmap.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_features","text":"","code":"tof_plot_sample_features(   feature_tibble,   sample_col,   feature_cols = where(tof_is_numeric),   scale_featurewise = FALSE,   scale_samplewise = FALSE,   line_width = 0.25,   theme = ggplot2::theme_minimal() )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_features","text":"feature_tibble tbl_df data.frame aggregated sample-level features, generated tof_extract_features. sample_col unquoted column name indicating column `tof_tibble` stores IDs sample. sample IDs present, numeric ID assigned row `feature_tibble` based row index. feature_cols Unquoted column names indicating column `feature_tibble` interpreted features plotted along x-axis heatmap. Supports tidyselect helpers. scale_featurewise boolean value indicating heatmap rescale columns heatmap maximum value marker 1 minimum value 0. Defaults FALSE. scale_samplewise boolean value indicating heatmap rescale rows heatmap maximum value sample 1 minimum value 0. Defaults FALSE. line_width numeric value indicating thick lines separating tiles heatmap . Defaults 0.25. theme ggplot2 theme apply heatmap. Defaults theme_minimal","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_features","text":"ggplot object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_features.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_features","text":"","code":"# simulate single-cell data sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         sample_id = sample(paste0(\"sample\", 1:5), size = 1000, replace = TRUE)     )  # extract cluster proportions in each simulated patient feature_data <-     tof_extract_proportion(         tof_tibble = sim_data,         cluster_col = cluster_id,         group_cols = sample_id     )  # plot the heatmap heatmap <- tof_plot_sample_features(feature_tibble = feature_data)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_heatmap","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_heatmap","text":"function makes heatmap sample--sample marker expression patterns single-cell data. Markers plotted along horizontal (x-) axis heatmap sample IDs plotted along vertical (y-) axis heatmap.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_heatmap","text":"","code":"tof_plot_sample_heatmap(   tof_tibble,   sample_col,   marker_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   scale_markerwise = FALSE,   scale_samplewise = FALSE,   line_width = 0.25,   theme = ggplot2::theme_minimal() )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_heatmap","text":"tof_tibble `tof_tbl` `tibble`. sample_col unquoted column name indicating column `tof_tibble` stores ids sample cell belongs. marker_cols Unquoted column names indicating column `tof_tibble` interpreted markers plotted along x-axis heatmap. Supports tidyselect helpers. central_tendency_function function use computing measure central tendency aggregated sample cluster_col. Defaults median. scale_markerwise boolean value indicating heatmap rescale columns heatmap maximum value marker 1 minimum value 0. Defaults FALSE. scale_samplewise boolean value indicating heatmap rescale rows heatmap maximum value sample 1 minimum value 0. Defaults FALSE. line_width numeric value indicating thick lines separating tiles heatmap . Defaults 0.25. theme ggplot2 theme apply heatmap. Defaults theme_minimal","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_heatmap","text":"ggplot object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_heatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_heatmap","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         sample_id = sample(paste0(\"sample\", 1:5), size = 1000, replace = TRUE)     )  heatmap <-     tof_plot_sample_heatmap(         tof_tibble = sim_data,         sample_col = sample_id     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_postprocess.html","id":null,"dir":"Reference","previous_headings":"","what":"Post-process transformed CyTOF data. — tof_postprocess","title":"Post-process transformed CyTOF data. — tof_postprocess","text":"function transforms `tof_tibble` transformed ion counts mass cytometer back something looks like .fcs file Fluidigm software generates.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_postprocess.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Post-process transformed CyTOF data. — tof_postprocess","text":"","code":"tof_postprocess(   tof_tibble = NULL,   channel_cols = where(tof_is_numeric),   redo_noise = FALSE,   transform_fun = function(x) rev_asinh(x, shift_factor = 0, scale_factor = 0.2) )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_postprocess.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Post-process transformed CyTOF data. — tof_postprocess","text":"tof_tibble `tof_tibble` `tibble`. channel_cols vector non-quoted column names indicating columns `tof_tibble` contain protein measurements. Supports tidyselect helpers. nothing specified, default transform numeric columns. redo_noise boolean value indicating whether add  uniform noise CyTOF measurement aesthetic visualization purposes. See paper. Defaults FALSE transform_fun vectorized function apply column specified `channel_cols` post-processing. Defaults rev_asinh transformation (cofactor 5).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_postprocess.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Post-process transformed CyTOF data. — tof_postprocess","text":"`tof_tbl` identical dimensions input `tof_tibble`, columns specified channel_cols transformed using `transform_fun` (noise added removed depending `redo_noise`).","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_postprocess.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Post-process transformed CyTOF data. — tof_postprocess","text":"","code":"# read in an example .fcs file from tidytof's internal datasets input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]] tof_tibble <- tof_read_data(input_file)  # preprocess all numeric columns with default behavior # arcsinh transformation with a cofactor of 5 preprocessed_tof_tibble <- tof_preprocess(tof_tibble)  # postprocess all numeric columns to reverse the preprocessing tof_postprocess(tof_tibble) #> # A tibble: 100 × 59 #>     Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>    <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1   Inf    22215276.   6.00e224          8.82      1411688.    Inf        #>  2   Inf   446205752. Inf               135.         859679.    Inf        #>  3   Inf    22215276. Inf              2634.            321.      8.51e277 #>  4   Inf    22215276.   2.24e254          3.47         1383.      8.29e254 #>  5   Inf   164149923. Inf               127.          38726.      3.70e280 #>  6   Inf   446205752.   1.14e211        163.            116.      3.29e272 #>  7   Inf    22215276.   2.62e219         79.1           175.      1.82e246 #>  8   Inf   164149923.   5.35e246       1876.         291228.      5.64e305 #>  9   Inf   446205752. Inf                55.3         24727.    Inf        #> 10   Inf    22215276.   2.38e236          5.05      2010273.    Inf        #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_predict.html","id":null,"dir":"Reference","previous_headings":"","what":"Use a trained elastic net model to predict fitted values from new data — tof_predict","title":"Use a trained elastic net model to predict fitted values from new data — tof_predict","text":"function uses trained `tof_model` make predictions new data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_predict.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use a trained elastic net model to predict fitted values from new data — tof_predict","text":"","code":"tof_predict(   tof_model,   new_data,   prediction_type = c(\"response\", \"class\", \"link\", \"survival curve\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_predict.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use a trained elastic net model to predict fitted values from new data — tof_predict","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations predictions made. new_data provided, predictions made training data used fit model. prediction_type string indicating type prediction provided model: \"response\" (default) \"linear\" models, predicted response observation. \"two-class\" \"multiclass\" models, fitted probabilities class observation. \"survival\" models, fitted relative-risk observation. \"class\" applies \"two-class\" \"multiclass\" models. , class label corresponding class maximum fitted probability. \"link\" linear predictions model (output link function model family.) \"survival curve\" applies \"survival\" models. Returns tibble indicating patient's probability survival (1 - probability(event)) timepoint dataset. Obtained using survfit function.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_predict.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use a trained elastic net model to predict fitted values from new data — tof_predict","text":"tibble single column (`.pred`) containing predictions , multiclass models `prediction_type` == \"response\", tibble one column class. row output corresponds row `new_data` ( , `new_data` provided, row `tof_model`'s training data). latter case, sure check `tof_model$training_data` confirm order observations, resampling procedure can change ordering relative original input data.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_predict.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Use a trained elastic net model to predict fitted values from new data — tof_predict","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100)     )  new_tibble <-     dplyr::tibble(         sample = as.character(1:20),         cd45 = runif(n = 20),         pstat5 = runif(n = 20),         cd34 = runif(n = 20),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(20)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  # apply the model to new data tof_predict(tof_model = regression_model, new_data = new_tibble) #> # A tibble: 20 × 1 #>    .pred #>    <dbl> #>  1 1.36  #>  2 1.19  #>  3 3.33  #>  4 1.54  #>  5 2.12  #>  6 3.59  #>  7 4.24  #>  8 1.80  #>  9 2.16  #> 10 2.36  #> 11 0.753 #> 12 2.59  #> 13 4.29  #> 14 3.85  #> 15 3.18  #> 16 3.19  #> 17 3.04  #> 18 2.96  #> 19 1.65  #> 20 1.09"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_prep_recipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Train a recipe or list of recipes for preprocessing sample-level cytometry data — tof_prep_recipe","title":"Train a recipe or list of recipes for preprocessing sample-level cytometry data — tof_prep_recipe","text":"Train recipe list recipes preprocessing sample-level cytometry data","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_prep_recipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Train a recipe or list of recipes for preprocessing sample-level cytometry data — tof_prep_recipe","text":"","code":"tof_prep_recipe(split_data, unprepped_recipe)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_prep_recipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Train a recipe or list of recipes for preprocessing sample-level cytometry data — tof_prep_recipe","text":"split_data `rsplit` `rset` object rsample package containing sample-level data use modeling. easiest way generate use tof_split_data. Alternatively, unsplit tbl_df, though recommended. unprepped_recipe recipe object (`split_data` `rsplit` object `tbl_df`) list recipes (`split_data` `rset` object).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_prep_recipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Train a recipe or list of recipes for preprocessing sample-level cytometry data — tof_prep_recipe","text":"split_data \"rsplit\" \"tbl_df\" object, return single prepped recipe. split_data \"rset\" object, return list prepped recipes specific fold resampling procedure.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_preprocess.html","id":null,"dir":"Reference","previous_headings":"","what":"Preprocess raw high-dimensional cytometry data. — tof_preprocess","title":"Preprocess raw high-dimensional cytometry data. — tof_preprocess","text":"function transforms `tof_tbl` raw ion counts, reads, fluorescence intensity units directly measured cytometer using user-provided function. can used perform standard pre-processing steps (.e. arcsinh transformation) cytometry data analysis.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_preprocess.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preprocess raw high-dimensional cytometry data. — tof_preprocess","text":"","code":"tof_preprocess(   tof_tibble = NULL,   channel_cols = where(tof_is_numeric),   undo_noise = FALSE,   transform_fun = function(x) asinh(x/5) )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_preprocess.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preprocess raw high-dimensional cytometry data. — tof_preprocess","text":"tof_tibble `tof_tbl` `tibble`. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. nothing specified, default transform numeric columns. undo_noise boolean value indicating whether remove uniform noise Fluidigm software adds CyTOF measurements aesthetic visualization purposes. See paper. Defaults FALSE. transform_fun vectorized function apply protein value variance stabilization. Defaults asinh transformation (co-factor 5).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_preprocess.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preprocess raw high-dimensional cytometry data. — tof_preprocess","text":"`tof_tbl` identical dimensions input `tof_tibble`, columns specified channel_cols transformed using `transform_fun` (noise removed removed depending `undo_noise`).","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_preprocess.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Preprocess raw high-dimensional cytometry data. — tof_preprocess","text":"","code":"# read in an example .fcs file from tidytof's internal datasets input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]] tof_tibble <- tof_read_data(input_file)  # preprocess all numeric columns with default behavior # arcsinh transformation with a cofactor of 5 tof_preprocess(tof_tibble) #> # A tibble: 100 × 59 #>     Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>    <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1 15.3          1.88       5.33         0.263         1.70           5.85 #>  2 14.9          2.05       5.83         0.731         1.67           5.71 #>  3 15.2          1.88       5.70         1.13          0.861          5.54 #>  4 13.7          1.88       5.45         0.129         1.06           5.46 #>  5 15.2          1.99       5.73         0.721         1.41           5.55 #>  6 14.4          2.05       5.27         0.760         0.708          5.52 #>  7 13.9          1.88       5.31         0.645         0.771          5.42 #>  8 14.2          1.99       5.42         1.09          1.58           5.64 #>  9 15.6          2.05       6.03         0.586         1.37           5.83 #> 10  9.75         1.88       5.38         0.177         1.73           5.78 #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …  # preprocess all numeric columns using the log base 10 tranformation tof_preprocess(tof_tibble, transform_fun = log10) #> # A tibble: 100 × 59 #>     Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>    <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1  7.04         1.20       2.71        0.125          1.12           2.94 #>  2  6.85         1.28       2.93        0.601          1.11           2.88 #>  3  6.99         1.20       2.87        0.843          0.686          2.81 #>  4  6.36         1.20       2.77       -0.189          0.800          2.77 #>  5  6.98         1.26       2.89        0.594          0.984          2.81 #>  6  6.65         1.28       2.69        0.621          0.584          2.80 #>  7  6.44         1.20       2.70        0.539          0.628          2.75 #>  8  6.57         1.26       2.75        0.821          1.07           2.85 #>  9  7.18         1.28       3.02        0.491          0.964          2.93 #> 10  4.63         1.20       2.74       -0.0515         1.13           2.91 #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Read high-dimensional cytometry data from a .csv file into a tidy tibble. — tof_read_csv","title":"Read high-dimensional cytometry data from a .csv file into a tidy tibble. — tof_read_csv","text":"Read high-dimensional cytometry data .csv file tidy tibble.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read high-dimensional cytometry data from a .csv file into a tidy tibble. — tof_read_csv","text":"","code":"tof_read_csv(file_path = NULL, panel_info = dplyr::tibble())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read high-dimensional cytometry data from a .csv file into a tidy tibble. — tof_read_csv","text":"file_path file path single .csv file. panel_info Optional. tibble data.frame containing information panel used high-dimensional cytometry data acquisition. Two columns required: \"metals\" \"antigens\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_csv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read high-dimensional cytometry data from a .csv file into a tidy tibble. — tof_read_csv","text":"`tof_tbl` row represents single cell column represents high-dimensional cytometry antigen channel. `tof_tbl` S3 class extends \"tibble\" class storing one additional attribute: \"panel\" (tibble storing information panel used data acquisition). panel information obvious data read .csv file, information must provided manually user (unlike `tof_read_fcs`).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Read data from an .fcs/.csv file or a directory of .fcs/.csv files. — tof_read_data","title":"Read data from an .fcs/.csv file or a directory of .fcs/.csv files. — tof_read_data","text":"Read data .fcs/.csv file directory .fcs/.csv files.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read data from an .fcs/.csv file or a directory of .fcs/.csv files. — tof_read_data","text":"","code":"tof_read_data(path = NULL, sep = \"|\", panel_info = dplyr::tibble())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read data from an .fcs/.csv file or a directory of .fcs/.csv files. — tof_read_data","text":"path file path single file directory files. valid file types .fcs files .csv files containing high-dimensional cytometry data. sep Optional. string use separate antigen name associated metal column names output tibble. Defaults \"|\". used input file .fcs file. panel_info Optional. tibble data.frame containing information panel used high-dimensional cytometry data acquisition. Two columns required: \"metals\" \"antigens\". used input file .csv file.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read data from an .fcs/.csv file or a directory of .fcs/.csv files. — tof_read_data","text":"[c m+1] tibble row represents single cell (c total dataset) column represents high-dimensional cytometry measurement (m total dataset). one .fcs read , last column tibble (`file_name`) represent file name .fcs file cell read.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read data from an .fcs/.csv file or a directory of .fcs/.csv files. — tof_read_data","text":"","code":"input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]] tof_read_data(input_file) #> # A tibble: 100 × 59 #>         Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>        <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1 11021370            16       517.         1.33          13.2           865. #>  2  7112446.           19       850.         3.99          12.7           756. #>  3  9722098            16       747.         6.96           4.85          639. #>  4  2267279.           16       585.         0.648          6.32          586. #>  5  9624729            18       773.         3.93           9.65          645. #>  6  4439897            19       485.         4.18           3.84          627. #>  7  2762526.           16       504.         3.46           4.25          566. #>  8  3746682.           18       567.         6.62          11.7           703. #>  9 15214280            19      1043.         3.10           9.20          853. #> 10    42699.           16       543.         0.888         13.6           813. #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_fcs.html","id":null,"dir":"Reference","previous_headings":"","what":"Read high-dimensional cytometry data from an .fcs file into a tidy tibble. — tof_read_fcs","title":"Read high-dimensional cytometry data from an .fcs file into a tidy tibble. — tof_read_fcs","text":"function reads high-dimensional cytometry data single .fcs file tidy data structure called `tof_tbl` (\"tof_tibble\"). tof_tibbles identical normal tibbles except additional attribute (\"panel\") stores information high-dimensional cytometry panel used data acquisition.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_fcs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read high-dimensional cytometry data from an .fcs file into a tidy tibble. — tof_read_fcs","text":"","code":"tof_read_fcs(file_path = NULL, sep = \"|\")"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_fcs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read high-dimensional cytometry data from an .fcs file into a tidy tibble. — tof_read_fcs","text":"file_path file path single .fcs file. sep string use separate antigen name associated metal column names output tibble. Defaults \"|\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_fcs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read high-dimensional cytometry data from an .fcs file into a tidy tibble. — tof_read_fcs","text":"`tof_tbl` row represents single cell column represents high-dimensional cytometry antigen channel. `tof_tbl` S3 class extends \"tibble\" class storing one additional attribute: \"panel\" (tibble storing information panel used data acquisition).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Read high-dimensional cytometry data from a single .fcs or .csv file into a tidy tibble. — tof_read_file","title":"Read high-dimensional cytometry data from a single .fcs or .csv file into a tidy tibble. — tof_read_file","text":"Read high-dimensional cytometry data single .fcs .csv file tidy tibble.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read high-dimensional cytometry data from a single .fcs or .csv file into a tidy tibble. — tof_read_file","text":"","code":"tof_read_file(file_path = NULL, sep = \"|\", panel_info = dplyr::tibble())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read high-dimensional cytometry data from a single .fcs or .csv file into a tidy tibble. — tof_read_file","text":"file_path file path single .fcs .csv file. sep string use separate antigen name associated metal column names output tibble. Defaults \"|\". used input file .fcs file. panel_info Optional. tibble data.frame containing information panel used high-dimensional cytometry data acquisition. Two columns required: \"metals\" \"antigens\". used input file .csv file.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read high-dimensional cytometry data from a single .fcs or .csv file into a tidy tibble. — tof_read_file","text":"`tof_tbl` row represents single cell column represents high-dimensional cytometry antigen channel. `tof_tbl` S3 class extends \"tibble\" class storing one additional attribute: \"panel\" (tibble storing information panel used data acquisition). panel information obvious data read .csv file, information must provided manually user.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_dimensions.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply dimensionality reduction to a single-cell dataset. — tof_reduce_dimensions","title":"Apply dimensionality reduction to a single-cell dataset. — tof_reduce_dimensions","text":"function wrapper around tidytof's tof_reduce_* function family. performs dimensionality reduction single-cell data using user-specified method (3 choices) method's corresponding input parameters","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_dimensions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply dimensionality reduction to a single-cell dataset. — tof_reduce_dimensions","text":"","code":"tof_reduce_dimensions(   tof_tibble,   ...,   augment = TRUE,   method = c(\"pca\", \"tsne\", \"umap\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_dimensions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply dimensionality reduction to a single-cell dataset. — tof_reduce_dimensions","text":"tof_tibble `tof_tbl` `tibble`. ... Arguments passed tof_reduce_* function corresponding embedding method. See tof_reduce_pca, tof_reduce_tsne, tof_reduce_umap. augment boolean value indicating output column-bind dimensionality-reduced embedding vectors cell new column `tof_tibble` (TRUE, default) tibble including low-dimensionality embeddings returned (FALSE). method method dimensionality reduction. Currently, PCA, tSNE, UMAP embedding supported.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_dimensions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply dimensionality reduction to a single-cell dataset. — tof_reduce_dimensions","text":"tibble number rows `tof_tibble`, representing single cell. `num_comp` columns represents cell's embedding calculated embedding space.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_dimensions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply dimensionality reduction to a single-cell dataset. — tof_reduce_dimensions","text":"","code":"# simulate single-cell data sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 100),         cd38 = rnorm(n = 100),         cd34 = rnorm(n = 100),         cd19 = rnorm(n = 100)     )  # calculate pca tof_reduce_dimensions(tof_tibble = sim_data, method = \"pca\") #> # A tibble: 100 × 8 #>       cd45   cd38   cd34   cd19    .pc1    .pc2   .pc3   .pc4 #>      <dbl>  <dbl>  <dbl>  <dbl>   <dbl>   <dbl>  <dbl>  <dbl> #>  1 -2.19   -0.336 -0.140 -0.788  2.20    0.473   0.791 -1.08  #>  2  0.391  -0.376  0.481  0.511 -0.342   0.672  -0.647  0.190 #>  3 -0.0239 -1.65  -1.46  -1.90   0.708   0.458   2.50   1.39  #>  4  1.37    0.891 -0.808  1.69  -2.25   -0.890  -0.464 -0.505 #>  5  1.37    0.466  0.380  1.73  -1.85    0.0115 -1.43  -0.141 #>  6  0.227  -1.05  -0.936 -0.833  0.0700  0.367   1.40   0.830 #>  7 -0.341   0.175  1.27  -0.404  1.09    0.315  -1.29   0.193 #>  8 -0.427   0.759 -0.851 -0.375  0.378  -1.07    0.516 -0.527 #>  9  1.36    0.150 -1.09   0.564 -1.68   -0.636   0.430  0.378 #> 10  1.41    1.16  -1.16   1.74  -2.44   -1.29   -0.264 -0.671 #> # ℹ 90 more rows  # calculate tsne tof_reduce_dimensions(tof_tibble = sim_data, method = \"tsne\") #> # A tibble: 100 × 6 #>       cd45   cd38   cd34   cd19 .tsne1 .tsne2 #>      <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl> #>  1 -2.19   -0.336 -0.140 -0.788  -3.85 -3.17  #>  2  0.391  -0.376  0.481  0.511  -1.06 -0.144 #>  3 -0.0239 -1.65  -1.46  -1.90   -1.83 -4.53  #>  4  1.37    0.891 -0.808  1.69    3.39 -3.69  #>  5  1.37    0.466  0.380  1.73    2.38 -3.61  #>  6  0.227  -1.05  -0.936 -0.833  -1.45 -3.19  #>  7 -0.341   0.175  1.27  -0.404  -3.72  0.278 #>  8 -0.427   0.759 -0.851 -0.375   1.90  2.28  #>  9  1.36    0.150 -1.09   0.564   1.56 -0.642 #> 10  1.41    1.16  -1.16   1.74    3.61 -3.74  #> # ℹ 90 more rows  # calculate umap tof_reduce_dimensions(tof_tibble = sim_data, method = \"umap\") #> Found more than one class \"dist\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘spam’ #> Found more than one class \"dist\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘spam’ #> # A tibble: 100 × 6 #>       cd45   cd38   cd34   cd19 .umap1  .umap2 #>      <dbl>  <dbl>  <dbl>  <dbl>  <dbl>   <dbl> #>  1 -2.19   -0.336 -0.140 -0.788 -0.152 -3.51   #>  2  0.391  -0.376  0.481  0.511 -1.68   0.0340 #>  3 -0.0239 -1.65  -1.46  -1.90  -1.93  -2.56   #>  4  1.37    0.891 -0.808  1.69  -2.59   2.12   #>  5  1.37    0.466  0.380  1.73  -2.51   1.72   #>  6  0.227  -1.05  -0.936 -0.833 -1.50  -2.36   #>  7 -0.341   0.175  1.27  -0.404  1.51  -1.79   #>  8 -0.427   0.759 -0.851 -0.375  0.607  2.92   #>  9  1.36    0.150 -1.09   0.564 -0.289  1.45   #> 10  1.41    1.16  -1.16   1.74  -2.35   2.32   #> # ℹ 90 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_pca.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform principal component analysis on single-cell data — tof_reduce_pca","title":"Perform principal component analysis on single-cell data — tof_reduce_pca","text":"function calculates principal components using single-cell data `tof_tibble`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_pca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform principal component analysis on single-cell data — tof_reduce_pca","text":"","code":"tof_reduce_pca(   tof_tibble,   pca_cols = where(tof_is_numeric),   num_comp = 5,   threshold = NA,   center = TRUE,   scale = TRUE,   return_recipe = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_pca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform principal component analysis on single-cell data — tof_reduce_pca","text":"tof_tibble `tof_tbl` `tibble`. pca_cols Unquoted column names indicating columns `tof_tibble` use computing principal components. Defaults numeric columns. Supports tidyselect helpers. num_comp number PCA components calculate. Defaults 5. See step_pca. threshold double 0 1 representing fraction total variance covered components returned output. See step_pca. center boolean value indicating column centered mean 0 PCA analysis. Defaults TRUE. scale boolean value indicating column scaled standard deviation = 1 PCA analysis. Defaults TRUE. return_recipe boolean value indicating instead UMAP result, prepped recipe object containing PCA embedding returned. Set option TRUE want create PCA embedding using one dataset also want project new observations onto embedding space later.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_pca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform principal component analysis on single-cell data — tof_reduce_pca","text":"tibble number rows `tof_tibble`, representing single cell. `num_comp` columns represents cell's embedding calculated principal component space.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_pca.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform principal component analysis on single-cell data — tof_reduce_pca","text":"","code":"# simulate single-cell data sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200)     ) new_data <-     dplyr::tibble(         cd45 = rnorm(n = 50),         cd38 = rnorm(n = 50),         cd34 = rnorm(n = 50),         cd19 = rnorm(n = 50)     )  # calculate pca tof_reduce_pca(tof_tibble = sim_data, num_comp = 2) #> # A tibble: 200 × 2 #>      .pc1    .pc2 #>     <dbl>   <dbl> #>  1 -0.268  1.30   #>  2 -1.65  -0.821  #>  3  2.29  -0.102  #>  4  0.689  1.19   #>  5  0.514 -0.596  #>  6 -0.165  0.0880 #>  7 -0.778  0.195  #>  8  0.741  0.356  #>  9 -1.18   1.33   #> 10 -0.795  1.17   #> # ℹ 190 more rows  # return recipe instead of embeddings pca_recipe <- tof_reduce_pca(tof_tibble = sim_data, return_recipe = TRUE)  # apply recipe to new data recipes::bake(pca_recipe, new_data = new_data) #> # A tibble: 50 × 4 #>       PC1    PC2     PC3     PC4 #>     <dbl>  <dbl>   <dbl>   <dbl> #>  1 -0.125  0.806  1.70    0.135  #>  2  0.349 -0.609  0.474   0.822  #>  3  1.22   0.322 -0.538  -0.322  #>  4  0.393 -0.204 -0.561   0.0919 #>  5  0.942 -0.606  0.944  -0.755  #>  6  0.351 -0.450  0.0103 -0.631  #>  7  0.280 -0.301 -0.0368  1.03   #>  8 -0.624  0.580 -0.249  -0.785  #>  9 -0.465  1.43  -0.641  -0.952  #> 10 -0.687 -0.774 -0.572  -1.23   #> # ℹ 40 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_tsne.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform t-distributed stochastic neighborhood embedding on single-cell data — tof_reduce_tsne","title":"Perform t-distributed stochastic neighborhood embedding on single-cell data — tof_reduce_tsne","text":"function calculates tSNE embedding using single-cell data `tof_tibble`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_tsne.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform t-distributed stochastic neighborhood embedding on single-cell data — tof_reduce_tsne","text":"","code":"tof_reduce_tsne(   tof_tibble,   tsne_cols = where(tof_is_numeric),   num_comp = 2,   perplexity = 30,   theta = 0.5,   max_iterations = 1000,   verbose = FALSE,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_tsne.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform t-distributed stochastic neighborhood embedding on single-cell data — tof_reduce_tsne","text":"tof_tibble `tof_tbl` `tibble`. tsne_cols Unquoted column names indicating columns `tof_tibble` use computing tSNE embedding. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. num_comp number tSNE components calculate embedding. Defaults 2. perplexity positive numeric value represents represents rough balance input data’s local global structure emphasized embedding. Smaller values emphasize local structure; larger values emphasize global structure. recommended range generally 5-50. Defaults 30. theta numeric value representing speed/accuracy tradeoff embedding. Set 0 exact tSNE; increase faster approximation. Defaults 0.5 max_iterations integer number iterations use embedding calculation. Defaults 1000. verbose boolean value indicating whether progress updates printed embedding calculation. Default FALSE. ... Additional arguments pass Rtsne.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_tsne.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform t-distributed stochastic neighborhood embedding on single-cell data — tof_reduce_tsne","text":"tibble number rows `tof_tibble`, representing single cell. `num_comp` columns represents cell's embedding calculated tSNE space.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_tsne.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform t-distributed stochastic neighborhood embedding on single-cell data — tof_reduce_tsne","text":"","code":"# simulate single-cell data sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200)     )  # calculate tsne tof_reduce_tsne(tof_tibble = sim_data) #> # A tibble: 200 × 2 #>    .tsne1 .tsne2 #>     <dbl>  <dbl> #>  1  -1.32  -1.22 #>  2   2.50  -6.94 #>  3  -3.78  -5.46 #>  4  -6.60   1.88 #>  5   2.66   5.15 #>  6   1.30   5.41 #>  7  -4.54   1.72 #>  8   4.14  -6.67 #>  9   3.18  -4.90 #> 10  -3.28   3.95 #> # ℹ 190 more rows  # calculate tsne with only 2 columns tof_reduce_tsne(tof_tibble = sim_data, tsne_cols = c(cd34, cd38)) #> # A tibble: 200 × 2 #>    .tsne1 .tsne2 #>     <dbl>  <dbl> #>  1   5.44  0.461 #>  2   4.92  2.53  #>  3  -3.89  7.34  #>  4   3.78 -0.795 #>  5  -5.32 -3.23  #>  6  -4.36 -1.07  #>  7  -4.55 -1.06  #>  8   7.56 -3.00  #>  9  -6.75  4.09  #> 10  -6.46  5.16  #> # ℹ 190 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_umap.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply uniform manifold approximation and projection (UMAP) to single-cell data — tof_reduce_umap","title":"Apply uniform manifold approximation and projection (UMAP) to single-cell data — tof_reduce_umap","text":"function calculates UMAP embedding single-cell data `tof_tibble`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_umap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply uniform manifold approximation and projection (UMAP) to single-cell data — tof_reduce_umap","text":"","code":"tof_reduce_umap(   tof_tibble,   umap_cols = where(tof_is_numeric),   num_comp = 2,   neighbors = 5,   min_dist = 0.01,   learn_rate = 1,   epochs = NULL,   verbose = FALSE,   n_threads = 1,   return_recipe = FALSE,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_umap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply uniform manifold approximation and projection (UMAP) to single-cell data — tof_reduce_umap","text":"tof_tibble `tof_tbl` `tibble`. umap_cols Unquoted column names indicating columns `tof_tibble` use computing UMAP embedding. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. num_comp integer number UMAP components. neighbors integer number nearest neighbors used construct target simplicial set. min_dist effective minimum distance embedded points. learn_rate Positive number learning rate optimization process. epochs Number iterations neighbor optimization. See umap details. verbose boolean indicating run details logged console. Defaults FALSE. n_threads Number threads use UMAP calculation. Defaults 1. return_recipe boolean value indicating instead UMAP result, prepped recipe object containing UMAP embedding returned. Set option TRUE want create UMAP embedding using one dataset also want project new observations onto embedding space later. ... Optional. options passed arguments umap.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_umap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply uniform manifold approximation and projection (UMAP) to single-cell data — tof_reduce_umap","text":"tibble number rows `tof_tibble`, representing single cell. `num_comp` columns represents cell's embedding calculated UMAP space.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_umap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply uniform manifold approximation and projection (UMAP) to single-cell data — tof_reduce_umap","text":"","code":"# simulate single-cell data sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200)     ) new_data <-     dplyr::tibble(         cd45 = rnorm(n = 50),         cd38 = rnorm(n = 50),         cd34 = rnorm(n = 50),         cd19 = rnorm(n = 50)     )  # calculate umap tof_reduce_umap(tof_tibble = sim_data) #> Found more than one class \"dist\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘spam’ #> Found more than one class \"dist\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘spam’ #> # A tibble: 200 × 2 #>    .umap1 .umap2 #>     <dbl>  <dbl> #>  1 -0.674  1.99  #>  2  1.95   2.67  #>  3 -4.69  -0.170 #>  4 -4.57  -0.216 #>  5  0.946 -0.379 #>  6 -0.731  2.87  #>  7 -2.34  -1.79  #>  8 -3.68  -1.10  #>  9 -4.70  -0.968 #> 10  1.58   2.69  #> # ℹ 190 more rows  # calculate umap with only 2 columns tof_reduce_tsne(tof_tibble = sim_data, umap_cols = c(cd34, cd38)) #> # A tibble: 200 × 2 #>    .tsne1 .tsne2 #>     <dbl>  <dbl> #>  1   5.51 -3.70  #>  2  -6.16 -0.971 #>  3   4.86  4.83  #>  4   4.61  4.83  #>  5  -2.55 -5.08  #>  6   5.03 -2.21  #>  7   3.55  0.482 #>  8   1.17  4.94  #>  9   2.71  4.40  #> 10  -5.10 -0.555 #> # ℹ 190 more rows  # return recipe umap_recipe <- tof_reduce_umap(tof_tibble = sim_data, return_recipe = TRUE) #> Found more than one class \"dist\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘spam’ #> Found more than one class \"dist\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘spam’  # apply recipe to new data recipes::bake(umap_recipe, new_data = new_data) #> # A tibble: 50 × 2 #>      UMAP1  UMAP2 #>      <dbl>  <dbl> #>  1 -3.78    1.32  #>  2 -0.0857  2.57  #>  3 -1.18   -2.12  #>  4  0.471   1.39  #>  5  0.843  -1.08  #>  6 -3.30    0.363 #>  7 -2.45   -2.52  #>  8  2.85   -3.52  #>  9 -0.416  -4.22  #> 10  2.95   -3.34  #> # ℹ 40 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_set_panel.html","id":null,"dir":"Reference","previous_headings":"","what":"Set panel information from a tof_tibble — tof_set_panel","title":"Set panel information from a tof_tibble — tof_set_panel","text":"Set panel information tof_tibble","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_set_panel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set panel information from a tof_tibble — tof_set_panel","text":"","code":"tof_set_panel(tof_tibble, panel)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_set_panel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set panel information from a tof_tibble — tof_set_panel","text":"tof_tibble `tof_tbl`. panel tibble containing two columns (`metals` `antigens`) representing information panel","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_set_panel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set panel information from a tof_tibble — tof_set_panel","text":"`tof_tibble` containing information CyTOF panel used data acquisition data contained input `tof_tibble`. Two columns required: \"metals\" \"antigens\".","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_set_panel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set panel information from a tof_tibble — tof_set_panel","text":"","code":"# get current panel from an .fcs file input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]] tof_tibble <- tof_read_data(input_file) current_panel <- tof_get_panel(tof_tibble)  # create a new panel (remove empty channels) new_panel <- dplyr::filter(current_panel, antigens != \"empty\") tof_set_panel(tof_tibble = tof_tibble, panel = new_panel) #> # A tibble: 100 × 59 #>         Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>        <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1 11021370            16       517.         1.33          13.2           865. #>  2  7112446.           19       850.         3.99          12.7           756. #>  3  9722098            16       747.         6.96           4.85          639. #>  4  2267279.           16       585.         0.648          6.32          586. #>  5  9624729            18       773.         3.93           9.65          645. #>  6  4439897            19       485.         4.18           3.84          627. #>  7  2762526.           16       504.         3.46           4.25          566. #>  8  3746682.           18       567.         6.62          11.7           703. #>  9 15214280            19      1043.         3.10           9.20          853. #> 10    42699.           16       543.         0.888         13.6           813. #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_spade_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate cells' local densities as done in Spanning-tree Progression Analysis of Density-normalized Events (SPADE) — tof_spade_density","title":"Estimate cells' local densities as done in Spanning-tree Progression Analysis of Density-normalized Events (SPADE) — tof_spade_density","text":"function uses algorithm described Qiu et al., (2011) estimate local density cell `tof_tbl` `tibble` containing high-dimensional cytometry data. Briefly, algorithm involves counting number neighboring cells within  sphere radius alpha surrounding cell. , using nn2 function.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_spade_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate cells' local densities as done in Spanning-tree Progression Analysis of Density-normalized Events (SPADE) — tof_spade_density","text":"","code":"tof_spade_density(   tof_tibble,   distance_cols = where(tof_is_numeric),   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\"),   num_alpha_cells = 2000L,   alpha_multiplier = 5,   max_neighbors = round(0.01 * nrow(tof_tibble)),   normalize = TRUE,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_spade_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate cells' local densities as done in Spanning-tree Progression Analysis of Density-normalized Events (SPADE) — tof_spade_density","text":"tof_tibble `tof_tbl` `tibble`. distance_cols Unquoted names columns `tof_tibble` use calculating cell--cell distances local density estimation cell. Defaults numeric columns `tof_tibble`. distance_function string indicating distance function use calculating cell--cell distances local density estimation. Options include \"euclidean\" (default) \"cosine\". num_alpha_cells integer indicating many cells `tof_tibble` randomly sampled `tof_tibble` order estimate `alpha`, radius sphere constructed around cell local density estimation. Alpha calculated taking median nearest-neighbor distance `num_alpha_cells` randomly-sampled cells multiplying `alpha_multiplier`. Defaults 2000. alpha_multiplier numeric value indicating multiplier used calculating `alpha`, radius sphere constructed around cell local density estimation. Alpha calculated taking median nearest-neighbor distance `num_alpha_cells` cells randomly-sampled `tof_tibble` multiplying `alpha_multiplier`. Defaults 5. max_neighbors integer indicating maximum number neighbors can counted within sphere surrounding given cell. Implemented reduce density estimation procedure's speed memory requirements. Defaults 1% number rows `tof_tibble`. normalize boolean value indicating vector local density estimates normalized values 0 1. Defaults TRUE. ... Additional optional arguments pass tof_find_knn.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_spade_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate cells' local densities as done in Spanning-tree Progression Analysis of Density-normalized Events (SPADE) — tof_spade_density","text":"tibble single column named \".spade_density\" containing local density estimates input cell `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_spade_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate cells' local densities as done in Spanning-tree Progression Analysis of Density-normalized Events (SPADE) — tof_spade_density","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  # perform the density estimation tof_spade_density(tof_tibble = sim_data) #> # A tibble: 1,000 × 1 #>    .spade_density #>             <dbl> #>  1              1 #>  2              1 #>  3              1 #>  4              1 #>  5              1 #>  6              1 #>  7              1 #>  8              1 #>  9              1 #> 10              1 #> # ℹ 990 more rows  # perform the density estimation using cosine distance tof_spade_density(     tof_tibble = sim_data,     distance_function = \"cosine\",     alpha_multiplier = 2 ) #> # A tibble: 1,000 × 1 #>    .spade_density #>             <dbl> #>  1            0.2 #>  2            0.1 #>  3            0.1 #>  4            0.2 #>  5            0.3 #>  6            0.1 #>  7            0   #>  8            0.2 #>  9            0.3 #> 10            0.5 #> # ℹ 990 more rows  # perform the density estimation with a smaller search radius around # each cell tof_spade_density(     tof_tibble = sim_data,     alpha_multiplier = 2 ) #> # A tibble: 1,000 × 1 #>    .spade_density #>             <dbl> #>  1            0.1 #>  2            0.6 #>  3            0   #>  4            1   #>  5            0.4 #>  6            1   #>  7            1   #>  8            1   #>  9            1   #> 10            1   #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Split high-dimensional cytometry data into a training and test set — tof_split_data","title":"Split high-dimensional cytometry data into a training and test set — tof_split_data","text":"Split high-dimensional cytometry data training test set","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split high-dimensional cytometry data into a training and test set — tof_split_data","text":"","code":"tof_split_data(   feature_tibble,   split_method = c(\"k-fold\", \"bootstrap\", \"simple\"),   split_col,   simple_prop = 3/4,   num_cv_folds = 10,   num_cv_repeats = 1L,   num_bootstraps = 10,   strata = NULL,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split high-dimensional cytometry data into a training and test set — tof_split_data","text":"feature_tibble tibble row represents sample- patient- level observation, produced tof_extract_features. split_method Either string logical vector specifying perform split. string, valid options include k-fold cross validation (\"k-fold\"; default), bootstrapping (\"bootstrap\"), single binary split (\"simple\"). logical vector, contain one entry row `feature_tibble` indicating row included training set (TRUE) excluded validation/test set (FALSE). Ignored entirely `split_col` specified. split_col unquoted column name logical column `feature_tibble` indicating row included training set (TRUE) excluded validation/test set (FALSE). simple_prop numeric value 0 1 indicating proportion data used training. Defaults 3/4. Ignored split_method \"simple\". num_cv_folds integer indicating many cross-validation folds used. Defaults 10. Ignored split_method \"k-fold\". num_cv_repeats integer indicating many independent cross-validation replicates used (.e. many num_cv_fold splits performed). Defaults 1. Ignored split_method \"k-fold\". num_bootstraps integer indicating many independent bootstrap replicates used. Defaults 25. Ignored split_method \"bootstrap\". strata unquoted column name representing column feature_tibble used stratify data splitting. Defaults NULL (stratification). ... Optional additional arguments pass vfold_cv k-fold cross validation, bootstraps bootstrapping, initial_split simple splitting.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split high-dimensional cytometry data into a training and test set — tof_split_data","text":"k-fold cross validation bootstrapping, \"rset\" object; simple splitting, \"rsplit\" object. details, see rsample.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split high-dimensional cytometry data into a training and test set — tof_split_data","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 50), rep(1, times = 50)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  # split the dataset into 10 CV folds tof_split_data(     feature_tibble = feature_tibble,     split_method = \"k-fold\" ) #> #  10-fold cross-validation  #> # A tibble: 10 × 2 #>    splits          id     #>    <list>          <chr>  #>  1 <split [90/10]> Fold01 #>  2 <split [90/10]> Fold02 #>  3 <split [90/10]> Fold03 #>  4 <split [90/10]> Fold04 #>  5 <split [90/10]> Fold05 #>  6 <split [90/10]> Fold06 #>  7 <split [90/10]> Fold07 #>  8 <split [90/10]> Fold08 #>  9 <split [90/10]> Fold09 #> 10 <split [90/10]> Fold10  # split the dataset into 10 bootstrap resamplings tof_split_data(     feature_tibble = feature_tibble,     split_method = \"bootstrap\" ) #> # Bootstrap sampling  #> # A tibble: 10 × 2 #>    splits           id          #>    <list>           <chr>       #>  1 <split [100/39]> Bootstrap01 #>  2 <split [100/33]> Bootstrap02 #>  3 <split [100/34]> Bootstrap03 #>  4 <split [100/39]> Bootstrap04 #>  5 <split [100/37]> Bootstrap05 #>  6 <split [100/36]> Bootstrap06 #>  7 <split [100/37]> Bootstrap07 #>  8 <split [100/35]> Bootstrap08 #>  9 <split [100/34]> Bootstrap09 #> 10 <split [100/38]> Bootstrap10  # split the dataset into a single training/test set # stratified by the \"class\" column tof_split_data(     feature_tibble = feature_tibble,     split_method = \"simple\",     strata = class ) #> <Training/Testing/Total> #> <74/26/100>"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_tidytof_reduced_dimensions.html","id":null,"dir":"Reference","previous_headings":"","what":"Split the dimensionality reduction data that tidytof combines during SingleCellExperiment conversion — tof_split_tidytof_reduced_dimensions","title":"Split the dimensionality reduction data that tidytof combines during SingleCellExperiment conversion — tof_split_tidytof_reduced_dimensions","text":"Split dimensionality reduction data tidytof combines SingleCellExperiment conversion","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_tidytof_reduced_dimensions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split the dimensionality reduction data that tidytof combines during SingleCellExperiment conversion — tof_split_tidytof_reduced_dimensions","text":"","code":"tof_split_tidytof_reduced_dimensions(sce)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_tidytof_reduced_dimensions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split the dimensionality reduction data that tidytof combines during SingleCellExperiment conversion — tof_split_tidytof_reduced_dimensions","text":"sce SingleCellExperiment entry named \"tidytof_reduced_dimensions\" reducedDims slot.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_tidytof_reduced_dimensions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split the dimensionality reduction data that tidytof combines during SingleCellExperiment conversion — tof_split_tidytof_reduced_dimensions","text":"SingleCellExperiment separate entries named \"tidytof_pca\", \"tidytof_umap\", \"tidytof_tsne\" reducedDims slots (one dimensionality reduction methods tidytof native support).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_tidytof_reduced_dimensions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split the dimensionality reduction data that tidytof combines during SingleCellExperiment conversion — tof_split_tidytof_reduced_dimensions","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_train_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Train an elastic net model to predict sample-level phenomena using high-dimensional cytometry data. — tof_train_model","title":"Train an elastic net model to predict sample-level phenomena using high-dimensional cytometry data. — tof_train_model","text":"function uses training set/test set paradigm tune fit elastic net model using variety user-specified details. Tuning can performed using either simple training vs. test set split, k-fold cross-validation, bootstrapping, multiple preprocessing options available.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_train_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Train an elastic net model to predict sample-level phenomena using high-dimensional cytometry data. — tof_train_model","text":"","code":"tof_train_model(   split_data,   unsplit_data,   predictor_cols,   response_col = NULL,   time_col = NULL,   event_col = NULL,   model_type = c(\"linear\", \"two-class\", \"multiclass\", \"survival\"),   hyperparameter_grid = tof_create_grid(),   standardize_predictors = TRUE,   remove_zv_predictors = FALSE,   impute_missing_predictors = FALSE,   optimization_metric = \"tidytof_default\",   best_model_type = c(\"best\", \"best with sparsity\"),   num_cores = 1 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_train_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Train an elastic net model to predict sample-level phenomena using high-dimensional cytometry data. — tof_train_model","text":"split_data `rsplit` `rset` object rsample package containing sample-level data use modeling. easiest way generate use tof_split_data. unsplit_data tibble containing sample-level data use modeling without resampling. using resampling method advised, argument provides interface fit model without using cross-validation bootstrap resampling. Ignored split_data provided. predictor_cols Unquoted column names indicating columns data contained `split_data` used predictors elastic net model. Supports tidyselect helpers. response_col Unquoted column name indicating column data contained `split_data` used outcome \"two-class\", \"multiclass\", \"linear\" elastic net model. Must factor \"two-class\" \"multiclass\" models must numeric \"linear\" models. Ignored `model_type` \"survival\". time_col Unquoted column name indicating column data contained `split_data` represents time--event outcome \"survival\" elastic net model. Must numeric. Ignored `model_type` \"two-class\", \"multiclass\", \"linear\". event_col Unquoted column name indicating column data contained `split_data` represents time--event outcome \"survival\" elastic net model. Must binary column - values either 0 1 (1 indicating adverse event) FALSE TRUE (TRUE indicating adverse event). Ignored `model_type` \"two-class\", \"multiclass\", \"linear\". model_type string indicating kind elastic net model build. continuous response predicted, use \"linear\" linear regression; categorical response 2 classes predicted, use \"two-class\" logistic regression; categorical response 2 levels predicted, use \"multiclass\" multinomial regression; time--event outcome predicted, use \"survival\" Cox regression. hyperparameter_grid hyperparameter grid indicating values elastic net penalty (lambda) elastic net mixture (alpha) hyperparamters used model tuning. Generate grid using tof_create_grid. standardize_predictors logical value indicating numeric predictor columns standardized (centered scaled) model fitting, standard practice elastic net regularization. Defaults TRUE. remove_zv_predictors logical value indicating predictor columns near-zero variance removed model fitting using step_nzv. Defaults FALSE. impute_missing_predictors logical value indicating predictor columns missing values imputed using k-nearest neighbors model fitting (see step_impute_knn). Imputation performed using observation's 5 nearest-neighbors. Defaults FALSE. optimization_metric string indicating optimization metric used hyperparameter selection model tuning. Valid values depend model_type. \"linear\" models, choices \"mse\" (mean squared error predictions; default) \"mae\" (mean absolute error predictions). \"two-class\" models, choices \"roc_auc\" (area Receiver-Operating Curve classification; default), \"misclassification error\" (proportion misclassified observations), \"binomial_deviance\" (see deviance.glmnet), \"mse\" (mean squared error logit function), \"mae\" (mean absolute error logit function). \"multiclass\" models, choices \"roc_auc\" (area Receiver-Operating Curve classification using Hand-Till generalization ROC AUC multiclass models roc_auc; default), \"misclassification error\" (proportion misclassified observations), \"multinomial_deviance\" (see deviance.glmnet), \"mse\" \"mae\" . \"survival\" models, choices \"concordance_index\" (Harrel's C index; see deviance.glmnet) \"partial_likelihood_deviance\" (see deviance.glmnet). best_model_type Currently unused. num_cores Integer indicating many cores used parallel processing fitting multiple models. Defaults 1. Overhead separate models across multiple cores can high, significant speedup unlikely observed unless many large models fit.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_train_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Train an elastic net model to predict sample-level phenomena using high-dimensional cytometry data. — tof_train_model","text":"`tof_model`, S3 class includes elastic net model best performance (assessed via cross-validation, bootstrapping, simple splitting depending `split_data`) across tested hyperparameter value combinations. `tof_models` store following information: model final elastic net (\"glmnet\") model, chosen selecting elastic net hyperparameters best `optimization_metric` performance validation sets resample used train model (average) recipe recipe used data preprocessing mixture optimal mixture hyperparameter (alpha) glmnet model penalty optimal penalty hyperparameter (lambda) glmnet model model_type string indicating type glmnet model fit outcome_colnames character vector representing names columns training data modeled outcome variables training_data tibble containing (preprocessed) data used train model tuning_metrics tibble containing validation set performance metrics (model predictions) resample fold model tuning. log_rank_thresholds survival models , tibble containing information relative-risk thresholds can used split training data 2 risk groups (low- high-risk) based final model's predictions. relative-risk threshold, log-rank test p-value indicator threshold gives significant separation provided. best_log_rank_threshold survival models , numeric value representing relative-risk threshold yields significant log-rank test separating training data low- high-risk groups.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_train_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Train an elastic net model to predict sample-level phenomena using high-dimensional cytometry data. — tof_train_model","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model tof_train_model(     split_data = split_data,     predictor_cols = c(cd45, pstat5, cd34),     response_col = outcome,     model_type = \"linear\" ) #> A linear `tof_model` with a mixture parameter (alpha) of 1 and a penalty parameter (lambda) of 3.162e-03  #> # A tibble: 4 × 2 #>   feature     coefficient #>   <chr>             <dbl> #> 1 (Intercept)      3.49   #> 2 pstat5           1.23   #> 3 cd45             1.09   #> 4 cd34             0.0214  # train a logistic regression classifier tof_train_model(     split_data = split_data,     predictor_cols = c(cd45, pstat5, cd34),     response_col = class,     model_type = \"two-class\" ) #> A two-class `tof_model` with a mixture parameter (alpha) of 0 and a penalty parameter (lambda) of 1e+00  #> # A tibble: 4 × 2 #>   feature     coefficient #>   <chr>             <dbl> #> 1 pstat5        -0.227    #> 2 cd45          -0.166    #> 3 cd34          -0.0119   #> 4 (Intercept)    0.000293  # train a cox regression survival model tof_train_model(     split_data = split_data,     predictor_cols = c(cd45, pstat5, cd34),     time_col = time_to_event,     event_col = event,     model_type = \"survival\" ) #> A survival `tof_model` with a mixture parameter (alpha) of 1 and a penalty parameter (lambda) of 1e+00  #> # A tibble: 0 × 2 #> # ℹ 2 variables: feature <chr>, coefficient <dbl>"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_transform.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform raw high-dimensional cytometry data. — tof_transform","title":"Transform raw high-dimensional cytometry data. — tof_transform","text":"function transforms `tof_tbl` raw ion counts, reads, fluorescence intensity units directly measured cytometer using user-provided function.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_transform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform raw high-dimensional cytometry data. — tof_transform","text":"","code":"tof_transform(   tof_tibble = NULL,   channel_cols = where(tof_is_numeric),   transform_fun )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_transform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform raw high-dimensional cytometry data. — tof_transform","text":"tof_tibble `tof_tbl` `tibble`. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. nothing specified, default transform numeric columns. transform_fun vectorized function apply protein value variance stabilization.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_transform.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform raw high-dimensional cytometry data. — tof_transform","text":"`tof_tbl` identical dimensions input `tof_tibble`, columns specified channel_cols transformed using `transform_fun`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_transform.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform raw high-dimensional cytometry data. — tof_transform","text":"","code":"# read in an example .fcs file from tidytof's internal datasets input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]] tof_tibble <- tof_read_data(input_file)  # preprocess all numeric columns with default behavior # arcsinh transformation with a cofactor of 5 tof_preprocess(tof_tibble) #> # A tibble: 100 × 59 #>     Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>    <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1 15.3          1.88       5.33         0.263         1.70           5.85 #>  2 14.9          2.05       5.83         0.731         1.67           5.71 #>  3 15.2          1.88       5.70         1.13          0.861          5.54 #>  4 13.7          1.88       5.45         0.129         1.06           5.46 #>  5 15.2          1.99       5.73         0.721         1.41           5.55 #>  6 14.4          2.05       5.27         0.760         0.708          5.52 #>  7 13.9          1.88       5.31         0.645         0.771          5.42 #>  8 14.2          1.99       5.42         1.09          1.58           5.64 #>  9 15.6          2.05       6.03         0.586         1.37           5.83 #> 10  9.75         1.88       5.38         0.177         1.73           5.78 #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …  # preprocess all numeric columns using the log base 10 tranformation tof_preprocess(tof_tibble, transform_fun = log10) #> # A tibble: 100 × 59 #>     Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>    <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1  7.04         1.20       2.71        0.125          1.12           2.94 #>  2  6.85         1.28       2.93        0.601          1.11           2.88 #>  3  6.99         1.20       2.87        0.843          0.686          2.81 #>  4  6.36         1.20       2.77       -0.189          0.800          2.77 #>  5  6.98         1.26       2.89        0.594          0.984          2.81 #>  6  6.65         1.28       2.69        0.621          0.584          2.80 #>  7  6.44         1.20       2.70        0.539          0.628          2.75 #>  8  6.57         1.26       2.75        0.821          1.07           2.85 #>  9  7.18         1.28       3.02        0.491          0.964          2.93 #> 10  4.63         1.20       2.74       -0.0515         1.13           2.91 #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_tune_glmnet.html","id":null,"dir":"Reference","previous_headings":"","what":"Tune an elastic net model's hyperparameters over multiple resamples — tof_tune_glmnet","title":"Tune an elastic net model's hyperparameters over multiple resamples — tof_tune_glmnet","text":"Tune elastic net model's hyperparameters multiple resamples","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_tune_glmnet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tune an elastic net model's hyperparameters over multiple resamples — tof_tune_glmnet","text":"","code":"tof_tune_glmnet(   split_data,   prepped_recipe,   hyperparameter_grid,   model_type,   outcome_cols,   optimization_metric = \"tidytof_default\",   num_cores = 1 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_tune_glmnet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tune an elastic net model's hyperparameters over multiple resamples — tof_tune_glmnet","text":"split_data `rsplit` `rset` object rsample package. easiest way generate use tof_split_data. Alternatively, unsplit tbl_df can provided, though recommended. prepped_recipe Either single recipe object (`split_data` `rsplit` object `tbl_df`) list recipes (`split_data` `rset` object) entry list corresponds resample `split_data`. hyperparameter_grid hyperparameter grid indicating values elastic net penalty (lambda) elastic net mixture (alpha) hyperparameters used model tuning. Generate grid using tof_create_grid. model_type string indicating kind elastic net model build. continuous response predicted, use \"linear\" linear regression; categorical response 2 classes predicted, use \"two-class\" logistic regression; categorical response 2 levels predicted, use \"multiclass\" multinomial regression; time--event outcome predicted, use \"survival\" Cox regression. outcome_cols Unquoted column name(s) indicating column(s) data contained `split_data` used outcome elastic net model. survival models, two columns selected; others, one column selected. optimization_metric string indicating optimization metric used hyperparameter selection model tuning. Valid values depend model_type. num_cores Integer indicating many cores used parallel processing fitting multiple models. Defaults 1. Overhead separate models across multiple cores can high, significant speedup unlikely observed unless many large models fit.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_tune_glmnet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tune an elastic net model's hyperparameters over multiple resamples — tof_tune_glmnet","text":"tibble containing summary model's performance resampling iteration across hyperparameter combinations. contain 3 columns: \"splits\" (list-col containing resampling iteration's `rsplit` object), \"id\" (name resampling iteration), \"performance_metrics\" (list-col containing performance metrics resampling iteration. row \"performance_metrics\" tibble columns \"mixture\" \"penalty\" several additional columns containing performance metrics model mixture/penalty combination). See tof_fit_split additional details.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample.html","id":null,"dir":"Reference","previous_headings":"","what":"Upsample cells into the closest cluster in a reference dataset — tof_upsample","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample","text":"function performs distance-based upsampling CyTOF data sorting single cells (passed function `tof_tibble`) phenotypically similar cell subpopulation reference dataset (passed function `reference_tibble`). calculating distance (either mahalanobis, cosine, pearson) cell `tof_tibble` centroid cluster `reference_tibble`, sorting cells cluster corresponding closest centroid.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample","text":"","code":"tof_upsample(   tof_tibble,   reference_tibble,   reference_cluster_col,   upsample_cols = where(tof_is_numeric),   ...,   augment = TRUE,   method = c(\"distance\", \"neighbor\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample","text":"tof_tibble `tibble` `tof_tbl` containing cells upsampled nearest reference subpopulation. reference_tibble `tibble` `tof_tibble` containing cells already clustered manually gated subpopulations. reference_cluster_col unquoted column name indicating column `reference_tibble` contains subpopulation label (cluster id) cell `reference_tibble`. upsample_cols Unquoted column names indicating columns `tof_tibble` use computing distances used upsampling. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. ... Additional arguments pass `tof_upsample_*` function family member corresponding chosen method. augment boolean value indicating output column-bind cluster ids cell new column `tof_tibble` (TRUE, default) single-column tibble including cluster ids returned (FALSE). method string indicating clustering methods used. Valid values include \"distance\" (default) \"neighbor\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample","text":"`tof_tbl` `tibble` augment = FALSE, single column encoding upsampled cluster ids cell `tof_tibble`. augment = TRUE, ncol(tof_tibble) + 1 columns: (unaltered) columns `tof_tibble` plus additional column encoding cluster ids.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample","text":"","code":"# simulate single-cell data (and reference data with clusters to upsample # into sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     ) reference_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200),         cluster_id = c(rep(\"a\", times = 100), rep(\"b\", times = 100))     )  # upsample using distance to cluster centroids tof_upsample(     tof_tibble = sim_data,     reference_tibble = reference_data,     reference_cluster_col = cluster_id,     method = \"distance\" ) #> # A tibble: 1,000 × 5 #>      cd45   cd38   cd34   cd19 .upsample_cluster #>     <dbl>  <dbl>  <dbl>  <dbl> <chr>             #>  1 -0.739 -0.471  1.95  -0.387 b                 #>  2  0.387 -0.238  0.645 -1.14  b                 #>  3 -0.135  0.473  0.825  1.11  b                 #>  4  0.569 -0.935  1.40  -1.69  a                 #>  5 -0.120 -0.755 -0.416  0.651 a                 #>  6 -0.773  2.13   1.26   0.158 a                 #>  7  1.23  -0.309  0.585 -1.10  b                 #>  8  1.83   0.286 -0.907  0.420 a                 #>  9  1.59  -1.25   0.259 -0.961 a                 #> 10  1.43  -0.478 -1.27   0.176 b                 #> # ℹ 990 more rows  # upsample using distance to nearest neighbor tof_upsample(     tof_tibble = sim_data,     reference_tibble = reference_data,     reference_cluster_col = cluster_id,     method = \"neighbor\" ) #> # A tibble: 1,000 × 5 #>      cd45   cd38   cd34   cd19 .upsample_cluster #>     <dbl>  <dbl>  <dbl>  <dbl> <chr>             #>  1 -0.739 -0.471  1.95  -0.387 b                 #>  2  0.387 -0.238  0.645 -1.14  b                 #>  3 -0.135  0.473  0.825  1.11  a                 #>  4  0.569 -0.935  1.40  -1.69  a                 #>  5 -0.120 -0.755 -0.416  0.651 a                 #>  6 -0.773  2.13   1.26   0.158 a                 #>  7  1.23  -0.309  0.585 -1.10  b                 #>  8  1.83   0.286 -0.907  0.420 a                 #>  9  1.59  -1.25   0.259 -0.961 b                 #> 10  1.43  -0.478 -1.27   0.176 a                 #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_distance.html","id":null,"dir":"Reference","previous_headings":"","what":"Upsample cells into the closest cluster in a reference dataset — tof_upsample_distance","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample_distance","text":"function performs distance-based upsampling CyTOF data sorting single cells (passed function `tof_tibble`) phenotypically similar cell subpopulation reference dataset (passed function `reference_tibble`). calculating distance (either mahalanobis, cosine, pearson) cell `tof_tibble` centroid cluster `reference_tibble`, sorting cells cluster corresponding closest centroid.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample_distance","text":"","code":"tof_upsample_distance(   tof_tibble,   reference_tibble,   reference_cluster_col,   upsample_cols = where(tof_is_numeric),   parallel_cols,   distance_function = c(\"mahalanobis\", \"cosine\", \"pearson\"),   num_cores = 1L,   return_distances = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_distance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample_distance","text":"tof_tibble `tibble` `tof_tbl` containing cells upsampled nearest reference subpopulation. reference_tibble `tibble` `tof_tibble` containing cells already clustered manually gated subpopulations. reference_cluster_col unquoted column name indicating column `reference_tibble` contains subpopulation label (cluster id) cell `reference_tibble`. upsample_cols Unquoted column names indicating columns `tof_tibble` use computing distances used upsampling. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. parallel_cols Optional. Unquoted column names indicating columns `tof_tibble` use breaking data order parallelize upsampling using `foreach` `doParallel` backend. Supports tidyselect helpers. distance_function string indicating distance function used perform upsampling. Options \"mahalanobis\" (default), \"cosine\", \"pearson\". num_cores integer indicating number CPU cores used parallelize classification. Defaults 1 (single core). return_distances boolean value indicating whether returned result include one column, cluster ids corresponding row `tof_tibble` (return_distances = FALSE, default), returned result include additional columns representing distance row `tof_tibble` reference subpopulation centroids (return_distances = TRUE).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_distance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample_distance","text":"`return_distances = FALSE`, tibble one column named `.upsample_cluster`, character vector length `nrow(tof_tibble)` indicating id reference cluster cell (.e. row) `tof_tibble` assigned. `return_distances = TRUE`, tibble `nrow(tof_tibble)` rows num_clusters + 1 columns, num_clusters number clusters `reference_tibble`. row represents cell `tof_tibble`, num_clusters columns represent distance cell reference subpopulations' cluster centroids. final column represents cluster id reference subpopulation minimum distance cell represented row.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_distance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample_distance","text":"","code":"# simulate single-cell data (and reference data with clusters to upsample # into sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  reference_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200),         cluster_id = c(rep(\"a\", times = 100), rep(\"b\", times = 100))     )  # upsample using mahalanobis distance tof_upsample_distance(     tof_tibble = sim_data,     reference_tibble = reference_data,     reference_cluster_col = cluster_id ) #> # A tibble: 1,000 × 1 #>    .upsample_cluster #>    <chr>             #>  1 a                 #>  2 b                 #>  3 b                 #>  4 a                 #>  5 b                 #>  6 a                 #>  7 b                 #>  8 a                 #>  9 a                 #> 10 b                 #> # ℹ 990 more rows  # upsample using cosine distance tof_upsample_distance(     tof_tibble = sim_data,     reference_tibble = reference_data,     reference_cluster_col = cluster_id,     distance_function = \"cosine\" ) #> # A tibble: 1,000 × 1 #>    .upsample_cluster #>    <chr>             #>  1 a                 #>  2 b                 #>  3 a                 #>  4 a                 #>  5 b                 #>  6 a                 #>  7 b                 #>  8 a                 #>  9 a                 #> 10 b                 #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_neighbor.html","id":null,"dir":"Reference","previous_headings":"","what":"Upsample cells into the cluster of their nearest neighbor a reference dataset — tof_upsample_neighbor","title":"Upsample cells into the cluster of their nearest neighbor a reference dataset — tof_upsample_neighbor","text":"function performs upsampling CyTOF data sorting single cells (passed function `tof_tibble`) phenotypically similar cell subpopulation reference dataset (passed function `reference_tibble`). finding cell `tof_tibble`'s nearest neighbor `reference_tibble` assigning cluster nearest neighbor belongs. nearest neighbor calculation can performed either euclidean cosine distance.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_neighbor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upsample cells into the cluster of their nearest neighbor a reference dataset — tof_upsample_neighbor","text":"","code":"tof_upsample_neighbor(   tof_tibble,   reference_tibble,   reference_cluster_col,   upsample_cols = where(tof_is_numeric),   num_neighbors = 1L,   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_neighbor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upsample cells into the cluster of their nearest neighbor a reference dataset — tof_upsample_neighbor","text":"tof_tibble `tibble` `tof_tbl` containing cells upsampled nearest reference subpopulation. reference_tibble `tibble` `tof_tibble` containing cells already clustered manually gated subpopulations. reference_cluster_col unquoted column name indicating column `reference_tibble` contains subpopulation label (cluster id) cell `reference_tibble`. upsample_cols Unquoted column names indicating columns `tof_tibble` use computing distances used upsampling. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. num_neighbors integer indicating many neighbors used nearest neighbor calculation. Clusters assigned based majority vote. distance_function string indicating distance function used perform upsampling. Options \"euclidean\" (default) \"cosine\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_neighbor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Upsample cells into the cluster of their nearest neighbor a reference dataset — tof_upsample_neighbor","text":"tibble one column named `.upsample_cluster`, character vector length `nrow(tof_tibble)` indicating id reference cluster cell (.e. row) `tof_tibble` assigned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_neighbor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Upsample cells into the cluster of their nearest neighbor a reference dataset — tof_upsample_neighbor","text":"","code":"# simulate single-cell data (and reference data with clusters to upsample # into sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  reference_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200),         cluster_id = c(rep(\"a\", times = 100), rep(\"b\", times = 100))     )  # upsample using euclidean distance tof_upsample_neighbor(     tof_tibble = sim_data,     reference_tibble = reference_data,     reference_cluster_col = cluster_id ) #> # A tibble: 1,000 × 1 #>    .upsample_cluster #>    <chr>             #>  1 b                 #>  2 a                 #>  3 b                 #>  4 b                 #>  5 b                 #>  6 a                 #>  7 a                 #>  8 a                 #>  9 b                 #> 10 a                 #> # ℹ 990 more rows  # upsample using cosine distance tof_upsample_neighbor(     tof_tibble = sim_data,     reference_tibble = reference_data,     reference_cluster_col = cluster_id,     distance_function = \"cosine\" ) #> # A tibble: 1,000 × 1 #>    .upsample_cluster #>    <chr>             #>  1 b                 #>  2 b                 #>  3 a                 #>  4 b                 #>  5 a                 #>  6 a                 #>  7 b                 #>  8 b                 #>  9 b                 #> 10 a                 #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a series of .csv files from a tof_tbl — tof_write_csv","title":"Write a series of .csv files from a tof_tbl — tof_write_csv","text":"function takes given `tof_tbl` writes single-cell data contains .csv files within directory located `out_path`. `group_cols` argument specifies rows `tof_tbl` (cell) broken separate .csv files","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a series of .csv files from a tof_tbl — tof_write_csv","text":"","code":"tof_write_csv(tof_tibble, group_cols, out_path, sep = \"_\", file_name)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a series of .csv files from a tof_tbl — tof_write_csv","text":"tof_tibble `tof_tbl` `tibble`. group_cols Optional. Unquoted names columns `tof_tibble` used group cells separate files. Supports tidyselect helpers. Defaults NULL (cells written single file). out_path system path indicating directory output .csv files saved. directory exist, created. sep Delimiter used values `group_cols` create output .csv file names. Defaults \"_\". file_name `group_cols` specified, name (without extension) used saved .csv file.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_csv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write a series of .csv files from a tof_tbl — tof_write_csv","text":"function return anything. Instead, side-effect saving .csv files `out_path`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Write high-dimensional cytometry data to a file or to a directory of files — tof_write_data","title":"Write high-dimensional cytometry data to a file or to a directory of files — tof_write_data","text":"Write data (form `tof_tbl`) either .csv .fcs file storage.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write high-dimensional cytometry data to a file or to a directory of files — tof_write_data","text":"","code":"tof_write_data(   tof_tibble = NULL,   group_cols,   out_path = NULL,   format = c(\"fcs\", \"csv\"),   sep = \"_\",   file_name )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write high-dimensional cytometry data to a file or to a directory of files — tof_write_data","text":"tof_tibble `tof_tbl` `tibble`. group_cols Optional. Unquoted names columns `tof_tibble` used group cells separate files. Supports tidyselect helpers. Defaults grouping (cells written single file). out_path Path directory output files saved. format format files written. Currently supports .csv .fcs files sep Delimiter used values `group_cols` create output .csv/.fcs file names. Defaults \"_\". file_name `group_cols` specified, name (without extension) used saved file.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write high-dimensional cytometry data to a file or to a directory of files — tof_write_data","text":"function explicitly return values. Instead, writes .csv /.fcs files specified `out_path`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write high-dimensional cytometry data to a file or to a directory of files — tof_write_data","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_fcs.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a series of .fcs files from a tof_tbl — tof_write_fcs","title":"Write a series of .fcs files from a tof_tbl — tof_write_fcs","text":"function takes given `tof_tbl` writes single-cell data contains .fcs files within directory located `out_path`. `group_cols` argument specifies rows `tof_tbl` (cell) broken separate .fcs files","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_fcs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a series of .fcs files from a tof_tbl — tof_write_fcs","text":"","code":"tof_write_fcs(tof_tibble, group_cols, out_path, sep = \"_\", file_name)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_fcs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a series of .fcs files from a tof_tbl — tof_write_fcs","text":"tof_tibble `tof_tbl` `tibble`. group_cols Unquoted names columns `tof_tibble` used group cells separate files. Supports tidyselect helpers. Defaults NULL (cells written single file). out_path system path indicating directory output .csv files saved. directory exist, created. sep Delimiter used values `group_cols` create output .fcs file names. Defaults \"_\". file_name `group_cols` specified, name (without extension) used saved .csv file.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_fcs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write a series of .fcs files from a tof_tbl — tof_write_fcs","text":"function return anything. Instead, side-effect saving .fcs files `out_path`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_fcs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write a series of .fcs files from a tof_tbl — tof_write_fcs","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":null,"dir":"Reference","previous_headings":"","what":"Select variables with a function — where","title":"Select variables with a function — where","text":"copy , selection helper selects variables predicate function returns TRUE. See  language details tidyselection.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select variables with a function — where","text":"","code":"where(fn)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select variables with a function — where","text":"fn function returns TRUE FALSE (technically, predicate function). Can also purrr-like formula.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select variables with a function — where","text":"predicate can used select columns data.frame.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Select variables with a function — where","text":"help file replicated verbatim tidyselect-package.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Select variables with a function — where","text":"Lionel Henry Hadley Wickham (2021). tidyselect: Select Set Strings. R package version 1.1.1. https://CRAN.R-project.org/package=tidyselect","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select variables with a function — where","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/news/index.html","id":"tidytof-0996","dir":"Changelog","previous_headings":"","what":"tidytof 0.99.6","title":"tidytof 0.99.6","text":"NEW FEATURES Update tests. SIGNIFICANT USER-VISIBLE CHANGES None","code":""},{"path":"https://keyes-timothy.github.io/tidytof/news/index.html","id":"tidytof-0995","dir":"Changelog","previous_headings":"","what":"tidytof 0.99.5","title":"tidytof 0.99.5","text":"NEW FEATURES Update dependencies. SIGNIFICANT USER-VISIBLE CHANGES None","code":""},{"path":"https://keyes-timothy.github.io/tidytof/news/index.html","id":"tidytof-0994","dir":"Changelog","previous_headings":"","what":"tidytof 0.99.4","title":"tidytof 0.99.4","text":"NEW FEATURES Update tests. SIGNIFICANT USER-VISIBLE CHANGES None","code":""},{"path":"https://keyes-timothy.github.io/tidytof/news/index.html","id":"tidytof-0993","dir":"Changelog","previous_headings":"","what":"tidytof 0.99.3","title":"tidytof 0.99.3","text":"NEW FEATURES Update docs. SIGNIFICANT USER-VISIBLE CHANGES None","code":""},{"path":"https://keyes-timothy.github.io/tidytof/news/index.html","id":"tidytof-0992","dir":"Changelog","previous_headings":"","what":"tidytof 0.99.2","title":"tidytof 0.99.2","text":"NEW FEATURES Update docs. SIGNIFICANT USER-VISIBLE CHANGES None BUG FIXES None","code":""},{"path":"https://keyes-timothy.github.io/tidytof/news/index.html","id":"tidytof-0992-1","dir":"Changelog","previous_headings":"","what":"tidytof 0.99.2","title":"tidytof 0.99.2","text":"NEW FEATURES Removed unnecessary files caused build fail. SIGNIFICANT USER-VISIBLE CHANGES None BUG FIXES None","code":""},{"path":"https://keyes-timothy.github.io/tidytof/news/index.html","id":"tidytof-0990","dir":"Changelog","previous_headings":"","what":"tidytof 0.99.0","title":"tidytof 0.99.0","text":"NEW FEATURES Added NEWS.md file track changes package. SIGNIFICANT USER-VISIBLE CHANGES Submitted Bioconductor BUG FIXES None","code":""}]
