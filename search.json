[{"path":"https://keyes-timothy.github.io/tidytof/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to tidytof","title":"Contributing to tidytof","text":"outlines propose change tidytof. detailed info contributing , tidyverse packages, please see development contributing guide.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to tidytof","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to tidytof","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to tidytof","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"keyes-timothy/tidytof\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to tidytof","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to tidytof","text":"Please note tidytof project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2020 Timothy Keyes Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/clustering.html","id":"clustering-with-tof_cluster","dir":"Articles","previous_headings":"","what":"Clustering with tof_cluster()","title":"Clustering and metaclustering","text":"demonstrate, can apply PhenoGraph clustering algorithm tidytof’s built-phenograph_data. Note phenograph_data contains 3000 total cells (1000 3 clusters identified original PhenoGraph publication). demonstration purposes, also metacluster PhenoGraph clusters using k-means clustering. outputs tof_cluster() tof_metacluster() tof_tbl identical input tibble, now addition additional column (case, “.phenograph_cluster” “.kmeans_metacluster”) encodes cluster id cell input tof_tbl. Note output columns added tibble tof_tbl tidytof begin full-stop (“.”) reduce likelihood collisions existing column names. output tof_cluster tof_tbl, can use dplyr’s count method assess accuracy clustering procedure compared original clustering PhenoGraph paper. , can see clustering procedure groups cells PhenoGraph cluster one another (small number mistakes). change clustering algorithm tof_cluster uses, alter method flag. change columns used compute clusters, change cluster_cols flag. finally, want return one-column tibble includes cluster labels (opposed cluster labels added new column input tof_tbl), set augment FALSE.","code":"data(phenograph_data)  set.seed(203L)  phenograph_clusters <-     phenograph_data |>     tof_preprocess() |>     tof_cluster(         cluster_cols = starts_with(\"cd\"),         num_neighbors = 50L,         distance_function = \"cosine\",         method = \"phenograph\"     ) |>     tof_metacluster(         cluster_col = .phenograph_cluster,         metacluster_cols = starts_with(\"cd\"),         num_metaclusters = 3L,         method = \"kmeans\"     )  phenograph_clusters |>     dplyr::select(sample_name, .phenograph_cluster, .kmeans_metacluster) |>     head() #> # A tibble: 6 × 3 #>   sample_name            .phenograph_cluster .kmeans_metacluster #>   <chr>                  <chr>               <chr>               #> 1 H1_PhenoGraph_cluster1 6                   2                   #> 2 H1_PhenoGraph_cluster1 1                   2                   #> 3 H1_PhenoGraph_cluster1 6                   2                   #> 4 H1_PhenoGraph_cluster1 6                   2                   #> 5 H1_PhenoGraph_cluster1 6                   2                   #> 6 H1_PhenoGraph_cluster1 6                   2 phenograph_clusters |>     dplyr::count(phenograph_cluster, .kmeans_metacluster, sort = TRUE) #> # A tibble: 4 × 3 #>   phenograph_cluster .kmeans_metacluster     n #>   <chr>              <chr>               <int> #> 1 cluster2           3                    1000 #> 2 cluster3           1                    1000 #> 3 cluster1           2                     995 #> 4 cluster1           1                       5 # use the kmeans algorithm phenograph_data |>     tof_preprocess() |>     tof_cluster(         cluster_cols = contains(\"cd\"),         method = \"kmeans\"     )  # use the flowsom algorithm phenograph_data |>     tof_preprocess() |>     tof_cluster(         cluster_cols = contains(\"cd\"),         method = \"flowsom\"     ) # will result in a tibble with only 1 column (the cluster labels) phenograph_data |>     tof_preprocess() |>     tof_cluster(         cluster_cols = contains(\"cd\"),         method = \"kmeans\",         augment = FALSE     ) |>     head() #> # A tibble: 6 × 1 #>   .kmeans_cluster #>   <chr>           #> 1 2               #> 2 1               #> 3 19              #> 4 9               #> 5 2               #> 6 9"},{"path":"https://keyes-timothy.github.io/tidytof/articles/clustering.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Clustering and metaclustering","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] dplyr_1.1.4    tidytof_0.99.0 #>  #> loaded via a namespace (and not attached): #>   [1] tidyselect_1.2.0    viridisLite_0.4.2   timeDate_4032.109   #>   [4] farver_2.1.1        viridis_0.6.5       ggraph_2.2.1        #>   [7] fastmap_1.1.1       tweenr_2.0.3        rpart_4.1.23        #>  [10] digest_0.6.34       timechange_0.3.0    lifecycle_1.0.4     #>  [13] yardstick_1.3.0     survival_3.5-8      magrittr_2.0.3      #>  [16] compiler_4.3.3      rlang_1.1.3         sass_0.4.8          #>  [19] tools_4.3.3         igraph_2.0.2        utf8_1.2.4          #>  [22] yaml_2.3.8          data.table_1.15.2   knitr_1.45          #>  [25] graphlayouts_1.1.1  withr_3.0.0         purrr_1.0.2         #>  [28] RProtoBufLib_2.14.0 BiocGenerics_0.48.1 desc_1.4.3          #>  [31] nnet_7.3-19         grid_4.3.3          polyclip_1.10-6     #>  [34] stats4_4.3.3        fansi_1.0.6         RcppHNSW_0.6.0      #>  [37] future_1.33.1       colorspace_2.1-0    ggplot2_3.5.0       #>  [40] globals_0.16.3      scales_1.3.0        iterators_1.0.14    #>  [43] MASS_7.3-60.0.1     cli_3.6.2           rmarkdown_2.26      #>  [46] ragg_1.2.7          generics_0.1.3      future.apply_1.11.1 #>  [49] tzdb_0.4.0          cachem_1.0.8        flowCore_2.14.1     #>  [52] ggforce_0.4.2       stringr_1.5.1       splines_4.3.3       #>  [55] parallel_4.3.3      matrixStats_1.2.0   vctrs_0.6.5         #>  [58] hardhat_1.3.1       glmnet_4.1-8        Matrix_1.6-5        #>  [61] jsonlite_1.8.8      cytolib_2.14.1      hms_1.1.3           #>  [64] S4Vectors_0.40.2    ggrepel_0.9.5       listenv_0.9.1       #>  [67] systemfonts_1.0.6   foreach_1.5.2       gower_1.0.1         #>  [70] tidyr_1.3.1         jquerylib_0.1.4     recipes_1.0.10      #>  [73] parallelly_1.37.1   glue_1.7.0          pkgdown_2.0.7       #>  [76] codetools_0.2-19    stringi_1.8.3       lubridate_1.9.3     #>  [79] gtable_0.3.4        shape_1.4.6.1       munsell_0.5.0       #>  [82] tibble_3.2.1        pillar_1.9.0        htmltools_0.5.7     #>  [85] ipred_0.9-14        lava_1.8.0          R6_2.5.1            #>  [88] textshaping_0.3.7   doParallel_1.0.17   tidygraph_1.3.1     #>  [91] evaluate_0.23       Biobase_2.62.0      lattice_0.22-5      #>  [94] readr_2.1.5         memoise_2.0.1       bslib_0.6.1         #>  [97] class_7.3-22        Rcpp_1.0.12         prodlim_2023.08.28  #> [100] gridExtra_2.3       xfun_0.42           fs_1.6.3            #> [103] pkgconfig_2.0.3"},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"general-guidelines","dir":"Articles","previous_headings":"","what":"General Guidelines","title":"How to contribute code","text":"extend tidytof include new algorithm - example, one ’ve just developed - can take 1 2 general strategies (cases, may take !). first write tidytof-style verb algorithm can included standalone package. case, benefit writing tidytof-style verb algorithm taking advantage tidytof’s design schema make algorithm easy users access without learning much () new syntax still allowing maintain code base independently team. second approach write tidytof-style function ’d like team add tidytof next release. case, code review process take bit time, also allow teams collaborate provide greater degree critical feedback one another well share burden code maintenance future. either case, ’re welcome contact tidytof team review code via pull request /issue tidytof GitHub page. tutorial may helpful don’t lot experience collaborating programmers via GitHub. open request, can submit code team reviewed. Whether want method incorporated tidytof ’re simply looking external code review/feedback team, please mention request.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"code-style","dir":"Articles","previous_headings":"","what":"Code style","title":"How to contribute code","text":"tidytof uses tidyverse style guide. Adhering tidyverse style something team expect code incorporated tidytof, ’s also something encourage functions write analysis packages. experience, best code written just executed, also read humans! also many tools can use lint automatically style R code, {lintr} {styler} packages.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"testing","dir":"Articles","previous_headings":"","what":"Testing","title":"How to contribute code","text":"addition written well-styled code, encourage write unit tests every function write. common practice software engineering world, common probably (!) bioinformatics community. tidytof team uses {testthat} package unit tests, ’s great tutorial .","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"general-principles","dir":"Articles","previous_headings":"How to contribute","what":"General principles","title":"How to contribute code","text":"important part writing function extends tidytof adhere tidytof verb syntax. exceptions, tidytof functions follow specific, shared syntax involves 3 types arguments always occur order. argument types follows: almost tidytof functions, first argument data frame (tibble). enables use pipe (|>) multi-step calculations, means first argument functions implicit (passed previous function using pipe). second group arguments called column specifications, end suffix _col _cols. Column specifications unquoted column names tell tidytof verb columns compute particular operation. example, cluster_cols argument tof_cluster allows user specify column input data frames used perform clustering. Regardless verb requires , column specifications support tidyselect helpers follow rules tidyselection tidyverse verbs like dplyr::select() tidyr::pivot_longer(). Finally, third group arguments tidytof verb called method specifications, ’re comprised every argument isn’t input data frame column specification. Whereas column specifications represent columns used perform operation, method specifications represent details operation performed. example, tof_cluster_phenograph() function requires method specification num_neighbors, specifies many nearest neighbors used construct PhenoGraph algorithm’s k-nearest-neighbor graph. exceptions, tidytof extension include 3 argument types (order). addition, functions extend tidytof name starts prefix tof_. make easier users find tidytof functions using text completion functionality included development environments.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"contributing-a-new-method-to-an-existing-tidytof-verb","dir":"Articles","previous_headings":"How to contribute","what":"Contributing a new method to an existing {tidytof} verb","title":"How to contribute code","text":"tidytof currently includes multiple verbs perform fundamental single-cell data manipulation tasks. Currently, tidytof’s extensible verbs following: tof_analyze_abundance: Perform differential cluster abundance analysis tof_analyze_expression: Perform differential marker expression analysis tof_annotate_clusters: Annotate clusters manual IDs tof_batch_correct: Perform batch correction tof_cluster: Cluster cells subpopulations tof_downsample: Subsample dataset smaller number cells tof_extract: Calculate sample-level summary statistics tof_metacluster: Metacluster clusters smaller number subpopulations tof_plot_cells: Plot cell-level data tof_plot_clusters: Plot cluster-level data tof_plot_model: Plot results sample-level model tof_read_data: Read data memory disk tof_reduce_dimensions: Perform dimensionality reduction tof_transform: Transform marker expression values vectorized fashion tof_upsample: Assign new cells existing clusters (defined downsample dataset) tof_write_data: Write data memory disk tidytof verb wraps family related functions perform basic task. example, tof_cluster verb wrapper following functions: tof_cluster_ddpr, tof_cluster_flowsom, tof_cluster_kmeans, tof_cluster_phenograph. functions implement different clustering algorithm, share underlying logic standardized tof_cluster abstraction. practice, means users can apply DDPR, FlowSOM, K-means, PhenoGraph clustering algorithms datasets either calling one tof_cluster_* functions directly, calling tof_cluster method argument set appropriate value (“ddpr”, “flowsom”, “kmeans”, “phenograph”, respectively). extend existing tidytof verb, write function whose name fits pattern tof_{verb name}_*, “*” represents name algorithm used perform computation. function definition, try share many arguments possible tidytof verb ’re extending, return output object described “Value” heading help file verb extended. example, suppose wanted write tidytof-style interface new clustering algorithm “supercluster”, performs k-means clustering dataset twice outputs final cluster assignment equal two k-means cluster assignments spliced together. add supercluster algorithm tidytof, might write function like : example , note tof_cluster_supercluster named using tof_{verb name}_* style, function definition uses tof_tibble cluster_cols arguments tof_cluster, returned output object tof_tbl single column encoding cluster ids cells tof_tibble.","code":"#' Perform superclustering on high-dimensional cytometry data. #' #' This function applies the silly, hypothetical clustering algorithm #' \"supercluster\" to high-dimensional cytometry data using user-specified #' input variables/cytometry measurements. #' #' @param tof_tibble A `tof_tbl` or `tibble`. #' #' @param cluster_cols Unquoted column names indicating which columns in #' `tof_tibble` to use in computing the supercluster clusters. #' Supports tidyselect helpers. #' #' @param num_kmeans_clusters An integer indicating how many clusters should be #' used for the two k-means clustering steps. #' #' @param sep A string to use when splicing the 2 k-means clustering assignments #' to one another. #' #' @param ... Optional additional parameters to pass to #' \\code{\\link[tidytof]{tof_cluster_kmeans}} #' #' @return A tibble with one column named `.supercluster_cluster` containing #' a character vector of length `nrow(tof_tibble)` indicating the id of the #' supercluster cluster to which each cell (i.e. each row) in `tof_tibble` was #' assigned. #' #' @importFrom dplyr tibble #' tof_cluster_supercluster <-     function(tof_tibble, cluster_cols, num_kmeans_clusters = 10L, sep = \"_\", ...) {         kmeans_1 <-             tof_tibble |>             tof_cluster_kmeans(                 cluster_cols = {{ cluster_cols }},                 num_clusters = num_kmeans_clusters,                 ...             )          kmeans_2 <-             tof_tibble |>             tof_cluster_kmeans(                 cluster_cols = {{ cluster_cols }},                 num_clusters = num_kmeans_clusters,                 ...             )          final_result <-             dplyr::tibble(                 .supercluster_cluster =                     paste(kmeans_1$.kmeans_cluster, kmeans_2$.kmeans_cluster, sep = sep)             )          return(final_result)     }"},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"creating-a-new-tidytof-verb","dir":"Articles","previous_headings":"How to contribute","what":"Creating a new {tidytof} verb","title":"How to contribute code","text":"want contribute function tidytof represents new operation encompassed existing verbs , include suggestion create new verb pull request tidytof team. case, ’ll considerably flexibility define interface tidytof use implement new verb, tidytof team happy work figure makes sense (least brainstorm together).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"a-note-about-modeling-functions","dir":"Articles","previous_headings":"How to contribute","what":"A note about modeling functions","title":"How to contribute code","text":"point development, don’t recommend extending tidytof’s modeling functionality, likely abstracted standalone package (emphasis interoperability tidymodels ecosystem) point future.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"contact-us","dir":"Articles","previous_headings":"","what":"Contact us","title":"How to contribute code","text":"general questions/comments/concerns tidytof, feel free reach team GitHub .","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"How to contribute code","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> loaded via a namespace (and not attached): #>  [1] digest_0.6.34     desc_1.4.3        R6_2.5.1          fastmap_1.1.1     #>  [5] xfun_0.42         magrittr_2.0.3    cachem_1.0.8      knitr_1.45        #>  [9] memoise_2.0.1     htmltools_0.5.7   rmarkdown_2.26    lifecycle_1.0.4   #> [13] cli_3.6.2         vctrs_0.6.5       sass_0.4.8        pkgdown_2.0.7     #> [17] textshaping_0.3.7 jquerylib_0.1.4   systemfonts_1.0.6 compiler_4.3.3    #> [21] purrr_1.0.2       tools_4.3.3       ragg_1.2.7        bslib_0.6.1       #> [25] evaluate_0.23     yaml_2.3.8        jsonlite_1.8.8    rlang_1.1.3       #> [29] fs_1.6.3"},{"path":"https://keyes-timothy.github.io/tidytof/articles/differential-discovery-analysis.html","id":"accessing-the-data-for-this-vignette","dir":"Articles","previous_headings":"","what":"Accessing the data for this vignette","title":"Differential discovery analysis","text":"demonstrate use verbs, ’ll first download dataset originally collected development CITRUS algorithm. data available HDCytoData package, available Bioconductor can downloaded following command: load CITRUS data current R session, can call function HDCytoData, provide us format {flowCore} package (called “flowSet”). convert tidy tibble, can use tidytof built-method converting flowCore objects tof_tbl’s . Thus, can see citrus_data tof_tbl 172791 cells (one row) 39 pieces information cell (one column). can also extract metadata raw data join single-cell data using functions tidyverse: Thus, now sample-level information patient sample collected stimulation condition (“Basal” “BCR-XL”) sample exposed data acquisition. Finally, can join metadata single-cell tof_tbl obtain cleaned dataset. data cleaning steps, now citrus_data, tof_tbl containing cells collected 8 patients. Specifically, 2 samples taken patient: one cells’ B-cell receptors stimulated (BCR-XL) one (Basal). citrus_data, cell’s patient origin stored patient column, cell’s stimulation condition stored stimulation column. addition, population_id column stores information cluster labels applied cell using combination FlowSOM clustering manual merging (details, run ?HDCytoData::Bodenmiller_BCR_XL R console).","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE)) {     install.packages(\"BiocManager\") }  BiocManager::install(\"HDCytoData\") citrus_raw <- HDCytoData::Bodenmiller_BCR_XL_flowSet()  citrus_data <-     citrus_raw |>     as_tof_tbl(sep = \"_\") citrus_metadata <-     tibble(         file_name = as.character(flowCore::pData(citrus_raw)[[1]]),         sample_id = 1:length(file_name),         patient = stringr::str_extract(file_name, \"patient[:digit:]\"),         stimulation = stringr::str_extract(file_name, \"(BCR-XL)|Reference\")     ) |>     mutate(         stimulation = if_else(stimulation == \"Reference\", \"Basal\", stimulation)     )  citrus_metadata |>     head() #> # A tibble: 6 × 4 #>   file_name                          sample_id patient  stimulation #>   <chr>                                  <int> <chr>    <chr>       #> 1 PBMC8_30min_patient1_BCR-XL.fcs            1 patient1 BCR-XL      #> 2 PBMC8_30min_patient1_Reference.fcs         2 patient1 Basal       #> 3 PBMC8_30min_patient2_BCR-XL.fcs            3 patient2 BCR-XL      #> 4 PBMC8_30min_patient2_Reference.fcs         4 patient2 Basal       #> 5 PBMC8_30min_patient3_BCR-XL.fcs            5 patient3 BCR-XL      #> 6 PBMC8_30min_patient3_Reference.fcs         6 patient3 Basal citrus_data <-     citrus_data |>     left_join(citrus_metadata, by = \"sample_id\")"},{"path":"https://keyes-timothy.github.io/tidytof/articles/differential-discovery-analysis.html","id":"differential-abundance-analysis-using-tof_analyze_abundance","dir":"Articles","previous_headings":"","what":"Differential abundance analysis using tof_analyze_abundance()","title":"Differential discovery analysis","text":"might wonder certain clusters expand deplete within patients two stimulation conditions described - question requires differential abundance analysis (DAA). tidytof’s tof_analyze_abundance() verb supports use 3 statistical approaches performing DAA: diffcyt, generalized-linear mixed modeling (GLMMs), simple t-tests. setup described uses paired design 2 experimental conditions interest (Basal vs. BCR-XL), can use paired t-test method: Based output, can see 6 8 clusters statistically different abundance two stimulation conditions. Using tidytof easy integration tidyverse packages, can use result visualize fold-changes cluster (within patient) BCR-XL condition compared Basal condition using ggplot2:  Importantly, output tof_analyze_abundance depends slightly underlying statistical method used, details can found documentation tof_analyze_abundance_* function family member: tof_analyze_abundance_diffcyt tof_analyze_abundance_glmm tof_analyze_abundance_ttest","code":"daa_result <-     citrus_data |>     tof_analyze_abundance(         cluster_col = population_id,         effect_col = stimulation,         group_cols = patient,         test_type = \"paired\",         method = \"ttest\"     )  daa_result #> # A tibble: 8 × 8 #>   population_id    p_val   p_adj significant      t    df mean_diff mean_fc #>   <chr>            <dbl>   <dbl> <chr>        <dbl> <dbl>     <dbl>   <dbl> #> 1 1             0.000924 0.00535 \"*\"         -5.48      7  -0.00743   0.644 #> 2 2             0.00623  0.0166  \"*\"         -3.86      7  -0.0156    0.674 #> 3 3             0.0235   0.0314  \"*\"         -2.88      7  -0.0638    0.849 #> 4 4             0.0235   0.0314  \"*\"          2.88      7   0.0832    1.38  #> 5 5             0.0116   0.0232  \"*\"          3.39      7   0.00246   1.08  #> 6 6             0.371    0.371   \"\"          -0.955     7  -0.0168    0.919 #> 7 7             0.00134  0.00535 \"*\"          5.14      7   0.0202    1.14  #> 8 8             0.236    0.270   \"\"          -1.30      7  -0.00228   0.901 plot_data <-     citrus_data |>     mutate(population_id = as.character(population_id)) |>     left_join(         select(daa_result, population_id, significant, mean_fc),         by = \"population_id\"     ) |>     dplyr::count(patient, stimulation, population_id, significant, mean_fc, name = \"n\") |>     group_by(patient, stimulation) |>     mutate(prop = n / sum(n)) |>     ungroup() |>     pivot_wider(         names_from = stimulation,         values_from = c(prop, n),     ) |>     mutate(         diff = `prop_BCR-XL` - prop_Basal,         fc = `prop_BCR-XL` / prop_Basal,         population_id = fct_reorder(population_id, diff),         direction =             case_when(                 mean_fc > 1 & significant == \"*\" ~ \"increase\",                 mean_fc < 1 & significant == \"*\" ~ \"decrease\",                 TRUE ~ NA_character_             )     )  significance_data <-     plot_data |>     group_by(population_id, significant, direction) |>     summarize(diff = max(diff), fc = max(fc)) |>     ungroup()  plot_data |>     ggplot(aes(x = population_id, y = fc, fill = direction)) +     geom_violin(trim = FALSE) +     geom_hline(yintercept = 1, color = \"red\", linetype = \"dotted\", size = 0.5) +     geom_point() +     geom_text(         aes(x = population_id, y = fc, label = significant),         data = significance_data,         size = 8,         nudge_x = 0.2,         nudge_y = 0.06     ) +     scale_x_discrete(labels = function(x) str_c(\"cluster \", x)) +     scale_fill_manual(         values = c(\"decrease\" = \"#cd5241\", \"increase\" = \"#207394\"),         na.translate = FALSE     ) +     labs(         x = NULL,         y = \"Abundance fold-change (stimulated / basal)\",         fill = \"Effect\",         caption = \"Asterisks indicate significance at an adjusted p-value of 0.05\"     ) #> Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0. #> ℹ Please use `linewidth` instead. #> This warning is displayed once every 8 hours. #> Call `lifecycle::last_lifecycle_warnings()` to see where this warning was #> generated."},{"path":"https://keyes-timothy.github.io/tidytof/articles/differential-discovery-analysis.html","id":"differential-expression-analysis-with-tof_analyze_expression","dir":"Articles","previous_headings":"","what":"Differential expression analysis with tof_analyze_expression()","title":"Differential discovery analysis","text":"Similarly, suppose ’re interested intracellular signaling proteins change expression levels two stimulation conditions clusters. Differential Expression Analysis (DEA) can performed using tidytof’s tof_analyze_expression verb. , can use paired t-tests multiple-hypothesis correction test significant differences cluster’s expression signaling markers stimulation conditions. output tof_analyze_expression() also depends underlying test used, can see result looks relatively similar output tof_analyze_abundance(). , output tibble row represents differential expression results single cluster-marker pair - example, first row represents difference expression pS6 cluster 1 BCR-XL Basal conditions. row includes raw p-value multiple-hypothesis-corrected p-value cluster-marker pair. result can used make volcano plot visualize results cluster-marker pairs:  , details can found documentation tof_analyze_expression_* function family member: tof_analyze_expression_diffcyt tof_analyze_expression_lmm tof_analyze_expression_ttest","code":"signaling_markers <-     c(         \"pNFkB_Nd142\", \"pStat5_Nd150\", \"pAkt_Sm152\", \"pStat1_Eu153\", \"pStat3_Gd158\",         \"pSlp76_Dy164\", \"pBtk_Er166\", \"pErk_Er168\", \"pS6_Yb172\", \"pZap70_Gd156\"     )  dea_result <-     citrus_data |>     tof_preprocess(channel_cols = any_of(signaling_markers)) |>     tof_analyze_expression(         method = \"ttest\",         cluster_col = population_id,         marker_cols = any_of(signaling_markers),         effect_col = stimulation,         group_cols = patient,         test_type = \"paired\"     )  dea_result |>     head() #> # A tibble: 6 × 9 #>   population_id marker   p_val   p_adj significant     t    df mean_diff mean_fc #>   <chr>         <chr>    <dbl>   <dbl> <chr>       <dbl> <dbl>     <dbl>   <dbl> #> 1 1             pS6_Y… 7.58e-8 2.12e-6 *            22.9     7     2.56    4.31  #> 2 2             pS6_Y… 1.16e-7 2.12e-6 *            21.6     7     2.13    2.49  #> 3 3             pBtk_… 1.32e-7 2.12e-6 *           -21.2     7    -0.475   0.289 #> 4 7             pBtk_… 1.18e-7 2.12e-6 *           -21.5     7    -0.518   0.286 #> 5 8             pBtk_… 1.30e-7 2.12e-6 *           -21.2     7    -0.516   0.324 #> 6 4             pBtk_… 7.85e-7 1.05e-5 *           -16.3     7    -0.462   0.296 volcano_data <-     dea_result |>     mutate(         log2_fc = log(mean_fc, base = 2),         log_p = -log(p_adj),         significance =             case_when(                 p_adj < 0.05 & mean_fc > 1 ~ \"increased\",                 p_adj < 0.05 & mean_fc < 1 ~ \"decreased\",                 TRUE ~ NA_character_             ),         marker =             str_extract(marker, \".+_\") |>                 str_remove(\"_\"),         pair = str_c(marker, str_c(\"cluster \", population_id), sep = \"@\")     )  volcano_data |>     ggplot(aes(x = log2_fc, y = log_p, fill = significance)) +     geom_vline(xintercept = 0, linetype = \"dashed\", color = \"gray50\") +     geom_hline(yintercept = -log(0.05), linetype = \"dashed\", color = \"red\") +     geom_point(shape = 21, size = 2) +     ggrepel::geom_text_repel(         aes(label = pair),         data = slice_head(volcano_data, n = 10L),         size = 2     ) +     scale_fill_manual(         values = c(\"decreased\" = \"#cd5241\", \"increased\" = \"#207394\"),         na.value = \"#cdcdcd\"     ) +     labs(         x = \"log2(Fold-change)\",         y = \"-log10(p-value)\",         fill = NULL,         caption = \"Labels indicate the 10 most significant marker-cluster pairs\"     )"},{"path":"https://keyes-timothy.github.io/tidytof/articles/differential-discovery-analysis.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Differential discovery analysis","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats4    stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #>  [1] HDCytoData_1.22.0           flowCore_2.14.1             #>  [3] SummarizedExperiment_1.32.0 Biobase_2.62.0              #>  [5] GenomicRanges_1.54.1        GenomeInfoDb_1.38.7         #>  [7] IRanges_2.36.0              S4Vectors_0.40.2            #>  [9] MatrixGenerics_1.14.0       matrixStats_1.2.0           #> [11] ExperimentHub_2.10.0        AnnotationHub_3.10.0        #> [13] BiocFileCache_2.10.1        dbplyr_2.4.0                #> [15] BiocGenerics_0.48.1         forcats_1.0.0               #> [17] tidyr_1.3.1                 ggplot2_3.5.0               #> [19] stringr_1.5.1               dplyr_1.1.4                 #> [21] tidytof_0.99.0              #>  #> loaded via a namespace (and not attached): #>   [1] jsonlite_1.8.8                shape_1.4.6.1                 #>   [3] magrittr_2.0.3                farver_2.1.1                  #>   [5] rmarkdown_2.26                fs_1.6.3                      #>   [7] zlibbioc_1.48.0               ragg_1.2.7                    #>   [9] vctrs_0.6.5                   memoise_2.0.1                 #>  [11] htmltools_0.5.7               S4Arrays_1.2.1                #>  [13] curl_5.2.1                    SparseArray_1.2.4             #>  [15] sass_0.4.8                    parallelly_1.37.1             #>  [17] bslib_0.6.1                   desc_1.4.3                    #>  [19] lubridate_1.9.3               cachem_1.0.8                  #>  [21] igraph_2.0.2                  mime_0.12                     #>  [23] lifecycle_1.0.4               iterators_1.0.14              #>  [25] pkgconfig_2.0.3               Matrix_1.6-5                  #>  [27] R6_2.5.1                      fastmap_1.1.1                 #>  [29] shiny_1.8.0                   GenomeInfoDbData_1.2.11       #>  [31] future_1.33.1                 digest_0.6.34                 #>  [33] colorspace_2.1-0              AnnotationDbi_1.64.1          #>  [35] textshaping_0.3.7             RSQLite_2.3.5                 #>  [37] labeling_0.4.3                filelock_1.0.3                #>  [39] cytolib_2.14.1                fansi_1.0.6                   #>  [41] yardstick_1.3.0               timechange_0.3.0              #>  [43] httr_1.4.7                    polyclip_1.10-6               #>  [45] abind_1.4-5                   compiler_4.3.3                #>  [47] bit64_4.0.5                   withr_3.0.0                   #>  [49] doParallel_1.0.17             viridis_0.6.5                 #>  [51] DBI_1.2.2                     highr_0.10                    #>  [53] ggforce_0.4.2                 MASS_7.3-60.0.1               #>  [55] lava_1.8.0                    rappdirs_0.3.3                #>  [57] DelayedArray_0.28.0           tools_4.3.3                   #>  [59] interactiveDisplayBase_1.40.0 httpuv_1.6.14                 #>  [61] future.apply_1.11.1           nnet_7.3-19                   #>  [63] glue_1.7.0                    promises_1.2.1                #>  [65] grid_4.3.3                    generics_0.1.3                #>  [67] recipes_1.0.10                gtable_0.3.4                  #>  [69] tzdb_0.4.0                    class_7.3-22                  #>  [71] data.table_1.15.2             hms_1.1.3                     #>  [73] tidygraph_1.3.1               utf8_1.2.4                    #>  [75] XVector_0.42.0                ggrepel_0.9.5                 #>  [77] BiocVersion_3.18.1            foreach_1.5.2                 #>  [79] pillar_1.9.0                  RcppHNSW_0.6.0                #>  [81] later_1.3.2                   splines_4.3.3                 #>  [83] tweenr_2.0.3                  lattice_0.22-5                #>  [85] survival_3.5-8                bit_4.0.5                     #>  [87] RProtoBufLib_2.14.0           tidyselect_1.2.0              #>  [89] Biostrings_2.70.2             knitr_1.45                    #>  [91] gridExtra_2.3                 xfun_0.42                     #>  [93] graphlayouts_1.1.1            hardhat_1.3.1                 #>  [95] timeDate_4032.109             stringi_1.8.3                 #>  [97] yaml_2.3.8                    evaluate_0.23                 #>  [99] codetools_0.2-19              ggraph_2.2.1                  #> [101] tibble_3.2.1                  BiocManager_1.30.22           #> [103] cli_3.6.2                     rpart_4.1.23                  #> [105] xtable_1.8-4                  systemfonts_1.0.6             #> [107] munsell_0.5.0                 jquerylib_0.1.4               #> [109] Rcpp_1.0.12                   globals_0.16.3                #> [111] png_0.1-8                     parallel_4.3.3                #> [113] ellipsis_0.3.2                pkgdown_2.0.7                 #> [115] gower_1.0.1                   readr_2.1.5                   #> [117] blob_1.2.4                    listenv_0.9.1                 #> [119] glmnet_4.1-8                  viridisLite_0.4.2             #> [121] ipred_0.9-14                  scales_1.3.0                  #> [123] prodlim_2023.08.28            purrr_1.0.2                   #> [125] crayon_1.5.2                  rlang_1.1.3                   #> [127] KEGGREST_1.42.0"},{"path":"https://keyes-timothy.github.io/tidytof/articles/dimensionality-reduction.html","id":"dimensionality-reduction-with-tof_reduce_dimensions-","dir":"Articles","previous_headings":"","what":"Dimensionality reduction with tof_reduce_dimensions().","title":"Dimensionality reduction","text":"example call tof_reduce_dimensions() use tSNE visualize data tidytof’s built-phenograph_data dataset. default, tof_reduce_dimensions add reduced-dimension feature embeddings input tof_tbl return augmented tof_tbl (, tof_tbl new columns embedding dimension) result. return features embeddings , set augment FALSE (tof_cluster). Changing method argument results different low-dimensional embeddings:","code":"data(phenograph_data)  # perform the dimensionality reduction phenograph_tsne <-     phenograph_data |>     tof_preprocess() |>     tof_reduce_dimensions(method = \"tsne\") #> Loading required namespace: Rtsne  # select only the tsne embedding columns phenograph_tsne |>     select(contains(\"tsne\")) |>     head() #> # A tibble: 6 × 2 #>   .tsne1 .tsne2 #>    <dbl>  <dbl> #> 1  -16.7  -4.66 #> 2  -11.0   4.30 #> 3  -10.6  25.2  #> 4  -21.3   8.86 #> 5  -20.0  -2.33 #> 6  -18.2  14.2 phenograph_data |>     tof_preprocess() |>     tof_reduce_dimensions(method = \"tsne\", augment = FALSE) #> # A tibble: 3,000 × 2 #>    .tsne1 .tsne2 #>     <dbl>  <dbl> #>  1   2.31   18.7 #>  2   8.18   16.1 #>  3  30.7    17.9 #>  4  14.9    11.2 #>  5   5.47   19.0 #>  6  20.0    16.8 #>  7  10.3    17.3 #>  8  22.4    19.7 #>  9  15.6    13.6 #> 10   1.38   12.6 #> # ℹ 2,990 more rows phenograph_data |>     tof_reduce_dimensions(method = \"umap\", augment = FALSE) #> # A tibble: 3,000 × 2 #>    .umap1 .umap2 #>     <dbl>  <dbl> #>  1 -9.80  -3.12  #>  2 -8.70  -2.54  #>  3 -6.65  -1.20  #>  4 -4.63  -0.820 #>  5 -9.81  -2.81  #>  6 -0.815  2.98  #>  7 -9.71  -2.30  #>  8 -2.77   1.44  #>  9 -5.01  -0.850 #> 10 -9.30  -4.89  #> # ℹ 2,990 more rows  phenograph_data |>     tof_reduce_dimensions(method = \"pca\", augment = FALSE) #> # A tibble: 3,000 × 5 #>       .pc1     .pc2   .pc3    .pc4   .pc5 #>      <dbl>    <dbl>  <dbl>   <dbl>  <dbl> #>  1 -2.77    1.23    -0.868  0.978   3.49  #>  2 -0.969  -1.02    -0.787  1.22    0.329 #>  3 -2.36    2.54    -1.95  -0.882  -1.30  #>  4 -3.68   -0.00565  0.962  0.410   0.788 #>  5 -4.03    2.07    -0.829  1.59    5.39  #>  6 -2.59   -0.108    1.32  -1.41   -1.24  #>  7 -1.55   -0.651   -0.233  1.08    0.129 #>  8 -1.18   -0.446    0.134 -0.771  -0.932 #>  9 -2.00   -0.485    0.593 -0.0416 -0.658 #> 10 -0.0356 -0.924   -0.692  1.45    0.270 #> # ℹ 2,990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/dimensionality-reduction.html","id":"method-specifications-for-tof_reduce_-functions","dir":"Articles","previous_headings":"","what":"Method specifications for tof_reduce_*() functions","title":"Dimensionality reduction","text":"tof_reduce_dimensions() provides high-level API three lower-level functions: tof_reduce_pca(), tof_reduce_umap(), tof_reduce_tsne(). help files functions provide details algorithm-specific method specifications associated dimensionality reduction approaches. example, tof_reduce_pca takes num_comp argument determine many principal components returned: see ?tof_reduce_pca, ?tof_reduce_umap, ?tof_reduce_tsne additional details.","code":"# 2 principal components phenograph_data |>     tof_reduce_pca(num_comp = 2) #> # A tibble: 3,000 × 2 #>       .pc1     .pc2 #>      <dbl>    <dbl> #>  1 -2.77    1.23    #>  2 -0.969  -1.02    #>  3 -2.36    2.54    #>  4 -3.68   -0.00565 #>  5 -4.03    2.07    #>  6 -2.59   -0.108   #>  7 -1.55   -0.651   #>  8 -1.18   -0.446   #>  9 -2.00   -0.485   #> 10 -0.0356 -0.924   #> # ℹ 2,990 more rows # 3 principal components phenograph_data |>     tof_reduce_pca(num_comp = 3) #> # A tibble: 3,000 × 3 #>       .pc1     .pc2   .pc3 #>      <dbl>    <dbl>  <dbl> #>  1 -2.77    1.23    -0.868 #>  2 -0.969  -1.02    -0.787 #>  3 -2.36    2.54    -1.95  #>  4 -3.68   -0.00565  0.962 #>  5 -4.03    2.07    -0.829 #>  6 -2.59   -0.108    1.32  #>  7 -1.55   -0.651   -0.233 #>  8 -1.18   -0.446    0.134 #>  9 -2.00   -0.485    0.593 #> 10 -0.0356 -0.924   -0.692 #> # ℹ 2,990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/dimensionality-reduction.html","id":"visualization-using-tof_plot_cells_embedding","dir":"Articles","previous_headings":"","what":"Visualization using tof_plot_cells_embedding()","title":"Dimensionality reduction","text":"Regardless method used, reduced-dimension feature embeddings can visualized using ggplot2 (graphics package). tidytof also provides helper functions easily generating dimensionality reduction plots tof_tbl tibble columns representing embedding dimensions:   visualizations can helpful qualitatively describing phenotypic differences clusters dataset. example, example , can see one clusters high CD11b expression, whereas others lower CD11b expression.","code":"# plot the tsne embeddings using color to distinguish between clusters phenograph_tsne |>     tof_plot_cells_embedding(         embedding_cols = contains(\".tsne\"),         color_col = phenograph_cluster     ) # plot the tsne embeddings using color to represent CD11b expression phenograph_tsne |>     tof_plot_cells_embedding(         embedding_cols = contains(\".tsne\"),         color_col = cd11b     ) +     ggplot2::scale_fill_viridis_c()"},{"path":"https://keyes-timothy.github.io/tidytof/articles/dimensionality-reduction.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Dimensionality reduction","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] ggplot2_3.5.0  dplyr_1.1.4    tidytof_0.99.0 #>  #> loaded via a namespace (and not attached): #>   [1] gridExtra_2.3       rlang_1.1.3         magrittr_2.0.3      #>   [4] RcppAnnoy_0.0.22    matrixStats_1.2.0   compiler_4.3.3      #>   [7] png_0.1-8           systemfonts_1.0.6   vctrs_0.6.5         #>  [10] stringr_1.5.1       pkgconfig_2.0.3     shape_1.4.6.1       #>  [13] fastmap_1.1.1       ellipsis_0.3.2      labeling_0.4.3      #>  [16] ggraph_2.2.1        utf8_1.2.4          rmarkdown_2.26      #>  [19] prodlim_2023.08.28  tzdb_0.4.0          ragg_1.2.7          #>  [22] purrr_1.0.2         xfun_0.42           glmnet_4.1-8        #>  [25] cachem_1.0.8        jsonlite_1.8.8      recipes_1.0.10      #>  [28] highr_0.10          keras_2.13.0        tweenr_2.0.3        #>  [31] irlba_2.3.5.1       tensorflow_2.15.0   parallel_4.3.3      #>  [34] R6_2.5.1            bslib_0.6.1         stringi_1.8.3       #>  [37] reticulate_1.35.0   parallelly_1.37.1   rpart_4.1.23        #>  [40] lubridate_1.9.3     jquerylib_0.1.4     Rcpp_1.0.12         #>  [43] iterators_1.0.14    knitr_1.45          future.apply_1.11.1 #>  [46] base64enc_0.1-3     readr_2.1.5         flowCore_2.14.1     #>  [49] Matrix_1.6-5        splines_4.3.3       nnet_7.3-19         #>  [52] igraph_2.0.2        timechange_0.3.0    tidyselect_1.2.0    #>  [55] yaml_2.3.8          viridis_0.6.5       timeDate_4032.109   #>  [58] doParallel_1.0.17   codetools_0.2-19    listenv_0.9.1       #>  [61] lattice_0.22-5      tibble_3.2.1        Biobase_2.62.0      #>  [64] withr_3.0.0         evaluate_0.23       Rtsne_0.17          #>  [67] future_1.33.1       desc_1.4.3          survival_3.5-8      #>  [70] polyclip_1.10-6     embed_1.1.3         pillar_1.9.0        #>  [73] whisker_0.4.1       foreach_1.5.2       stats4_4.3.3        #>  [76] generics_0.1.3      RcppHNSW_0.6.0      S4Vectors_0.40.2    #>  [79] hms_1.1.3           munsell_0.5.0       scales_1.3.0        #>  [82] globals_0.16.3      class_7.3-22        glue_1.7.0          #>  [85] tools_4.3.3         data.table_1.15.2   gower_1.0.1         #>  [88] fs_1.6.3            graphlayouts_1.1.1  tidygraph_1.3.1     #>  [91] grid_4.3.3          yardstick_1.3.0     tidyr_1.3.1         #>  [94] RProtoBufLib_2.14.0 ipred_0.9-14        colorspace_2.1-0    #>  [97] ggforce_0.4.2       cli_3.6.2           tfruns_1.5.2        #> [100] textshaping_0.3.7   fansi_1.0.6         cytolib_2.14.1      #> [103] viridisLite_0.4.2   lava_1.8.0          uwot_0.1.16         #> [106] gtable_0.3.4        zeallot_0.1.0       sass_0.4.8          #> [109] digest_0.6.34       BiocGenerics_0.48.1 ggrepel_0.9.5       #> [112] farver_2.1.1        memoise_2.0.1       htmltools_0.5.7     #> [115] pkgdown_2.0.7       lifecycle_1.0.4     hardhat_1.3.1       #> [118] MASS_7.3-60.0.1"},{"path":"https://keyes-timothy.github.io/tidytof/articles/downsampling.html","id":"downsampling-with-tof_downsample","dir":"Articles","previous_headings":"","what":"Downsampling with tof_downsample()","title":"Downsampling","text":"Using tidytof’s built-dataset phenograph_data, can see original size dataset 1000 cells per cluster, 3000 cells total: randomly sample 200 cells per cluster, can use tof_downsample() using “constant” method: Alternatively, wanted sample 50% cells cluster, use “prop” method: finally, might also interested taking slightly different approach downsampling reduces number cells fixed constant proportion, fixed density phenotypic space. example, following scatterplot demonstrates certain areas phenotypic density phenograph_data contain cells others along cd34/cd38 axes:  reduce number cells dataset local density around cell dataset relatively constant, can use “density” method tof_downsample:  Thus, can see density downsampling uniform (though exactly uniform) across range cd34/cd38 values phenograph_data.","code":"data(phenograph_data)  phenograph_data |>     dplyr::count(phenograph_cluster) #> # A tibble: 3 × 2 #>   phenograph_cluster     n #>   <chr>              <int> #> 1 cluster1            1000 #> 2 cluster2            1000 #> 3 cluster3            1000 phenograph_data |>     # downsample     tof_downsample(         group_cols = phenograph_cluster,         method = \"constant\",         num_cells = 200     ) |>     # count the number of downsampled cells in each cluster     count(phenograph_cluster) #> # A tibble: 3 × 2 #>   phenograph_cluster     n #>   <chr>              <int> #> 1 cluster1             200 #> 2 cluster2             200 #> 3 cluster3             200 phenograph_data |>     # downsample     tof_downsample(         group_cols = phenograph_cluster,         method = \"prop\",         prop_cells = 0.5     ) |>     # count the number of downsampled cells in each cluster     count(phenograph_cluster) #> # A tibble: 3 × 2 #>   phenograph_cluster     n #>   <chr>              <int> #> 1 cluster1             500 #> 2 cluster2             500 #> 3 cluster3             500 rescale_max <-     function(x, to = c(0, 1), from = range(x, na.rm = TRUE)) {         x / from[2] * to[2]     }  phenograph_data |>     # preprocess all numeric columns in the dataset     tof_preprocess(undo_noise = FALSE) |>     # plot     ggplot(aes(x = cd34, y = cd38)) +     geom_hex() +     coord_fixed(ratio = 0.4) +     scale_x_continuous(limits = c(NA, 1.5)) +     scale_y_continuous(limits = c(NA, 4)) +     scale_fill_viridis_c(         labels = function(x) round(rescale_max(x), 2)     ) +     labs(         fill = \"relative density\"     ) phenograph_data |>     tof_preprocess(undo_noise = FALSE) |>     tof_downsample(method = \"density\", density_cols = c(cd34, cd38)) |>     # plot     ggplot(aes(x = cd34, y = cd38)) +     geom_hex() +     coord_fixed(ratio = 0.4) +     scale_x_continuous(limits = c(NA, 1.5)) +     scale_y_continuous(limits = c(NA, 4)) +     scale_fill_viridis_c(         labels = function(x) round(rescale_max(x), 2)     ) +     labs(         fill = \"relative density\"     )"},{"path":"https://keyes-timothy.github.io/tidytof/articles/downsampling.html","id":"additional-documentation","dir":"Articles","previous_headings":"","what":"Additional documentation","title":"Downsampling","text":"details, check documentation 3 underlying members tof_downsample_* function family (wrapped tof_downsample): tof_downsample_constant tof_downsample_prop tof_downsample_density","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/downsampling.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Downsampling","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] ggplot2_3.5.0  dplyr_1.1.4    tidytof_0.99.0 #>  #> loaded via a namespace (and not attached): #>   [1] gridExtra_2.3       rlang_1.1.3         magrittr_2.0.3      #>   [4] matrixStats_1.2.0   compiler_4.3.3      systemfonts_1.0.6   #>   [7] vctrs_0.6.5         stringr_1.5.1       pkgconfig_2.0.3     #>  [10] shape_1.4.6.1       fastmap_1.1.1       ggraph_2.2.1        #>  [13] utf8_1.2.4          rmarkdown_2.26      prodlim_2023.08.28  #>  [16] tzdb_0.4.0          ragg_1.2.7          purrr_1.0.2         #>  [19] xfun_0.42           glmnet_4.1-8        cachem_1.0.8        #>  [22] jsonlite_1.8.8      recipes_1.0.10      highr_0.10          #>  [25] tweenr_2.0.3        parallel_4.3.3      R6_2.5.1            #>  [28] bslib_0.6.1         stringi_1.8.3       parallelly_1.37.1   #>  [31] rpart_4.1.23        lubridate_1.9.3     jquerylib_0.1.4     #>  [34] Rcpp_1.0.12         iterators_1.0.14    knitr_1.45          #>  [37] future.apply_1.11.1 readr_2.1.5         flowCore_2.14.1     #>  [40] Matrix_1.6-5        splines_4.3.3       nnet_7.3-19         #>  [43] igraph_2.0.2        timechange_0.3.0    tidyselect_1.2.0    #>  [46] yaml_2.3.8          viridis_0.6.5       timeDate_4032.109   #>  [49] doParallel_1.0.17   codetools_0.2-19    listenv_0.9.1       #>  [52] lattice_0.22-5      tibble_3.2.1        Biobase_2.62.0      #>  [55] withr_3.0.0         evaluate_0.23       future_1.33.1       #>  [58] desc_1.4.3          survival_3.5-8      polyclip_1.10-6     #>  [61] pillar_1.9.0        foreach_1.5.2       stats4_4.3.3        #>  [64] generics_0.1.3      RcppHNSW_0.6.0      S4Vectors_0.40.2    #>  [67] hms_1.1.3           munsell_0.5.0       scales_1.3.0        #>  [70] globals_0.16.3      class_7.3-22        glue_1.7.0          #>  [73] tools_4.3.3         data.table_1.15.2   gower_1.0.1         #>  [76] fs_1.6.3            graphlayouts_1.1.1  tidygraph_1.3.1     #>  [79] grid_4.3.3          yardstick_1.3.0     tidyr_1.3.1         #>  [82] RProtoBufLib_2.14.0 ipred_0.9-14        colorspace_2.1-0    #>  [85] ggforce_0.4.2       cli_3.6.2           textshaping_0.3.7   #>  [88] fansi_1.0.6         cytolib_2.14.1      viridisLite_0.4.2   #>  [91] lava_1.8.0          gtable_0.3.4        sass_0.4.8          #>  [94] digest_0.6.34       BiocGenerics_0.48.1 ggrepel_0.9.5       #>  [97] farver_2.1.1        memoise_2.0.1       htmltools_0.5.7     #> [100] pkgdown_2.0.7       lifecycle_1.0.4     hardhat_1.3.1       #> [103] MASS_7.3-60.0.1"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"accessing-the-data-for-this-vignette","dir":"Articles","previous_headings":"","what":"Accessing the data for this vignette","title":"Feature extraction","text":"demonstrate use verbs, ’ll first download dataset originally collected development CITRUS algorithm. data available HDCytoData package, available Bioconductor can downloaded following command: load CITRUS data current R session, can call function HDCytoData, provide us format {flowCore} package (called “flowSet”). convert tidy tibble, can use tidytof built-method converting flowCore objects tof_tbl’s . Thus, can see citrus_data tof_tbl 172791 cells (one row) 39 pieces information cell (one column). can also extract metadata raw data join single-cell data using functions tidyverse: Thus, now sample-level information patient sample collected stimulation condition (“Basal” “BCR-XL”) sample exposed data acquisition. Finally, can join metadata single-cell tof_tbl obtain cleaned dataset. data cleaning steps, now citrus_data, tof_tbl containing cells collected 8 patients. Specifically, 2 samples taken patient: one cells’ B-cell receptors stimulated (BCR-XL) one (Basal). citrus_data, cell’s patient origin stored patient column, cell’s stimulation condition stored stimulation column. addition, population_id column stores information cluster labels applied cell using combination FlowSOM clustering manual merging (details, run ?HDCytoData::Bodenmiller_BCR_XL R console).","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE)) {     install.packages(\"BiocManager\") }  BiocManager::install(\"HDCytoData\") citrus_raw <- HDCytoData::Bodenmiller_BCR_XL_flowSet()  citrus_data <-     citrus_raw |>     as_tof_tbl(sep = \"_\") citrus_metadata <-     tibble(         file_name = as.character(flowCore::pData(citrus_raw)[[1]]),         sample_id = 1:length(file_name),         patient = stringr::str_extract(file_name, \"patient[:digit:]\"),         stimulation = stringr::str_extract(file_name, \"(BCR-XL)|Reference\")     ) |>     mutate(         stimulation = if_else(stimulation == \"Reference\", \"Basal\", stimulation)     )  citrus_metadata |>     head() #> # A tibble: 6 × 4 #>   file_name                          sample_id patient  stimulation #>   <chr>                                  <int> <chr>    <chr>       #> 1 PBMC8_30min_patient1_BCR-XL.fcs            1 patient1 BCR-XL      #> 2 PBMC8_30min_patient1_Reference.fcs         2 patient1 Basal       #> 3 PBMC8_30min_patient2_BCR-XL.fcs            3 patient2 BCR-XL      #> 4 PBMC8_30min_patient2_Reference.fcs         4 patient2 Basal       #> 5 PBMC8_30min_patient3_BCR-XL.fcs            5 patient3 BCR-XL      #> 6 PBMC8_30min_patient3_Reference.fcs         6 patient3 Basal citrus_data <-     citrus_data |>     left_join(citrus_metadata, by = \"sample_id\")"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"calculating-cluster-proportions-using-tof_extract_proportion","dir":"Articles","previous_headings":"","what":"Calculating cluster proportions using tof_extract_proportion()","title":"Feature extraction","text":"First, tof_extract_proportion(), extracts proportion cells cluster within sample (samples defined using group_cols argument): Like members tof_extract_* function family, tof_extract_proportion() returns one row sample (defined unique combination values columns specified group_cols) one column extracted feature (, one column proportion 8 clusters citrus_data). values can also returned “long” format changing format argument:","code":"# preprocess the numeric columns in the citrus dataset citrus_data <-     citrus_data |>     mutate(cluster = str_c(\"cluster\", population_id)) |>     tof_preprocess()  citrus_data |>     tof_extract_proportion(         cluster_col = cluster,         group_cols = c(patient, stimulation)     ) |>     head() #> # A tibble: 6 × 10 #>   patient  stimulation `prop@cluster1` `prop@cluster2` `prop@cluster3` #>   <chr>    <chr>                 <dbl>           <dbl>           <dbl> #> 1 patient1 Basal                0.0190          0.0482           0.447 #> 2 patient1 BCR-XL               0.0109          0.0395           0.268 #> 3 patient2 Basal                0.0130          0.0280           0.491 #> 4 patient2 BCR-XL               0.0101          0.0143           0.358 #> 5 patient3 Basal                0.0326          0.0830           0.397 #> 6 patient3 BCR-XL               0.0200          0.0412           0.323 #> # ℹ 5 more variables: `prop@cluster4` <dbl>, `prop@cluster5` <dbl>, #> #   `prop@cluster6` <dbl>, `prop@cluster7` <dbl>, `prop@cluster8` <dbl> citrus_data |>     tof_extract_proportion(         cluster_col = cluster,         group_cols = c(patient, stimulation),         format = \"long\"     ) |>     head() #> # A tibble: 6 × 4 #>   patient  stimulation cluster     prop #>   <chr>    <chr>       <chr>      <dbl> #> 1 patient1 Basal       cluster1 0.0190  #> 2 patient1 Basal       cluster2 0.0482  #> 3 patient1 Basal       cluster3 0.447   #> 4 patient1 Basal       cluster4 0.237   #> 5 patient1 Basal       cluster5 0.00219 #> 6 patient1 Basal       cluster6 0.0759"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"calculating-cluster-marker-expression-measures-using-tof_extract_central_tendency","dir":"Articles","previous_headings":"","what":"Calculating cluster marker expression measures using tof_extract_central_tendency()","title":"Feature extraction","text":"Another member tof_extract_*() function family, tof_extract_central_tendency(), computes central tendency (e.g. mean median) user-specified markers cluster. argument central_tendency_function can used compute summary statistic. example, following choice central_tendency_function compute 75th percentile marker-cluster pair citrus_data:","code":"citrus_data |>     tof_extract_central_tendency(         cluster_col = cluster,         group_cols = c(patient, stimulation),         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         central_tendency_function = mean     ) |>     head() #> # A tibble: 6 × 26 #>   patient  stimulation `CD45_In115@cluster1_ct` `CD4_Nd145@cluster1_ct` #>   <chr>    <chr>                          <dbl>                   <dbl> #> 1 patient1 BCR-XL                          4.80                  0.0967 #> 2 patient1 Basal                           4.68                  0.765  #> 3 patient2 BCR-XL                          5.00                 -0.0579 #> 4 patient2 Basal                           4.88                  0.808  #> 5 patient3 BCR-XL                          5.04                 -0.0432 #> 6 patient3 Basal                           4.98                  0.745  #> # ℹ 22 more variables: `CD20_Sm147@cluster1_ct` <dbl>, #> #   `CD45_In115@cluster2_ct` <dbl>, `CD4_Nd145@cluster2_ct` <dbl>, #> #   `CD20_Sm147@cluster2_ct` <dbl>, `CD45_In115@cluster3_ct` <dbl>, #> #   `CD4_Nd145@cluster3_ct` <dbl>, `CD20_Sm147@cluster3_ct` <dbl>, #> #   `CD45_In115@cluster4_ct` <dbl>, `CD4_Nd145@cluster4_ct` <dbl>, #> #   `CD20_Sm147@cluster4_ct` <dbl>, `CD45_In115@cluster5_ct` <dbl>, #> #   `CD4_Nd145@cluster5_ct` <dbl>, `CD20_Sm147@cluster5_ct` <dbl>, … citrus_data |>     tof_extract_central_tendency(         cluster_col = cluster,         group_cols = c(patient, stimulation),         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         central_tendency_function = function(x) quantile(x = x, probs = 0.75)     ) |>     head() #> # A tibble: 6 × 26 #>   patient  stimulation `CD45_In115@cluster1_ct` `CD4_Nd145@cluster1_ct` #>   <chr>    <chr>                          <dbl>                   <dbl> #> 1 patient1 BCR-XL                          5.30                 -0.0186 #> 2 patient1 Basal                           5.18                  1.32   #> 3 patient2 BCR-XL                          5.41                 -0.0201 #> 4 patient2 Basal                           5.28                  1.39   #> 5 patient3 BCR-XL                          5.42                 -0.0362 #> 6 patient3 Basal                           5.41                  1.27   #> # ℹ 22 more variables: `CD20_Sm147@cluster1_ct` <dbl>, #> #   `CD45_In115@cluster2_ct` <dbl>, `CD4_Nd145@cluster2_ct` <dbl>, #> #   `CD20_Sm147@cluster2_ct` <dbl>, `CD45_In115@cluster3_ct` <dbl>, #> #   `CD4_Nd145@cluster3_ct` <dbl>, `CD20_Sm147@cluster3_ct` <dbl>, #> #   `CD45_In115@cluster4_ct` <dbl>, `CD4_Nd145@cluster4_ct` <dbl>, #> #   `CD20_Sm147@cluster4_ct` <dbl>, `CD45_In115@cluster5_ct` <dbl>, #> #   `CD4_Nd145@cluster5_ct` <dbl>, `CD20_Sm147@cluster5_ct` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"calculating-the-proportion-of-cells-with-marker-expression-above-a-threshold-using-tof_extract_proportion","dir":"Articles","previous_headings":"","what":"Calculating the proportion of cells with marker expression above a threshold using tof_extract_proportion()","title":"Feature extraction","text":"tof_extract_threshold() similar tof_extract_central_tendency(), calculates proportion cells user-specified expression value marker instead measure central tendency:","code":"citrus_data |>     tof_extract_threshold(         cluster_col = cluster,         group_cols = c(patient, stimulation),         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         threshold = 5     ) |>     head() #> # A tibble: 6 × 26 #>   patient  stimulation `CD45_In115@cluster1_threshold` CD4_Nd145@cluster1_thre…¹ #>   <chr>    <chr>                                 <dbl>                     <dbl> #> 1 patient1 BCR-XL                                0.516                         0 #> 2 patient1 Basal                                 0.365                         0 #> 3 patient2 BCR-XL                                0.554                         0 #> 4 patient2 Basal                                 0.452                         0 #> 5 patient3 BCR-XL                                0.547                         0 #> 6 patient3 Basal                                 0.549                         0 #> # ℹ abbreviated name: ¹​`CD4_Nd145@cluster1_threshold` #> # ℹ 22 more variables: `CD20_Sm147@cluster1_threshold` <dbl>, #> #   `CD45_In115@cluster2_threshold` <dbl>, #> #   `CD4_Nd145@cluster2_threshold` <dbl>, #> #   `CD20_Sm147@cluster2_threshold` <dbl>, #> #   `CD45_In115@cluster3_threshold` <dbl>, #> #   `CD4_Nd145@cluster3_threshold` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"calculating-differences-in-marker-distributions-using-tof_extract_emd-and-tof_extract_jsd","dir":"Articles","previous_headings":"","what":"Calculating differences in marker distributions using tof_extract_emd() and tof_extract_jsd()","title":"Feature extraction","text":"two final members tof_extract_* function family – tof_extract_emd tof_extract_jsd – designed specifically comparing distributions marker expression stimulation conditions. , must given stimulation column (using emd_col jsd_col argument) identifies stimulation condition cell , reference_level specifies reference (.e. unstimulated) condition within emd_col jsd_col. additional arguments, tof_extract_emd computes Earth-mover’s distance marker’s distribution stimulation conditions (within cluster) basal condition; similarly, tof_extract_jsd computes Jensen-Shannon divergence index distributions. values ways compare different 2 distributions one another computationally expensive (also higher-resolution) simply comparing measures central tendency.","code":"# Earth-mover's distance citrus_data |>     tof_extract_emd(         cluster_col = cluster,         group_cols = patient,         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         emd_col = stimulation,         reference_level = \"Basal\"     ) |>     head() #> # A tibble: 6 × 25 #>   patient  BCR-XL_CD45_In115@clu…¹ BCR-XL_CD4_Nd145@clu…² BCR-XL_CD20_Sm147@cl…³ #>   <chr>                      <dbl>                  <dbl>                  <dbl> #> 1 patient1                   0.864                   2.47                  13.0  #> 2 patient2                   1.11                    7.05                  10.8  #> 3 patient3                   0.670                   6.23                  10.5  #> 4 patient4                   2.64                    5.86                   9.90 #> 5 patient5                   0.594                   7.56                   8.13 #> 6 patient6                   0.661                   4.77                   7.97 #> # ℹ abbreviated names: ¹​`BCR-XL_CD45_In115@cluster3_emd`, #> #   ²​`BCR-XL_CD4_Nd145@cluster3_emd`, ³​`BCR-XL_CD20_Sm147@cluster3_emd` #> # ℹ 21 more variables: `BCR-XL_CD45_In115@cluster7_emd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster7_emd` <dbl>, #> #   `BCR-XL_CD20_Sm147@cluster7_emd` <dbl>, #> #   `BCR-XL_CD45_In115@cluster4_emd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster4_emd` <dbl>, … # Jensen-Shannon Divergence citrus_data |>     tof_extract_jsd(         cluster_col = cluster,         group_cols = patient,         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         jsd_col = stimulation,         reference_level = \"Basal\"     ) |>     head() #> # A tibble: 6 × 25 #>   patient  BCR-XL_CD45_In115@clu…¹ BCR-XL_CD4_Nd145@clu…² BCR-XL_CD20_Sm147@cl…³ #>   <chr>                      <dbl>                  <dbl>                  <dbl> #> 1 patient1                 0.0367                  0.0513                  0.347 #> 2 patient2                 0.00831                 0.168                   0.401 #> 3 patient3                 0.0104                  0.115                   0.357 #> 4 patient4                 0.0301                  0.135                   0.205 #> 5 patient5                 0.00911                 0.0789                  0.274 #> 6 patient6                 0.00972                 0.0346                  0.214 #> # ℹ abbreviated names: ¹​`BCR-XL_CD45_In115@cluster3_jsd`, #> #   ²​`BCR-XL_CD4_Nd145@cluster3_jsd`, ³​`BCR-XL_CD20_Sm147@cluster3_jsd` #> # ℹ 21 more variables: `BCR-XL_CD45_In115@cluster7_jsd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster7_jsd` <dbl>, #> #   `BCR-XL_CD20_Sm147@cluster7_jsd` <dbl>, #> #   `BCR-XL_CD45_In115@cluster4_jsd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster4_jsd` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"putting-it-all-together-with-tof_extract_features","dir":"Articles","previous_headings":"","what":"Putting it all together with tof_extract_features()","title":"Feature extraction","text":"Finally, tof_extract_features() verb provides wrapper members function family, allowing users extract multiple features types . example, following code extracts proportion cluster, median several markers cluster, EMD basal condition stimulated condition cluster patients citrus_data.","code":"signaling_markers <-     c(         \"pNFkB_Nd142\", \"pStat5_Nd150\", \"pAkt_Sm152\", \"pStat1_Eu153\", \"pStat3_Gd158\",         \"pSlp76_Dy164\", \"pBtk_Er166\", \"pErk_Er168\", \"pS6_Yb172\", \"pZap70_Gd156\"     )  citrus_data |>     tof_extract_features(         cluster_col = cluster,         group_cols = patient,         stimulation_col = stimulation,         lineage_cols = any_of(c(\"CD45_In115\", \"CD20_Sm147\", \"CD33_Nd148\")),         signaling_cols = any_of(signaling_markers),         signaling_method = \"emd\",         basal_level = \"Basal\"     ) |>     head() #> # A tibble: 6 × 193 #>   patient  `prop@cluster1` `prop@cluster2` `prop@cluster3` `prop@cluster4` #>   <chr>              <dbl>           <dbl>           <dbl>           <dbl> #> 1 patient1          0.0149          0.0438           0.356           0.351 #> 2 patient2          0.0115          0.0212           0.425           0.323 #> 3 patient3          0.0255          0.0594           0.355           0.217 #> 4 patient4          0.0127          0.0418           0.320           0.223 #> 5 patient5          0.0207          0.0423           0.377           0.269 #> 6 patient6          0.0183          0.0493           0.459           0.250 #> # ℹ 188 more variables: `prop@cluster5` <dbl>, `prop@cluster6` <dbl>, #> #   `prop@cluster7` <dbl>, `prop@cluster8` <dbl>, #> #   `CD45_In115@cluster1_ct` <dbl>, `CD20_Sm147@cluster1_ct` <dbl>, #> #   `CD33_Nd148@cluster1_ct` <dbl>, `CD45_In115@cluster2_ct` <dbl>, #> #   `CD20_Sm147@cluster2_ct` <dbl>, `CD33_Nd148@cluster2_ct` <dbl>, #> #   `CD45_In115@cluster3_ct` <dbl>, `CD20_Sm147@cluster3_ct` <dbl>, #> #   `CD33_Nd148@cluster3_ct` <dbl>, `CD45_In115@cluster4_ct` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Feature extraction","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats4    stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #>  [1] HDCytoData_1.22.0           flowCore_2.14.1             #>  [3] SummarizedExperiment_1.32.0 Biobase_2.62.0              #>  [5] GenomicRanges_1.54.1        GenomeInfoDb_1.38.7         #>  [7] IRanges_2.36.0              S4Vectors_0.40.2            #>  [9] MatrixGenerics_1.14.0       matrixStats_1.2.0           #> [11] ExperimentHub_2.10.0        AnnotationHub_3.10.0        #> [13] BiocFileCache_2.10.1        dbplyr_2.4.0                #> [15] BiocGenerics_0.48.1         stringr_1.5.1               #> [17] dplyr_1.1.4                 tidytof_0.99.0              #>  #> loaded via a namespace (and not attached): #>   [1] jsonlite_1.8.8                shape_1.4.6.1                 #>   [3] magrittr_2.0.3                farver_2.1.1                  #>   [5] rmarkdown_2.26                fs_1.6.3                      #>   [7] zlibbioc_1.48.0               ragg_1.2.7                    #>   [9] vctrs_0.6.5                   memoise_2.0.1                 #>  [11] htmltools_0.5.7               S4Arrays_1.2.1                #>  [13] curl_5.2.1                    SparseArray_1.2.4             #>  [15] sass_0.4.8                    parallelly_1.37.1             #>  [17] bslib_0.6.1                   desc_1.4.3                    #>  [19] lubridate_1.9.3               cachem_1.0.8                  #>  [21] igraph_2.0.2                  mime_0.12                     #>  [23] lifecycle_1.0.4               iterators_1.0.14              #>  [25] pkgconfig_2.0.3               Matrix_1.6-5                  #>  [27] R6_2.5.1                      fastmap_1.1.1                 #>  [29] shiny_1.8.0                   GenomeInfoDbData_1.2.11       #>  [31] future_1.33.1                 digest_0.6.34                 #>  [33] colorspace_2.1-0              AnnotationDbi_1.64.1          #>  [35] textshaping_0.3.7             RSQLite_2.3.5                 #>  [37] philentropy_0.8.0             filelock_1.0.3                #>  [39] cytolib_2.14.1                fansi_1.0.6                   #>  [41] yardstick_1.3.0               timechange_0.3.0              #>  [43] httr_1.4.7                    polyclip_1.10-6               #>  [45] abind_1.4-5                   compiler_4.3.3                #>  [47] bit64_4.0.5                   withr_3.0.0                   #>  [49] doParallel_1.0.17             viridis_0.6.5                 #>  [51] DBI_1.2.2                     ggforce_0.4.2                 #>  [53] MASS_7.3-60.0.1               lava_1.8.0                    #>  [55] rappdirs_0.3.3                DelayedArray_0.28.0           #>  [57] tools_4.3.3                   interactiveDisplayBase_1.40.0 #>  [59] httpuv_1.6.14                 future.apply_1.11.1           #>  [61] nnet_7.3-19                   glue_1.7.0                    #>  [63] promises_1.2.1                grid_4.3.3                    #>  [65] generics_0.1.3                recipes_1.0.10                #>  [67] gtable_0.3.4                  tzdb_0.4.0                    #>  [69] class_7.3-22                  tidyr_1.3.1                   #>  [71] data.table_1.15.2             hms_1.1.3                     #>  [73] tidygraph_1.3.1               utf8_1.2.4                    #>  [75] XVector_0.42.0                ggrepel_0.9.5                 #>  [77] BiocVersion_3.18.1            foreach_1.5.2                 #>  [79] pillar_1.9.0                  RcppHNSW_0.6.0                #>  [81] later_1.3.2                   splines_4.3.3                 #>  [83] tweenr_2.0.3                  lattice_0.22-5                #>  [85] survival_3.5-8                bit_4.0.5                     #>  [87] emdist_0.3-3                  RProtoBufLib_2.14.0           #>  [89] tidyselect_1.2.0              Biostrings_2.70.2             #>  [91] knitr_1.45                    gridExtra_2.3                 #>  [93] xfun_0.42                     graphlayouts_1.1.1            #>  [95] hardhat_1.3.1                 timeDate_4032.109             #>  [97] stringi_1.8.3                 yaml_2.3.8                    #>  [99] evaluate_0.23                 codetools_0.2-19              #> [101] ggraph_2.2.1                  tibble_3.2.1                  #> [103] BiocManager_1.30.22           cli_3.6.2                     #> [105] rpart_4.1.23                  xtable_1.8-4                  #> [107] systemfonts_1.0.6             munsell_0.5.0                 #> [109] jquerylib_0.1.4               Rcpp_1.0.12                   #> [111] globals_0.16.3                png_0.1-8                     #> [113] parallel_4.3.3                ellipsis_0.3.2                #> [115] pkgdown_2.0.7                 gower_1.0.1                   #> [117] ggplot2_3.5.0                 readr_2.1.5                   #> [119] blob_1.2.4                    listenv_0.9.1                 #> [121] glmnet_4.1-8                  viridisLite_0.4.2             #> [123] ipred_0.9-14                  scales_1.3.0                  #> [125] prodlim_2023.08.28            purrr_1.0.2                   #> [127] crayon_1.5.2                  rlang_1.1.3                   #> [129] KEGGREST_1.42.0"},{"path":"https://keyes-timothy.github.io/tidytof/articles/modeling.html","id":"accessing-the-data-for-this-vignette","dir":"Articles","previous_headings":"","what":"Accessing the data for this vignette","title":"Building predictive models","text":"illustrate work, first download patient-level data paper combine sample-level clinical annotations one tidytof’s built-datasets (ddpr_metadata). data processing steps result tibble called ddpr_patients. numeric columns ddpr_patients represent aggregated cell population features sample (see Supplementary Table 5 paper details). non-numeric columns represent clinical metadata sample (run ?ddpr_metadata information). metadata columns, important ones indicate patient develop refractory disease (“relapse”), /happen. information stored relapse_status time_to_relapse columns, respectively. also preprocessing steps might want perform now save us headaches ’re fitting models later. next part vignette, ’ll use patient-level data build predictive models using resampling procedures like k-fold cross-validation bootstrapping.","code":"data(ddpr_metadata)  # link for downloading the sample-level data from the Nature Medicine website data_link <-     \"https://static-content.springer.com/esm/art%3A10.1038%2Fnm.4505/MediaObjects/41591_2018_BFnm4505_MOESM3_ESM.csv\"  # download the data and combine it with clinical annotations ddpr_patients <-     readr::read_csv(data_link, skip = 2L, n_max = 78L, show_col_types = FALSE) |>     dplyr::rename(patient_id = Patient_ID) |>     dplyr::left_join(ddpr_metadata, by = \"patient_id\") |>     dplyr::filter(!str_detect(patient_id, \"Healthy\"))  # preview only the metadata (i.e. non-numeric) columns ddpr_patients |>     dplyr::select(where(~ !is.numeric(.x))) |>     head() #> # A tibble: 6 × 8 #>   patient_id gender mrd_risk nci_rome_risk relapse_status type_of_relapse cohort #>   <chr>      <chr>  <chr>    <chr>         <chr>          <chr>           <chr>  #> 1 UPN1       Male   Interme… Standard      Yes            Early           Train… #> 2 UPN1-Rx    Male   Interme… Standard      Yes            Early           Train… #> 3 UPN2       Male   Interme… Standard      No             NA              Train… #> 4 UPN3       Female Standard Standard      No             NA              Train… #> 5 UPN4       Male   Standard Standard      No             NA              Valid… #> 6 UPN5       Female Standard High          No             NA              Valid… #> # ℹ 1 more variable: ddpr_risk <chr> ddpr_patients <-     ddpr_patients |>     # convert the relapse_status variable to a factor     # and create the time_to_event and event columns for survival modeling     dplyr::mutate(         relapse_status = as.factor(relapse_status),         time_to_event = dplyr::if_else(relapse_status == \"Yes\", time_to_relapse, ccr),         event = dplyr::if_else(relapse_status == \"Yes\", 1, 0)     )"},{"path":"https://keyes-timothy.github.io/tidytof/articles/modeling.html","id":"building-a-classifier-using-elastic-net-regularized-logistic-regression","dir":"Articles","previous_headings":"","what":"Building a classifier using elastic net-regularized logistic regression","title":"Building predictive models","text":"First, can build elastic net classifier predict patients relapse patients won’t (ignoring time--event data now). , can use relapse_status column ddpr_patients outcome variable: can see samples annotated, can throw away samples don’t clinical outcome associated . original DDPR paper, 10-fold cross-validation used tune glmnet model estimate error model new datasets. , can use tof_split_data() function split cohort training test set either 10 times using k-fold cross-validation bootstrapping. Reading documentation tof_split_data() demonstrates use resampling methods (like bootstrapping). output tof_split_data() varies depending split_method used. cross-validation, result rset object rsample package. rset objects type tibble two columns: splits - column entry rsplit object (contains single resample full dataset) id - character column entry represents name fold entry splits belongs . can inspect one resamples splits column see contain: Note can use rsample::training rsample::testing return training test observations resampling: , can feed training_split tof_train_model function tune logistic regression model predicts relapse_status leukemia patient. sure check tof_create_grid documentation learn make hyperparameter search grid model tuning (case, limit mixture parameter value 1, fits sparse lasso model). Also note , case, illustrative purposes ’re incorporating features one populations interest (population 2) model, whereas original model incorporated features 12 populations (likely required quite bit computational power result). output tof_train_model tof_model, object containing information trained model (can passed tof_predict tof_assess_model verbs). tof_model printed, information optimal hyperparamters printed, table nonzero model coefficients model. training model, might interested seeing performs. One way assess classification model see well works applied directly back data trained (model’s “training data”). , can use tof_assess_model() function arguments: tof_assess_model() returns list several model assessment metrics differ depending kind tof_model trained. two-class classifier models, among useful confusion_matrix, shows classifier classified observation relative true class assignment. case, can see model performed perfectly training data (expected, model optimized using data !). can also visualize model’s performance using tof_plot_model() verb, case two-class model give us Receiver-Operating Characteristic (ROC) curve:  shown , tof_plot_model() return receiver-operating curve two-class model. ’s unusual get AUC 1 machine learning world, can note case, classification problem wasn’t particularly difficult (lot input features work ). training model, generally isn’t sufficient evaluate model performs training data alone, provide overly-optimistic representation model perform data ’s never seen (problem often called “overfitting” model training data). get fairer estimate model’s performance new datasets, can also evaluate cross-validation error calling tof_assess_model() tof_plot_model() new_data argument set “tuning”.  case, plot ROC Curve using predictions observation excluded model training cross-validation, approach gives accurate estimate model’s performance new data simple evaluation training dataset.","code":"# find how many of each outcome we have in our cohort ddpr_patients |>     dplyr::count(relapse_status) #> # A tibble: 3 × 2 #>   relapse_status     n #>   <fct>          <int> #> 1 No                37 #> 2 Yes               24 #> 3 NA                12 ddpr_patients_unannotated <-     ddpr_patients |>     dplyr::filter(is.na(relapse_status))  ddpr_patients <-     ddpr_patients |>     dplyr::filter(!is.na(relapse_status)) set.seed(3000L)  training_split <-     ddpr_patients |>     tof_split_data(         split_method = \"k-fold\",         num_cv_folds = 10,         strata = relapse_status     )  training_split #> #  10-fold cross-validation using stratification  #> # A tibble: 10 × 2 #>    splits         id     #>    <list>         <chr>  #>  1 <split [54/7]> Fold01 #>  2 <split [54/7]> Fold02 #>  3 <split [54/7]> Fold03 #>  4 <split [54/7]> Fold04 #>  5 <split [55/6]> Fold05 #>  6 <split [55/6]> Fold06 #>  7 <split [55/6]> Fold07 #>  8 <split [56/5]> Fold08 #>  9 <split [56/5]> Fold09 #> 10 <split [56/5]> Fold10 my_resample <- training_split$splits[[1]]  print(my_resample) #> <Analysis/Assess/Total> #> <54/7/61> my_resample |>     rsample::training() |>     head() #> # A tibble: 6 × 1,854 #>   patient_id Pop_P_Pop1 CD19_Pop1 CD20_Pop1 CD24_Pop1 CD34_Pop1 CD38_Pop1 #>   <chr>           <dbl>     <dbl>     <dbl>     <dbl>     <dbl>     <dbl> #> 1 UPN1           3.06      0.583    0.00449    0.164       1.94     0.416 #> 2 UPN1-Rx        0.0395    0.618    0.0634     0.572       2.93     0.944 #> 3 UPN2           0.139     0.0662   0.0221     0.0825      2.25     0.454 #> 4 UPN3           0.633     0.0234   0.0165     0.0327      2.25     0.226 #> 5 UPN4           0.0443    0.129    0.0447     0.232       2.47     0.336 #> 6 UPN5           0.0647    0.0577   0.0163     0.162       2.89     0.406 #> # ℹ 1,847 more variables: CD127_Pop1 <dbl>, CD179a_Pop1 <dbl>, #> #   CD179b_Pop1 <dbl>, IgMi_Pop1 <dbl>, IgMs_Pop1 <dbl>, TdT_Pop1 <dbl>, #> #   CD22_Pop1 <dbl>, tIkaros_Pop1 <dbl>, CD79b_Pop1 <dbl>, Ki67_Pop1 <dbl>, #> #   TSLPr_Pop1 <dbl>, RAG1_Pop1 <dbl>, CD123_Pop1 <dbl>, CD45_Pop1 <dbl>, #> #   CD10_Pop1 <dbl>, Pax5_Pop1 <dbl>, CD43_Pop1 <dbl>, CD58_Pop1 <dbl>, #> #   HLADR_Pop1 <dbl>, p4EBP1_FC_Basal_Pop1 <dbl>, pSTAT5_FC_Basal_Pop1 <dbl>, #> #   pPLCg1_2_FC_Basal_Pop1 <dbl>, pAkt_FC_Basal_Pop1 <dbl>, … my_resample |>     rsample::testing() |>     head() #> # A tibble: 6 × 1,854 #>   patient_id Pop_P_Pop1 CD19_Pop1 CD20_Pop1 CD24_Pop1 CD34_Pop1 CD38_Pop1 #>   <chr>           <dbl>     <dbl>     <dbl>     <dbl>     <dbl>     <dbl> #> 1 UPN6          5.62      0.550     0.00374     0.622      2.86     0.342 #> 2 UPN10-Rx      0.00240   0.167     0.203       0.802      2.57     0.822 #> 3 UPN13         0.0634    0.0300    0.0219      0.109      2.34     0.314 #> 4 UPN22-Rx      0.0643    1.68      0.0804      1.56       3.06     0.529 #> 5 UPN58         0.00546   0.00918   0.0168      0.480      2.70     0.112 #> 6 UPN95         0.300     0.389     0.00454     0.697      2.45     0.247 #> # ℹ 1,847 more variables: CD127_Pop1 <dbl>, CD179a_Pop1 <dbl>, #> #   CD179b_Pop1 <dbl>, IgMi_Pop1 <dbl>, IgMs_Pop1 <dbl>, TdT_Pop1 <dbl>, #> #   CD22_Pop1 <dbl>, tIkaros_Pop1 <dbl>, CD79b_Pop1 <dbl>, Ki67_Pop1 <dbl>, #> #   TSLPr_Pop1 <dbl>, RAG1_Pop1 <dbl>, CD123_Pop1 <dbl>, CD45_Pop1 <dbl>, #> #   CD10_Pop1 <dbl>, Pax5_Pop1 <dbl>, CD43_Pop1 <dbl>, CD58_Pop1 <dbl>, #> #   HLADR_Pop1 <dbl>, p4EBP1_FC_Basal_Pop1 <dbl>, pSTAT5_FC_Basal_Pop1 <dbl>, #> #   pPLCg1_2_FC_Basal_Pop1 <dbl>, pAkt_FC_Basal_Pop1 <dbl>, … hyperparams <- tof_create_grid(mixture_values = 1)  class_mod <-     training_split |>     tof_train_model(         predictor_cols = c(contains(\"Pop2\")),         response_col = relapse_status,         model_type = \"two-class\",         hyperparameter_grid = hyperparams,         impute_missing_predictors = TRUE,         remove_zv_predictors = TRUE # often a smart decision     ) print(class_mod) #> A two-class `tof_model` with a mixture parameter (alpha) of 1 and a penalty parameter (lambda) of 1e-10  #> # A tibble: 28 × 2 #>    feature               coefficient #>    <chr>                       <dbl> #>  1 p4EBP1_dP_IL7_Pop2          -3.10 #>  2 pCreb_dP_PVO4_Pop2          -2.66 #>  3 TSLPr_Pop2                   2.07 #>  4 CD43_Pop2                    2.00 #>  5 pSTAT5_FC_PVO4_Pop2         -1.80 #>  6 pS6_dP_IL7_Pop2              1.56 #>  7 pPLCg1_2_dP_PVO4_Pop2        1.44 #>  8 (Intercept)                 -1.43 #>  9 pSTAT5_FC_BCR_Pop2           1.24 #> 10 pErk_dP_IL7_Pop2            -1.23 #> # ℹ 18 more rows training_classifier_metrics <-     class_mod |>     tof_assess_model() training_classifier_metrics$confusion_matrix #> # A tibble: 4 × 3 #>   true_outcome predicted_outcome num_observations #>   <chr>        <chr>                        <int> #> 1 No           No                              37 #> 2 No           Yes                              0 #> 3 Yes          No                               0 #> 4 Yes          Yes                             24 class_mod |>     tof_plot_model() cv_classifier_metrics <-     class_mod |>     tof_assess_model(new_data = \"tuning\")  class_mod |>     tof_plot_model(new_data = \"tuning\")"},{"path":"https://keyes-timothy.github.io/tidytof/articles/modeling.html","id":"building-a-survival-model-using-elastic-net-regularized-cox-regression","dir":"Articles","previous_headings":"","what":"Building a survival model using elastic net-regularized cox regression","title":"Building predictive models","text":"Building ideas , sophisticated way model data simply predict relapse won’t, build time--event model estimates patients’ probabilities relapse function time since diagnosis. approach called “survival modeling” (specifically, case use Cox-proportional hazards modeling) takes account patients adverse events different times course disease (.e. everyone relapses time). build survival model using tidytof, use tof_train_model() verb setting model_type flag “survival”. addition, need provide two outcome columns. first columns (event_col) indicates patient relapsed (.e. experienced event--interest) censored certain amount follow-time. second (time_col) indicates much time took patient relapse censored analysis. survival model trained, can used predict patient’s probability event--interest different times post-diagnosis. However, common way survival models applied practice use patient’s predicted relative risk event--interest divide patients low- high-risk subgroups. tidytof can automatically according optimal split obtained using log-rank test possible split points dataset tof_assess_model(). addition, return predicted survival curve patient time: survival models, tof_plot_model() plots average survival curves low- high-risk groups:","code":"hyperparams <- tof_create_grid(mixture_values = 1)  survival_mod <-     training_split |>     tof_train_model(         predictor_cols = c(contains(\"Pop2\")),         time_col = time_to_event,         event_col = event,         model_type = \"survival\",         hyperparameter_grid = hyperparams,         impute_missing_predictors = TRUE,         remove_zv_predictors = TRUE # often a smart decision     )  print(survival_mod) #> A survival `tof_model` with a mixture parameter (alpha) of 1 and a penalty parameter (lambda) of 3.162e-03  #> # A tibble: 40 × 2 #>    feature               coefficient #>    <chr>                       <dbl> #>  1 pErk_dP_TSLP_Pop2           -7.03 #>  2 pCreb_dP_PVO4_Pop2          -5.47 #>  3 CD19_Pop2                   -3.73 #>  4 CD34_Pop2                    3.63 #>  5 pSTAT5_FC_BCR_Pop2           3.40 #>  6 HLADR_Pop2                  -3.38 #>  7 pPLCg1_2_dP_IL7_Pop2         3.33 #>  8 pPLCg1_2_dP_PVO4_Pop2        3.14 #>  9 pSyk_dP_TSLP_Pop2            2.88 #> 10 CD123_Pop2                   2.77 #> # ℹ 30 more rows survival_metrics <-     survival_mod |>     tof_assess_model()  survival_metrics #> $model_metrics #> # A tibble: 3 × 2 #>   metric                        value #>   <chr>                         <dbl> #> 1 neg_log_partial_likelihood 1.76e+ 1 #> 2 concordance_index          1   e+ 0 #> 3 log_rank_p_value           1.47e-22 #>  #> $survival_curves #> # A tibble: 61 × 6 #>    row_index survival_curve    relative_risk time_to_event event risk_group #>    <chr>     <list>                    <dbl>         <dbl> <dbl> <chr>      #>  1 1         <tibble [54 × 2]>       2.83e+3          1043     1 low        #>  2 2         <tibble [54 × 2]>       2.61e+3          1043     1 low        #>  3 3         <tibble [54 × 2]>       1.58e-8          5406     0 low        #>  4 4         <tibble [54 × 2]>       2.09e-4          4917     0 low        #>  5 5         <tibble [54 × 2]>       9.98e-3          4538     0 low        #>  6 6         <tibble [54 × 2]>       6.62e-1          4490     0 low        #>  7 7         <tibble [54 × 2]>       4.09e+9           136     1 high       #>  8 8         <tibble [54 × 2]>       2.57e+8           364     1 high       #>  9 9         <tibble [54 × 2]>       1.27e+9           237     1 high       #> 10 10        <tibble [54 × 2]>       2.31e+4           886     1 low        #> # ℹ 51 more rows survival_mod |>     tof_plot_model() cv_survival_metrics <-     survival_mod |>     tof_assess_model(new_data = \"tuning\") survival_mod |>     tof_plot_model(new_data = \"tuning\")"},{"path":"https://keyes-timothy.github.io/tidytof/articles/modeling.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Building predictive models","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] stringr_1.5.1  tidytof_0.99.0 #>  #> loaded via a namespace (and not attached): #>   [1] gridExtra_2.3       rlang_1.1.3         magrittr_2.0.3      #>   [4] furrr_0.3.1         matrixStats_1.2.0   compiler_4.3.3      #>   [7] systemfonts_1.0.6   vctrs_0.6.5         crayon_1.5.2        #>  [10] pkgconfig_2.0.3     shape_1.4.6.1       fastmap_1.1.1       #>  [13] ellipsis_0.3.2      labeling_0.4.3      ggraph_2.2.1        #>  [16] utf8_1.2.4          rmarkdown_2.26      prodlim_2023.08.28  #>  [19] tzdb_0.4.0          ragg_1.2.7          bit_4.0.5           #>  [22] purrr_1.0.2         xfun_0.42           glmnet_4.1-8        #>  [25] cachem_1.0.8        jsonlite_1.8.8      recipes_1.0.10      #>  [28] highr_0.10          tweenr_2.0.3        parallel_4.3.3      #>  [31] R6_2.5.1            rsample_1.2.0       bslib_0.6.1         #>  [34] stringi_1.8.3       parallelly_1.37.1   rpart_4.1.23        #>  [37] lubridate_1.9.3     jquerylib_0.1.4     Rcpp_1.0.12         #>  [40] iterators_1.0.14    knitr_1.45          future.apply_1.11.1 #>  [43] readr_2.1.5         flowCore_2.14.1     Matrix_1.6-5        #>  [46] splines_4.3.3       nnet_7.3-19         igraph_2.0.2        #>  [49] timechange_0.3.0    tidyselect_1.2.0    yaml_2.3.8          #>  [52] viridis_0.6.5       timeDate_4032.109   doParallel_1.0.17   #>  [55] codetools_0.2-19    curl_5.2.1          listenv_0.9.1       #>  [58] lattice_0.22-5      tibble_3.2.1        Biobase_2.62.0      #>  [61] withr_3.0.0         evaluate_0.23       future_1.33.1       #>  [64] desc_1.4.3          survival_3.5-8      polyclip_1.10-6     #>  [67] pillar_1.9.0        foreach_1.5.2       stats4_4.3.3        #>  [70] generics_0.1.3      vroom_1.6.5         RcppHNSW_0.6.0      #>  [73] S4Vectors_0.40.2    hms_1.1.3           ggplot2_3.5.0       #>  [76] munsell_0.5.0       scales_1.3.0        globals_0.16.3      #>  [79] class_7.3-22        glue_1.7.0          tools_4.3.3         #>  [82] data.table_1.15.2   gower_1.0.1         fs_1.6.3            #>  [85] graphlayouts_1.1.1  tidygraph_1.3.1     grid_4.3.3          #>  [88] yardstick_1.3.0     tidyr_1.3.1         RProtoBufLib_2.14.0 #>  [91] ipred_0.9-14        colorspace_2.1-0    ggforce_0.4.2       #>  [94] cli_3.6.2           textshaping_0.3.7   fansi_1.0.6         #>  [97] cytolib_2.14.1      viridisLite_0.4.2   lava_1.8.0          #> [100] dplyr_1.1.4         gtable_0.3.4        sass_0.4.8          #> [103] digest_0.6.34       BiocGenerics_0.48.1 ggrepel_0.9.5       #> [106] farver_2.1.1        memoise_2.0.1       htmltools_0.5.7     #> [109] pkgdown_2.0.7       lifecycle_1.0.4     hardhat_1.3.1       #> [112] bit64_4.0.5         MASS_7.3-60.0.1"},{"path":"https://keyes-timothy.github.io/tidytof/articles/preprocessing.html","id":"preprocessing-with-tof_preprocess","dir":"Articles","previous_headings":"","what":"Preprocessing with tof_preprocess","title":"Preprocessing","text":"Generally speaking, raw ion counts measured analyte mass cytometer (content raw FCS files obtained directly mass cytometer) need transformed CyTOF data analysis. Common preprocessing steps may include variance-stabilizing transformations - hyperbolic arcsine (arcsinh) transformation log transformation - scaling/centering, /denoising. perform standard preprocessing tasks tidytof, use tof_preprocess. tof_preprocess’s default behavior apply arcsinh transformation (cofactor 5) numeric column input tof_tibble well remove gaussian noise Fluidigm software adds ion count (noise added visualization purposes, analyses, removing recommended). example, can preprocess tidytof’s built-phenograph_data tof_tibble see first measurements change . alter tof_preprocess’s default behavior, change channel_cols argument specify columns tof_tibble transformed. Alter transform_fun argument specify vector-valued function used transform channel_cols. example, suppose want center scale numeric columns instead arcsinh-transforming : keep gaussian noise added Fluidigm software (working dataset noise), set undo_noise argument FALSE.","code":"data(phenograph_data)  # before preprocessing phenograph_data %>%     select(cd45, cd34, cd38) %>%     head() #> # A tibble: 6 × 3 #>    cd45   cd34  cd38 #>   <dbl>  <dbl> <dbl> #> 1  131.  3.23   1.51 #> 2  230. -0.582 11.4  #> 3  293.  5.20   1.84 #> 4  431.  0.363 13.3  #> # ℹ 2 more rows phenograph_data %>%     # perform preprocessing     tof_preprocess() %>%     # inspect new values     select(cd45, cd34, cd38) %>%     head() #> # A tibble: 6 × 3 #>    cd45    cd34  cd38 #>   <dbl>   <dbl> <dbl> #> 1  3.96  0.608  0.298 #> 2  4.52 -0.116  1.56  #> 3  4.76  0.909  0.360 #> 4  5.15  0.0725 1.70  #> # ℹ 2 more rows phenograph_data %>%     # preprocess     tof_preprocess(transform_fun = scale) %>%     # inspect new values     select(cd45, cd34, cd38) %>%     head() #> # A tibble: 6 × 3 #>   cd45[,1] cd34[,1] cd38[,1] #>      <dbl>    <dbl>    <dbl> #> 1   -1.40     1.01   -0.437  #> 2   -1.15    -0.911   0.0316 #> 3   -0.999    2.00   -0.422  #> 4   -0.661   -0.436   0.120  #> # ℹ 2 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/preprocessing.html","id":"postprocessing-with-tof_postprocess","dir":"Articles","previous_headings":"","what":"Postprocessing with tof_postprocess","title":"Preprocessing","text":"final note, note built-function tof_postprocess works nearly identically tof_preprocess, provides different default behavior (namely, applying reverse arcsinh transformation cofactor 5 numeric columns. See ?tof_postprocess details).","code":"print(phenograph_data) %>%     select(cd45, cd34, cd38) %>%     head() #> # A tibble: 3,000 × 25 #>   sample_name  phenograph_cluster    cd19 cd11b   cd34  cd45  cd123   cd33  cd47 #>   <chr>        <chr>                <dbl> <dbl>  <dbl> <dbl>  <dbl>  <dbl> <dbl> #> 1 H1_PhenoGra… cluster1           -0.168  29.0   3.23   131. -0.609  1.21   13.0 #> 2 H1_PhenoGra… cluster1            1.65    4.83 -0.582  230.  2.53  -0.507  12.9 #> 3 H1_PhenoGra… cluster1            2.79   36.1   5.20   293. -0.265  3.67   27.1 #> 4 H1_PhenoGra… cluster1            0.0816 48.8   0.363  431.  2.04   9.40   41.0 #> # ℹ 2,996 more rows #> # ℹ 16 more variables: cd7 <dbl>, cd44 <dbl>, cd38 <dbl>, cd3 <dbl>, #> #   cd117 <dbl>, cd64 <dbl>, cd41 <dbl>, pstat3 <dbl>, pstat5 <dbl>, #> #   pampk <dbl>, p4ebp1 <dbl>, ps6 <dbl>, pcreb <dbl>, `pzap70-syk` <dbl>, #> #   prb <dbl>, `perk1-2` <dbl> #> # A tibble: 6 × 3 #>    cd45   cd34  cd38 #>   <dbl>  <dbl> <dbl> #> 1  131.  3.23   1.51 #> 2  230. -0.582 11.4  #> 3  293.  5.20   1.84 #> 4  431.  0.363 13.3  #> # ℹ 2 more rows  # after preprocessing and post-processing, the data are the same # except that the re-added noise component is different for each value phenograph_data %>%     tof_preprocess() %>%     tof_postprocess(redo_noise = TRUE) %>%     select(cd45, cd34, cd38) %>%     head() #> # A tibble: 6 × 3 #>    cd45   cd34   cd38 #>   <dbl>  <dbl>  <dbl> #> 1  131.  3.22   0.936 #> 2  230. -0.611 10.8   #> 3  293.  4.54   1.40  #> 4  431. -0.599 12.6   #> # ℹ 2 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/preprocessing.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Preprocessing","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] dplyr_1.1.4    tidytof_0.99.0 #>  #> loaded via a namespace (and not attached): #>   [1] tidyselect_1.2.0    viridisLite_0.4.2   timeDate_4032.109   #>   [4] farver_2.1.1        viridis_0.6.5       ggraph_2.2.1        #>   [7] fastmap_1.1.1       tweenr_2.0.3        rpart_4.1.23        #>  [10] digest_0.6.34       timechange_0.3.0    lifecycle_1.0.4     #>  [13] yardstick_1.3.0     survival_3.5-8      magrittr_2.0.3      #>  [16] compiler_4.3.3      rlang_1.1.3         sass_0.4.8          #>  [19] tools_4.3.3         igraph_2.0.2        utf8_1.2.4          #>  [22] yaml_2.3.8          data.table_1.15.2   knitr_1.45          #>  [25] graphlayouts_1.1.1  withr_3.0.0         purrr_1.0.2         #>  [28] RProtoBufLib_2.14.0 BiocGenerics_0.48.1 desc_1.4.3          #>  [31] nnet_7.3-19         grid_4.3.3          polyclip_1.10-6     #>  [34] stats4_4.3.3        fansi_1.0.6         RcppHNSW_0.6.0      #>  [37] future_1.33.1       colorspace_2.1-0    ggplot2_3.5.0       #>  [40] globals_0.16.3      scales_1.3.0        iterators_1.0.14    #>  [43] MASS_7.3-60.0.1     cli_3.6.2           rmarkdown_2.26      #>  [46] ragg_1.2.7          generics_0.1.3      future.apply_1.11.1 #>  [49] tzdb_0.4.0          cachem_1.0.8        flowCore_2.14.1     #>  [52] ggforce_0.4.2       stringr_1.5.1       splines_4.3.3       #>  [55] parallel_4.3.3      matrixStats_1.2.0   vctrs_0.6.5         #>  [58] hardhat_1.3.1       glmnet_4.1-8        Matrix_1.6-5        #>  [61] jsonlite_1.8.8      cytolib_2.14.1      hms_1.1.3           #>  [64] S4Vectors_0.40.2    ggrepel_0.9.5       listenv_0.9.1       #>  [67] systemfonts_1.0.6   foreach_1.5.2       gower_1.0.1         #>  [70] tidyr_1.3.1         jquerylib_0.1.4     recipes_1.0.10      #>  [73] parallelly_1.37.1   glue_1.7.0          pkgdown_2.0.7       #>  [76] codetools_0.2-19    stringi_1.8.3       lubridate_1.9.3     #>  [79] gtable_0.3.4        shape_1.4.6.1       munsell_0.5.0       #>  [82] tibble_3.2.1        pillar_1.9.0        htmltools_0.5.7     #>  [85] ipred_0.9-14        lava_1.8.0          R6_2.5.1            #>  [88] textshaping_0.3.7   doParallel_1.0.17   tidygraph_1.3.1     #>  [91] evaluate_0.23       Biobase_2.62.0      lattice_0.22-5      #>  [94] readr_2.1.5         memoise_2.0.1       bslib_0.6.1         #>  [97] class_7.3-22        Rcpp_1.0.12         prodlim_2023.08.28  #> [100] gridExtra_2.3       xfun_0.42           fs_1.6.3            #> [103] pkgconfig_2.0.3"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"accessing-the-data-for-this-vignette","dir":"Articles","previous_headings":"","what":"Accessing the data for this vignette","title":"Quality control","text":"demonstrate use {tidytof}’s quality control verbs, use combination simulated real data vignette. Simulated data generated --fly sections , walk download real dataset section. want download dataset originally collected development PhenoGraph algorithm. data built HDCytoData package, available Bioconductor can downloaded following command: load PhenoGraph data current R session, can call function HDCytoData, provide us format {flowCore} package (called “flowSet”). convert tidy tibble, can use tidytof built-method converting flowCore objects tof_tbl’s. also add lines dplyr code clean column names perform standard arcsinh transformation. Thus, can see levine tof_tbl 265627 cells (one row) 40 pieces information cell (one column).","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE)) {     install.packages(\"BiocManager\") }  BiocManager::install(\"HDCytoData\") levine <-     HDCytoData::Levine_32dim_flowSet() |>     as_tof_tbl() |>     # a bit of data cleaning     dplyr::mutate(population_id = as.character(population_id)) |>     dplyr::rename_with(         .fn = \\(x) stringr::str_to_lower(stringr::str_remove(x, \"\\\\|.+\"))     ) |>     dplyr::mutate(dplyr::across(c(file_number, population_id), as.character)) |>     # arcsinh transformation     tof_preprocess(         channel_cols =             c(-time, -cell_length, -event_number, -file_number, -population_id)     )"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"detect-low-expression-i-e--potentially-failed-channels-with-tof_assess_channels","dir":"Articles","previous_headings":"","what":"Detect low-expression (i.e. potentially failed) channels with tof_assess_channels()","title":"Quality control","text":"data collection, might wonder channels include downstream analyses. particular, might want exclude channels positive values, situation indicates antibody may failed, signal particular channel may weak detected. , can use tof_assess_channels(), verb calculates many cells negative (.e. use-specified threshold, negative_threshold) channel flags channels user-specified proportion negative cells (negative_proportion_flag). levine dataset, look markers 97.5% cells threshold 5 ion counts: can see two channels 97.5% cells dataset 5 counts. given experiment, might expected (.e. marker expressed rare cell population) unexpected (marker expressed many cells). case, can visualize marker negative cells manually inspect (recommend flagged channels).  case, looks like small population cells slightly positive cd14, simply measurement noise/nonspecific binding antibody. user whether include cd14 downstream analyses.","code":"# convert 5 counts to asinh value with a cofactor of 5 threshold <- asinh(5 / 5)  levine |>     tof_assess_channels(         negative_threshold = threshold,         negative_proportion_flag = 0.975     ) #> # A tibble: 38 × 3 #>    channel negative_proportion flagged_channel #>    <chr>                 <dbl> <lgl>           #>  1 cd14                  0.988 TRUE            #>  2 cd133                 0.975 TRUE            #>  3 cd117                 0.969 FALSE           #>  4 cd16                  0.967 FALSE           #>  5 flt3                  0.960 FALSE           #>  6 cd15                  0.940 FALSE           #>  7 cd41                  0.923 FALSE           #>  8 cd34                  0.909 FALSE           #>  9 cd61                  0.890 FALSE           #> 10 cd33                  0.885 FALSE           #> # ℹ 28 more rows levine |>     tof_plot_cells_density(marker_col = cd14)"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"identify-time-periods-of-abnormally-low-or-high-flow-rate-during-data-acquisition-using-tof_assess_flow_rate","dir":"Articles","previous_headings":"","what":"Identify time periods of abnormally low or high flow rate during data acquisition using tof_assess_flow_rate()","title":"Quality control","text":"Large changes flow rate cytometer can impact quality signal acquired data collection: example, abnormally low flow rates can caused partial occlusions cytometer’s flow cell, leading debris air infiltration cytometer’s microfluidics system. Thus, can useful perform quality control step explicitly interrogates flow rate course cytometry experiment order flag cells collected unusually high low rates acquisition. , {tidytof} provides tof_assess_flow_rate(), function implements simplified version FlowAI’s flow rate analysis. short, relative flow rates timestep cytometry experiment calculated, outlier timepoints particularly high low flow rates (.e. beyond extreme values t-distribution across timesteps) flagged. size timesteps user-defined parameter calculation, significance level (0 1) within t-distribution determines anomalous time step’s flow rate must cells flagged. can apply tof_assess_flow_rate() levine dataset , using  result , can see last several timesteps flagged potentially low flow rates. decision include exclude cells analyses left user. group_cols argument can also used analyze flow rates samples, patients, mass cytometry barcode plates, etc. separately.","code":"levine |>     tof_assess_flow_rate(         time_col = time,         num_timesteps = 200,         # flag timepoints in which flow rates are high or low at a signicance level         # of p = 0.01         alpha_threshold = 0.01,         # plot the number of cells in each timestep, and whether or not the         # rates were flagged as too high or too low         visualize = TRUE     ) levine |>     tof_assess_flow_rate(         time_col = time,         # analyze two files in the levine dataset separately         group_cols = file_number,         alpha_threshold = 0.01,         visualize = TRUE     )"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"flag-cells-that-are-unusually-far-from-the-centroid-of-a-cluster-to-which-they-have-been-assigned-with-tof_assess_clusters_distance","dir":"Articles","previous_headings":"","what":"Flag cells that are unusually far from the centroid of a cluster to which they have been assigned with tof_assess_clusters_distance()","title":"Quality control","text":"using favorite clustering algorithm define cell subpopulations (example, using tof_cluster()), may wonder well clustering procedure worked. example, may clusters contain outliers - , cells less similar cells cluster typical. detect cells, tidytof provides tof_assess_clusters_distance() verb, computes Mahalanobis distance cell centroid cluster assigned. , computes z-score mahalanobis distances cells cluster flags cells z-score user-specified threshold. Altogether, procedure flags cells unusually far cluster centroid - .e. candidate outliers. demonstrate use tof_assess_clusters_distance() simulated data. simulate data 3 clusters, large population cells “truly” belong cluster well small population outliers cells erroneously assigned cluster. following plots visualize simulated data described :   Using dataset, see tof_assess_clusters_distance() can successfully flag majority outlier cells cluster.","code":"set.seed(2020L)  # simulate large population of cells that truly belong in their assigned cluster sim_data_base <-     dplyr::tibble(         cd45 = c(rnorm(n = 600), rnorm(n = 500, mean = -4)),         cd38 =             c(                 rnorm(n = 100, sd = 0.5),                 rnorm(n = 500, mean = -3),                 rnorm(n = 500, mean = 8)             ),         cd34 =             c(                 rnorm(n = 100, sd = 0.2, mean = -10),                 rnorm(n = 500, mean = 4),                 rnorm(n = 500, mean = 60)             ),         cd19 = c(rnorm(n = 100, sd = 0.3, mean = 10), rnorm(n = 1000)),         cluster_id = c(rep(\"a\", 100), rep(\"b\", 500), rep(\"c\", 500)),         dataset = \"non-outlier\"     )  # simulate outlier cells that do not belong in their assigned cluster sim_data_outlier <-     dplyr::tibble(         cd45 = c(rnorm(n = 10), rnorm(50, mean = 3), rnorm(n = 50, mean = -12)),         cd38 =             c(                 rnorm(n = 10, sd = 0.5),                 rnorm(n = 50, mean = -10),                 rnorm(n = 50, mean = 10)             ),         cd34 =             c(                 rnorm(n = 10, sd = 0.2, mean = -15),                 rnorm(n = 50, mean = 15),                 rnorm(n = 50, mean = 70)             ),         cd19 = c(rnorm(n = 10, sd = 0.3, mean = 19), rnorm(n = 100)),         cluster_id = c(rep(\"a\", 10), rep(\"b\", 50), rep(\"c\", 50)),         dataset = \"outlier\"     )  # bind simulated data together sim_data <- bind_rows(sim_data_base, sim_data_outlier) sim_data |>     tof_plot_cells_embedding(color_col = cluster_id) sim_data |>     tof_plot_cells_embedding(color_col = dataset) sim_data |>     tof_assess_clusters_distance(         cluster_col = cluster_id,         # flag cells with a mahalanobis distance z-score over 3         z_threshold = 3,         augment = TRUE     ) |>     # visualize result as above     dplyr::select(-dplyr::starts_with(\".mahala\"), -z_score) |>     dplyr::mutate(flagged_cell = as.character(flagged_cell)) |>     tof_plot_cells_embedding(color_col = flagged_cell) +     scale_fill_manual(values = tof_generate_palette(num_colors = 2))"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"flag-cells-whose-cluster-assignment-is-ambiguous-with-tof_assess_clusters_entropy","dir":"Articles","previous_headings":"","what":"Flag cells whose cluster assignment is ambiguous with tof_assess_clusters_entropy()","title":"Quality control","text":"may also wish evaluate clustering result based cell’s absolute distance centroid cluster assigned, based relative distances cell cluster centroids. , order confident cell’s cluster assignment, ideally want cell close centroid cluster assigned, relatively distant clusters. contrasts scenario cell might similarly close centroids 2-3 clusters, case might think cell “ambiguous” phenotype, phenotype intermediate clusters clustering algorithm identified. flag “ambiguous” clusters, {tidytof} provides tof_assess_clusters_entropy() verb. tof_assess_clusters_entropy() computes entropy L1-scaled mahalanobis distance vector (.e. mahalanobis distance cell centroids clusters dataset) - entropy low (close 0) confident cell’s cluster assignment, high (near 1) equally close multiple cluster centroids. demonstrate use function simulated data levine dataset .","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"simulated-data","dir":"Articles","previous_headings":"Flag cells whose cluster assignment is ambiguous with tof_assess_clusters_entropy()","what":"Simulated data","title":"Quality control","text":"First, simulate fake dataset 3000 cells 4 channels. simulated dataset, two well-defined clusters (“b” “c”) dispersed cluster intermediate others (“”). data visualized :  dataset, can imagine first analysis approach might involve clustering cells 2 distinct clusters. data simulated, already know number clusters small - can calculating entropy cells resulting clusters help us realize without prior knowledge? check, can use tof_assess_clusters_entropy():   plots , can see cells middle 2 k-means clusters (correspond well ground-truth clusters “b” “c” ) high entropy values, whereas cells closer one centroids low entropy values. can also see tof_assess_clusters_entropy() flags cells potentially anomalous (.e. intermediate phenotype two clusters identified) entropy values 75th percentile (user-specified parameter) entropy values dataset. user wish recluster dataset, filter anomalous cells, processing steps.  can see , expected, intermediate cluster (“”) higher entropies either distinct clusters (“b” “c”).","code":"sim_data <-     dplyr::tibble(         cd45 =             c(                 rnorm(n = 1000, sd = 2),                 rnorm(n = 1000, mean = 2),                 rnorm(n = 1000, mean = -2)             ),         cd38 =             c(                 rnorm(n = 1000, sd = 2),                 rnorm(n = 1000, mean = 2),                 rnorm(n = 1000, mean = -2)             ),         cd34 =             c(                 rnorm(n = 1000, sd = 2),                 rnorm(n = 1000, mean = 2),                 rnorm(n = 1000, mean = -2)             ),         cd19 =             c(                 rnorm(n = 1000, sd = 2),                 rnorm(n = 1000, mean = 2),                 rnorm(n = 1000, mean = -2)             ),         cluster_id = c(rep(\"a\", 1000), rep(\"b\", 1000), rep(\"c\", 1000))     ) sim_data |>     tof_reduce_dimensions(method = \"pca\") |>     tof_plot_cells_embedding(         embedding_cols = c(.pc1, .pc2),         color_col = cluster_id     ) set.seed(17L)  entropy_result <-     sim_data |>     # cluster into 2 clusters     tof_cluster(         num_clusters = 2,         method = \"kmeans\"     ) |>     # calculate the entropy of all cells     tof_assess_clusters_entropy(         cluster_col = .kmeans_cluster,         marker_cols = starts_with(\"cd\"),         entropy_quantile = 0.8,         augment = TRUE     )  # plot the clusters in PCA space entropy_result |>     select(-starts_with(\".mahala\"), -flagged_cell) |>     tof_reduce_dimensions(pca_cols = starts_with(\"cd\"), method = \"pca\") |>     tof_plot_cells_embedding(embedding_cols = c(.pc1, .pc2), color_col = .kmeans_cluster) # show the entropy values for each cell entropy_result |>     select(-starts_with(\".mahala\"), -flagged_cell) |>     tof_reduce_dimensions(pca_cols = starts_with(\"cd\"), method = \"pca\") |>     tof_plot_cells_embedding(embedding_cols = c(.pc1, .pc2), color_col = entropy) +     scale_fill_viridis_c() entropy_result |>     select(-starts_with(\".mahala\")) |>     tof_reduce_dimensions(pca_cols = starts_with(\"cd\"), method = \"pca\") |>     tof_plot_cells_embedding(embedding_cols = c(.pc1, .pc2), color_col = flagged_cell) +     scale_fill_viridis_d() entropy_result |>     ggplot(aes(x = entropy, fill = cluster_id)) +     geom_density(alpha = 0.4) +     theme_bw()"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"real-data","dir":"Articles","previous_headings":"Flag cells whose cluster assignment is ambiguous with tof_assess_clusters_entropy()","what":"Real data","title":"Quality control","text":"can also apply tof_assess_clusters_entropy() dataset derived levine data. Suppose take 5 largest clusters levine save result small_levine tof_tbl. , can perturb dataset replacing labels cells smallest cluster (cluster 9) random labels. effectively creates population cells dataset whose “true” cluster label absent. scenario, expect cells perturbed cluster relatively distant remaining clusters, whereas unperturbed cells relatively close cluster centroid (correct centroid). Thus, can test tof_assess_clusters_entropy() successfully flags cells perturbed cluster relative others: plot , can see cells cluster 9 larger entropy values cells clusters, expected.  Similarly, can see majority cells 9 successfully flagged tof_assess_clusters_entropy() using entropy quantile threshold 0.9. Conversely, cells cluster (cluster 15) flagged.","code":"clusters_to_keep <-     levine |>     dplyr::count(population_id) |>     dplyr::slice_max(order_by = n, n = 5L) |>     dplyr::arrange(n) |>     pull(population_id)  smallest_cluster <- clusters_to_keep[1] largest_cluster <- clusters_to_keep[[length(clusters_to_keep)]]  small_levine <-     levine |>     dplyr::filter(population_id %in% clusters_to_keep) # perform the perturbation small_levine <-     small_levine |>     dplyr::mutate(         new_population_id =             dplyr::if_else(                 population_id %in% smallest_cluster,                 sample(                     clusters_to_keep[-which(clusters_to_keep %in% smallest_cluster)],                     size = nrow(small_levine),                     replace = TRUE                 ),                 population_id             )     )  # perform the entropy assessment entropy_levine <-     small_levine |>     tof_assess_clusters_entropy(         cluster_col = new_population_id,         marker_cols = starts_with(\"cd\"),         augment = TRUE     ) entropy_levine |>     mutate(population_id = fct_reorder(population_id, entropy)) |>     tof_plot_cells_density(         marker_col = entropy,         group_col = population_id,         use_ggridges = TRUE,         scale = 0.1     ) +     ggplot2::theme(legend.position = \"none\") +     ggplot2::labs(x = \"Entropy\", y = \"Cluster ID\") entropy_levine |>     mutate(flagged_cell = entropy > quantile(entropy, prob = 0.9)) |>     dplyr::count(population_id, flagged_cell) |>     group_by(population_id) |>     mutate(prop = n / sum(n)) |>     ungroup() |>     dplyr::filter(flagged_cell) #> # A tibble: 2 × 4 #>   population_id flagged_cell     n   prop #>   <chr>         <lgl>        <int>  <dbl> #> 1 15            TRUE         12888 0.0798 #> 2 9             TRUE         11666 0.706"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Quality control","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats4    stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #>  [1] HDCytoData_1.22.0           flowCore_2.14.1             #>  [3] SummarizedExperiment_1.32.0 Biobase_2.62.0              #>  [5] GenomicRanges_1.54.1        GenomeInfoDb_1.38.7         #>  [7] IRanges_2.36.0              S4Vectors_0.40.2            #>  [9] MatrixGenerics_1.14.0       matrixStats_1.2.0           #> [11] ExperimentHub_2.10.0        AnnotationHub_3.10.0        #> [13] BiocFileCache_2.10.1        dbplyr_2.4.0                #> [15] BiocGenerics_0.48.1         forcats_1.0.0               #> [17] ggplot2_3.5.0               dplyr_1.1.4                 #> [19] tidytof_0.99.0              #>  #> loaded via a namespace (and not attached): #>   [1] jsonlite_1.8.8                shape_1.4.6.1                 #>   [3] magrittr_2.0.3                farver_2.1.1                  #>   [5] rmarkdown_2.26                fs_1.6.3                      #>   [7] zlibbioc_1.48.0               ragg_1.2.7                    #>   [9] vctrs_0.6.5                   memoise_2.0.1                 #>  [11] htmltools_0.5.7               S4Arrays_1.2.1                #>  [13] curl_5.2.1                    SparseArray_1.2.4             #>  [15] sass_0.4.8                    parallelly_1.37.1             #>  [17] bslib_0.6.1                   desc_1.4.3                    #>  [19] lubridate_1.9.3               cachem_1.0.8                  #>  [21] igraph_2.0.2                  mime_0.12                     #>  [23] lifecycle_1.0.4               iterators_1.0.14              #>  [25] pkgconfig_2.0.3               Matrix_1.6-5                  #>  [27] R6_2.5.1                      fastmap_1.1.1                 #>  [29] shiny_1.8.0                   GenomeInfoDbData_1.2.11       #>  [31] future_1.33.1                 digest_0.6.34                 #>  [33] colorspace_2.1-0              AnnotationDbi_1.64.1          #>  [35] textshaping_0.3.7             RSQLite_2.3.5                 #>  [37] labeling_0.4.3                filelock_1.0.3                #>  [39] cytolib_2.14.1                fansi_1.0.6                   #>  [41] yardstick_1.3.0               timechange_0.3.0              #>  [43] httr_1.4.7                    polyclip_1.10-6               #>  [45] abind_1.4-5                   compiler_4.3.3                #>  [47] bit64_4.0.5                   withr_3.0.0                   #>  [49] doParallel_1.0.17             viridis_0.6.5                 #>  [51] DBI_1.2.2                     highr_0.10                    #>  [53] ggforce_0.4.2                 MASS_7.3-60.0.1               #>  [55] lava_1.8.0                    rappdirs_0.3.3                #>  [57] DelayedArray_0.28.0           tools_4.3.3                   #>  [59] interactiveDisplayBase_1.40.0 httpuv_1.6.14                 #>  [61] future.apply_1.11.1           nnet_7.3-19                   #>  [63] glue_1.7.0                    promises_1.2.1                #>  [65] grid_4.3.3                    generics_0.1.3                #>  [67] recipes_1.0.10                gtable_0.3.4                  #>  [69] tzdb_0.4.0                    class_7.3-22                  #>  [71] tidyr_1.3.1                   data.table_1.15.2             #>  [73] hms_1.1.3                     tidygraph_1.3.1               #>  [75] utf8_1.2.4                    XVector_0.42.0                #>  [77] ggrepel_0.9.5                 BiocVersion_3.18.1            #>  [79] foreach_1.5.2                 pillar_1.9.0                  #>  [81] stringr_1.5.1                 RcppHNSW_0.6.0                #>  [83] later_1.3.2                   splines_4.3.3                 #>  [85] tweenr_2.0.3                  lattice_0.22-5                #>  [87] survival_3.5-8                bit_4.0.5                     #>  [89] RProtoBufLib_2.14.0           tidyselect_1.2.0              #>  [91] Biostrings_2.70.2             knitr_1.45                    #>  [93] gridExtra_2.3                 xfun_0.42                     #>  [95] graphlayouts_1.1.1            hardhat_1.3.1                 #>  [97] timeDate_4032.109             stringi_1.8.3                 #>  [99] yaml_2.3.8                    evaluate_0.23                 #> [101] codetools_0.2-19              ggraph_2.2.1                  #> [103] tibble_3.2.1                  BiocManager_1.30.22           #> [105] cli_3.6.2                     rpart_4.1.23                  #> [107] xtable_1.8-4                  systemfonts_1.0.6             #> [109] munsell_0.5.0                 jquerylib_0.1.4               #> [111] Rcpp_1.0.12                   globals_0.16.3                #> [113] png_0.1-8                     parallel_4.3.3                #> [115] ellipsis_0.3.2                pkgdown_2.0.7                 #> [117] gower_1.0.1                   readr_2.1.5                   #> [119] blob_1.2.4                    listenv_0.9.1                 #> [121] glmnet_4.1-8                  viridisLite_0.4.2             #> [123] ipred_0.9-14                  ggridges_0.5.6                #> [125] scales_1.3.0                  prodlim_2023.08.28            #> [127] purrr_1.0.2                   crayon_1.5.2                  #> [129] rlang_1.1.3                   KEGGREST_1.42.0"},{"path":"https://keyes-timothy.github.io/tidytof/articles/reading-and-writing-data.html","id":"accessing-the-data-for-this-vignette","dir":"Articles","previous_headings":"","what":"Accessing the data for this vignette","title":"Reading and writing data","text":"tidytof comes bundled several example mass cytometry datasets. access raw FCS CSV files containing data, use tidytof_example_data function. called arguments, tidytof_example_data return character vector naming datasets contained tidytof: details datasets contained directories isn’t particularly important, basic information follows: aml - one FCS file containing myeloid cells healthy bone marrow one FCS file containing myeloid cells AML patient bone marrow ddpr - two FCS files containing B-cell lineage cells paper mix - two FCS files different CyTOF antigen panels (one FCS file “aml” directory one “phenograph” directory) mix2 - three files different CyTOF antigen panels different file extensions (one FCS file “aml” directory two CSV files “phenograph_csv directory) phenograph - three FCS files containing AML cells paper phenograph_csv - cells “phenograph” directory, stored CSV files scaffold - three FCS files paper statistical_scaffold - three FCS files paper surgery - three FCS files paper obtain file path directory containing dataset, call tidytof_example_data one dataset names argument. example, obtain directory phenograph data, use following command:","code":"tidytof_example_data() #> [1] \"aml\"               \"ddpr\"              \"ddpr_metadata.csv\" #> [4] \"mix\"               \"mix2\"              \"phenograph\"        #> [7] \"phenograph_csv\"    \"surgery\" tidytof_example_data(\"phenograph\") #> [1] \"/home/runner/work/_temp/Library/tidytof/extdata/phenograph\""},{"path":"https://keyes-timothy.github.io/tidytof/articles/reading-and-writing-data.html","id":"reading-data-with-tof_read_data","dir":"Articles","previous_headings":"","what":"Reading Data with tof_read_data","title":"Reading and writing data","text":"Using one directories (directory containing CyTOF data local machine), can use tof_read_data read CyTOF data raw files. Acceptable formats include FCS files CSV files. Importantly, tof_read_data smart enough read single FCS/CSV files multiple FCS/CSV files depending whether first argument (path) leads single file directory files. , can use tof_read_data read FCS files “phenograph” example dataset bundled tidytof store phenograph variable. Regardless input data file type, tidytof reads data extended tibble class called tof_tbl (pronounced “tof tibble”). tof tibbles S3 class identical tbl_df, one additional attribute (“panel”). tidytof stores additional attribute tof_tbls , addition analyzing CyTOF data individual experiments, CyTOF users often want compare panels experiments find common markers compare metals associated particular markers across panels. retrieve panel information tof_tbl, use tof_get_panel: additional notes tof_tbls: tof_tbls contains one cell per row one CyTOF channel per column (provide data “tidy” format). tof_read_data adds additional column output tof_tbl encoding name file cell read (“file_name” column). tof_tbls inherit tbl_df class, methods available tibbles also available tof_tbls.","code":"phenograph <-     tidytof_example_data(\"phenograph\") %>%     tof_read_data()  phenograph %>%     class() #> [1] \"tof_tbl\"    \"tbl_df\"     \"tbl\"        \"data.frame\" phenograph %>%     tof_get_panel() #> # A tibble: 44 × 2 #>   metals      antigens    #>   <chr>       <chr>       #> 1 Time        Time        #> 2 Cell_length Cell_length #> 3 Ir191       DNA1        #> 4 Ir193       DNA2        #> # ℹ 40 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/reading-and-writing-data.html","id":"using-tibble-methods-with-tidytof-tibbles","dir":"Articles","previous_headings":"","what":"Using tibble methods with {tidytof} tibbles","title":"Reading and writing data","text":"extension tbl_df class, tof_tbls get access dplyr tidyr free. can useful performing variety common operations. example, phenograph object two columns - PhenoGraph Condition - encode categorical variables numeric codes. might interested converting types columns strings make sure don’t accidentally perform quantitative operations later. Thus, dplyr’s useful mutate method can applied phenograph convert two columns character vectors. note tof_tbl class preserved even transformations. Importantly, tof_read_data uses opinionated heuristic mine different keyword slots input FCS file(s) guess metals antigens used data acquisition. Thus, CSV files read using tof_read_data, recommended use panel_info argument provide panel manually (CSV files, unlike FCS files, provide built-metadata columns contain).","code":"phenograph <-     phenograph %>%     # mutate the input tof_tbl     mutate(         PhenoGraph = as.character(PhenoGraph),         Condition = as.character(Condition)     )  phenograph %>%     # use dplyr's select method to show     # that the columns have been changed     select(where(is.character)) #> # A tibble: 300 × 3 #>   file_name                  PhenoGraph Condition #>   <chr>                      <chr>      <chr>     #> 1 H1_PhenoGraph_cluster1.fcs 7          7         #> 2 H1_PhenoGraph_cluster1.fcs 6          6         #> 3 H1_PhenoGraph_cluster1.fcs 9          9         #> 4 H1_PhenoGraph_cluster1.fcs 2          2         #> # ℹ 296 more rows phenograph %>%     class() #> [1] \"tof_tbl\"    \"tbl_df\"     \"tbl\"        \"data.frame\" # when csv files are read, the tof_tibble's \"panel\" # attribute will be empty by default tidytof_example_data(\"phenograph_csv\") %>%     tof_read_data() %>%     tof_get_panel() #> # A tibble: 0 × 0  # to add a panel manually, provide it as a tibble # to tof_read_data phenograph_panel <-     phenograph %>%     tof_get_panel()  tidytof_example_data(\"phenograph_csv\") %>%     tof_read_data(panel_info = phenograph_panel) %>%     tof_get_panel() #> # A tibble: 44 × 2 #>   antigens    metals      #>   <chr>       <chr>       #> 1 Time        Time        #> 2 Cell_length Cell_length #> 3 DNA1        Ir191       #> 4 DNA2        Ir193       #> # ℹ 40 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/reading-and-writing-data.html","id":"writing-data-from-a-tof_tbl-to-disk","dir":"Articles","previous_headings":"","what":"Writing data from a tof_tbl to disk","title":"Reading and writing data","text":"Users may wish store CyTOF data FCS CSV files transformation, concatenation, filtering, data processing. write single-cell data tof_tbl FCS CSV files, use tof_write_data. illustrate use verb, use tidytof’s built-phenograph_data dataset. tof_write_data’s trickiest argument group_cols, argument used specify columns tof_tibble used group cells (rows tof_tibble) separate FCS CSV files. Simply put, argument allows tof_write_data create single FCS CSV file unique combination values group_cols columns specified user. example , cells grouped 3 output FCS files - one 3 clusters encoded phenograph_cluster column phenograph_data. files following names (derived values phenograph_cluster column): cluster1.fcs cluster2.fcs cluster3.fcs Note file names match distinct values group_cols column (phenograph_cluster): However, suppose wanted write multiple files cluster breaking cells two groups: express high levels pstat5 express low levels pstat5. can use dplyr::mutate create new column phenograph_data breaks cells high- low-pstat5 expression groups, add column group_cols specification: write 6 files following names (derived values phenograph_cluster expression_group). cluster1_low.fcs cluster1_high.fcs cluster2_low.fcs cluster2_high.fcs cluster3_low.fcs cluster3_high.fcs , note file names match distinct values group_cols columns (phenograph_cluster expression_group): useful feature tof_write_data automatically concatenate cells single FCS CSV files based specified group_cols regardless many unique files cells came . allows easy concatenation FCS CSV files containing data single sample acquired multiple CyTOF runs, example.","code":"data(phenograph_data)  print(phenograph_data) #> # A tibble: 3,000 × 25 #>   sample_name  phenograph_cluster    cd19 cd11b   cd34  cd45  cd123   cd33  cd47 #>   <chr>        <chr>                <dbl> <dbl>  <dbl> <dbl>  <dbl>  <dbl> <dbl> #> 1 H1_PhenoGra… cluster1           -0.168  29.0   3.23   131. -0.609  1.21   13.0 #> 2 H1_PhenoGra… cluster1            1.65    4.83 -0.582  230.  2.53  -0.507  12.9 #> 3 H1_PhenoGra… cluster1            2.79   36.1   5.20   293. -0.265  3.67   27.1 #> 4 H1_PhenoGra… cluster1            0.0816 48.8   0.363  431.  2.04   9.40   41.0 #> # ℹ 2,996 more rows #> # ℹ 16 more variables: cd7 <dbl>, cd44 <dbl>, cd38 <dbl>, cd3 <dbl>, #> #   cd117 <dbl>, cd64 <dbl>, cd41 <dbl>, pstat3 <dbl>, pstat5 <dbl>, #> #   pampk <dbl>, p4ebp1 <dbl>, ps6 <dbl>, pcreb <dbl>, `pzap70-syk` <dbl>, #> #   prb <dbl>, `perk1-2` <dbl> # when copying and pasting this code, feel free to change this path # to wherever you'd like to save your output files my_path <- file.path(\"~\", \"Desktop\", \"tidytof_vignette_files\")  phenograph_data %>%     tof_write_data(         group_cols = phenograph_cluster,         out_path = my_path,         format = \"fcs\"     ) phenograph_data %>%     distinct(phenograph_cluster) #> # A tibble: 3 × 1 #>   phenograph_cluster #>   <chr>              #> 1 cluster1           #> 2 cluster2           #> 3 cluster3 phenograph_data %>%     # create a variable representing if a cell is above or below     # the median expression level of pstat5     mutate(         expression_group = if_else(pstat5 > median(pstat5), \"high\", \"low\")     ) %>%     tof_write_data(         group_cols = c(phenograph_cluster, expression_group),         out_path = my_path,         format = \"fcs\"     ) phenograph_data %>%     mutate(         expression_group = if_else(pstat5 > median(pstat5), \"high\", \"low\")     ) %>%     distinct(phenograph_cluster, expression_group) #> # A tibble: 6 × 2 #>   phenograph_cluster expression_group #>   <chr>              <chr>            #> 1 cluster1           low              #> 2 cluster1           high             #> 3 cluster2           low              #> 4 cluster2           high             #> # ℹ 2 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/reading-and-writing-data.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Reading and writing data","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] dplyr_1.1.4    tidytof_0.99.0 #>  #> loaded via a namespace (and not attached): #>   [1] gridExtra_2.3       rlang_1.1.3         magrittr_2.0.3      #>   [4] matrixStats_1.2.0   compiler_4.3.3      systemfonts_1.0.6   #>   [7] vctrs_0.6.5         stringr_1.5.1       crayon_1.5.2        #>  [10] pkgconfig_2.0.3     shape_1.4.6.1       fastmap_1.1.1       #>  [13] ggraph_2.2.1        utf8_1.2.4          rmarkdown_2.26      #>  [16] prodlim_2023.08.28  tzdb_0.4.0          ragg_1.2.7          #>  [19] bit_4.0.5           purrr_1.0.2         xfun_0.42           #>  [22] glmnet_4.1-8        cachem_1.0.8        jsonlite_1.8.8      #>  [25] recipes_1.0.10      tweenr_2.0.3        parallel_4.3.3      #>  [28] R6_2.5.1            bslib_0.6.1         stringi_1.8.3       #>  [31] parallelly_1.37.1   rpart_4.1.23        lubridate_1.9.3     #>  [34] jquerylib_0.1.4     Rcpp_1.0.12         iterators_1.0.14    #>  [37] knitr_1.45          future.apply_1.11.1 readr_2.1.5         #>  [40] flowCore_2.14.1     Matrix_1.6-5        splines_4.3.3       #>  [43] nnet_7.3-19         igraph_2.0.2        timechange_0.3.0    #>  [46] tidyselect_1.2.0    yaml_2.3.8          viridis_0.6.5       #>  [49] timeDate_4032.109   doParallel_1.0.17   codetools_0.2-19    #>  [52] listenv_0.9.1       lattice_0.22-5      tibble_3.2.1        #>  [55] Biobase_2.62.0      withr_3.0.0         evaluate_0.23       #>  [58] future_1.33.1       desc_1.4.3          survival_3.5-8      #>  [61] polyclip_1.10-6     pillar_1.9.0        foreach_1.5.2       #>  [64] stats4_4.3.3        generics_0.1.3      vroom_1.6.5         #>  [67] RcppHNSW_0.6.0      S4Vectors_0.40.2    hms_1.1.3           #>  [70] ggplot2_3.5.0       munsell_0.5.0       scales_1.3.0        #>  [73] globals_0.16.3      class_7.3-22        glue_1.7.0          #>  [76] tools_4.3.3         data.table_1.15.2   gower_1.0.1         #>  [79] fs_1.6.3            graphlayouts_1.1.1  tidygraph_1.3.1     #>  [82] grid_4.3.3          yardstick_1.3.0     tidyr_1.3.1         #>  [85] RProtoBufLib_2.14.0 ipred_0.9-14        colorspace_2.1-0    #>  [88] ggforce_0.4.2       cli_3.6.2           textshaping_0.3.7   #>  [91] fansi_1.0.6         cytolib_2.14.1      viridisLite_0.4.2   #>  [94] lava_1.8.0          gtable_0.3.4        sass_0.4.8          #>  [97] digest_0.6.34       BiocGenerics_0.48.1 ggrepel_0.9.5       #> [100] farver_2.1.1        memoise_2.0.1       htmltools_0.5.7     #> [103] pkgdown_2.0.7       lifecycle_1.0.4     hardhat_1.3.1       #> [106] bit64_4.0.5         MASS_7.3-60.0.1"},{"path":"https://keyes-timothy.github.io/tidytof/articles/tidytof.html","id":"prerequisites","dir":"Articles","previous_headings":"","what":"Prerequisites","title":"Getting started with tidytof","text":"tidytof makes heavy use two concepts may unfamiliar R beginners. first pipe (|>), can read . second “grouping” data data.frame tibble using dplyr::group_by, can read . tidytof users also benefit relatively -depth understanding dplyr package, wonderful introductory vignette : Everything else self-explanatory beginner advanced R users, though zero background running R code, read chapter R Data Science Hadley Wickham.","code":"vignette(\"dplyr\")"},{"path":"https://keyes-timothy.github.io/tidytof/articles/tidytof.html","id":"workflow-basics","dir":"Articles","previous_headings":"","what":"Workflow basics","title":"Getting started with tidytof","text":"Broadly speaking, tidytof’s functionality organized support 3 levels analysis inherent single-cell data described : Reading, writing, preprocessing, visualizing data level individual cells Identifying describing cell subpopulations clusters Building models (inference prediction) level patients samples tidytof provides functions (“verbs”) operate levels analysis: Cell-level data: tof_read_data() reads single-cell data FCS CSV files disk tidy data frame called tof_tbl. tof_tbls represent cell row protein measurement (piece information associated given cell) column. tof_preprocess() transforms protein expression values using user-provided function (.e. log-transformation, centering, scaling) tof_downsample() reduces number cells tof_tibble via subsampling. tof_reduce_dimensions() performs dimensionality reduction (across columns) tof_write_data writes single-cell data tof_tibble back disk form FCS CSV file. Cluster-level data: tof_cluster() clusters cells using one several algorithms commonly applied high-dimensional cytometry data tof_metacluster() agglomerates clusters smaller number metaclusters tof_analyze_abundance() performs differential abundance analysis (DAA) clusters metaclusters across experimental groups tof_analyze_expression() performs differential expression analysis (DEA) clusters’ metaclusters’ marker expression levels across experimental groups tof_extract_features() computes summary statistics (mean marker expression) cluster. Also (optionally) pivots summary statistics sample-level tidy data frame row represents sample column represents cluster-level summary statistic. Sample-level data: tof_split_data() splits sample-level data training test set predictive modeling tof_create_grid() creates elastic net hyperparameter search grid model tuning tof_train_model() trains sample-level elastic net model saves tof_model object tof_predict() Applies trained tof_model new data predict sample-level outcomes tof_assess_model() calculates performance metrics trained tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/tidytof.html","id":"tidytof-verb-syntax","dir":"Articles","previous_headings":"","what":"{tidytof} verb syntax","title":"Getting started with tidytof","text":"exceptions, tidytof functions follow specific, shared syntax involves 3 types arguments always occur order. argument types follows: almost tidytof functions, first argument data frame (tibble). enables use pipe (|>) multi-step calculations, means first argument functions implicit (passed previous function using pipe). also means tidytof functions -called “single-table verbs,” exception tof_cluster_ddpr, “two-table verb” (details use tof_cluster_ddpr, see “clustering--metaclustering” vignette). second group arguments called column specifications, end suffix _col _cols. Column specifications unquoted column names tell tidytof verb columns compute particular operation. example, cluster_cols argument tof_cluster allows user specify column input data frames used perform clustering. Regardless verb requires , column specifications support tidyselect helpers follow rules tidyselection tidyverse verbs like dplyr::select() tidyr::pivot_longer(). Finally, third group arguments tidytof verb called method specifications, ’re comprised every argument isn’t input data frame column specification. Whereas column specifications represent columns used perform operation, method specifications represent details operation performed. example, tof_cluster_phenograph() function requires method specification num_neighbors, specifies many nearest neighbors used construct PhenoGraph algorithm’s k-nearest-neighbor graph. cases, tidytof sets reasonable defaults verb’s particular method specifications, workflows can also customized experimenting non-default values. following code demonstrates tidytof verb syntax looks practice, column method specifications explicitly pointed :","code":"data(ddpr_data)  set.seed(777L)  ddpr_data |>     tof_preprocess() |>     tof_cluster(         cluster_cols = starts_with(\"cd\"), # column specification         method = \"phenograph\", # method specification,     ) |>     tof_metacluster(         cluster_col = .phenograph_cluster, # column specification         num_metaclusters = 4, # method specification         method = \"kmeans\" # method specification     ) |>     tof_downsample(         group_cols = .kmeans_metacluster, # column specification         num_cells = 200, # method specification         method = \"constant\" # method specification     ) |>     tof_plot_cells_layout(         knn_cols = starts_with(\"cd\"), # column specification         color_col = .kmeans_metacluster, # column specification         num_neighbors = 7L, # method specification         node_size = 2L # method specification     )"},{"path":"https://keyes-timothy.github.io/tidytof/articles/tidytof.html","id":"pipelines","dir":"Articles","previous_headings":"","what":"Pipelines","title":"Getting started with tidytof","text":"tidytof verbs can used combination one another using pipe (|>) operator. example, multistep “pipeline” takes built-tidytof dataset performs following analytical steps: Arcsinh-transform column protein measurements (default behavior tof_preprocess verb Cluster cells based surface markers panel Downsample dataset 100 random cells picked cluster Perform dimensionality reduction downsampled dataset using tSNE Visualize clusters using low-dimensional tSNE embedding","code":"ddpr_data |>     # step 1     tof_preprocess() |>     # step 2     tof_cluster(         cluster_cols = starts_with(\"cd\"),         method = \"phenograph\",         # num_metaclusters = 4L,         seed = 2020L     ) |>     # step 3     tof_downsample(         group_cols = .phenograph_cluster,         method = \"constant\",         num_cells = 400     ) |>     # step 4     tof_reduce_dimensions(method = \"tsne\") |>     # step 5     tof_plot_cells_embedding(         embedding_cols = contains(\"tsne\"),         color_col = .phenograph_cluster     ) +     ggplot2::theme(legend.position = \"none\") #> Loading required namespace: Rtsne"},{"path":"https://keyes-timothy.github.io/tidytof/articles/tidytof.html","id":"other-tips","dir":"Articles","previous_headings":"","what":"Other tips","title":"Getting started with tidytof","text":"tidytof designed multidisciplinary team wet-lab biologists, bioinformaticians, physician-scientists analyze high-dimensional cytometry kinds single-cell data solve variety problems. result, tidytof’s high-level API designed great care mirror tidyverse - , human-centered, consistent, composable, inclusive wide userbase. Practically speaking, means things using tidytof. First, means tidytof designed quality--life features mind. example, may notice tidytof functions begin prefix tof_. intentional, allow use development environment’s code-completing software search tidytof functions easily (even can’t remember specific function name). reason, recommend using tidytof within RStudio development environment; however, many code editors predictive text functionality serves similar function. general, tidytof verbs organized way IDE’s code-completion tools also allow search (compare) related functions relative ease. (instance, tof_cluster_ prefix used clustering functions, tof_downsample_ prefix used downsampling functions). Second, means tidytof functions relatively intuitive use due shared logic - words, understand use one tidytof function, understand use others. example shared logic across tidytof functions argument group_cols, shows multiple verbs (tof_downsample, tof_cluster, tof_daa, tof_dea, tof_extract_features, tof_write_data). case, group_cols works way: accepts unquoted vector column names (specified manually using tidyselection) used group cells operation performed. idea generalizes throughout tidytof: see argument one place, behave identically (least similarly) wherever else encounter . Finally, means tidytof optimized first ease--use, performance. humans computers interact data differently, always trade-choosing data representation intuitive human user vs. choosing data representation optimized computational speed memory efficiency. design choices conflict one another, team tends err side choosing representation easy--understand users even expense small performance costs. Ultimately, means tidytof may optimal tool every high-dimensional cytometry analysis, though hopefully general framework provide users useful functionality.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/tidytof.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Getting started with tidytof","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] tidytof_0.99.0 #>  #> loaded via a namespace (and not attached): #>   [1] gridExtra_2.3       rlang_1.1.3         magrittr_2.0.3      #>   [4] matrixStats_1.2.0   compiler_4.3.3      systemfonts_1.0.6   #>   [7] vctrs_0.6.5         stringr_1.5.1       pkgconfig_2.0.3     #>  [10] shape_1.4.6.1       fastmap_1.1.1       labeling_0.4.3      #>  [13] ggraph_2.2.1        utf8_1.2.4          rmarkdown_2.26      #>  [16] prodlim_2023.08.28  tzdb_0.4.0          ragg_1.2.7          #>  [19] purrr_1.0.2         xfun_0.42           glmnet_4.1-8        #>  [22] cachem_1.0.8        jsonlite_1.8.8      recipes_1.0.10      #>  [25] highr_0.10          tweenr_2.0.3        parallel_4.3.3      #>  [28] R6_2.5.1            bslib_0.6.1         stringi_1.8.3       #>  [31] parallelly_1.37.1   rpart_4.1.23        lubridate_1.9.3     #>  [34] jquerylib_0.1.4     Rcpp_1.0.12         iterators_1.0.14    #>  [37] knitr_1.45          future.apply_1.11.1 readr_2.1.5         #>  [40] flowCore_2.14.1     Matrix_1.6-5        splines_4.3.3       #>  [43] nnet_7.3-19         igraph_2.0.2        timechange_0.3.0    #>  [46] tidyselect_1.2.0    yaml_2.3.8          viridis_0.6.5       #>  [49] timeDate_4032.109   doParallel_1.0.17   codetools_0.2-19    #>  [52] listenv_0.9.1       lattice_0.22-5      tibble_3.2.1        #>  [55] Biobase_2.62.0      withr_3.0.0         Rtsne_0.17          #>  [58] evaluate_0.23       future_1.33.1       desc_1.4.3          #>  [61] survival_3.5-8      polyclip_1.10-6     pillar_1.9.0        #>  [64] foreach_1.5.2       stats4_4.3.3        generics_0.1.3      #>  [67] RcppHNSW_0.6.0      S4Vectors_0.40.2    hms_1.1.3           #>  [70] ggplot2_3.5.0       munsell_0.5.0       scales_1.3.0        #>  [73] globals_0.16.3      class_7.3-22        glue_1.7.0          #>  [76] tools_4.3.3         data.table_1.15.2   gower_1.0.1         #>  [79] fs_1.6.3            graphlayouts_1.1.1  tidygraph_1.3.1     #>  [82] grid_4.3.3          yardstick_1.3.0     tidyr_1.3.1         #>  [85] RProtoBufLib_2.14.0 ipred_0.9-14        colorspace_2.1-0    #>  [88] ggforce_0.4.2       cli_3.6.2           textshaping_0.3.7   #>  [91] fansi_1.0.6         cytolib_2.14.1      viridisLite_0.4.2   #>  [94] lava_1.8.0          dplyr_1.1.4         gtable_0.3.4        #>  [97] sass_0.4.8          digest_0.6.34       BiocGenerics_0.48.1 #> [100] ggrepel_0.9.5       farver_2.1.1        memoise_2.0.1       #> [103] htmltools_0.5.7     pkgdown_2.0.7       lifecycle_1.0.4     #> [106] hardhat_1.3.1       MASS_7.3-60.0.1"},{"path":"https://keyes-timothy.github.io/tidytof/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Timothy Keyes. Maintainer. Kara Davis. Research team head, owner. Garry Nolan. Research team head, owner.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Keyes T (2024). tidytof: Analyze High-dimensional Cytometry Data Using Tidy Data Principles. R package version 0.99.0,  https://keyes-timothy.github.io/tidytof/, https://keyes-timothy.github.io/tidytof.","code":"@Manual{,   title = {tidytof: Analyze High-dimensional Cytometry Data Using Tidy Data Principles},   author = {Timothy Keyes},   year = {2024},   note = {R package version 0.99.0,  https://keyes-timothy.github.io/tidytof/},   url = {https://keyes-timothy.github.io/tidytof}, }"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"tidytof-a-user-friendly-framework-for-interactive-and-highly-reproducible-cytometry-data-analysis-","dir":"","previous_headings":"","what":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"tidytof R package implements open-source, integrated “grammar” single-cell data analysis high-dimensional cytometry data (.e. mass cytometry, full-spectrum flow cytometry, sequence-based cytometry). Specifically, tidytof provides easy--use pipeline handling high-dimensional cytometry data multiple levels observation - single-cell level, cell subpopulation (cluster) level, whole-sample level - automating many common data-processing tasks common “tidy data” interface. extension tidyverse ecosystem data manipulation tools R, tidytof’s functions developed internally consistent, human-centered set design principles. means using tidytof equally intuitive among scientists wide range coding experience (including beginners).","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"prerequisites","dir":"","previous_headings":"Getting started","what":"Prerequisites","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"tidytof makes heavy use two concepts R beginners may unfamiliar . first pipe (|>), can read . second “grouping” data data.frame tibble using dplyr::group_by, can read . Everything else self-explanatory beginner advanced R users, though zero background running R code, read chapter R Data Science Hadley Wickham.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"package-structure","dir":"","previous_headings":"Getting started","what":"Package structure","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"Broadly speaking, tidytof’s functionality organized support 3 levels analysis inherent single-cell data: Reading, writing, preprocessing, visualizing data level single cells Identifying describing cell subpopulations clusters Building models (inference prediction) level patients samples use tidytof levels cytometry data analysis detailed “Usage” section .","code":""},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"can install development version tidytof GitHub following command: tidytof installed, can attach current R session using following code: addition, can install load packages need vignette:","code":"if(!require(devtools)) install.packages(\"devtools\")  devtools::install_github(\"keyes-timothy/tidytof\") library(tidytof) if(!require(FlowSOM)) BiocManager::install(\"FlowSOM\") library(FlowSOM)  if(!require(tidyverse)) install.packages(\"tidyverse\") library(tidyverse)"},{"path":[]},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"reading-data-with-tof_read_data","dir":"","previous_headings":"Usage > Analyzing data at the single-cell level","what":"Reading data with tof_read_data","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"tidytof comes bundled several example mass cytometry datasets. access raw .fcs .csv files containing data, use tidytof_example_data function. called arguments, tidytof_example_data return character vector naming datasets contained tidytof: obtain file path directory containing dataset, call tidytof_example_data one dataset names argument. example, obtain directory phenograph data, use following command: Using one directories (directory containing cytometry data local machine), can use tof_read_data read cytometry data raw files. Acceptable formats include .fcs files .csv files. Importantly, tof_read_data smart enough read single .fcs/.csv files multiple .fcs/.csv files depending whether first argument (path) leads single file directory files. , can use tof_read_data read .fcs files “phenograph” example dataset bundled tidytof store phenograph variable. Regardless input format, tidytof reads data extended tibble called tof_tbl (pronounced “tof tibble”), S3 class identical tbl_df, one additional attribute (“panel”). tidytof stores additional attribute tof_tbls , addition analyzing cytometry data individual experiments, cytometry users often want compare panels experiments find common markers compare metals associated particular markers across panels. notes tof_tbls: tof_tbls contains one cell per row one cytometry channel per column (provide data “tidy” format). tof_read_data adds additional column output tof_tbl encoding name file cell read (“file_name” column). tof_tbls inherit tbl_df class, methods available tibbles also available tof_tbls. example, dplyr’s useful mutate method can applied tof_tbl named phenograph convert columns encoding phenograph cluster ID stimulation condition cell belongs character vectors (instead original numeric codes uncleaned dataset). tof_tbl class preserved even transformations. Finally, retrieve panel information tof_tbl, use tof_get_panel: Importantly, tof_read_data uses opinionated heuristic mine different keyword slots input .fcs file(s) guess metals antigens used data collection. Thus, .csv files read using tof_read_data, recommended use panel_info argument provide panel manually (.csv files, unlike .fcs files, provide built-metadata columns contain).","code":"tidytof_example_data() #>  [1] \"aml\"                  \"ddpr\"                 \"ddpr_metadata.csv\"    #>  [4] \"mix\"                  \"mix2\"                 \"phenograph\"           #>  [7] \"phenograph_csv\"       \"scaffold\"             \"statistical_scaffold\" #> [10] \"surgery\" tidytof_example_data(\"phenograph\") #> [1] \"/Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/library/tidytof/extdata/phenograph\" phenograph <-    tidytof_example_data(\"phenograph\") |>    tof_read_data()  phenograph |>    class() #> [1] \"tof_tbl\"    \"tbl_df\"     \"tbl\"        \"data.frame\" phenograph <-    phenograph |>    # mutate the input tof_tbl   mutate(     PhenoGraph = as.character(PhenoGraph),      Condition = as.character(Condition)   )  phenograph |>    # use dplyr's select method to show that the columns have been changed   select(where(is.character)) |>    head() #> # A tibble: 6 × 3 #>   file_name                  PhenoGraph Condition #>   <chr>                      <chr>      <chr>     #> 1 H1_PhenoGraph_cluster1.fcs 7          7         #> 2 H1_PhenoGraph_cluster1.fcs 6          6         #> 3 H1_PhenoGraph_cluster1.fcs 9          9         #> 4 H1_PhenoGraph_cluster1.fcs 2          2         #> 5 H1_PhenoGraph_cluster1.fcs 15         15        #> 6 H1_PhenoGraph_cluster1.fcs 12         12 phenograph |>    class() #> [1] \"tof_tbl\"    \"tbl_df\"     \"tbl\"        \"data.frame\" phenograph |>    tof_get_panel() |>    head() #> # A tibble: 6 × 2 #>   metals      antigens    #>   <chr>       <chr>       #> 1 Time        Time        #> 2 Cell_length Cell_length #> 3 Ir191       DNA1        #> 4 Ir193       DNA2        #> 5 Pd104       BC1         #> 6 Pd106       BC2"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"pre-processing-with-tof_preprocess","dir":"","previous_headings":"Usage > Analyzing data at the single-cell level","what":"Pre-processing with tof_preprocess","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"Generally, raw ion counts analyte measured mass cytometer need transformed cytometry data analysis. Common preprocessing steps may include variance-stabilizing transformations - hyperbolic arcsine (arcsinh) transformation log transformation - scaling/centering, /denoising. perform standard preprocessing tasks tidytof, use tof_preprocess. tof_preprocess’s default behavior apply arcsinh transformation (cofactor 5) numeric column input tof_tibble well remove gaussian noise Fluidigm software adds ion count (noise added visualization purposes, analyses, removing recommended). example, can preprocess phenograph tof_tibble see first measurements change . alter tof_preprocess’s default behavior, change channel_cols argument (specify columns tof_tibble transformed) transform_fun argument (specify vector-valued function used transform channel_cols). keep gaussian noise added Fluidigm software (working dataset noise), set undo_noise argument FALSE. Finally, note built-function tof_postprocess works nearly identically tof_preprocess, provides different default behavior (namely, applying reverse arcsinh transformation cofactor 5 numeric columns. See ?tof_postprocess details).","code":"# before preprocessing phenograph |>    select(`CD45|Sm154`, `CD34|Nd148`, `CD38|Er167`) |>    head() #> # A tibble: 6 × 3 #>   `CD45|Sm154` `CD34|Nd148` `CD38|Er167` #>          <dbl>        <dbl>        <dbl> #> 1        440.         0.256        18.7  #> 2        705.         1.96         41.2  #> 3        383.        -0.302         6.51 #> 4         44.4        2.74         27.2  #> 5        892.         4.08         24.5  #> 6        448.         2.69         11.1 # perform preprocessing phenograph <-    phenograph |>    tof_preprocess()  # inspect new values phenograph |>    select(`CD45|Sm154`, `CD34|Nd148`, `CD38|Er167`) |>    head() #> # A tibble: 6 × 3 #>   `CD45|Sm154` `CD34|Nd148` `CD38|Er167` #>          <dbl>        <dbl>        <dbl> #> 1         5.17       0.0512         2.03 #> 2         5.64       0.382          2.81 #> 3         5.03      -0.0603         1.08 #> 4         2.88       0.524          2.40 #> 5         5.88       0.746          2.29 #> 6         5.19       0.515          1.54"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"downsampling-with-tof_downsample","dir":"","previous_headings":"Usage > Analyzing data at the single-cell level","what":"Downsampling with tof_downsample","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"Often, cytometry experiments collect tens hundreds millions cells total, can useful downsample smaller, computationally tractable number cells - either final analysis developing code. , tidytof implements tof_downsample verb, allows downsampling using 3 methods. Using tidytof’s built-dataset phenograph_data (smaller version dataset read ), can see original size dataset 1000 cells per cluster, 3000 cells total: randomly sample 200 cells per cluster, can use tof_downsample using “constant” method: Alternatively, wanted sample 50% cells cluster, use “prop” method: finally, might also interested taking slightly different approach downsampling downsamples number cells fixed constant proportion, fixed density phenotypic space. example, following scatterplot demonstrates certain areas phenotypic density phenograph_data contain cells others along cd34/cd38 axes:  reduce number cells dataset local density around cell dataset relatively constant, can use “density” method tof_downsample:  details, check documentation 3 underlying members tof_downsample_* function family (wrapped tof_downsample): tof_downsample_constant tof_downsample_prop tof_downsample_density","code":"data(phenograph_data)  phenograph_data |>    count(phenograph_cluster) #> # A tibble: 3 × 2 #>   phenograph_cluster     n #>   <chr>              <int> #> 1 cluster1            1000 #> 2 cluster2            1000 #> 3 cluster3            1000 phenograph_data |>    # downsample    tof_downsample(     method = \"constant\",      group_cols = phenograph_cluster,      num_cells = 200   ) |>    # count the number of downsampled cells in each cluster   count(phenograph_cluster) #> # A tibble: 3 × 2 #>   phenograph_cluster     n #>   <chr>              <int> #> 1 cluster1             200 #> 2 cluster2             200 #> 3 cluster3             200 phenograph_data |>    # downsample   tof_downsample(     method = \"prop\",     group_cols = phenograph_cluster,      prop_cells = 0.5   ) |>    # count the number of downsampled cells in each cluster   count(phenograph_cluster) #> # A tibble: 3 × 2 #>   phenograph_cluster     n #>   <chr>              <int> #> 1 cluster1             500 #> 2 cluster2             500 #> 3 cluster3             500 phenograph_data |>    # preprocess all numeric columns in the dataset   tof_preprocess(undo_noise = FALSE) |>    # make a scatterplot   ggplot(aes(x = cd34, y = cd38)) +    geom_point(alpha = 0.5) +    scale_x_continuous(limits = c(NA, 1.5)) +    scale_y_continuous(limits = c(NA, 4)) +    theme_bw() phenograph_data |>    tof_preprocess(undo_noise = FALSE) |>    tof_downsample(     density_cols = c(cd34, cd38),      target_prop_cells = 0.25,      method = \"density\",    ) |>    ggplot(aes(x = cd34, y = cd38)) +    geom_point(alpha = 0.5) +    scale_x_continuous(limits = c(NA, 1.5)) +    scale_y_continuous(limits = c(NA, 4)) +    theme_bw()"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"writing-data-with-tof_write_data","dir":"","previous_headings":"Usage > Analyzing data at the single-cell level","what":"Writing data with tof_write_data","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"Finally, users may wish store single-cell data .fcs .csv files transformation, concatenation, filtering, data processing steps dimensionality reduction /clustering (see ). write single-cell data tof_tbl .fcs .csv files, use tof_write_data. tof_write_data’s trickiest argument group_cols, argument used specify columns tof_tibble used group cells (.e. rows tof_tibble) separate .fcs .csv files. Simply put, argument allows tof_write_data create single .fcs .csv file unique combination values columns specified user. example , cells grouped 3 output .fcs files - one 3 clusters encoded phenograph_cluster column phenograph_data. files following names (derived values phenograph_cluster column): cluster1.fcs cluster2.fcs cluster3.fcs However, suppose wanted write multiple files cluster breaking cells two groups: express high levels pstat5 express low levels pstat5. can use dplyr::mutate create new column phenograph_data breaks cells high- low-pstat5 expression groups, add column group_cols specification: write 6 files following names (derived values phenograph_cluster expression_group). cluster1_low.fcs cluster1_high.fcs cluster2_low.fcs cluster2_high.fcs cluster3_low.fcs cluster3_high.fcs useful feature tof_write_data automatically concatenate cells single .fcs .csv files based specified group_cols regardless many unique files cells came , allowing easy concatenation .fcs .csv files containing data single sample acquired multiple cytometry runs.","code":"# when copying and pasting this code, feel free to change this path  # to wherever you'd like to save your output files my_path <- file.path(\"~\", \"Desktop\", \"tidytof_vignette_files\")  phenograph_data |>    tof_write_data(     group_cols = phenograph_cluster,      out_path = my_path,     format = \"fcs\"   ) phenograph_data |>    # create a variable representing if a cell is above or below the median    # expression level of pstat5   mutate(expression_group = if_else(pstat5 > median(pstat5), \"high\", \"low\")) |>    tof_write_data(     group_cols = c(phenograph_cluster, expression_group),      out_path = my_path,      format = \"fcs\"   )"},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"identifying-clusters-with-tof_cluster","dir":"","previous_headings":"Usage > Analyzing data at the cluster-level","what":"Identifying clusters with tof_cluster","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"input files read tabular format preprocessed/downsampled, might interested clustering data define communities cells shared characteristics. , can use tof_cluster verb. Several clustering methods implemented tidytof, including FlowSOM, PhenoGraph, k-means, others. demonstrate, can apply FlowSOM clustering algorithm phenograph_data . Note phenograph_data contains 6000 total cells (2000 3 clusters identified original PhenoGraph publication). output tof_cluster tof_tbl identical input tibble, now addition additional column (“.flowsom_metacluster”) encodes cluster id cell input tof_tbl. Note output columns added tibble tof_tbl tidytof begin full-stop (“.”) reduce likelihood collisions existing column names. output tof_cluster tof_tbl, can use dplyr’s count method assess accuracy FlowSOM clustering compared original clustering PhenoGraph paper. , can see FlowSOM algorithm groups cells PhenoGraph cluster one another (small number mistakes per PhenoGraph cluster). change clustering algorithm tof_cluster uses, alter method flag; change columns used compute clusters, change cluster_cols flag. finally, want return tibble includes cluster labels (cluster labels added new column input tof_tbl), set augment FALSE.","code":"phenograph_clusters <-    phenograph_data |>    tof_preprocess() |>    tof_cluster(method = \"flowsom\", cluster_cols = contains(\"cd\"))  phenograph_clusters |>    select(sample_name, .flowsom_metacluster, everything()) |>    head() #> # A tibble: 6 × 26 #>   sample_name      .flowsom_metacluster phenograph_cluster    cd19 cd11b    cd34 #>   <chr>            <chr>                <chr>                <dbl> <dbl>   <dbl> #> 1 H1_PhenoGraph_c… 3                    cluster1           -0.0336 2.46   0.608  #> 2 H1_PhenoGraph_c… 7                    cluster1            0.324  0.856 -0.116  #> 3 H1_PhenoGraph_c… 3                    cluster1            0.532  2.67   0.909  #> 4 H1_PhenoGraph_c… 2                    cluster1            0.0163 2.97   0.0725 #> 5 H1_PhenoGraph_c… 4                    cluster1            0.144  2.98   0.128  #> 6 H1_PhenoGraph_c… 2                    cluster1            0.742  3.41   0.336  #> # ℹ 20 more variables: cd45 <dbl>, cd123 <dbl>, cd33 <dbl>, cd47 <dbl>, #> #   cd7 <dbl>, cd44 <dbl>, cd38 <dbl>, cd3 <dbl>, cd117 <dbl>, cd64 <dbl>, #> #   cd41 <dbl>, pstat3 <dbl>, pstat5 <dbl>, pampk <dbl>, p4ebp1 <dbl>, #> #   ps6 <dbl>, pcreb <dbl>, `pzap70-syk` <dbl>, prb <dbl>, `perk1-2` <dbl> phenograph_clusters |>    count(phenograph_cluster, .flowsom_metacluster, sort = TRUE) #> # A tibble: 24 × 3 #>    phenograph_cluster .flowsom_metacluster     n #>    <chr>              <chr>                <int> #>  1 cluster2           13                     483 #>  2 cluster3           18                     418 #>  3 cluster3           11                     300 #>  4 cluster2           20                     215 #>  5 cluster1           3                      213 #>  6 cluster3           12                     182 #>  7 cluster1           4                      177 #>  8 cluster1           1                      167 #>  9 cluster1           2                      165 #> 10 cluster2           19                     124 #> # ℹ 14 more rows # will result in a tibble with only 1 column (the cluster labels) phenograph_data |>    tof_preprocess() |>    tof_cluster(method = \"flowsom\", cluster_cols = contains(\"cd\"), augment = FALSE) |>    head() #> # A tibble: 6 × 1 #>   .flowsom_metacluster #>   <chr>                #> 1 11                   #> 2 7                    #> 3 11                   #> 4 16                   #> 5 4                    #> 6 16"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"dimensionality-reduction-with-tof_reduce_dimensions","dir":"","previous_headings":"Usage > Analyzing data at the cluster-level","what":"Dimensionality reduction with tof_reduce_dimensions()","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"clusters identified, useful tool visualizing dimensionality reduction, form unsupervised machine learning used represent high-dimensional datasets smaller, easier--visualize number dimensions. tidytof includes several algorithms commonly used biologists dimensionality reduction: Principal component analysis (PCA), t-distributed stochastic neighbor embedding (tSNE), uniform manifold approximation projection (UMAP). apply dataset, use tof_reduce_dimensions: default, tof_reduce_dimensions add reduced-dimension feature embeddings input tof_tbl return augmented tof_tbl (, tof_tbl new columns embedding dimension) result. return features embeddings , set augment FALSE (tof_cluster). Regardless method used, reduced-dimension feature embeddings can visualized using ggplot2 (graphics package):   visualizations can helpful qualitatively describing phenotypic differences clusters dataset. example, example , can see one clusters high CD11b expression, whereas others lower CD11b expression.","code":"# perform the dimensionality reduction phenograph_tsne <-    phenograph_clusters |>    tof_reduce_dimensions(method = \"tsne\")  # select only the tsne embedding columns using a tidyselect helper (contains) phenograph_tsne |>    select(contains(\"tsne\")) |>    head() #> # A tibble: 6 × 2 #>   .tsne_1 .tsne_2 #>     <dbl>   <dbl> #> 1   7.44    -5.16 #> 2   5.64    -9.25 #> 3 -10.9    -25.6  #> 4   0.781  -17.2  #> 5   3.50    -7.82 #> 6   2.82   -24.9 # plot the tsne embeddings using color to distinguish between clusters phenograph_tsne |>    ggplot(aes(x = .tsne_1, y = .tsne_2, fill = phenograph_cluster)) +    geom_point(shape = 21) +    theme_bw() +    labs(fill = NULL) # plot the tsne embeddings using color to represent CD11b expression phenograph_tsne |>    ggplot(aes(x = .tsne_1, y = .tsne_2, fill = cd11b)) +    geom_point(shape = 21) +    scale_fill_viridis_c() +   theme_bw() +    labs(fill = \"CD11b expression\")"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"differential-discovery-analysis-with-tof_analyze_abundance-and-tof_analyze_expression","dir":"","previous_headings":"Usage > Analyzing data at the cluster-level","what":"Differential discovery analysis with tof_analyze_abundance and tof_analyze_expression","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"dimensionality reduction can used visualize clustering result, many cytometry users also want use statistical tools rigorously quantify clusters(s) dataset associate particular experimental clinical variable. analyses often grouped umbrella term differential discovery analysis include comparing relative size clusters experimental conditions (differential abundance analysis; DAA) well comparing marker expression patterns clusters experimental conditions (differential expression analysis; DEA). tidytof provides tof_analyze_abundance tof_analyze_expression verbs differential abundance differential expression analyses, respectively. demonstrate use verbs, ’ll first download dataset originally collected development CITRUS algorithm. data available HDCytoData package, available Bioconductor can downloaded following command: load CITRUS data current R session, can call function HDCytoData, provide us format {flowCore} package (called “flowSet”). convert tidy tibble, can use tidytof built-method converting flowCore objects tof_tbl’s . Thus, can see citrus_data tof_tbl 172791 cells (one row) 39 pieces information cell (one column). can also extract metadata raw data join single-cell data using functions tidyverse: Thus, now sample-level information patient sample collected stimulation condition (“Basal” “BCR-XL”) sample exposed data acquisition. Finally, can join metadata single-cell tof_tbl obtain cleaned dataset. data cleaning steps, now citrus_data, tof_tbl containing cells collected 8 patients. Specifically, 2 samples taken patient: one cells’ B-cell receptors stimulated (BCR-XL) one (Basal). citrus_data, cell’s patient origin stored patient column, cell’s stimulation condition stored stimulation column. addition, population_id column stores information cluster labels applied cell using combination FlowSOM clustering manual merging (details, run ?HDCytoData::Bodenmiller_BCR_XL R console). might wonder certain clusters expand deplete within patients two stimulation conditions described - question requires differential abundance analysis (DAA). tidytof’s tof_analyze_abundance verb supports use 3 statistical approaches performing DAA: diffcyt, generalized-linear mixed modeling (GLMMs), simple t-tests. setup described uses paired design 2 experimental conditions interest (Basal vs. BCR-XL), can use paired t-test method: Based output, can see 6 8 clusters statistically different abundance two stimulation conditions. Using tidytof easy integration tidyverse packages, can use result visualize fold-changes cluster (within patient) BCR-XL condition compared Basal condition using ggplot2:  Importantly, output tof_analyze_abundance depends slightly underlying statistical method used, details can found documentation tof_analyze_abundance_* function family member: tof_analyze_abundance_diffcyt tof_analyze_abundance_glmm tof_analyze_abundance_ttest Similarly, suppose ’re interested intracellular signaling proteins change expression levels two stimulation conditions clusters. Differential Expression Analysis (DEA) can performed using tidytof’s tof_analyze_expression verb. , can use paired t-tests multiple-hypothesis correction test significant differences cluster’s expression signaling markers stimulation conditions. output tof_analyze_expression() also depends underlying test used, can see result looks relatively similar output tof_analyze_abundance(). , output tibble row represents differential expression results single cluster-marker pair - example, first row represents difference expression pS6 cluster 1 BCR-XL Basal conditions. row includes raw p-value multiple-hypothesis-corrected p-value cluster-marker pair. result can used make volcano plot visualize results cluster-marker pairs:","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE))     install.packages(\"BiocManager\")  BiocManager::install(\"HDCytoData\") citrus_raw <- HDCytoData::Bodenmiller_BCR_XL_flowSet()  citrus_data <-    citrus_raw |>    as_tof_tbl(sep = \"_\") citrus_metadata <-    tibble(     file_name = as.character(flowCore::pData(citrus_raw)[[1]]),      sample_id = 1:length(file_name),     patient = str_extract(file_name, \"patient[:digit:]\"),      stimulation = str_extract(file_name, \"(BCR-XL)|Reference\")   ) |>    mutate(     stimulation = if_else(stimulation == \"Reference\", \"Basal\", stimulation)   )  citrus_metadata |>   head() #> # A tibble: 6 × 4 #>   file_name                          sample_id patient  stimulation #>   <chr>                                  <int> <chr>    <chr>       #> 1 PBMC8_30min_patient1_BCR-XL.fcs            1 patient1 BCR-XL      #> 2 PBMC8_30min_patient1_Reference.fcs         2 patient1 Basal       #> 3 PBMC8_30min_patient2_BCR-XL.fcs            3 patient2 BCR-XL      #> 4 PBMC8_30min_patient2_Reference.fcs         4 patient2 Basal       #> 5 PBMC8_30min_patient3_BCR-XL.fcs            5 patient3 BCR-XL      #> 6 PBMC8_30min_patient3_Reference.fcs         6 patient3 Basal citrus_data <-    citrus_data |>    left_join(citrus_metadata, by = \"sample_id\") daa_result <-    citrus_data |>    tof_analyze_abundance(     cluster_col = population_id,      effect_col = stimulation,      group_cols = patient,      test_type = \"paired\",      method = \"ttest\"   )  daa_result #> # A tibble: 8 × 8 #>   population_id    p_val   p_adj significant      t    df mean_diff mean_fc #>   <chr>            <dbl>   <dbl> <chr>        <dbl> <dbl>     <dbl>   <dbl> #> 1 1             0.000924 0.00535 \"*\"         -5.48      7  -0.00743   0.644 #> 2 2             0.00623  0.0166  \"*\"         -3.86      7  -0.0156    0.674 #> 3 3             0.0235   0.0314  \"*\"         -2.88      7  -0.0638    0.849 #> 4 4             0.0235   0.0314  \"*\"          2.88      7   0.0832    1.38  #> 5 5             0.0116   0.0232  \"*\"          3.39      7   0.00246   1.08  #> 6 6             0.371    0.371   \"\"          -0.955     7  -0.0168    0.919 #> 7 7             0.00134  0.00535 \"*\"          5.14      7   0.0202    1.14  #> 8 8             0.236    0.270   \"\"          -1.30      7  -0.00228   0.901 plot_data <-    citrus_data |>    mutate(population_id = as.character(population_id)) |>   left_join(     select(daa_result, population_id, significant, mean_fc),      by = \"population_id\"   ) |>    dplyr::count(patient, stimulation, population_id, significant, mean_fc, name = \"n\") |>    group_by(patient, stimulation) |>    mutate(prop = n / sum(n)) |>    ungroup() |>    pivot_wider(     names_from = stimulation,      values_from = c(prop, n),    ) |>    mutate(     diff = `prop_BCR-XL` - prop_Basal,      fc = `prop_BCR-XL` / prop_Basal,     population_id = fct_reorder(population_id, diff),     direction =        case_when(         mean_fc > 1 & significant == \"*\" ~ \"increase\",         mean_fc < 1 & significant == \"*\" ~ \"decrease\",          TRUE ~ NA_character_       )   )  significance_data <-    plot_data |>    group_by(population_id, significant, direction) |>    summarize(diff = max(diff), fc = max(fc)) |>    ungroup()  plot_data |>    ggplot(aes(x = population_id, y = fc, fill = direction)) +    geom_violin(trim = FALSE) +   geom_hline(yintercept = 1, color = \"red\", linetype = \"dotted\", size = 0.5) +    geom_point() +    geom_text(     aes(x = population_id, y = fc, label = significant),      data = significance_data,      size = 8,      nudge_x = 0.2,     nudge_y = 0.06   ) +   scale_x_discrete(labels = function(x) str_c(\"cluster \", x)) +    scale_fill_manual(     values = c(\"decrease\" = \"#cd5241\", \"increase\" = \"#207394\"),     na.translate = FALSE   ) +   labs(     x = NULL,      y = \"Abundance fold-change (stimulated / basal)\",      fill = \"Effect\",      caption = \"Asterisks indicate significance at an adjusted p-value of 0.05\"   ) signaling_markers <-    c(     \"pNFkB_Nd142\", \"pStat5_Nd150\", \"pAkt_Sm152\", \"pStat1_Eu153\", \"pStat3_Gd158\",      \"pSlp76_Dy164\", \"pBtk_Er166\", \"pErk_Er168\", \"pS6_Yb172\", \"pZap70_Gd156\"   )  dea_result <-    citrus_data |>    tof_preprocess(channel_cols = any_of(signaling_markers)) |>    tof_analyze_expression(     cluster_col = population_id,      marker_cols = any_of(signaling_markers),      effect_col = stimulation,     group_cols = patient,      test_type = \"paired\",      method = \"ttest\"   )  dea_result |>    head() #> # A tibble: 6 × 9 #>   population_id marker   p_val   p_adj significant     t    df mean_diff mean_fc #>   <chr>         <chr>    <dbl>   <dbl> <chr>       <dbl> <dbl>     <dbl>   <dbl> #> 1 1             pS6_Y… 7.58e-8 2.12e-6 *            22.9     7     2.56    4.31  #> 2 2             pS6_Y… 1.16e-7 2.12e-6 *            21.6     7     2.13    2.49  #> 3 3             pBtk_… 1.32e-7 2.12e-6 *           -21.2     7    -0.475   0.289 #> 4 7             pBtk_… 1.18e-7 2.12e-6 *           -21.5     7    -0.518   0.286 #> 5 8             pBtk_… 1.30e-7 2.12e-6 *           -21.2     7    -0.516   0.324 #> 6 4             pBtk_… 7.85e-7 1.05e-5 *           -16.3     7    -0.462   0.296 volcano_plot <-    dea_result |>    tof_plot_clusters_volcano(     use_ggrepel = TRUE   )   volcano_plot"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"analyzing-data-at-the-patient--and-sample-level","dir":"","previous_headings":"Usage","what":"Analyzing data at the patient- and sample-level","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"addition verbs operate single-cell data directly, tidytof implements functions aggregating single-cell measurements cluster- sample-level summary statistics can analyzed using variety statistical models.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"feature-extraction-with-tof_extract_features","dir":"","previous_headings":"Usage > Analyzing data at the patient- and sample-level","what":"Feature extraction with tof_extract_features","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"addition functions analyzing visualizing cytometry data single-cell cluster levels, tidytof’s tof_extract_features verb allows users aggregate single-cell cluster-level information order summarize whole-samples (whole-patients) cells collected. features can useful visualizing differences patients samples different experimental conditions building machine learning models. understand tof_extract_features verb works, ’s easiest look subroutines (members tof_extract_* function family) independently. First, tof_extract_proportion, extracts proportion cells cluster within sample (samples defined using group_cols argument): Like members tof_extract_* function family, tof_extract_proportion() returns one row sample (defined unique combination values group_cols) one column extracted feature (, one column proportion 8 clusters citrus_data). values can also returned “long” format changing format argument: Another member function family, tof_extract_central_tendency, computes central tendency (e.g. mean median) user-specified markers cluster. tof_extract_threshold similar tof_extract_central_tendency, calculates proportion cells user-specified expression value marker instead measure central tendency: two final members tof_extract_* function family – tof_extract_emd tof_extract_jsd designed specifically comparing distributions marker expression stimulation conditions. , must given stimulation_col identifies stimulation condition cell , basal_level specifies reference (.e. unstimulated) condition within stimulation_col. additional arguments, tof_extract_emd computes Earth-mover’s distance marker’s distribution stimulation conditions (within cluster) basal condition; similarly, tof_extract_jsd computes Jensen-Shannon divergence index distributions. values ways compare different 2 distributions one another computationally expensive (also higher-resolution) simply comparing measures central tendency. Finally, tof_extract_features verb provides wrapper members function family, allowing users extract multiple features types . example, following code extracts proportion cluster, median several markers cluster, EMD basal condition stimulated condition cluster patients citrus_data.","code":"# preprocess the numeric columns in the citrus dataset citrus_data <-    citrus_data |>    mutate(cluster = str_c(\"cluster\", population_id)) |>    tof_preprocess()  citrus_data |>    tof_extract_proportion(     cluster_col = cluster,      group_cols = c(patient, stimulation)   ) |>    head() #> # A tibble: 6 × 10 #>   patient  stimulation `prop@cluster1` `prop@cluster2` `prop@cluster3` #>   <chr>    <chr>                 <dbl>           <dbl>           <dbl> #> 1 patient1 Basal                0.0190          0.0482           0.447 #> 2 patient1 BCR-XL               0.0109          0.0395           0.268 #> 3 patient2 Basal                0.0130          0.0280           0.491 #> 4 patient2 BCR-XL               0.0101          0.0143           0.358 #> 5 patient3 Basal                0.0326          0.0830           0.397 #> 6 patient3 BCR-XL               0.0200          0.0412           0.323 #> # ℹ 5 more variables: `prop@cluster4` <dbl>, `prop@cluster5` <dbl>, #> #   `prop@cluster6` <dbl>, `prop@cluster7` <dbl>, `prop@cluster8` <dbl> citrus_data |>    tof_extract_proportion(     cluster_col = cluster,      group_cols = c(patient, stimulation),      format = \"long\"   ) |>    head() #> # A tibble: 6 × 4 #>   patient  stimulation cluster     prop #>   <chr>    <chr>       <chr>      <dbl> #> 1 patient1 Basal       cluster1 0.0190  #> 2 patient1 Basal       cluster2 0.0482  #> 3 patient1 Basal       cluster3 0.447   #> 4 patient1 Basal       cluster4 0.237   #> 5 patient1 Basal       cluster5 0.00219 #> 6 patient1 Basal       cluster6 0.0759 citrus_data |>    tof_extract_central_tendency(     cluster_col = cluster,      group_cols = c(patient, stimulation),      marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),      central_tendency_function = mean   ) |>    head() #> # A tibble: 6 × 26 #>   patient  stimulation `CD45_In115@cluster1_ct` `CD4_Nd145@cluster1_ct` #>   <chr>    <chr>                          <dbl>                   <dbl> #> 1 patient1 BCR-XL                          4.80                  0.0967 #> 2 patient1 Basal                           4.68                  0.765  #> 3 patient2 BCR-XL                          5.00                 -0.0579 #> 4 patient2 Basal                           4.88                  0.808  #> 5 patient3 BCR-XL                          5.04                 -0.0432 #> 6 patient3 Basal                           4.98                  0.745  #> # ℹ 22 more variables: `CD20_Sm147@cluster1_ct` <dbl>, #> #   `CD45_In115@cluster2_ct` <dbl>, `CD4_Nd145@cluster2_ct` <dbl>, #> #   `CD20_Sm147@cluster2_ct` <dbl>, `CD45_In115@cluster3_ct` <dbl>, #> #   `CD4_Nd145@cluster3_ct` <dbl>, `CD20_Sm147@cluster3_ct` <dbl>, #> #   `CD45_In115@cluster4_ct` <dbl>, `CD4_Nd145@cluster4_ct` <dbl>, #> #   `CD20_Sm147@cluster4_ct` <dbl>, `CD45_In115@cluster5_ct` <dbl>, #> #   `CD4_Nd145@cluster5_ct` <dbl>, `CD20_Sm147@cluster5_ct` <dbl>, … citrus_data |>    tof_extract_threshold(     cluster_col = cluster,      group_cols = c(patient, stimulation),      marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),      threshold = 5   ) |>    head() #> # A tibble: 6 × 26 #>   patient  stimulation `CD45_In115@cluster1_threshold` CD4_Nd145@cluster1_thre…¹ #>   <chr>    <chr>                                 <dbl>                     <dbl> #> 1 patient1 BCR-XL                                0.516                         0 #> 2 patient1 Basal                                 0.365                         0 #> 3 patient2 BCR-XL                                0.554                         0 #> 4 patient2 Basal                                 0.452                         0 #> 5 patient3 BCR-XL                                0.547                         0 #> 6 patient3 Basal                                 0.549                         0 #> # ℹ abbreviated name: ¹​`CD4_Nd145@cluster1_threshold` #> # ℹ 22 more variables: `CD20_Sm147@cluster1_threshold` <dbl>, #> #   `CD45_In115@cluster2_threshold` <dbl>, #> #   `CD4_Nd145@cluster2_threshold` <dbl>, #> #   `CD20_Sm147@cluster2_threshold` <dbl>, #> #   `CD45_In115@cluster3_threshold` <dbl>, #> #   `CD4_Nd145@cluster3_threshold` <dbl>, … # Earth-mover's distance citrus_data |>    tof_extract_emd(     cluster_col = cluster,      group_cols = patient,      marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),      emd_col = stimulation,      reference_level = \"Basal\"   ) |>    head() #> # A tibble: 6 × 25 #>   patient  BCR-XL_CD45_In115@clu…¹ BCR-XL_CD4_Nd145@clu…² BCR-XL_CD20_Sm147@cl…³ #>   <chr>                      <dbl>                  <dbl>                  <dbl> #> 1 patient1                   0.864                   2.47                  13.0  #> 2 patient2                   1.11                    7.05                  10.8  #> 3 patient3                   0.670                   6.23                  10.5  #> 4 patient4                   2.64                    5.86                   9.90 #> 5 patient5                   0.594                   7.56                   8.13 #> 6 patient6                   0.661                   4.77                   7.97 #> # ℹ abbreviated names: ¹​`BCR-XL_CD45_In115@cluster3_emd`, #> #   ²​`BCR-XL_CD4_Nd145@cluster3_emd`, ³​`BCR-XL_CD20_Sm147@cluster3_emd` #> # ℹ 21 more variables: `BCR-XL_CD45_In115@cluster7_emd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster7_emd` <dbl>, #> #   `BCR-XL_CD20_Sm147@cluster7_emd` <dbl>, #> #   `BCR-XL_CD45_In115@cluster4_emd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster4_emd` <dbl>, … # Jensen-Shannon Divergence citrus_data |>    tof_extract_jsd(     cluster_col = cluster,      group_cols = patient,       marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),      jsd_col = stimulation,      reference_level = \"Basal\"   ) |>    head() #> # A tibble: 6 × 25 #>   patient  BCR-XL_CD45_In115@clu…¹ BCR-XL_CD4_Nd145@clu…² BCR-XL_CD20_Sm147@cl…³ #>   <chr>                      <dbl>                  <dbl>                  <dbl> #> 1 patient1                 0.0367                  0.0513                  0.347 #> 2 patient2                 0.00831                 0.168                   0.401 #> 3 patient3                 0.0104                  0.115                   0.357 #> 4 patient4                 0.0301                  0.135                   0.205 #> 5 patient5                 0.00911                 0.0789                  0.274 #> 6 patient6                 0.00972                 0.0346                  0.214 #> # ℹ abbreviated names: ¹​`BCR-XL_CD45_In115@cluster3_jsd`, #> #   ²​`BCR-XL_CD4_Nd145@cluster3_jsd`, ³​`BCR-XL_CD20_Sm147@cluster3_jsd` #> # ℹ 21 more variables: `BCR-XL_CD45_In115@cluster7_jsd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster7_jsd` <dbl>, #> #   `BCR-XL_CD20_Sm147@cluster7_jsd` <dbl>, #> #   `BCR-XL_CD45_In115@cluster4_jsd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster4_jsd` <dbl>, … citrus_data |>    tof_extract_features(     cluster_col = cluster,      group_cols = patient,      stimulation_col = stimulation,     lineage_cols = any_of(c(\"CD45_In115\", \"CD20_Sm147\", \"CD33_Nd148\")),      signaling_cols = any_of(signaling_markers),      signaling_method = \"emd\",      basal_level = \"Basal\"   ) |>    head()"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"outcomes-modeling-with-tof_model","dir":"","previous_headings":"Usage > Analyzing data at the patient- and sample-level","what":"Outcomes modeling with tof_model","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"[brief intro building predictive models might motivated .] tidytof implements several functions building predictive models using sample- patient-level data. illustrate work, first download patient-level data paper combining sample-level clinical annotations one tidytof’s built-data objects (ddpr_metadata). data processing steps result ddpr_patients tibble. numeric columns ddpr_patients represent aggregated cell population features sample (see Supplementary Table 5 paper details). non-numeric columns represent clinical metadata sample (run ?ddpr_metadata information). also preprocessing steps might want perform now save us headaches ’re fitting models later.","code":"data(ddpr_metadata)  # link for downloading the sample-level data from the Nature Medicine website data_link <-    \"https://static-content.springer.com/esm/art%3A10.1038%2Fnm.4505/MediaObjects/41591_2018_BFnm4505_MOESM3_ESM.csv\"  # downloading the data and combining it with clinical annotations ddpr_patients <-    readr::read_csv(data_link, skip = 2L, n_max = 78L, show_col_types = FALSE) |>    dplyr::rename(patient_id = Patient_ID) |>    left_join(ddpr_metadata, by = \"patient_id\") |>    dplyr::filter(!str_detect(patient_id, \"Healthy\"))  ddpr_patients |>    select(where(~ !is.numeric(.x))) |>    head() #> # A tibble: 6 × 8 #>   patient_id gender mrd_risk nci_rome_risk relapse_status type_of_relapse cohort #>   <chr>      <chr>  <chr>    <chr>         <chr>          <chr>           <chr>  #> 1 UPN1       Male   Interme… Standard      Yes            Early           Train… #> 2 UPN1-Rx    Male   Interme… Standard      Yes            Early           Train… #> 3 UPN2       Male   Interme… Standard      No             <NA>            Train… #> 4 UPN3       Female Standard Standard      No             <NA>            Train… #> 5 UPN4       Male   Standard Standard      No             <NA>            Valid… #> 6 UPN5       Female Standard High          No             <NA>            Valid… #> # ℹ 1 more variable: ddpr_risk <chr> ddpr_patients <-    ddpr_patients |>    # convert the relapse_status variable to a factor first,    # which is something we'll want for fitting the model later   # and create the time_to_event and event columns for survival modeling   mutate(     relapse_status = as.factor(relapse_status),      time_to_event = if_else(relapse_status == \"Yes\", time_to_relapse, ccr),     event = if_else(relapse_status == \"Yes\", 1, 0)   )"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"separating-the-training-and-validation-cohorts","dir":"","previous_headings":"Usage > Analyzing data at the patient- and sample-level > Outcomes modeling with tof_model","what":"Separating the training and validation cohorts","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"original DDPR paper, patients used fit model rest used assess model tuned. can separate training validation cohorts using cohort variable ddpr_patients","code":"ddpr_training <-    ddpr_patients |>    dplyr::filter(cohort == \"Training\")   ddpr_validation <-    ddpr_patients |>    dplyr::filter(cohort == \"Validation\") nrow(ddpr_training) #> [1] 49  nrow(ddpr_validation) #> [1] 12"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"building-a-classifier-using-logistic-regression","dir":"","previous_headings":"Usage > Analyzing data at the patient- and sample-level > Outcomes modeling with tof_model","what":"Building a classifier using logistic regression","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"First, can build elastic net classifier predict patients relapse patients won’t (ignoring time--event data now). , can use relapse_status column ddpr_training outcome variable: Specifically, can use tof_split_data function split cohort training test set either (“simple” split) multiple times (using either k-fold cross-validation bootstrapping). case, use 5-fold cross-validation, reading documentation tof_split_data demonstrates use methods. output tof_split_data varies depending split_method used. cross-validation, result rset object rsample package. rset objects type tibble two columns: splits - column entry rsplit object (contains single resample full dataset) id - character column entry represents name fold entry splits belongs . can inspect one resamples splits column see contain: Note can use rsample::training rsample::testing return training test obeservations resampling: , can feed training_split tof_train_model function tune logistic regression model predicts relapse_status leukemia patient. sure check tof_create_grid documentation learn make hyperparameter search grid model tuning (case, limit mixture parameter value 1, fits sparse lasso model). Also note demonstration purposes, include features come one cell population (“Population 2”) original dataset, means probably shouldn’t expect model perform well one original paper (select many features). output tof_train_model tof_model, object containing information trained model (can passed tof_predict tof_assess_model verbs). tof_model printed, information optimal hyperparamters printed, table nonzero model coefficients model. can use trained model make predictions validation data set aside earlier: can see model gets (!) predictions correct validation set set aside. can also assess model directly using tof_assess_model can make ROC curve using metrics:  can assess model validation data…","code":"# find how many of each outcome we have in our cohort ddpr_training |>    dplyr::count(relapse_status) #> # A tibble: 2 × 2 #>   relapse_status     n #>   <fct>          <int> #> 1 No                31 #> 2 Yes               18 training_split <-    ddpr_training |>    tof_split_data(     split_method = \"k-fold\",      num_cv_folds = 5,      strata = relapse_status   )  training_split #> #  5-fold cross-validation using stratification  #> # A tibble: 5 × 2 #>   splits          id    #>   <list>          <chr> #> 1 <split [38/11]> Fold1 #> 2 <split [39/10]> Fold2 #> 3 <split [39/10]> Fold3 #> 4 <split [40/9]>  Fold4 #> 5 <split [40/9]>  Fold5 my_resample <- training_split$splits[[1]]  print(my_resample) #> <Analysis/Assess/Total> #> <38/11/49>  class(my_resample) #> [1] \"vfold_split\" \"rsplit\" my_resample |>    rsample::training() |>    head() #> # A tibble: 6 × 1,854 #>   patient_id Pop_P_Pop1 CD19_Pop1 CD20_Pop1 CD24_Pop1 CD34_Pop1 CD38_Pop1 #>   <chr>           <dbl>     <dbl>     <dbl>     <dbl>     <dbl>     <dbl> #> 1 UPN1-Rx        0.0395    0.618     0.0634    0.572       2.93     0.944 #> 2 UPN2           0.139     0.0662    0.0221    0.0825      2.25     0.454 #> 3 UPN3           0.633     0.0234    0.0165    0.0327      2.25     0.226 #> 4 UPN7           0.474     0.966     0.124     1.24        2.59     0.243 #> 5 UPN8           0.951     0.958     0.161     0.556       3.18     0.556 #> 6 UPN9          15.6       0.446     0.0445    0.163       2.86     0.434 #> # ℹ 1,847 more variables: CD127_Pop1 <dbl>, CD179a_Pop1 <dbl>, #> #   CD179b_Pop1 <dbl>, IgMi_Pop1 <dbl>, IgMs_Pop1 <dbl>, TdT_Pop1 <dbl>, #> #   CD22_Pop1 <dbl>, tIkaros_Pop1 <dbl>, CD79b_Pop1 <dbl>, Ki67_Pop1 <dbl>, #> #   TSLPr_Pop1 <dbl>, RAG1_Pop1 <dbl>, CD123_Pop1 <dbl>, CD45_Pop1 <dbl>, #> #   CD10_Pop1 <dbl>, Pax5_Pop1 <dbl>, CD43_Pop1 <dbl>, CD58_Pop1 <dbl>, #> #   HLADR_Pop1 <dbl>, p4EBP1_FC_Basal_Pop1 <dbl>, pSTAT5_FC_Basal_Pop1 <dbl>, #> #   pPLCg1_2_FC_Basal_Pop1 <dbl>, pAkt_FC_Basal_Pop1 <dbl>, …  my_resample |>    rsample::testing() |>    head() #> # A tibble: 6 × 1,854 #>   patient_id Pop_P_Pop1 CD19_Pop1 CD20_Pop1 CD24_Pop1 CD34_Pop1 CD38_Pop1 #>   <chr>           <dbl>     <dbl>     <dbl>     <dbl>     <dbl>     <dbl> #> 1 UPN1          3.06       0.583   0.00449      0.164      1.94     0.416 #> 2 UPN6          5.62       0.550   0.00374      0.622      2.86     0.342 #> 3 UPN10         0.00374    0.761   0.000696     0.829      3.19     0.886 #> 4 UPN13         0.0634     0.0300  0.0219       0.109      2.34     0.314 #> 5 UPN22         3.29       1.63    0.128        0.525      3.38     0.688 #> 6 UPN22-Rx      0.0643     1.68    0.0804       1.56       3.06     0.529 #> # ℹ 1,847 more variables: CD127_Pop1 <dbl>, CD179a_Pop1 <dbl>, #> #   CD179b_Pop1 <dbl>, IgMi_Pop1 <dbl>, IgMs_Pop1 <dbl>, TdT_Pop1 <dbl>, #> #   CD22_Pop1 <dbl>, tIkaros_Pop1 <dbl>, CD79b_Pop1 <dbl>, Ki67_Pop1 <dbl>, #> #   TSLPr_Pop1 <dbl>, RAG1_Pop1 <dbl>, CD123_Pop1 <dbl>, CD45_Pop1 <dbl>, #> #   CD10_Pop1 <dbl>, Pax5_Pop1 <dbl>, CD43_Pop1 <dbl>, CD58_Pop1 <dbl>, #> #   HLADR_Pop1 <dbl>, p4EBP1_FC_Basal_Pop1 <dbl>, pSTAT5_FC_Basal_Pop1 <dbl>, #> #   pPLCg1_2_FC_Basal_Pop1 <dbl>, pAkt_FC_Basal_Pop1 <dbl>, … class_mod <-    training_split |>    tof_train_model(     predictor_cols = contains(\"Pop2\"),      response_col = relapse_status,     model_type = \"two-class\",      hyperparameter_grid = tof_create_grid(mixture_values = 1),      impute_missing_predictors = TRUE,      remove_zv_predictors = TRUE # often a smart decision   ) print(class_mod) #> A two-class `tof_model` with a mixture parameter (alpha) of 1 and a penalty parameter (lambda) of 1e-10  #> # A tibble: 25 × 2 #>    feature             coefficient #>    <chr>                     <dbl> #>  1 p4EBP1_dP_IL7_Pop2        -2.59 #>  2 CD58_Pop2                  2.23 #>  3 (Intercept)               -1.83 #>  4 pSTAT5_dP_TSLP_Pop2        1.69 #>  5 p4EBP1_FC_IL7_Pop2         1.46 #>  6 CD43_Pop2                  1.37 #>  7 HLADR_Pop2                -1.32 #>  8 pSyk_dP_TSLP_Pop2          1.08 #>  9 pErk_dP_IL7_Pop2          -1.05 #> 10 Ki67_Pop2                 -1.05 #> # ℹ 15 more rows class_predictions <-    class_mod |>    tof_predict(new_data = ddpr_validation, prediction_type = \"class\")  class_predictions |>    dplyr::mutate(     truth = ddpr_validation$relapse_status   ) #> # A tibble: 12 × 2 #>    .pred truth #>    <chr> <fct> #>  1 Yes   No    #>  2 No    No    #>  3 No    Yes   #>  4 No    No    #>  5 No    No    #>  6 Yes   Yes   #>  7 Yes   Yes   #>  8 No    No    #>  9 No    No    #> 10 No    Yes   #> 11 No    Yes   #> 12 No    Yes # calling the function with no new_data evaluates the # the nodel using its training data training_assessment <-    class_mod |>    tof_assess_model()  training_assessment #> $model_metrics #> # A tibble: 6 × 2 #>   metric                    value #>   <chr>                     <dbl> #> 1 binomial_deviance       0.0291  #> 2 misclassification_error 0       #> 3 roc_auc                 1       #> 4 mse                     0.00119 #> 5 mae                     0.0285  #> 6 accuracy                1       #>  #> $roc_curve #> # A tibble: 51 × 5 #>       .threshold specificity sensitivity   tpr   fpr #>            <dbl>       <dbl>       <dbl> <dbl> <dbl> #>  1 -Inf               0                1     1 1     #>  2    0.00000114      0                1     1 1     #>  3    0.0000955       0.0323           1     1 0.968 #>  4    0.000160        0.0645           1     1 0.935 #>  5    0.000190        0.0968           1     1 0.903 #>  6    0.000612        0.129            1     1 0.871 #>  7    0.000896        0.161            1     1 0.839 #>  8    0.00135         0.194            1     1 0.806 #>  9    0.00142         0.226            1     1 0.774 #> 10    0.00194         0.258            1     1 0.742 #> # ℹ 41 more rows #>  #> $confusion_matrix #> # A tibble: 4 × 3 #>   true_outcome predicted_outcome num_observations #>   <chr>        <chr>                        <int> #> 1 No           No                              31 #> 2 No           Yes                              0 #> 3 Yes          No                               0 #> 4 Yes          Yes                             18 class_mod |>    tof_plot_model() +    labs(subtitle = \"ROC Curve (Training data)\") validation_assessment <-    class_mod |>    tof_assess_model(new_data = ddpr_validation)  validation_assessment #> $model_metrics #> # A tibble: 6 × 2 #>   metric                  value #>   <chr>                   <dbl> #> 1 binomial_deviance       4.75  #> 2 misclassification_error 0.417 #> 3 roc_auc                 0.639 #> 4 mse                     0.759 #> 5 mae                     0.879 #> 6 accuracy                0.583 #>  #> $roc_curve #> # A tibble: 14 × 5 #>     .threshold specificity sensitivity   tpr   fpr #>          <dbl>       <dbl>       <dbl> <dbl> <dbl> #>  1 -Inf              0           1     1     1     #>  2    0.000240       0           1     1     1     #>  3    0.00105        0.167       1     1     0.833 #>  4    0.00195        0.167       0.833 0.833 0.833 #>  5    0.00230        0.333       0.833 0.833 0.667 #>  6    0.00472        0.5         0.833 0.833 0.5   #>  7    0.00618        0.667       0.833 0.833 0.333 #>  8    0.0464         0.667       0.667 0.667 0.333 #>  9    0.273          0.667       0.5   0.5   0.333 #> 10    0.286          0.667       0.333 0.333 0.333 #> 11    0.844          0.833       0.333 0.333 0.167 #> 12    0.852          0.833       0.167 0.167 0.167 #> 13    1.00           0.833       0     0     0.167 #> 14  Inf              1           0     0     0     #>  #> $confusion_matrix #> # A tibble: 4 × 3 #>   true_outcome predicted_outcome num_observations #>   <chr>        <chr>                        <int> #> 1 No           No                               5 #> 2 No           Yes                              1 #> 3 Yes          No                               4 #> 4 Yes          Yes                              2 class_mod |>    tof_plot_model(new_data = ddpr_validation) +    labs(subtitle = \"ROC Curve (Validation data)\")"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"tidytofs-design-principles-and-some-tips","dir":"","previous_headings":"","what":"{tidytof}’s Design Principles (and some tips)","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"{tidytof} designed multidisciplinary team wet-lab biologists, bioinformaticians, physician-scientists analyze cytometry kinds single-cell data solve variety problems. result, tidytof’s high-level API designed great care mirror tidyverse - , human-centered, consistent, composable, inclusive wide userbase. section, describe miscellaneous design decisions tips using tidytof may help enthusiastic user.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"id_1-use-the-tof_-prefix-to-your-advantage","dir":"","previous_headings":"{tidytof}’s Design Principles (and some tips)","what":"1. Use the tof_ prefix to your advantage.","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"may notice tidytof functions begin prefix tof_. intentional, allow use development environment’s code-completing software search functions easily (even don’t remember function name). reason, recommend using tidytof within RStudio development environment; however, many code editors predictive text functionality serves similar function. general, tidytof verbs organized way IDE’s code-completion tools also allow search (compare) related functions relative ease. (instance, tof_cluster_ prefix used clustering functions, tof_downsample_ prefix used downsampling functions).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"id_2-tidytof-functions-use-2-kinds-of-arguments","dir":"","previous_headings":"{tidytof}’s Design Principles (and some tips)","what":"2. {tidytof} functions use 2 kinds of arguments","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"tidytof functions optimized working “tidy” data form tibbles data.frames. means tidytof functions share basic design principles terms arguments work. details design principles, check Getting Started tidytof vignette","code":""},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"id_3-use-tidytof-to-write-human-readable-pipelines","dir":"","previous_headings":"{tidytof}’s Design Principles (and some tips)","what":"3. Use {tidytof} to write human-readable pipelines","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"real “magic” tidytof derives ability simplify multistep data-processing tasks simple readable chunk code. example, suppose just acquired .fcs files mass cytometer want perform following analysis: Read .fcs files R session Arcsinh-transform column protein measurements Cluster cells based surface markers panel Downsample dataset 100 random cells picked cluster Perform dimensionality reduction downsampled dataset using tSNE Visualize clusters using low-dimensional tSNE embedding using appropriate tidytof verbs step analysis, can easily write code function call corresponds exactly one step pipeline:  shown , stringing together tidytof verbs creates pipeline can read easily left--right top--bottom – means relatively easy return code later (modify , write methods section next high-impact manuscript!) , perhaps importantly, one colleagues return later want recreate analysis.","code":"input_path <- tidytof_example_data(\"phenograph\")  set.seed(0012)  input_path |>    # step 1   tof_read_data() |>    # step 2   tof_preprocess() |>    # step 3   tof_cluster(method = \"phenograph\") |>   # step 4   tof_downsample(     group_cols = .phenograph_cluster,      num_cells = 100,     method = \"constant\"    ) |>    # step 5   tof_reduce_dimensions(perplexity = 50, method = \"tsne\") |>    # step 6   tof_plot_cells_embedding(     embedding_cols = starts_with(\".tsne\"),     color_col = .phenograph_cluster   )"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"id_4-additional-resources","dir":"","previous_headings":"{tidytof}’s Design Principles (and some tips)","what":"4. Additional resources","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"tidytof built top tidyverse family R packages. result, users tidytof benefit substantially spending hours dplyr, ggplot2, tidyr package vignettes learn many useful functions packages provide. access recommended list package vignettes, run following lines R code console:","code":"# dplyr vignette(topic = \"dplyr\", package = \"dplyr\") vignette(topic = \"grouping\", package = \"dplyr\") vignette(topic = \"colwise\", package = \"dplyr\")  # ggplot2 vignette(topic = \"ggplot2-specs\", package = \"ggplot2\")  # tidyr vignette(topic = \"tidy-data\", package = \"tidyr\") vignette(topic = \"nest\", package = \"tidyr\")"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_SingleCellExperiment.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce an object into a SingleCellExperiment — as_SingleCellExperiment","title":"Coerce an object into a SingleCellExperiment — as_SingleCellExperiment","text":"Coerce object SingleCellExperiment Coerce tof_tbl SingleCellExperiment","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_SingleCellExperiment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce an object into a SingleCellExperiment — as_SingleCellExperiment","text":"","code":"as_SingleCellExperiment(x, ...)  # S3 method for tof_tbl as_SingleCellExperiment(   x,   channel_cols = where(tof_is_numeric),   reduced_dimensions_cols,   metadata_cols = where(function(.x) !tof_is_numeric(.x)),   split_reduced_dimensions = FALSE,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_SingleCellExperiment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce an object into a SingleCellExperiment — as_SingleCellExperiment","text":"x tof_tbl ... Unused. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. nothing specified, default numeric columns. reduced_dimensions_cols Unquoted column names representing columns contain dimensionality reduction embeddings, tSNE UMAP embeddings. Supports tidyselect helpers. metadata_cols Unquoted column names representing columns contain metadata samples cell collected. nothing specified, default non-numeric columns. split_reduced_dimensions boolean value indicating whether dimensionality results x split separate slots resulting SingleCellExperiment. FALSE (default), split performed reducedDims slot result single entry (\"tidytof_reduced_dimensions\"). TRUE, split performed reducedDims slot result 1-4 entries depending dimensionality reduction results present x (\"tidytof_pca\", \"tidytof_tsne\", \"tidytof_umap\", \"tidytof_reduced_dimensions\"). Note \"tidytof_reduced_dimensions\" include dimensionality reduction results named according tidytof's pca, umap, tsne conventions.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_SingleCellExperiment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce an object into a SingleCellExperiment — as_SingleCellExperiment","text":"SingleCellExperiment SingleCellExperiment.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_SingleCellExperiment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce an object into a SingleCellExperiment — as_SingleCellExperiment","text":"","code":"NULL #> NULL  NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce an object into a flowFrame — as_flowFrame","title":"Coerce an object into a flowFrame — as_flowFrame","text":"Coerce object flowFrame Coerce tof_tbl flowFrame","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowFrame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce an object into a flowFrame — as_flowFrame","text":"","code":"as_flowFrame(x, ...)  # S3 method for tof_tbl as_flowFrame(x, ...)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowFrame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce an object into a flowFrame — as_flowFrame","text":"x tof_tbl. ... Unused.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowFrame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce an object into a flowFrame — as_flowFrame","text":"flowFrame flowFrame. Note non-numeric columns `x` removed.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowFrame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce an object into a flowFrame — as_flowFrame","text":"","code":"NULL #> NULL  NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce an object into a flowSet — as_flowSet","title":"Coerce an object into a flowSet — as_flowSet","text":"Coerce object flowSet Coerce tof_tbl flowSet","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce an object into a flowSet — as_flowSet","text":"","code":"as_flowSet(x, ...)  # S3 method for tof_tbl as_flowSet(x, group_cols, ...)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce an object into a flowSet — as_flowSet","text":"x tof_tbl. ... Unused. group_cols Unquoted names columns `x` used group cells separate flowFrames. Supports tidyselect helpers. Defaults NULL (cells written single flowFrame).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce an object into a flowSet — as_flowSet","text":"flowSet flowSet. Note non-numeric columns `x` removed.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowSet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce an object into a flowSet — as_flowSet","text":"","code":"NULL #> NULL  NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_seurat.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce an object into a SeuratObject — as_seurat","title":"Coerce an object into a SeuratObject — as_seurat","text":"Coerce object SeuratObject Coerce tof_tbl SeuratObject","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_seurat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce an object into a SeuratObject — as_seurat","text":"","code":"as_seurat(x, ...)  # S3 method for tof_tbl as_seurat(   x,   channel_cols = where(tof_is_numeric),   reduced_dimensions_cols,   metadata_cols = where(function(.x) !tof_is_numeric(.x)),   split_reduced_dimensions = FALSE,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_seurat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce an object into a SeuratObject — as_seurat","text":"x tof_tbl ... Unused. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. nothing specified, default numeric columns. reduced_dimensions_cols Unquoted column names representing columns contain dimensionality reduction embeddings, tSNE UMAP embeddings. Supports tidyselect helpers. metadata_cols Unquoted column names representing columns contain metadata samples cell collected. nothing specified, default non-numeric columns. split_reduced_dimensions boolean value indicating whether dimensionality results x split separate slots resulting SingleCellExperiment. FALSE (default), split performed reducedDims slot result single entry (\"tidytof_reduced_dimensions\"). TRUE, split performed reducedDims slot result 1-4 entries depending dimensionality reduction results present x (\"tidytof_pca\", \"tidytof_tsne\", \"tidytof_umap\", \"tidytof_reduced_dimensions\"). Note \"tidytof_reduced_dimensions\" include dimensionality reduction results named according tidytof's pca, umap, tsne conventions.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_seurat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce an object into a SeuratObject — as_seurat","text":"SeuratObject SeuratObject.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_seurat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce an object into a SeuratObject — as_seurat","text":"","code":"NULL #> NULL  NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.flowSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an object into a tof_tbl — as_tof_tbl.flowSet","title":"Convert an object into a tof_tbl — as_tof_tbl.flowSet","text":"Convert object tof_tbl","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.flowSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an object into a tof_tbl — as_tof_tbl.flowSet","text":"","code":"# S3 method for flowSet as_tof_tbl(flow_data, sep = \"|\")"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.flowSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an object into a tof_tbl — as_tof_tbl.flowSet","text":"flow_data FlowSet sep string use separate antigen name associated metal column names output tibble. Defaults \"|\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.flowSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert an object into a tof_tbl — as_tof_tbl.flowSet","text":"`tof_tbl`","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce flowFrames or flowSets into tof_tbl's. — as_tof_tbl","title":"Coerce flowFrames or flowSets into tof_tbl's. — as_tof_tbl","text":"Coerce flowFrames flowSets tof_tbl's.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce flowFrames or flowSets into tof_tbl's. — as_tof_tbl","text":"","code":"as_tof_tbl(flow_data, sep = \"|\")"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce flowFrames or flowSets into tof_tbl's. — as_tof_tbl","text":"flow_data flowFrame flowSet sep string indicating symbol used separate antigen names metal names columns output tof_tbl.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce flowFrames or flowSets into tof_tbl's. — as_tof_tbl","text":"tof_tbl.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce flowFrames or flowSets into tof_tbl's. — as_tof_tbl","text":"","code":"input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]]  input_flowframe <- flowCore::read.FCS(input_file)  tof_tibble <- as_tof_tbl(input_flowframe)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/cosine_similarity.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the cosine similarity between two vectors — cosine_similarity","title":"Find the cosine similarity between two vectors — cosine_similarity","text":"Find cosine similarity two vectors","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/cosine_similarity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the cosine similarity between two vectors — cosine_similarity","text":"","code":"cosine_similarity(x, y)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/cosine_similarity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the cosine similarity between two vectors — cosine_similarity","text":"x numeric vector y numeric vector","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/cosine_similarity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the cosine similarity between two vectors — cosine_similarity","text":"scalar value representing cosine similarity x y","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_data.html","id":null,"dir":"Reference","previous_headings":"","what":"CyTOF data from two samples: 5,000 B-cell lineage cells from a healthy\npatient and 5,000 B-cell lineage cells from a B-cell precursor Acute\nLymphoblastic Leukemia (BCP-ALL) patient. — ddpr_data","title":"CyTOF data from two samples: 5,000 B-cell lineage cells from a healthy\npatient and 5,000 B-cell lineage cells from a B-cell precursor Acute\nLymphoblastic Leukemia (BCP-ALL) patient. — ddpr_data","text":"dataset containing CyTOF measurements immune cells originally studied following paper:   Good Z, Sarno J, et al. Single-cell developmental classification B cell precursor acute lymphoblastic leukemia diagnosis reveals predictors relapse. Nat Med. 2018 May;24(4):474-483. doi: 10.1038/nm.4505. Epub 2018 Mar 5. PMID: 29505032; PMCID: PMC5953207.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CyTOF data from two samples: 5,000 B-cell lineage cells from a healthy\npatient and 5,000 B-cell lineage cells from a B-cell precursor Acute\nLymphoblastic Leukemia (BCP-ALL) patient. — ddpr_data","text":"","code":"data(ddpr_data)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"CyTOF data from two samples: 5,000 B-cell lineage cells from a healthy\npatient and 5,000 B-cell lineage cells from a B-cell precursor Acute\nLymphoblastic Leukemia (BCP-ALL) patient. — ddpr_data","text":"data frame 10000 rows 24 variables: sample_name name sample data read cd45 CyTOF measurement raw ion counts cd19 CyTOF measurement raw ion counts cd22 CyTOF measurement raw ion counts cd79b CyTOF measurement raw ion counts cd20 CyTOF measurement raw ion counts cd34 CyTOF measurement raw ion counts cd123 CyTOF measurement raw ion counts cd10 CyTOF measurement raw ion counts cd24 CyTOF measurement raw ion counts cd127 CyTOF measurement raw ion counts cd43 CyTOF measurement raw ion counts cd38 CyTOF measurement raw ion counts cd58 CyTOF measurement raw ion counts psyk CyTOF measurement raw ion counts p4ebp1 CyTOF measurement raw ion counts pstat5 CyTOF measurement raw ion counts pakt CyTOF measurement raw ion counts ps6 CyTOF measurement raw ion counts perk CyTOF measurement raw ion counts pcreb CyTOF measurement raw ion counts","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"CyTOF data from two samples: 5,000 B-cell lineage cells from a healthy\npatient and 5,000 B-cell lineage cells from a B-cell precursor Acute\nLymphoblastic Leukemia (BCP-ALL) patient. — ddpr_data","text":"https://github.com/kara-davis-lab/DDPR","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CyTOF data from two samples: 5,000 B-cell lineage cells from a healthy\npatient and 5,000 B-cell lineage cells from a B-cell precursor Acute\nLymphoblastic Leukemia (BCP-ALL) patient. — ddpr_data","text":"data.frame","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Clinical metadata for each patient sample in Good & Sarno et al. (2018). — ddpr_metadata","title":"Clinical metadata for each patient sample in Good & Sarno et al. (2018). — ddpr_metadata","text":"dataset containing patient-level clinical metadata samples originally studied following paper:  Good Z, Sarno J, et al. Single-cell developmental classification B cell precursor acute lymphoblastic leukemia diagnosis reveals predictors relapse. Nat Med. 2018 May;24(4):474-483. doi: 10.1038/nm.4505. Epub 2018 Mar 5. PMID: 29505032; PMCID: PMC5953207.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clinical metadata for each patient sample in Good & Sarno et al. (2018). — ddpr_metadata","text":"","code":"data(ddpr_metadata)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_metadata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Clinical metadata for each patient sample in Good & Sarno et al. (2018). — ddpr_metadata","text":"data frame 10000 rows 12 variables: patient_id Name sample data read gender Gender patient sample collected age_at_diagnosis Age (years) patient sample collected wbc_count diagnostic White Blood Cell (WBC) count patient sample collected mrd_risk Risk stratification category patient using minimal residual disease (MRD) criteria nci_rome_risk Risk stratification category patient using National Cancer Institute (NCI) criteria relapse_status string representing whether patient relapsed time_to_relapse time (days) took patient relapse. Patients relapse value NA type_of_relapse string representing timing relapse patient.   \"early\" relapses occurred less 18 months diagnosis;   \"Early\" relapses occurred 18 months 32 months diagnosis;   \"Late\" relapses occurred later 32 months diagnosis. ccr number documented days continuous complete remission (CCR) patients relapse. patients relapsed value NA. cohort string representing sample used \"Training\" \"Validation\" cohort original study ddpr_risk risk category (\"Low\" \"High\") assigned sample using original paper's risk-stratification algorithm","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_metadata.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Clinical metadata for each patient sample in Good & Sarno et al. (2018). — ddpr_metadata","text":"Good Z, Sarno J, et al. Single-cell developmental classification B cell precursor acute lymphoblastic leukemia diagnosis reveals predictors relapse. Nat Med. 2018 May;24(4):474-483. doi: 10.1038/nm.4505. Epub 2018 Mar 5. PMID: 29505032; PMCID: PMC5953207. Supplementary Table 1.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clinical metadata for each patient sample in Good & Sarno et al. (2018). — ddpr_metadata","text":"data.frame","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/dot.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the dot product between two vectors. — dot","title":"Find the dot product between two vectors. — dot","text":"Find dot product two vectors.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/dot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the dot product between two vectors. — dot","text":"","code":"dot(x, y)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/dot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the dot product between two vectors. — dot","text":"x numeric vector. y numeric vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/dot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the dot product between two vectors. — dot","text":"dot product x y.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/get_extension.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the extension for a file — get_extension","title":"Find the extension for a file — get_extension","text":"Find extension file","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/get_extension.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the extension for a file — get_extension","text":"","code":"get_extension(filename)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/get_extension.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the extension for a file — get_extension","text":"filename string representing name file local directory","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/get_extension.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the extension for a file — get_extension","text":"file extension `filename`","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/l2_normalize.html","id":null,"dir":"Reference","previous_headings":"","what":"L2 normalize an input vector x to a length of 1 — l2_normalize","title":"L2 normalize an input vector x to a length of 1 — l2_normalize","text":"L2 normalize input vector x length 1","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/l2_normalize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"L2 normalize an input vector x to a length of 1 — l2_normalize","text":"","code":"l2_normalize(x)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/l2_normalize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"L2 normalize an input vector x to a length of 1 — l2_normalize","text":"x numeric vector","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/l2_normalize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"L2 normalize an input vector x to a length of 1 — l2_normalize","text":"vector length length(x) magnitude 1","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/magnitude.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the magnitude of a vector. — magnitude","title":"Find the magnitude of a vector. — magnitude","text":"Find magnitude vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/magnitude.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the magnitude of a vector. — magnitude","text":"","code":"magnitude(x)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/magnitude.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the magnitude of a vector. — magnitude","text":"x numeric vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/magnitude.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the magnitude of a vector. — magnitude","text":"scalar value (magnitude x).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/make_flowcore_annotated_data_frame.html","id":null,"dir":"Reference","previous_headings":"","what":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","title":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","text":"Make AnnotatedDataFrame needed flowFrame class","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/make_flowcore_annotated_data_frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","text":"","code":"make_flowcore_annotated_data_frame(maxes_and_mins)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/make_flowcore_annotated_data_frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","text":"maxes_and_mins data.frame containing information max min values channel saved flowFrame.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/make_flowcore_annotated_data_frame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","text":"AnnotatedDataFrame.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/make_flowcore_annotated_data_frame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/metal_masterlist.html","id":null,"dir":"Reference","previous_headings":"","what":"A character vector of metal name patterns supported by tidytof. — metal_masterlist","title":"A character vector of metal name patterns supported by tidytof. — metal_masterlist","text":"character vector used `tof_read_fcs` `tof_read_data` detect parse CyTOF metals correspond channel input .fcs file.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/metal_masterlist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A character vector of metal name patterns supported by tidytof. — metal_masterlist","text":"","code":"data(metal_masterlist)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/metal_masterlist.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A character vector of metal name patterns supported by tidytof. — metal_masterlist","text":"character vector entry pattern tidytof searches every CyTOF channel input .fcs files. patterns amalgamate example .fcs files sampled studies linked .","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/metal_masterlist.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"A character vector of metal name patterns supported by tidytof. — metal_masterlist","text":"https://github.com/kara-davis-lab/DDPR https://cytobank.org/nolanlab/reports/Levine2015.html https://cytobank.org/nolanlab/reports/Spitzer2015.html https://cytobank.org/nolanlab/reports/Spitzer2017.html https://community.cytobank.org/cytobank/projects/609","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/metal_masterlist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A character vector of metal name patterns supported by tidytof. — metal_masterlist","text":"named character vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor for a tof_model. — new_tof_model","title":"Constructor for a tof_model. — new_tof_model","text":"Constructor tof_model.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor for a tof_model. — new_tof_model","text":"","code":"new_tof_model(   model,   recipe,   penalty,   mixture,   model_type = c(\"linear\", \"two-class\", \"multiclass\", \"survival\"),   outcome_colnames,   training_data )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor for a tof_model. — new_tof_model","text":"model glmnet model. recipe prepped recipe object. penalty double indicating lambda value used within glmnet path. mixture double indicating alpha value used fit glmnet model. model_type string indicating type glmnet model fit. outcome_colnames training_data ","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructor for a tof_model. — new_tof_model","text":"`tof_model`, S3 class includes trained glmnet model recipe used perform associated preprocessing.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor for a tof_tibble. — new_tof_tibble","title":"Constructor for a tof_tibble. — new_tof_tibble","text":"Constructor tof_tibble.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor for a tof_tibble. — new_tof_tibble","text":"","code":"new_tof_tibble(x = dplyr::tibble(), panel = dplyr::tibble())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor for a tof_tibble. — new_tof_tibble","text":"x data.frame tibble containing single-cell mass cytometry data rows cells columns CyTOF measurements. panel data.frame tibble containing information panel mass cytometry data x.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_tibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructor for a tof_tibble. — new_tof_tibble","text":"`tof_tbl`, tibble extension tracks attributes useful CyTOF data analysis.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/phenograph_data.html","id":null,"dir":"Reference","previous_headings":"","what":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","title":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","text":"dataset containing CyTOF measurements healthy control cells originally studied following paper:   Levine JH, Simonds EF, et al. Data-Driven Phenotypic Dissection AML Reveals Progenitor-like Cells Correlate Prognosis. Cell. 2015 Jul 2;162(1):184-97. doi: 10.1016/j.cell.2015.05.047. Epub 2015 Jun 18. PMID: 26095251; PMCID: PMC4508757.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/phenograph_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","text":"","code":"data(phenograph_data)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/phenograph_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","text":"data frame 6000 rows 26 variables: sample_name Name sample data read phenograph_cluster Numeric ID cluster assignment row cd19 CyTOF measurement raw ion counts cd11b CyTOF measurement raw ion counts cd34 CyTOF measurement raw ion counts cd45 CyTOF measurement raw ion counts cd123 CyTOF measurement raw ion counts cd33 CyTOF measurement raw ion counts cd47 CyTOF measurement raw ion counts cd7 CyTOF measurement raw ion counts cd44 CyTOF measurement raw ion counts cd38 CyTOF measurement raw ion counts cd3 CyTOF measurement raw ion counts cd117 CyTOF measurement raw ion counts cd64 CyTOF measurement raw ion counts cd41 CyTOF measurement raw ion counts pstat3 CyTOF measurement raw ion counts pstat5 CyTOF measurement raw ion counts pampk CyTOF measurement raw ion counts p4ebp1 CyTOF measurement raw ion counts ps6 CyTOF measurement raw ion counts pcreb CyTOF measurement raw ion counts pzap70-syk CyTOF measurement raw ion counts prb CyTOF measurement raw ion counts perk1-2 CyTOF measurement raw ion counts","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/phenograph_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","text":"https://cytobank.org/nolanlab/reports/Levine2015.html","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/phenograph_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","text":"data.frame","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/phenograph_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","text":"2000 cells 3 clusters identified original paper sampled.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. dplyr %>% rlang :=, .data tidyselect all_of, any_of, contains, ends_with, everything, last_col, matches, num_range, starts_with","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/rev_asinh.html","id":null,"dir":"Reference","previous_headings":"","what":"Reverses arcsinh transformation with cofactor `scale_factor` and a\nshift of `shift_factor`. — rev_asinh","title":"Reverses arcsinh transformation with cofactor `scale_factor` and a\nshift of `shift_factor`. — rev_asinh","text":"Reverses arcsinh transformation cofactor `scale_factor` shift `shift_factor`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/rev_asinh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reverses arcsinh transformation with cofactor `scale_factor` and a\nshift of `shift_factor`. — rev_asinh","text":"","code":"rev_asinh(x, shift_factor, scale_factor)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/rev_asinh.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reverses arcsinh transformation with cofactor `scale_factor` and a\nshift of `shift_factor`. — rev_asinh","text":"x numeric vector. shift_factor scalar value `` following equation used transform high-dimensional cytometry raw data ion counts using hyperbolic arcsinh function:    `new_x <- asinh(+ b * x)`. scale_factor scalar value `b` following equation used transform high-dimensional cytometry raw data ion counts using hyperbolic arcsinh function:    `new_x <- asinh(+ b * x)`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/rev_asinh.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reverses arcsinh transformation with cofactor `scale_factor` and a\nshift of `shift_factor`. — rev_asinh","text":"numeric vector undergoing reverse arcsinh transformation","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/rev_asinh.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reverses arcsinh transformation with cofactor `scale_factor` and a\nshift of `shift_factor`. — rev_asinh","text":"","code":"shift_factor <- 0 scale_factor <- 1 / 5  input_value <- 20 asinh_value <- asinh(shift_factor + input_value * scale_factor)  restored_value <- rev_asinh(asinh_value, shift_factor, scale_factor)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tidytof_example_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get paths to tidytof example data — tidytof_example_data","title":"Get paths to tidytof example data — tidytof_example_data","text":"tidytof comes bundled number sample .fcs files inst/extdata directory. function makes easy access.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tidytof_example_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get paths to tidytof example data — tidytof_example_data","text":"","code":"tidytof_example_data(dataset_name = NULL)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tidytof_example_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get paths to tidytof example data — tidytof_example_data","text":"dataset_name Name dataset want access. NULL, names datasets (different study) listed.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tidytof_example_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get paths to tidytof example data — tidytof_example_data","text":"character vector file paths requested .fcs files located. `dataset_name` NULL, character vector dataset names (can used values `dataset_name`) returned instead.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tidytof_example_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get paths to tidytof example data — tidytof_example_data","text":"","code":"tidytof_example_data() #> [1] \"aml\"               \"ddpr\"              \"ddpr_metadata.csv\" #> [4] \"mix\"               \"mix2\"              \"phenograph\"        #> [7] \"phenograph_csv\"    \"surgery\"           tidytof_example_data(dataset_name = \"phenograph\") #> [1] \"/home/runner/work/_temp/Library/tidytof/extdata/phenograph\""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Differential Abundance Analysis (DAA) on high-dimensional cytometry data — tof_analyze_abundance","title":"Perform Differential Abundance Analysis (DAA) on high-dimensional cytometry data — tof_analyze_abundance","text":"function performs differential abundance analysis cell clusters contained within `tof_tbl` using one three methods (\"diffcyt\", \"glmm\", \"ttest\"). wraps members `tof_analyze_abundance_*` function family: tof_analyze_abundance_diffcyt, tof_analyze_abundance_glmm, tof_analyze_abundance_ttest.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Differential Abundance Analysis (DAA) on high-dimensional cytometry data — tof_analyze_abundance","text":"","code":"tof_analyze_abundance(tof_tibble, method = c(\"diffcyt\", \"glmm\", \"ttest\"), ...)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Differential Abundance Analysis (DAA) on high-dimensional cytometry data — tof_analyze_abundance","text":"tof_tibble `tof_tbl` `tibble`. method string indicating statistical method used. Valid values include \"diffcyt\", \"glmm\", \"ttest\". ... Additional arguments pass onto `tof_analyze_abundance_*` function family member corresponding chosen method.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform Differential Abundance Analysis (DAA) on high-dimensional cytometry data — tof_analyze_abundance","text":"tibble nested tibble containing differential abundance results chosen method. See tof_analyze_abundance_diffcyt, tof_analyze_abundance_glmm, tof_analyze_abundance_ttest details.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform Differential Abundance Analysis (DAA) on high-dimensional cytometry data — tof_analyze_abundance","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_diffcyt.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","title":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","text":"function performs differential abundance analysis cell clusters contained within `tof_tbl` using one three methods implemented diffcyt package differential discovery analysis high-dimensional cytometry data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_diffcyt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","text":"","code":"tof_analyze_abundance_diffcyt(   tof_tibble,   sample_col,   cluster_col,   fixed_effect_cols,   random_effect_cols,   diffcyt_method = c(\"glmm\", \"edgeR\", \"voom\"),   include_observation_level_random_effects = FALSE,   min_cells = 3,   min_samples = 5,   alpha = 0.05,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_diffcyt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","text":"tof_tibble `tof_tbl` `tibble`. sample_col unquoted column name indicating column `tof_tibble` represents id sample cell collected. `sample_col` serve unique identifier sample collected data acquisition - cells value `sample_col` treated part observational unit. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. fixed_effect_cols Unquoted column names representing columns `tof_tibble` used model fixed effects differential abundance analysis. Generally speaking, fixed effects represent comparisons biological interest (often variables manipulated experiments), treated vs. non-treated, -treatment vs. -treatment, healthy vs. non-healthy. random_effect_cols Optional. Unquoted column names representing columns `tof_tibble` used model random effects differential abundance analysis. Generally speaking, random effects represent variables researcher wants control/account , necessarily biological interest. Example random effect variables might include batch id, patient id (paired design), patient age. Note without multiple samples level random effect variables, can easy overfit mixed models. high-dimensional cytometry experiments, 2 fewer (often 0) random effect variables appropriate. diffcyt_method string indicating diffcyt method used differential abundance analysis. Valid methods include \"glmm\" (default), \"edgeR\", \"voom\". include_observation_level_random_effects boolean value indicating \"observation-level random effects\" (OLREs) included random effect terms \"glmm\" differential abundance model. details OLREs , see diffcyt paper. \"glmm\" method can model observation-level random effects, values ignore argument (throw warning set TRUE). Defaults FALSE. min_cells integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 3. min_samples integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 5. alpha numeric value 0 1 indicating significance level applied multiple-comparison adjusted p-values differential abundance analysis. Defaults 0.05. ... Optional additional arguments pass --hood diffcyt function used perform differential abundance analysis. See testDA_GLMM, testDA_edgeR, testDA_voom details.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_diffcyt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","text":"nested tibble two columns: `tested_effect` `daa_results`. first column, `tested_effect` character vector indicating term differential abundance model used significance testing. values row obtained pasting together column names fixed effect variable values. example, fixed effect column named `fixed_effect` levels \"\", \"b\", \"c\" two terms `tested_effect`: \"fixed_effectb\" \"fixed_effectc\" (note level \"\" fixed_effect set reference level dummy coding). values correspond terms differential abundance model represent difference cluster abundances samples fixed_effect = \"b\" fixed_effect = \"\" samples fixed_effect = \"c\" fixed_effect = \"\", respectively. addition, first row `tested_effect` always represent \"omnibus\" test, test significant differences levels fixed effect variable model. second column, `daa_results` list tibbles entry gives differential abundance results tested_effect. Within entry `daa_results`, find several columns including following: * `p_val`, p-value associated tested effect input cluster * `p_adj`, multiple-comparison adjusted p-value (using p.adjust function) * values associated underlying method used perform differential abundance analysis (log-fold change cluster abundance levels compared). details, see glmFit, voom, topTable, testDA_GLMM.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_diffcyt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","text":"three methods based generalized linear mixed models (\"glmm\"), edgeR (\"edgeR\"), voom (\"voom\"). \"glmm\" \"voom\" methods can model fixed effects random effects, \"edgeR\" method can model fixed effects.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_diffcyt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_glmm.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Abundance Analysis (DAA) with generalized linear mixed-models (GLMMs) — tof_analyze_abundance_glmm","title":"Differential Abundance Analysis (DAA) with generalized linear mixed-models (GLMMs) — tof_analyze_abundance_glmm","text":"function performs differential abundance analysis cell clusters contained within `tof_tbl` using generalized linear mixed-models. Users specify columns represent sample, cluster, fixed effect, random effect information, (mixed) binomial regression model fit using either glmer glm.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_glmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Abundance Analysis (DAA) with generalized linear mixed-models (GLMMs) — tof_analyze_abundance_glmm","text":"","code":"tof_analyze_abundance_glmm(   tof_tibble,   sample_col,   cluster_col,   fixed_effect_cols,   random_effect_cols,   min_cells = 3,   min_samples = 5,   alpha = 0.05 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_glmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Abundance Analysis (DAA) with generalized linear mixed-models (GLMMs) — tof_analyze_abundance_glmm","text":"tof_tibble `tof_tbl` `tibble`. sample_col unquoted column name indicating column `tof_tibble` represents id sample cell collected. `sample_col` serve unique identifier sample collected data acquisition - cells value `sample_col` treated part observational unit. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. fixed_effect_cols Unquoted column names representing columns `tof_tibble` used model fixed effects differential abundance analysis. Supports tidyselect helpers. Generally speaking, fixed effects represent comparisons biological interest (often variables manipulated experiments), treated vs. non-treated, -treatment vs. -treatment, healthy vs. non-healthy. random_effect_cols Unquoted column names representing columns `tof_tibble` used model random effects differential abundance analysis. Supports tidyselection. Generally speaking, random effects represent variables researcher wants control/account , necessarily biological interest. Example random effect variables might include batch id, patient id (paired design), patient age. Note without many samples level random effect variables, can easy overfit mixed models. high-dimensional cytometry experiments, 2 fewer (often 0) random effect variables appropriate. min_cells integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 3. min_samples integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 5. alpha numeric value 0 1 indicating significance level applied multiple-comparison adjusted p-values differential abundance analysis. Defaults 0.05.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_glmm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Abundance Analysis (DAA) with generalized linear mixed-models (GLMMs) — tof_analyze_abundance_glmm","text":"nested tibble two columns: `tested_effect` `daa_results`. first column, `tested_effect`, character vector indicating term differential abundance model used significance testing. values row obtained pasting together column names fixed effect variable values. example, fixed effect column named fixed_effect levels \"\", \"b\", \"c\" two terms `tested_effect`: \"fixed_effectb\" \"fixed_effectc\" (note level \"\" fixed_effect set reference level dummy coding). values correspond terms differential abundance model represent difference cluster abundances samples fixed_effect = \"b\" fixed_effect = \"\" samples fixed_effect = \"c\" fixed_effect = \"\", respectively. addition, note first row `tested_effect` always represent \"omnibus\" test, test significant differences levels fixed effect variable model. second column, `daa_results`, list tibbles entry gives differential abundance results tested_effect. Within entry `daa_results`, find `p_value`, p-value associated tested effect input cluster; `p_adj`, multiple-comparison adjusted p-value (using p.adjust function), values associated underlying method used perform differential abundance analysis (log-fold change cluster abundance levels compared).","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_glmm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Abundance Analysis (DAA) with generalized linear mixed-models (GLMMs) — tof_analyze_abundance_glmm","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_ttest.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Abundance Analysis (DAA) with t-tests — tof_analyze_abundance_ttest","title":"Differential Abundance Analysis (DAA) with t-tests — tof_analyze_abundance_ttest","text":"function performs differential abundance analysis cell clusters contained within `tof_tbl` using simple t-tests. Users specify columns represent sample, cluster, effect information, either paired unpaired t-test (one per cluster) used detect significant differences sample types.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_ttest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Abundance Analysis (DAA) with t-tests — tof_analyze_abundance_ttest","text":"","code":"tof_analyze_abundance_ttest(   tof_tibble,   cluster_col,   effect_col,   group_cols,   test_type = c(\"unpaired\", \"paired\"),   min_cells = 3,   min_samples = 5,   alpha = 0.05,   quiet = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_ttest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Abundance Analysis (DAA) with t-tests — tof_analyze_abundance_ttest","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. effect_col Unquoted column name representing column `tof_tibble` used break samples groups t-test. 2 unique values. group_cols Unquoted names columns `effect_col` used group cells independent observations. Fills similar role `sample_col` `tof_analyze_abundance_*` functions. example, experiment involves analyzing samples taken multiple patients two timepoints (`effect_col = timepoint`), group_cols name column representing patient IDs. test_type string indicating whether t-test \"unpaired\" (default) \"paired\". min_cells integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 3. min_samples integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 5. alpha numeric value 0 1 indicating significance level applied multiple-comparison adjusted p-values differential abundance analysis. Defaults 0.05. quiet boolean value indicating whether warnings printed. Defaults `TRUE`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_ttest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Abundance Analysis (DAA) with t-tests — tof_analyze_abundance_ttest","text":"tibble 7 columns: {cluster_col} name/ID cluster tested.   entry column match unique value input   {cluster_col}. t t-statistic computed cluster. df degrees freedom used t-test cluster. p_val (unadjusted) p-value t-test cluster. p_adj p.adjust-adjusted p-value t-test cluster. significant character vector \"*\" clusters    p_adj < alpha \"\" otherwise. mean_diff unpaired t-test, difference average   proportions cluster two levels `effect_col`. paired   t-test, average difference proportions cluster   two levels `effect_col` within given patient. mean_fc unpaired t-test, ratio average   proportions cluster two levels `effect_col`. paired   t-test, average ratio proportions cluster   two levels `effect_col` within given patient. 0.001 added   denominator ratio avoid divide--zero errors. \"levels\" attribute result indicates order different levels `effect_col` considered. `mean_diff` value row output computed subtracting second level first level, `mean_fc` value row computed dividing first level second level.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_ttest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Abundance Analysis (DAA) with t-tests — tof_analyze_abundance_ttest","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Differential Expression Analysis (DEA) on high-dimensional cytometry data — tof_analyze_expression","title":"Perform Differential Expression Analysis (DEA) on high-dimensional cytometry data — tof_analyze_expression","text":"function performs differential expression analysis cell clusters contained within `tof_tbl` using one three methods (\"diffcyt\", \"glmm\", \"ttest\"). wraps members `tof_analyze_expression_*` function family: tof_analyze_expression_diffcyt, tof_analyze_expression_lmm, tof_analyze_expression_ttest.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Differential Expression Analysis (DEA) on high-dimensional cytometry data — tof_analyze_expression","text":"","code":"tof_analyze_expression(tof_tibble, method = c(\"diffcyt\", \"glmm\", \"ttest\"), ...)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Differential Expression Analysis (DEA) on high-dimensional cytometry data — tof_analyze_expression","text":"tof_tibble `tof_tbl` `tibble`. method string indicating statistical method used. Valid values include \"diffcyt\", \"lmm\", \"ttest\". ... Additional arguments pass onto `tof_analyze_expression_*` function family member corresponding chosen method.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform Differential Expression Analysis (DEA) on high-dimensional cytometry data — tof_analyze_expression","text":"tibble nested tibble containing differential abundance results chosen method. See tof_analyze_expression_diffcyt, tof_analyze_expression_lmm, tof_analyze_expression_ttest details.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform Differential Expression Analysis (DEA) on high-dimensional cytometry data — tof_analyze_expression","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_diffcyt.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","title":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","text":"function performs differential expression analysis cell clusters contained within `tof_tbl` using one two methods implemented diffcyt package differential discovery analysis high-dimensional cytometry data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_diffcyt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","text":"","code":"tof_analyze_expression_diffcyt(   tof_tibble,   sample_col,   cluster_col,   marker_cols = where(tof_is_numeric),   fixed_effect_cols,   random_effect_cols,   diffcyt_method = c(\"lmm\", \"limma\"),   include_observation_level_random_effects = FALSE,   min_cells = 3,   min_samples = 5,   alpha = 0.05,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_diffcyt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","text":"tof_tibble `tof_tbl` `tibble`. sample_col unquoted column name indicating column `tof_tibble` represents id sample cell collected. `sample_col` serve unique identifier sample collected data acquisition - cells value `sample_col` treated part observational unit. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names representing columns `tof_tibble` (.e. high-dimensional cytometry protein measurements) tested differential expression levels `fixed_effect_cols`. Defaults numeric (integer double) columns. Supports tidyselect helpers. fixed_effect_cols Unquoted column names representing columns `tof_tibble` used model fixed effects differential expression analysis. Generally speaking, fixed effects represent comparisons biological interest (often variables manipulated experiments), treated vs. non-treated, -treatment vs. -treatment, healthy vs. non-healthy. random_effect_cols Unquoted column names representing columns `tof_tibble` used model random effects differential expression analysis. Generally speaking, random effects represent variables researcher wants control/account , necessarily biological interest. Example random effect variables might include batch id, patient id (paired design), patient age. Note without many samples level random effect variables, can easy overfit mixed models. high-dimensional cytometry experiments, 2 fewer (often 0) random effect variables appropriate. diffcyt_method string indicating diffcyt method used differential expression analysis. Valid methods include \"lmm\" (default) \"limma\". include_observation_level_random_effects boolean value indicating \"observation-level random effects\" (OLREs) included random effect terms \"lmm\" differential expression model. details OLREs , see diffcyt paper. Defaults FALSE. min_cells integer value used filter clusters differential expression analysis. Clusters included differential expression testing least `min_cells` least `min_samples` samples. Defaults 3. min_samples integer value used filter clusters differential expression analysis. Clusters included differential expression testing least `min_cells` least `min_samples` samples. Defaults 5. alpha numeric value 0 1 indicating significance level applied multiple-comparison adjusted p-values differential abundance analysis. Defaults 0.05. ... Optional additional arguments pass --hood diffcyt function used perform differential expression analysis. See testDS_LMM testDS_limma details.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_diffcyt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","text":"nested tibble two columns: `tested_effect` `dea_results`. first column, `tested_effect` character vector indicating term differential expression model used significance testing. values row obtained pasting together column names fixed effect variable values. example, fixed effect column named fixed_effect levels \"\", \"b\", \"c\" two terms `tested_effect`: \"fixed_effectb\" \"fixed_effectc\" (note level \"\" fixed_effect set reference level dummy coding). values correspond terms differential expression model represent difference cluster median expression values marker samples fixed_effect = \"b\" fixed_effect = \"\" samples fixed_effect = \"c\" fixed_effect = \"\", respectively. addition, note first row `tested_effect` always represent \"omnibus\" test, test significant differences levels fixed effect variable model. second column, `dea_results` list tibbles entry gives differential expression results tested_effect. Within entry `dea_results`, find `p_val`, p-value associated tested effect input cluster/marker pair; `p_adj`, multiple-comparison adjusted p-value (using p.adjust function), values associated underlying method used perform differential expression analysis (log-fold change clusters' median marker expression values conditions compared). tibble `dea_results` also two columns representing cluster marker corresponding p-value row.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_diffcyt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","text":"two methods based linear mixed models (\"lmm\") limma (\"limma\"). \"lmm\" \"limma\" methods can model fixed effects random effects.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_diffcyt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_lmm.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","title":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","text":"function performs differential expression analysis cell clusters contained within `tof_tbl` using linear mixed-models. Users specify columns represent sample, cluster, marker, fixed effect, random effect information, (mixed) linear regression model fit using either lmer glm.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_lmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","text":"","code":"tof_analyze_expression_lmm(   tof_tibble,   sample_col,   cluster_col,   marker_cols = where(tof_is_numeric),   fixed_effect_cols,   random_effect_cols,   central_tendency_function = median,   min_cells = 3,   min_samples = 5,   alpha = 0.05 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_lmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","text":"tof_tibble `tof_tbl` `tibble`. sample_col unquoted column name indicating column `tof_tibble` represents id sample cell collected. `sample_col` serve unique identifier sample collected data acquisition - cells value `sample_col` treated part observational unit. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names representing columns `tof_tibble` (.e. high-dimensional cytometry protein measurements) included differential discovery analysis. Defaults numeric (integer double) columns. Supports tidyselection. fixed_effect_cols Unquoted column names representing columns `tof_tibble` used model fixed effects differential expression analysis. Supports tidyselection. Generally speaking, fixed effects represent comparisons biological interest (often variables manipulated experiments), treated vs. non-treated, -treatment vs. -treatment, healthy vs. non-healthy. random_effect_cols Optional. Unquoted column names representing columns `tof_tibble` used model random effects differential expression analysis. Supports tidyselection. Generally speaking, random effects represent variables researcher wants control/account , necessarily biological interest. Example random effect variables might include batch id, patient id (paired design), patient age. analyses include random effects. central_tendency_function function used calculate measurement central tendency cluster/marker pair (used dependent variable linear model). Defaults median. min_cells integer value used filter clusters differential expression analysis. Clusters included differential expression testing least `min_cells` least `min_samples` samples. Defaults 3. min_samples integer value used filter clusters differential expression analysis. Clusters included differential expression testing least `min_cells` least `min_samples` samples. Defaults 5. alpha numeric value 0 1 indicating significance level applied multiple-comparison adjusted p-values differential abundance analysis. Defaults 0.05.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_lmm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","text":"nested tibble two columns: `tested_effect` `dea_results`. first column, `tested_effect` character vector indicating term differential expression model used significance testing. values row obtained pasting together column names fixed effect variable values. example, fixed effect column named fixed_effect levels \"\", \"b\", \"c\" two terms `tested_effect`: \"fixed_effectb\" \"fixed_effectc\" (note level \"\" fixed_effect set reference level dummy coding). values correspond terms differential expression model represent difference cluster median expression values marker samples fixed_effect = \"b\" fixed_effect = \"\" samples fixed_effect = \"c\" fixed_effect = \"\", respectively. addition, note first row `tested_effect` always represent \"omnibus\" test, test significant differences levels fixed effect variable model. second column, `dea_results` list tibbles entry gives differential expression results tested_effect. Within entry `daa_results`, find `p_val`, p-value associated tested effect input cluster/marker pair; `p_adj`, multiple-comparison adjusted p-value (using p.adjust function), values associated underlying method used perform differential expression analysis (log-fold change clusters' median marker expression values levels compared).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_lmm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","text":"Specifically, one linear model fit cluster/marker pair. cluster/marker pair, user-supplied measurement central tendency (`central_tendency_function`), mean median, calculated across cells cluster sample--sample basis. , central tendency value used dependent variable linear model `fixed_effect_cols` fixed effects predictors `random_effect_cols` random effects predictors. models (one per cluster/marker pair) fit, p-values coefficient model multiple-comparisons adjusted using p.adjust function.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_lmm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_ttest.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Expression Analysis (DEA) with t-tests — tof_analyze_expression_ttest","title":"Differential Expression Analysis (DEA) with t-tests — tof_analyze_expression_ttest","text":"function performs differential expression analysis cell clusters contained within `tof_tbl` using simple t-tests. Specifically, either unpaired paired t-test compare samples' marker expression distributions (two conditions) within cluster using user-specified summary function (.e. mean median). One t-test conducted per cluster/marker pair significant differences sample types detected multiple-hypothesis correction.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_ttest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Expression Analysis (DEA) with t-tests — tof_analyze_expression_ttest","text":"","code":"tof_analyze_expression_ttest(   tof_tibble,   cluster_col,   marker_cols = where(tof_is_numeric),   effect_col,   group_cols,   test_type = c(\"unpaired\", \"paired\"),   summary_function = mean,   min_cells = 3,   min_samples = 5,   alpha = 0.05,   quiet = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_ttest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Expression Analysis (DEA) with t-tests — tof_analyze_expression_ttest","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names representing columns `tof_tibble` (.e. high-dimensional cytometry protein measurements) tested differential expression levels `effect_col`. Defaults numeric (integer double) columns. Supports tidyselect helpers. effect_col Unquoted column name representing column `tof_tibble` used break samples groups t-test. 2 unique values. group_cols Unquoted names columns `effect_col` used group cells independent observations. Fills similar role `sample_col` `tof_analyze_abundance_*` functions. example, experiment involves analyzing samples taken multiple patients two timepoints (`effect_col = timepoint`), group_cols name column representing patient IDs. test_type string indicating whether t-test \"unpaired\" (default) \"paired\". summary_function vector-valued function used summarize distribution marker cluster (within sample, grouped `group_cols`). Defaults `mean`. min_cells integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 3. min_samples integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 5. alpha numeric value 0 1 indicating significance level applied multiple-comparison adjusted p-values differential abundance analysis. Defaults 0.05. quiet boolean value indicating whether warnings printed. Defaults `TRUE`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_ttest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Expression Analysis (DEA) with t-tests — tof_analyze_expression_ttest","text":"tibble 7 columns: {cluster_col} name/ID cluster cluster/marker pair   tested. entry column match unique value input   {cluster_col}. marker name marker cluster/marker pair tested. t t-statistic computed cluster. df degrees freedom used t-test cluster. p_val (unadjusted) p-value t-test cluster. p_adj p.adjust-adjusted p-value t-test cluster. significant character vector \"*\" clusters    p_adj < alpha \"\" otherwise. mean_diff unpaired t-test, difference average   proportions cluster two levels `effect_col`. paired   t-test, average difference proportions cluster   two levels `effect_col` within given patient. mean_fc unpaired t-test, ratio average   proportions cluster two levels `effect_col`. paired   t-test, average ratio proportions cluster   two levels `effect_col` within given patient. 0.001 added   denominator ratio avoid divide--zero errors. \"levels\" attribute result indicates order different levels `effect_col` considered. `mean_diff` value row output computed subtracting second level first level, `mean_fc` value row computed dividing first level second level.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_ttest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Expression Analysis (DEA) with t-tests — tof_analyze_expression_ttest","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_annotate_clusters.html","id":null,"dir":"Reference","previous_headings":"","what":"Manually annotate tidytof-computed clusters using user-specified labels — tof_annotate_clusters","title":"Manually annotate tidytof-computed clusters using user-specified labels — tof_annotate_clusters","text":"function adds additional column `tibble` `tof_tbl` allow users incorporate manual cell type labels clusters identified using unsupervised algorithms.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_annotate_clusters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Manually annotate tidytof-computed clusters using user-specified labels — tof_annotate_clusters","text":"","code":"tof_annotate_clusters(tof_tibble, cluster_col, annotations)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_annotate_clusters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Manually annotate tidytof-computed clusters using user-specified labels — tof_annotate_clusters","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` contains ids unsupervised cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. annotations data structure indicating annotate cluster id `cluster_col`. `annotations` can provided data.frame two columns (first name `cluster_col` contain unique cluster id; second can name contain character vector indicating manual annotation matched cluster id first column). `annotations` can also provided named character vector; case, entry `annotations` unique cluster id, names entry corresponding manual cluster annotation. See examples.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_annotate_clusters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Manually annotate tidytof-computed clusters using user-specified labels — tof_annotate_clusters","text":"`tof_tbl` number rows `tof_tibble` one additional column containing manual cluster annotations cell (character vector). `annotations` provided data.frame, new column name column containing cluster annotations `annotations`. `annotations` provided named character vector, new column named `cluster_col_annotation`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_annotate_clusters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Manually annotate tidytof-computed clusters using user-specified labels — tof_annotate_clusters","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = c(rnorm(n = 500), rnorm(n = 500, mean = 2)),         cd34 = c(rnorm(n = 500), rnorm(n = 500, mean = 4)),         cd19 = rnorm(n = 1000),         cluster_id = c(rep(\"a\", 500), rep(\"b\", 500))     )  # using named character vector sim_data |>     tof_annotate_clusters(         cluster_col = cluster_id,         annotations = c(\"macrophage\" = \"a\", \"dendritic cell\" = \"b\")     ) #> # A tibble: 1,000 × 6 #>        cd45   cd38   cd34   cd19 cluster_id cluster_id_annotation #>       <dbl>  <dbl>  <dbl>  <dbl> <chr>      <chr>                 #>  1 -1.40    -0.337 -0.166  1.12  a          macrophage            #>  2  0.255   -0.216  0.120  0.400 a          macrophage            #>  3 -2.44     0.621 -0.662 -0.985 a          macrophage            #>  4 -0.00557 -1.28  -0.531 -0.503 a          macrophage            #>  5  0.622   -1.30  -0.301  0.987 a          macrophage            #>  6  1.15    -0.377 -0.602  2.19  a          macrophage            #>  7 -1.82     0.104 -0.318 -0.165 a          macrophage            #>  8 -0.247   -0.704  0.308 -0.686 a          macrophage            #>  9 -0.244    1.50   0.799  0.941 a          macrophage            #> 10 -0.283   -0.303  1.75  -0.164 a          macrophage            #> # ℹ 990 more rows  # using two-column data.frame annotation_data_frame <-     data.frame(         cluster_id = c(\"a\", \"b\"),         cluster_annotation = c(\"macrophage\", \"dendritic cell\")     )  sim_data |>     tof_annotate_clusters(         cluster_col = cluster_id,         annotations = annotation_data_frame     ) #> # A tibble: 1,000 × 6 #>        cd45   cd38   cd34   cd19 cluster_id cluster_annotation #>       <dbl>  <dbl>  <dbl>  <dbl> <chr>      <chr>              #>  1 -1.40    -0.337 -0.166  1.12  a          macrophage         #>  2  0.255   -0.216  0.120  0.400 a          macrophage         #>  3 -2.44     0.621 -0.662 -0.985 a          macrophage         #>  4 -0.00557 -1.28  -0.531 -0.503 a          macrophage         #>  5  0.622   -1.30  -0.301  0.987 a          macrophage         #>  6  1.15    -0.377 -0.602  2.19  a          macrophage         #>  7 -1.82     0.104 -0.318 -0.165 a          macrophage         #>  8 -0.247   -0.704  0.308 -0.686 a          macrophage         #>  9 -0.244    1.50   0.799  0.941 a          macrophage         #> 10 -0.283   -0.303  1.75  -0.164 a          macrophage         #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_apply_classifier.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform developmental clustering on CyTOF data using a pre-fit classifier — tof_apply_classifier","title":"Perform developmental clustering on CyTOF data using a pre-fit classifier — tof_apply_classifier","text":"Perform developmental clustering CyTOF data using pre-fit classifier","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_apply_classifier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform developmental clustering on CyTOF data using a pre-fit classifier — tof_apply_classifier","text":"","code":"tof_apply_classifier(   cancer_tibble = NULL,   classifier_fit = NULL,   distance_function = c(\"mahalanobis\", \"cosine\", \"pearson\"),   num_cores = 1,   parallel_vars )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_apply_classifier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform developmental clustering on CyTOF data using a pre-fit classifier — tof_apply_classifier","text":"cancer_tibble `tibble` `tof_tibble` containing cells classified nearest healthy subpopulation (generally cancer cells). classifier_fit nested `tibble` produced `tof_build_classifier` row represents healthy cell subpopulation cells `cancer_tibble` classified using minimum distance. distance_function string indicating distance function used perform classification. Options \"mahalanobis\" (default), \"cosine\", \"pearson\". num_cores integer indicating number CPU cores used parallelize classification. Defaults 1 (single core). parallel_vars Unquoted column names indicating columns `cancer_tibble` use breaking data order parallelize classification. Defaults NULL. Supports tidyselect helpers.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_apply_classifier.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform developmental clustering on CyTOF data using a pre-fit classifier — tof_apply_classifier","text":"tibble `nrow(cancer_tibble)` rows `nrow(classifier_fit) + 1` columns. row represents cell `cancer_tibble`, `nrow(classifier_fit)` columns represent distance cell healthy subpopulations' cluster centroids. final column represents cluster id healthy subpopulation minimum distance cell represented row.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_apply_classifier.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform developmental clustering on CyTOF data using a pre-fit classifier — tof_apply_classifier","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_channels.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect low-expression (i.e. potentially failed) channels in high-dimensional cytometry data — tof_assess_channels","title":"Detect low-expression (i.e. potentially failed) channels in high-dimensional cytometry data — tof_assess_channels","text":"Detect low-expression (.e. potentially failed) channels high-dimensional cytometry data","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_channels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect low-expression (i.e. potentially failed) channels in high-dimensional cytometry data — tof_assess_channels","text":"","code":"tof_assess_channels(   tof_tibble,   channel_cols = where(tof_is_numeric),   negative_threshold = asinh(10/5),   negative_proportion_flag = 0.95 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_channels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect low-expression (i.e. potentially failed) channels in high-dimensional cytometry data — tof_assess_channels","text":"tof_tibble `tof_tbl` `tibble`. channel_cols vector unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. nothing specified, default analyze numeric columns. negative_threshold scalar indicating threshold measurement considered negative. Defaults hyperbolic arcsine transformation 10 counts. negative_proportion_flag scalar 0 1 indicating proportion cells tof_tibble need `negative_threshold` given marker order marker flagged. Defaults 0.95.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_channels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect low-expression (i.e. potentially failed) channels in high-dimensional cytometry data — tof_assess_channels","text":"tibble 3 columns number rows equal number columns `tof_tibble` chosen `channel_cols`. three columns \"channel\", character vector channel names, \"negative_proportion\", numeric vector values 0 1 indicating many cells `tof_tibble` `negative_threshold` channel, `flagged_channel`, boolean vector indicating whether channel flagged potentially failed (TRUE means channel large number cells `negative_threshold`).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_channels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect low-expression (i.e. potentially failed) channels in high-dimensional cytometry data — tof_assess_channels","text":"","code":"# simulate some data sim_data <-     data.frame(         cd4 = rnorm(n = 100, mean = 5, sd = 0.5),         cd8 = rnorm(n = 100, mean = 0, sd = 0.1),         cd33 = rnorm(n = 100, mean = 10, sd = 0.1)     )  tof_assess_channels(tof_tibble = sim_data) #> # A tibble: 3 × 3 #>   channel negative_proportion flagged_channel #>   <chr>                 <dbl> <lgl>           #> 1 cd8                       1 TRUE            #> 2 cd4                       0 FALSE           #> 3 cd33                      0 FALSE            tof_assess_channels(tof_tibble = sim_data, channel_cols = c(cd4, cd8)) #> # A tibble: 2 × 3 #>   channel negative_proportion flagged_channel #>   <chr>                 <dbl> <lgl>           #> 1 cd8                       1 TRUE            #> 2 cd4                       0 FALSE            tof_assess_channels(tof_tibble = sim_data, negative_threshold = 2) #> # A tibble: 3 × 3 #>   channel negative_proportion flagged_channel #>   <chr>                 <dbl> <lgl>           #> 1 cd8                       1 TRUE            #> 2 cd4                       0 FALSE           #> 3 cd33                      0 FALSE"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_distance.html","id":null,"dir":"Reference","previous_headings":"","what":"Assess a clustering result by calculating the z-score of each cell's\nmahalanobis distance to its cluster centroid and flagging outliers. — tof_assess_clusters_distance","title":"Assess a clustering result by calculating the z-score of each cell's\nmahalanobis distance to its cluster centroid and flagging outliers. — tof_assess_clusters_distance","text":"function evaluates result clustering procedure comparing mahalanobis distance cell centroid cluster assigned among cells given cluster. cells mahalanobis-distance z-score user-specified threshold flagged potentially anomalous. Note z-score calculated using modified formula minimize effect outliers (Z = x - median(x) / mad(x)).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assess a clustering result by calculating the z-score of each cell's\nmahalanobis distance to its cluster centroid and flagging outliers. — tof_assess_clusters_distance","text":"","code":"tof_assess_clusters_distance(   tof_tibble,   cluster_col,   marker_cols = where(tof_is_numeric),   z_threshold = 3,   augment = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_distance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assess a clustering result by calculating the z-score of each cell's\nmahalanobis distance to its cluster centroid and flagging outliers. — tof_assess_clusters_distance","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names indicating column `tof_tibble` interpreted markers used mahalanobis distance calculation. Defaults numeric columns. Supports tidyselection. z_threshold scalar indicating distance z-score threshold cell considered anomalous. Defaults 3. augment boolean value indicating output column-bind computed flags cell (see ) new columns `tof_tibble` (TRUE) tibble including computed flags returned (FALSE, default).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_distance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assess a clustering result by calculating the z-score of each cell's\nmahalanobis distance to its cluster centroid and flagging outliers. — tof_assess_clusters_distance","text":"augment = FALSE (default), tibble 3 columns: \".mahalanobis_distance\" (mahalanobis distance cell centroid tits assigned cluster), \"z_score\" (modified z-score cell's mahalanobis distance relative cells dataset), \"flagged_cell\" (boolean indicating whether cell flagged z-score z_threshold). augment = TRUE, 3 columns column-bound tof_tibble, resulting tibble returned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_distance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assess a clustering result by calculating the z-score of each cell's\nmahalanobis distance to its cluster centroid and flagging outliers. — tof_assess_clusters_distance","text":"","code":"# simulate data sim_data_inner <-     dplyr::tibble(         cd45 = c(rnorm(n = 600), rnorm(n = 500, mean = -4)),         cd38 =             c(                 rnorm(n = 100, sd = 0.5),                 rnorm(n = 500, mean = -3),                 rnorm(n = 500, mean = 8)             ),         cd34 =             c(                 rnorm(n = 100, sd = 0.2, mean = -10),                 rnorm(n = 500, mean = 4),                 rnorm(n = 500, mean = 60)             ),         cd19 = c(rnorm(n = 100, sd = 0.3, mean = 10), rnorm(n = 1000)),         cluster_id = c(rep(\"a\", 100), rep(\"b\", 500), rep(\"c\", 500)),         dataset = \"inner\"     )  sim_data_outer <-     dplyr::tibble(         cd45 = c(rnorm(n = 10), rnorm(50, mean = 3), rnorm(n = 50, mean = -12)),         cd38 =             c(                 rnorm(n = 10, sd = 0.5),                 rnorm(n = 50, mean = -10),                 rnorm(n = 50, mean = 10)             ),         cd34 =             c(                 rnorm(n = 10, sd = 0.2, mean = -15),                 rnorm(n = 50, mean = 15),                 rnorm(n = 50, mean = 70)             ),         cd19 = c(rnorm(n = 10, sd = 0.3, mean = 19), rnorm(n = 100)),         cluster_id = c(rep(\"a\", 10), rep(\"b\", 50), rep(\"c\", 50)),         dataset = \"outer\"     )  sim_data <- rbind(sim_data_inner, sim_data_outer)  # detect anomalous cells (in this case, the \"outer\" dataset contains small # clusters that get lumped into the larger clusters in the \"inner\" dataset) z_result <-     sim_data |>     tof_assess_clusters_distance(cluster_col = cluster_id, z_threshold = 2.5)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_entropy.html","id":null,"dir":"Reference","previous_headings":"","what":"Assess a clustering result by calculating the shannon entropy of each cell's\nmahalanobis distance to all cluster centroids and flagging outliers. — tof_assess_clusters_entropy","title":"Assess a clustering result by calculating the shannon entropy of each cell's\nmahalanobis distance to all cluster centroids and flagging outliers. — tof_assess_clusters_entropy","text":"function evaluates result clustering procedure calculating mahalanobis distance cell centroids clusters dataset finding shannon entropy resulting vector distances. cells entropy threshold user-specified threshold flagged potentially anomalous. Entropy minimized (0) cell close one (small number) clusters, far rest . cell close multiple cluster centroids (.e. ambiguous phenotype), entropy large.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_entropy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assess a clustering result by calculating the shannon entropy of each cell's\nmahalanobis distance to all cluster centroids and flagging outliers. — tof_assess_clusters_entropy","text":"","code":"tof_assess_clusters_entropy(   tof_tibble,   cluster_col,   marker_cols = where(tof_is_numeric),   entropy_threshold,   entropy_quantile = 0.9,   num_closest_clusters,   augment = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_entropy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assess a clustering result by calculating the shannon entropy of each cell's\nmahalanobis distance to all cluster centroids and flagging outliers. — tof_assess_clusters_entropy","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names indicating column `tof_tibble` interpreted markers used mahalanobis distance calculation. Defaults numeric columns. Supports tidyselection. entropy_threshold scalar indicating entropy threshold cell considered anomalous. unspecified, threshold computed using `entropy_quantile` (see ). (Note: Entropy often 0 1, can larger many classes/clusters). entropy_quantile scalar 0 1 indicating entropy quantile cell considered anomalous. Defaults 0.9, means cells entropy 90th percentile flagged. Ignored entropy_threshold specified directly. num_closest_clusters integer indicating many cell's closest cluster centroids mahalanobis distance included entropy calculation. Playing argument allow ignore distances clusters far away cell (thus may distort result, many distant centroids large distances can artificially inflate cells' entropy value; said, rarely issue empirically). Defaults clusters tof_tibble. augment boolean value indicating output column-bind computed flags cell (see ) new columns `tof_tibble` (TRUE) tibble including computed flags returned (FALSE, default).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_entropy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assess a clustering result by calculating the shannon entropy of each cell's\nmahalanobis distance to all cluster centroids and flagging outliers. — tof_assess_clusters_entropy","text":"augment = FALSE (default), tibble 2 + NUM_CLUSTERS columns. NUM_CLUSTERS number unique clusters cluster_col. Two columns \"entropy\" (entropy value cell) \"flagged_cell\" (boolean value indicating cell entropy value entropy_threshold). NUM_CLUSTERS columns contain mahalanobis distances cell clusters cluster_col (named \".mahalanobis_cluster_name\"). augment = TRUE, 2 + NUM_CLUSTERS columns column-bound tof_tibble, resulting tibble returned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_entropy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assess a clustering result by calculating the shannon entropy of each cell's\nmahalanobis distance to all cluster centroids and flagging outliers. — tof_assess_clusters_entropy","text":"","code":"# simulate data sim_data <-     dplyr::tibble(         cd45 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cd38 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cd34 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cd19 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cluster_id = c(rep(\"a\", 1000), rep(\"b\", 1000), rep(\"c\", 1000))     )  # imagine a \"reference\" dataset in which \"cluster a\" isn't present sim_data_reference <-     sim_data |>     dplyr::filter(cluster_id %in% c(\"b\", \"c\"))  # if we cluster into the reference dataset, we will force all cells in # cluster a into a population where they don't fit very well sim_data <-     sim_data |>     tof_cluster(         healthy_tibble = sim_data_reference,         healthy_label_col = cluster_id,         method = \"ddpr\"     )  # we can evaluate the clustering quality by calculating by the entropy of the # mahalanobis distance vector for each cell to all cluster centroids entropy_result <-     sim_data |>     tof_assess_clusters_entropy(         cluster_col = .mahalanobis_cluster,         marker_cols = starts_with(\"cd\"),         entropy_quantile = 0.8,         augment = TRUE     )  # most cells in \"cluster a\" are flagged, and few cells in the other clusters are flagged_cluster_proportions <-     entropy_result |>     dplyr::group_by(cluster_id) |>     dplyr::summarize(         prop_flagged = mean(flagged_cell)     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_knn.html","id":null,"dir":"Reference","previous_headings":"","what":"Assess a clustering result by calculating a cell's cluster assignment to that\nof its K nearest neighbors. — tof_assess_clusters_knn","title":"Assess a clustering result by calculating a cell's cluster assignment to that\nof its K nearest neighbors. — tof_assess_clusters_knn","text":"function evaluates result clustering procedure finding cell's K nearest neighbors, determining cluster majority assigned , checking matches cell's cluster assignment. cluster assignment majority cell's nearest neighbors match cell's cluster assignment, cell flagged potentially anomalous.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_knn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assess a clustering result by calculating a cell's cluster assignment to that\nof its K nearest neighbors. — tof_assess_clusters_knn","text":"","code":"tof_assess_clusters_knn(   tof_tibble,   cluster_col,   marker_cols = where(tof_is_numeric),   num_neighbors = min(10, nrow(tof_tibble)),   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\"),   augment = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_knn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assess a clustering result by calculating a cell's cluster assignment to that\nof its K nearest neighbors. — tof_assess_clusters_knn","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names indicating column `tof_tibble` interpreted markers used mahalanobis distance calculation. Defaults numeric columns. Supports tidyselection. num_neighbors integer indicating many neighbors found nearest neighbor calculation. distance_function string indicating distance function used perform k nearest neighbor calculation.  Options \"euclidean\" (default) \"cosine\". augment boolean value indicating output column-bind computed flags cell (see ) new columns `tof_tibble` (TRUE) tibble including computed flags returned (FALSE, default).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_knn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assess a clustering result by calculating a cell's cluster assignment to that\nof its K nearest neighbors. — tof_assess_clusters_knn","text":"augment = FALSE (default), tibble 2 columns: \".knn_cluster\" (character vector indicating cluster received majority vote cell's k nearest neighbors) \"flagged_cell\" (boolean value indicating cell's cluster assignment matched majority vote (TRUE) (FALSE)). augment = TRUE, 2 columns column-bound tof_tibble, resulting tibble returned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_knn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assess a clustering result by calculating a cell's cluster assignment to that\nof its K nearest neighbors. — tof_assess_clusters_knn","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cd38 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cd34 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cd19 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cluster_id = c(rep(\"a\", 1000), rep(\"b\", 1000), rep(\"c\", 1000))     )  knn_result <-     sim_data |>     tof_assess_clusters_knn(         cluster_col = cluster_id,         num_neighbors = 10     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect flow rate abnormalities in high-dimensional cytometry data — tof_assess_flow_rate","title":"Detect flow rate abnormalities in high-dimensional cytometry data — tof_assess_flow_rate","text":"function performs simplified version flowAI's statistical test detect time periods abnormal flow rates course flow cytometry experiment. Briefly, relative flow rates timestep throughout data acquisition calculated (see tof_calculate_flow_rate), outlier timepoints particularly high low flow rates (.e. beyond extreme values t-distribution across timesteps) flagged.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect flow rate abnormalities in high-dimensional cytometry data — tof_assess_flow_rate","text":"","code":"tof_assess_flow_rate(   tof_tibble,   time_col,   group_cols,   num_timesteps = nrow(tof_tibble)/1000,   alpha_threshold = 0.01,   visualize = FALSE,   ...,   augment = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect flow rate abnormalities in high-dimensional cytometry data — tof_assess_flow_rate","text":"tof_tibble `tof_tbl` `tibble`. time_col unquoted column name indicating column `tof_tibble` contains time cell collected. group_cols Optional. Unquoted column names indicating columns used group cells analysis. Flow rate calculation performed independently within group. Supports tidyselect helpers. num_timesteps number bins `time_col` split. define \"timesteps\" data collection process. number cells analyzed cytometer counted bin separately represent relative average flow rate timestep data collection. alpha_threshold scalar 0 1 indicating two-tailed significance level draw outlier thresholds t-distribution `num_timesteps` - 1 degrees freedom. Defaults 0.01. visualize boolean value indicating plot generated visualize timestep's relative flow rate (group) instead returning tibble directly. Defaults FALSE. ... Optional additional arguments pass facet_wrap. Ignored visualize = FALSE. augment boolean value indicating output column-bind computed flags cell (see ) new columns `tof_tibble` (TRUE) tibble including computed flags returned (FALSE, default).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect flow rate abnormalities in high-dimensional cytometry data — tof_assess_flow_rate","text":"tibble number rows `tof_tibble`. augment = FALSE (default), 3 columns: \"time_col\" (column `time_col`), \"timestep\" (numeric timestep cell assigned based value `time_col`), \"flagged_window\" (boolean vector indicating cell collecting timestep flagged high low flow rate). augment = TRUE, 3 columns column-bound `tof_tibble` return augmented version input dataset. (Note case, time_col duplicated). visualize = TRUE, ggplot object returned instead tibble.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect flow rate abnormalities in high-dimensional cytometry data — tof_assess_flow_rate","text":"","code":"set.seed(1000L) sim_data <-     data.frame(         cd4 = rnorm(n = 1000, mean = 5, sd = 0.5),         cd8 = rnorm(n = 1000, mean = 0, sd = 0.1),         cd33 = rnorm(n = 1000, mean = 10, sd = 0.1),         file_name = c(rep(\"a\", times = 500), rep(\"b\", times = 500)),         time =             c(                 sample(1:100, size = 200, replace = TRUE),                 sample(100:400, size = 300, replace = TRUE),                 sample(1:150, size = 400, replace = TRUE),                 sample(1:500, size = 100, replace = TRUE)             )     )  sim_data |>     tof_assess_flow_rate(         time_col = time,         num_timesteps = 20,         visualize = TRUE     )   sim_data |>     tof_assess_flow_rate(         time_col = time,         group_cols = file_name,         num_timesteps = 20,         visualize = TRUE     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect flow rate abnormalities in high-dimensional cytometry data (stored in a\nsingle data.frame) — tof_assess_flow_rate_tibble","title":"Detect flow rate abnormalities in high-dimensional cytometry data (stored in a\nsingle data.frame) — tof_assess_flow_rate_tibble","text":"function performs simplified version flowAI's statistical test detect time periods abnormal flow rates course flow cytometry experiment. Briefly, relative flow rates timestep throughout data acquisition calculated (see tof_calculate_flow_rate), outlier timepoints particularly high low flow rates (.e. beyond extreme values t-distribution across timesteps) flagged.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect flow rate abnormalities in high-dimensional cytometry data (stored in a\nsingle data.frame) — tof_assess_flow_rate_tibble","text":"","code":"tof_assess_flow_rate_tibble(   tof_tibble,   time_col,   num_timesteps = nrow(tof_tibble)/1000,   alpha_threshold = 0.01,   augment = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect flow rate abnormalities in high-dimensional cytometry data (stored in a\nsingle data.frame) — tof_assess_flow_rate_tibble","text":"tof_tibble `tof_tbl` `tibble`. time_col unquoted column name indicating column `tof_tibble` contains time cell collected. num_timesteps number bins `time_col` split. define \"timesteps\" data collection process. number cells analyzed cytometer counted bin separately represent relative average flow rate timestep data collection. alpha_threshold scalar 0 1 indicating two-tailed significance level draw outlier thresholds t-distribution `num_timesteps` - 1 degrees freedom. Defaults 0.01. augment boolean value indicating output column-bind computed flags cell (see ) new columns `tof_tibble` (TRUE) tibble including computed flags returned (FALSE, default).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate_tibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect flow rate abnormalities in high-dimensional cytometry data (stored in a\nsingle data.frame) — tof_assess_flow_rate_tibble","text":"tibble number rows `tof_tibble`. augment = FALSE (default), 3 columns: \"time_col\" (column `time_col`), \"timestep\" (numeric timestep cell assigned based value `time_col`), \"flagged_window\" (boolean vector indicating cell collecting timestep flagged high low flow rate). augment = TRUE, 3 columns column-bound `tof_tibble` return augmented version input dataset. (Note case, time_col duplicated).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate_tibble.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect flow rate abnormalities in high-dimensional cytometry data (stored in a\nsingle data.frame) — tof_assess_flow_rate_tibble","text":"","code":"set.seed(1000L) sim_data <-     data.frame(         cd4 = rnorm(n = 1000, mean = 5, sd = 0.5),         cd8 = rnorm(n = 1000, mean = 0, sd = 0.1),         cd33 = rnorm(n = 1000, mean = 10, sd = 0.1),         time =             c(                 sample(1:100, size = 200, replace = TRUE),                 sample(100:400, size = 300, replace = TRUE),                 sample(1:150, size = 400, replace = TRUE),                 sample(1:500, size = 100, replace = TRUE)             )     )  sim_data |>     tof_assess_flow_rate(         time_col = time,         num_timesteps = 20,         visualize = TRUE     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Assess a trained elastic net model — tof_assess_model","title":"Assess a trained elastic net model — tof_assess_model","text":"function assesses trained `tof_model`'s performance new data computing model type-specific performance measurements. new data provided, performance metrics training data provided.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assess a trained elastic net model — tof_assess_model","text":"","code":"tof_assess_model(tof_model, new_data)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assess a trained elastic net model — tof_assess_model","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations used evaluate `tof_model`'s performance. new_data provided, model evaluation performed using training data used fit model. Alternatively, string \"tuning\" can provided access model's performance metrics (resampled) model tuning process.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assess a trained elastic net model — tof_assess_model","text":"list performance metrics whose components depend model type: \"model_metrics\" tibble two columns (\"metric\" \"value\") containing standard performance metrics model type. linear models, \"mse\" (mean squared error predictions) \"mae\" (mean absolute error predictions). two-class models, \"roc_auc\" (area Receiver-Operating Curve classification), \"misclassification error\" (proportion misclassified observations), \"binomial_deviance\" (see deviance.glmnet), \"mse\" (mean squared error logit function), \"mae\" (mean absolute error logit function). multiclass models, \"roc_auc\" (area Receiver-Operating Curve classification using Hand-Till generalization ROC AUC multiclass models roc_auc), \"misclassification error\" (proportion misclassified observations), \"multinomial_deviance\" (see deviance.glmnet), \"mse\" \"mae\" . survival models, \"concordance_index\" (Harrel's C index; see deviance.glmnet) \"partial_likelihood_deviance\" (see deviance.glmnet). \"roc_curve\" Reported \"two-class\" \"multiclass\" models. ,  tibble provided reporting true-positive rate (tpr) false-positive  rate (fpr) threshold classification use plotting  receiver-operating curve. \"multiclass\" models, \".level\" column  allows separating values roc_curve one ROC can plotted  class. \"confusion_matrix\" Reported \"two-class\" \"multiclass\" models. , tibble provided reporting \"confusion matrix\" classification long-format. \"survival_curves\" Reported \"survival\" models. tibble indicating patient's probability survival (1 - probability(event)) timepoint dataset whether sample placed \"high\" \"low\" risk group according predicted relative risk (tof_model's optimal relative_risk cutoff training dataset).","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assess a trained elastic net model — tof_assess_model","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100)     )  new_tibble <-     dplyr::tibble(         sample = as.character(1:20),         cd45 = runif(n = 20),         pstat5 = runif(n = 20),         cd34 = runif(n = 20),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(20)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  # assess the model on new data tof_assess_model(tof_model = regression_model, new_data = new_tibble) #> $model_metrics #> # A tibble: 2 × 2 #>   metric value #>   <chr>  <dbl> #> 1 mse    0.795 #> 2 mae    0.788 #>"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_new_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute a trained elastic net model's performance metrics using new_data. — tof_assess_model_new_data","title":"Compute a trained elastic net model's performance metrics using new_data. — tof_assess_model_new_data","text":"Compute trained elastic net model's performance metrics using new_data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_new_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute a trained elastic net model's performance metrics using new_data. — tof_assess_model_new_data","text":"","code":"tof_assess_model_new_data(tof_model, new_data)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_new_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute a trained elastic net model's performance metrics using new_data. — tof_assess_model_new_data","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations used evaluate `tof_model`'s performance.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_new_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute a trained elastic net model's performance metrics using new_data. — tof_assess_model_new_data","text":"list performance metrics whose components depend model type.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_tuning.html","id":null,"dir":"Reference","previous_headings":"","what":"Access a trained elastic net model's performance metrics using its tuning data. — tof_assess_model_tuning","title":"Access a trained elastic net model's performance metrics using its tuning data. — tof_assess_model_tuning","text":"Access trained elastic net model's performance metrics using tuning data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_tuning.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Access a trained elastic net model's performance metrics using its tuning data. — tof_assess_model_tuning","text":"","code":"tof_assess_model_tuning(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_tuning.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Access a trained elastic net model's performance metrics using its tuning data. — tof_assess_model_tuning","text":"tof_model `tof_model` trained using tof_train_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_tuning.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Access a trained elastic net model's performance metrics using its tuning data. — tof_assess_model_tuning","text":"list performance metrics whose components depend model type.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct","text":"function performs quantile normalization high-dimensional cytometry data tidy format using either linear rescaling quantile normalization. channel specified `channel_cols` batch corrected, `group_cols` can used break cells groups batch correction performed separately.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct","text":"","code":"tof_batch_correct(   tof_tibble,   channel_cols,   group_cols,   augment = TRUE,   method = c(\"rescale\", \"quantile\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct","text":"tof_tibble `tof_tbl` `tibble`. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. group_cols Optional. Unquoted column names indicating columns used group cells batch correction. Batch correction performed independently within group. Supports tidyselect helpers. augment boolean value indicating output replace `channel_cols` `tof_tibble` new, batch corrected columns (TRUE, default) return batch-corrected columns (FALSE) columns omitted. method string indicating batch correction method used. Valid options \"rescale\" linear scaling (default) \"quantile\" quantile normalization using normalize.quantiles.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct","text":"augment = TRUE, tibble number rows columns tof_tibble, columns specified `channel_cols` batch-corrected. augment = FALSE, tibble containing batch-corrected `channel_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile.html","id":null,"dir":"Reference","previous_headings":"","what":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile","text":"function performs quantile normalization high-dimensional cytometry data tidy format using normalize.quantiles. Optionally, groups can specified normalized separately.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile","text":"","code":"tof_batch_correct_quantile(   tof_tibble,   channel_cols,   group_cols,   augment = TRUE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile","text":"tof_tibble `tof_tbl` `tibble`. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. group_cols Optional. Unquoted column names indicating columns used group cells batch correction. Batch correction performed independently within group. Supports tidyselect helpers. augment boolean value indicating output replace `channel_cols` `tof_tibble` new, batch corrected columns (TRUE, default) return batch-corrected columns (FALSE) columns omitted.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile","text":"augment = TRUE, tibble number rows columns tof_tibble, columns specified `channel_cols` batch-corrected. augment = FALSE, tibble containing batch-corrected `channel_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile_tibble","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile_tibble","text":"function performs quantile normalization high-dimensional cytometry data tidy format using normalize.quantiles.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile_tibble","text":"","code":"tof_batch_correct_quantile_tibble(tof_tibble, channel_cols, augment = TRUE)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile_tibble","text":"tof_tibble `tof_tbl` `tibble`. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. augment boolean value indicating output replace `channel_cols` `tof_tibble` new, batch corrected columns (TRUE, default) return batch-corrected columns (FALSE) columns omitted.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile_tibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile_tibble","text":"augment = TRUE, tibble number rows columns tof_tibble, columns specified `channel_cols` batch-corrected. augment = FALSE, tibble containing batch-corrected `channel_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile_tibble.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile_tibble","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_rescale.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct_rescale","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct_rescale","text":"function performs quantile normalization high-dimensional cytometry data tidy format using linear rescaling. channel specified `channel_cols` rescaled maximum value 1 minimum value 0. `group_cols` specifies columns used break cells groups rescaling performed separately.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_rescale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct_rescale","text":"","code":"tof_batch_correct_rescale(tof_tibble, channel_cols, group_cols, augment = TRUE)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_rescale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct_rescale","text":"tof_tibble `tof_tbl` `tibble`. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. group_cols Optional. Unquoted column names indicating columns used group cells batch correction. Batch correction performed independently within group. Supports tidyselect helpers. augment boolean value indicating output replace `channel_cols` `tof_tibble` new, batch corrected columns (TRUE, default) return batch-corrected columns (FALSE) columns omitted.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_rescale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct_rescale","text":"augment = TRUE, tibble number rows columns tof_tibble, columns specified `channel_cols` batch-corrected. augment = FALSE, tibble containing batch-corrected `channel_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_rescale.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct_rescale","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_build_classifier.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate centroids and covariance matrices for each cell subpopulation in\nhealthy CyTOF data. — tof_build_classifier","title":"Calculate centroids and covariance matrices for each cell subpopulation in\nhealthy CyTOF data. — tof_build_classifier","text":"function takes `tibble` `tof_tibble` storing healthy cell measurements rows vector (`healthy_cell_labels`) representing cell subpopulation cell belongs. uses values calculate several values required perform \"developmental classification\" described paper.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_build_classifier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate centroids and covariance matrices for each cell subpopulation in\nhealthy CyTOF data. — tof_build_classifier","text":"","code":"tof_build_classifier(   healthy_tibble = NULL,   healthy_cell_labels = NULL,   classifier_markers = where(tof_is_numeric),   verbose = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_build_classifier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate centroids and covariance matrices for each cell subpopulation in\nhealthy CyTOF data. — tof_build_classifier","text":"healthy_tibble `tibble` `tof_tibble` containing cells healthy control samples (.e. disease samples). healthy_cell_labels character integer vector length `nrow(healthy_tibble)`. entry vector represent cell subpopulation label (cluster id) corresponding row `healthy_tibble`. classifier_markers Unquoted column names indicating columns `healthy_tibble` use developmental classification. Defaults numeric columns `healthy_tibble`. Supports tidyselect helpers. verbose boolean value indicating updates printed console classification. Defaults FALSE.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_build_classifier.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate centroids and covariance matrices for each cell subpopulation in\nhealthy CyTOF data. — tof_build_classifier","text":"tibble three columns: population (id healthy cell population), centroid (centroid vector cell population), covariance_matrix (covariance matrix cell population)","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_calculate_flow_rate.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the relative flow rates of different timepoints throughout a flow\nor mass cytometry run. — tof_calculate_flow_rate","title":"Calculate the relative flow rates of different timepoints throughout a flow\nor mass cytometry run. — tof_calculate_flow_rate","text":"Calculate relative flow rates different timepoints throughout flow mass cytometry run.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_calculate_flow_rate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the relative flow rates of different timepoints throughout a flow\nor mass cytometry run. — tof_calculate_flow_rate","text":"","code":"tof_calculate_flow_rate(   tof_tibble,   time_col,   num_timesteps = nrow(tof_tibble)/1000 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_calculate_flow_rate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the relative flow rates of different timepoints throughout a flow\nor mass cytometry run. — tof_calculate_flow_rate","text":"tof_tibble `tof_tbl` `tibble`. time_col unquoted column name indicating column `tof_tibble` contains time cell collected. num_timesteps number bins `time_col` split. define \"timesteps\" data collection process. number cells analyzed cytometer counted bin separately represent relative average flow rate timestep data collection.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_calculate_flow_rate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the relative flow rates of different timepoints throughout a flow\nor mass cytometry run. — tof_calculate_flow_rate","text":"tibble 3 columns num_timesteps rows. row represent single timestep (error thrown `num_timesteps` larger number rows `tof_tibble`). three columns follows: \"timestep\", numeric vector indicating timestep represented given row; \"time_window\", factor showing interval `time_col` \"timestep\" defined; \"num_cells\", number cells collected timestep.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_calculate_flow_rate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the relative flow rates of different timepoints throughout a flow\nor mass cytometry run. — tof_calculate_flow_rate","text":"","code":"# simulate some data sim_data <-     data.frame(         cd4 = rnorm(n = 100, mean = 5, sd = 0.5),         cd8 = rnorm(n = 100, mean = 0, sd = 0.1),         cd33 = rnorm(n = 100, mean = 10, sd = 0.1),         time = sample(1:300, size = 100)     )  tof_calculate_flow_rate(tof_tibble = sim_data, time_col = time, num_timesteps = 20L) #>    timestep time_window num_cells #> 1         1 (6.71,21.6]         4 #> 2         2 (21.6,36.2]         6 #> 3         3 (36.2,50.8]         7 #> 4         4 (50.8,65.4]         7 #> 5         5   (65.4,80]         5 #> 6         6   (80,94.6]         4 #> 7         7  (94.6,109]         5 #> 8         8   (109,124]         4 #> 9         9   (124,138]         1 #> 10       10   (138,153]         7 #> 11       11   (153,168]         5 #> 12       12   (168,182]         2 #> 13       13   (182,197]         7 #> 14       14   (197,211]         7 #> 15       15   (211,226]         5 #> 16       16   (226,241]         2 #> 17       17   (241,255]         4 #> 18       18   (255,270]         5 #> 19       19   (270,284]         7 #> 20       20   (284,299]         6"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_check_model_args.html","id":null,"dir":"Reference","previous_headings":"","what":"Check argument specifications for a glmnet model. — tof_check_model_args","title":"Check argument specifications for a glmnet model. — tof_check_model_args","text":"Check argument specifications glmnet model.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_check_model_args.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check argument specifications for a glmnet model. — tof_check_model_args","text":"","code":"tof_check_model_args(   split_data,   model_type = c(\"linear\", \"two-class\", \"multiclass\", \"survival\"),   best_model_type = c(\"best\", \"best with sparsity\"),   response_col,   time_col,   event_col )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_check_model_args.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check argument specifications for a glmnet model. — tof_check_model_args","text":"split_data `rsplit` `rset` object rsample package containing sample-level data use modeling. Alternatively, unsplit tbl_df can provided, though recommended. model_type string indicating kind elastic net model build. continuous response predicted, use \"linear\" linear regression; categorical response 2 classes predicted, use \"two-class\" logistic regression; categorical response 2 levels predicted, use \"multiclass\" multinomial regression; time--event outcome predicted, use \"survival\" Cox regression. best_model_type Currently unused. response_col Unquoted column name indicating column data contained `split_data` used outcome \"two-class\", \"multiclass\", \"linear\" elastic net model. Must factor \"two-class\" \"multiclass\" models must numeric \"linear\" models. Ignored `model_type` \"survival\". time_col Unquoted column name indicating column data contained `split_data` represents time--event outcome \"survival\" elastic net model. Must numeric. Ignored `model_type` \"two-class\", \"multiclass\", \"linear\". event_col Unquoted column name indicating column data contained `split_data` represents time--event outcome \"survival\" elastic net model. Must binary column - values either 0 1 (1 indicating adverse event) FALSE TRUE (TRUE indicating adverse event). Ignored `model_type` \"two-class\", \"multiclass\", \"linear\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_check_model_args.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check argument specifications for a glmnet model. — tof_check_model_args","text":"tibble. arguments specified correctly, tibble can used create recipe preprocessing.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_classify_cells.html","id":null,"dir":"Reference","previous_headings":"","what":"Classify each cell (i.e. each row) in a matrix of cancer cells into its most\nsimilar healthy developmental subpopulation. — tof_classify_cells","title":"Classify each cell (i.e. each row) in a matrix of cancer cells into its most\nsimilar healthy developmental subpopulation. — tof_classify_cells","text":"function uses specified distance metric classify cell data.frame matrix (`cancer_data`) one `nrow(classifier_fit)` subpopulations based minimum distance, described paper.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_classify_cells.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Classify each cell (i.e. each row) in a matrix of cancer cells into its most\nsimilar healthy developmental subpopulation. — tof_classify_cells","text":"","code":"tof_classify_cells(   classifier_fit,   cancer_data,   distance_function = c(\"mahalanobis\", \"cosine\", \"pearson\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_classify_cells.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Classify each cell (i.e. each row) in a matrix of cancer cells into its most\nsimilar healthy developmental subpopulation. — tof_classify_cells","text":"classifier_fit tibble produced tof_build_classifier. cancer_data matrix row corresponds cell column corresponds measured CyTOF antigen. distance_function string indicating three distance functions used calculate distances row `cancer_data` healthy developmental subpopulations corresponding row `classifier_fit`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_classify_cells.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Classify each cell (i.e. each row) in a matrix of cancer cells into its most\nsimilar healthy developmental subpopulation. — tof_classify_cells","text":"data.frame column represents distance cell input data healthy subpopulation cells classified .","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_clean_metric_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename glmnet's default model evaluation metrics to make them more interpretable — tof_clean_metric_names","title":"Rename glmnet's default model evaluation metrics to make them more interpretable — tof_clean_metric_names","text":"Rename glmnet's default model evaluation metrics make interpretable","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_clean_metric_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename glmnet's default model evaluation metrics to make them more interpretable — tof_clean_metric_names","text":"","code":"tof_clean_metric_names(metric_tibble, model_type)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_clean_metric_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename glmnet's default model evaluation metrics to make them more interpretable — tof_clean_metric_names","text":"metric_tibble tibble column represents glmnet model evaluation metric default name. model_type string indicating type glmnet model trained.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_clean_metric_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename glmnet's default model evaluation metrics to make them more interpretable — tof_clean_metric_names","text":"tibble column represents glmnet model evaluation metric \"cleaned\" name.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster high-dimensional cytometry data. — tof_cluster","title":"Cluster high-dimensional cytometry data. — tof_cluster","text":"function wrapper around tidytof's tof_cluster_* function family. performs clustering high-dimensional cytometry data using user-specified method (5 choices) method's corresponding input parameters.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster high-dimensional cytometry data. — tof_cluster","text":"","code":"tof_cluster(   tof_tibble,   cluster_cols = where(tof_is_numeric),   group_cols = NULL,   ...,   augment = TRUE,   method )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster high-dimensional cytometry data. — tof_cluster","text":"tof_tibble `tof_tbl` `tibble`. cluster_cols Unquoted column names indicating columns `tof_tibble` use computing clusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. group_cols Optional. Unquoted column names indicating columns used group cells clustering. Clustering performed group independently. Supports tidyselect helpers. ... Additional arguments pass `tof_cluster_*` function family member corresponding chosen method. augment boolean value indicating output column-bind cluster ids cell new column `tof_tibble` (TRUE, default) single-column tibble including cluster ids returned (FALSE). method string indicating clustering methods used. Valid values include \"flowsom\", \"phenograph\", \"kmeans\", \"ddpr\", \"xshift\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cluster high-dimensional cytometry data. — tof_cluster","text":"`tof_tbl` `tibble` augment = FALSE, single column encoding cluster ids cell `tof_tibble`. augment = TRUE, ncol(tof_tibble) + 1 columns: (unaltered) columns `tof_tibble` plus additional column encoding cluster ids.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cluster high-dimensional cytometry data. — tof_cluster","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 500),         cd38 = rnorm(n = 500),         cd34 = rnorm(n = 500),         cd19 = rnorm(n = 500)     )  tof_cluster(tof_tibble = sim_data, method = \"kmeans\") #> # A tibble: 500 × 5 #>      cd45   cd38   cd34   cd19 .kmeans_cluster #>     <dbl>  <dbl>  <dbl>  <dbl> <chr>           #>  1  1.33  -0.447  1.50   0.436 11              #>  2 -1.20  -0.481 -0.391 -1.54  9               #>  3 -0.541  0.666 -1.68  -0.986 16              #>  4 -1.22   1.32   0.689 -0.791 10              #>  5  0.639  0.519 -1.32  -0.204 18              #>  6 -0.239  0.397 -0.780  0.372 1               #>  7  0.651  0.997 -0.665  0.805 18              #>  8  0.788  1.26   0.584 -0.953 19              #>  9 -0.344  0.388 -0.407 -0.442 13              #> 10  0.120  0.885 -2.26   0.583 17              #> # ℹ 490 more rows tof_cluster(tof_tibble = sim_data, method = \"phenograph\") #> # A tibble: 500 × 5 #>      cd45   cd38   cd34   cd19 .phenograph_cluster #>     <dbl>  <dbl>  <dbl>  <dbl> <chr>               #>  1  1.33  -0.447  1.50   0.436 2                   #>  2 -1.20  -0.481 -0.391 -1.54  1                   #>  3 -0.541  0.666 -1.68  -0.986 1                   #>  4 -1.22   1.32   0.689 -0.791 3                   #>  5  0.639  0.519 -1.32  -0.204 5                   #>  6 -0.239  0.397 -0.780  0.372 5                   #>  7  0.651  0.997 -0.665  0.805 4                   #>  8  0.788  1.26   0.584 -0.953 8                   #>  9 -0.344  0.388 -0.407 -0.442 1                   #> 10  0.120  0.885 -2.26   0.583 5                   #> # ℹ 490 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_ddpr.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform developmental clustering on high-dimensional cytometry data. — tof_cluster_ddpr","title":"Perform developmental clustering on high-dimensional cytometry data. — tof_cluster_ddpr","text":"function performs distance-based clustering high-dimensional cytometry data sorting cancer cells (passed function `tof_tibble`) phenotypically similar healthy cell subpopulation (passed function using `healthy_tibble`). details algorithm used perform clustering, see paper.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_ddpr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform developmental clustering on high-dimensional cytometry data. — tof_cluster_ddpr","text":"","code":"tof_cluster_ddpr(   tof_tibble,   healthy_tibble,   healthy_label_col,   cluster_cols = where(tof_is_numeric),   distance_function = c(\"mahalanobis\", \"cosine\", \"pearson\"),   num_cores = 1L,   parallel_cols,   return_distances = FALSE,   verbose = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_ddpr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform developmental clustering on high-dimensional cytometry data. — tof_cluster_ddpr","text":"tof_tibble `tibble` `tof_tbl` containing cells classified nearest healthy subpopulation (generally cancer cells). healthy_tibble `tibble` `tof_tibble` containing cells healthy control samples (.e. disease samples). healthy_label_col unquoted column name indicating column `healthy_tibble` contains subpopulation label (cluster id) cell `healthy_tibble`. cluster_cols Unquoted column names indicating columns `tof_tibble` use computing DDPR clusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. distance_function string indicating distance function used perform classification. Options \"mahalanobis\" (default), \"cosine\", \"pearson\". num_cores integer indicating number CPU cores used parallelize classification. Defaults 1 (single core). parallel_cols Optional. Unquoted column names indicating columns `tof_tibble` use breaking data order parallelize classification using `foreach` `doParallel` backend. Supports tidyselect helpers. return_distances boolean value indicating whether returned result include one column, cluster ids corresponding row `tof_tibble` (return_distances = FALSE, default), returned result include additional columns representing distance row `tof_tibble` healthy subpopulation centroids (return_distances = TRUE). verbose boolean value indicating whether progress updates printed developmental classification. Default FALSE.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_ddpr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform developmental clustering on high-dimensional cytometry data. — tof_cluster_ddpr","text":"`return_distances = FALSE`, tibble one column named `.distance_function_cluster`, character vector length `nrow(tof_tibble)` indicating id developmental cluster cell (.e. row) `tof_tibble` assigned. `return_distances = TRUE`, tibble `nrow(tof_tibble)` rows `nrow(classifier_fit) + 1` columns. row represents cell `tof_tibble`, `nrow(classifier_fit)` columns represent distance cell healthy subpopulations' cluster centroids. final column represents cluster id healthy subpopulation minimum distance cell represented row. `return_distances = FALSE`, tibble one column named `.distance_function_cluster`. column contain integer vector length `nrow(tof_tibble)` indicating id developmental cluster cell (.e. row) `tof_tibble` assigned.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_ddpr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform developmental clustering on high-dimensional cytometry data. — tof_cluster_ddpr","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  healthy_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200),         cluster_id = c(rep(\"a\", times = 100), rep(\"b\", times = 100))     )  tof_cluster_ddpr(     tof_tibble = sim_data,     healthy_tibble = healthy_data,     healthy_label_col = cluster_id ) #> # A tibble: 1,000 × 1 #>    .mahalanobis_cluster #>    <chr>                #>  1 b                    #>  2 b                    #>  3 b                    #>  4 a                    #>  5 b                    #>  6 b                    #>  7 b                    #>  8 a                    #>  9 a                    #> 10 b                    #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_flowsom.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","title":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","text":"function performs FlowSOM clustering high-dimensional cytometry data using user-specified selection input variables/high-dimensional cytometry measurements. mostly convenient wrapper around SOM MetaClustering.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_flowsom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","text":"","code":"tof_cluster_flowsom(   tof_tibble = NULL,   cluster_cols = where(tof_is_numeric),   som_xdim = 10,   som_ydim = 10,   som_distance_function = c(\"euclidean\", \"manhattan\", \"chebyshev\", \"cosine\"),   perform_metaclustering = TRUE,   num_metaclusters = 20,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_flowsom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","text":"tof_tibble `tof_tbl` `tibble`. cluster_cols Unquoted column names indicating columns `tof_tibble` use computing flowSOM clusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. som_xdim width grid used self-organizing map. total number clusters returned FlowSOM som_xdim * som_ydim, adjust value affect final number clusters. Defaults 10. som_ydim height grid used self-organizing map. total number clusters returned FlowSOM som_xdim * som_ydim, adjust value affect final number clusters. Defaults 10. som_distance_function distance function used self-organizing map calculations. Options \"euclidean\" (default), \"manhattan\", \"chebyshev\", \"cosine\". perform_metaclustering boolean value indicating metaclustering performed initial clustering result returned FlowSOM. Defaults TRUE. num_metaclusters integer indicating maximum number metaclusters returned metaclustering. Defaults 20. ... Optional additional parameters can passed BuildSOM function.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_flowsom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","text":"tibble one column named `.flowsom_cluster` `.flowsom_metacluster` depending value `perform_metaclustering`. column contain integer vector length `nrow(tof_tibble)` indicating id flowSOM cluster cell (.e. row) `tof_tibble` assigned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_flowsom.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","text":"additional details FlowSOM algorithm, see paper.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_flowsom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200)     )  tof_cluster_flowsom(tof_tibble = sim_data, cluster_cols = c(cd45, cd19)) #> # A tibble: 200 × 1 #>    .flowsom_metacluster #>    <chr>                #>  1 10                   #>  2 10                   #>  3 8                    #>  4 5                    #>  5 10                   #>  6 15                   #>  7 6                    #>  8 8                    #>  9 15                   #> 10 2                    #> # ℹ 190 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_grouped.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster (grouped) high-dimensional cytometry data. — tof_cluster_grouped","title":"Cluster (grouped) high-dimensional cytometry data. — tof_cluster_grouped","text":"function wrapper around tidytof's tof_cluster_* function family provides low-level API clustering grouped data frames. subroutine tof_cluster called directly users.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_grouped.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster (grouped) high-dimensional cytometry data. — tof_cluster_grouped","text":"","code":"tof_cluster_grouped(tof_tibble, group_cols, ..., augment = TRUE, method)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_grouped.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster (grouped) high-dimensional cytometry data. — tof_cluster_grouped","text":"tof_tibble `tof_tbl` `tibble`. group_cols unquoted column name indicating columns used group cells clustering. Clustering performed group independently. ... Additional arguments pass `tof_cluster_*` function family member corresponding chosen method. augment boolean value indicating output column-bind cluster ids cell new column `tof_tibble` (TRUE, default) single-column tibble including cluster ids returned (FALSE). method string indicating clustering methods used. Valid values include \"flowsom\", \"phenograph\", \"kmeans\", \"ddpr\", \"xshift\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_grouped.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cluster (grouped) high-dimensional cytometry data. — tof_cluster_grouped","text":"`tof_tbl` `tibble` augment = FALSE, single column encoding cluster ids cell `tof_tibble`. augment = TRUE, ncol(tof_tibble) + 1 columns: (unaltered) columns `tof_tibble` plus additional column encoding cluster ids.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_kmeans.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform k-means clustering on high-dimensional cytometry data. — tof_cluster_kmeans","title":"Perform k-means clustering on high-dimensional cytometry data. — tof_cluster_kmeans","text":"function performs k-means clustering high-dimensional cytometry data using user-specified selection input variables/high-dimensional cytometry measurements. mostly convenient wrapper around kmeans.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_kmeans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform k-means clustering on high-dimensional cytometry data. — tof_cluster_kmeans","text":"","code":"tof_cluster_kmeans(   tof_tibble,   cluster_cols = where(tof_is_numeric),   num_clusters = 20,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_kmeans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform k-means clustering on high-dimensional cytometry data. — tof_cluster_kmeans","text":"tof_tibble `tof_tibble`. cluster_cols Unquoted column names indicating columns `tof_tibble` use computing k-means clusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. num_clusters integer indicating maximum number clusters returned. Defaults 20. ... Optional additional arguments can passed kmeans.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_kmeans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform k-means clustering on high-dimensional cytometry data. — tof_cluster_kmeans","text":"tibble one column named `.kmeans_cluster`. column contain integer vector length `nrow(tof_tibble)` indicating id k-means cluster cell (.e. row) `tof_tibble` assigned.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_kmeans.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform k-means clustering on high-dimensional cytometry data. — tof_cluster_kmeans","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     ) tof_cluster_kmeans(tof_tibble = sim_data) #> # A tibble: 1,000 × 1 #>    .kmeans_cluster #>    <chr>           #>  1 19              #>  2 2               #>  3 7               #>  4 9               #>  5 16              #>  6 9               #>  7 12              #>  8 6               #>  9 20              #> 10 5               #> # ℹ 990 more rows tof_cluster_kmeans(tof_tibble = sim_data, cluster_cols = c(cd45, cd19)) #> # A tibble: 1,000 × 1 #>    .kmeans_cluster #>    <chr>           #>  1 14              #>  2 15              #>  3 1               #>  4 3               #>  5 7               #>  6 1               #>  7 11              #>  8 7               #>  9 13              #> 10 18              #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_phenograph.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","title":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","text":"function performs PhenoGraph clustering high-dimensional cytometry data using user-specified selection input variables/high-dimensional cytometry measurements.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_phenograph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","text":"","code":"tof_cluster_phenograph(   tof_tibble,   cluster_cols = where(tof_is_numeric),   num_neighbors = 30,   distance_function = c(\"euclidean\", \"cosine\"),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_phenograph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","text":"tof_tibble `tof_tbl` `tibble`. cluster_cols Unquoted column names indicating columns `tof_tibble` use computing PhenoGraph clusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. num_neighbors integer indicating number neighbors use constructing PhenoGraph's k-nearest-neighbor graph. Smaller values emphasize local graph structure; larger values emphasize global graph structure (add time computation). Defaults 30. distance_function string indicating distance function use nearest-neighbor calculation. Options include \"euclidean\" (default) \"cosine\" distances. ... Optional additional parameters can passed tof_find_knn.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_phenograph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","text":"tibble one column named `.phenograph_cluster`. column contain integer vector length `nrow(tof_tibble)` indicating id PhenoGraph cluster cell (.e. row) `tof_tibble` assigned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_phenograph.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","text":"additional details Phenograph algorithm, see paper.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_phenograph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     ) tof_cluster_phenograph(tof_tibble = sim_data) #> # A tibble: 1,000 × 1 #>    .phenograph_cluster #>    <chr>               #>  1 5                   #>  2 4                   #>  3 7                   #>  4 5                   #>  5 2                   #>  6 4                   #>  7 8                   #>  8 2                   #>  9 9                   #> 10 8                   #> # ℹ 990 more rows tof_cluster_phenograph(tof_tibble = sim_data, cluster_cols = c(cd45, cd19)) #> # A tibble: 1,000 × 1 #>    .phenograph_cluster #>    <chr>               #>  1 12                  #>  2 2                   #>  3 3                   #>  4 13                  #>  5 1                   #>  6 4                   #>  7 11                  #>  8 6                   #>  9 7                   #> 10 2                   #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster (ungrouped) high-dimensional cytometry data. — tof_cluster_tibble","title":"Cluster (ungrouped) high-dimensional cytometry data. — tof_cluster_tibble","text":"function wrapper around tidytof's tof_cluster_* function family provides low-level API clustering ungrouped data frames. subroutine tof_cluster called directly users.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster (ungrouped) high-dimensional cytometry data. — tof_cluster_tibble","text":"","code":"tof_cluster_tibble(tof_tibble, ..., augment = TRUE, method)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster (ungrouped) high-dimensional cytometry data. — tof_cluster_tibble","text":"tof_tibble `tof_tbl` `tibble`. ... Additional arguments pass `tof_cluster_*` function family member corresponding chosen method. augment boolean value indicating output column-bind cluster ids cell new column `tof_tibble` (TRUE, default) single-column tibble including cluster ids returned (FALSE). method string indicating clustering methods used. Valid values include \"flowsom\", \"phenograph\", \"kmeans\", \"ddpr\", \"xshift\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_tibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cluster (ungrouped) high-dimensional cytometry data. — tof_cluster_tibble","text":"`tof_tbl` `tibble` augment = FALSE, single column encoding cluster ids cell `tof_tibble`. augment = TRUE, ncol(tof_tibble) + 1 columns: (unaltered) columns `tof_tibble` plus additional column encoding cluster ids.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_compute_km_curve.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute a Kaplan-Meier curve from sample-level survival data — tof_compute_km_curve","title":"Compute a Kaplan-Meier curve from sample-level survival data — tof_compute_km_curve","text":"Compute Kaplan-Meier curve sample-level survival data","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_compute_km_curve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute a Kaplan-Meier curve from sample-level survival data — tof_compute_km_curve","text":"","code":"tof_compute_km_curve(survival_curves)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_compute_km_curve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute a Kaplan-Meier curve from sample-level survival data — tof_compute_km_curve","text":"survival_curves tibble Kaplan-Meier curve computed. row must represent observation must two columns named \"time_to_event\" \"event\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_compute_km_curve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute a Kaplan-Meier curve from sample-level survival data — tof_compute_km_curve","text":"tibble 3 columns: time_to_event, survival_probability, is_censored (whether event censored timepoint).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cosine_dist.html","id":null,"dir":"Reference","previous_headings":"","what":"A function for finding the cosine distance between each of the rows of a numeric\nmatrix and a numeric vector. — tof_cosine_dist","title":"A function for finding the cosine distance between each of the rows of a numeric\nmatrix and a numeric vector. — tof_cosine_dist","text":"function finding cosine distance rows numeric matrix numeric vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cosine_dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function for finding the cosine distance between each of the rows of a numeric\nmatrix and a numeric vector. — tof_cosine_dist","text":"","code":"tof_cosine_dist(matrix, vector)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cosine_dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function for finding the cosine distance between each of the rows of a numeric\nmatrix and a numeric vector. — tof_cosine_dist","text":"matrix numeric matrix. vector numeric vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cosine_dist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function for finding the cosine distance between each of the rows of a numeric\nmatrix and a numeric vector. — tof_cosine_dist","text":"numeric vector distances length `nrow(matrix)` ith entry represents cosine distance ith row `matrix` `vector`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cosine_dist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A function for finding the cosine distance between each of the rows of a numeric\nmatrix and a numeric vector. — tof_cosine_dist","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an elastic net hyperparameter search grid of a specified size — tof_create_grid","title":"Create an elastic net hyperparameter search grid of a specified size — tof_create_grid","text":"function creates regular hyperparameter search grid (form tibble) specifying search space two hyperparameters generalized linear model using glmnet package: regularization penalty term lasso/ridge regression mixture term.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an elastic net hyperparameter search grid of a specified size — tof_create_grid","text":"","code":"tof_create_grid(   penalty_values,   mixture_values,   num_penalty_values = 5,   num_mixture_values = 5 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an elastic net hyperparameter search grid of a specified size — tof_create_grid","text":"penalty_values numeric vector unique elastic net penalty values (\"lambda\") include hyperparameter grid. unspecified, regular grid `num_penalty_values` 10^(-10) 10^(0) used. mixture_values numeric vector elastic net mixture values (\"alpha\") include hyperparameter grid. unspecified, regular grid `num_mixture_values` 0 1 used. num_penalty_values Optional. `penalty_values` supplied, `num_penalty_values` (integer) can given specify many equally-spaced penalty values 10^(-10) 1 included hyperparameter grid. method used, regular grid always returned. Defaults 5. num_mixture_values Optional. `mixture_values` supplied, `num_mixture_values` (integer) can given specify many equally-spaced penalty values 0 (ridge regression) 1 (lasso) included hyperparameter grid. method used, regular grid always returned. Defaults 5.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an elastic net hyperparameter search grid of a specified size — tof_create_grid","text":"tibble two numeric columns: `penalty` `mixture`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_grid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an elastic net hyperparameter search grid of a specified size — tof_create_grid","text":"","code":"tof_create_grid() #> # A tibble: 25 × 2 #>         penalty mixture #>           <dbl>   <dbl> #>  1 0.0000000001    0    #>  2 0.0000000001    0.25 #>  3 0.0000000001    0.5  #>  4 0.0000000001    0.75 #>  5 0.0000000001    1    #>  6 0.0000000316    0    #>  7 0.0000000316    0.25 #>  8 0.0000000316    0.5  #>  9 0.0000000316    0.75 #> 10 0.0000000316    1    #> # ℹ 15 more rows  tof_create_grid(num_penalty_values = 10, num_mixture_values = 5) #> # A tibble: 50 × 2 #>          penalty mixture #>            <dbl>   <dbl> #>  1 0.0000000001     0    #>  2 0.0000000001     0.25 #>  3 0.0000000001     0.5  #>  4 0.0000000001     0.75 #>  5 0.0000000001     1    #>  6 0.00000000129    0    #>  7 0.00000000129    0.25 #>  8 0.00000000129    0.5  #>  9 0.00000000129    0.75 #> 10 0.00000000129    1    #> # ℹ 40 more rows  tof_create_grid(penalty_values = c(0.01, 0.1, 0.5)) #> # A tibble: 15 × 2 #>    penalty mixture #>      <dbl>   <dbl> #>  1    0.01    0    #>  2    0.01    0.25 #>  3    0.01    0.5  #>  4    0.01    0.75 #>  5    0.01    1    #>  6    0.1     0    #>  7    0.1     0.25 #>  8    0.1     0.5  #>  9    0.1     0.75 #> 10    0.1     1    #> 11    0.5     0    #> 12    0.5     0.25 #> 13    0.5     0.5  #> 14    0.5     0.75 #> 15    0.5     1"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_recipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a recipe for preprocessing sample-level cytometry data for an elastic net model — tof_create_recipe","title":"Create a recipe for preprocessing sample-level cytometry data for an elastic net model — tof_create_recipe","text":"Create recipe preprocessing sample-level cytometry data elastic net model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_recipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a recipe for preprocessing sample-level cytometry data for an elastic net model — tof_create_recipe","text":"","code":"tof_create_recipe(   feature_tibble,   predictor_cols,   outcome_cols,   standardize_predictors = TRUE,   remove_zv_predictors = FALSE,   impute_missing_predictors = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_recipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a recipe for preprocessing sample-level cytometry data for an elastic net model — tof_create_recipe","text":"feature_tibble tibble row represents sample- patient- level observation, produced tof_extract_features. predictor_cols Unquoted column names indicating columns data contained `feature_tibble` used predictors elastic net model. Supports tidyselect helpers. outcome_cols Unquoted column names indicating columns `feature_tibble` used outcome variables elastic net model. Supports tidyselect helpers. standardize_predictors logical value indicating numeric predictor columns standardized (centered scaled) model fitting. Defaults TRUE. remove_zv_predictors logical value indicating predictor columns near-zero variance removed model fitting using step_nzv. Defaults FALSE. impute_missing_predictors logical value indicating predictor columns missing values imputed using k-nearest neighbors model fitting (see step_impute_knn). Imputation performed using observation's 5 nearest-neighbors. Defaults FALSE.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_recipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a recipe for preprocessing sample-level cytometry data for an elastic net model — tof_create_recipe","text":"recipe object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample.html","id":null,"dir":"Reference","previous_headings":"","what":"Downsample high-dimensional cytometry data. — tof_downsample","title":"Downsample high-dimensional cytometry data. — tof_downsample","text":"function downsamples number cells `tof_tbl` using one three methods (randomly sampling constant number cells, randomly sampling proportion cells, performing density-dependent downsampling per algorithm Qiu et al., (2011)).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downsample high-dimensional cytometry data. — tof_downsample","text":"","code":"tof_downsample(   tof_tibble,   group_cols = NULL,   ...,   method = c(\"constant\", \"prop\", \"density\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downsample high-dimensional cytometry data. — tof_downsample","text":"tof_tibble `tof_tbl` `tibble`. group_cols Unquoted names columns `tof_tibble` used define groups within downsampling performed. Supports tidyselect helpers. Defaults `NULL` (grouping). ... Additional arguments pass `tof_downsample_*` function family member corresponding chosen method. method string indicating downsampling method use: \"constant\" (default), \"prop\", \"density\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downsample high-dimensional cytometry data. — tof_downsample","text":"downsampled `tof_tbl` number columns input `tof_tibble`, fewer rows. number rows result depend chosen downsampling method.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downsample high-dimensional cytometry data. — tof_downsample","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  # sample 200 cells from the input data tof_downsample(     tof_tibble = sim_data,     num_cells = 200L,     method = \"constant\" ) #> # A tibble: 200 × 5 #>      cd45   cd38    cd34   cd19 cluster_id #>     <dbl>  <dbl>   <dbl>  <dbl> <chr>      #>  1 -0.292 -1.10   0.340   1.15  e          #>  2 -0.378  1.38   0.906  -0.164 k          #>  3  1.29   0.256  0.0708  1.37  q          #>  4 -1.12   0.303 -0.0239 -0.775 z          #>  5  2.73  -0.508 -0.0723 -0.664 d          #>  6 -0.151 -1.05  -1.40    0.301 e          #>  7 -1.14   0.727 -0.364  -0.856 t          #>  8 -1.68   0.542  0.257   0.548 l          #>  9 -1.71   2.03  -0.988  -0.963 m          #> 10  0.318 -1.76  -0.333  -0.961 b          #> # ℹ 190 more rows  # sample 10% of all cells from the input data tof_downsample(     tof_tibble = sim_data,     prop_cells = 0.1,     method = \"prop\" ) #> # A tibble: 100 × 5 #>       cd45   cd38   cd34   cd19 cluster_id #>      <dbl>  <dbl>  <dbl>  <dbl> <chr>      #>  1  0.359   1.17  -1.27   1.48  t          #>  2  0.967   0.100  1.01  -0.130 y          #>  3  0.619  -2.03   0.349 -0.928 e          #>  4 -0.508  -1.63  -0.430  0.503 w          #>  5  1.15   -1.55   0.421 -0.303 p          #>  6  2.56    0.255  1.11  -0.317 u          #>  7 -0.0824  2.30  -0.305  1.16  h          #>  8  0.461  -0.426 -0.751  0.794 l          #>  9  0.0949  1.77   0.554 -1.07  j          #> 10 -0.0741  0.334  0.197 -0.639 x          #> # ℹ 90 more rows  # sample ~10% of cells from the input data using density dependence tof_downsample(     tof_tibble = sim_data,     target_prop_cells = 0.1,     method = \"density\" ) #> # A tibble: 102 × 5 #>       cd45    cd38   cd34    cd19 cluster_id #>      <dbl>   <dbl>  <dbl>   <dbl> <chr>      #>  1 -0.955  -0.547  -1.24  -0.238  x          #>  2 -0.688   0.193  -1.82  -0.866  h          #>  3  1.06    0.257   0.429 -0.0198 c          #>  4  0.103   2.06    0.578 -0.348  h          #>  5  0.0621 -0.0855  0.235 -0.452  s          #>  6 -0.920  -2.03    1.38   1.29   k          #>  7  0.987  -1.78    0.139  0.242  n          #>  8 -0.813   0.239   0.301  0.748  q          #>  9 -0.298  -0.189   1.01  -1.53   d          #> 10  0.143   0.0555  1.45   0.178  o          #> # ℹ 92 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_constant.html","id":null,"dir":"Reference","previous_headings":"","what":"Downsample high-dimensional cytometry data by randomly selecting a constant number of cells per group. — tof_downsample_constant","title":"Downsample high-dimensional cytometry data by randomly selecting a constant number of cells per group. — tof_downsample_constant","text":"function downsamples number cells `tof_tbl` randomly selecting `num_cells` cells unique combination values `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_constant.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downsample high-dimensional cytometry data by randomly selecting a constant number of cells per group. — tof_downsample_constant","text":"","code":"tof_downsample_constant(tof_tibble, group_cols = NULL, num_cells)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_constant.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downsample high-dimensional cytometry data by randomly selecting a constant number of cells per group. — tof_downsample_constant","text":"tof_tibble `tof_tbl` `tibble`. group_cols Unquoted names columns `tof_tibble` used define groups `num_cells` downsampled. Supports tidyselect helpers. Defaults `NULL` (grouping). num_cells integer number cells sampled group defined `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_constant.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downsample high-dimensional cytometry data by randomly selecting a constant number of cells per group. — tof_downsample_constant","text":"`tof_tbl` number columns input `tof_tibble`, fewer rows. Specifically, number rows `num_cells` multiplied number unique combinations values `group_cols`. group fewer `num_cells` number cells, cells group kept.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_constant.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downsample high-dimensional cytometry data by randomly selecting a constant number of cells per group. — tof_downsample_constant","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  # sample 500 cells from the input data tof_downsample_constant(     tof_tibble = sim_data,     num_cells = 500L ) #> # A tibble: 500 × 5 #>      cd45    cd38    cd34    cd19 cluster_id #>     <dbl>   <dbl>   <dbl>   <dbl> <chr>      #>  1  2.63   0.798   2.15    1.14   g          #>  2  0.275  0.0229  1.83   -0.583  x          #>  3  0.846  0.366   0.100  -0.792  u          #>  4 -0.116  1.25   -0.178   0.311  y          #>  5 -0.526 -0.806   0.242  -1.09   z          #>  6  0.636  0.568  -0.383   2.16   a          #>  7  0.668 -0.654   0.832  -0.0664 u          #>  8  1.07   1.71    0.700  -1.11   d          #>  9  1.16   0.0494 -0.0625  0.482  q          #> 10 -0.442 -0.908  -0.0871 -1.09   w          #> # ℹ 490 more rows  # sample 20 cells per cluster from the input data tof_downsample_constant(     tof_tibble = sim_data,     group_cols = cluster_id,     num_cells = 20L ) #> # A tibble: 520 × 5 #>      cd45    cd38   cd34    cd19 cluster_id #>     <dbl>   <dbl>  <dbl>   <dbl> <chr>      #>  1  0.275  0.0229  1.83  -0.583  x          #>  2  0.846  0.366   0.100 -0.792  u          #>  3 -0.116  1.25   -0.178  0.311  y          #>  4 -0.272 -0.772  -0.795  1.24   l          #>  5  0.824 -1.70   -0.197 -2.87   i          #>  6  0.668 -0.654   0.832 -0.0664 u          #>  7 -1.82  -0.423  -0.760 -0.747  i          #>  8  1.07   1.71    0.700 -1.11   d          #>  9 -0.818 -0.388   0.537 -0.209  m          #> 10 -0.209  1.27    1.04  -0.780  z          #> # ℹ 510 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_density","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_density","text":"function downsamples number cells `tof_tbl` using density-dependent downsampling algorithm described Qiu et al., (2011).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_density","text":"","code":"tof_downsample_density(   tof_tibble,   group_cols = NULL,   density_cols = where(tof_is_numeric),   target_num_cells,   target_prop_cells,   target_percentile = 0.03,   outlier_percentile = 0.01,   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\"),   density_estimation_method = c(\"mean_distance\", \"sum_distance\", \"spade\"),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_density","text":"tof_tibble `tof_tbl` `tibble`. group_cols Unquoted names columns `tof_tibble` used define groups within downsampling performed. Supports tidyselect helpers. Defaults `NULL` (grouping). density_cols Unquoted names columns `tof_tibble` use density estimation cell. Defaults numeric columns `tof_tibble`. target_num_cells approximate constant number cells (0 1) sampled group defined `group_cols`. Slightly fewer cells may returned due density calculation performed. target_prop_cells approximate proportion cells (0 1) sampled group defined `group_cols`. Slightly fewer cells may returned due density calculation performed. Ignored `target_num_cells` specified. target_percentile local density percentile (.e. value 0 1) downsampling procedure adjust cells. short, algorithm continue remove cells input `tof_tibble` local densities remaining cells equal `target_percentile`. Lower values result cells removed. See Qiu et al., (2011) details. Defaults 0.1 (10th percentile local densities). Ignored either `target_num_cells` `target_prop_cells` specified. outlier_percentile local density percentile (.e. value 0 1) cells considered outliers (discarded). Cells local density `outlier_percentile` never selected downsampling procedure. Defaults 0.01 (cells 1st local density percentile removed). distance_function string indicating distance function use cell--cell distance calculations. Options include \"euclidean\" (default) \"cosine\" distances. density_estimation_method string indicating algorithm used calculate local density estimate cell. Options include k-nearest neighbor density estimation using mean distance cell's k-nearest neighbors (\"mean_distance\"; default), k-nearest neighbor density estimation using summed distance cell's k nearest neighbors (\"sum_distance\") counting number neighboring cells within spherical radius around cell described Qiu et al., 2011  (\"spade\"). \"spade\" often produces best results, slower knn-density estimation methods. ... Optional additional arguments pass tof_knn_density tof_spade_density.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_density","text":"`tof_tbl` number columns input `tof_tibble`, fewer rows. number rows depend chosen value `target_percentile`, fewer cells selected lower values `target_percentile`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_density","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  tof_downsample_density(     tof_tibble = sim_data,     density_cols = c(cd45, cd34, cd38),     target_prop_cells = 0.5,     density_estimation_method = \"spade\" ) #> # A tibble: 492 × 4 #>        cd45    cd38    cd34   cd19 #>       <dbl>   <dbl>   <dbl>  <dbl> #>  1 -0.00922  0.925   1.72    0.911 #>  2  1.45    -1.12    0.0259  0.420 #>  3 -1.90     0.678  -0.356  -0.374 #>  4 -0.315   -0.0708  0.345   1.71  #>  5 -1.38    -0.595  -0.0843  0.149 #>  6  1.17    -0.940  -0.261  -1.35  #>  7  0.655   -1.64    1.55   -0.620 #>  8  0.0284  -2.02   -0.784  -0.384 #>  9  0.194   -2.30   -0.891  -1.28  #> 10  0.923   -0.169  -1.91   -0.119 #> # ℹ 482 more rows  tof_downsample_density(     tof_tibble = sim_data,     density_cols = c(cd45, cd34, cd38),     target_num_cells = 200L,     density_estimation_method = \"spade\" ) #> # A tibble: 203 × 4 #>      cd45    cd38    cd34   cd19 #>     <dbl>   <dbl>   <dbl>  <dbl> #>  1 -1.90   0.678  -0.356  -0.374 #>  2  0.392  0.0924 -0.482  -0.601 #>  3 -0.265 -0.806   2.92   -0.998 #>  4 -0.928  1.06    0.119  -0.116 #>  5 -1.43   1.33   -0.527   0.308 #>  6  1.32  -0.401   0.562   0.411 #>  7  0.405  1.10   -0.180  -0.734 #>  8 -0.451  0.885   0.350   1.43  #>  9  0.626 -2.22    0.0880  1.44  #> 10 -0.515 -1.63   -1.32   -0.516 #> # ℹ 193 more rows  tof_downsample_density(     tof_tibble = sim_data,     density_cols = c(cd45, cd34, cd38),     target_num_cells = 200L,     density_estimation_method = \"mean_distance\" ) #> # A tibble: 192 × 4 #>        cd45    cd38   cd34    cd19 #>       <dbl>   <dbl>  <dbl>   <dbl> #>  1 -0.00922  0.925   1.72   0.911  #>  2 -1.08    -0.607  -1.53  -0.0512 #>  3  1.17    -0.940  -0.261 -1.35   #>  4  0.194   -2.30   -0.891 -1.28   #>  5 -0.113    0.549   0.741 -0.337  #>  6 -0.0592  -0.929  -0.832  0.950  #>  7  0.418   -0.725   1.99   1.27   #>  8 -1.27    -1.68    1.43  -0.403  #>  9  0.952    0.623  -0.736  0.773  #> 10 -0.103    0.0618 -0.374  1.17   #> # ℹ 182 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_prop.html","id":null,"dir":"Reference","previous_headings":"","what":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_prop","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_prop","text":"function downsamples number cells `tof_tbl` randomly selecting `prop_cells` proportion total number cells unique combination values `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_prop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_prop","text":"","code":"tof_downsample_prop(tof_tibble, group_cols = NULL, prop_cells)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_prop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_prop","text":"tof_tibble `tof_tbl` `tibble`. group_cols Unquoted names columns `tof_tibble` used define groups `prop_cells` downsampled. Supports tidyselect helpers. Defaults `NULL` (grouping). prop_cells proportion cells (0 1) sampled group defined `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_prop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_prop","text":"`tof_tbl` number columns input `tof_tibble`, fewer rows. Specifically, number rows `prop_cells` times number rows input `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_prop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_prop","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  # sample 10% of all cells from the input data tof_downsample_prop(     tof_tibble = sim_data,     prop_cells = 0.1 ) #> # A tibble: 100 × 5 #>       cd45   cd38    cd34   cd19 cluster_id #>      <dbl>  <dbl>   <dbl>  <dbl> <chr>      #>  1 -0.0508  0.787  0.360  -1.78  i          #>  2 -1.30   -0.654 -1.08   -1.38  v          #>  3 -1.12   -0.553  1.44   -0.294 t          #>  4  1.10    0.699 -0.234   2.53  q          #>  5 -0.206   1.17   0.620  -0.750 k          #>  6 -0.634   1.51   2.06    0.581 b          #>  7  0.690   0.165 -0.663   0.817 h          #>  8 -0.959   0.867 -0.600   2.51  r          #>  9  1.24   -1.10  -0.0190  0.223 n          #> 10 -1.52   -0.211  1.26    0.219 n          #> # ℹ 90 more rows  # sample 10% of all cells from each cluster in the input data tof_downsample_prop(     tof_tibble = sim_data,     group_cols = cluster_id,     prop_cells = 0.1 ) #> # A tibble: 88 × 5 #>      cd45    cd38    cd34   cd19 cluster_id #>     <dbl>   <dbl>   <dbl>  <dbl> <chr>      #>  1  0.240  2.13    0.363   0.729 a          #>  2 -1.23  -0.291  -0.578  -0.826 a          #>  3 -0.173  0.0961  0.594   1.38  a          #>  4  0.401 -1.26   -0.760   0.956 b          #>  5 -2.52   2.16    0.307  -0.854 b          #>  6 -0.124 -0.407   1.22   -0.729 b          #>  7 -0.772  0.278   0.346  -0.976 b          #>  8  0.241  0.216   0.944   0.271 c          #>  9 -0.676 -1.33   -0.0310  1.22  c          #> 10 -1.41  -0.451  -0.152   0.757 c          #> # ℹ 78 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_estimate_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate the local densities for all cells in a high-dimensional cytometry dataset. — tof_estimate_density","title":"Estimate the local densities for all cells in a high-dimensional cytometry dataset. — tof_estimate_density","text":"function wrapper around tidytof's tof_*_density() function family. performs local density estimation high-dimensional cytometry data using user-specified method (3 choices) method's corresponding input parameters.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_estimate_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate the local densities for all cells in a high-dimensional cytometry dataset. — tof_estimate_density","text":"","code":"tof_estimate_density(   tof_tibble,   distance_cols = where(tof_is_numeric),   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\"),   normalize = TRUE,   ...,   augment = TRUE,   method = c(\"mean_distance\", \"sum_distance\", \"spade\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_estimate_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate the local densities for all cells in a high-dimensional cytometry dataset. — tof_estimate_density","text":"tof_tibble `tof_tbl` `tibble`. distance_cols Unquoted names columns `tof_tibble` use calculating cell--cell distances local density estimation cell. Defaults numeric columns `tof_tibble`. distance_function string indicating distance function use calculating cell--cell distances local density estimation. Options include \"euclidean\" (default) \"cosine\". normalize boolean value indicating vector local density estimates normalized values 0 1. Defaults TRUE. ... Additional arguments pass `tof_*_density()` function family member corresponding chosen `method`. augment boolean value indicating output column-bind local density estimates cell new column `tof_tibble` (TRUE; default) single-column tibble including local density estimates returned (FALSE). method string indicating local density estimation method used. Valid values include \"mean_distance\", \"sum_distance\", \"spade\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_estimate_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate the local densities for all cells in a high-dimensional cytometry dataset. — tof_estimate_density","text":"`tof_tbl` `tibble` augment = FALSE, single column encoding local density estimates cell `tof_tibble`. augment = TRUE, ncol(tof_tibble) + 1 columns: (unaltered) columns `tof_tibble` plus additional column encoding local density estimates.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_estimate_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate the local densities for all cells in a high-dimensional cytometry dataset. — tof_estimate_density","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  # perform the density estimation tof_estimate_density(tof_tibble = sim_data, method = \"spade\") #> # A tibble: 1,000 × 5 #>      cd45    cd38    cd34   cd19 .spade_density #>     <dbl>   <dbl>   <dbl>  <dbl>          <dbl> #>  1 -1.85  -1.47   -0.552  -1.98               1 #>  2  0.181 -0.147  -0.386  -0.723              1 #>  3 -1.72   1.49   -0.566   1.68               1 #>  4 -1.25   1.15    0.666   1.21               1 #>  5 -0.176  0.636   0.975  -1.26               1 #>  6 -1.80   0.973   0.794  -0.802              1 #>  7  0.888  0.0616 -0.150   0.978              1 #>  8 -1.13  -0.904  -0.0202 -0.559              1 #>  9 -1.39  -0.358  -0.0170 -0.393              1 #> 10  1.18   0.707  -1.18   -0.794              1 #> # ℹ 990 more rows  # perform the density estimation with a smaller search radius around # each cell tof_estimate_density(     tof_tibble = sim_data,     alpha_multiplier = 2,     method = \"spade\" ) #> # A tibble: 1,000 × 5 #>      cd45    cd38    cd34   cd19 .spade_density #>     <dbl>   <dbl>   <dbl>  <dbl>          <dbl> #>  1 -1.85  -1.47   -0.552  -1.98             0.1 #>  2  0.181 -0.147  -0.386  -0.723            1   #>  3 -1.72   1.49   -0.566   1.68             0.1 #>  4 -1.25   1.15    0.666   1.21             0.7 #>  5 -0.176  0.636   0.975  -1.26             1   #>  6 -1.80   0.973   0.794  -0.802            0.6 #>  7  0.888  0.0616 -0.150   0.978            1   #>  8 -1.13  -0.904  -0.0202 -0.559            1   #>  9 -1.39  -0.358  -0.0170 -0.393            1   #> 10  1.18   0.707  -1.18   -0.794            1   #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_central_tendency.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the central tendencies of CyTOF markers in each cluster in a `tof_tibble`. — tof_extract_central_tendency","title":"Extract the central tendencies of CyTOF markers in each cluster in a `tof_tibble`. — tof_extract_central_tendency","text":"feature extraction function calculates user-specified measurement central tendency (.e. median mode) cells cluster `tof_tibble` across user-specified selection CyTOF markers. calculations can done either overall (across cells dataset) breaking cells subgroups using `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_central_tendency.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the central tendencies of CyTOF markers in each cluster in a `tof_tibble`. — tof_extract_central_tendency","text":"","code":"tof_extract_central_tendency(   tof_tibble,   cluster_col,   group_cols = NULL,   marker_cols = where(tof_is_numeric),   stimulation_col = NULL,   central_tendency_function = stats::median,   format = c(\"wide\", \"long\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_central_tendency.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the central tendencies of CyTOF markers in each cluster in a `tof_tibble`. — tof_extract_central_tendency","text":"tof_tibble `tof_tibble` `tibble` row represents single cell column represents CyTOF measurement piece metadata (.e. cluster id, patient id, etc.) cell. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. group_cols Unquoted column names representing columns `tof_tibble` used break rows `tof_tibble` subgroups feature extraction calculation. Defaults NULL (.e. performing extraction without subgroups). marker_cols Unquoted column names representing columns `tof_tibble` (.e. CyTOF protein measurements) included feature extraction calculation. Defaults numeric (integer double) columns. Supports tidyselection. stimulation_col Optional. unquoted column name indicates column `tof_tibble` contains information stimulation condition cell exposed data acquisition. provided, feature extraction broken subgroups stimulation condition (features stimulation condition included features wide format). central_tendency_function function used calculate measurement central tendency cluster (used dependent variable linear model). Defaults median. format string indicating data returned \"wide\" format (default; cluster feature given column) \"long\" format (cluster feature provided row).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_central_tendency.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the central tendencies of CyTOF markers in each cluster in a `tof_tibble`. — tof_extract_central_tendency","text":"tibble. format == \"wide\", tibble 1 row combination grouping variables provided `group_cols` one column grouping variable, one column extracted feature (central tendency given marker given cluster). names column containing cluster features obtained using following pattern: \"{marker_id}@{cluster_id}_ct\". format == \"long\", tibble 1 row combination grouping variables `group_cols`, cluster id (.e. level) `cluster_col`, marker `marker_cols`. one column grouping variable, one column cluster ids, one column CyTOF channel names, one column (`value`) containing features.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_central_tendency.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract the central tendencies of CyTOF markers in each cluster in a `tof_tibble`. — tof_extract_central_tendency","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         patient = sample(c(\"kirby\", \"mario\"), size = 1000, replace = TRUE),         stim = sample(c(\"basal\", \"stim\"), size = 1000, replace = TRUE)     )  # extract proportion of each cluster in each patient in wide format tof_extract_central_tendency(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient ) #> # A tibble: 2 × 105 #>   patient `cd45@a_ct` `cd38@a_ct` `cd34@a_ct` `cd19@a_ct` `cd45@b_ct` #>   <chr>         <dbl>       <dbl>       <dbl>       <dbl>       <dbl> #> 1 kirby        -0.307      0.0139     -0.128       0.0144      0.0381 #> 2 mario         0.526     -0.325      -0.0394     -0.0704     -0.739  #> # ℹ 99 more variables: `cd38@b_ct` <dbl>, `cd34@b_ct` <dbl>, `cd19@b_ct` <dbl>, #> #   `cd45@c_ct` <dbl>, `cd38@c_ct` <dbl>, `cd34@c_ct` <dbl>, `cd19@c_ct` <dbl>, #> #   `cd45@d_ct` <dbl>, `cd38@d_ct` <dbl>, `cd34@d_ct` <dbl>, `cd19@d_ct` <dbl>, #> #   `cd45@e_ct` <dbl>, `cd38@e_ct` <dbl>, `cd34@e_ct` <dbl>, `cd19@e_ct` <dbl>, #> #   `cd45@f_ct` <dbl>, `cd38@f_ct` <dbl>, `cd34@f_ct` <dbl>, `cd19@f_ct` <dbl>, #> #   `cd45@g_ct` <dbl>, `cd38@g_ct` <dbl>, `cd34@g_ct` <dbl>, `cd19@g_ct` <dbl>, #> #   `cd45@h_ct` <dbl>, `cd38@h_ct` <dbl>, `cd34@h_ct` <dbl>, …  # extract proportion of each cluster in each patient in long format tof_extract_central_tendency(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     format = \"long\" ) #> # A tibble: 208 × 4 #>    patient cluster_id channel  values #>    <chr>   <chr>      <chr>     <dbl> #>  1 kirby   a          cd45    -0.307  #>  2 kirby   a          cd38     0.0139 #>  3 kirby   a          cd34    -0.128  #>  4 kirby   a          cd19     0.0144 #>  5 kirby   b          cd45     0.0381 #>  6 kirby   b          cd38    -0.635  #>  7 kirby   b          cd34    -0.368  #>  8 kirby   b          cd19    -0.453  #>  9 kirby   c          cd45    -0.268  #> 10 kirby   c          cd38     0.252  #> # ℹ 198 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_emd.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract aggregated features from CyTOF data using earth-mover's distance (EMD) — tof_extract_emd","title":"Extract aggregated features from CyTOF data using earth-mover's distance (EMD) — tof_extract_emd","text":"feature extraction function calculates earth-mover's distance (EMD) stimulated unstimulated (\"basal\") experimental conditions samples CyTOF experiment. calculation performed across user-specified selection CyTOF antigens can performed either overall (across cells dataset) breaking cells subgroups using `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_emd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract aggregated features from CyTOF data using earth-mover's distance (EMD) — tof_extract_emd","text":"","code":"tof_extract_emd(   tof_tibble,   cluster_col,   group_cols = NULL,   marker_cols = where(tof_is_numeric),   emd_col,   reference_level,   format = c(\"wide\", \"long\"),   num_bins = 100 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_emd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract aggregated features from CyTOF data using earth-mover's distance (EMD) — tof_extract_emd","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. group_cols Unquoted column names representing columns `tof_tibble` used break rows `tof_tibble` subgroups feature extraction calculation. Defaults NULL (.e. performing extraction without subgroups). marker_cols Unquoted column names representing columns `tof_tibble` (.e. CyTOF protein measurements) included earth-mover's distance calculation. Defaults numeric (integer double) columns. Supports tidyselect helpers. emd_col unquoted column name indicates column `tof_tibble` used group cells different distributions compared one another EMD calculation. example, want compare marker expression distributions across stimulation conditions, `emd_col` column `tof_tibble` containing information stimulation condition cell exposed data acquisition. provided, feature extraction broken subgroups stimulation condition (features stimulation condition included features wide format). reference_level string indicating value `emd_col` corresponds \"reference\" value values `emd_col` compared. example, `emd_col` represents stimulation condition cell, reference_level might take value \"basal\" \"unstimulated\" want compare stimulation basal state. format string indicating data returned \"wide\" format (default; cluster feature given column) \"long\" format (cluster feature provided row). num_bins Optional. number bins use dividing one-dimensional marker distributions discrete segments EMD calculation. Defaults 100.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_emd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract aggregated features from CyTOF data using earth-mover's distance (EMD) — tof_extract_emd","text":"tibble. format == \"wide\", tibble 1 row combination grouping variables provided `group_cols` one column grouping variable, one column extracted feature (EMD distribution given marker given cluster basal condition distribution marker given cluster stimulated condition). names column containing cluster features obtained using following pattern: \"{stimulation_id}_{marker_id}@{cluster_id}_emd\". format == \"long\", tibble 1 row combination grouping variables `group_cols`, cluster id (.e. level) `cluster_col`, marker `marker_cols`. one column grouping variable, one column cluster ids, one column CyTOF channel names, one column (`value`) containing features.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_emd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract aggregated features from CyTOF data using earth-mover's distance (EMD) — tof_extract_emd","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         patient = sample(c(\"kirby\", \"mario\"), size = 1000, replace = TRUE),         stim = sample(c(\"basal\", \"stim\"), size = 1000, replace = TRUE)     )  # extract emd of each cluster in each patient (using the \"basal\" stim # condition as a reference) in wide format tof_extract_emd(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     emd_col = stim,     reference_level = \"basal\" ) #> # A tibble: 2 × 105 #>   patient `stim_cd45@f_emd` `stim_cd38@f_emd` `stim_cd34@f_emd` #>   <chr>               <dbl>             <dbl>             <dbl> #> 1 mario                  NA                NA                NA #> 2 kirby                  NA                NA                NA #> # ℹ 101 more variables: `stim_cd19@f_emd` <dbl>, `stim_cd45@h_emd` <dbl>, #> #   `stim_cd38@h_emd` <dbl>, `stim_cd34@h_emd` <dbl>, `stim_cd19@h_emd` <dbl>, #> #   `stim_cd45@n_emd` <dbl>, `stim_cd38@n_emd` <dbl>, `stim_cd34@n_emd` <dbl>, #> #   `stim_cd19@n_emd` <dbl>, `stim_cd45@z_emd` <dbl>, `stim_cd38@z_emd` <dbl>, #> #   `stim_cd34@z_emd` <dbl>, `stim_cd19@z_emd` <dbl>, `stim_cd45@k_emd` <dbl>, #> #   `stim_cd38@k_emd` <dbl>, `stim_cd34@k_emd` <dbl>, `stim_cd19@k_emd` <dbl>, #> #   `stim_cd45@b_emd` <dbl>, `stim_cd38@b_emd` <dbl>, …  # extract emd of each cluster (using the \"basal\" stim # condition as a reference) in long format tof_extract_emd(     tof_tibble = sim_data,     cluster_col = cluster_id,     emd_col = stim,     reference_level = \"basal\",     format = \"long\" ) #> # A tibble: 104 × 4 #>    cluster_id marker stimulation   emd #>    <chr>      <chr>  <chr>       <dbl> #>  1 f          cd45   stim         6.36 #>  2 f          cd38   stim         6.87 #>  3 f          cd34   stim         4.84 #>  4 f          cd19   stim         6.48 #>  5 h          cd45   stim         6.16 #>  6 h          cd38   stim         4.93 #>  7 h          cd34   stim         4.91 #>  8 h          cd19   stim        17.2  #>  9 n          cd45   stim         5.01 #> 10 n          cd38   stim         5.70 #> # ℹ 94 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","title":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","text":"function wraps members `tof_extract_*` function family extract sample-level features lineage (.e. cell surface antigen) CyTOF channels assumed stable across stimulation conditions signaling CyTOF channels assumed change across stimulation conditions. Features extracted cluster within independent sample (defined `group_cols` argument).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","text":"","code":"tof_extract_features(   tof_tibble,   cluster_col,   group_cols = NULL,   stimulation_col = NULL,   lineage_cols,   signaling_cols,   central_tendency_function = stats::median,   signaling_method = c(\"threshold\", \"emd\", \"jsd\", \"central tendency\"),   basal_level = NULL,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. group_cols Unquoted column names representing columns `tof_tibble` used break rows `tof_tibble` subgroups feature extraction calculation. Defaults NULL (.e. performing extraction without subgroups). stimulation_col Optional. unquoted column name indicates column `tof_tibble` contains information stimulation condition cell exposed data acquisition. provided, feature extraction broken subgroups stimulation condition (features stimulation condition included features wide format). lineage_cols Unquoted column names representing columns `tof_tibble` (.e. CyTOF protein measurements) considered lineage markers feature extraction calculation. Supports tidyselect helpers. signaling_cols Unquoted column names representing columns `tof_tibble` (.e. CyTOF protein measurements) considered signaling markers feature extraction calculation. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster (used dependent variable linear model). Defaults median. signaling_method string indicating feature extraction method use signaling markers (identified `signaling_cols` argument). Options \"threshold\" (default), \"emd\", \"jsd\", \"central tendency\". basal_level string indicating value `stimulation_col` corresponds basal stimulation condition (.e. \"basal\" \"unstimulated\"). ... Optional additional arguments passed tof_extract_threshold, tof_extract_emd, tof_extract_jsd.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","text":"tibble. output tibble 1 row combination grouping variables provided `group_cols` (thus, row represent considered single \"sample\" based grouping provided). one column grouping variable one column extracted feature (\"wide\" format).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_features.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","text":"Lineage channels specified using `lineage_cols` argument, extracted features measurements central tendency (computed user-supplied `central_tendency_function`). Signaling channels specified using `signaling_cols` argument, extracted features depend user's chosen `signaling_method`. `signaling method` == \"threshold\" (default), tof_extract_threshold used calculate proportion cells cluster signaling marker expression `threshold` stimulation condition. `signaling_method` == \"emd\" `signaling_method` == \"jsd\", tof_extract_emd tof_extract_jsd used calculate earth-mover's distance (EMD) Jensen-Shannon Distance (JSD), respectively, basal condition stimulated conditions cluster sample. Finally, none options chosen, tof_extract_central_tendency used calculate measurements central tendency. addition, tof_extract_proportion used extract proportion cells cluster computed sample. calculations can performed either overall (across cells dataset) breaking cells subgroups using `group_cols`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_features.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         patient = sample(c(\"kirby\", \"mario\"), size = 1000, replace = TRUE),         stim = sample(c(\"basal\", \"stim\"), size = 1000, replace = TRUE)     )  # extract the following features from each cluster in each # patient/stimulation: #    - proportion of each cluster #    - central tendency (median) of cd45 and cd38 in each cluster #    - the proportion of cells in each cluster with cd34 expression over #      the default threshold (asinh(10 / 5)) tof_extract_features(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     lineage_cols = c(cd45, cd38),     signaling_cols = cd34,     stimulation_col = stim ) #> # A tibble: 2 × 131 #>   patient `prop@a` `prop@b` `prop@c` `prop@d` `prop@e` `prop@f` `prop@g` #>   <chr>      <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl> #> 1 kirby     0.0411   0.0391   0.0391   0.0352   0.0372   0.0489   0.0450 #> 2 mario     0.0348   0.0429   0.0327   0.0470   0.0368   0.0450   0.0511 #> # ℹ 123 more variables: `prop@h` <dbl>, `prop@i` <dbl>, `prop@j` <dbl>, #> #   `prop@k` <dbl>, `prop@l` <dbl>, `prop@m` <dbl>, `prop@n` <dbl>, #> #   `prop@o` <dbl>, `prop@p` <dbl>, `prop@q` <dbl>, `prop@r` <dbl>, #> #   `prop@s` <dbl>, `prop@t` <dbl>, `prop@u` <dbl>, `prop@v` <dbl>, #> #   `prop@w` <dbl>, `prop@x` <dbl>, `prop@y` <dbl>, `prop@z` <dbl>, #> #   `cd45@a_ct` <dbl>, `cd38@a_ct` <dbl>, `cd45@b_ct` <dbl>, `cd38@b_ct` <dbl>, #> #   `cd45@c_ct` <dbl>, `cd38@c_ct` <dbl>, `cd45@d_ct` <dbl>, …  # extract the following features from each cluster in each # patient/stimulation: #    - proportion of each cluster #    - central tendency (mean) of cd45 and cd38 in each cluster #    - the earth mover's distance between each cluster's cd34 histogram in #      the \"basal\" and \"stim\" conditions tof_extract_features(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     lineage_cols = c(cd45, cd38),     signaling_cols = cd34,     central_tendency_function = mean,     stimulation_col = stim,     signaling_method = \"emd\",     basal_level = \"basal\" ) #> # A tibble: 2 × 131 #>   patient `prop@a` `prop@b` `prop@c` `prop@d` `prop@e` `prop@f` `prop@g` #>   <chr>      <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl> #> 1 kirby     0.0411   0.0391   0.0391   0.0352   0.0372   0.0489   0.0450 #> 2 mario     0.0348   0.0429   0.0327   0.0470   0.0368   0.0450   0.0511 #> # ℹ 123 more variables: `prop@h` <dbl>, `prop@i` <dbl>, `prop@j` <dbl>, #> #   `prop@k` <dbl>, `prop@l` <dbl>, `prop@m` <dbl>, `prop@n` <dbl>, #> #   `prop@o` <dbl>, `prop@p` <dbl>, `prop@q` <dbl>, `prop@r` <dbl>, #> #   `prop@s` <dbl>, `prop@t` <dbl>, `prop@u` <dbl>, `prop@v` <dbl>, #> #   `prop@w` <dbl>, `prop@x` <dbl>, `prop@y` <dbl>, `prop@z` <dbl>, #> #   `cd45@a_ct` <dbl>, `cd38@a_ct` <dbl>, `cd45@b_ct` <dbl>, `cd38@b_ct` <dbl>, #> #   `cd45@c_ct` <dbl>, `cd38@c_ct` <dbl>, `cd45@d_ct` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_jsd.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract aggregated features from CyTOF data using the Jensen-Shannon Distance (JSD) — tof_extract_jsd","title":"Extract aggregated features from CyTOF data using the Jensen-Shannon Distance (JSD) — tof_extract_jsd","text":"feature extraction function calculates Jensen-Shannon Distance (JSD) stimulated unstimulated (\"basal\") experimental conditions samples CyTOF experiment. calculation performed across user-specified selection CyTOF antigens can performed either overall (across cells dataset) breaking cells subgroups using `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_jsd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract aggregated features from CyTOF data using the Jensen-Shannon Distance (JSD) — tof_extract_jsd","text":"","code":"tof_extract_jsd(   tof_tibble,   cluster_col,   group_cols = NULL,   marker_cols = where(tof_is_numeric),   jsd_col,   reference_level,   format = c(\"wide\", \"long\"),   num_bins = 100 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_jsd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract aggregated features from CyTOF data using the Jensen-Shannon Distance (JSD) — tof_extract_jsd","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. group_cols Unquoted column names representing columns `tof_tibble` used break rows `tof_tibble` subgroups feature extraction calculation. Defaults NULL (.e. performing extraction without subgroups). marker_cols Unquoted column names representing columns `tof_tibble` (.e. CyTOF protein measurements) included feature extraction calculation. Defaults numeric (integer double) columns. Supports tidyselect helpers. jsd_col unquoted column name indicates column `tof_tibble` contains information stimulation condition cell exposed data acquisition. provided, feature extraction broken subgroups stimulation condition (features stimulation condition included features wide format). reference_level string indicating value `jsd_col` corresponds basal stimulation condition (.e. \"basal\" \"unstimulated\"). format string indicating data returned \"wide\" format (default; cluster feature given column) \"long\" format (cluster feature provided row). num_bins Optional. number bins use dividing one-dimensional marker distributions discrete segments JSD calculation. Defaults 100.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_jsd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract aggregated features from CyTOF data using the Jensen-Shannon Distance (JSD) — tof_extract_jsd","text":"tibble. format == \"wide\", tibble 1 row combination grouping variables provided `group_cols` one column grouping variable, one column extracted feature (JSD distribution given marker given cluster basal condition distribution marker cluster stimulated condition). names column containing cluster features obtained using following pattern: \"{stimulation_id}_{marker_id}@{cluster_id}_jsd\". format == \"long\", tibble 1 row combination grouping variables `group_cols`, cluster id (.e. level) `cluster_col`, marker `marker_cols`. one column grouping variable, one column cluster ids, one column CyTOF channel names, one column (`value`) containing features.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_jsd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract aggregated features from CyTOF data using the Jensen-Shannon Distance (JSD) — tof_extract_jsd","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         patient = sample(c(\"kirby\", \"mario\"), size = 1000, replace = TRUE),         stim = sample(c(\"basal\", \"stim\"), size = 1000, replace = TRUE)     )  # extract jsd of each cluster in each patient (using the \"basal\" stim # condition as a reference) in wide format tof_extract_jsd(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     jsd_col = stim,     reference_level = \"basal\" ) #> # A tibble: 2 × 105 #>   patient `stim_cd45@a_jsd` `stim_cd38@a_jsd` `stim_cd34@a_jsd` #>   <chr>               <dbl>             <dbl>             <dbl> #> 1 mario                  NA                NA                NA #> 2 kirby                  NA                NA                NA #> # ℹ 101 more variables: `stim_cd19@a_jsd` <dbl>, `stim_cd45@o_jsd` <dbl>, #> #   `stim_cd38@o_jsd` <dbl>, `stim_cd34@o_jsd` <dbl>, `stim_cd19@o_jsd` <dbl>, #> #   `stim_cd45@e_jsd` <dbl>, `stim_cd38@e_jsd` <dbl>, `stim_cd34@e_jsd` <dbl>, #> #   `stim_cd19@e_jsd` <dbl>, `stim_cd45@d_jsd` <dbl>, `stim_cd38@d_jsd` <dbl>, #> #   `stim_cd34@d_jsd` <dbl>, `stim_cd19@d_jsd` <dbl>, `stim_cd45@y_jsd` <dbl>, #> #   `stim_cd38@y_jsd` <dbl>, `stim_cd34@y_jsd` <dbl>, `stim_cd19@y_jsd` <dbl>, #> #   `stim_cd45@z_jsd` <dbl>, `stim_cd38@z_jsd` <dbl>, …  # extract jsd of each cluster (using the \"basal\" stim # condition as a reference) in long format tof_extract_jsd(     tof_tibble = sim_data,     cluster_col = cluster_id,     jsd_col = stim,     reference_level = \"basal\",     format = \"long\" ) #> # A tibble: 104 × 4 #>    cluster_id marker stimulation   jsd #>    <chr>      <chr>  <chr>       <dbl> #>  1 a          cd45   stim        0.573 #>  2 a          cd38   stim        0.837 #>  3 a          cd34   stim        0.648 #>  4 a          cd19   stim        0.606 #>  5 o          cd45   stim        0.839 #>  6 o          cd38   stim        0.666 #>  7 o          cd34   stim        0.713 #>  8 o          cd19   stim        0.857 #>  9 e          cd45   stim        0.807 #> 10 e          cd38   stim        0.763 #> # ℹ 94 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_proportion.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the proportion of cells in each cluster in a `tof_tibble`. — tof_extract_proportion","title":"Extract the proportion of cells in each cluster in a `tof_tibble`. — tof_extract_proportion","text":"feature extraction function allows calculate proportion cells cluster `tof_tibble` - either overall broken subgroups using `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_proportion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the proportion of cells in each cluster in a `tof_tibble`. — tof_extract_proportion","text":"","code":"tof_extract_proportion(   tof_tibble,   cluster_col,   group_cols = NULL,   format = c(\"wide\", \"long\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_proportion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the proportion of cells in each cluster in a `tof_tibble`. — tof_extract_proportion","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. group_cols Unquoted column names representing columns `tof_tibble` used break rows `tof_tibble` subgroups feature extraction calculation. Defaults NULL (.e. performing extraction without subgroups). format string indicating data returned \"wide\" format (default; cluster proportion given column) \"long\" format (cluster proportion provided row).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_proportion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the proportion of cells in each cluster in a `tof_tibble`. — tof_extract_proportion","text":"tibble. format == \"wide\", tibble 1 row combination grouping variables provided `group_cols` one column grouping variable well one column proportion cells cluster. names column containing cluster proportions obtained using following pattern: \"prop@{cluster_id}\". format == \"long\", tibble 1 row combination grouping variables `group_cols` cluster id (.e. level) `cluster_col`. one column grouping variable, one column cluster ids, one column (`prop`) containing cluster proportions.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_proportion.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract the proportion of cells in each cluster in a `tof_tibble`. — tof_extract_proportion","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         patient = sample(c(\"kirby\", \"mario\"), size = 1000, replace = TRUE),         stim = sample(c(\"basal\", \"stim\"), size = 1000, replace = TRUE)     )  # extract proportion of each cluster in each patient in wide format tof_extract_proportion(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient ) #> # A tibble: 2 × 27 #>   patient `prop@a` `prop@b` `prop@c` `prop@d` `prop@e` `prop@f` `prop@g` #>   <chr>      <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl> #> 1 kirby     0.0291   0.0395   0.0457   0.0416   0.0374   0.0312   0.0416 #> 2 mario     0.0539   0.0212   0.0308   0.0443   0.0366   0.0385   0.0347 #> # ℹ 19 more variables: `prop@h` <dbl>, `prop@i` <dbl>, `prop@j` <dbl>, #> #   `prop@k` <dbl>, `prop@l` <dbl>, `prop@m` <dbl>, `prop@n` <dbl>, #> #   `prop@o` <dbl>, `prop@p` <dbl>, `prop@q` <dbl>, `prop@r` <dbl>, #> #   `prop@s` <dbl>, `prop@t` <dbl>, `prop@u` <dbl>, `prop@v` <dbl>, #> #   `prop@w` <dbl>, `prop@x` <dbl>, `prop@y` <dbl>, `prop@z` <dbl>  # extract proportion of each cluster in each patient in long format tof_extract_proportion(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     format = \"long\" ) #> # A tibble: 52 × 3 #>    patient cluster_id   prop #>    <chr>   <chr>       <dbl> #>  1 kirby   a          0.0291 #>  2 kirby   b          0.0395 #>  3 kirby   c          0.0457 #>  4 kirby   d          0.0416 #>  5 kirby   e          0.0374 #>  6 kirby   f          0.0312 #>  7 kirby   g          0.0416 #>  8 kirby   h          0.0437 #>  9 kirby   i          0.0478 #> 10 kirby   j          0.0208 #> # ℹ 42 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_threshold.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract aggregated features from CyTOF data using a binary threshold — tof_extract_threshold","title":"Extract aggregated features from CyTOF data using a binary threshold — tof_extract_threshold","text":"feature extraction function calculates proportion cells given cluster CyTOF antigen expression user-specified threshold across user-specified selection CyTOF markers. calculations can done either overall (across cells dataset) breaking cells subgroups using `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_threshold.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract aggregated features from CyTOF data using a binary threshold — tof_extract_threshold","text":"","code":"tof_extract_threshold(   tof_tibble,   cluster_col,   group_cols = NULL,   marker_cols = where(tof_is_numeric),   stimulation_col = NULL,   threshold = asinh(10/5),   format = c(\"wide\", \"long\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_threshold.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract aggregated features from CyTOF data using a binary threshold — tof_extract_threshold","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. group_cols Unquoted column names representing columns `tof_tibble` used break rows `tof_tibble` subgroups feature extraction calculation. Defaults NULL (.e. performing extraction without subgroups). marker_cols Unquoted column names representing columns `tof_tibble` (.e. CyTOF protein measurements) included feature extraction calculation. Defaults numeric (integer double) columns. Supports tidyselect helpers. stimulation_col Optional. unquoted column name indicates column `tof_tibble` contains information stimulation condition cell exposed data acquisition. provided, feature extraction broken subgroups stimulation condition (features stimulation condition included features wide format). threshold double integer length 1 indicating threshold used. format string indicating data returned \"wide\" format (default; cluster feature given column) \"long\" format (cluster feature provided row).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_threshold.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract aggregated features from CyTOF data using a binary threshold — tof_extract_threshold","text":"tibble. format == \"wide\", tibble 1 row combination grouping variables provided `group_cols` one column grouping variable, one column extracted feature (proportion cells given cluster marker expression values `threshold`). names column containing cluster features obtained using following pattern: \"{marker_id}@{cluster_id}_threshold\". format == \"long\", tibble 1 row combination grouping variables `group_cols`, cluster id (.e. level) `cluster_col`, marker `marker_cols`. one column grouping variable, one column cluster ids, one column CyTOF channel names, one column (`value`) containing features.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_threshold.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract aggregated features from CyTOF data using a binary threshold — tof_extract_threshold","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         patient = sample(c(\"kirby\", \"mario\"), size = 1000, replace = TRUE),         stim = sample(c(\"basal\", \"stim\"), size = 1000, replace = TRUE)     )  # extract proportion of each cluster in each patient in wide format tof_extract_threshold(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient ) #> # A tibble: 2 × 105 #>   patient `cd45@a_threshold` `cd38@a_threshold` `cd34@a_threshold` #>   <chr>                <dbl>              <dbl>              <dbl> #> 1 kirby               0                  0.0952             0.0952 #> 2 mario               0.0667             0                  0.0667 #> # ℹ 101 more variables: `cd19@a_threshold` <dbl>, `cd45@b_threshold` <dbl>, #> #   `cd38@b_threshold` <dbl>, `cd34@b_threshold` <dbl>, #> #   `cd19@b_threshold` <dbl>, `cd45@c_threshold` <dbl>, #> #   `cd38@c_threshold` <dbl>, `cd34@c_threshold` <dbl>, #> #   `cd19@c_threshold` <dbl>, `cd45@d_threshold` <dbl>, #> #   `cd38@d_threshold` <dbl>, `cd34@d_threshold` <dbl>, #> #   `cd19@d_threshold` <dbl>, `cd45@e_threshold` <dbl>, …  # extract proportion of each cluster in each patient in long format tof_extract_threshold(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     format = \"long\" ) #> # A tibble: 208 × 4 #>    patient cluster_id channel values #>    <chr>   <chr>      <chr>    <dbl> #>  1 kirby   a          cd45    0      #>  2 kirby   a          cd38    0.0952 #>  3 kirby   a          cd34    0.0952 #>  4 kirby   a          cd19    0.143  #>  5 kirby   b          cd45    0.0556 #>  6 kirby   b          cd38    0.111  #>  7 kirby   b          cd34    0.111  #>  8 kirby   b          cd19    0.167  #>  9 kirby   c          cd45    0.118  #> 10 kirby   c          cd38    0.118  #> # ℹ 198 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_best.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the optimal hyperparameters for an elastic net model from candidate performance metrics — tof_find_best","title":"Find the optimal hyperparameters for an elastic net model from candidate performance metrics — tof_find_best","text":"Find optimal hyperparameters elastic net model candidate performance metrics","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_best.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the optimal hyperparameters for an elastic net model from candidate performance metrics — tof_find_best","text":"","code":"tof_find_best(performance_metrics, model_type, optimization_metric)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_best.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the optimal hyperparameters for an elastic net model from candidate performance metrics — tof_find_best","text":"performance_metrics tibble performance metrics elastic net model (wide format) model_type string indicating type glmnet model trained. optimization_metric string indicating performance metric used select optimal model.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_best.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the optimal hyperparameters for an elastic net model from candidate performance metrics — tof_find_best","text":"tibble 3 columns: \"mixture\", \"penalty\", column containing chosen optimization metric. returned tibble 1 column, means 1 mixture/penalty combination yielded optimal result (.e. tuning procedure resulted tie).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_cv_predictions.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate and store the predicted outcomes for each validation set observation during model tuning — tof_find_cv_predictions","title":"Calculate and store the predicted outcomes for each validation set observation during model tuning — tof_find_cv_predictions","text":"Calculate store predicted outcomes validation set observation model tuning","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_cv_predictions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate and store the predicted outcomes for each validation set observation during model tuning — tof_find_cv_predictions","text":"","code":"tof_find_cv_predictions(   split_data,   prepped_recipe,   lambda,   alpha,   model_type,   outcome_colnames )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_cv_predictions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate and store the predicted outcomes for each validation set observation during model tuning — tof_find_cv_predictions","text":"split_data `rsplit` object rsample package. Alternatively, unsplit tbl_df can provided, though recommended. prepped_recipe trained recipe lambda single numeric value indicating penalty (lambda) value used make predictions alpha single numeric value indicating mixture (alpha) value used make predictions model_type string indicating kind elastic net model build. continuous response predicted, use \"linear\" linear regression; categorical response 2 classes predicted, use \"two-class\" logistic regression; categorical response 2 levels predicted, use \"multiclass\" multinomial regression; time--event outcome predicted, use \"survival\" Cox regression. outcome_colnames Quoted column names indicating columns data fit represent outcome variables (others assumed predictors).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_cv_predictions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate and store the predicted outcomes for each validation set observation during model tuning — tof_find_cv_predictions","text":"tibble containing predicted true values outcome validation observations `split_data`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_emd.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the earth-mover's distance between two numeric vectors — tof_find_emd","title":"Find the earth-mover's distance between two numeric vectors — tof_find_emd","text":"Find earth-mover's distance two numeric vectors","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_emd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the earth-mover's distance between two numeric vectors — tof_find_emd","text":"","code":"tof_find_emd(vec_1, vec_2, num_bins = 100)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_emd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the earth-mover's distance between two numeric vectors — tof_find_emd","text":"vec_1 numeric vector. vec_2 numeric vector. num_bins integer number bins use performing kernel density estimation two vectors. Defaults 100.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_emd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the earth-mover's distance between two numeric vectors — tof_find_emd","text":"double (length 1) representing EMD two vectors.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_jsd.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the Jensen-Shannon Divergence (JSD) between two numeric vectors — tof_find_jsd","title":"Find the Jensen-Shannon Divergence (JSD) between two numeric vectors — tof_find_jsd","text":"Find Jensen-Shannon Divergence (JSD) two numeric vectors","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_jsd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the Jensen-Shannon Divergence (JSD) between two numeric vectors — tof_find_jsd","text":"","code":"tof_find_jsd(vec_1, vec_2, num_bins = 100)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_jsd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the Jensen-Shannon Divergence (JSD) between two numeric vectors — tof_find_jsd","text":"vec_1 numeric vector. vec_2 numeric vector. num_bins integer number bins use binning across two vectors' combined range. Defaults 100.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_jsd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the Jensen-Shannon Divergence (JSD) between two numeric vectors — tof_find_jsd","text":"double (length 1) representing JSD two vectors.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_knn.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the k-nearest neighbors of each cell in a high-dimensional cytometry dataset. — tof_find_knn","title":"Find the k-nearest neighbors of each cell in a high-dimensional cytometry dataset. — tof_find_knn","text":"Find k-nearest neighbors cell high-dimensional cytometry dataset.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_knn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the k-nearest neighbors of each cell in a high-dimensional cytometry dataset. — tof_find_knn","text":"","code":"tof_find_knn(   .data,   k = min(10, nrow(.data)),   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\"),   .query,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_knn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the k-nearest neighbors of each cell in a high-dimensional cytometry dataset. — tof_find_knn","text":".data `tof_tibble` `tibble` row represents cell column represents high-dimensional cytometry measurement. k integer indicating number nearest neighbors return cell. distance_function string indicating distance function use nearest-neighbor calculation. Options include \"euclidean\" (default) \"cosine\" distances. .query set cells queried .data (.e. set cells find nearest neighbors within .data). Defaults .data , .e. finding nearest neighbors cells .data. ... Optional additional arguments pass hnsw_knn","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_knn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the k-nearest neighbors of each cell in a high-dimensional cytometry dataset. — tof_find_knn","text":"list two elements: \"neighbor_ids\" \"neighbor_distances,\" n k matrices (n number cells input `.data`. [,j]-th entry \"neighbor_ids\" represents row index j-th nearest neighbor cell -th row `.data`. [,j]-th entry \"neighbor_distances\" represents distance two cells according `distance_function`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_knn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find the k-nearest neighbors of each cell in a high-dimensional cytometry dataset. — tof_find_knn","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  # Find the 10 nearest neighbors of each cell in the dataset tof_find_knn(     .data = sim_data,     k = 10,     distance_function = \"euclidean\" ) #> $neighbor_ids #>         [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] #>    [1,]  849  651  486  656  617   87  619  745  615   487 #>    [2,]  113  541  251  384  330  851  668  255  727   690 #>    [3,]  294  859  191  537  555  929  354  839  869   707 #>    [4,]  459  941  110  269  506  437  345  519  308   874 #>    [5,]  611  550  367  740  756  655  381  793  972   820 #>    [6,]  178  771  584  141  571  547  602  451   91   622 #>    [7,]  808  760  509  842  145  631  900  213  276   797 #>    [8,]  116  877  444  909  780  829  259  144  199   228 #>    [9,]  855  649  262  224  993  833  138   92  379    43 #>   [10,]  296  208  121  862  120  137   60  741   58   939 #>   [11,]  446  961  957  518  134  517  904  496  927   593 #>   [12,]  633  621  352  149  845  168  652  512  992  1000 #>   [13,]  393  553  629  261  455  171  998  214  304   327 #>   [14,]  674   42  830  345  815  216  395  973  456   816 #>   [15,]  588  360  664  316   91  921  432  675  278   204 #>   [16,]  623  828  413  558  177  573  279  868  757   416 #>   [17,]  349  884  155  158  709  391  754  533  551   263 #>   [18,]  115  502  350  593  225  134  311  927  847   632 #>   [19,]  750  579  156  146  142   70  453   90  702   135 #>   [20,]  870  583  689  569   59  169  103  752  187   814 #>   [21,]  375  619  532  638  561  394  654  656  934   823 #>   [22,]  645   97  263  391  514  959   82  358  192   812 #>   [23,]  817  186  280  257  245  165  757  794  253   759 #>   [24,]  832   95  975  468   25  838  825  392  332   451 #>   [25,]  468  178  451  188  846  761  540  527  335   589 #>   [26,]  520  118  555  720  339  982  857  869  331   961 #>   [27,]  491  109  751  478  385  378  228  390  112   903 #>   [28,]  932  594  566  609  581  210  919  693  180   587 #>   [29,]  765  533   82  713  918  624  861  888  305   101 #>   [30,]  635  411  370  402  743  963  606  627  445   858 #>   [31,]  864  706  303  476  408  696  264   96  284   996 #>   [32,]  231  501  362  198  444  598  649  390  224   440 #>   [33,]  281  169  177  795  771  745  868  682  559   371 #>   [34,]  402  606  615  265  548  319  635  370  486   534 #>   [35,]  646  304   63  923  439   98  630  418  895   348 #>   [36,]  544  164  935  964  716  719  368  889  148   318 #>   [37,]  667  875  526  938  419  500  724  198  220   612 #>   [38,]  292  260  432  887  300  675  469  316  588    15 #>   [39,]  249  749  881  891  529  883  242  629  359   482 #>   [40,]  719  773  226  521  956  929  770  431  935   802 #>   [41,]  931  132   66  597  834  317  678  179   47   417 #>   [42,]  345   14  282  216  674  815  705  437  338   988 #>   [43,]  262  310  753    9   92  138  833  855  440   334 #>   [44,]  644  511   80  346  424  712  328  756  405     5 #>   [45,]  211  105  356  935  889  470  863  531  956   716 #>   [46,]  860  589  358  812   56  959  539  787  924   703 #>   [47,]  335  194  838  663  781  597  777   86  179   309 #>   [48,]  438  665  376  821  687  574  488  358  329   812 #>   [49,]  845  609  445  906   78  160  425  189  621   739 #>   [50,]  655  611  381  586  367    5  575  712  740   311 #>   [51,]  791  503  124  637  583  721  742  878   20   187 #>   [52,]  625  755  441  471  506  819  405  240  663   984 #>   [53,]  436  456  759  395   55  816  580  573  279   353 #>   [54,]  233  131  312  612  288  950  732   77  229   838 #>   [55,]  818  759  926  573  671  946  673  177   53   279 #>   [56,]  787  860  959   46  602  589  358  495  390   451 #>   [57,]  329  631  901  665  741  438  119  789  237   797 #>   [58,]  299  862  397  522  708  375  378  564  208   854 #>   [59,]  374  752  721  970  814  313  569  820  926    20 #>   [60,]  939  789  833  992  862  334  934  514   92   652 #>   [61,]  204  879  361  793  243  972  783  664  360    69 #>   [62,]  824  343   95  182  941   83  950   24  832   206 #>   [63,]  304   35  895  763  315   98  630  646  418    76 #>   [64,]  914  999  699  311  591   80  153  225  586   836 #>   [65,]  128  979  436  991   53  238  434  818  790   885 #>   [66,]  931   41  132  317  387  597  955  701  129   642 #>   [67,]  681  560   94  290  382  479  608  472  219   782 #>   [68,]  318  788  568  163   89  935  504  610  798   830 #>   [69,]  371  892  866  803  795  664  779  278  617   243 #>   [70,]  142  897  439  146   19  480  579  156  295   750 #>   [71,]  186  409  885  936  257  980  660  590  489   810 #>   [72,]  181  875  127   43  427  310  396  262  307   157 #>   [73,]  341  768  636  818  637  124  136  878  742   790 #>   [74,]  760  420  758  643  842  567  907  839  297   902 #>   [75,]  347  430  960  850  620  907  223  297   98   418 #>   [76,]  763  250  831   98  299  203  246  854  522   620 #>   [77,]  737  229  132  809  298  658  233  725   54   275 #>   [78,]  693  587  695  295  425  117   49  217  609    28 #>   [79,]  440  394  862  334  649  224  833   21  390    60 #>   [80,]  914  311  999   64  465  726  989  381  225   328 #>   [81,]  534  284   96  319  548   88  479  844  803   868 #>   [82,]  918   29  861  467  744  624  888  120  784   263 #>   [83,]  104  206  123  545  941  613   95  506  597   971 #>   [84,]  122  805  696  779  647  548  486  578   69   320 #>   [85,]  998  327  675  285  783  629  887   15  360   508 #>   [86,]  335  161  777  104  110   47  846  188  468    25 #>   [87,]  718  739    1  561  654  512  523  656  849   126 #>   [88,]  289  843  682  728  746  868  301  336  180   196 #>   [89,]  568  964  308  437  504  318  338  269  148   139 #>   [90,]  693  869  691  628  579  156  607  135  400   808 #>   [91,]  563  622  571    6  994  903  360  547  247    15 #>   [92,]  733  114    9  262  649   60   43   79  951   224 #>   [93,]  448  767  894  779  230  600  954  236  122   190 #>   [94,]  563  560   67  547  564  681  301   91  571   987 #>   [95,]   24  206  343  832  838  950  104  363  824   634 #>   [96,]  284  871   81  747  534  408  996  585  479   177 #>   [97,]  645   22  514  939  120  624  263  574  192    82 #>   [98,]   76  453  620  373  763  847  831  250  277   630 #>   [99,] 1000  974  256  489  257  352  484  633   12   149 #>  [100,]  195  465  202  464  608   67  286  502  457   726 #>  [101,]  765  678  834  713  953  650   29  776  533   417 #>  [102,]  717  875  362  601  526  905  997  198  634   667 #>  [103,]  689  807   20  150  908  583  332  474  870   187 #>  [104,]   86  206  613  161   83  123  335   47  994    95 #>  [105,]  470  531  351   45  836  211  530  497  694   546 #>  [106,]  910  940  631  715  509  692  119  808  919   165 #>  [107,]  582  761  539  924  812  732  527   46  776   460 #>  [108,]  978  425  296  295  480  254  906  193  872    78 #>  [109,]  478  491  112   27  185  228  751  385  684   564 #>  [110,]  777  519  335   86  252  874  459  549  188   970 #>  [111,]  827  323  270  152  322  348  886  314  481   326 #>  [112,]  228  109  185  564  491  399  397  684  234   291 #>  [113,]    2  541  251  507  244  851  952  668  895   690 #>  [114,]  700   92  951  307  733  137  383  967  639   231 #>  [115,]   18  502  350  225  593  311  286  195  632   464 #>  [116,]    8  909  323  270  111  827  944  841  829   144 #>  [117,]  609  587  603  823  730  295  566  380  532   193 #>  [118,]  904  982  961   11  496  774  927  446  653   957 #>  [119,]  692  106  715  910  149  901  631  329  789   462 #>  [120,]  624  861   82   97  888  882  208  551  918    10 #>  [121,]  872  708   10  299  296  378  690   58  862   330 #>  [122,]   84  805  486  743  548  230  600  236  320   578 #>  [123,]  206  545  613  508  675  260  104   83  921   317 #>  [124,]  742  341  768  637   34  636  313   73  583   671 #>  [125,]  379  565  205  386  821  220  745  794  253   513 #>  [126,]  654  561  445  570   21  401  532  160  753   823 #>  [127,]  427  157   43   72  310  262  733  138  512   718 #>  [128,]   65  436   53  674  973  830  979  456  450   991 #>  [129,]  387  947  642   66  510  239  317  417  955   244 #>  [130,]  825  452  651  634  220  928    6  451  386   849 #>  [131,]  288  612  233  392  997   54  363  725  543   860 #>  [132,]   41   66  931   77  229  597  658  737  834    54 #>  [133,]  464  457  283  962  286  529  497  781  530   572 #>  [134,]  350  490  593  927   11  961  632  518  388    18 #>  [135,]  842  620  930  850  907  900  389  213   90   985 #>  [136,]  637  341   73  878  636  124  768   51  342   503 #>  [137,]  639   10  334  114   92  296  307  862   60   733 #>  [138,]  262  484  992  513  565  833    9  379   43   855 #>  [139,]  398  592  785  309  781  546  889  460  174   530 #>  [140,]  643  917  266  537  331  683  297  929  802   276 #>  [141,]  584  547  771  458    6  868  571  178  745   728 #>  [142,]   70  695   19  897  579  156  750  146  295   274 #>  [143,]  232  227  769  780  955  151  661  577  893   410 #>  [144,]  829  234  877  708  690  886  775  481  228   909 #>  [145,]  277  213  276    7  850  925  389  297  808   628 #>  [146,]  156  579  480  453  702   19   70  731  872   108 #>  [147,]  865  924  701  539  468  994  194  931  622   312 #>  [148,]  568  318  798  338  282   89  935  163  964   504 #>  [149,]  621  352  992  789  652  119  633   12  484   876 #>  [150,]  474  103  689  215  966  342  807  428  332   499 #>  [151,]  769  287  508  239  921  642  260  955  780   680 #>  [152,]  886  505  380  730  603  193  856  912  175   978 #>  [153,]  516   64  591  344  914  699  999  630  586   958 #>  [154,]  968  321  418  293  895   63  763  552  952    98 #>  [155,]   17  884  391  533  977  406  709  349  754   703 #>  [156,]  579  146  453  731   90   19  620  693  702   135 #>  [157,]  427  523  127  512  396  248   87  718  666   138 #>  [158,]  884  551  263  391  567   29  368  624   17   765 #>  [159,]  985  930  400  901  900  702  876  741  168   633 #>  [160,]  906  401  753  652  570  425  126  445  837    49 #>  [161,]   86  883  335  749  104  777  994  613   47   360 #>  [162,]  680  435  239  455  393  151  642  947  327   780 #>  [163,]  798  991  979  429  353  568  788  456  148   610 #>  [164,]  544   36  716  964  368  650  158  889   17   884 #>  [165,]  245  488  746  377  106  197  257  715   23   910 #>  [166,]  974  271  890  256  494  272  366  704  434   915 #>  [167,]  252  519  460  188  549  736  761  308  540   846 #>  [168,]  901  633  191  159  400  985   12  707  489   149 #>  [169,]   33  583  187  569  281   20  559  795  371   908 #>  [170,]  330  806  384  727  676  407  541  709  383   960 #>  [171,]  981  887  998  327  285   85  432  618  822   326 #>  [172,]  276  213  567  297  145  850  389  907  918   882 #>  [173,]  948  704  596  494  256  687   48  817  711   324 #>  [174,]  546  325  757  460  549  365  556  736  592   889 #>  [175,]  199  886  399  856  394  877  234  730  440   823 #>  [176,]  667  967  725  198   32   77  809  298  233   501 #>  [177,]   16  671  374   33  313  623  284  871   55   868 #>  [178,]  451  468   25    6  584  589  771  141  571   527 #>  [179,]  240  819  515  417  398  572  781  663  776   283 #>  [180,]  722  532  289  319   88  843  609  746  810   692 #>  [181,]   72  875  231  967  700  114  307  661  362    32 #>  [182,]   62  103  807  689   83   95  104  206  150   477 #>  [183,]  716  184  863  650  669  525  403  723  964   889 #>  [184,]  403  525  669  183  650  415  441  417  716   819 #>  [185,]  397  564  112  835  109  880  922  522  203   337 #>  [186,]   23  409  257   71  817  980  794  580  885   559 #>  [187,]  908  583  169  486  615   20  485  487  689    33 #>  [188,]  846   25  540  460  335  167  761  527  549   194 #>  [189,]  739  722  180  445  609  319  810  352  370   205 #>  [190,]  278  894  903  954  287  291  605  976  112   399 #>  [191,]  433  859  168  489  537  226  929  237  557   707 #>  [192,]  574  993  645  514  939  711  959   22  821    97 #>  [193,]  295  505  603  730  978  117  380  729  152   570 #>  [194,]  527  924  540  761  335  572  460  776   47   188 #>  [195,]  100  202  502  593  632  350   67  315  608   465 #>  [196,]  301   88  375  843  289  599  524  587  564   532 #>  [197,]  422  969  416  556  245  165  524  599  509   595 #>  [198,]  362  725   32  452  855  875  224  649   56   220 #>  [199,]  175  334  570  394  440  753   79  877  862   401 #>  [200,]  661  102  905   72  448  181  469  717  875   943 #>  [201,]  937  305  888  475  766  918  953  246  854   219 #>  [202,]  608  195  100  421  465   67  726  382  629   315 #>  [203,]  522  246  397  922  835  299  854  763  690   185 #>  [204,]   61  361  360  783  972  879  563  793  664   560 #>  [205,]  794  682  745  281  722  377  728  746  638   125 #>  [206,]  123  104   95   83  613  597   15  275  363   921 #>  [207,]  987  880  735  679  478  835  467  209  219   953 #>  [208,]  217  741   10  631  876  120  789   57  882    58 #>  [209,]  701  622  385  478  865  987  207  921  751   109 #>  [210,]  843  336  919  940  289  932  910  554   28   746 #>  [211,]   45  331  105  140  863  836  683  531  356   470 #>  [212,]  610  555  890  557  648  857  979   65  770   788 #>  [213,]  850  276  297  389  145  172  907  842  620   277 #>  [214,]  923  304  455  507  646  393  895  251  144   552 #>  [215,]  474  966  499  485  799  559  450  187  980   332 #>  [216,]  816  395  815  282  580  456  340  252  353    53 #>  [217,]  208  741  631  876  400  808  587  901   57   106 #>  [218,]  694  283  359  497  286  464  133  530  625   669 #>  [219,]  782  461  698  679  457  937  475  305  524   207 #>  [220,]  379  452  526  938  130  855  125  686  825   198 #>  [221,]  996  575  408  614  517  747  871   96  498   738 #>  [222,]  333  490  961  466  957  388  518  447  554    11 #>  [223,]  420  430  727  960  840  172  676  709  907   567 #>  [224,]  649  833  855    9  787  514  390   79  959   440 #>  [225,]  115   18  311  694  502  286  836  464  350   530 #>  [226,]  929   40  537  237  719  859  760  433  956   773 #>  [227,]  769  469  577  661  259  232  143  410  780   362 #>  [228,]  491  112  234  877  708  109   27  378  481   775 #>  [229,]  737   77  410  275  983  132  658   54  363   597 #>  [230,]  600  412  743  486  122    1  236   93  265   617 #>  [231,]   32  444  362  501  440  649  198   79  767   954 #>  [232,]  143  227  769  780  469  259  661  151  577   260 #>  [233,]  131  612   54  725  298  288   77  667  500   312 #>  [234,]  708  228  877  112  144  886  481  856  397   185 #>  [235,]  913  553  510  482  359  891  552  947  435    39 #>  [236,]  322  578  866  600  805  803  320  605  399   894 #>  [237,]  329  665  760  797   57  901    7  226  631   808 #>  [238,]  648  590  885  853  557  936   71  660  677   496 #>  [239,]  642  680  435  508  317  947  151  242  209   701 #>  [240,]  819  417  179  283  441  515  663  471  398   309 #>  [241,]  867  473  799  963  370  485  911  411  739   189 #>  [242,]  883  529  749  421  994  515  987  508  249   735 #>  [243,]  618  981  976   61   69  664  779  605  887   879 #>  [244,]  766  937  953  475  201  851  435  668  713   305 #>  [245,]  165  280  757  197  969  488   23  458  416   540 #>  [246,]  203  854  522  763  922  461  475  888  201   835 #>  [247,]  684  844  617  302  602  651  903  795  399   619 #>  [248,]  523  686  396  873  379  526  826  125  849   220 #>  [249,]  891  749  529  359   39  883  242  465  629   133 #>  [250,]  831   76  389  882  763  299  850  854  246   522 #>  [251,]  144  507  829  909  775  214  690  455    2   113 #>  [252,]  519  167  308  504  340  549  188  816  110   456 #>  [253,]  414  386  657  580  821  125  543   23  280   340 #>  [254,]  837  483  978  425  906  108  193  160  295   729 #>  [255,]  840  709  535  533  697  668  713  806  727    29 #>  [256,]  974  817   99  186  173  494  538  409  257   433 #>  [257,]   23  186  794  165  817  715  746  377   71   692 #>  [258,]  594  936  528  585  498  963  590  810  189    71 #>  [259,]  469  444  954  287  227  780  190  501  231   362 #>  [260,]   38  151  123  675  769  410  292  577  469   921 #>  [261,]   13  553  304  552  516  214   63  629  235   202 #>  [262,]   43  138    9  833  992   92  649  855  224    60 #>  [263,]   22  391  376  812  158  884   82  645   97   551 #>  [264,]  696  805  578  706  548  864  627  764  606   534 #>  [265,]  319  656  654  722  619  445  402  548  532   126 #>  [266,]  917  628  388  683  140  927  869  640  277   982 #>  [267,]  702  159  772  930  985  296  876  900  536   741 #>  [268,]  685  492 1000  662  672  271  494  604   99   306 #>  [269,]  437  338  308  345   89    4  941  519  423   568 #>  [270,]  827  111  314  300  322  326  369  618  320   116 #>  [271,]  704  494  433  256  974  173  191  355   99   687 #>  [272,]  915  991  674  163  538  798  353  979  704   282 #>  [273,]  148  786  338  318  355   36  568  798  544   454 #>  [274,]  695  845  707  159   49   78  425  693  633    12 #>  [275,]  363  737  410  229  921  147  622  983  634   577 #>  [276,]  213  172  297  145  567  850  277    7  643   389 #>  [277,]  145  847  373  213  620  388  628  276  925   850 #>  [278,]  190  894  903   69  954  605  247  976  432   291 #>  [279,]  573  413  549  828  673  757  759  558   16   280 #>  [280,]  757  245   23  828  759  540  279  736  413   623 #>  [281,]  745   33  682  205  771  868  794  795  141   656 #>  [282,]  933  340  216  705  429  252  148  786  338   736 #>  [283,]  133  240  464  286  218  179  694  819  457   497 #>  [284,]   96   81  871  747  479  534  177  800  972   996 #>  [285,]  887  316  664   85  822  243  432  588   61   981 #>  [286,]  464  133  283  457  694  100  115  530  497   225 #>  [287,]  903  337  921  190  151  491   27  209  278   385 #>  [288,]  392  131  612  997  657  950  543   54  233   832 #>  [289,]  843   88  746  728  682  180  336  377  722   210 #>  [290,]  681  762  962  804  560  479   67  558  800   472 #>  [291,]  605  976  326  481  337  112  399  185  856   190 #>  [292,]   38  300  369  260  469  432  822  887  316   710 #>  [293,]  321  766  154  475  952  968  937  201  698   670 #>  [294,]  869  859    3  520  537  839   90  140  707   929 #>  [295,]  193  117  603  505  978  730   78  380  731   587 #>  [296,]   10  121  872  330  208  137  108  741  876   702 #>  [297,]  276  213  643  172  850  145  620  277  842   907 #>  [298,]  233   77   54  725  977  406  667  176  658   132 #>  [299,]  522   58  872  203  397  854   76  250  708   690 #>  [300,]  369  292   38  432  469  259  894  944  190   887 #>  [301,]  196   88  969  868  336  560  843  289  524   479 #>  [302,]  823  803  844  399  375  866  619   21  247   856 #>  [303,]  408   31  562  659  357  864  627  706  534    96 #>  [304,]  923  646   35   63  214  895  552  348  507   763 #>  [305,]  201  918  937  766  475  888  219  953   29   572 #>  [306,]  965  685  492  604  687  355  760   74  237   902 #>  [307,]  114  639  137   92  733  951  700  334   43   310 #>  [308,]  519  504  437  252  309  167  592  785   89   139 #>  [309,]  785  781  398  139  592  308  460  874  179   519 #>  [310,]   43  753  718  262  561  401  334   87  394   440 #>  [311,]  914  115   18  225  351  593  502  350  836    64 #>  [312,]  732  703  539  834   54  107  924   46  761   147 #>  [313,]  721  374  177  926  820   59  738  946  671   871 #>  [314,]  320  827  111  236  270  322  578  600  729   743 #>  [315,]  461  382  698  782  763  796  195  502  847   632 #>  [316,]  588  664  285  887   15  822  898  432  360   892 #>  [317,]  642   66  239  613  680  947  931  515  508    41 #>  [318,]  568  148  798  935   89  163   68  338   36   504 #>  [319,]  722  180  265  534  810   81   88  289  682   532 #>  [320,]  578  236  805  314  322  122  743  264  696    84 #>  [321,]  293  154  968  895  766  475  763  552  244   952 #>  [322,]  236  578  605  976  805  866  618  827  894   803 #>  [323,]  111  152  829  886  909  144  348  978  827   505 #>  [324,]  376  812  340  736  933  543  423  732  107   582 #>  [325,]  416  365  540  460  969  546  762  413  174   962 #>  [326,]  291  976  605  481  618  322  337  894  190   243 #>  [327,]   85  998  675  848  881  508  680  629   39   545 #>  [328,]  989  804  962  874  777  511  424  290  381   133 #>  [329,]  665   57  438  237  631  797  119  106  901   760 #>  [330,]  296  121   10  170  676  536  137  872  882   960 #>  [331,]  802  140  929  956  917  555  211  537  813   683 #>  [332,]  975  815  816  395  832  499   24  216  673   474 #>  [333,]  222  466  498  961  554  659  957  446  518   607 #>  [334,]  753  862  401   79  394  440   60  199  570   137 #>  [335,]   86  777  188  846   47  194   25  161  468   110 #>  [336,]  843  289  210   88  623  746  301  682  868   969 #>  [337,]  291  287  112  185  109  481  903  835  775   228 #>  [338,]  786  437  423  576  148  568  964  933  269   308 #>  [339,]  720  614  945  118  857  790  904  648  221    26 #>  [340,]  736  429  933  324  816  282  280  167  414   252 #>  [341,]   73  768  637  636  124  136  742  878  818   721 #>  [342,]  428  150  637  474  136  215  187  583   51   689 #>  [343,]  950  824  832   95   24  838  392  288   54   941 #>  [344,]  630  516  586  942  490   63  350  134   35   153 #>  [345,]   42  437  269  282  252  216  815   14    4   519 #>  [346,]  359  405  644  891  625  249  913  218   44    39 #>  [347,]   75  960  430  620  907  758  850  801  676   135 #>  [348,]  764  152  646  111  505  912  886  304  323   923 #>  [349,]   17  155  754  884  709  164  158  544  965   420 #>  [350,]  593  502   18  134  115  632  195  927  847   315 #>  [351,]  531  989  105  774  470  311  920  497  530   836 #>  [352,]  621  149  739  512  484  652  992   12  633   189 #>  [353,]  538  580  991  429  979  456   53  216  340   817 #>  [354,]    3  191  168  707  294  859  839  433  271  1000 #>  [355,]  704  687  719  544  431  965   40  306  226   173 #>  [356,]   45  211  716  935   36  544  863  778  889   183 #>  [357,]  606  742  303  706  408   31  696  402  548   264 #>  [358,]  959  787   46  860  812  458  589  488   56   543 #>  [359,]  891  249  218  529  283   39  465  286  913   749 #>  [360,]   15  588  204   91  664  563   61  994  571   892 #>  [361,]  569  204   61  986  972  870  374  892  820   793 #>  [362,]  198   32  231  954  452  501  767  102  444   875 #>  [363,]  275  634  131  737  997  288  130  983  451   725 #>  [364,]  801  418   75  968  154  347  516   98  430   630 #>  [365,]  325  416  595  546  556  472  640  197  174   969 #>  [366,]  911  450  799  434  966  409  499  974  873   256 #>  [367,]  550  655    5  738  611  740  996  575  712    50 #>  [368,]  431  376  719  158  582  263  884  812  736   164 #>  [369,]  300  292  469   38   93  259  432  894  779   448 #>  [370,]  411  963  402  189   34  635  739  867  445   265 #>  [371,]  892  795   69  617  844  771  664   33  247   651 #>  [372,]  170  383  951  700  114  639  307  137  330   384 #>  [373,]  847  277  453  388  796  925   98  628  134   490 #>  [374,]  820   59  970  177  313  569  361  926  972   986 #>  [375,]  532   21  638  934  302  823  619  196   88   289 #>  [376,]  812  263  582  324   48  107  358  438  391   368 #>  [377,]  728  746  488  692  462  682  289  843  794   165 #>  [378,]  708   27  491  228  877  109  751  390  862    58 #>  [379,]  220  125  855  452  138    9  565  938  523   526 #>  [380,]  730  603  823  912  505  856  152  117  886   404 #>  [381,]  726  611  804  740  800    5  655  989  972   465 #>  [382,]  782  461  796  315  698   67  632  219  246   195 #>  [383,]  951  114  700  967  733   92  406  407  806   176 #>  [384,]  541  170  727  960    2  330  676  420  223   840 #>  [385,]  751  209   27  688  109  478  896  701  851   893 #>  [386,]  589  253  451  543  860  584  825  178  414   358 #>  [387,]  129  535   66  697  642  668  701  713  931   809 #>  [388,]  628  925  518  266  373  277  640  509  917   554 #>  [389,]  850  882  831  907  213  620  250  842  145   276 #>  [390,]  495  602  784  478   27  787  751  514   56   467 #>  [391,]  884  263   22  812  703  645  158  376  155    46 #>  [392,]  288  657  131  997  832  950  612  543  825   451 #>  [393,]  455  507  337  775  481  162  435  944  553   421 #>  [394,]   79  440   21  561  862  334  401  570  753   375 #>  [395,]  816  216  815   53  499  580  456  332  436   759 #>  [396,]  686  248  873  523  526  157  826  379  419   220 #>  [397,]  522  185  564  203  112  109  299  922   58   835 #>  [398,]  592  139  309  785  781  179  572  546  460   776 #>  [399,]  856  302  605  112  564  866  684  291  803   175 #>  [400,]  901  691  985  808  900  217  159  930  106   631 #>  [401,]  753  570  652  160  561  334  126  934  654   906 #>  [402,]  635  606   34  265  370  534  319  411  548   581 #>  [403,]  184  650  525  415  670  723  778  669  852   863 #>  [404,]  912  856  380  564  302  196  823  803  399   476 #>  [405,]  755  663  506  511  625  874  346  749  161   104 #>  [406,]  990  500  155  192  391  645  725   22  993   711 #>  [407,]  604   97  939   10   57  574   60  645  789   192 #>  [408,]  303   96   31  221  996  534  659  284  747   443 #>  [409,]  186  434  980   71  580  799  559  538   23   256 #>  [410,]  577  275  229  983  737  363  921  123  260   769 #>  [411,]  370  963  402  635  189   30   34  739  445   265 #>  [412,]  230  615  743  486    1  826  122  600  448    87 #>  [413,]  279  573  828  757  558   16  623  549  325   416 #>  [414,]  657  253  543  821  386  596  340  392  938   580 #>  [415,]  778  403  184  525  650  716  952  183  840   670 #>  [416,]  325  969  595  365  197  472  623  413  762    16 #>  [417,]  819  240  179  515  441  101  283  678  650   471 #>  [418,]  154  968  630   63   98  364  516  321   35    75 #>  [419,]  724  513  938  711  993   37  672  379  138   596 #>  [420,]  223  727   74  960  430  676  349  709  758   840 #>  [421,]  608  202  629  242  880  783  735  987  998   563 #>  [422,]  599  524  197  969  744  509  797  918  631   488 #>  [423,]  933  576  732  324  312  107  964  338  786   736 #>  [424,]  986  814  752  511  328  550  756    5  820   970 #>  [425,]  906  160  483   78  254  845  108   49  695   837 #>  [426,]  731  447  912  505  380  404  587  117  566   295 #>  [427,]  157  127   72  310  748  396  718  523  666    43 #>  [428,]  342  150  187  503  474  908  689  826  103   807 #>  [429,]  736  340  353  280  456  817  757   23  431   773 #>  [430,]   75  223  960  347  172  952  907  850  297   293 #>  [431,]  773  719  368  521  736   40  429  956  376   817 #>  [432,]  887  779  664  618  894  278   38  588  316   190 #>  [433,]  191  557  226  704  817  271  929  885  237   256 #>  [434,]  409  450  911   71  186  974  538  885  256   366 #>  [435,]  239  642  947  510  735  680  835  242  162   244 #>  [436,]   53  456  395   55  759  450  128  636  818   409 #>  [437,]  269  308  338   89  519  345  568  252  423   504 #>  [438,]   48  665  329  488  574  462   57  376  797   263 #>  [439,]  897   70   35  646  480  505  146  447  426   348 #>  [440,]   79  394  649  862  334  224  444  231  833    21 #>  [441,]  819  240  471  417  184  669  625  283  525   179 #>  [442,]  926  946  970  721  714   55  313   59  820   573 #>  [443,]  446  800  593  957   11  518  517  134  747   961 #>  [444,]  231  440  259   32  767  954  501  491   79   877 #>  [445,]  654  126  609  265  739  189  722   49  561   532 #>  [446,]   11  957  961  517  518  443  904  496  134   747 #>  [447,]  426  731  453  912  373  932  562  222  156   566 #>  [448,]   93  487  767  412  230  477  779  486  905   954 #>  [449,]  659  528  357  303  258  614  408  963  402    30 #>  [450,]  499  436  434  409  395   53  215  580  366   911 #>  [451,]  178  589  468   25  860    6  386  584  825    56 #>  [452,]  220  855  130  379  198  849  526  224  651   649 #>  [453,]  156   98  373  620  579  731  447  146  277    76 #>  [454,]  355  273  704   40  544   36  271  719  798   935 #>  [455,]  393  507  944  162  214  775  481  337  435   553 #>  [456,]   53  759  816  436  395  279  429  216  252   353 #>  [457,]  133  464  572  219  286  962  679  698  305   937 #>  [458,]  584  488  141  358  728  547  959  377  969   462 #>  [459,]  110    4  814  752  970  519  777   86  874   815 #>  [460,]  540  761  188  527  167  592  325  549  785   781 #>  [461,]  782  698  382  315  219  796  246  475   67   632 #>  [462,]  488  377  728  631  934  458  692  514  438   746 #>  [463,]  840  709  977  255  727  155  535  806  533   697 #>  [464,]  286  133  457  283  100  694  530  497  962   115 #>  [465,]  100  726  195  202  249  464  286  891  608   381 #>  [466,]  333  498  607  594  222  554  528  693  853   869 #>  [467,]  784  744  495   82  679  865  478  547  524   888 #>  [468,]   25  178  451    6  188  846  147  838  589   194 #>  [469,]  259  227  661  577  292  260   38  369  954   362 #>  [470,]  105  531  351  497  694  530  836   45  225   211 #>  [471,]  441  819  240  947  417  663  515  510  529   317 #>  [472,]  632  595  416  640  365  796   67  782  681   800 #>  [473,]  241  867  936  489   71  434  974  258  911   963 #>  [474,]  215  966  499  150  332  187  908  485  689   103 #>  [475,]  937  201  766  305  698  219  246  461  953   735 #>  [476,]  864   31  404  764  706  264  696  912  879   578 #>  [477,]  807  905  928  487  634  448  717  908  588   316 #>  [478,]  109   27  751  784  684  209  602  491  467   390 #>  [479,]  560  800  681  290  284   67  301   81   94   972 #>  [480,]  146  872  108  978  156  299  439  646  536   295 #>  [481,]  291  326  234  228  112  337  605  976  775   185 #>  [482,]  913   39  235  881  891  553  359  510  249   680 #>  [483,]  425  254  906  837  160  108  748  772  753   401 #>  [484,]  992  565  138  352  513  149  833  119  652   574 #>  [485,]  799  867  615  980  215  248  826  523  559   187 #>  [486,]  615    1  122  412  230  187   34  548  743   265 #>  [487,]  908  905  928  849    1  448  486  477  651   634 #>  [488,]  462  458  377  165  728  438  358  746  959   245 #>  [489,]  936   99  885   71  257  715  191  168  919   707 #>  [490,]  134  927  961  222  373   11  388  982  266   350 #>  [491,]   27  109  228  112  378  478  903  684  751   390 #>  [492,]  306  685  965  604  268  902  168  839  985   407 #>  [493,]  348  323  111  439  899  270  897  314  764   152 #>  [494,]  948  173  672  256  271  711  596  704  724   974 #>  [495,]  784  467  751  390  861   56  713  809   46    82 #>  [496,]  904  517  653  957  677  554  518   11  446   774 #>  [497,]  530  694  546  464  133  283  531  286  785   218 #>  [498,]  466  333  554  594  590  853  496  528  659   957 #>  [499,]  395  215  966  450  332  580  816  474  559   815 #>  [500,]  711  938  596  543  821  192  993  406  724   725 #>  [501,]   32  688  893  231  598   27  444  491  362   896 #>  [502,]  115  350   18  593  195  632  315  134  100   225 #>  [503,]   51  124  357  606  615  187   84   34  428   742 #>  [504,]  308  519  252  167  549  174  568  736  309   785 #>  [505,]  152  193  380  603  730  912  295  886  897   426 #>  [506,]  941  755    4   83  663  405  597   41  104    47 #>  [507,]  775  922  895  690  835  203  393  552  455   185 #>  [508,]  239  921  151  642  675  680  123  613  317   242 #>  [509,]  808  940  925  106  631  910  628    7  422   197 #>  [510,]  947  435  515  129  471  244  529  417  235   239 #>  [511,]  328  424  874  989   44  405  777  804  644   814 #>  [512,]  739  352  718   87  621  992  652  138  484   160 #>  [513,]  138  821  565  484  711  724  993  419  574   379 #>  [514,]  645   97  959  939   22  787  192  574  358   390 #>  [515,]  179  417  953  529  240  947  242  701  317   819 #>  [516,]  344  630  418   63  153  968  154   35   18   502 #>  [517,]  496  957  747  446  904  653  518   11  554   800 #>  [518,]  957  554  388   11  517  496  446  961  134   595 #>  [519,]  252  308  167  504  110  549  309  188  460   785 #>  [520,]  869  294   26   90  466  222  333  266  917   607 #>  [521,]  770  956  773  813  802  542  431   40  719   174 #>  [522,]  203  397  299  246  854  922   58  185  835   708 #>  [523,]  248  686  379  396   87  849  157  125  826   485 #>  [524,]  599  422  744  969  467  219  679  197  301   458 #>  [525,]  669  184  852  403  183  863  441  778  415   723 #>  [526,]  220  686  452  379  717  875  938  997   37   396 #>  [527,]  540  761  924  194  460  539  107  776  188   582 #>  [528,]  659  594  581  498  258  466   28  562  333   932 #>  [529,]  749  883  242  249  515  133  283  663   39   947 #>  [530,]  497  694  546  723  464  531  139  286  133   283 #>  [531,]  351  105  530  546  365  497  470  683  640   774 #>  [532,]  375   21  180  722  638  619  934  654  823   289 #>  [533,]   29  765  713  535  709  697  255  101  840   884 #>  [534,]   81  319   96  548  284  566  402  581  265   606 #>  [535,]  697  713  533  255  668  809  896  387  709   765 #>  [536,]  330  296  480  772  872  108  121  146  702   639 #>  [537,]  859  929  226  140  917  869  802    7  294   691 #>  [538,]  353  580  991  979  429  409  817  256  186   456 #>  [539,]  924  761  732  107  312  527   46  147  776   589 #>  [540,]  527  460  761  188  846  325  828  194   25   178 #>  [541,]    2  727  384  113  840  255  330  223  170   709 #>  [542,]  813  677  521  757  802  660  245  956  197   174 #>  [543,]  860  589  821  386  358  414  657  938   46   787 #>  [544,]   36  164  719  368  935  355  716  431   40   964 #>  [545,]  123  675  971   83  613  508  206  317  104   260 #>  [546,]  365  530  139  785  174  325  556  592  398   497 #>  [547,]  141  584    6  865  571  784  467  458  602   771 #>  [548,]  606  534  805   81  265  264  803   34  696   122 #>  [549,]  279  413  167  460  188  558  777  757  846   325 #>  [550,]    5  367  424  986  820  721  655  611  740   738 #>  [551,]  624  158  567  263   82  797  918  120   29   882 #>  [552,]  895  553  507  321  315  421  835   63  763   435 #>  [553,]  629  552  421  235  393  891  202  435  249    39 #>  [554,]  518  957  496  210  853  498  517  940  388   628 #>  [555,]  331  648  212  929  859  802    3  238  537   853 #>  [556,]  197  365  640  683  813  546  325  416  174   422 #>  [557,]  885  433  890  238  979  991  648  817  191   489 #>  [558,]  413   16  762  279  573  828  623  549  926   970 #>  [559,]  980  759  794   33  281  169   55  253  186   205 #>  [560,]   94  681  479   67  290  563  301  868  571   762 #>  [561,]  126  654   21  394  401  570  753  619  656   532 #>  [562,]  627  581  566  303  641  408  447  912  603   528 #>  [563,]   94   91  560  571  547  987  622  247  360   994 #>  [564,]  397  185  112  856  399  684  109  302   94   522 #>  [565,]  484  125  821  513  138  833  377  574  379   205 #>  [566,]  581  609  117   28  932  534  180  603  532   587 #>  [567,]  276  172  551  158  918  213  797  760  145     7 #>  [568,]  148  318   89  798  338  504  308  935  163   437 #>  [569,]  870  361  374   59   20  892  169  583  313   820 #>  [570,]  126  401  561  654  730  823  160  753   21   117 #>  [571,]  771    6   91  141  547  178  563  795  584   868 #>  [572,]  776  457  924  194  679  592  527  744  398   179 #>  [573,]  279  413  759   16  757  558  623  828   55   673 #>  [574,]  192  939  993  514  645  438  821   97  959    48 #>  [575,]  996  738  221  655  871  946  747  740  653   517 #>  [576,]  423  964  338  786  977  678  834  703  312   164 #>  [577,]  410  983  227  275  260  469  229  601  737   363 #>  [578,]  805  322  236  264  696  320  866  803  764   976 #>  [579,]  156  146   19  453   90  702  135  750  693   620 #>  [580,]  353  538  816  253  395  414  340  216  409   186 #>  [581,]  566  609   28  562  534  932  627  402  117   528 #>  [582,]  107  761  812  376  527  539  924  460  592   744 #>  [583,]   20  169  187  569   59  689  870  721  637    33 #>  [584,]  141  547  458    6  178  771  451  868  571   602 #>  [585,]  810  671  660  336  919  210  319   96  594   180 #>  [586,]  942   50  344  443  593  311  446  591  350   961 #>  [587,]  117  731  375  217  932   78  934  532  196   609 #>  [588,]   15  664  360  316  892  432   91  887  371    69 #>  [589,]  860  451   46  543  178   56  386  358  732   539 #>  [590,]  853  660  238  936  648  677  496  554  498   585 #>  [591,]  699   64  914  586  153  836  311  942  999   982 #>  [592,]  398  139  785  460  781  309  572  582  107   546 #>  [593,]  350  134  632  502  195  115   18  443   11   472 #>  [594,]   28  258  528  498  919  932  585  607  936   466 #>  [595,]  416  472  365  677  969  623  336  920  197   653 #>  [596,]  948  500  711  657  414  938  724  173  705   821 #>  [597,]  931   41  838   47  147  132  613   66  312   737 #>  [598,]  896  495  809  861  390  501  751   32  688   378 #>  [599,]  422  524  854  744  196  969  197  918  462   509 #>  [600,]  230  236  866  743  803  122  617  619  805   561 #>  [601,]  983  612  102  229  949  577  363  997  233   131 #>  [602,]  622   56    6  478  390  684  547  247  787   584 #>  [603,]  730  380  117  193  823  505  295  566  152   912 #>  [604,]  407  685   57  965  939  574  687   97  192   789 #>  [605,]  976  291  399  322  326  856  894  866  618   278 #>  [606,]  635  402  548   34  357  534  264  265  743   696 #>  [607,]  691  466  693  707  594  853  869   90  554   400 #>  [608,]  202  421   67  100  195   94  783  382  560   879 #>  [609,]  445  117  566  180  581   28  532  722  654   126 #>  [610,]  212  788  770  979  163  991  521  798  557   555 #>  [611,]    5  381  740  655  793  367  726  972   50   738 #>  [612,]  131  288  997  233  392   54  950  601  363   657 #>  [613,]  994  883  123  104  317  161  508  597  206    47 #>  [614,]  659  221  408  498  303  333  996  446  575   339 #>  [615,]  486   34  412    1  485  187  743  635  826   265 #>  [616,]  824   54  343  132  941  950  229  269  597    41 #>  [617,]  844  619  247  651  803  656  866  302  795   371 #>  [618,]  976  243  981  779  326  605  894  322  432   291 #>  [619,]  656   21  638  617  844  532  302  654  375   265 #>  [620,]  850  389  213  135  277  831  842  907  297    98 #>  [621,]  352  149   12  633  652  992  739  119  512   789 #>  [622,]   91  602  209  903  921    6  865  478  994   547 #>  [623,]   16  413  828  336  757  573  416  677  595   558 #>  [624,]  551  120   82  861   29   97  918   22  158   263 #>  [625,]  441   52  984  218  819  471  240  663  669   405 #>  [626,]  641  303  562  858  659  627   31  942  408   447 #>  [627,]  562  858  581  264  603  566  729  303  635   764 #>  [628,]  388  925  509  266  808  940  917  277  145   691 #>  [629,]  998  421  783  553   85  202  608  879  249   242 #>  [630,]  344  516   98   63  847  373  418  490  453   350 #>  [631,]  106  808  329  509  217  797   57  910  462   119 #>  [632,]  472  796  593  350  782  382  195  134  640   461 #>  [633,]   12  621  149  352  168  845  901  159  652   119 #>  [634,]  928  363  130  905  717  825  997  452  275   362 #>  [635,]  606  402  743   30   34  265  548  370  411   615 #>  [636,]  768  637  341   73  818   55  436  124  878   721 #>  [637,]  341  636  878  136  768  124  583   73  721    51 #>  [638,]  619   21  656  532  728  375  745  722   88   934 #>  [639,]  137  772  307  334  114  296  108  199   10    92 #>  [640,]  683  556  472  388  632  365  197  595  813   796 #>  [641,]  626  562  897  447  627  764  858  899  426   303 #>  [642,]  239  317  680  435  701  508  947  209  151   387 #>  [643,]  297  140  276  842  213  145    7  135  172   917 #>  [644,]   44  346  511  405   80  625  984  218  328   874 #>  [645,]   22   97  514  192  959  263  574  358  391   787 #>  [646,]  923  304   35   63  439  690  348  480  895   144 #>  [647,]   84  898  779  981  122  320  887  822  710   664 #>  [648,]  238  853  590  885  557  555  904  496  677   660 #>  [649,]  224  855    9  833   79  440   92  262  787   514 #>  [650,]  678  101  716  403  184  183  765  417  164   723 #>  [651,]  617  849    1  745  130  656  619  247  844   795 #>  [652,]  401  621  149  934  992  160  789  352  753    60 #>  [653,]  774  920  496  904  517  677  595  747  957    11 #>  [654,]  126  561  445   21  532  265  722  619  570   656 #>  [655,]  740  575  738  367   50    5  714  611  381   996 #>  [656,]  619  638   21  617  265  722  844  745  532   654 #>  [657,]  414  392  253  543  288  938  596  386  705   821 #>  [658,]   77  132  229  955   66  737  387  298  931    41 #>  [659,]  528  614  408  303  498  333  221  562  466   449 #>  [660,]  677  590  919  336  810  585  715  210  165   623 #>  [661,]  227  469  362  102  577  259  181  200  231   232 #>  [662,]  672  666  419  724  513  494 1000   99  138   157 #>  [663,]   47  179  240  874  819  781  529  161  309   515 #>  [664,]  588  316  892  887   69   15  285  360  432   243 #>  [665,]  329  438  797  237   48   57  687  760  376   263 #>  [666,]  662  672  157 1000  512  241   99  127  352    12 #>  [667,]  176   37  725  233  198  875  102  131  612   967 #>  [668,]  896  851  535  697  713  688  255  893  751   385 #>  [669,]  525  852  184  183  441  403  863  218  723   819 #>  [670,]  723  863  766  403  852  530  716  305  889   650 #>  [671,]  177  818   55  585  623   16  810  946  313   871 #>  [672,]  662  494  724  419  666  948  513   99 1000   711 #>  [673,]  279  828  846  759  975  573  970  413  188    16 #>  [674,]  915   14  353  216  395  538  456  128  436   163 #>  [675,]   85  327  508  545  123   15  260  998   38   971 #>  [676,]  907  960  882  389  850  842  330  296  551   213 #>  [677,]  660  496  653  595  542  623  904  336  590   517 #>  [678,]  834  101  650  765  417  977  179  931  703   398 #>  [679,]  207  987  219  735  467  880  865  776  784   572 #>  [680,]  239  642  317  947  508  435  162  151  955   242 #>  [681,]  290  762  560   67  962  479  416   94  301   868 #>  [682,]  746  728  289   88  794  205  745  281  377   843 #>  [683,]  640  813  917  556  266  802  956  388  140   197 #>  [684,]  247  478  903  602  564  112  109  399  302   491 #>  [685,]  965  604  306  492  407  687  990  268  754    57 #>  [686,]  248  523  396  526  379  220  849  905  452   873 #>  [687,]  665   48  438  604  329  173  948  711  237   376 #>  [688,]  893  385  896  501  751  668   27  598  851   809 #>  [689,]  103   20  583  807  870  908  187  169  332   474 #>  [690,]  203  299  522  922  507  775  708  872  144   121 #>  [691,]  940  607  400  910  808  715  509  693  106   628 #>  [692,]  910  715  119  746  106  377  919  843  289   728 #>  [693,]   78  607  691   90   28  932  400  695  587   628 #>  [694,]  497  530  218  286  464  283  225  723  133   470 #>  [695,]  274  845   78  693  425   49  159  702  579   142 #>  [696,]  264  706  805  864  578  548   84   31  122   606 #>  [697,]  535  809  713  533  668  896  255  387  861   495 #>  [698,]  461  782  219  315  382  475  796  246  937   632 #>  [699,]  591  914   64  836  311  982  586  999  153   927 #>  [700,]  114  967  383  951   92  231   32  307  501   598 #>  [701,]  209  147  865  385  931  495  953  642  713   751 #>  [702,]  930  159  579  267  985  146  156  876  741   900 #>  [703,]  312  732   46  391  834  812  539  107  924   860 #>  [704,]  173  271  433  355  773  256  431  817  687   494 #>  [705,]  988  933  786  282  596  657  340  324  414   950 #>  [706,]  696  864  264   31  578  476  805  357  303   858 #>  [707,]  607  168  691  274  489  859  191  466  869   936 #>  [708,]  234  378  877  228  121   58  397  299  522   112 #>  [709,]  840  255  533  727  806   17  535   29  155   697 #>  [710,]  943  822  292  898  647   38  316  477  887   369 #>  [711,]  500  821  192  948  596  513  724  993  574   938 #>  [712,]  995  714  655  367   50  550    5  442  575   790 #>  [713,]   29  697  535  533  861  765  953  495  896   101 #>  [714,]  995  655  946  442  989  774  920  712  790   926 #>  [715,]  910  919  106  692  940  119  746  691  165   843 #>  [716,]  183  164  650  863  889  670  723  778   36   964 #>  [717,]  905  997  634  102  526  928  220  452  363   130 #>  [718,]   87  512  126  310  561  753  654  739  160   445 #>  [719,]   40  431  773  368  544  956  521  226  935   770 #>  [720,]  339   26  614  333  498  466  659  945  792   520 #>  [721,]  313   59  926  820  374  442  738  946  878   970 #>  [722,]  180  532  319  638  289  205  656  265  654   682 #>  [723,]  670  863  530  852  403  694  283  766  889   716 #>  [724,]  419  711  513  938  596  500  948  993  672   821 #>  [725,]  198  233  131   56  787  860  703  809  667   737 #>  [726,]  381  465  100  195  804  202  611  608  783   593 #>  [727,]  840  709  223  255  420  806  541  170  533   676 #>  [728,]  377  746  289  682   88  843  638  488  462   458 #>  [729,]  193  603  899  505  837  730  152  295  627   978 #>  [730,]  380  603  823  117  570  193  152  505  886   856 #>  [731,]  426  447  587  932  453  156  373  117  912   295 #>  [732,]  312  539  761  107  703  589   46  924  423   812 #>  [733,]  951   92  114  262    9  307   43  993  383    60 #>  [734,]  758   74  643  140  356  211  331  297  929   839 #>  [735,]  880  207  987  835  679  937  953  922  475   219 #>  [736,]  429  340  167  324  280  582  174  107  757   431 #>  [737,]  275  229   77  363  410  931  725  147  132   809 #>  [738,]  996  740  575  871  313  655  820  367  946   747 #>  [739,]  189  512  352  445   87  654  722  718  621   126 #>  [740,]  871  972  738  820  655  996  800  611  381     5 #>  [741,]  876  789  217  208  901   57  149  400  159   930 #>  [742,]  124  357  313  996   96  738   34  221  671   606 #>  [743,]  122  230  635  412  600  486  615  606  548   805 #>  [744,]  524  467   82  422  776  784  918  599  527   924 #>  [745,]  281  682  205  638  728  656  651  771  141   794 #>  [746,]  377  843  289  728  682  692   88  336  165   919 #>  [747,]  871  517  800   96  284  653  996  957  496   479 #>  [748,]  483  837  718  310  906  160  512  127  427   254 #>  [749,]  883  529  249  242  161   39  613  663  994   783 #>  [750,]   19  579  453  156  146   70   90  142   98   620 #>  [751,]  385   27  478  495  896  109  861  784  390   851 #>  [752,]  814   59  970  986  374  424  820  870   86   569 #>  [753,]  401  334  561  160  652  570   43  126  394   310 #>  [754,]  990   17  349  155  965  406  884  685  604   407 #>  [755,]   52  506  405  625    4  471  663  941  441   346 #>  [756,]  793    5  986  783  879  424  611  550  972    61 #>  [757,]  280  413  245  279  828  623  573  174   16   540 #>  [758,]   74  960  420  347  902  734   75  430  643   223 #>  [759,]  279  673   53  573   55  828  280  559  456   757 #>  [760,]  237    7  797  329  665   57  900  551  808   567 #>  [761,]  539  107  527  460  540  924  732  582  188   194 #>  [762,]  290  681  962  558  325  416  560   16  804   846 #>  [763,]   76  246  203  315  250  895  461  698  831   854 #>  [764,]  348  912  578  476  264  322  505  152  404   380 #>  [765,]   29  101  533  713  305  678   82  834  953   918 #>  [766,]  475  937  201  305  244  293  953  670  918   888 #>  [767,]  954   93  444  190  651  617  894  278  849   362 #>  [768,]  636   73  818  341  124   55  637  671  313   721 #>  [769,]  151  227  955  780  260  410  143  287  577   232 #>  [770,]  521  773  956  802  788   40  542  813  431   174 #>  [771,]  571    6  141  795  584  868  281  178  745   547 #>  [772,]  639  108  137  296  536  483  267  702  330   425 #>  [773,]  431  521  770   40  719  956  798  429  817   226 #>  [774,]  920  653  904  496  517   11  351  595  446   118 #>  [775,]  922  507  835  228  185  690  234  109  851   112 #>  [776,]  572  924  744  527  539  194  107  679  865   582 #>  [777,]  335  874  110   86  188  549  781  846  161   962 #>  [778,]  415  403  863  716  670  852  525  184  723   183 #>  [779,]  894  618  432   69  243  278  664  976  887    93 #>  [780,]  893  769  259  151  287  688  501  227  232   944 #>  [781,]  785  309  398  592  139  460  777  194  874    47 #>  [782,]  461  698  382  796  219  315  632  854  246    67 #>  [783,]  879  204   61  629  793  998  608   85  421   202 #>  [784,]  467  495  478  865   82  390  744  547  751   679 #>  [785,]  781  309  139  592  398  460  546  549  874   325 #>  [786,]  933  338  705  423  576  988  282  324   54   732 #>  [787,]   56  959  358  860   46  514  224  390  589   602 #>  [788,]  770  916  610  521  163  504  174  979  105   956 #>  [789,]  876  741   60  149  939  652  992  119   57   208 #>  [790,]  995  946  575  714  442  916  818  653  926    73 #>  [791,]   51   20  898  870  569  583  689  550  721    59 #>  [792,]  945  648  238  555  212  339  557  885  890   720 #>  [793,]  879   61  972  783  756  204  361  611    5   986 #>  [794,]  205  682  377  746  745  257  728  281  559   980 #>  [795,]  371  771  892  844  571  617   33   69  247   281 #>  [796,]  782  382  632  461  698  472  315  373  219   925 #>  [797,]  665  329  631  760  438  422  551  237  263    57 #>  [798,]  163  148  568  318  773  429  991  935  431   282 #>  [799,]  485  980  409  867  559  125  241  248  186   966 #>  [800,]  747  479  871  920  517  740  443  595  472   290 #>  [801,]  364  347   75  418  430  960  758  154  968    98 #>  [802,]  813  956  521  331  683  542  929  770  917   537 #>  [803,]  866  302  844  617  805  619   69  399  236   548 #>  [804,]  290  328  962  989  762  381  681  972  820   726 #>  [805,]  578  696  264  236  548  803  122  866  322    84 #>  [806,]  709  255  697  840  535  598  533  727  155   668 #>  [807,]  103  477  689  908  487  905  928  717  150    95 #>  [808,]    7  509  631  106  940  400  925  628  691   217 #>  [809,]  697  535  495  713  598  896   77  668  725   703 #>  [810,]  585  919  319  180  682  289  336  746  843   660 #>  [811,]  298  463  977  155  754  658  406   77  990   176 #>  [812,]  376   46  263  107  358  582  324  391  703   959 #>  [813,]  802  542  956  683  556  521  640  197  917   770 #>  [814,]  752  986  970   59  424  374  820  870  361    86 #>  [815,]  332  395  216  816  975  832  499  252   24   456 #>  [816,]  395  216  975  815  580  340  456  332  759    53 #>  [817,]   23  186  257  256  429   48  280  165  885   245 #>  [818,]  671   55  768  636  946  573   73  436   71   926 #>  [819,]  240  417  179  441  471  283  663  515  398   650 #>  [820,]  374  972  740  313  970  926   59  986  361   177 #>  [821,]  565  543  513  938  711   48  358  414  386   574 #>  [822,]  316  887  898  285  432  710   38  664  292   588 #>  [823,]  730  380  302  375  603   21  532  117  570   856 #>  [824,]  343  950  616   54  612   95  941   62  838   288 #>  [825,]  130  928  386  451  178  392  771    6  220   634 #>  [826,]  248  523  485  615  686  412  908  487    1   396 #>  [827,]  111  322  270  236  894  326  976  618  605   314 #>  [828,]   16  413  846  623  279  673  757  540  280   188 #>  [829,]  144  877  909  234  708  886  121  323  872   690 #>  [830,]   14  973  128  674  456  459  163   53  436   504 #>  [831,]  250  389  882   76  850  620  213  907  854   299 #>  [832,]   24  975  392  950   25  838  343  468  816   332 #>  [833,]  224  649    9  262  855   60  138  565  939    79 #>  [834,]  678  101  703  312  931  539  765  924  732   107 #>  [835,]  922  880  185  735  203  775  207  397  109   246 #>  [836,]  982  225  927  311  531  105   18  351  470   699 #>  [837,]  906  254  160  483  729  570  978  425  193   748 #>  [838,]  597  468   47   25  832   24  312  335  732   147 #>  [839,]  985  900  902  930  842  294  135  537  159   859 #>  [840,]  255  709  727  533  535  806  697   29  223   668 #>  [841,]  307  639  199    8  310  909  483  837  114   137 #>  [842,]  135  907  213  900  850    7  930  389  620   297 #>  [843,]  289  746   88  336  210  728  682  377  692   180 #>  [844,]  247  617  302  619  803  795  656  638  684   866 #>  [845,]  274  695   49  633   12  425   78  621  906   693 #>  [846,]  188   25  828  540  335  673  468  178  460   527 #>  [847,]  277  373  796  315  145  134   98  350  782   388 #>  [848,]  327  881  675  680  545  971   85  162   39   508 #>  [849,]    1  651  452  487  130  379  686  523   87   928 #>  [850,]  389  213  907  620  831  882  842  297  276   145 #>  [851,]  896  668  922  751  385  861  775  888  835   893 #>  [852,]  863  669  525  723  670  403  694  778  218   184 #>  [853,]  590  554  648  238  607  496  660  498  691   904 #>  [854,]  246  522  888  203  599  918  201  782  219   299 #>  [855,]    9  224  649  452  379  833  220  198  262   993 #>  [856,]  399  564  380  302  605  886  112  404  823   234 #>  [857,]  916  339  555  212  118   26  790  648  945   610 #>  [858,]  627  562  706  264  303  899  764  696  357   641 #>  [859,]  537  929  191  226  294  869  853  691    3   433 #>  [860,]  589   56   46  543  787  451  358  959  386   178 #>  [861,]   82  120  888  713  624  751  495   29  896   784 #>  [862,]   79  334   58  394   60   10  440  378  401   708 #>  [863,]  723  670  852  716  183  530  778  889  669   403 #>  [864,]   31  476  706  696  264  805  578   81  303   408 #>  [865,]  147  547  924  467  784  679  209  622  194   776 #>  [866,]  803  302  617  236  399   69  844  805  605   322 #>  [867,]  241  485  963  799  370  473  411  980  189   911 #>  [868,]  141   88  771  301  682  336  281  560  584   571 #>  [869,]  294   90  266  917  607  537  520  859  691   628 #>  [870,]  569   20  361  892   59  986  752  583  689   814 #>  [871,]  747  284   96  740  996  738  800  177  479   575 #>  [872,]  121  299  480  296  690  250  708   58   10   831 #>  [873,]  396  248  686  966  523  526  799  419  215   474 #>  [874,]  777  781  785  309  663  110  328  335   47   161 #>  [875,]  198   37  526  855  102  181  667  452  362     9 #>  [876,]  741  789  217  901  208  149  159   57  652    60 #>  [877,]  234  228  708  378  144  829  491  175  112   121 #>  [878,]  637  721  636  341  768  136   73  583   59    51 #>  [879,]  793  783   61  204  243  608  972  756  202   629 #>  [880,]  735  207  987  835  922  679  185  109  478   397 #>  [881,]   39  971  327  848   85  998  482  675  629   545 #>  [882,]  389  831  907  850  250  213  120  551  208   624 #>  [883,]  749  242  529  994  613  161  249  515  508   360 #>  [884,]  391  158   17  263  155   22  533  551  645   812 #>  [885,]  557  238   71  186  590  489  936  648  817   660 #>  [886,]  152  856  234  380  175  730  505  399  144   708 #>  [887,]  432  285  316  664  981  822  618  779  243   588 #>  [888,]  201  918  854   82  861  305  467  937  246    29 #>  [889,]  139  546  174  556  592  716  398  935  530   368 #>  [890,]  557  433  991  885  979  974  212  704  191   256 #>  [891,]  359  249   39  529  465  749  218  913  553   629 #>  [892,]  371  795   69  664  588  569  361  870  360    61 #>  [893,]  688  896  385  501  668  780  851   27  751   775 #>  [894,]  190  278  779  605  976  618   69  432  866   291 #>  [895,]  552  763  507  203  321  690   63  246  154   304 #>  [896,]  668  851  751  688  385  861  598  893  713   697 #>  [897,]  505   70  439  899  193  295  729  978  641   142 #>  [898,]  316  822  285  664  870  887  647   84  588   892 #>  [899,]  729  897  627  858  193  505  641  562  295   603 #>  [900,]  985  930  842  400  901    7  159  808  135   760 #>  [901,]  400   57  119  741  985  900  876  329  159   631 #>  [902,]  839   74  758  492  306  930  985  900  842   135 #>  [903,]  190  278  622  287  684  491  478   91  247   921 #>  [904,]  496  653  517  118  957  774   11  677  446   518 #>  [905,]  717  487  928  634  452  849  686  526  130   477 #>  [906,]  160  425  837  401  570   49  483  652  753   126 #>  [907,]  850  389  882  213  842  676  620  135  831   276 #>  [908,]  487  187  928  169  486  905  689  826    1   849 #>  [909,]  829  323  144  251    8  877  116  886  234   199 #>  [910,]  715  106  940  919  692  509  119  210  843   691 #>  [911,]  366  434  799  450  241  867  409  473  966   974 #>  [912,]  426  404  380  505  603  730  856  764  731   152 #>  [913,]  482  235  359  891   39  510  553  249  947   471 #>  [914,]   64  311  999   80  699  225  591  836   18   115 #>  [915,]  272  674  991  353  538  163  979  798  282    42 #>  [916,]  788  857  774  118  790  714  995  351  105   653 #>  [917,]  266  683  628  140  388  802  869  640  813   537 #>  [918,]  888  305   82  201   29  744  854  624  551   422 #>  [919,]  715  910  692  940  210  810  843  746  106   660 #>  [920,]  774  653  595  800  517  747  496  904  365   558 #>  [921,]  622  287  209  508  903   91  275   15  151   994 #>  [922,]  835  775  203  880  185  522  246  397  851   735 #>  [923,]  646  304  214   35  895  690   63  144  507   348 #>  [924,]  539  776  527  107  761  865  194   46  147   572 #>  [925,]  628  388  509  940  808  145  277  210  373   796 #>  [926,]  946  970  442  313   55  820  374  558   59   721 #>  [927,]  982  490  134   11  266  961   18  350  917   640 #>  [928,]  634  825  487  905  130  908  849  651  717   371 #>  [929,]  226  537  859  802   40  956  331  140  521   813 #>  [930,]  985  900  159  842  135  400  702  741  901   217 #>  [931,]   41   66  132  597  701  834  147  317  737   515 #>  [932,]   28  210  566  587  693  554  581  731  925   594 #>  [933,]  423  340  705  324  282  786  736  732  338   252 #>  [934,]  375  532   21  652  638  692  462  401  728   377 #>  [935,]   36  719  889  318  544   45  798   40  770   568 #>  [936,]  489   71  590  594  258  885  919  853  660   238 #>  [937,]  475  201  305  766  953  219  735  888  246   698 #>  [938,]  220  500  821  543  711  657  379  596  724   414 #>  [939,]   60  574  514  789   97  192  833  645  992   462 #>  [940,]  910  509  106  715  691  919  210  808  925   628 #>  [941,]  506  838  597  343  104   47   83    4  824    95 #>  [942,]  586  446  443  961   11  344  593  490  134    50 #>  [943,]  710  477  292  807  448  200  369  822   38   898 #>  [944,]  455  393  481  780  300  326  337  162  287   259 #>  [945,]  792  339  648  238   65  857  212  555  790   720 #>  [946,]  926  442   55  313  575  573  818  671  558   738 #>  [947,]  510  317  515  239  680  435  642  129  471   529 #>  [948,]  173  596  494  711  724  687  500   48  513   821 #>  [949,]  601  612  997  717  102  983   37  526  131   288 #>  [950,]  343  824  832  288  392   54  612  838  131    24 #>  [951,]  733  383  114   92  700  307  137  993  407   967 #>  [952,]  293  321  430  223  154  244  766  415  403   778 #>  [953,]  937  735  201  713  305  207  679  888  101   475 #>  [954,]  767  190  903  278  362  444  259  894  287   634 #>  [955,]  769  642   66  151  317  239  410  658  387   680 #>  [956,]  521  802  813  770   40  773  719  542  683   929 #>  [957,]  518  517  446   11  961  496  554  904  747   388 #>  [958,]  630  490  927  344  982  847  153  516  418   750 #>  [959,]  358  787  514   56   46  645  860   22  458   488 #>  [960,]  676  347   75  430  907  223  420  850  882   758 #>  [961,]   11  446  957  134  518  490  118  904  222   927 #>  [962,]  762  290  681  133  804  325  457  194  777   781 #>  [963,]  370  411  402  867   34  189  258  635  241   739 #>  [964,]  576  423  164  338   89   36  139  398  592   308 #>  [965,]  306  685  604  492  687  754  990  407  355    17 #>  [966,]  215  474  499  873  799  485  450  248  366   150 #>  [967,]  700  176   32  383  501  598  114  231  667   181 #>  [968,]  154  321  418  293  895   63  552  516  763   952 #>  [969,]  416  197  524  422  301  325  336  458  595   245 #>  [970,]  926  374   59  752  814  820  673  558  777   442 #>  [971,]  545  881  675   85   39  327   83  123  848   104 #>  [972,]  740  820  361  793  374   61  204  479  871   284 #>  [973,]  830  128  674   14   65  915  436  163  456    53 #>  [974,]  256   99 1000  434  489  409  494  433  271   885 #>  [975,]  832  332   24  673  816  846   25  815  188   759 #>  [976,]  605  291  618  326  322  894  243  399  278   866 #>  [977,]  155  576  678  834  533  535  697  298  703   650 #>  [978,]  193  108  295  254  505  152  837  730  480   729 #>  [979,]  991  353  538  163  557  429  770  885  456   773 #>  [980,]  559  409  186  794  799   71  759  205  485    55 #>  [981,]  618  243  887  779  285  432  976  326  664   322 #>  [982,]  927  836  118  266  134  490   11  917  683   961 #>  [983,]  601  577  410  229  363  275  737  102  634   997 #>  [984,]  625  874  309   89  497  785  139  308  781   504 #>  [985,]  930  900  159  400  901  741  842  839  876   702 #>  [986,]  361  814  752  424  820  374  972  204   59   569 #>  [987,]  207  735  679  880  209  865  478  219  953   563 #>  [988,]  705  786  596  933  657  282  950  500  288   414 #>  [989,]  328  804  351  381  962  920  714  558  290   874 #>  [990,]  754  406  711  687  155  500  965   17  685   604 #>  [991,]  979  538  353  163  798  557  429  773  817   890 #>  [992,]  484  138  149  652  789  352  262   60  833   939 #>  [993,]  192    9  574  711  513  855  224  939  262   649 #>  [994,]  613   91  883  865  147  194  622  209  242   563 #>  [995,]  714  790  712  655  916  575  442  946  774    50 #>  [996,]  738  871  575  221  740  747   96  408  284   655 #>  [997,]  717  612  288  392  131  363  634  220  526   825 #>  [998,]   85  629  327  783  421  675  285  879  887   242 #>  [999,]   64  914   80  311  586  699  591  153   50   726 #> [1000,]   99  974   12  633  489  168  662  256  352   666 #>  #> $neighbor_distances #>              [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7] #>    [1,] 0.3958788 0.5274212 0.5400270 0.5558654 0.6453666 0.6600797 0.6759839 #>    [2,] 0.7643043 0.8269073 1.2454635 1.3115478 1.5546877 1.6277378 1.6472621 #>    [3,] 0.7942946 0.9277140 1.1107965 1.1700056 1.1994370 1.2167336 1.2277691 #>    [4,] 0.8646802 0.9674415 1.0508866 1.0604053 1.0834659 1.1073661 1.1432906 #>    [5,] 0.4941481 0.5756206 0.7028215 0.7343027 0.7553210 0.7583778 0.7885417 #>    [6,] 0.3612491 0.3636563 0.3664027 0.4100770 0.4197049 0.4548318 0.4668836 #>    [7,] 0.2968286 0.5117717 0.5519474 0.5526851 0.5710412 0.5793827 0.5854079 #>    [8,] 0.9702639 1.1141135 1.1471479 1.1817626 1.2357548 1.2380616 1.2526621 #>    [9,] 0.3262306 0.3742529 0.4153049 0.4208624 0.4430401 0.4902054 0.5782539 #>   [10,] 0.4751503 0.5505619 0.6126353 0.6157582 0.6691647 0.6801085 0.7054443 #>   [11,] 0.2706996 0.2779016 0.3756506 0.4917844 0.5021807 0.5803165 0.6132944 #>   [12,] 0.1727962 0.4178846 0.5867655 0.5994893 0.7479381 0.8649144 0.8652867 #>   [13,] 1.2287725 1.2426230 1.2698295 1.2821023 1.3064415 1.3201246 1.3607418 #>   [14,] 0.9742825 1.0153180 1.0364193 1.1361273 1.1725667 1.2614933 1.3176864 #>   [15,] 0.2303572 0.3663513 0.5987499 0.6498066 0.6563408 0.7595645 0.7987503 #>   [16,] 0.2185745 0.3460436 0.3942829 0.4498549 0.4866213 0.5260726 0.5877439 #>   [17,] 0.4463411 0.5159382 0.5364687 0.7112624 0.7665243 0.7952968 0.8243922 #>   [18,] 0.3173452 0.3447042 0.3931910 0.6171834 0.6456768 0.6707475 0.7141384 #>   [19,] 0.4765582 0.6015085 0.7894315 0.8400207 0.9958965 1.0071159 1.0606916 #>   [20,] 0.4730472 0.4894494 0.5939493 0.5991693 0.6816124 0.7479848 0.8319929 #>   [21,] 0.3324746 0.3543659 0.3615296 0.3622888 0.3693318 0.4370965 0.4501168 #>   [22,] 0.1825666 0.3591645 0.4128101 0.4734435 0.4756084 0.5405015 0.5624998 #>   [23,] 0.4273752 0.4307633 0.4712311 0.4932468 0.6068304 0.6085218 0.6594224 #>   [24,] 0.3646918 0.5351745 0.5455041 0.6673485 0.6840166 0.7089533 0.7528006 #>   [25,] 0.2297910 0.3174959 0.3830699 0.3974054 0.4000019 0.5454303 0.5511470 #>   [26,] 1.0669706 1.1620184 1.2897933 1.3184100 1.3827002 1.3854350 1.4243103 #>   [27,] 0.2374153 0.3562196 0.4269487 0.4394138 0.4777010 0.4857634 0.5324416 #>   [28,] 0.3252203 0.4962239 0.5312950 0.5461294 0.5884149 0.6152373 0.6296754 #>   [29,] 0.3224814 0.4466148 0.4491370 0.4629620 0.5144869 0.5153933 0.5559849 #>   [30,] 0.6998528 0.8478834 0.9398106 1.0058799 1.0393122 1.0448305 1.0542234 #>   [31,] 0.3712501 0.6150655 0.6309507 0.6682446 0.6775623 0.7997342 0.8713184 #>   [32,] 0.4125928 0.4591873 0.5479325 0.5922806 0.7142090 0.7214195 0.7254622 #>   [33,] 0.3726184 0.4558455 0.5716035 0.5721657 0.6002090 0.6219473 0.6590016 #>   [34,] 0.5376830 0.5669624 0.6500597 0.6724654 0.6791547 0.6981586 0.7090418 #>   [35,] 0.6183795 0.6538161 0.6915307 0.7571918 0.9439475 1.1071134 1.1485695 #>   [36,] 0.4567149 0.5979363 0.7452708 0.8141089 0.8855800 0.9676890 1.0289958 #>   [37,] 0.6390308 0.7520675 0.7864941 0.8069133 0.8707301 0.8967443 0.9220656 #>   [38,] 0.4461272 0.6165912 0.6994344 0.8820945 0.8847983 0.8962625 0.9300628 #>   [39,] 0.6401810 0.7222722 0.7359959 0.8294419 0.8332599 0.8922835 0.9032825 #>   [40,] 0.4924419 0.5602758 0.6196830 0.6813673 0.6883533 0.7032869 0.7473392 #>   [41,] 0.3591845 0.4581367 0.4726974 0.5296571 0.7841733 0.8421371 0.8662646 #>   [42,] 0.7658622 1.0153180 1.1984984 1.3106085 1.3378549 1.4414623 1.5072696 #>   [43,] 0.3688599 0.4892537 0.6030855 0.6565283 0.6657860 0.6856328 0.7071726 #>   [44,] 0.9865946 1.1272105 1.4472938 1.5135837 1.5724804 1.6031901 1.7577173 #>   [45,] 0.6853616 0.7989546 0.8912921 0.9166019 0.9847889 0.9890728 1.0170143 #>   [46,] 0.3549851 0.3709005 0.4061685 0.4111124 0.4412932 0.4714729 0.4805246 #>   [47,] 0.5002633 0.5535336 0.6021488 0.6210855 0.6394451 0.6736324 0.7005969 #>   [48,] 0.3172071 0.5271262 0.5689817 0.5744486 0.6200234 0.6378726 0.6681215 #>   [49,] 0.6205701 0.6551111 0.6552469 0.6844584 0.7340994 0.7409671 0.7674704 #>   [50,] 0.7428478 0.8997353 0.9050646 1.0577302 1.0582955 1.1174607 1.1227182 #>   [51,] 0.9315703 0.9966173 1.0710190 1.0752969 1.1138345 1.1973086 1.1986470 #>   [52,] 0.8670800 0.8814088 1.1291648 1.2242348 1.3522050 1.4368845 1.4671992 #>   [53,] 0.3590565 0.3953472 0.5166392 0.6031387 0.6893551 0.7158041 0.7807595 #>   [54,] 0.5576524 0.6171152 0.6322211 0.6911671 0.7171174 0.7276160 0.8071010 #>   [55,] 0.5409184 0.5543921 0.5788145 0.5801522 0.6120957 0.6614400 0.6624043 #>   [56,] 0.2244068 0.3116718 0.4356739 0.4412932 0.4615846 0.4791785 0.5110136 #>   [57,] 0.3191484 0.4876958 0.5185980 0.5610354 0.5777540 0.5958928 0.6119032 #>   [58,] 0.5087640 0.5269978 0.5643445 0.5653957 0.5879191 0.6388788 0.6610710 #>   [59,] 0.4714659 0.5360294 0.5433174 0.5567558 0.5802699 0.5945936 0.5991498 #>   [60,] 0.3494974 0.4375598 0.5668559 0.5974524 0.6119439 0.6442349 0.6544426 #>   [61,] 0.3126256 0.5204695 0.5271901 0.5544579 0.6189656 0.6472021 0.6704384 #>   [62,] 1.0143841 1.0409183 1.0738218 1.1209635 1.2756573 1.3685344 1.3744373 #>   [63,] 0.6765294 0.6915307 0.7796470 0.7838794 0.8114422 0.8561424 0.8586384 #>   [64,] 0.3957851 0.5719669 0.8478155 0.9406052 0.9848017 1.0302355 1.1699783 #>   [65,] 0.5443443 0.9554705 0.9994549 1.1609882 1.2064433 1.2120757 1.2173822 #>   [66,] 0.3849193 0.4726974 0.4919683 0.6309251 0.6969678 0.7657190 0.8156145 #>   [67,] 0.4543130 0.4666526 0.5404811 0.5522995 0.5544488 0.5716683 0.5827274 #>   [68,] 1.0631385 1.2050178 1.2621856 1.2953970 1.3466163 1.4039768 1.4228183 #>   [69,] 0.4489702 0.5007673 0.5685410 0.5827584 0.5879543 0.5917162 0.5932370 #>   [70,] 0.6629014 0.7618607 0.7739371 0.8845209 1.0071159 1.0152909 1.0704798 #>   [71,] 0.5339648 0.6322162 0.6327116 0.6365188 0.7105415 0.7431937 0.7567609 #>   [72,] 0.8066893 0.9259026 0.9882278 1.1731891 1.1827120 1.2193617 1.3040383 #>   [73,] 0.4515738 0.4942408 0.7027118 0.8450288 0.9871094 0.9963571 1.1248630 #>   [74,] 0.9665167 0.9865305 1.0027524 1.0208551 1.0623031 1.0874536 1.1097062 #>   [75,] 0.3753404 0.6079044 0.7980990 1.1114403 1.1312473 1.1403630 1.1674499 #>   [76,] 0.3423054 0.3829334 0.4610966 0.5624133 0.6162922 0.6626653 0.6714215 #>   [77,] 0.4974622 0.5902980 0.7017028 0.7086942 0.7339494 0.7489698 0.7842210 #>   [78,] 0.5783442 0.6555931 0.6712776 0.6926129 0.6986476 0.7071535 0.7340994 #>   [79,] 0.2355334 0.3251226 0.4110140 0.5356281 0.5516623 0.6246724 0.6315142 #>   [80,] 0.8095374 0.9493998 0.9498992 1.0302355 1.0455539 1.0507664 1.1789005 #>   [81,] 0.3435575 0.3988810 0.4511184 0.5825886 0.6050866 0.6766276 0.6824157 #>   [82,] 0.4225446 0.4491370 0.4582246 0.4664328 0.4690987 0.4828304 0.4862602 #>   [83,] 0.6717711 0.7405259 0.8585949 0.8611325 0.9625663 1.0372149 1.0504934 #>   [84,] 0.4742243 0.6931242 0.7646652 0.8505988 0.8825739 0.8965886 0.9011137 #>   [85,] 0.3377847 0.5955927 0.6046660 0.7459846 0.7652160 0.8335839 0.8821473 #>   [86,] 0.3877265 0.5295990 0.5757268 0.6039724 0.7041770 0.7105528 0.7368776 #>   [87,] 0.5677036 0.6558034 0.6600797 0.6689830 0.6966842 0.7052481 0.7144689 #>   [88,] 0.2046511 0.3234911 0.3904282 0.4073261 0.4488914 0.4489335 0.4490261 #>   [89,] 0.6752507 0.7983143 0.7997875 0.8012984 0.8786484 0.8852522 0.9100492 #>   [90,] 0.6279489 0.6420198 0.7309049 0.7435435 0.7455655 0.7628241 0.7682029 #>   [91,] 0.3903283 0.3910574 0.4765414 0.5298915 0.5825263 0.5984030 0.6066652 #>   [92,] 0.5188535 0.5360994 0.5955381 0.5991386 0.6031217 0.6579317 0.6657860 #>   [93,] 0.5520035 0.7269182 0.7802800 0.7815630 0.8680538 0.8823794 0.9086884 #>   [94,] 0.3167376 0.3391814 0.5404811 0.6123078 0.6153748 0.6413637 0.6489852 #>   [95,] 0.5351745 0.6777467 0.7594592 0.7904365 0.8562069 0.9244980 0.9368965 #>   [96,] 0.1839888 0.4367402 0.4511184 0.4739782 0.5455786 0.6749520 0.6850499 #>   [97,] 0.3242840 0.3591645 0.3740718 0.5299938 0.5533178 0.5545155 0.5970858 #>   [98,] 0.5624133 0.5714393 0.6704982 0.7090491 0.7288345 0.7489806 0.8156033 #>   [99,] 0.5289744 0.6521091 0.7188898 0.7681720 0.8692386 0.9076675 0.9435049 #>  [100,] 0.3950933 0.4601222 0.5406768 0.6304598 0.6398525 0.6539875 0.6827372 #>  [101,] 0.3428952 0.4355330 0.5457870 0.6133785 0.6151853 0.6210740 0.6297541 #>  [102,] 0.6616158 0.8201765 0.8472650 0.8610750 0.8614138 0.8824205 0.9437582 #>  [103,] 0.2644412 0.7684753 0.8319929 0.9990450 1.0419404 1.0474168 1.0604033 #>  [104,] 0.6039724 0.6311284 0.6505222 0.6673316 0.6717711 0.8536568 0.8904257 #>  [105,] 0.4561880 0.5601086 0.7667470 0.7989546 0.9033618 0.9393479 0.9423895 #>  [106,] 0.2172728 0.3380548 0.3485035 0.3504234 0.4054438 0.4152830 0.4669386 #>  [107,] 0.2243061 0.3327656 0.3384407 0.4070041 0.4634079 0.4700023 0.4998430 #>  [108,] 0.6144628 0.7569892 0.8001295 0.8229999 0.8503567 0.9017110 0.9165243 #>  [109,] 0.3330563 0.3473918 0.3556172 0.3562196 0.4777413 0.4894192 0.5102330 #>  [110,] 0.5402911 0.6175773 0.6750947 0.7041770 0.7528281 0.7599898 0.7908759 #>  [111,] 0.5960792 0.7494299 0.8407996 0.9625622 0.9778127 1.0075896 1.0113810 #>  [112,] 0.3549957 0.3556172 0.3892491 0.4012718 0.4268916 0.4810595 0.5270543 #>  [113,] 0.7643043 0.9711797 1.2542147 1.4068571 1.4341547 1.4664057 1.5151056 #>  [114,] 0.4743537 0.5360994 0.5651305 0.5691687 0.6763253 0.7156187 0.8028642 #>  [115,] 0.3173452 0.3308434 0.4672128 0.5624757 0.6171021 0.6950784 0.7003095 #>  [116,] 0.9702639 1.3848315 1.3998729 1.4307200 1.4712051 1.5996292 1.6434931 #>  [117,] 0.4531359 0.4698670 0.4700474 0.5055550 0.5115678 0.5128944 0.5229167 #>  [118,] 0.5557974 0.6701354 0.6980269 0.7063441 0.7734096 0.8059538 0.8480996 #>  [119,] 0.3724785 0.4669386 0.5056143 0.5240956 0.5275222 0.5348929 0.5663733 #>  [120,] 0.4135067 0.4805031 0.5119189 0.5533178 0.6056605 0.6061702 0.6202396 #>  [121,] 0.4254334 0.5862601 0.6126353 0.6541080 0.6778829 0.7046087 0.7617789 #>  [122,] 0.4742243 0.5701811 0.5906356 0.6079336 0.6867928 0.7584593 0.7714961 #>  [123,] 0.5519483 0.5655042 0.6442443 0.7079721 0.7558011 0.8073335 0.8536568 #>  [124,] 0.5065474 0.6976490 0.7633689 0.8437147 0.8455119 0.8832296 0.9789422 #>  [125,] 0.4111066 0.4737034 0.6020191 0.6143235 0.6259456 0.6513742 0.6522649 #>  [126,] 0.1707441 0.2968705 0.3895032 0.4031496 0.5134973 0.5218092 0.5873350 #>  [127,] 0.9060167 0.9177056 0.9495628 0.9882278 0.9916900 1.0240389 1.0529854 #>  [128,] 0.5443443 0.8770766 1.1241205 1.1273668 1.1382701 1.1949873 1.2094119 #>  [129,] 0.4568271 0.7441506 0.8098649 0.8239750 0.9401676 0.9416457 0.9474715 #>  [130,] 0.4264655 0.4624466 0.5446237 0.5772825 0.5809870 0.6281196 0.6364468 #>  [131,] 0.3037161 0.3849656 0.4889503 0.4999025 0.5986001 0.6171152 0.6230425 #>  [132,] 0.4581367 0.4919683 0.5135232 0.7017028 0.7253857 0.7413473 0.7873519 #>  [133,] 0.3297268 0.4635209 0.5076221 0.5726424 0.5727711 0.6853393 0.7260439 #>  [134,] 0.4276433 0.4889698 0.4925249 0.4940795 0.5021807 0.5871952 0.6139474 #>  [135,] 0.3507359 0.5395834 0.5973652 0.6138062 0.6525579 0.6868367 0.7146929 #>  [136,] 0.7675113 0.7887420 1.1248630 1.1357842 1.2131818 1.2423547 1.2668166 #>  [137,] 0.5046714 0.6801085 0.6870412 0.7156187 0.7843443 0.7964539 0.8291518 #>  [138,] 0.3977930 0.4527603 0.4592307 0.4991214 0.5672398 0.5722037 0.5782539 #>  [139,] 0.2487355 0.3315173 0.4139112 0.4173078 0.5237929 0.5373695 0.6194891 #>  [140,] 0.4635898 0.6195019 0.6852642 0.7271289 0.7424436 0.7819100 0.8127308 #>  [141,] 0.1599595 0.3222093 0.3834567 0.4068520 0.4100770 0.4179199 0.5116123 #>  [142,] 0.6629014 0.9915602 0.9958965 1.0340147 1.1206228 1.1690932 1.1774851 #>  [143,] 0.6691371 0.8668245 0.9612096 1.1265050 1.3247363 1.4117173 1.4388832 #>  [144,] 0.4063918 0.5615268 0.6588544 0.7416006 0.7582832 0.7879693 0.8534795 #>  [145,] 0.3118952 0.4076777 0.4094883 0.5710412 0.5930570 0.6101464 0.6152953 #>  [146,] 0.3962211 0.4498442 0.5760722 0.7884557 0.8312444 0.8400207 0.8845209 #>  [147,] 0.4248042 0.5197859 0.5238537 0.5381640 0.5858927 0.5980988 0.6072072 #>  [148,] 0.3884991 0.5345801 0.6118668 0.7539616 0.8951548 0.9865011 1.0012236 #>  [149,] 0.3593264 0.4620788 0.4657178 0.4674926 0.4815277 0.5275222 0.5784169 #>  [150,] 0.8829645 0.9990450 1.1694842 1.1816125 1.1871917 1.1925131 1.2675466 #>  [151,] 0.4717657 0.6613172 0.6847816 0.7282898 0.7661535 0.7766738 0.7885970 #>  [152,] 0.3803468 0.4350633 0.5386688 0.5731874 0.6627529 0.7335970 0.7706425 #>  [153,] 1.0482942 1.1699783 1.2043238 1.2826571 1.3556154 1.3793944 1.4091219 #>  [154,] 0.2624281 0.5403844 0.7223606 0.7803766 0.8799425 0.9850629 1.0722110 #>  [155,] 0.5364687 0.5984943 0.6807132 0.7505346 0.7682976 0.8002654 0.8064418 #>  [156,] 0.2345092 0.3962211 0.5616091 0.7368415 0.7628241 0.7894315 0.8311435 #>  [157,] 0.7516585 0.7932000 0.9177056 0.9616423 0.9843714 0.9878748 0.9974822 #>  [158,] 0.4075719 0.4629031 0.4695769 0.6021796 0.6418424 0.6490924 0.6504964 #>  [159,] 0.4059566 0.5544345 0.6090505 0.6213515 0.6492618 0.6591912 0.6707514 #>  [160,] 0.2049212 0.4553788 0.5387520 0.5402864 0.5608046 0.6093396 0.6162752 #>  [161,] 0.5295990 0.6136787 0.6324504 0.6457926 0.6673316 0.6957498 0.7089528 #>  [162,] 0.8380118 0.8506294 0.8816909 0.9202722 0.9568119 1.0273529 1.0351961 #>  [163,] 0.5476062 0.7073199 0.7317674 0.8974349 0.9609949 0.9662115 0.9793055 #>  [164,] 0.5494084 0.5979363 0.6671713 0.7870953 0.8161700 0.8810201 0.9455977 #>  [165,] 0.4006855 0.4282523 0.5092214 0.5381749 0.5446711 0.5703136 0.5794776 #>  [166,] 1.2118143 1.3239994 1.3681592 1.4519321 1.4646315 1.5363384 1.6096099 #>  [167,] 0.4213701 0.4421352 0.4425397 0.4573716 0.4841684 0.5567204 0.5806690 #>  [168,] 0.7113624 0.7138183 0.7321836 0.7544498 0.8274341 0.8542068 0.8649144 #>  [169,] 0.4558455 0.5785824 0.6987438 0.7211995 0.7361582 0.7479848 0.7598689 #>  [170,] 0.8500731 1.0438618 1.0553519 1.0717580 1.1391780 1.1610642 1.3078982 #>  [171,] 1.0262330 1.0570616 1.1503392 1.1830646 1.2027355 1.2237032 1.2329011 #>  [172,] 0.3362645 0.4556644 0.4975983 0.5226212 0.6365957 0.6382249 0.7318583 #>  [173,] 0.4889279 0.6845088 0.7465604 0.7473889 0.8286342 0.8428723 0.8846747 #>  [174,] 0.5524559 0.6042073 0.6115134 0.6298321 0.6384367 0.6607325 0.6698253 #>  [175,] 0.6047038 0.6220457 0.6241754 0.6683749 0.6863973 0.7217445 0.7333741 #>  [176,] 0.5957165 0.6050153 0.9098701 0.9990389 1.0182786 1.0213179 1.0815776 #>  [177,] 0.4866213 0.5087454 0.5286997 0.5716035 0.5716988 0.6032254 0.6347264 #>  [178,] 0.2282305 0.3019276 0.3174959 0.3612491 0.4190925 0.4633584 0.5107617 #>  [179,] 0.3968450 0.4978757 0.4996513 0.5046050 0.5738897 0.6407717 0.6544432 #>  [180,] 0.2418212 0.3794666 0.3835741 0.3951752 0.4904181 0.4931029 0.4966920 #>  [181,] 0.8066893 0.8252254 0.9485396 1.0464314 1.0636144 1.1106877 1.1618508 #>  [182,] 1.1209635 1.3371078 1.4643964 1.5162057 1.5297005 1.5807818 1.8175871 #>  [183,] 0.6010726 0.7334535 0.7664095 0.7721200 0.7778284 0.8775842 0.9186331 #>  [184,] 0.4859296 0.5738917 0.7103136 0.7334535 0.7656913 0.8315310 0.8396846 #>  [185,] 0.3333233 0.3572687 0.3892491 0.4311462 0.4777413 0.5128722 0.5179626 #>  [186,] 0.4307633 0.4560278 0.5172334 0.5339648 0.5918147 0.6535505 0.7105028 #>  [187,] 0.5616864 0.6245253 0.6987438 0.7710820 0.8240154 0.9092137 0.9195821 #>  [188,] 0.2542035 0.3974054 0.4144953 0.4285338 0.4434583 0.4573716 0.4946562 #>  [189,] 0.4253331 0.5496126 0.5895142 0.6035660 0.6568121 0.6838960 0.6875739 #>  [190,] 0.2306791 0.3939581 0.4374199 0.5778469 0.6312260 0.6779228 0.6782284 #>  [191,] 0.6092573 0.6576298 0.7321836 0.8992593 0.9160160 0.9386951 0.9620332 #>  [192,] 0.2557244 0.3602671 0.4412104 0.5213667 0.5522057 0.5853017 0.5964796 #>  [193,] 0.2603973 0.4566860 0.4799583 0.5713410 0.5768636 0.6067611 0.6631952 #>  [194,] 0.4226543 0.5009093 0.5218718 0.5432200 0.5455972 0.5499918 0.5512810 #>  [195,] 0.3950933 0.5111744 0.5491708 0.5656983 0.6037206 0.6306124 0.6452375 #>  [196,] 0.3332127 0.5066604 0.5686420 0.5714112 0.5765306 0.5938488 0.6493583 #>  [197,] 0.3885557 0.3885562 0.4668807 0.5163068 0.5265068 0.5703136 0.5770214 #>  [198,] 0.5402270 0.5657751 0.5922806 0.5936516 0.6133180 0.7027257 0.7055467 #>  [199,] 0.6047038 0.6753003 0.8138219 0.8333059 0.8429268 0.8918813 0.8922841 #>  [200,] 1.1987592 1.2769536 1.4741129 1.4975752 1.5070778 1.5180051 1.5706604 #>  [201,] 0.3192190 0.3413684 0.3627460 0.3824601 0.4338930 0.4476108 0.5634343 #>  [202,] 0.3168347 0.5111744 0.5406768 0.6111026 0.6953358 0.7582476 0.8172050 #>  [203,] 0.2799555 0.3111263 0.4450886 0.4564972 0.5146686 0.5330566 0.5400816 #>  [204,] 0.3126256 0.4893799 0.4928110 0.6534226 0.6644596 0.6831773 0.7073361 #>  [205,] 0.3516280 0.4130207 0.4312064 0.5038039 0.5096032 0.5621626 0.5749375 #>  [206,] 0.5519483 0.6311284 0.6777467 0.7405259 0.7773212 0.8767355 0.9163524 #>  [207,] 0.1733556 0.2423027 0.2446095 0.2805693 0.5364597 0.5569057 0.5759362 #>  [208,] 0.3356213 0.4817913 0.5505619 0.6061544 0.6066842 0.6202396 0.6273228 #>  [209,] 0.4526056 0.4562475 0.4652054 0.4759046 0.5403443 0.5560398 0.5883197 #>  [210,] 0.4032344 0.4311597 0.4567191 0.5035883 0.5093473 0.5322270 0.5387782 #>  [211,] 0.6853616 0.9350793 0.9393479 1.0451475 1.0713481 1.0718014 1.0966459 #>  [212,] 0.6419355 0.9845647 1.2755375 1.2982738 1.3451843 1.3498885 1.3805917 #>  [213,] 0.2828474 0.3089039 0.4020657 0.4042463 0.4076777 0.4556644 0.4714874 #>  [214,] 0.7462824 0.7892052 0.9483690 1.0442684 1.0661246 1.0701576 1.1926962 #>  [215,] 0.3332975 0.3888783 0.6565955 0.8683483 0.9862641 1.0174279 1.0257492 #>  [216,] 0.4252007 0.4649356 0.5984252 0.6959388 0.7372187 0.7407907 0.7441114 #>  [217,] 0.3356213 0.4326671 0.4816213 0.5427011 0.5977486 0.6098692 0.6407980 #>  [218,] 0.6115310 0.6684251 0.7829015 0.8167190 0.8518577 0.9001607 0.9522254 #>  [219,] 0.3930992 0.4102853 0.4323765 0.4539678 0.5157606 0.5416005 0.5511619 #>  [220,] 0.4077313 0.4334265 0.4677776 0.4950221 0.5809870 0.6016668 0.6513742 #>  [221,] 0.5884740 0.6394905 0.7146012 0.7207820 0.7351934 0.7394649 0.8266074 #>  [222,] 0.4553974 0.6969912 0.7081827 0.7755972 0.8686189 0.9086006 0.9166054 #>  [223,] 0.5582100 0.6230996 0.7651036 0.9461470 0.9543635 0.9555007 1.0217470 #>  [224,] 0.1671345 0.3560739 0.3594790 0.4208624 0.5184104 0.5964718 0.6243575 #>  [225,] 0.5624757 0.6456768 0.7428245 0.7448427 0.7989709 0.8035172 0.8414542 #>  [226,] 0.4180143 0.6196830 0.6357975 0.6881962 0.7420058 0.7623392 0.7964802 #>  [227,] 0.7060368 0.7746569 0.7812633 0.7936241 0.8209376 0.8595518 0.8668245 #>  [228,] 0.3539767 0.3549957 0.4035892 0.4670264 0.4804604 0.4894192 0.5324416 #>  [229,] 0.4182212 0.5902980 0.6383613 0.6681572 0.7211943 0.7253857 0.8336663 #>  [230,] 0.3835656 0.5650419 0.6311174 0.7441052 0.7584593 0.7683162 0.8620125 #>  [231,] 0.4125928 0.4458748 0.6069418 0.6688904 0.7032936 0.8145399 0.8295502 #>  [232,] 0.6691371 0.8595518 1.0312801 1.0356129 1.2185836 1.2486376 1.2834319 #>  [233,] 0.4889503 0.5566323 0.5576524 0.6073761 0.7200141 0.7254591 0.7842210 #>  [234,] 0.3825866 0.4035892 0.4661805 0.5440449 0.5615268 0.5842682 0.6007627 #>  [235,] 0.7968257 0.9865992 1.0000553 1.0639297 1.1687579 1.1814595 1.2481192 #>  [236,] 0.3849550 0.4808725 0.4966807 0.5177867 0.5501117 0.6286949 0.7177651 #>  [237,] 0.4373999 0.4729340 0.4732983 0.6202906 0.6279788 0.6686328 0.6855722 #>  [238,] 0.3038167 0.5188999 0.5886036 0.7093125 0.8229090 0.8678181 0.8884520 #>  [239,] 0.2418824 0.4476512 0.5737663 0.5893544 0.6510754 0.6900771 0.7282898 #>  [240,] 0.1651655 0.3917967 0.3968450 0.5704091 0.6134853 0.6642607 0.6838298 #>  [241,] 0.3473584 0.7297703 0.9386613 0.9554894 1.0208430 1.0499685 1.0593501 #>  [242,] 0.3443745 0.4610525 0.5591255 0.6289120 0.7027446 0.7335450 0.7369947 #>  [243,] 0.4583017 0.5561368 0.6168672 0.6189656 0.6223950 0.6688053 0.6981820 #>  [244,] 0.6365918 0.6815515 0.6919832 0.7302411 0.7419121 0.8473542 0.8919984 #>  [245,] 0.4006855 0.4311626 0.4324017 0.5265068 0.5787356 0.5928575 0.6068304 #>  [246,] 0.3111263 0.3741903 0.4204032 0.5053129 0.5379922 0.5558828 0.5608033 #>  [247,] 0.2879469 0.3525993 0.4346951 0.5154229 0.5755134 0.5927861 0.6008958 #>  [248,] 0.2917909 0.3224540 0.5611623 0.7204058 0.7543649 0.8074572 0.8151470 #>  [249,] 0.4618406 0.5026561 0.5079071 0.5959307 0.6401810 0.7607613 0.7811186 #>  [250,] 0.1934533 0.3829334 0.5446629 0.5537570 0.5884547 0.6223412 0.6389467 #>  [251,] 0.9706153 1.1178414 1.1260263 1.1332502 1.1873005 1.2013898 1.2119200 #>  [252,] 0.3497051 0.4213701 0.6225000 0.6588853 0.7119516 0.7338842 0.7380311 #>  [253,] 0.2980818 0.5021891 0.5512997 0.6323718 0.6366296 0.6912649 0.6980145 #>  [254,] 0.6068573 0.6901406 0.7377922 0.7532461 0.8446629 0.9017110 0.9892406 #>  [255,] 0.3380681 0.4701566 0.5279254 0.5522129 0.6233386 0.6592886 0.7198712 #>  [256,] 0.5296051 0.7148621 0.7188898 0.8218413 0.8286342 0.8345964 0.8405960 #>  [257,] 0.4932468 0.5172334 0.5716221 0.5794776 0.6079415 0.6381147 0.6961493 #>  [258,] 0.6277738 0.7434022 0.8262811 0.8274570 0.8283654 0.9093853 0.9356692 #>  [259,] 0.6589182 0.7106159 0.7583830 0.7602751 0.8209376 0.8386018 0.8627464 #>  [260,] 0.6165912 0.7885970 0.8073335 0.8607032 0.8779764 0.8915176 0.8958221 #>  [261,] 1.2821023 1.3860701 1.6168208 1.6583570 1.6758296 1.7090808 1.7621923 #>  [262,] 0.3688599 0.3977930 0.4153049 0.5264651 0.5860747 0.5991386 0.6119802 #>  [263,] 0.4128101 0.4372460 0.4416751 0.4447512 0.4695769 0.5176477 0.5224581 #>  [264,] 0.3773446 0.4999294 0.5005509 0.5517161 0.6340937 0.6391951 0.7050573 #>  [265,] 0.4591208 0.4862321 0.4996527 0.5205250 0.5427075 0.5711821 0.6087522 #>  [266,] 0.1488483 0.5445162 0.5577461 0.5952378 0.6852642 0.7097154 0.7377297 #>  [267,] 0.7576443 1.0420564 1.0489673 1.1328151 1.1916613 1.3177501 1.3295095 #>  [268,] 1.1530049 1.2049398 1.2409518 1.2929593 1.3231629 1.3985072 1.4187972 #>  [269,] 0.3406819 0.8657559 0.8895631 0.9496566 0.9818225 1.0604053 1.1346932 #>  [270,] 0.7199291 0.8407996 1.1414841 1.2427836 1.3119747 1.3369583 1.3392080 #>  [271,] 0.7950088 0.8660294 0.8962119 1.0373131 1.0864398 1.1253711 1.1481390 #>  [272,] 0.4528924 1.0585664 1.1523460 1.1725689 1.2038706 1.2151852 1.2254781 #>  [273,] 1.4019846 1.5457491 1.5919700 1.6425619 1.6591459 1.6747879 1.7502270 #>  [274,] 0.4698591 0.5100968 0.9691958 1.0396971 1.0503212 1.0575283 1.0579938 #>  [275,] 0.3695347 0.4075805 0.6059121 0.6681572 0.7119550 0.7596517 0.7818657 #>  [276,] 0.3089039 0.3362645 0.3999254 0.4094883 0.4878990 0.5857092 0.6291834 #>  [277,] 0.3118952 0.4677738 0.5066594 0.5637209 0.5648470 0.6081481 0.6272954 #>  [278,] 0.2306791 0.3979466 0.4483919 0.6141202 0.6375565 0.6588614 0.6685360 #>  [279,] 0.3187897 0.3226564 0.4292007 0.4498533 0.4537485 0.4870662 0.5026990 #>  [280,] 0.3237671 0.4311626 0.4712311 0.5245614 0.5882810 0.6297600 0.6319003 #>  [281,] 0.2556632 0.3726184 0.4207454 0.5038039 0.5083381 0.5564092 0.5847095 #>  [282,] 0.6082266 0.6785633 0.6959388 0.7358031 0.8248636 0.8938934 0.8951548 #>  [283,] 0.5076221 0.5704091 0.5717497 0.5820108 0.6684251 0.7007787 0.7063055 #>  [284,] 0.1839888 0.3988810 0.4149599 0.5139621 0.5564996 0.6060499 0.6347264 #>  [285,] 0.4481043 0.5555141 0.6029454 0.7459846 0.7679514 0.8100199 0.8100694 #>  [286,] 0.2892078 0.5727711 0.5820108 0.6121310 0.6320971 0.6827372 0.7003095 #>  [287,] 0.5176784 0.5604237 0.5777316 0.6312260 0.6613172 0.6894386 0.6957354 #>  [288,] 0.2282839 0.3037161 0.4394292 0.5454020 0.5716479 0.6020740 0.6722494 #>  [289,] 0.1661748 0.2046511 0.2888624 0.3633813 0.3807536 0.3835741 0.4259255 #>  [290,] 0.2090033 0.2663603 0.4334675 0.4970674 0.5113782 0.5407008 0.5522995 #>  [291,] 0.3126654 0.3549687 0.4301853 0.5039649 0.5456792 0.5477005 0.6074699 #>  [292,] 0.4461272 0.7643515 0.7999329 0.8958221 0.8998580 0.9564173 1.0876169 #>  [293,] 0.4250564 0.6411076 0.7803766 0.7996429 0.9184242 0.9331377 0.9335194 #>  [294,] 0.6078509 0.7653864 0.7942946 0.8219534 0.8313359 0.9128442 0.9873481 #>  [295,] 0.2603973 0.5128944 0.6011397 0.6343959 0.6697896 0.6888925 0.6926129 #>  [296,] 0.4751503 0.6778829 0.6982536 0.7023260 0.7400810 0.7964539 0.8001295 #>  [297,] 0.3999254 0.4020657 0.4562501 0.5226212 0.5504362 0.6172936 0.6614082 #>  [298,] 0.7200141 0.7339494 0.9367775 1.0527620 1.0558483 1.0712542 1.0874162 #>  [299,] 0.3686796 0.5087640 0.5140837 0.5330566 0.5546223 0.6081425 0.6162922 #>  [300,] 0.4172817 0.7643515 0.8847983 0.9601713 1.0619769 1.0945734 1.1513899 #>  [301,] 0.3332127 0.4490261 0.4892979 0.4920971 0.5118432 0.5203093 0.5265639 #>  [302,] 0.4147510 0.4213070 0.4269203 0.4315846 0.4566883 0.4635230 0.4834136 #>  [303,] 0.3917303 0.6309507 0.7923845 0.7952429 0.8765315 0.9008648 0.9425651 #>  [304,] 0.5282708 0.5567676 0.6538161 0.6765294 0.7892052 0.8802286 1.0284506 #>  [305,] 0.3413684 0.4140413 0.4147225 0.4998761 0.5076018 0.5416898 0.5595265 #>  [306,] 0.3560451 0.6830510 0.6839223 0.9397940 1.0640806 1.1217156 1.1258046 #>  [307,] 0.5691687 0.7699063 0.8291518 0.8341730 0.8520782 0.8996759 0.9168368 #>  [308,] 0.4069700 0.5415934 0.5747331 0.6225000 0.6245065 0.6318224 0.7881902 #>  [309,] 0.2808273 0.2960704 0.4102580 0.4173078 0.4788826 0.6245065 0.6894017 #>  [310,] 0.4892537 0.6408632 0.6443399 0.8395091 0.8640918 0.8778177 0.8918635 #>  [311,] 0.5743737 0.6950784 0.7141384 0.7428245 0.8305293 0.8326792 0.8355717 #>  [312,] 0.2519073 0.4339342 0.4557704 0.6053898 0.6322211 0.6532572 0.6606817 #>  [313,] 0.4208741 0.5712511 0.5716988 0.5775476 0.5922281 0.5945936 0.6147116 #>  [314,] 0.7847546 0.9895428 1.0782771 1.1400371 1.1414841 1.2345885 1.2568088 #>  [315,] 0.3907769 0.4367201 0.4534707 0.4861302 0.5802435 0.5902354 0.6482861 #>  [316,] 0.5002065 0.5117005 0.5555141 0.5847776 0.6498066 0.6552028 0.7402658 #>  [317,] 0.6268386 0.6309251 0.6510754 0.6650776 0.6759834 0.6855146 0.7596917 #>  [318,] 0.4815243 0.5345801 0.7869932 0.8666045 0.8852522 1.0447137 1.0631385 #>  [319,] 0.3901001 0.3951752 0.4591208 0.5118174 0.5263642 0.5825886 0.5826687 #>  [320,] 0.6348970 0.7177651 0.7632276 0.7847546 0.8126972 0.8350069 0.8528973 #>  [321,] 0.4250564 0.5403844 0.7225121 0.7538339 0.8464074 0.8856993 0.9074619 #>  [322,] 0.3849550 0.3993161 0.5322847 0.5387486 0.6321281 0.6359353 0.6492424 #>  [323,] 0.7494299 0.8989201 0.9211177 0.9321039 0.9410483 1.0056781 1.1558734 #>  [324,] 0.5078031 0.5277916 0.5685494 0.5715468 0.6003458 0.6318877 0.6427957 #>  [325,] 0.3233114 0.3671338 0.4995907 0.5014881 0.5516275 0.5552595 0.5691832 #>  [326,] 0.4301853 0.4404993 0.5421341 0.5746321 0.5798402 0.7816297 0.8072740 #>  [327,] 0.5955927 0.6291535 0.6367343 0.7918091 0.9025183 0.9109135 0.9967717 #>  [328,] 0.3306879 0.5263861 0.7703458 0.7881753 0.8481033 0.8524133 0.8798586 #>  [329,] 0.3081736 0.3191484 0.4125951 0.4373999 0.4418391 0.4576782 0.5687483 #>  [330,] 0.7023260 0.8148932 0.8418795 0.8500731 0.9282663 0.9330747 0.9926106 #>  [331,] 0.6319574 0.7424436 0.8261301 0.8902009 0.8966694 0.9230766 0.9350793 #>  [332,] 0.5002661 0.5632860 0.6873142 0.7150936 0.7391962 0.7607554 0.7957037 #>  [333,] 0.4553974 0.4629651 0.5828254 0.7496759 0.7891213 0.8286314 0.8298054 #>  [334,] 0.4684095 0.4718867 0.4877991 0.5356281 0.5996822 0.6369327 0.6442349 #>  [335,] 0.3877265 0.3880143 0.4434583 0.4752144 0.5002633 0.5455972 0.5872185 #>  [336,] 0.3528784 0.4259255 0.4311597 0.4649544 0.4874785 0.5030661 0.5118432 #>  [337,] 0.5456792 0.5604237 0.5832470 0.6193600 0.6226350 0.6792385 0.6903277 #>  [338,] 0.6515206 0.6880235 0.7192907 0.7245646 0.7539616 0.7674032 0.7903953 #>  [339,] 1.0472764 1.1628513 1.1991610 1.2387111 1.2643859 1.2672338 1.3512444 #>  [340,] 0.4779447 0.5131919 0.5445328 0.5685494 0.6777434 0.6785633 0.6874792 #>  [341,] 0.4515738 0.5505349 0.6496467 0.6643801 0.6976490 0.7887420 1.0001532 #>  [342,] 0.6188761 1.1925131 1.2830224 1.3140313 1.3975310 1.4449225 1.4654566 #>  [343,] 0.3391007 0.3523615 0.7029507 0.7594592 0.8201232 0.8348339 0.8627320 #>  [344,] 0.6362564 0.7426165 1.0792106 1.0804964 1.1171839 1.1805235 1.2435458 #>  [345,] 0.7658622 0.8709460 0.9496566 0.9937590 1.0547865 1.0612307 1.1124756 #>  [346,] 1.2536278 1.2548582 1.2583091 1.2926130 1.4537582 1.4837793 1.4851877 #>  [347,] 0.3753404 0.7488408 0.9194070 1.2055534 1.2088975 1.2128028 1.2268941 #>  [348,] 0.7199640 0.9530489 0.9729342 1.0075896 1.0083321 1.0340864 1.0653486 #>  [349,] 0.4463411 0.8592090 0.8624189 0.9265469 1.0068959 1.0092440 1.0383817 #>  [350,] 0.2708935 0.3365441 0.3931910 0.4276433 0.4672128 0.5409923 0.6306124 #>  [351,] 0.5408693 0.7281972 0.7667470 0.7818807 0.8228154 0.8305293 0.8431123 #>  [352,] 0.3501657 0.4620788 0.5238120 0.5400915 0.5509181 0.5640903 0.5790335 #>  [353,] 0.1885205 0.5593366 0.6532922 0.6805548 0.7222852 0.7751553 0.8337541 #>  [354,] 1.2277691 1.4360570 1.6138869 1.6213691 1.7759718 1.7779905 1.7848476 #>  [355,] 0.8242392 0.9228276 0.9421045 0.9549182 1.0514106 1.0628378 1.0915981 #>  [356,] 0.8912921 1.1052013 1.1787485 1.2019538 1.2176731 1.2840337 1.2922894 #>  [357,] 0.7214758 0.8176732 0.8765315 0.9388705 0.9846060 0.9883766 1.0281245 #>  [358,] 0.2019997 0.3942796 0.4061685 0.4625465 0.4650908 0.4766648 0.5074522 #>  [359,] 0.2852912 0.5959307 0.7829015 0.8684038 0.9360344 0.9660669 1.0255448 #>  [360,] 0.3663513 0.4620726 0.4928110 0.6066652 0.6437686 0.6947540 0.6974378 #>  [361,] 0.4709711 0.4893799 0.5271901 0.5348919 0.5595583 0.6147952 0.6332370 #>  [362,] 0.5402270 0.5479325 0.6069418 0.7156318 0.7923353 0.8285279 0.8466747 #>  [363,] 0.3695347 0.5628904 0.6230425 0.6584946 0.7375044 0.7833738 0.7872584 #>  [364,] 0.8500521 0.9898710 1.3791646 1.3917013 1.3993443 1.4746773 1.7654990 #>  [365,] 0.3671338 0.3884875 0.4877900 0.5013694 0.5329196 0.5652621 0.6519522 #>  [366,] 0.5387650 1.0433633 1.0619416 1.0674395 1.1750497 1.2139404 1.2577582 #>  [367,] 0.6376485 0.6717391 0.7028215 0.7621991 0.8476824 0.9256680 0.9330207 #>  [368,] 0.5058127 0.6326157 0.6419703 0.6504964 0.6797433 0.7538305 0.7872242 #>  [369,] 0.4172817 0.7999329 0.9408210 1.0362409 1.0509540 1.0767166 1.1445447 #>  [370,] 0.1622579 0.2832242 0.6281824 0.7477569 0.7511491 0.7572716 0.8268955 #>  [371,] 0.2256609 0.2723038 0.4489702 0.6187819 0.6662529 0.6749309 0.7011370 #>  [372,] 1.5202529 1.6010063 1.6750438 1.7343802 1.7657997 1.7955735 1.8590321 #>  [373,] 0.4862446 0.5066594 0.5746041 0.5852546 0.6537113 0.6825489 0.7090491 #>  [374,] 0.3479906 0.4714659 0.5216974 0.5286997 0.5712511 0.5968325 0.6332370 #>  [375,] 0.2782736 0.3324746 0.4266716 0.4491954 0.4566883 0.4729272 0.5383274 #>  [376,] 0.2418757 0.4416751 0.4934722 0.5078031 0.5689817 0.5759413 0.5770172 #>  [377,] 0.2120599 0.2500388 0.4157192 0.4222086 0.4484837 0.4486872 0.4664421 #>  [378,] 0.4175537 0.4857634 0.4933681 0.5446001 0.5921126 0.6002133 0.6186615 #>  [379,] 0.4077313 0.4111066 0.4617430 0.5194233 0.6371374 0.6493064 0.6571278 #>  [380,] 0.2409114 0.3210467 0.4137393 0.4965287 0.5111777 0.5353910 0.5386688 #>  [381,] 0.4714606 0.5900336 0.6706116 0.6801725 0.7736385 0.7885417 0.7893598 #>  [382,] 0.2860069 0.3280496 0.3633489 0.4367201 0.5021240 0.5544488 0.5841177 #>  [383,] 0.4877498 0.8028642 0.8382098 0.8574675 0.8894662 1.0119265 1.0470781 #>  [384,] 0.9503432 1.0553519 1.2363702 1.2792987 1.3115478 1.3244094 1.5739693 #>  [385,] 0.3276942 0.4652054 0.4777010 0.4901713 0.5296710 0.5446277 0.5738560 #>  [386,] 0.4830300 0.5021891 0.5185312 0.5255184 0.5330592 0.5870283 0.5878170 #>  [387,] 0.4568271 0.6728635 0.6969678 0.7281046 0.7829656 0.8147391 0.8520805 #>  [388,] 0.3088707 0.3697606 0.4747176 0.5577461 0.5852546 0.6081481 0.6128630 #>  [389,] 0.2826386 0.2906610 0.3657831 0.3658048 0.4042463 0.5358539 0.5446629 #>  [390,] 0.4942294 0.5109154 0.5195490 0.5345708 0.5468445 0.5633748 0.5676130 #>  [391,] 0.3136374 0.4372460 0.4734435 0.5360767 0.5474114 0.5949131 0.6021796 #>  [392,] 0.2282839 0.4884643 0.4999025 0.5586099 0.5869749 0.6186786 0.6329388 #>  [393,] 0.3561721 0.8015432 0.8433407 0.9176593 0.9286451 0.9568119 1.0171466 #>  [394,] 0.3251226 0.3390662 0.4370965 0.4581537 0.5629237 0.5996822 0.5998658 #>  [395,] 0.4142641 0.4649356 0.5892782 0.6031387 0.6106637 0.6749854 0.6934775 #>  [396,] 0.5453192 0.5611623 0.6709691 0.6837227 0.7947814 0.9843714 1.0556965 #>  [397,] 0.2999953 0.3333233 0.3360452 0.4450886 0.5270543 0.5535425 0.5546223 #>  [398,] 0.2293324 0.2487355 0.4102580 0.4358542 0.4728931 0.5738897 0.6283359 #>  [399,] 0.3048060 0.4315846 0.4663009 0.4810595 0.5018910 0.5100331 0.5463946 #>  [400,] 0.3768092 0.4723970 0.5142527 0.5300850 0.5489528 0.5977486 0.6090505 #>  [401,] 0.2541215 0.4122325 0.4401434 0.4553788 0.4792514 0.4877991 0.5218092 #>  [402,] 0.4806187 0.5062312 0.5376830 0.6087522 0.6281824 0.6331571 0.6424541 #>  [403,] 0.4859296 0.7140255 0.7280331 0.7537663 0.7854010 0.7957756 0.8134874 #>  [404,] 0.4776714 0.5856327 0.6375424 0.6573971 0.6697004 0.7190526 0.7320123 #>  [405,] 1.0810412 1.1078828 1.1209323 1.1517058 1.1995452 1.2107555 1.2548582 #>  [406,] 0.7574865 0.7591691 0.8002654 0.8023719 0.8119871 0.8138536 0.8376472 #>  [407,] 0.5076056 0.7160281 0.7288345 0.8508014 0.8726904 0.8957623 0.8965192 #>  [408,] 0.3917303 0.6749520 0.6775623 0.7146012 0.7310751 0.7711324 0.7925142 #>  [409,] 0.4560278 0.5642390 0.6232488 0.6322162 0.7453339 0.8073219 0.8209614 #>  [410,] 0.4024457 0.6059121 0.6383613 0.6580526 0.6855570 0.8746798 0.8859500 #>  [411,] 0.1622579 0.3015309 0.6575790 0.7666700 0.7873041 0.8478834 0.8744806 #>  [412,] 0.5650419 0.6796447 0.7059679 0.7205450 0.8871443 0.8946866 0.9036845 #>  [413,] 0.3226564 0.3619335 0.3877822 0.3879051 0.3904832 0.3942829 0.4366266 #>  [414,] 0.2884836 0.2980818 0.5509843 0.5998683 0.6037742 0.6876990 0.6929950 #>  [415,] 0.7516039 0.7537663 0.8315310 1.0832356 1.1050766 1.1824745 1.2186767 #>  [416,] 0.3233114 0.3346100 0.3730147 0.3884875 0.4668807 0.5560086 0.5570606 #>  [417,] 0.3830085 0.3917967 0.5046050 0.5561590 0.7189127 0.7198377 0.7727212 #>  [418,] 0.7223606 0.7674967 0.9252648 0.9340406 0.9664137 0.9898710 1.0031444 #>  [419,] 0.2193636 0.6522734 0.7493782 0.7838028 0.8554646 0.8707301 0.8848497 #>  [420,] 0.5582100 0.8351911 0.9865305 1.0419349 1.0592579 1.1086303 1.1620955 #>  [421,] 0.4984199 0.6111026 0.6232734 0.6289120 0.7879457 0.8012428 0.8254576 #>  [422,] 0.2357896 0.3252274 0.3885557 0.4825222 0.4998873 0.5852473 0.6121900 #>  [423,] 0.5355846 0.5906037 0.5909170 0.6427957 0.6811925 0.6857925 0.7175342 #>  [424,] 0.6307100 0.7006235 0.7951191 0.8649560 0.8798586 0.8920085 0.9000082 #>  [425,] 0.4779216 0.6093396 0.6676639 0.6986476 0.7532461 0.7562406 0.7569892 #>  [426,] 0.3766115 0.4346719 0.4500400 0.7548900 0.7787326 0.7851741 0.7910527 #>  [427,] 0.7516585 0.9060167 1.1827120 1.3095158 1.3334425 1.4014466 1.4306143 #>  [428,] 0.6188761 1.3906291 1.4627516 1.5088695 1.5204495 1.6083246 1.6304275 #>  [429,] 0.4588847 0.5131919 0.6805548 0.6959257 0.7268296 0.7668665 0.7721169 #>  [430,] 0.6079044 0.6230996 0.8320487 0.9194070 0.9323509 0.9675278 0.9825721 #>  [431,] 0.4222055 0.5056195 0.5058127 0.6642461 0.7182067 0.7846282 0.7926107 #>  [432,] 0.4120308 0.5875270 0.6491674 0.6622900 0.6831521 0.6906525 0.6994344 #>  [433,] 0.6092573 0.6899660 0.8091852 0.8202254 0.8557120 0.8962119 0.9101548 #>  [434,] 0.5642390 0.8728453 0.9143205 0.9304500 0.9506111 0.9627313 0.9699908 #>  [435,] 0.5737663 0.6567739 0.7075758 0.7235561 0.7908859 0.8139988 0.8400099 #>  [436,] 0.3590565 0.6907860 0.7625488 0.7727661 0.8102412 0.8183682 0.8770766 #>  [437,] 0.3406819 0.5747331 0.6880235 0.8012984 0.8521412 0.8709460 0.9677037 #>  [438,] 0.3172071 0.3641350 0.4125951 0.5013049 0.5742369 0.5943617 0.5958928 #>  [439,] 0.7635971 0.7739371 0.9439475 0.9482650 0.9682567 1.1160403 1.1551597 #>  [440,] 0.2355334 0.3390662 0.5633963 0.6275792 0.6369327 0.6588543 0.6669086 #>  [441,] 0.5108991 0.6134853 0.6326242 0.7189127 0.8396846 0.8440908 0.8589440 #>  [442,] 0.5031542 0.5874982 0.7723642 0.8198295 0.8259472 0.8997562 0.9366179 #>  [443,] 0.6061490 0.6721748 0.6845963 0.7131244 0.7591335 0.8119386 0.8226054 #>  [444,] 0.4458748 0.6669086 0.7106159 0.7142090 0.7437033 0.7517326 0.7666163 #>  [445,] 0.3821529 0.3895032 0.4315797 0.5711821 0.5840100 0.6035660 0.6237688 #>  [446,] 0.2706996 0.3589255 0.3688013 0.4810240 0.5669776 0.6061490 0.6640788 #>  [447,] 0.4346719 0.4943880 0.7873505 0.8178699 0.8335206 0.8536089 0.9139232 #>  [448,] 0.5520035 0.8016874 0.9314782 0.9831571 1.0303462 1.0307870 1.0521976 #>  [449,] 1.0163688 1.0443653 1.1252770 1.1665264 1.2362072 1.3064607 1.3148640 #>  [450,] 0.7381526 0.8183682 0.8728453 0.9258321 0.9359091 1.0155430 1.0257492 #>  [451,] 0.2282305 0.3238118 0.3416982 0.3830699 0.4213168 0.4909769 0.5185312 #>  [452,] 0.4334265 0.4429249 0.4624466 0.5194233 0.5936516 0.5989517 0.6277640 #>  [453,] 0.5616091 0.5714393 0.5746041 0.6782628 0.7166887 0.7325940 0.7873505 #>  [454,] 1.6534813 1.8005252 1.9561321 1.9680457 1.9826731 2.0894524 2.1343329 #>  [455,] 0.3561721 0.8645404 0.8921676 0.9202722 0.9483690 1.0298807 1.0680996 #>  [456,] 0.3953472 0.6488499 0.6861264 0.6907860 0.6934775 0.7197752 0.7268296 #>  [457,] 0.4635209 0.4745488 0.5097590 0.5157606 0.6121310 0.6308153 0.6806444 #>  [458,] 0.3606484 0.3630003 0.4068520 0.4766648 0.5065138 0.5477479 0.5508350 #>  [459,] 0.7908759 0.8646802 1.1666422 1.1808374 1.2393749 1.2526579 1.2596075 #>  [460,] 0.3397718 0.4026674 0.4285338 0.4337698 0.4425397 0.4706086 0.5014881 #>  [461,] 0.1967649 0.2044970 0.3280496 0.3907769 0.4102853 0.4836692 0.5558828 #>  [462,] 0.3333925 0.4484837 0.4995070 0.5551638 0.5642318 0.5753715 0.5800256 #>  [463,] 1.0247421 1.0821931 1.0980964 1.1910473 1.2346414 1.2487507 1.2832747 #>  [464,] 0.2892078 0.3297268 0.4745488 0.5717497 0.6304598 0.6570631 0.6733578 #>  [465,] 0.4601222 0.5121445 0.6642103 0.6953358 0.8350582 0.8401030 0.8645532 #>  [466,] 0.4629651 0.5467908 0.5921235 0.7451009 0.7755972 0.8044576 0.8276359 #>  [467,] 0.1037188 0.4428150 0.4636649 0.4664328 0.4892372 0.5054087 0.5325772 #>  [468,] 0.2297910 0.3019276 0.3416982 0.5667249 0.5816925 0.5852583 0.5858927 #>  [469,] 0.6589182 0.7746569 0.8467477 0.8997878 0.8998580 0.9035472 0.9300628 #>  [470,] 0.4561880 0.7975751 0.8228154 0.8302536 0.8330316 0.9025331 0.9588168 #>  [471,] 0.6326242 0.7066998 0.7220772 0.7727892 0.8033060 0.8521892 0.9203529 #>  [472,] 0.3172537 0.4507095 0.5560086 0.5594476 0.5652621 0.5768876 0.5976755 #>  [473,] 0.7297703 0.8908009 1.0149548 1.0483395 1.0551788 1.0896123 1.1773811 #>  [474,] 0.3332975 0.4651329 0.8120959 0.8829645 1.0081941 1.0149294 1.0284496 #>  [475,] 0.1776247 0.3824601 0.3972208 0.5076018 0.5275356 0.5511619 0.5608033 #>  [476,] 0.4489516 0.6682446 0.7673708 0.8060717 0.8436619 0.8738320 0.8746208 #>  [477,] 0.8346687 0.8656072 0.8842997 0.9002728 0.9248882 1.0307870 1.0450899 #>  [478,] 0.3330563 0.4394138 0.4512395 0.4676956 0.4744157 0.4759046 0.5087845 #>  [479,] 0.4164269 0.4986015 0.5044952 0.5407008 0.5564996 0.5716683 0.5886895 #>  [480,] 0.5760722 0.6412465 0.8503567 0.9039584 0.9097192 0.9656383 0.9682567 #>  [481,] 0.5039649 0.5746321 0.6007627 0.6097622 0.6489483 0.6792385 0.6944752 #>  [482,] 0.5027766 1.0063955 1.0639297 1.1081897 1.2266088 1.2825370 1.3081020 #>  [483,] 0.6676639 0.6901406 0.7062261 0.7602003 0.8206898 0.9446543 0.9922475 #>  [484,] 0.3739315 0.3858145 0.4527603 0.5509181 0.5708345 0.6051244 0.6810395 #>  [485,] 0.6538904 0.8027134 0.8113225 0.8469038 0.8683483 0.8773614 0.8863482 #>  [486,] 0.5106410 0.5400270 0.5906356 0.7205450 0.7441052 0.7710820 0.7810050 #>  [487,] 0.4656898 0.5625374 0.5650919 0.6369023 0.7671926 0.8016874 0.8541896 #>  [488,] 0.3333925 0.3630003 0.4157192 0.4282523 0.4932012 0.5013049 0.5107570 #>  [489,] 0.4768777 0.7681720 0.7829454 0.8091297 0.8629120 0.8920162 0.8992593 #>  [490,] 0.4889698 0.4921198 0.6125294 0.6969912 0.7363873 0.7364220 0.7839436 #>  [491,] 0.2374153 0.3473918 0.3539767 0.4268916 0.4933681 0.5185337 0.5520382 #>  [492,] 0.6839223 0.7207868 0.8689665 1.1162303 1.2049398 1.2315382 1.3608196 #>  [493,] 2.1859760 2.2875630 2.3332277 2.5028878 2.5955872 2.5962759 2.5979764 #>  [494,] 0.5452864 0.7473889 0.7890155 0.8345964 0.8660294 1.0326413 1.0363973 #>  [495,] 0.4063619 0.4636649 0.4786091 0.4942294 0.5415113 0.5749347 0.5883195 #>  [496,] 0.2367144 0.3491207 0.3999630 0.4765855 0.4902425 0.5309221 0.5339806 #>  [497,] 0.2964465 0.3738386 0.6670931 0.6839840 0.7260439 0.7632397 0.7840143 #>  [498,] 0.5467908 0.5828254 0.6123603 0.6476858 0.7508591 0.7697303 0.8021341 #>  [499,] 0.6106637 0.6565955 0.7112550 0.7381526 0.7607554 0.7702186 0.8091413 #>  [500,] 0.4803254 0.4967045 0.5546548 0.6530427 0.7326638 0.7462886 0.7547868 #>  [501,] 0.4591873 0.5680426 0.6682023 0.6688904 0.6811815 0.6837995 0.7666163 #>  [502,] 0.3308434 0.3365441 0.3447042 0.5096054 0.5491708 0.7013867 0.7036856 #>  [503,] 0.9966173 1.3381338 1.3453941 1.3875662 1.4058899 1.4221246 1.4931165 #>  [504,] 0.5415934 0.5425533 0.6588853 0.6685695 0.7583167 0.7660456 0.7918567 #>  [505,] 0.4350633 0.4566860 0.5111777 0.5172094 0.5752908 0.5992017 0.6343959 #>  [506,] 0.7422461 0.9612810 1.0834659 1.0904585 1.1073841 1.1209323 1.1706830 #>  [507,] 0.5122345 0.6306156 0.6638285 0.6715817 0.6836024 0.7965138 0.8015432 #>  [508,] 0.5893544 0.5991529 0.6847816 0.7021442 0.7028576 0.7076885 0.7079721 #>  [509,] 0.3314480 0.3364444 0.3738929 0.4054438 0.4726597 0.4788982 0.4863734 #>  [510,] 0.4576199 0.7235561 0.9085088 0.9401676 0.9417579 0.9610424 0.9728641 #>  [511,] 0.8524133 0.8649560 1.0132215 1.0332973 1.1272105 1.1517058 1.3088271 #>  [512,] 0.5233733 0.5400915 0.5751968 0.7052481 0.7299863 0.7418829 0.7535541 #>  [513,] 0.4991214 0.5312998 0.5441923 0.5708345 0.5906503 0.6137442 0.6490438 #>  [514,] 0.3638653 0.3740718 0.3867787 0.4624376 0.4756084 0.5119379 0.5213667 #>  [515,] 0.4996513 0.5561590 0.6532117 0.6623280 0.6642607 0.6876937 0.7335450 #>  [516,] 0.7426165 0.7454337 1.0031444 1.0235061 1.0482942 1.1925060 1.2989619 #>  [517,] 0.3491207 0.3568532 0.3931401 0.4810240 0.4877424 0.4878814 0.4986276 #>  [518,] 0.2434542 0.4648506 0.4747176 0.4917844 0.4986276 0.5339806 0.5669776 #>  [519,] 0.3497051 0.4069700 0.4421352 0.5425533 0.6175773 0.6487045 0.7127512 #>  [520,] 0.7863525 0.8219534 1.0669706 1.1771141 1.2619548 1.2738165 1.3063071 #>  [521,] 0.2988458 0.3317955 0.4500648 0.5790875 0.6030507 0.6155286 0.6642461 #>  [522,] 0.2799555 0.2999953 0.3686796 0.4204032 0.4240675 0.5211590 0.5653957 #>  [523,] 0.2917909 0.4805444 0.6814172 0.6837227 0.7144689 0.7676503 0.7932000 #>  [524,] 0.3242519 0.3252274 0.3619760 0.4244104 0.5424208 0.5724630 0.5743236 #>  [525,] 0.3486809 0.5738917 0.7168527 0.7280331 0.8775842 0.9605247 0.9977871 #>  [526,] 0.4677776 0.5619975 0.6277640 0.6973338 0.7262368 0.7626788 0.7711357 #>  [527,] 0.2312718 0.3367024 0.4039046 0.4226543 0.4337698 0.4568311 0.4998430 #>  [528,] 0.5547316 0.6461318 0.7741801 0.8143255 0.8262811 0.8276359 0.8504683 #>  [529,] 0.4386174 0.4573359 0.4610525 0.5079071 0.6623280 0.6853393 0.7698427 #>  [530,] 0.2964465 0.4481547 0.5156157 0.6582642 0.6733578 0.6962368 0.7358509 #>  [531,] 0.5408693 0.5601086 0.6962368 0.7304615 0.7501616 0.7840143 0.7975751 #>  [532,] 0.2782736 0.3615296 0.3794666 0.3840249 0.4146233 0.4774153 0.4865852 #>  [533,] 0.4466148 0.4576609 0.4888781 0.4944436 0.5029421 0.5230248 0.5522129 #>  [534,] 0.3435575 0.5118174 0.5455786 0.5503629 0.6060499 0.6269038 0.6331571 #>  [535,] 0.1354140 0.4733509 0.4944436 0.5279254 0.5503015 0.5531836 0.6516036 #>  [536,] 0.9330747 0.9349830 0.9921747 1.0178122 1.0360908 1.1407805 1.1720893 #>  [537,] 0.3490248 0.4252894 0.6357975 0.7271289 0.7571890 0.7678280 0.7976871 #>  [538,] 0.1885205 0.6027604 0.6234002 0.7234272 0.8044079 0.8256712 0.8398741 #>  [539,] 0.2635167 0.2849493 0.3336941 0.3384407 0.4557704 0.4568311 0.4805246 #>  [540,] 0.2312718 0.3397718 0.4052340 0.4144953 0.4728637 0.4995907 0.5136086 #>  [541,] 0.8269073 0.9449309 0.9503432 0.9711797 1.0752955 1.1076806 1.2150459 #>  [542,] 0.4216764 0.5261671 0.6155286 0.6548641 0.6675856 0.6806289 0.6817275 #>  [543,] 0.3996243 0.4105368 0.5254439 0.5255184 0.5390286 0.5509843 0.5697183 #>  [544,] 0.4567149 0.5494084 0.6859785 0.8329451 0.9011810 0.9549182 0.9909327 #>  [545,] 0.5655042 0.7377664 0.7751978 0.8611325 0.9101877 0.9814290 1.0028339 #>  [546,] 0.5013694 0.5156157 0.5373695 0.5482985 0.5524559 0.5552595 0.6030685 #>  [547,] 0.3222093 0.3473426 0.4548318 0.4600136 0.5120960 0.5324907 0.5412162 #>  [548,] 0.5327931 0.5503629 0.5631244 0.6050866 0.6090639 0.6340937 0.6403541 #>  [549,] 0.4292007 0.4758166 0.4841684 0.5102184 0.5598599 0.6084161 0.6283728 #>  [550,] 0.5756206 0.6376485 0.8920085 0.9210794 0.9565790 0.9650843 0.9678827 #>  [551,] 0.3658741 0.4629031 0.5598856 0.6002670 0.6146684 0.6159951 0.6254634 #>  [552,] 0.6178595 0.7806528 0.8136846 0.9261903 0.9346225 0.9541693 0.9624899 #>  [553,] 0.7557418 0.7806528 0.9422243 0.9865992 1.0275810 1.0853410 1.1159021 #>  [554,] 0.4648506 0.5142300 0.5309221 0.5647567 0.6084392 0.6123603 0.6335523 #>  [555,] 0.9230766 0.9325296 0.9845647 1.0830179 1.1062695 1.1163056 1.1994370 #>  [556,] 0.5163068 0.5329196 0.5359079 0.5462907 0.5666351 0.6030685 0.6612528 #>  [557,] 0.4856305 0.6899660 0.7058884 0.8229090 0.8312049 0.8797816 0.8937646 #>  [558,] 0.3904832 0.4498549 0.5468519 0.5480606 0.5529967 0.5754240 0.6016540 #>  [559,] 0.2979887 0.6476332 0.6550230 0.7127361 0.7243373 0.7598689 0.7651420 #>  [560,] 0.3391814 0.3628950 0.4164269 0.4666526 0.5113782 0.5201234 0.5203093 #>  [561,] 0.2968705 0.3044153 0.3693318 0.4581537 0.4792514 0.4861192 0.5283992 #>  [562,] 0.5026967 0.5894015 0.7415615 0.7923845 0.8577357 0.9052041 0.9139232 #>  [563,] 0.3167376 0.3903283 0.5201234 0.5476729 0.6287121 0.6488428 0.6885173 #>  [564,] 0.3360452 0.3572687 0.4012718 0.4870719 0.5018910 0.5326273 0.5465198 #>  [565,] 0.3858145 0.4737034 0.4876501 0.5441923 0.5672398 0.5831350 0.5940870 #>  [566,] 0.3554529 0.4545728 0.5229167 0.5312950 0.5343681 0.6269038 0.6370947 #>  [567,] 0.4878990 0.4975983 0.5598856 0.6418424 0.6833277 0.6866807 0.7034803 #>  [568,] 0.3884991 0.4815243 0.6752507 0.7329509 0.7674032 0.7918567 0.9208634 #>  [569,] 0.4423028 0.4709711 0.5968325 0.5991498 0.5991693 0.6859225 0.7211995 #>  [570,] 0.4031496 0.4122325 0.4861192 0.5419426 0.5556667 0.5601752 0.5608046 #>  [571,] 0.3547773 0.4197049 0.4765414 0.5116123 0.5120960 0.5448521 0.5476729 #>  [572,] 0.2840007 0.5097590 0.5281297 0.5499918 0.5716971 0.5736833 0.5817051 #>  [573,] 0.3187897 0.3619335 0.5178539 0.5260726 0.5438461 0.5529967 0.5556020 #>  [574,] 0.2557244 0.4088249 0.4971902 0.5341007 0.5431550 0.5742369 0.6180573 #>  [575,] 0.5066424 0.5257652 0.6394905 0.6602882 0.6951371 0.7170544 0.7558919 #>  [576,] 0.5906037 0.6713251 0.7245646 0.7657191 0.7934218 0.8537098 0.8768584 #>  [577,] 0.4024457 0.5778408 0.7812633 0.8267255 0.8989273 0.8997878 0.9205000 #>  [578,] 0.3607338 0.3993161 0.4808725 0.5005509 0.5652138 0.6348970 0.7020941 #>  [579,] 0.2345092 0.4498442 0.6015085 0.7166887 0.7455655 0.7516894 0.8160630 #>  [580,] 0.5593366 0.6027604 0.6315850 0.6323718 0.6749854 0.7256537 0.7357767 #>  [581,] 0.3554529 0.5354898 0.5884149 0.5894015 0.6789112 0.6907834 0.6936543 #>  [582,] 0.2243061 0.4687024 0.4714862 0.4934722 0.5420559 0.5443058 0.5451903 #>  [583,] 0.4894494 0.5785824 0.6245253 0.7491739 0.7799340 0.8248730 0.8740258 #>  [584,] 0.1599595 0.3473426 0.3606484 0.3664027 0.4190925 0.4445912 0.5514899 #>  [585,] 0.2964075 0.6131158 0.6186149 0.6476402 0.6486387 0.6566004 0.6725225 #>  [586,] 0.4077000 1.0577302 1.0792106 1.1101215 1.1127515 1.1506055 1.1564787 #>  [587,] 0.4698670 0.5907306 0.6313470 0.6407980 0.6554045 0.6555931 0.6666018 #>  [588,] 0.2303572 0.4392056 0.4620726 0.5002065 0.6774032 0.7364477 0.7588341 #>  [589,] 0.1953774 0.3238118 0.3709005 0.4105368 0.4633584 0.4791785 0.4830300 #>  [590,] 0.4798825 0.5118116 0.5188999 0.6480952 0.6668926 0.6795478 0.7066701 #>  [591,] 0.4422656 0.9848017 1.0780373 1.1978771 1.2043238 1.2696152 1.2959284 #>  [592,] 0.2293324 0.3315173 0.4220284 0.4706086 0.4739094 0.4788826 0.5736833 #>  [593,] 0.2708935 0.4925249 0.5080920 0.5096054 0.5656983 0.6171021 0.6171834 #>  [594,] 0.4962239 0.6277738 0.6461318 0.6476858 0.7182977 0.7218247 0.7233158 #>  [595,] 0.3730147 0.4507095 0.4877900 0.5254055 0.5785141 0.5988992 0.6122028 #>  [596,] 0.5451681 0.5546548 0.5878172 0.6682008 0.6876990 0.6998869 0.7415216 #>  [597,] 0.5156909 0.5296571 0.5720592 0.6736324 0.6908298 0.7413473 0.7481673 #>  [598,] 0.5934524 0.6484599 0.6501876 0.6634054 0.6754176 0.6811815 0.7170195 #>  [599,] 0.2357896 0.3242519 0.5509879 0.5869009 0.5938488 0.5995692 0.6023265 #>  [600,] 0.3835656 0.5177867 0.6616281 0.7293568 0.7500252 0.7714961 0.7951125 #>  [601,] 0.4293575 0.8401921 0.8610750 0.9085351 0.9270294 0.9310631 0.9445509 #>  [602,] 0.4329912 0.4615846 0.4668836 0.5087845 0.5109154 0.5284672 0.5547625 #>  [603,] 0.2469935 0.3210467 0.4700474 0.4799583 0.4896213 0.5172094 0.6011397 #>  [604,] 0.5076056 0.6536930 0.7341132 0.7596671 0.7839593 0.7875771 0.7938491 #>  [605,] 0.1989312 0.3126654 0.4663009 0.5322847 0.5421341 0.5553601 0.5670528 #>  [606,] 0.4728509 0.5062312 0.5327931 0.5669624 0.7214758 0.7513954 0.8166686 #>  [607,] 0.4604181 0.5921235 0.6015904 0.6768088 0.7376029 0.7383932 0.7526442 #>  [608,] 0.3168347 0.4984199 0.5827274 0.6398525 0.6545609 0.7170332 0.7628485 #>  [609,] 0.4315797 0.4531359 0.4545728 0.4966920 0.5354898 0.5461294 0.5536090 #>  [610,] 0.6419355 0.9290551 0.9530816 1.0014498 1.0103239 1.0815478 1.2398988 #>  [611,] 0.4941481 0.5900336 0.6751453 0.7781352 0.8106073 0.8476824 0.8629415 #>  [612,] 0.3849656 0.4394292 0.5351830 0.5566323 0.6329388 0.6911671 0.7530470 #>  [613,] 0.5594920 0.5981557 0.6442443 0.6505222 0.6650776 0.7146996 0.7279939 #>  [614,] 0.7183012 0.7207820 0.9555567 0.9892494 1.0426566 1.0632155 1.0833247 #>  [615,] 0.5106410 0.6500597 0.6796447 0.7596670 0.8113225 0.8240154 0.8476716 #>  [616,] 0.8237499 0.9510761 1.1134521 1.1150658 1.1562988 1.1782388 1.1862444 #>  [617,] 0.3622363 0.4123920 0.4346951 0.4453192 0.4730814 0.4769688 0.4953386 #>  [618,] 0.4251477 0.4583017 0.4858478 0.5390297 0.5798402 0.6076570 0.6351726 #>  [619,] 0.1779175 0.3543659 0.3547695 0.4123920 0.4438148 0.4774153 0.4834136 #>  [620,] 0.3579435 0.5358539 0.5366731 0.5395834 0.5648470 0.6081113 0.6427197 #>  [621,] 0.3501657 0.3593264 0.4178846 0.4361177 0.4727850 0.6837802 0.7245343 #>  [622,] 0.3910574 0.4329912 0.4562475 0.4898979 0.5066904 0.5306511 0.5426174 #>  [623,] 0.2185745 0.4366266 0.4441402 0.4874785 0.5383679 0.5556020 0.5570606 #>  [624,] 0.3658741 0.4135067 0.4828304 0.5137121 0.5153933 0.5545155 0.6243260 #>  [625,] 0.8589440 0.8670800 0.8959375 0.9969409 1.0414119 1.0422242 1.0743324 #>  [626,] 0.6434676 1.1887927 1.2036866 1.3003535 1.3587939 1.4489622 1.4644260 #>  [627,] 0.5026967 0.6423436 0.6936543 0.7050573 0.8571478 0.8892194 0.9173877 #>  [628,] 0.3088707 0.3091076 0.4863734 0.5445162 0.5583643 0.5936762 0.5987335 #>  [629,] 0.5647841 0.6232734 0.6712344 0.7557418 0.8335839 0.8426266 0.8723428 #>  [630,] 0.6362564 0.7454337 0.8361406 0.8586384 0.8867327 0.9187829 0.9252648 #>  [631,] 0.3485035 0.4329077 0.4418391 0.4726597 0.4816213 0.4865701 0.4876958 #>  [632,] 0.3172537 0.4269472 0.5080920 0.5409923 0.5531408 0.5841177 0.6037206 #>  [633,] 0.1727962 0.4361177 0.5784169 0.6382418 0.7138183 0.7150422 0.8454453 #>  [634,] 0.5408530 0.5628904 0.5772825 0.6054718 0.6293128 0.7412978 0.7432020 #>  [635,] 0.4728509 0.4806187 0.6366300 0.6998528 0.7090418 0.7254524 0.7375105 #>  [636,] 0.3231234 0.6628998 0.6643801 0.7027118 0.7201094 0.7734807 0.8790075 #>  [637,] 0.6496467 0.6628998 0.6921075 0.7675113 0.8110998 0.8437147 0.9157993 #>  [638,] 0.3547695 0.3622888 0.3641349 0.4146233 0.4202269 0.4266716 0.4789272 #>  [639,] 0.5046714 0.7652280 0.7699063 0.9312268 0.9446005 1.0540575 1.0606064 #>  [640,] 0.3905570 0.5359079 0.5594476 0.6128630 0.6311085 0.6519522 0.6734122 #>  [641,] 0.6434676 0.8577357 1.0081187 1.0427777 1.1492987 1.1724928 1.2094259 #>  [642,] 0.2418824 0.6268386 0.6427886 0.6567739 0.6792586 0.7021442 0.7263555 #>  [643,] 0.4562501 0.4635898 0.6633026 0.7195911 0.7316303 0.8431391 0.8463871 #>  [644,] 0.9865946 1.2583091 1.3697740 1.6952546 1.7187666 1.8021132 1.8710686 #>  [645,] 0.1825666 0.3242840 0.3638653 0.4412104 0.4791898 0.5350797 0.5431550 #>  [646,] 0.4321481 0.5567676 0.6183795 0.8805021 0.9482650 0.9538047 0.9729342 #>  [647,] 0.8825739 0.9941509 1.1650843 1.1835732 1.1987695 1.2930526 1.3032984 #>  [648,] 0.3038167 0.6631138 0.6668926 0.8017866 0.8937646 0.9325296 0.9684391 #>  [649,] 0.1671345 0.3723088 0.3742529 0.3988786 0.5516623 0.5633963 0.6031217 #>  [650,] 0.5927699 0.6210740 0.6741922 0.7140255 0.7656913 0.7721200 0.7877247 #>  [651,] 0.4453192 0.4725953 0.5274212 0.5329345 0.5446237 0.5501248 0.5873070 #>  [652,] 0.4401434 0.4727850 0.4815277 0.5177581 0.5283699 0.5402864 0.5497495 #>  [653,] 0.3552347 0.3686939 0.3999630 0.4220651 0.4878814 0.5225529 0.6315908 #>  [654,] 0.1707441 0.3044153 0.3821529 0.4501168 0.4906728 0.4996527 0.5265614 #>  [655,] 0.5969688 0.6602882 0.6702983 0.6717391 0.7428478 0.7583778 0.7778631 #>  [656,] 0.1779175 0.3641349 0.4669314 0.4769688 0.4862321 0.5107410 0.5242326 #>  [657,] 0.2884836 0.4884643 0.5512997 0.5697183 0.5716479 0.6531894 0.6682008 #>  [658,] 0.7489698 0.7873519 0.8336663 0.9195132 0.9254464 1.0105686 1.1153894 #>  [659,] 0.5547316 0.7183012 0.7925142 0.7952429 0.8169539 0.8286314 0.9453851 #>  [660,] 0.4378167 0.5118116 0.5500943 0.5765119 0.6122430 0.6186149 0.6438595 #>  [661,] 0.7936241 0.8467477 0.9789282 0.9797849 1.0426800 1.1030041 1.1621069 #>  [662,] 0.3605811 0.7217154 0.9537651 0.9882980 1.0391205 1.0608954 1.1102597 #>  [663,] 0.6210855 0.6625665 0.6838298 0.7311249 0.7539422 0.7962146 0.8156924 #>  [664,] 0.4392056 0.5117005 0.5372611 0.5853963 0.5917162 0.5987499 0.6029454 #>  [665,] 0.3081736 0.3641350 0.4303685 0.4729340 0.5271262 0.5610354 0.6017890 #>  [666,] 0.7217154 1.0301736 1.0514150 1.1601509 1.2258868 1.3138742 1.3403902 #>  [667,] 0.5957165 0.6390308 0.7850612 0.8068856 0.8185930 0.8373043 0.9674294 #>  [668,] 0.2608155 0.5164729 0.5503015 0.5737817 0.6229309 0.6455293 0.6592886 #>  [669,] 0.3486809 0.6870243 0.7103136 0.7778284 0.8440908 0.8661141 0.8768750 #>  [670,] 0.1934650 0.4976059 0.7679584 0.7854010 0.7966990 0.8105844 0.8386201 #>  [671,] 0.5087454 0.5266322 0.6120957 0.6131158 0.6602345 0.6841066 0.7359530 #>  [672,] 0.3605811 0.7890155 0.8558846 0.8848497 1.0301736 1.0462197 1.0504178 #>  [673,] 0.4537485 0.4597046 0.4901092 0.5069199 0.5540344 0.6254402 0.6327567 #>  [674,] 0.8091516 0.9742825 0.9928848 1.0548866 1.0703207 1.0707247 1.1230613 #>  [675,] 0.6046660 0.6367343 0.7028576 0.7377664 0.7558011 0.8004971 0.8607032 #>  [676,] 0.5480396 0.6778923 0.7184353 0.8119769 0.8811243 0.9138857 0.9282663 #>  [677,] 0.4378167 0.4902425 0.5225529 0.5254055 0.5261671 0.5919135 0.6542758 #>  [678,] 0.3412836 0.4355330 0.5927699 0.6599623 0.7756791 0.8123276 0.8273155 #>  [679,] 0.2805693 0.2961382 0.4539678 0.4585624 0.4892372 0.5043516 0.5351272 #>  [680,] 0.4476512 0.6427886 0.6759834 0.6980601 0.7076885 0.8139988 0.8380118 #>  [681,] 0.2090033 0.2828096 0.3628950 0.4543130 0.4974309 0.5044952 0.6360859 #>  [682,] 0.3619989 0.3685980 0.3807536 0.3904282 0.4008153 0.4130207 0.4195729 #>  [683,] 0.3905570 0.4756207 0.5412091 0.5462907 0.5952378 0.6411389 0.7400473 #>  [684,] 0.2879469 0.4744157 0.5229341 0.5284672 0.5326273 0.5380783 0.5458251 #>  [685,] 0.5280187 0.6536930 0.6830510 0.7207868 1.0248027 1.0262714 1.0700744 #>  [686,] 0.3224540 0.4805444 0.5453192 0.5619975 0.7267849 0.7289076 0.7509239 #>  [687,] 0.6017890 0.6200234 0.6980644 0.7938491 0.8033950 0.8428723 0.8507786 #>  [688,] 0.3135979 0.4901713 0.5108190 0.5680426 0.6379742 0.6455293 0.6473283 #>  [689,] 0.2644412 0.5939493 0.8248730 0.8795495 0.8867939 0.8988754 0.9671340 #>  [690,] 0.5610128 0.6267142 0.6305275 0.6712300 0.6715817 0.6809556 0.7066524 #>  [691,] 0.4463587 0.4604181 0.4723970 0.5477150 0.5637111 0.5838696 0.6199216 #>  [692,] 0.3575733 0.3665872 0.3724785 0.3742991 0.4152830 0.4222086 0.4352025 #>  [693,] 0.5783442 0.6015904 0.6228384 0.6279489 0.6400903 0.6556327 0.6992264 #>  [694,] 0.3738386 0.4481547 0.6115310 0.6320971 0.6570631 0.7063055 0.7448427 #>  [695,] 0.4698591 0.5611779 0.6712776 0.7390494 0.8125552 0.8962170 0.8993950 #>  [696,] 0.3773446 0.4304110 0.4656622 0.5379842 0.5652138 0.6791821 0.7646652 #>  [697,] 0.1354140 0.4221216 0.4677549 0.5230248 0.5737817 0.6227250 0.6233386 #>  [698,] 0.2044970 0.2813431 0.4323765 0.4534707 0.5021240 0.5275356 0.5343814 #>  [699,] 0.4422656 0.8354571 0.8478155 0.9654936 1.0485823 1.2758359 1.3370421 #>  [700,] 0.4743537 0.5866958 0.8382098 0.8652395 0.8763830 0.8991391 0.9115748 #>  [701,] 0.4526056 0.5238537 0.5891360 0.6191237 0.6500806 0.6589267 0.6644645 #>  [702,] 0.6573711 0.6591912 0.7516894 0.7576443 0.7814956 0.8312444 0.8481842 #>  [703,] 0.4339342 0.4873870 0.5222120 0.5474114 0.5581709 0.5888384 0.5930841 #>  [704,] 0.6845088 0.7950088 0.8202254 0.8242392 0.9307254 0.9599532 0.9742813 #>  [705,] 0.4376309 0.5958351 0.6662670 0.7358031 0.7550694 0.7668032 0.8755014 #>  [706,] 0.4304110 0.5045733 0.5517161 0.6150655 0.8360344 0.8436619 0.8680448 #>  [707,] 0.6768088 0.8950190 0.9634342 0.9691958 0.9717478 1.0080481 1.0121407 #>  [708,] 0.3825866 0.4175537 0.4670998 0.4804604 0.5862601 0.5879191 0.5911446 #>  [709,] 0.3663335 0.4701566 0.5029421 0.6079740 0.6661617 0.7665243 0.7678769 #>  [710,] 0.9363303 1.0100751 1.2011329 1.2302602 1.3636697 1.4685806 1.4728971 #>  [711,] 0.4803254 0.5664114 0.5853017 0.5867643 0.5878172 0.5906503 0.6124764 #>  [712,] 0.7760351 0.8892120 0.9084129 1.0173168 1.1406988 1.1696865 1.2206526 #>  [713,] 0.4629620 0.4677549 0.4733509 0.4888781 0.5004484 0.5154286 0.5669529 #>  [714,] 0.6566094 0.7778631 0.8209974 0.8259472 0.8741656 0.8797610 0.8825735 #>  [715,] 0.2108323 0.2730850 0.3504234 0.3665872 0.3734575 0.5056143 0.5560871 #>  [716,] 0.6010726 0.6671713 0.6741922 0.7198927 0.7712652 0.8386201 0.8614575 #>  [717,] 0.4708821 0.5299029 0.6293128 0.6616158 0.7262368 0.8244515 0.9094021 #>  [718,] 0.5677036 0.5751968 0.6439229 0.6443399 0.6615360 0.6641896 0.6997395 #>  [719,] 0.4924419 0.5056195 0.5964617 0.6419703 0.6859785 0.6960617 0.7266624 #>  [720,] 1.0472764 1.3184100 1.3203076 1.4623461 1.5413792 1.5439096 1.5808427 #>  [721,] 0.4208741 0.5433174 0.6815069 0.7788166 0.7928019 0.8198295 0.8291746 #>  [722,] 0.2418212 0.3840249 0.3901001 0.4837325 0.4995391 0.5096032 0.5107410 #>  [723,] 0.1934650 0.4714971 0.6582642 0.7654104 0.7957756 0.8159574 0.8251129 #>  [724,] 0.2193636 0.6124764 0.6137442 0.7022318 0.7415216 0.7922208 0.7962904 #>  [725,] 0.5657751 0.6073761 0.6546332 0.6881286 0.7332021 0.7339925 0.7717429 #>  [726,] 0.4714606 0.5121445 0.7746408 0.7924199 0.8047652 0.8172050 0.8629415 #>  [727,] 0.5274485 0.6079740 0.7651036 0.7754378 0.8351911 0.9236481 0.9449309 #>  [728,] 0.2120599 0.2929110 0.3633813 0.3685980 0.4073261 0.4199082 0.4202269 #>  [729,] 0.6770855 0.7595197 0.7838107 0.7907184 0.8517025 0.8722485 0.8755273 #>  [730,] 0.2409114 0.2469935 0.3576810 0.5115678 0.5556667 0.5713410 0.5731874 #>  [731,] 0.3766115 0.4943880 0.5907306 0.6997904 0.7325940 0.7368415 0.7687109 #>  [732,] 0.2519073 0.3336941 0.4616543 0.4700023 0.4873870 0.5339643 0.5597358 #>  [733,] 0.4550436 0.5188535 0.6763253 0.7277572 0.8380242 0.8520782 0.8566295 #>  [734,] 1.2532081 1.2724941 1.2967866 1.3305923 1.4871172 1.4953360 1.5108119 #>  [735,] 0.2341277 0.2446095 0.2907175 0.4508542 0.4585624 0.5578122 0.5586949 #>  [736,] 0.4588847 0.4779447 0.5567204 0.5715468 0.6344234 0.6557465 0.6793244 #>  [737,] 0.4075805 0.4182212 0.4974622 0.6584946 0.6855570 0.7698975 0.8017580 #>  [738,] 0.3450018 0.5156554 0.5257652 0.5290774 0.6147116 0.6702983 0.7464663 #>  [739,] 0.4253331 0.5233733 0.5238120 0.5840100 0.6558034 0.6666756 0.6723129 #>  [740,] 0.4694029 0.4991595 0.5156554 0.5223843 0.5969688 0.6456974 0.6625494 #>  [741,] 0.1562207 0.3970671 0.4326671 0.4817913 0.5484170 0.5777540 0.6974324 #>  [742,] 0.5065474 0.8176732 0.8308880 0.8413078 0.8550718 0.8614140 0.8912364 #>  [743,] 0.6079336 0.6311174 0.6366300 0.7059679 0.7293568 0.8232029 0.8476716 #>  [744,] 0.3619760 0.4428150 0.4690987 0.4998873 0.5148664 0.5293162 0.5611208 #>  [745,] 0.2556632 0.4195729 0.4312064 0.4789272 0.5137063 0.5318165 0.5329345 #>  [746,] 0.2500388 0.2770693 0.2888624 0.2929110 0.3619989 0.3742991 0.4488914 #>  [747,] 0.3385360 0.3931401 0.4651564 0.4739782 0.5139621 0.6526109 0.6623339 #>  [748,] 0.9922475 1.0066171 1.0770741 1.1424962 1.1454182 1.2104392 1.2619430 #>  [749,] 0.3392456 0.4386174 0.5026561 0.5591255 0.6457926 0.7222722 0.8195088 #>  [750,] 0.4765582 0.8161502 0.9025089 0.9134330 1.0251546 1.1621741 1.1626996 #>  [751,] 0.3276942 0.4269487 0.4512395 0.4786091 0.5092710 0.5102330 0.5309498 #>  [752,] 0.1187200 0.5360294 0.5688078 0.5865973 0.7426287 0.7951191 0.8145526 #>  [753,] 0.2541215 0.4684095 0.5283992 0.5387520 0.5655034 0.5727699 0.6030855 #>  [754,] 0.6170588 0.8243922 0.8624189 0.9333937 1.0073694 1.0120791 1.1494238 #>  [755,] 0.8814088 0.9612810 1.0810412 1.3347596 1.5695609 1.5772719 1.6231037 #>  [756,] 0.7270006 0.7553210 0.8473550 0.8897790 0.8934518 0.9000082 1.0062982 #>  [757,] 0.3237671 0.3879051 0.4324017 0.4870662 0.4914695 0.5383679 0.5438461 #>  [758,] 1.0027524 1.1718125 1.1769164 1.2128028 1.2165585 1.2532081 1.2809540 #>  [759,] 0.5026990 0.5069199 0.5166392 0.5178539 0.5543921 0.5865905 0.5882810 #>  [760,] 0.4732983 0.5117717 0.5650220 0.6269201 0.6398555 0.6709620 0.6883754 #>  [761,] 0.2849493 0.3327656 0.3367024 0.4026674 0.4052340 0.4277468 0.4616543 #>  [762,] 0.2663603 0.2828096 0.3503878 0.5468519 0.5691832 0.6043631 0.6114488 #>  [763,] 0.3423054 0.5053129 0.5429092 0.5802435 0.5884547 0.6357125 0.6868268 #>  [764,] 0.7199640 0.7357022 0.7719385 0.8060717 0.8093230 0.8561646 0.8712984 #>  [765,] 0.3224814 0.3428952 0.4576609 0.5154286 0.6442773 0.6599623 0.6650934 #>  [766,] 0.3972208 0.4172823 0.4338930 0.4998761 0.6365918 0.6411076 0.7221123 #>  [767,] 0.3675840 0.7269182 0.7437033 0.7574081 0.7706156 0.7838368 0.8063002 #>  [768,] 0.3231234 0.4942408 0.5447581 0.5505349 0.7633689 0.7714211 0.8110998 #>  [769,] 0.4717657 0.7060368 0.7626853 0.7872482 0.8779764 0.8993781 0.9612096 #>  [770,] 0.2988458 0.5451808 0.5495108 0.6986640 0.7295274 0.7473392 0.7674495 #>  [771,] 0.3547773 0.3636563 0.3834567 0.4272958 0.4445912 0.4706863 0.5083381 #>  [772,] 0.7652280 0.9250110 0.9720190 0.9817771 1.0178122 1.0452325 1.0489673 #>  [773,] 0.4222055 0.4500648 0.5451808 0.5602758 0.5964617 0.6886554 0.7966682 #>  [774,] 0.2740490 0.3552347 0.6014663 0.6719396 0.7011634 0.7238620 0.7818807 #>  [775,] 0.4473199 0.5122345 0.5326792 0.6152761 0.6482947 0.6809556 0.6831133 #>  [776,] 0.2840007 0.2940947 0.5148664 0.5228366 0.5385255 0.5522014 0.5533013 #>  [777,] 0.3880143 0.5357262 0.5402911 0.5757268 0.6205554 0.6283728 0.6350839 #>  [778,] 0.7516039 0.8134874 0.8641328 0.8788879 0.9307758 0.9733051 1.0275344 #>  [779,] 0.4795558 0.5390297 0.5875270 0.5932370 0.6981820 0.7150041 0.7185585 #>  [780,] 0.7424838 0.7872482 0.8386018 0.8583676 0.9143442 0.9158798 0.9638344 #>  [781,] 0.1612775 0.2960704 0.4728931 0.4739094 0.5237929 0.5407830 0.6350839 #>  [782,] 0.1967649 0.2813431 0.2860069 0.3144744 0.3930992 0.4861302 0.5531408 #>  [783,] 0.4077905 0.6534226 0.6704384 0.6712344 0.6812332 0.7048666 0.7628485 #>  [784,] 0.1037188 0.4063619 0.4676956 0.5088882 0.5171115 0.5195490 0.5293162 #>  [785,] 0.1612775 0.2808273 0.4139112 0.4220284 0.4358542 0.5321568 0.5482985 #>  [786,] 0.6465565 0.6515206 0.6662670 0.7264164 0.7657191 0.8380772 0.9153141 #>  [787,] 0.2244068 0.2687605 0.3942796 0.4032975 0.5009725 0.5119379 0.5184104 #>  [788,] 0.7295274 0.9019724 0.9290551 0.9582882 0.9793055 1.0242757 1.0593014 #>  [789,] 0.3759315 0.3970671 0.4375598 0.4674926 0.5024543 0.5497495 0.5637695 #>  [790,] 0.7464420 0.8550427 0.9116462 0.9139681 1.0267943 1.0443108 1.0916332 #>  [791,] 0.9315703 1.1719730 1.1905578 1.1931777 1.3727415 1.3843608 1.4448139 #>  [792,] 0.6030888 1.2442686 1.3270773 1.3723203 1.5073706 1.5154273 1.5767424 #>  [793,] 0.3838237 0.5544579 0.6205120 0.6812332 0.7270006 0.7302881 0.7695102 #>  [794,] 0.3516280 0.4008153 0.5063226 0.5120109 0.5641328 0.5716221 0.5793782 #>  [795,] 0.2723038 0.4272958 0.4574893 0.4947823 0.5651094 0.5676470 0.5721657 #>  [796,] 0.3144744 0.3633489 0.4269472 0.4836692 0.5343814 0.5768876 0.5902354 #>  [797,] 0.4303685 0.4576782 0.4865701 0.5650220 0.6061960 0.6121900 0.6159951 #>  [798,] 0.5476062 0.6118668 0.7329509 0.7869932 0.7966682 0.8445349 0.8692849 #>  [799,] 0.6538904 0.7023432 0.8073219 0.8445276 0.8507622 0.9052672 0.9386613 #>  [800,] 0.4651564 0.4986015 0.5490788 0.6321961 0.6472690 0.6625494 0.6721748 #>  [801,] 0.8500521 1.2349154 1.3086777 1.6286492 1.8100826 1.8874466 1.9806082 #>  [802,] 0.3891360 0.4318514 0.6030507 0.6319574 0.6411389 0.6675856 0.6716705 #>  [803,] 0.1932593 0.4213070 0.4624414 0.4730814 0.5664796 0.5814897 0.5827584 #>  [804,] 0.4970674 0.5263861 0.5935936 0.6417659 0.6551953 0.6706116 0.6947289 #>  [805,] 0.3607338 0.4656622 0.4999294 0.5501117 0.5631244 0.5664796 0.5701811 #>  [806,] 0.6661617 0.7275581 0.8153574 0.8323208 0.8389675 0.8577609 0.8594362 #>  [807,] 0.7684753 0.8346687 0.8795495 1.0408123 1.1483287 1.1543869 1.1599364 #>  [808,] 0.2968286 0.3314480 0.4329077 0.5146361 0.5283124 0.5300850 0.5456632 #>  [809,] 0.4221216 0.5531836 0.6128037 0.6436051 0.6501876 0.6840434 0.7086942 #>  [810,] 0.2964075 0.4991625 0.5263642 0.5346823 0.5683967 0.5709637 0.5766111 #>  [811,] 1.4430829 1.5639943 1.6597366 1.7818555 1.8231939 1.9593317 1.9679407 #>  [812,] 0.2418757 0.4111124 0.4447512 0.4634079 0.4650908 0.4714862 0.5277916 #>  [813,] 0.3891360 0.4216764 0.4426562 0.4756207 0.5666351 0.5790875 0.7137021 #>  [814,] 0.1187200 0.5719358 0.5781172 0.5802699 0.7006235 0.7798478 0.8014270 #>  [815,] 0.5632860 0.5892782 0.5984252 0.6249685 0.7627266 0.8395838 0.9584684 #>  [816,] 0.4142641 0.4252007 0.5950293 0.6249685 0.6315850 0.6777434 0.6861264 #>  [817,] 0.4273752 0.5918147 0.6079415 0.7148621 0.7668665 0.7945950 0.7992446 #>  [818,] 0.5266322 0.5409184 0.5447581 0.7201094 0.7249749 0.8321201 0.8450288 #>  [819,] 0.1651655 0.3830085 0.4978757 0.5108991 0.7066998 0.7107323 0.7539422 #>  [820,] 0.3479906 0.5103696 0.5223843 0.5922281 0.5972120 0.6258800 0.6425818 #>  [821,] 0.4876501 0.5254439 0.5312998 0.5518994 0.5664114 0.5744486 0.5992084 #>  [822,] 0.6552028 0.7268458 0.7654792 0.7679514 1.0087882 1.0100751 1.0131296 #>  [823,] 0.3576810 0.4137393 0.4147510 0.4729272 0.4896213 0.4968138 0.4990324 #>  [824,] 0.3523615 0.5535944 0.8237499 0.8823479 0.9626860 0.9687732 0.9788511 #>  [825,] 0.4264655 0.5636996 0.5878170 0.6022947 0.6773532 0.6921613 0.7268728 #>  [826,] 0.8151470 0.8365337 0.8863482 0.8896611 0.8903289 0.8946866 0.9039573 #>  [827,] 0.5960792 0.6872233 0.7199291 0.7965612 0.9002694 0.9203455 0.9535960 #>  [828,] 0.3460436 0.3877822 0.4186599 0.4441402 0.4498533 0.4597046 0.4914695 #>  [829,] 0.4063918 0.6992606 0.7000541 0.7891154 0.8556536 0.8623998 0.8880817 #>  [830,] 1.0364193 1.0784009 1.1949873 1.2324628 1.2338937 1.3394307 1.3518238 #>  [831,] 0.1934533 0.3657831 0.4399102 0.4610966 0.4793509 0.6081113 0.6293689 #>  [832,] 0.3646918 0.4877631 0.5869749 0.6005525 0.6686806 0.6848833 0.7029507 #>  [833,] 0.3560739 0.3988786 0.4902054 0.5264651 0.5306110 0.5668559 0.5722037 #>  [834,] 0.3412836 0.5457870 0.5581709 0.6053898 0.6518997 0.6899134 0.6926778 #>  [835,] 0.2082834 0.3440772 0.4311462 0.4508542 0.5146686 0.5326792 0.5569057 #>  [836,] 0.6389701 0.8414542 0.8419464 0.8639922 0.8790308 0.9033618 0.9493739 #>  [837,] 0.6008200 0.6068573 0.7234618 0.7602003 0.8517025 0.8560541 0.8611004 #>  [838,] 0.5720592 0.5973697 0.6021488 0.6631985 0.6848833 0.7089533 0.7158671 #>  [839,] 0.7397679 0.7715351 0.8403020 0.8408732 0.8876284 0.9128442 0.9630471 #>  [840,] 0.3380681 0.3663335 0.5274485 0.6861658 0.7972831 0.8323208 0.8946486 #>  [841,] 1.1723481 1.2739136 1.2859280 1.5102848 1.5843656 1.6148905 1.6325115 #>  [842,] 0.3507359 0.5028732 0.5203032 0.5317518 0.5325784 0.5526851 0.5827148 #>  [843,] 0.1661748 0.2770693 0.3234911 0.3528784 0.4032344 0.4199082 0.4777697 #>  [844,] 0.3525993 0.3622363 0.4269203 0.4438148 0.4624414 0.4947823 0.5242326 #>  [845,] 0.5100968 0.5611779 0.6205701 0.7150422 0.7479381 0.7562406 0.7928603 #>  [846,] 0.2542035 0.4000019 0.4186599 0.4728637 0.4752144 0.4901092 0.5852583 #>  [847,] 0.4677738 0.4862446 0.6907489 0.7170471 0.7171517 0.7441750 0.7489806 #>  [848,] 0.7918091 0.9931687 1.0718600 1.0961845 1.1470470 1.2271247 1.3150192 #>  [849,] 0.3958788 0.4725953 0.5989517 0.6369023 0.6714055 0.7068264 0.7509239 #>  [850,] 0.2826386 0.2828474 0.3480423 0.3579435 0.4793509 0.5296428 0.5325784 #>  [851,] 0.4821820 0.5164729 0.5625081 0.5746841 0.6232906 0.6769390 0.6981988 #>  [852,] 0.6076193 0.6870243 0.7168527 0.7654104 0.7966990 0.8943879 0.9221830 #>  [853,] 0.4798825 0.6084392 0.6631138 0.7093125 0.7383932 0.7384591 0.7449038 #>  [854,] 0.3741903 0.4240675 0.4459951 0.5400816 0.5509879 0.5768466 0.5880997 #>  [855,] 0.3262306 0.3594790 0.3723088 0.4429249 0.4617430 0.5306110 0.6016668 #>  [856,] 0.3048060 0.4870719 0.5353910 0.5459140 0.5553601 0.5590788 0.5739432 #>  [857,] 0.9328442 1.2643859 1.2900163 1.3498885 1.3560096 1.4243103 1.5087986 #>  [858,] 0.6423436 0.9690906 0.9759546 0.9898572 1.0987175 1.1196786 1.1573668 #>  [859,] 0.3490248 0.5459180 0.6576298 0.7623392 0.7653864 0.8216612 0.9006436 #>  [860,] 0.1953774 0.3116718 0.3549851 0.3996243 0.4032975 0.4213168 0.4625465 #>  [861,] 0.4582246 0.4805031 0.4989773 0.5004484 0.5137121 0.5309498 0.5415113 #>  [862,] 0.4110140 0.4718867 0.5269978 0.5629237 0.6119439 0.6157582 0.6275792 #>  [863,] 0.4714971 0.4976059 0.6076193 0.7198927 0.7664095 0.8194496 0.8641328 #>  [864,] 0.3712501 0.4489516 0.5045733 0.5379842 0.6391951 0.8653682 0.8837182 #>  [865,] 0.4248042 0.4600136 0.4734227 0.5054087 0.5088882 0.5351272 0.5403443 #>  [866,] 0.1932593 0.4635230 0.4953386 0.4966807 0.5100331 0.5685410 0.5717266 #>  [867,] 0.3473584 0.8027134 0.8098294 0.8445276 0.8764046 0.8908009 0.9868386 #>  [868,] 0.4179199 0.4489335 0.4706863 0.4920971 0.5183575 0.5528294 0.5564092 #>  [869,] 0.6078509 0.6420198 0.7377297 0.7390804 0.7526442 0.7678280 0.7863525 #>  [870,] 0.4423028 0.4730472 0.6147952 0.7607260 0.7783258 0.8108566 0.8230818 #>  [871,] 0.3385360 0.4149599 0.4367402 0.4694029 0.5056075 0.5290774 0.5490788 #>  [872,] 0.4254334 0.5140837 0.6412465 0.6982536 0.7386538 0.7726607 0.7747132 #>  [873,] 0.6709691 0.7204058 0.8218344 0.8984057 0.9781919 1.0759482 1.1359350 #>  [874,] 0.5357262 0.6389733 0.7011926 0.7033831 0.7311249 0.7599898 0.7881753 #>  [875,] 0.7027257 0.7520675 0.7626788 0.8190515 0.8201765 0.8252254 0.8373043 #>  [876,] 0.1562207 0.3759315 0.5427011 0.5854135 0.6066842 0.6152510 0.6707514 #>  [877,] 0.4661805 0.4670264 0.4670998 0.5921126 0.6588544 0.6992606 0.7010640 #>  [878,] 0.6921075 0.8578888 0.9427622 1.0078016 1.0413165 1.1357842 1.1358836 #>  [879,] 0.3838237 0.4077905 0.5204695 0.6831773 0.7813246 0.7950072 0.8406355 #>  [880,] 0.2341277 0.2423027 0.3197195 0.3440772 0.4931464 0.5043516 0.5128722 #>  [881,] 0.7359959 0.8355886 0.9025183 0.9931687 1.0133915 1.0460986 1.1081897 #>  [882,] 0.2906610 0.4399102 0.4591539 0.5296428 0.5537570 0.5993244 0.6061702 #>  [883,] 0.3392456 0.3443745 0.4573359 0.5878891 0.5981557 0.6136787 0.7607613 #>  [884,] 0.3136374 0.4075719 0.5159382 0.5176477 0.5984943 0.6401392 0.7352581 #>  [885,] 0.4856305 0.5886036 0.6327116 0.7664067 0.7710483 0.7829454 0.7865100 #>  [886,] 0.3803468 0.5590788 0.5842682 0.5957621 0.6220457 0.6601939 0.6860799 #>  [887,] 0.4120308 0.4481043 0.5847776 0.5853963 0.6997428 0.7268458 0.7467714 #>  [888,] 0.3627460 0.4088412 0.4459951 0.4862602 0.4989773 0.5416898 0.5596547 #>  [889,] 0.6194891 0.6680457 0.7325382 0.7523707 0.7628136 0.7712652 0.7740743 #>  [890,] 0.7058884 0.9770375 1.0127975 1.1088919 1.1412312 1.1956048 1.2755375 #>  [891,] 0.2852912 0.4618406 0.8294419 0.8662724 0.8841050 0.9606742 1.0200280 #>  [892,] 0.2256609 0.4574893 0.5007673 0.5372611 0.6774032 0.6859225 0.6998594 #>  [893,] 0.3135979 0.5984661 0.6366850 0.6682023 0.6793030 0.7424838 0.7441503 #>  [894,] 0.3939581 0.3979466 0.4795558 0.5670528 0.5681036 0.6351726 0.6622661 #>  [895,] 0.6178595 0.6357125 0.6638285 0.7536568 0.7538339 0.7665195 0.7796470 #>  [896,] 0.2608155 0.4821820 0.5092710 0.5108190 0.5738560 0.5876458 0.5934524 #>  [897,] 0.7286447 0.7618607 0.7635971 0.7851140 0.8006872 0.9038126 0.9477234 #>  [898,] 0.7402658 0.7654792 0.9159073 0.9191140 0.9622567 0.9720436 0.9941509 #>  [899,] 0.7838107 0.7851140 1.1033772 1.1196786 1.1535300 1.1885392 1.2330567 #>  [900,] 0.2648473 0.2688583 0.5317518 0.5489528 0.5823803 0.5854079 0.6492618 #>  [901,] 0.3768092 0.5185980 0.5348929 0.5484170 0.5550191 0.5823803 0.5854135 #>  [902,] 0.8403020 1.1326017 1.2165585 1.2315382 1.2480356 1.2973218 1.2985555 #>  [903,] 0.4374199 0.4483919 0.4898979 0.5176784 0.5229341 0.5520382 0.5883220 #>  [904,] 0.2367144 0.4220651 0.4877424 0.5557974 0.5718556 0.6014663 0.6132944 #>  [905,] 0.4708821 0.5625374 0.5984220 0.6054718 0.7814568 0.7858894 0.7890535 #>  [906,] 0.2049212 0.4779216 0.6008200 0.6453349 0.6739491 0.6844584 0.7062261 #>  [907,] 0.3480423 0.3658048 0.4591539 0.4714874 0.5028732 0.5480396 0.6501762 #>  [908,] 0.4656898 0.5616864 0.6956346 0.8379130 0.8538291 0.8876645 0.8988754 #>  [909,] 0.7000541 0.9410483 0.9536978 1.1332502 1.1817626 1.2768826 1.3848315 #>  [910,] 0.2108323 0.2172728 0.2476184 0.3414602 0.3575733 0.4788982 0.5240956 #>  [911,] 0.5387650 0.9143205 1.0232513 1.0578030 1.0593501 1.1137644 1.1509879 #>  [912,] 0.4500400 0.4776714 0.4965287 0.5992017 0.6730059 0.7213751 0.7238385 #>  [913,] 0.5027766 0.7968257 1.0484326 1.0617974 1.1476022 1.2243764 1.3378182 #>  [914,] 0.3957851 0.5743737 0.7533456 0.8095374 0.8354571 1.0301313 1.0780373 #>  [915,] 0.4528924 0.8091516 1.2002101 1.2202713 1.2206850 1.2481223 1.4322009 #>  [916,] 0.9019724 0.9328442 1.0040365 1.0267632 1.0443108 1.0626389 1.0750187 #>  [917,] 0.1488483 0.5412091 0.5987335 0.6195019 0.6397567 0.7273680 0.7390804 #>  [918,] 0.4088412 0.4140413 0.4225446 0.4476108 0.5144869 0.5611208 0.5768466 #>  [919,] 0.2730850 0.3414602 0.4352025 0.4485537 0.4567191 0.4991625 0.5099310 #>  [920,] 0.2740490 0.3686939 0.6152322 0.6321961 0.6718393 0.7048510 0.7153778 #>  [921,] 0.5066904 0.5777316 0.5959538 0.5991529 0.6022620 0.6866513 0.7119550 #>  [922,] 0.2082834 0.4473199 0.4564972 0.4931464 0.5179626 0.5211590 0.5379922 #>  [923,] 0.4321481 0.5282708 0.7462824 0.7571918 0.9469817 0.9507325 0.9656975 #>  [924,] 0.2635167 0.2940947 0.4039046 0.4070041 0.4277468 0.4734227 0.5009093 #>  [925,] 0.3091076 0.3697606 0.3738929 0.5294837 0.5456632 0.6101464 0.6303842 #>  [926,] 0.3846234 0.5016341 0.5031542 0.5775476 0.5788145 0.6258800 0.6362472 #>  [927,] 0.3655743 0.4921198 0.4940795 0.6984037 0.7097154 0.7110734 0.7520671 #>  [928,] 0.5408530 0.5636996 0.5650919 0.5984220 0.6281196 0.6956346 0.7749533 #>  [929,] 0.4180143 0.4252894 0.5459180 0.6716705 0.7032869 0.7463201 0.8261301 #>  [930,] 0.2647668 0.2688583 0.5544345 0.5827148 0.5973652 0.6457990 0.6573711 #>  [931,] 0.3591845 0.3849193 0.5135232 0.5156909 0.6500806 0.6518997 0.6593860 #>  [932,] 0.3252203 0.5322270 0.5343681 0.6554045 0.6556327 0.6803026 0.6907834 #>  [933,] 0.5355846 0.5445328 0.5958351 0.6003458 0.6082266 0.6465565 0.7298527 #>  [934,] 0.4491954 0.4865852 0.4955710 0.5177581 0.5370520 0.5640192 0.5642318 #>  [935,] 0.7452708 0.8241127 0.8271293 0.8666045 0.9011810 0.9166019 0.9249962 #>  [936,] 0.4768777 0.6365188 0.6480952 0.7433205 0.7434022 0.7865100 0.8203693 #>  [937,] 0.1776247 0.3192190 0.4147225 0.4172823 0.4631905 0.5416005 0.5578122 #>  [938,] 0.4950221 0.4967045 0.5518994 0.5714734 0.6478410 0.6531894 0.6737772 #>  [939,] 0.3494974 0.4088249 0.4624376 0.5024543 0.5299938 0.5522057 0.6276569 #>  [940,] 0.2476184 0.3364444 0.3380548 0.3734575 0.4463587 0.4485537 0.5035883 #>  [941,] 0.7422461 0.8046578 0.8733753 0.9294765 0.9433725 0.9532302 0.9625663 #>  [942,] 0.4077000 0.9138644 0.9322573 0.9372015 1.0165090 1.0804964 1.1055303 #>  [943,] 0.9363303 1.2022653 1.3764514 1.4368235 1.4424835 1.6256225 1.6408988 #>  [944,] 0.8921676 1.0265351 1.0501641 1.1141288 1.1648565 1.1664917 1.3031762 #>  [945,] 0.6030888 1.1991610 1.2934591 1.3641554 1.4723308 1.5168862 1.5441707 #>  [946,] 0.3846234 0.5874982 0.6614400 0.6869085 0.7170544 0.7181918 0.7249749 #>  [947,] 0.4576199 0.6855146 0.6876937 0.6900771 0.6980601 0.7075758 0.7263555 #>  [948,] 0.4889279 0.5451681 0.5452864 0.5867643 0.7962904 0.8507786 0.8801716 #>  [949,] 0.9270294 1.0271703 1.0358002 1.0563854 1.1039800 1.2714800 1.2919853 #>  [950,] 0.3391007 0.5535944 0.6005525 0.6020740 0.6186786 0.7276160 0.7530470 #>  [951,] 0.4550436 0.4877498 0.5651305 0.7312991 0.8652395 0.8996759 0.9891598 #>  [952,] 0.9184242 0.9420101 0.9675278 1.1312732 1.1672580 1.1953645 1.2139369 #>  [953,] 0.4631905 0.5586949 0.5634343 0.5669529 0.5698936 0.6055889 0.6056172 #>  [954,] 0.3675840 0.5778469 0.6363185 0.6375565 0.7156318 0.7517326 0.7583830 #>  [955,] 0.7626853 0.7918121 0.8156145 0.8441204 0.8696059 0.8895428 0.9054890 #>  [956,] 0.3317955 0.4318514 0.4426562 0.5495108 0.6883533 0.6886554 0.6960617 #>  [957,] 0.2434542 0.3568532 0.3589255 0.3756506 0.4598874 0.4765855 0.5142300 #>  [958,] 1.1027954 1.1540448 1.2826915 1.3537649 1.4373801 1.4553693 1.4567940 #>  [959,] 0.2019997 0.2687605 0.3867787 0.4356739 0.4714729 0.4791898 0.5140850 #>  [960,] 0.6778923 0.7488408 0.7980990 0.8320487 0.8898546 0.9461470 1.0419349 #>  [961,] 0.2779016 0.3688013 0.4598874 0.5871952 0.5961672 0.6125294 0.6980269 #>  [962,] 0.3503878 0.4334675 0.4974309 0.5726424 0.5935936 0.6052147 0.6308153 #>  [963,] 0.2832242 0.3015309 0.7527319 0.8098294 0.8619861 0.8695598 0.9093853 #>  [964,] 0.6713251 0.7175342 0.7870953 0.7903953 0.7983143 0.8141089 0.8384780 #>  [965,] 0.3560451 0.5280187 0.7596671 0.8689665 0.8893250 1.0073694 1.0539816 #>  [966,] 0.3888783 0.4651329 0.7112550 0.8984057 0.9810554 0.9916602 1.0871188 #>  [967,] 0.5866958 0.6050153 0.8383481 0.8574675 0.8732621 0.9370573 0.9380190 #>  [968,] 0.2624281 0.7225121 0.7674967 0.9331377 1.0649352 1.0770849 1.1736914 #>  [969,] 0.3346100 0.3885562 0.4244104 0.4825222 0.4892979 0.5516275 0.5558636 #>  [970,] 0.5016341 0.5216974 0.5567558 0.5688078 0.5781172 0.5972120 0.6327567 #>  [971,] 0.7751978 0.8355886 0.8981554 1.1068239 1.1368996 1.1772937 1.1859050 #>  [972,] 0.4991595 0.5103696 0.5595583 0.6205120 0.6432679 0.6472021 0.6644596 #>  [973,] 1.0784009 1.1382701 1.3353965 1.3638968 1.5950733 1.7641286 1.8064037 #>  [974,] 0.5296051 0.6521091 0.8392407 0.9627313 1.0225057 1.0484257 1.0606475 #>  [975,] 0.4877631 0.5002661 0.5455041 0.5540344 0.5950293 0.7050775 0.7336718 #>  [976,] 0.1989312 0.3549687 0.4251477 0.4404993 0.5387486 0.5681036 0.6168672 #>  [977,] 0.7682976 0.7934218 0.8123276 0.8776720 0.9873500 1.0460588 1.0504180 #>  [978,] 0.5768636 0.6144628 0.6697896 0.7377922 0.7728753 0.8295657 0.8611004 #>  [979,] 0.3316360 0.7222852 0.7234272 0.7317674 0.8312049 0.8423295 0.9038186 #>  [980,] 0.2979887 0.6232488 0.6535505 0.6647078 0.7023432 0.7431937 0.7977683 #>  [981,] 0.4858478 0.5561368 0.6997428 0.7857822 0.8424101 0.8616263 0.8781826 #>  [982,] 0.3655743 0.6389701 0.6701354 0.7963734 0.8020708 0.8124181 0.8284629 #>  [983,] 0.4293575 0.5778408 0.6580526 0.7211943 0.7922368 0.8021067 0.8928748 #>  [984,] 0.8959375 0.9953464 1.0504788 1.1002434 1.1397803 1.1963781 1.2195543 #>  [985,] 0.2647668 0.2648473 0.4059566 0.5142527 0.5550191 0.7212361 0.7349588 #>  [986,] 0.5348919 0.5719358 0.5865973 0.6307100 0.6441873 0.7208185 0.7472909 #>  [987,] 0.1733556 0.2907175 0.2961382 0.3197195 0.5560398 0.5891690 0.6082143 #>  [988,] 0.4376309 0.8380772 0.8818369 1.0082612 1.0358311 1.0813842 1.1375504 #>  [989,] 0.3306879 0.6417659 0.7281972 0.8268012 0.8360010 0.8411755 0.8741656 #>  [990,] 0.6170588 0.7574865 0.9809870 1.0006884 1.0423808 1.0427151 1.0539816 #>  [991,] 0.3316360 0.6234002 0.6532922 0.7073199 0.8692849 0.8797816 0.8854581 #>  [992,] 0.3739315 0.4592307 0.4657178 0.5283699 0.5637695 0.5790335 0.5860747 #>  [993,] 0.3602671 0.4430401 0.4971902 0.6166141 0.6490438 0.6797722 0.7125341 #>  [994,] 0.5594920 0.5825263 0.5878891 0.5977456 0.5980988 0.6165963 0.6596924 #>  [995,] 0.6566094 0.7464420 0.7760351 1.0296851 1.0750187 1.1042244 1.1714118 #>  [996,] 0.3450018 0.5056075 0.5066424 0.5884740 0.6456974 0.6623339 0.6850499 #>  [997,] 0.5299029 0.5351830 0.5454020 0.5586099 0.5986001 0.7375044 0.7432020 #>  [998,] 0.3377847 0.5647841 0.6291535 0.7048666 0.8607814 0.8920908 0.9170049 #>  [999,] 0.5719669 0.7533456 0.9498992 1.2068123 1.3348159 1.3482400 1.4014283 #> [1000,] 0.5289744 0.8392407 0.9346027 0.9480988 1.0188644 1.0248224 1.1102597 #>              [,8]      [,9]     [,10] #>    [1,] 0.7434216 0.7596670 0.7671926 #>    [2,] 1.7020443 1.7178210 1.7214627 #>    [3,] 1.2706638 1.2912759 1.3000783 #>    [4,] 1.2047836 1.2770600 1.3083843 #>    [5,] 0.8583783 0.8754352 0.9063192 #>    [6,] 0.4909769 0.5298915 0.5306511 #>    [7,] 0.6372320 0.6494058 0.6495185 #>    [8,] 1.3166103 1.3354539 1.4007135 #>    [9,] 0.5955381 0.6493064 0.6565283 #>   [10,] 0.7779960 0.7879815 0.8183824 #>   [11,] 0.6494720 0.6984037 0.7040535 #>   [12,] 0.8887481 0.9334851 0.9346027 #>   [13,] 1.3756840 1.5769264 1.5929428 #>   [14,] 1.3638968 1.4988747 1.5629635 #>   [15,] 0.8004971 0.8201906 0.8238268 #>   [16,] 0.6065686 0.6162420 0.6321092 #>   [17,] 0.8782047 0.9741944 0.9998443 #>   [18,] 0.7520671 0.8292156 0.8510773 #>   [19,] 1.0912378 1.1238874 1.1989739 #>   [20,] 0.8866581 0.9092137 0.9689659 #>   [21,] 0.4669314 0.4955710 0.4968138 #>   [22,] 0.6042484 0.6145992 0.6155049 #>   [23,] 0.6734509 0.7126226 0.7434489 #>   [24,] 0.7805089 0.7957037 0.8052666 #>   [25,] 0.5668522 0.5872185 0.5989430 #>   [26,] 1.4281955 1.4778189 1.4953407 #>   [27,] 0.5468445 0.5964673 0.6175833 #>   [28,] 0.6400903 0.6537328 0.7235630 #>   [29,] 0.5992161 0.6164281 0.6297541 #>   [30,] 1.1809654 1.2603380 1.2793340 #>   [31,] 0.9484685 0.9683863 0.9749206 #>   [32,] 0.7551996 0.7944516 0.8247849 #>   [33,] 0.6922518 0.7127361 0.7204260 #>   [34,] 0.7511491 0.7810050 0.8239607 #>   [35,] 1.2246464 1.2436326 1.2457144 #>   [36,] 1.0772145 1.1064280 1.1392340 #>   [37,] 0.9591347 0.9626242 0.9801220 #>   [38,] 0.9376761 0.9646136 0.9691210 #>   [39,] 0.9581183 0.9660669 1.0063955 #>   [40,] 0.7846282 0.9341321 0.9383822 #>   [41,] 0.8972879 0.8986641 0.9293509 #>   [42,] 1.5313073 1.5525666 1.5533366 #>   [43,] 0.7526045 0.7669591 0.8020559 #>   [44,] 1.8080988 1.8082759 1.8466105 #>   [45,] 1.1488090 1.1554469 1.2103579 #>   [46,] 0.5009725 0.5070854 0.5222120 #>   [47,] 0.7105528 0.7284036 0.7297464 #>   [48,] 0.6696179 0.6700029 0.7085393 #>   [49,] 0.7965093 0.8049078 0.8687637 #>   [50,] 1.1406988 1.1439210 1.1586342 #>   [51,] 1.2014735 1.2577587 1.3160990 #>   [52,] 1.5405516 1.5432970 1.5508415 #>   [53,] 0.7859649 0.7994062 0.8337541 #>   [54,] 0.8380305 0.8410716 0.8592470 #>   [55,] 0.6812543 0.6893551 0.7408492 #>   [56,] 0.5749347 0.5814752 0.6102276 #>   [57,] 0.6200803 0.6279788 0.6405829 #>   [58,] 0.6791956 0.6886143 0.6950119 #>   [59,] 0.6425818 0.6710265 0.6816124 #>   [60,] 0.6554735 0.6579317 0.6655083 #>   [61,] 0.6854768 0.6974378 0.7754061 #>   [62,] 1.4286021 1.5211227 1.5288875 #>   [63,] 0.8805021 0.9340406 0.9351408 #>   [64,] 1.2962635 1.3154338 1.3414285 #>   [65,] 1.2482842 1.2702938 1.2942830 #>   [66,] 0.8199498 0.8239750 0.8437787 #>   [67,] 0.5976755 0.6216103 0.6236231 #>   [68,] 1.4477742 1.4620167 1.5115979 #>   [69,] 0.6141202 0.6200892 0.6223950 #>   [70,] 1.0770433 1.1181882 1.1621741 #>   [71,] 0.7672398 0.8091297 0.8305265 #>   [72,] 1.3391402 1.3413004 1.3452465 #>   [73,] 1.1358836 1.1483814 1.2016451 #>   [74,] 1.1179619 1.1300386 1.1326017 #>   [75,] 1.2173065 1.2246895 1.2476581 #>   [76,] 0.7132508 0.7266438 0.7900773 #>   [77,] 0.8179002 0.8380305 0.8900473 #>   [78,] 0.7570327 0.7701447 0.7877226 #>   [79,] 0.6792970 0.6916732 0.6944603 #>   [80,] 1.2076025 1.2345942 1.2666597 #>   [81,] 0.7592599 0.7600099 0.7639344 #>   [82,] 0.5119189 0.5171115 0.5224581 #>   [83,] 1.0904585 1.1801523 1.1859050 #>   [84,] 0.9367746 0.9393388 0.9530663 #>   [85,] 0.8835700 0.8841980 0.9536665 #>   [86,] 0.7814303 0.8104670 0.8157093 #>   [87,] 0.7263928 0.7713164 0.7719086 #>   [88,] 0.4649544 0.4904181 0.5066604 #>   [89,] 0.9818225 0.9865011 1.0674021 #>   [90,] 0.7684780 0.7854660 0.8445460 #>   [91,] 0.6406668 0.6414002 0.6563408 #>   [92,] 0.7303813 0.7312991 0.7456014 #>   [93,] 1.0036673 1.0121571 1.0163504 #>   [94,] 0.6630428 0.6640640 0.6836144 #>   [95,] 0.9553068 0.9687732 0.9818268 #>   [96,] 0.6918798 0.7001474 0.7140661 #>   [97,] 0.6313678 0.6333102 0.6356206 #>   [98,] 0.8165311 0.8177651 0.8361406 #>   [99,] 0.9631134 0.9828382 1.0139480 #>  [100,] 0.7511208 0.7611078 0.7746408 #>  [101,] 0.6665507 0.6691694 0.7198377 #>  [102,] 0.9450439 0.9626230 0.9674294 #>  [103,] 1.0779042 1.1146790 1.1728482 #>  [104,] 0.9051545 0.9302076 0.9368965 #>  [105,] 0.9588261 1.0665294 1.0887421 #>  [106,] 0.5146361 0.5413036 0.5446711 #>  [107,] 0.5507789 0.5533013 0.5715573 #>  [108,] 0.9178295 0.9202091 0.9244167 #>  [109,] 0.5296710 0.5458251 0.5465198 #>  [110,] 0.8114043 0.8141120 0.8454686 #>  [111,] 1.0782771 1.0902754 1.0982851 #>  [112,] 0.5380783 0.5440449 0.5477005 #>  [113,] 1.5207104 1.5564544 1.5842212 #>  [114,] 0.9380190 0.9446005 0.9904881 #>  [115,] 0.7362420 0.7460591 0.7847691 #>  [116,] 1.6765715 1.7337443 1.8173599 #>  [117,] 0.5838917 0.5888754 0.6067611 #>  [118,] 0.8524284 0.8578438 0.8966037 #>  [119,] 0.5687483 0.5996100 0.6102215 #>  [120,] 0.6265470 0.6446015 0.6691647 #>  [121,] 0.7623581 0.7717730 0.8148932 #>  [122,] 0.7997934 0.8350069 0.8470916 #>  [123,] 0.8585949 0.8639145 0.8779867 #>  [124,] 0.9963571 1.0011837 1.0642982 #>  [125,] 0.6867727 0.6912649 0.7262831 #>  [126,] 0.6162752 0.6311249 0.6357795 #>  [127,] 1.1558495 1.1843277 1.2593355 #>  [128,] 1.2205680 1.3129349 1.3853154 #>  [129,] 0.9804234 0.9842578 1.0288320 #>  [130,] 0.6619513 0.6621456 0.6714055 #>  [131,] 0.6546332 0.7200037 0.7571881 #>  [132,] 0.8127514 0.8270644 0.9133761 #>  [133,] 0.7437919 0.7559358 0.7633203 #>  [134,] 0.6423636 0.6682630 0.6707475 #>  [135,] 0.7219952 0.7684780 0.7922222 #>  [136,] 1.3796050 1.3975310 1.6193796 #>  [137,] 0.8508260 0.8536751 0.9237976 #>  [138,] 0.6371374 0.6856328 0.7042594 #>  [139,] 0.7281047 0.7334966 0.7358509 #>  [140,] 0.8401738 0.8427945 0.8552324 #>  [141,] 0.5240384 0.5634798 0.5779758 #>  [142,] 1.1825261 1.2066972 1.2527195 #>  [143,] 1.4607727 1.4951802 1.4984975 #>  [144,] 0.8549042 0.8619039 0.9536978 #>  [145,] 0.6172936 0.6209641 0.6306031 #>  [146,] 0.8885583 0.9684827 0.9687749 #>  [147,] 0.6593860 0.6642055 0.6655742 #>  [148,] 1.0040433 1.0559073 1.0917612 #>  [149,] 0.5994893 0.6051244 0.6152510 #>  [150,] 1.3906291 1.3945344 1.4691625 #>  [151,] 0.8441204 0.8583676 0.8838908 #>  [152,] 0.7901190 0.8057423 0.8295657 #>  [153,] 1.4372354 1.4550081 1.4567940 #>  [154,] 1.1003546 1.1672580 1.2275275 #>  [155,] 0.8592090 0.9333937 0.9419339 #>  [156,] 0.8333015 0.8481842 0.8485174 #>  [157,] 1.0470206 1.0514150 1.1504832 #>  [158,] 0.6510347 0.7112624 0.7215028 #>  [159,] 0.7104602 0.7544498 0.8760715 #>  [160,] 0.7181823 0.7234618 0.7409671 #>  [161,] 0.7146996 0.7594077 0.8183602 #>  [162,] 1.2073862 1.2377183 1.2401692 #>  [163,] 1.0021592 1.0040433 1.0103239 #>  [164,] 0.9989091 1.0027718 1.0043293 #>  [165,] 0.5911656 0.6085218 0.6114245 #>  [166,] 1.6186345 1.6841220 1.7115073 #>  [167,] 0.6318224 0.6352149 0.6610750 #>  [168,] 0.8950190 0.9376695 0.9995469 #>  [169,] 0.8078641 0.8330062 0.8379130 #>  [170,] 1.3470844 1.3643685 1.3645146 #>  [171,] 1.2355365 1.2942572 1.3142352 #>  [172,] 0.7512758 0.7760748 0.7862200 #>  [173,] 0.9119281 0.9306064 0.9458968 #>  [174,] 0.6793244 0.6871549 0.7325382 #>  [175,] 0.7559137 0.7653319 0.7703317 #>  [176,] 1.1079501 1.1085321 1.1089881 #>  [177,] 0.6732713 0.6812543 0.7024622 #>  [178,] 0.5240384 0.5448521 0.5562612 #>  [179,] 0.6625665 0.7006373 0.7007787 #>  [180,] 0.5165296 0.5346823 0.5664759 #>  [181,] 1.1621069 1.1621305 1.1737187 #>  [182,] 1.8255467 1.8363200 1.8446870 #>  [183,] 0.9556650 1.0018146 1.0252991 #>  [184,] 0.9948565 0.9994385 1.0065922 #>  [185,] 0.5714060 0.5825527 0.6193600 #>  [186,] 0.7595319 0.7664067 0.7808140 #>  [187,] 0.9534345 0.9671340 1.0056282 #>  [188,] 0.5398527 0.5598599 0.5605009 #>  [189,] 0.7070549 0.7477569 0.7785340 #>  [190,] 0.7223955 0.7345533 0.7373843 #>  [191,] 0.9623815 1.0008317 1.0121407 #>  [192,] 0.6145992 0.6332575 0.6333102 #>  [193,] 0.6770855 0.7335970 0.7946235 #>  [194,] 0.5522014 0.5535336 0.5605009 #>  [195,] 0.6482861 0.6545609 0.6642103 #>  [196,] 0.6765619 0.6926137 0.6937128 #>  [197,] 0.6023265 0.6027293 0.6278778 #>  [198,] 0.7124791 0.7589222 0.7623896 #>  [199,] 0.8973015 0.9248408 0.9321723 #>  [200,] 1.5808366 1.5812924 1.6256225 #>  [201,] 0.5765050 0.5880997 0.6229076 #>  [202,] 0.8421779 0.8426266 0.8560223 #>  [203,] 0.5429092 0.5610128 0.5825527 #>  [204,] 0.7302881 0.7610821 0.7641802 #>  [205,] 0.5941824 0.5961991 0.6020191 #>  [206,] 0.9210044 0.9645447 0.9694094 #>  [207,] 0.5883197 0.5911508 0.6055889 #>  [208,] 0.6571458 0.6866401 0.6886143 #>  [209,] 0.5959538 0.6130087 0.6365909 #>  [210,] 0.5647567 0.6152373 0.6228561 #>  [211,] 1.1021078 1.1052013 1.1372962 #>  [212,] 1.4084323 1.4086521 1.4488346 #>  [213,] 0.5203032 0.5366731 0.5637209 #>  [214,] 1.2013898 1.2457755 1.2800357 #>  [215,] 1.0317477 1.0502116 1.0535082 #>  [216,] 0.7926254 0.8500679 0.8764672 #>  [217,] 0.6437483 0.6501200 0.6555746 #>  [218,] 0.9766627 0.9969409 1.0036135 #>  [219,] 0.5595265 0.5724630 0.5911508 #>  [220,] 0.7289076 0.7361034 0.7623896 #>  [221,] 0.8312067 0.8317613 0.8479697 #>  [222,] 0.9193574 0.9267279 0.9362510 #>  [223,] 1.0307449 1.0406951 1.0989174 #>  [224,] 0.6246724 0.6399951 0.6588543 #>  [225,] 0.9600888 0.9815815 0.9898338 #>  [226,] 0.8091852 0.8365198 0.8716231 #>  [227,] 0.9208669 0.9663858 1.0306501 #>  [228,] 0.5446001 0.6097622 0.6152761 #>  [229,] 0.8410716 0.8577524 0.8586549 #>  [230,] 0.8680538 0.8716807 0.8851251 #>  [231,] 0.8609337 0.8744065 0.8867172 #>  [232,] 1.4169838 1.5153627 1.5463913 #>  [233,] 0.8068856 0.8477098 0.8757431 #>  [234,] 0.6159256 0.6688427 0.6698598 #>  [235,] 1.3775032 1.3875096 1.4573858 #>  [236,] 0.7392840 0.7720738 0.7789781 #>  [237,] 0.6881962 0.7004784 0.7548418 #>  [238,] 0.9117736 0.9857004 1.0403952 #>  [239,] 0.8423427 0.8629952 0.8655224 #>  [240,] 0.7220772 0.7791216 0.8602553 #>  [241,] 1.0946693 1.1437590 1.1801975 #>  [242,] 0.7771602 0.7811186 0.8018918 #>  [243,] 0.7661143 0.7754725 0.7813246 #>  [244,] 0.8923656 0.9234134 0.9339268 #>  [245,] 0.6202956 0.6424219 0.6576090 #>  [246,] 0.5764475 0.5765050 0.5776889 #>  [247,] 0.6121093 0.6268759 0.6279490 #>  [248,] 0.8461882 0.8557223 0.8755099 #>  [249,] 0.8350582 0.9241269 0.9269539 #>  [250,] 0.6396920 0.6994450 0.7388356 #>  [251,] 1.2268539 1.2454635 1.2542147 #>  [252,] 0.7412320 0.7528281 0.7622466 #>  [253,] 0.7126226 0.7492535 0.7516070 #>  [254,] 1.0218755 1.0268473 1.0535958 #>  [255,] 0.7275581 0.7754378 0.7970023 #>  [256,] 0.8981180 0.9120077 0.9406196 #>  [257,] 0.6992450 0.7105415 0.7166039 #>  [258,] 0.9635633 1.0317260 1.0416516 #>  [259,] 0.8904516 0.9096577 0.9178224 #>  [260,] 0.8989273 0.9035472 0.9141976 #>  [261,] 1.7795091 1.8186669 1.8597801 #>  [262,] 0.6218180 0.6864852 0.6873740 #>  [263,] 0.5350797 0.5970858 0.6002670 #>  [264,] 0.8093230 0.8166686 0.8188503 #>  [265,] 0.6090639 0.6377668 0.6399595 #>  [266,] 0.7379236 0.7830744 0.7963734 #>  [267,] 1.3551263 1.3601890 1.3772754 #>  [268,] 1.5551516 1.5693528 1.6019560 #>  [269,] 1.1447372 1.2184530 1.2277088 #>  [270,] 1.3721097 1.3729871 1.4307200 #>  [271,] 1.1835101 1.1841546 1.1961658 #>  [272,] 1.3526053 1.3580052 1.4471599 #>  [273,] 1.7565979 1.7974998 1.8005252 #>  [274,] 1.0613202 1.0749852 1.1438005 #>  [275,] 0.8021067 0.8157868 0.8267255 #>  [276,] 0.6494058 0.6633026 0.6751072 #>  [277,] 0.6291834 0.6303842 0.6436655 #>  [278,] 0.6774765 0.6906525 0.6966879 #>  [279,] 0.5480606 0.5877439 0.6319003 #>  [280,] 0.6344234 0.6345348 0.6788916 #>  [281,] 0.6160844 0.6381515 0.6406166 #>  [282,] 0.9153141 0.9247149 0.9251882 #>  [283,] 0.7107323 0.7291229 0.7632397 #>  [284,] 0.6998253 0.7189947 0.7594972 #>  [285,] 0.8206595 0.8387678 0.8424101 #>  [286,] 0.7473432 0.7994980 0.8035172 #>  [287,] 0.7260232 0.7455906 0.7518376 #>  [288,] 0.7171174 0.7254591 0.7534141 #>  [289,] 0.4664421 0.4995391 0.5093473 #>  [290,] 0.6762989 0.6951916 0.7224819 #>  [291,] 0.6429486 0.6658231 0.6779228 #>  [292,] 1.1184052 1.2007710 1.2011329 #>  [293,] 0.9688336 0.9695114 0.9720604 #>  [294,] 1.0807374 1.0831246 1.1206542 #>  [295,] 0.7677160 0.7905991 0.7936758 #>  [296,] 0.8243312 0.8671292 0.9222327 #>  [297,] 0.6718304 0.6741205 0.7278480 #>  [298,] 1.1079501 1.1277039 1.1495813 #>  [299,] 0.6223412 0.6236107 0.6267142 #>  [300,] 1.1648565 1.2054737 1.2198968 #>  [301,] 0.5522299 0.5856605 0.5886895 #>  [302,] 0.5058820 0.5154229 0.5459140 #>  [303,] 0.9499690 0.9758546 1.0219990 #>  [304,] 1.0878359 1.0962023 1.1368727 #>  [305,] 0.5698936 0.6164281 0.6416124 #>  [306,] 1.1623306 1.2047486 1.2480356 #>  [307,] 0.9812335 1.0223775 1.0420393 #>  [308,] 0.7931915 0.7997875 0.8102667 #>  [309,] 0.7033831 0.7070918 0.7127512 #>  [310,] 0.9279180 0.9419531 0.9420428 #>  [311,] 0.8429872 0.8639922 0.9406052 #>  [312,] 0.6607809 0.6622469 0.6655742 #>  [313,] 0.6869085 0.7392788 0.7443213 #>  [314,] 1.2703099 1.2800072 1.2860435 #>  [315,] 0.7036856 0.7170471 0.7244288 #>  [316,] 0.7604488 0.8092327 0.9214358 #>  [317,] 0.7603820 0.7764651 0.8421371 #>  [318,] 1.1229694 1.1392340 1.1663167 #>  [319,] 0.5865577 0.5881838 0.6014209 #>  [320,] 0.8559002 0.9019490 0.9530663 #>  [321,] 0.9261903 0.9352190 0.9420101 #>  [322,] 0.6872233 0.7456259 0.7665643 #>  [323,] 1.1934000 1.2136812 1.2208306 #>  [324,] 0.6494030 0.6706649 0.7031187 #>  [325,] 0.5748394 0.6042073 0.6052147 #>  [326,] 0.8130616 0.8954631 0.8990863 #>  [327,] 1.0337540 1.0617188 1.1702756 #>  [328,] 0.9017710 0.9020799 0.9354488 #>  [329,] 0.5933292 0.6099935 0.6269201 #>  [330,] 1.0032790 1.1392749 1.1734682 #>  [331,] 0.9572883 0.9851491 0.9879490 #>  [332,] 0.9403025 0.9457812 1.0081941 #>  [333,] 0.9169455 0.9436928 0.9582372 #>  [334,] 0.6753003 0.6837428 0.6870412 #>  [335,] 0.6324504 0.6378227 0.6750947 #>  [336,] 0.5435348 0.5528294 0.5558636 #>  [337,] 0.6949244 0.7186007 0.7337643 #>  [338,] 0.8058802 0.8657559 0.8917494 #>  [339,] 1.3690034 1.3751106 1.3827002 #>  [340,] 0.6920727 0.6929950 0.7119516 #>  [341,] 1.0078016 1.0573469 1.1799474 #>  [342,] 1.5276224 1.5624591 1.5804205 #>  [343,] 0.8645246 0.9185541 0.9294765 #>  [344,] 1.2624360 1.2734403 1.2826571 #>  [345,] 1.1361273 1.1432906 1.1593866 #>  [346,] 1.5048977 1.5135837 1.5500167 #>  [347,] 1.2349154 1.2877257 1.2926566 #>  [348,] 1.0878359 1.1558734 1.1879276 #>  [349,] 1.1088744 1.1579836 1.1620955 #>  [350,] 0.7639675 0.7668193 0.7835257 #>  [351,] 0.8484911 0.9381756 0.9579827 #>  [352,] 0.5867655 0.6382418 0.7070549 #>  [353,] 0.8500679 0.8608191 0.8848939 #>  [354,] 1.8835388 1.8909095 1.9301938 #>  [355,] 1.1217156 1.1337348 1.1578438 #>  [356,] 1.3062416 1.4339041 1.4398166 #>  [357,] 1.0687822 1.0904017 1.0928203 #>  [358,] 0.5107570 0.5110136 0.5390286 #>  [359,] 1.0312811 1.0484326 1.0507630 #>  [360,] 0.7242428 0.7662325 0.7700527 #>  [361,] 0.6998594 0.7121006 0.7695102 #>  [362,] 0.8472650 0.8576211 0.8578067 #>  [363,] 0.7922368 0.8162160 0.8195628 #>  [364,] 1.7840225 1.7935957 1.8200792 #>  [365,] 0.6604447 0.6607325 0.6940589 #>  [366,] 1.2676753 1.3127375 1.3455759 #>  [367,] 0.9907611 1.0173168 1.0582955 #>  [368,] 0.7873194 0.8153093 0.8161700 #>  [369,] 1.2283729 1.2864671 1.2900630 #>  [370,] 0.8764046 0.8902603 0.9107619 #>  [371,] 0.7204260 0.7453925 0.7456167 #>  [372,] 1.9136909 1.9257586 1.9737729 #>  [373,] 0.7203373 0.7251746 0.7363873 #>  [374,] 0.6362472 0.6432679 0.7208185 #>  [375,] 0.5686420 0.5760126 0.6036081 #>  [376,] 0.5961185 0.6197778 0.6326157 #>  [377,] 0.4790541 0.5063226 0.5381749 #>  [378,] 0.6281310 0.6451883 0.6610710 #>  [379,] 0.6737772 0.6814172 0.6973338 #>  [380,] 0.5838917 0.5957621 0.6375424 #>  [381,] 0.8268012 0.8868132 0.8966977 #>  [382,] 0.5972139 0.6691856 0.6766093 #>  [383,] 1.1091137 1.1549159 1.1574111 #>  [384,] 1.5863536 1.6189595 1.6538423 #>  [385,] 0.6191237 0.6232906 0.6366850 #>  [386,] 0.5910485 0.6037742 0.6059267 #>  [387,] 0.8561385 0.8773905 0.9195830 #>  [388,] 0.6319978 0.6397567 0.6599379 #>  [389,] 0.5940305 0.6152953 0.6751072 #>  [390,] 0.5702234 0.5814752 0.6183681 #>  [391,] 0.6197778 0.6807132 0.7367154 #>  [392,] 0.6662159 0.6921613 0.6933370 #>  [393,] 1.0265351 1.0275810 1.0382020 #>  [394,] 0.6201608 0.6320602 0.6678811 #>  [395,] 0.7150936 0.7625488 0.8378962 #>  [396,] 1.0709700 1.0786075 1.1044557 #>  [397,] 0.5592612 0.5643445 0.5651044 #>  [398,] 0.6640686 0.6704217 0.7282170 #>  [399,] 0.6074699 0.6097477 0.6241754 #>  [400,] 0.6457990 0.6477321 0.6578003 #>  [401,] 0.5949816 0.6264863 0.6453349 #>  [402,] 0.6575790 0.6945447 0.7303741 #>  [403,] 0.8661141 0.8943879 0.8950794 #>  [404,] 0.7340736 0.7414100 0.7673708 #>  [405,] 1.3332915 1.3421021 1.3814566 #>  [406,] 0.8552862 0.8669846 0.9277560 #>  [407,] 0.9004102 0.9261410 0.9343400 #>  [408,] 0.8135674 0.8450383 0.8705821 #>  [409,] 0.8256712 0.8536410 0.8981180 #>  [410,] 0.8887450 0.8915176 0.8993781 #>  [411,] 0.8759320 0.8867585 0.9849170 #>  [412,] 0.9320588 0.9831571 1.0540273 #>  [413,] 0.4758166 0.5748394 0.5912313 #>  [414,] 0.6969677 0.7072336 0.7256537 #>  [415,] 1.2983299 1.3487658 1.3542367 #>  [416,] 0.5912313 0.6043631 0.6321092 #>  [417,] 0.7756791 0.7986858 0.8033060 #>  [418,] 1.1854908 1.2246464 1.2476581 #>  [419,] 0.9162389 0.9221184 0.9283820 #>  [420,] 1.1735013 1.1769164 1.1872140 #>  [421,] 0.8402929 0.8607814 0.8620609 #>  [422,] 0.6259569 0.6395825 0.6534698 #>  [423,] 0.7192907 0.7264164 0.7613492 #>  [424,] 0.9115718 0.9502124 0.9740664 #>  [425,] 0.7674704 0.8125552 0.8770559 #>  [426,] 0.8036631 0.8197737 0.8293208 #>  [427,] 1.4373107 1.4770409 1.4910315 #>  [428,] 1.6430312 1.6433325 1.6847370 #>  [429,] 0.7836765 0.7926107 0.8011135 #>  [430,] 0.9935446 1.0302644 1.0587683 #>  [431,] 0.8044279 0.8080187 0.8465369 #>  [432,] 0.7364477 0.7604488 0.7798424 #>  [433,] 0.9211230 0.9305275 0.9406196 #>  [434,] 1.0173514 1.0480977 1.0674395 #>  [435,] 0.8496306 0.8506294 0.8919984 #>  [436,] 0.8790075 0.8798837 0.9392250 #>  [437,] 0.9722080 0.9799646 0.9969905 #>  [438,] 0.5961185 0.6061960 0.6314500 #>  [439,] 1.1766610 1.2153089 1.2215174 #>  [440,] 0.7032936 0.7135000 0.7486903 #>  [441,] 0.9360040 0.9977871 0.9991028 #>  [442,] 0.9516419 0.9843123 1.0266264 #>  [443,] 0.8293490 0.8309975 0.8441929 #>  [444,] 0.7670654 0.8382434 0.8433343 #>  [445,] 0.6552469 0.6588415 0.6804468 #>  [446,] 0.6706765 0.6920441 0.7511059 #>  [447,] 0.9193574 0.9581009 0.9949237 #>  [448,] 1.0837812 1.0966625 1.0972310 #>  [449,] 1.3484115 1.3612481 1.3933884 #>  [450,] 1.0410942 1.0433633 1.0578030 #>  [451,] 0.5514899 0.6022947 0.6102276 #>  [452,] 0.6676641 0.6975615 0.7186669 #>  [453,] 0.7884557 0.8004571 0.8858040 #>  [454,] 2.1367734 2.1841891 2.2330255 #>  [455,] 1.1141246 1.1987299 1.2260218 #>  [456,] 0.7407907 0.7622466 0.7751553 #>  [457,] 0.7138028 0.7209309 0.7285232 #>  [458,] 0.5595819 0.5606900 0.5753715 #>  [459,] 1.2664810 1.2953862 1.3025265 #>  [460,] 0.5102184 0.5321568 0.5407830 #>  [461,] 0.5984151 0.6398077 0.6481085 #>  [462,] 0.5870617 0.5943617 0.6064005 #>  [463,] 1.2958510 1.3279136 1.3499538 #>  [464,] 0.6839840 0.7408230 0.7847691 #>  [465,] 0.8841050 0.8893233 0.8966977 #>  [466,] 0.8547247 0.9152153 0.9351894 #>  [467,] 0.5412162 0.5424208 0.5596547 #>  [468,] 0.5973697 0.6052726 0.6141802 #>  [469,] 0.9408210 0.9566718 1.0542626 #>  [470,] 0.9890728 1.0445850 1.1372962 #>  [471,] 0.9417579 0.9627105 0.9764056 #>  [472,] 0.6384854 0.6727299 0.6813998 #>  [473,] 1.1833788 1.2173382 1.2322961 #>  [474,] 1.0716606 1.0766614 1.0779042 #>  [475,] 0.5984151 0.6375358 0.6399035 #>  [476,] 0.9339092 0.9641561 0.9708484 #>  [477,] 1.1039549 1.1293854 1.1574073 #>  [478,] 0.5185337 0.5325772 0.5345708 #>  [479,] 0.6824157 0.6851024 0.6870506 #>  [480,] 0.9909694 0.9921747 1.0125239 #>  [481,] 0.7616735 0.7662220 0.7911263 #>  [482,] 1.4111722 1.4130526 1.4571917 #>  [483,] 1.0452325 1.0866509 1.1174890 #>  [484,] 0.6951444 0.7227387 0.7335368 #>  [485,] 0.8935231 0.9191863 0.9195821 #>  [486,] 0.7894821 0.8232029 0.8284629 #>  [487,] 0.9002728 0.9036583 0.9161660 #>  [488,] 0.5598384 0.5745354 0.5928575 #>  [489,] 0.9376695 0.9697391 0.9717478 #>  [490,] 0.8124181 0.8133119 0.8370879 #>  [491,] 0.5674668 0.6342794 0.6485300 #>  [492,] 1.3803317 1.3940885 1.3991100 #>  [493,] 2.6324376 2.6690664 2.7737263 #>  [494,] 1.0415608 1.0465449 1.0606475 #>  [495,] 0.6128037 0.6143222 0.6348714 #>  [496,] 0.6494720 0.6706765 0.6719396 #>  [497,] 0.7994980 0.8133536 0.8167190 #>  [498,] 0.8143255 0.8169539 0.8255183 #>  [499,] 0.8120959 0.8972287 0.9584684 #>  [500,] 0.7591691 0.7922208 0.8230804 #>  [501,] 0.7942967 0.8285279 0.8572660 #>  [502,] 0.7507853 0.7511208 0.7989709 #>  [503,] 1.4949309 1.5088695 1.5509928 #>  [504,] 0.8053975 0.8365426 0.8680624 #>  [505,] 0.6860799 0.7286447 0.7548900 #>  [506,] 1.2046732 1.2391506 1.2582965 #>  [507,] 0.8136846 0.8645404 0.9054870 #>  [508,] 0.7279939 0.7764651 0.7771602 #>  [509,] 0.5519474 0.5852473 0.6027293 #>  [510,] 0.9828459 1.0000553 1.0062420 #>  [511,] 1.3120544 1.3697740 1.3791040 #>  [512,] 0.7999313 0.8061467 0.8584755 #>  [513,] 0.6522734 0.6537678 0.7067641 #>  [514,] 0.5341007 0.5595721 0.5702234 #>  [515,] 0.7402556 0.7603820 0.7614424 #>  [516,] 1.3036382 1.3175556 1.3310183 #>  [517,] 0.5803165 0.6335523 0.6472690 #>  [518,] 0.5961672 0.6423636 0.6639860 #>  [519,] 0.7267415 0.7633553 0.7781045 #>  [520,] 1.3120326 1.3456364 1.3592018 #>  [521,] 0.6813673 0.7266624 0.7335445 #>  [522,] 0.5714060 0.6042908 0.6261069 #>  [523,] 0.7975021 0.8365337 0.8935231 #>  [524,] 0.5770214 0.5856605 0.5864101 #>  [525,] 1.0275344 1.0832356 1.1227728 #>  [526,] 0.7855333 0.7864941 0.7947814 #>  [527,] 0.5228366 0.5398527 0.5420559 #>  [528,] 0.9385254 0.9589972 0.9752898 #>  [529,] 0.8156924 0.8332599 0.8615127 #>  [530,] 0.7473432 0.7559358 0.7714931 #>  [531,] 0.8158961 0.8562694 0.8780334 #>  [532,] 0.4906728 0.4990324 0.5208221 #>  [533,] 0.6691694 0.6861658 0.7352581 #>  [534,] 0.6789112 0.7336426 0.7513954 #>  [535,] 0.6728635 0.7678769 0.7909957 #>  [536,] 1.1744132 1.2336947 1.3381162 #>  [537,] 0.8196332 0.8313359 0.8403455 #>  [538,] 0.8405960 0.8768382 0.9284968 #>  [539,] 0.5381640 0.5385255 0.5406893 #>  [540,] 0.5218718 0.5511470 0.6098027 #>  [541,] 1.2882662 1.3078982 1.3287785 #>  [542,] 0.6976603 0.7159925 0.7538068 #>  [543,] 0.5714734 0.5942102 0.6285718 #>  [544,] 1.0021444 1.0498677 1.0519129 #>  [545,] 1.0248468 1.0490369 1.0517910 #>  [546,] 0.6121790 0.6640686 0.6670931 #>  [547,] 0.5477479 0.5547625 0.5845560 #>  [548,] 0.6791547 0.6791821 0.6867928 #>  [549,] 0.6311751 0.6329992 0.6341607 #>  [550,] 1.0076839 1.0077841 1.0123677 #>  [551,] 0.6265470 0.6582619 0.6678544 #>  [552,] 0.9844540 1.0010224 1.0075383 #>  [553,] 1.1312600 1.1588874 1.1679290 #>  [554,] 0.6384404 0.6599379 0.6728720 #>  [555,] 1.2058816 1.2092497 1.2136584 #>  [556,] 0.6696183 0.6698253 0.7465571 #>  [557,] 0.9483951 1.0008317 1.0464603 #>  [558,] 0.6084161 0.6473261 0.6520436 #>  [559,] 0.7803574 0.7808140 0.7982618 #>  [560,] 0.5591070 0.5913421 0.6114488 #>  [561,] 0.5428802 0.5876741 0.6124616 #>  [562,] 0.9222297 0.9307235 0.9385254 #>  [563,] 0.6915029 0.6947540 0.7033899 #>  [564,] 0.6099350 0.6153748 0.6295611 #>  [565,] 0.6475919 0.6571278 0.6620978 #>  [566,] 0.6613871 0.6824320 0.7059184 #>  [567,] 0.7330574 0.7808816 0.8216897 #>  [568,] 0.9372712 0.9662115 0.9677037 #>  [569,] 0.7491739 0.7923519 0.7965943 #>  [570,] 0.5727699 0.6041179 0.6079337 #>  [571,] 0.5651094 0.5663454 0.5776907 #>  [572,] 0.6041959 0.6283359 0.6407717 #>  [573,] 0.5697445 0.5801522 0.6254402 #>  [574,] 0.6313678 0.6374224 0.6378726 #>  [575,] 0.8004918 0.8175034 0.8323077 #>  [576,] 0.9936716 1.0049013 1.0061198 #>  [577,] 0.9310631 0.9779457 0.9817270 #>  [578,] 0.7496053 0.7719385 0.7994812 #>  [579,] 0.8161502 0.9042003 0.9188250 #>  [580,] 0.7372187 0.7453339 0.7595319 #>  [581,] 0.7303741 0.7454781 0.7741801 #>  [582,] 0.5664952 0.5762015 0.5926989 #>  [583,] 0.9075313 0.9157993 0.9427345 #>  [584,] 0.5608866 0.5663454 0.5843786 #>  [585,] 0.6918798 0.7233158 0.7490797 #>  [586,] 1.1978771 1.2049093 1.2087941 #>  [587,] 0.6729545 0.6765619 0.7040318 #>  [588,] 0.7863253 0.8041727 0.8200095 #>  [589,] 0.5074522 0.5339643 0.5406893 #>  [590,] 0.7183710 0.7508591 0.7537716 #>  [591,] 1.3441311 1.4014283 1.4517849 #>  [592,] 0.5762015 0.5943558 0.6121790 #>  [593,] 0.6845963 0.7040535 0.7410925 #>  [594,] 0.7376029 0.7433205 0.7451009 #>  [595,] 0.6152322 0.6278778 0.6315908 #>  [596,] 0.7465604 0.7550694 0.7825075 #>  [597,] 0.7657190 0.8428108 0.8585161 #>  [598,] 0.7214195 0.7745880 0.7987840 #>  [599,] 0.6337729 0.6448877 0.6471201 #>  [600,] 0.8168296 0.8416284 0.8426500 #>  [601,] 0.9516237 0.9915572 0.9983110 #>  [602,] 0.5755134 0.5840093 0.5843786 #>  [603,] 0.6613871 0.6627529 0.6730059 #>  [604,] 0.8985013 0.9034936 0.9039363 #>  [605,] 0.5997719 0.6076570 0.6588614 #>  [606,] 0.8421485 0.8662256 0.8729840 #>  [607,] 0.7682029 0.7831944 0.8054474 #>  [608,] 0.7881383 0.7938120 0.7950072 #>  [609,] 0.5976664 0.6129419 0.6358063 #>  [610,] 1.2458807 1.2566878 1.2683027 #>  [611,] 0.8656823 0.8997353 0.9536529 #>  [612,] 0.8401921 0.8574360 0.8988835 #>  [613,] 0.7481673 0.7773212 0.8001707 #>  [614,] 1.0903158 1.1278254 1.1628513 #>  [615,] 0.8802197 0.8896611 0.8917722 #>  [616,] 1.2342011 1.2447175 1.2763667 #>  [617,] 0.5608705 0.5676470 0.6187819 #>  [618,] 0.6492424 0.6622900 0.7294521 #>  [619,] 0.5355730 0.5383274 0.5427075 #>  [620,] 0.6501762 0.6614082 0.6704982 #>  [621,] 0.7245402 0.7299863 0.7461537 #>  [622,] 0.5724824 0.6596924 0.6634423 #>  [623,] 0.5919135 0.5988992 0.6016540 #>  [624,] 0.6370275 0.6510347 0.6611202 #>  [625,] 1.0954630 1.1799942 1.1995452 #>  [626,] 1.4774903 1.4885966 1.5354595 #>  [627,] 0.9425651 0.9427145 0.9561565 #>  [628,] 0.6272954 0.6306031 0.6385995 #>  [629,] 0.9216363 0.9241269 0.9431514 #>  [630,] 0.9413582 1.0119908 1.0699182 #>  [631,] 0.5508429 0.5551638 0.5663733 #>  [632,] 0.6139474 0.6311085 0.6481085 #>  [633,] 0.8760715 0.8883357 0.9078303 #>  [634,] 0.7593810 0.8157868 0.8720700 #>  [635,] 0.7572716 0.7666700 0.8802197 #>  [636,] 0.8832296 0.9427622 0.9846249 #>  [637,] 0.9871094 1.0700715 1.0752969 #>  [638,] 0.4837325 0.5364892 0.5370520 #>  [639,] 1.0791001 1.1101844 1.1581415 #>  [640,] 0.6941355 0.7137021 0.7376078 #>  [641,] 1.2330567 1.2436951 1.2579289 #>  [642,] 0.7711209 0.7766738 0.7829656 #>  [643,] 0.8741666 0.8947221 0.8970010 #>  [644,] 1.9725464 2.0644929 2.1116776 #>  [645,] 0.5688932 0.5949131 0.6118133 #>  [646,] 0.9909694 1.0529737 1.0533868 #>  [647,] 1.3479551 1.3636697 1.4224705 #>  [648,] 1.0236511 1.0558188 1.0661166 #>  [649,] 0.6119802 0.6620747 0.6720401 #>  [650,] 0.7986858 0.8810201 0.9072789 #>  [651,] 0.5927861 0.6127758 0.6417678 #>  [652,] 0.5640903 0.5655034 0.6655083 #>  [653,] 0.6526109 0.7190801 0.7592149 #>  [654,] 0.5355730 0.5419426 0.5473769 #>  [655,] 0.7781352 0.7893598 0.8058373 #>  [656,] 0.5318165 0.5407418 0.5473769 #>  [657,] 0.7384227 0.7668032 0.7671287 #>  [658,] 1.1277039 1.1548729 1.1934277 #>  [659,] 0.9591430 0.9641303 1.0163688 #>  [660,] 0.6580695 0.6654264 0.6738850 #>  [661,] 1.1987592 1.2335577 1.2834319 #>  [662,] 1.1534570 1.1807731 1.2514892 #>  [663,] 0.8294891 0.8325691 0.8468208 #>  [664,] 0.6437686 0.6491674 0.6688053 #>  [665,] 0.6398555 0.6723788 0.6752057 #>  [666,] 1.3548211 1.4343603 1.4766115 #>  [667,] 1.0282640 1.0335529 1.0423458 #>  [668,] 0.6793030 0.7149134 0.7170944 #>  [669,] 1.0036135 1.0317734 1.0962949 #>  [670,] 0.8581274 0.8874609 0.9307183 #>  [671,] 0.7384851 0.7392788 0.7614672 #>  [672,] 1.2070670 1.2230454 1.2312539 #>  [673,] 0.6416740 0.6445448 0.6487790 #>  [674,] 1.1273668 1.1453995 1.1486441 #>  [675,] 0.8920908 0.8962625 0.8981554 #>  [676,] 0.9653476 0.9935017 1.0021042 #>  [677,] 0.6666536 0.6795478 0.6850282 #>  [678,] 0.8307655 0.8524294 0.8533674 #>  [679,] 0.5553743 0.5578504 0.5716971 #>  [680,] 0.8838908 0.9718113 0.9796859 #>  [681,] 0.6413637 0.6417548 0.6650387 #>  [682,] 0.4207454 0.4486872 0.4777697 #>  [683,] 0.7730774 0.7819100 0.8078214 #>  [684,] 0.5463946 0.5473829 0.5674668 #>  [685,] 1.1530049 1.1830191 1.2908591 #>  [686,] 0.7890535 0.8204635 0.8218344 #>  [687,] 0.8578753 0.8594021 0.8875361 #>  [688,] 0.7745880 0.7960903 0.7992109 #>  [689,] 0.9799352 1.0616828 1.0766614 #>  [690,] 0.7386538 0.7582832 0.7617789 #>  [691,] 0.6228384 0.6260551 0.6385995 #>  [692,] 0.4907610 0.5325974 0.5447070 #>  [693,] 0.7390494 0.8180225 0.8321131 #>  [694,] 0.8159574 0.8169514 0.8330316 #>  [695,] 0.9459157 0.9774554 0.9915602 #>  [696,] 0.7997342 0.8509668 0.8729840 #>  [697,] 0.7281046 0.7845302 0.8072378 #>  [698,] 0.6120899 0.6451727 0.6754883 #>  [699,] 1.3482400 1.3793944 1.4142015 #>  [700,] 0.9168368 0.9390019 0.9660656 #>  [701,] 0.6792586 0.7200910 0.7241861 #>  [702,] 0.8655241 0.8864966 0.9114828 #>  [703,] 0.6404817 0.6849991 0.7113354 #>  [704,] 0.9865033 1.0048190 1.0415608 #>  [705,] 0.9126041 0.9171610 0.9335207 #>  [706,] 0.9388705 0.9499690 0.9759546 #>  [707,] 1.0371090 1.0395011 1.0713917 #>  [708,] 0.6236107 0.6261069 0.6367857 #>  [709,] 0.8038135 0.8064418 0.8208255 #>  [710,] 1.5019876 1.5265523 1.6085682 #>  [711,] 0.6166141 0.6409573 0.6478410 #>  [712,] 1.2396150 1.3561953 1.3703831 #>  [713,] 0.5883195 0.6094055 0.6133785 #>  [714,] 0.8892120 0.9139681 0.9643993 #>  [715,] 0.5838696 0.5911656 0.6175134 #>  [716,] 0.8788879 0.8855800 0.9229080 #>  [717,] 0.9145789 0.9228356 0.9442154 #>  [718,] 0.7164260 0.7410933 0.7767975 #>  [719,] 0.7420058 0.8241127 0.9174082 #>  [720,] 1.6620827 1.6719920 1.7390415 #>  [721,] 0.8414038 0.8578888 0.8956830 #>  [722,] 0.5205250 0.5265614 0.5336194 #>  [723,] 0.8359769 0.8475807 0.8614575 #>  [724,] 0.8301186 0.8558846 0.8835816 #>  [725,] 0.7742628 0.7850612 0.8017580 #>  [726,] 0.9629136 0.9852561 1.0036794 #>  [727,] 1.0717580 1.0750655 1.1507472 #>  [728,] 0.4932012 0.4995070 0.5065138 #>  [729,] 0.9035626 0.9173877 0.9280949 #>  [730,] 0.5752908 0.6601939 0.6709965 #>  [731,] 0.7696398 0.7880743 0.7905991 #>  [732,] 0.5820248 0.5909170 0.6342252 #>  [733,] 0.8571998 0.8894662 0.9065892 #>  [734,] 1.6243343 1.6704143 1.6727109 #>  [735,] 0.5749247 0.6399035 0.6480750 #>  [736,] 0.7168924 0.7169690 0.7182067 #>  [737,] 0.8110680 0.8127514 0.8256908 #>  [738,] 0.7621991 0.7963092 0.7976325 #>  [739,] 0.7164260 0.7245343 0.7272189 #>  [740,] 0.6751453 0.6801725 0.7343027 #>  [741,] 0.7029069 0.7104602 0.7169029 #>  [742,] 0.9232281 0.9303042 0.9382034 #>  [743,] 0.8662256 0.8895388 0.9329258 #>  [744,] 0.5869009 0.5890001 0.5902472 #>  [745,] 0.5515260 0.5634798 0.5641328 #>  [746,] 0.5030661 0.5092214 0.5101448 #>  [747,] 0.6742204 0.6772682 0.7024455 #>  [748,] 1.3109515 1.3334425 1.3370805 #>  [749,] 0.8879822 0.9006914 0.9042298 #>  [750,] 1.1774851 1.2695679 1.2885741 #>  [751,] 0.5396846 0.5676130 0.5746841 #>  [752,] 0.8230818 0.8669875 0.8793800 #>  [753,] 0.6311249 0.6320602 0.6408632 #>  [754,] 1.1830191 1.2461672 1.2494274 #>  [755,] 1.6769847 1.7630488 1.8082883 #>  [756,] 1.0337113 1.0907630 1.1005209 #>  [757,] 0.6115134 0.6162420 0.6264962 #>  [758,] 1.3047345 1.3078834 1.3545334 #>  [759,] 0.6476332 0.6488499 0.6602112 #>  [760,] 0.7294000 0.7309384 0.7330574 #>  [761,] 0.4687024 0.4946562 0.5432200 #>  [762,] 0.6398761 0.6551953 0.6849887 #>  [763,] 0.6873010 0.7017468 0.7096704 #>  [764,] 0.9027913 0.9058051 0.9117867 #>  [765,] 0.6926778 0.7046223 0.7129806 #>  [766,] 0.7679584 0.7783103 0.7932272 #>  [767,] 0.8065061 0.8079644 0.8466747 #>  [768,] 0.8655579 0.9056015 0.9336598 #>  [769,] 0.9847036 1.0062233 1.0312801 #>  [770,] 0.7746617 0.8695440 0.8743818 #>  [771,] 0.5107617 0.5515260 0.5845560 #>  [772,] 1.1472033 1.2518029 1.2604979 #>  [773,] 0.8011135 0.8374992 0.8716231 #>  [774,] 0.7862951 0.7926905 0.8059538 #>  [775,] 0.6834379 0.6981988 0.7153690 #>  [776,] 0.5553743 0.5658701 0.6013933 #>  [777,] 0.6450546 0.6957498 0.6994597 #>  [778,] 1.0437685 1.0505492 1.1325979 #>  [779,] 0.7457828 0.7661089 0.7815630 #>  [780,] 0.9663858 1.0356129 1.1141288 #>  [781,] 0.6367787 0.6389733 0.6394451 #>  [782,] 0.5942549 0.6046455 0.6236231 #>  [783,] 0.7652160 0.8012428 0.8831677 #>  [784,] 0.5324907 0.5396846 0.5578504 #>  [785,] 0.6486078 0.7011926 0.7078676 #>  [786,] 0.9794863 1.0735221 1.1246145 #>  [787,] 0.5633748 0.5679865 0.5840093 #>  [788,] 1.0864458 1.1043803 1.1451901 #>  [789,] 0.5996100 0.6200803 0.6273228 #>  [790,] 1.1596246 1.1944638 1.2016451 #>  [791,] 1.4543949 1.4881974 1.5279832 #>  [792,] 1.6465150 1.6540642 1.6719920 #>  [793,] 0.8106073 0.8583783 0.9044092 #>  [794,] 0.5847095 0.6550230 0.6647078 #>  [795,] 0.5879543 0.6121093 0.6160844 #>  [796,] 0.6537113 0.6546843 0.6847850 #>  [797,] 0.6202906 0.6297908 0.6405829 #>  [798,] 0.9249962 0.9599222 0.9850830 #>  [799,] 0.9581526 0.9652656 0.9810554 #>  [800,] 0.6727214 0.6813998 0.6951916 #>  [801,] 2.0102790 2.0668683 2.1392236 #>  [802,] 0.6986640 0.7273680 0.7976871 #>  [803,] 0.6097477 0.6286949 0.6403541 #>  [804,] 0.7618036 0.8036282 0.8047652 #>  [805,] 0.5744496 0.6321281 0.6931242 #>  [806,] 0.9236481 0.9538382 0.9655047 #>  [807,] 1.2172207 1.2675466 1.3771271 #>  [808,] 0.5583643 0.5637111 0.6098692 #>  [809,] 0.7724294 0.7742628 0.7817124 #>  [810,] 0.5847470 0.5992529 0.6122430 #>  [811,] 2.0127832 2.0132546 2.0348013 #>  [812,] 0.5360767 0.5888384 0.6097322 #>  [813,] 0.7269806 0.7546149 0.7746617 #>  [814,] 0.9018087 0.9358204 0.9360448 #>  [815,] 0.9839167 1.0373189 1.0502919 #>  [816,] 0.6873142 0.6893419 0.7158041 #>  [817,] 0.8094694 0.8136929 0.8212123 #>  [818,] 0.8798837 0.8853364 0.9034769 #>  [819,] 0.7614424 0.8309036 0.9128375 #>  [820,] 0.6441873 0.7121006 0.7199168 #>  [821,] 0.5998683 0.6124334 0.6180573 #>  [822,] 1.0559804 1.0876169 1.1256377 #>  [823,] 0.5055550 0.5601752 0.5977994 #>  [824,] 1.0143841 1.0298300 1.0342578 #>  [825,] 0.7269025 0.7361034 0.7412978 #>  [826,] 0.9642689 1.0423922 1.0556965 #>  [827,] 0.9538659 0.9578612 0.9895428 #>  [828,] 0.5136086 0.5245614 0.5648636 #>  [829,] 0.9211177 0.9602262 0.9909242 #>  [830,] 1.4215254 1.4277082 1.4735423 #>  [831,] 0.6552414 0.6650485 0.6933226 #>  [832,] 0.7284871 0.7320340 0.7391962 #>  [833,] 0.5831350 0.6276569 0.6315142 #>  [834,] 0.6979239 0.7193289 0.7489137 #>  [835,] 0.5651044 0.5731068 0.5776889 #>  [836,] 0.9579827 0.9588168 0.9654936 #>  [837,] 0.8770559 0.9508411 1.0066171 #>  [838,] 0.7340724 0.7355500 0.7419134 #>  [839,] 1.0172404 1.0182982 1.0402215 #>  [840,] 0.9497564 0.9543635 0.9926440 #>  [841,] 1.6457853 1.6676971 1.6703937 #>  [842,] 0.5940305 0.6427197 0.6741205 #>  [843,] 0.4790541 0.4907610 0.4931029 #>  [844,] 0.5535695 0.5705535 0.5717266 #>  [845,] 0.8033529 0.9752092 0.9834741 #>  [846,] 0.6058512 0.6092856 0.6214410 #>  [847,] 0.7668193 0.7802200 0.7824217 #>  [848,] 1.3161190 1.3282593 1.3520607 #>  [849,] 0.7676503 0.7713164 0.7749533 #>  [850,] 0.5504362 0.5857092 0.5930570 #>  [851,] 0.7207352 0.7312513 0.7441503 #>  [852,] 0.9733051 1.0633001 1.0828411 #>  [853,] 0.7697303 0.7816603 0.7841466 #>  [854,] 0.5942549 0.6075738 0.6081425 #>  [855,] 0.6133180 0.6218180 0.6797722 #>  [856,] 0.5856327 0.5977994 0.6159256 #>  [857,] 1.5109446 1.5168862 1.5564553 #>  [858,] 1.2071040 1.2082034 1.2094259 #>  [859,] 0.9013572 0.9277140 0.9430382 #>  [860,] 0.5140850 0.5330592 0.5678127 #>  [861,] 0.5559849 0.5876458 0.6253117 #>  [862,] 0.6451883 0.6802330 0.7037397 #>  [863,] 0.8677625 0.8768750 0.8950794 #>  [864,] 0.8943424 0.9008648 0.9135763 #>  [865,] 0.5426174 0.5605382 0.5658701 #>  [866,] 0.5744496 0.5997719 0.6359353 #>  [867,] 1.0335550 1.1132867 1.1137644 #>  [868,] 0.5591070 0.5608866 0.5776907 #>  [869,] 0.8216612 0.8229050 0.8354784 #>  [870,] 0.8740258 0.8867939 0.9018087 #>  [871,] 0.6732713 0.6930500 0.6951371 #>  [872,] 0.8135307 0.8266319 0.8354528 #>  [873,] 1.2137115 1.2175522 1.2272984 #>  [874,] 0.8289833 0.8382800 0.8738860 #>  [875,] 0.8564971 0.8578067 0.8876631 #>  [876,] 0.6896126 0.7214217 0.7440187 #>  [877,] 0.7217445 0.7895364 0.8323803 #>  [878,] 1.1533803 1.1968494 1.2014735 #>  [879,] 0.8934518 0.9209075 0.9216363 #>  [880,] 0.5527097 0.5860162 0.6158828 #>  [881,] 1.1255149 1.1714824 1.2705867 #>  [882,] 0.6678544 0.6866401 0.7009519 #>  [883,] 0.7978641 0.8321555 0.8724084 #>  [884,] 0.7477290 0.7653026 0.7692648 #>  [885,] 0.8017866 0.8136929 0.8975654 #>  [886,] 0.7809196 0.7879693 0.8107196 #>  [887,] 0.7661089 0.7754725 0.7863253 #>  [888,] 0.5709725 0.5764475 0.5992161 #>  [889,] 0.8271293 0.8289344 0.8408611 #>  [890,] 1.2807940 1.2839271 1.2997891 #>  [891,] 1.0617974 1.0853410 1.1068208 #>  [892,] 0.7607260 0.7700527 0.7783519 #>  [893,] 0.7541170 0.7910747 0.8603559 #>  [894,] 0.6831521 0.6890167 0.7141749 #>  [895,] 0.8244483 0.8799425 0.8802286 #>  [896,] 0.5984661 0.6094055 0.6227250 #>  [897,] 0.9890953 1.0081187 1.0340147 #>  [898,] 1.1132297 1.1348071 1.1507885 #>  [899,] 1.2409729 1.3121336 1.3518109 #>  [900,] 0.6509141 0.6868367 0.6883754 #>  [901,] 0.6099935 0.6213515 0.6417361 #>  [902,] 1.3209606 1.3450126 1.3687592 #>  [903,] 0.5984030 0.6008958 0.6022620 #>  [904,] 0.6542758 0.6640788 0.6640856 #>  [905,] 0.7977795 0.8319063 0.8656072 #>  [906,] 0.7173561 0.7203901 0.7555384 #>  [907,] 0.6525579 0.6552414 0.7245683 #>  [908,] 0.9039573 0.9041569 0.9063192 #>  [909,] 1.4298778 1.4329448 1.4472800 #>  [910,] 0.5387782 0.5412956 0.5477150 #>  [911,] 1.2173382 1.2560518 1.2919727 #>  [912,] 0.7357022 0.7880743 0.7901190 #>  [913,] 1.3565171 1.4090639 1.4293918 #>  [914,] 1.1013150 1.1634228 1.1994644 #>  [915,] 1.4331158 1.4575753 1.5599124 #>  [916,] 1.1059065 1.1077675 1.1209279 #>  [917,] 0.7486382 0.7546149 0.7571890 #>  [918,] 0.6243260 0.6254634 0.6259569 #>  [919,] 0.5101448 0.5413036 0.5500943 #>  [920,] 0.7340899 0.7561492 0.7567436 #>  [921,] 0.7595645 0.7661535 0.7857944 #>  [922,] 0.5592612 0.5625081 0.5749247 #>  [923,] 1.0372290 1.0772322 1.1879276 #>  [924,] 0.5070854 0.5197859 0.5281297 #>  [925,] 0.6476842 0.6825489 0.6847850 #>  [926,] 0.6473261 0.6710265 0.6815069 #>  [927,] 0.7639675 0.8028773 0.8372996 #>  [928,] 0.8048193 0.8244515 0.8810398 #>  [929,] 0.8401738 0.8658042 0.8973762 #>  [930,] 0.7169029 0.7236686 0.7391002 #>  [931,] 0.7596917 0.7698975 0.8049440 #>  [932,] 0.6997904 0.7175271 0.7218247 #>  [933,] 0.7609654 0.8058802 0.8287367 #>  [934,] 0.5949816 0.6045570 0.6090686 #>  [935,] 0.9341321 0.9372112 0.9372712 #>  [936,] 0.8459872 0.8576306 0.8678181 #>  [937,] 0.5709725 0.6157957 0.6451727 #>  [938,] 0.6998869 0.7022318 0.7072336 #>  [939,] 0.6418861 0.6517386 0.6818614 #>  [940,] 0.5283124 0.5294837 0.5936762 #>  [941,] 0.9674415 0.9788511 1.0138423 #>  [942,] 1.1128389 1.1143397 1.1690960 #>  [943,] 1.6803101 1.6941995 1.7136917 #>  [944,] 1.3221949 1.3446505 1.3817987 #>  [945,] 1.5710932 1.5776576 1.6620827 #>  [946,] 0.7384851 0.7728510 0.7963092 #>  [947,] 0.7441506 0.7727892 0.8615127 #>  [948,] 0.9017657 0.9118579 0.9316914 #>  [949,] 1.3323397 1.3689026 1.3814822 #>  [950,] 0.7570769 0.8004004 0.8308365 #>  [951,] 1.0578197 1.0634875 1.0936796 #>  [952,] 1.2186767 1.2630524 1.2847756 #>  [953,] 0.6140948 0.6151853 0.6375358 #>  [954,] 0.7717469 0.8756938 0.8785568 #>  [955,] 0.9195132 0.9569820 0.9718113 #>  [956,] 0.6976603 0.7400473 0.7463201 #>  [957,] 0.5718556 0.6742204 0.6855719 #>  [958,] 1.4702517 1.5061594 1.5194647 #>  [959,] 0.5405015 0.5508350 0.5745354 #>  [960,] 1.1047332 1.1716676 1.1718125 #>  [961,] 0.7045063 0.7081827 0.7110734 #>  [962,] 0.6846204 0.6994597 0.7067170 #>  [963,] 0.9440635 0.9554894 1.0223143 #>  [964,] 0.8463291 0.8707906 0.8747427 #>  [965,] 1.0576486 1.0628378 1.1332736 #>  [966,] 1.1343718 1.1750497 1.1871917 #>  [967,] 0.9788190 1.0423458 1.0464314 #>  [968,] 1.1925060 1.2836596 1.2941495 #>  [969,] 0.5606900 0.5785141 0.5787356 #>  [970,] 0.6520436 0.7614299 0.7723642 #>  [971,] 1.2067139 1.2271247 1.2595665 #>  [972,] 0.6870506 0.6957299 0.7189947 #>  [973,] 1.8535979 1.9402700 1.9835709 #>  [974,] 1.0753435 1.0864398 1.0924767 #>  [975,] 0.7627266 0.7896984 0.8246625 #>  [976,] 0.6613643 0.6774765 0.7062599 #>  [977,] 1.0558483 1.0868780 1.0881025 #>  [978,] 0.9009253 0.9039584 0.9280949 #>  [979,] 0.9187408 0.9360467 0.9406206 #>  [980,] 0.8027311 0.8469038 0.8557672 #>  [981,] 0.9498562 0.9599489 0.9757677 #>  [982,] 0.8321479 0.8509284 0.8599406 #>  [983,] 0.9925028 1.0451339 1.0571724 #>  [984,] 1.2354983 1.2401333 1.2591982 #>  [985,] 0.7397679 0.7680355 0.7814956 #>  [986,] 0.7896337 0.7976881 0.8018165 #>  [987,] 0.6382274 0.6476414 0.6488428 #>  [988,] 1.1409059 1.1470921 1.2268842 #>  [989,] 0.9114139 0.9359087 0.9760005 #>  [990,] 1.0555246 1.0700744 1.0821757 #>  [991,] 0.9310123 0.9605320 1.0127975 #>  [992,] 0.5974524 0.6504537 0.6517386 #>  [993,] 0.7126133 0.7134285 0.7195044 #>  [994,] 0.6735379 0.7027446 0.7033899 #>  [995,] 1.1919548 1.2437766 1.2621430 #>  [996,] 0.7310751 0.7594972 0.8058373 #>  [997,] 0.7742144 0.7855333 0.8343724 #>  [998,] 0.9240482 1.0261119 1.0353478 #>  [999,] 1.4091219 1.4352205 1.5047765 #> [1000,] 1.1165651 1.1231420 1.1601509 #>   # Find the 10 approximate nearest neighbors tof_find_knn(     .data = sim_data,     k = 10,     distance_function = \"euclidean\", ) #> $neighbor_ids #>         [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] #>    [1,]  849  651  486  656  617   87  619  745  615   487 #>    [2,]  113  541  251  384  330  851  668  255  727   690 #>    [3,]  294  859  191  537  555  929  354  839  869   707 #>    [4,]  459  941  110  269  506  437  345  519  308   874 #>    [5,]  611  550  367  740  756  655  381  793  972   820 #>    [6,]  178  771  584  141  571  547  602  451   91   622 #>    [7,]  808  760  509  842  145  631  900  213  276   797 #>    [8,]  116  877  444  909  780  829  259  144  199   228 #>    [9,]  855  649  262  224  993  833  138   92  379    43 #>   [10,]  296  208  121  862  120  137   60  741   58   939 #>   [11,]  446  961  957  518  134  517  904  496  927   593 #>   [12,]  633  621  352  149  845  168  652  512  992  1000 #>   [13,]  393  553  629  261  455  171  998  214  304   327 #>   [14,]  674   42  830  345  815  216  395  973  456   816 #>   [15,]  588  360  664  316   91  921  432  675  278   204 #>   [16,]  623  828  413  558  177  573  279  868  757   416 #>   [17,]  349  884  155  158  709  391  754  533  551   263 #>   [18,]  115  502  350  593  225  134  311  927  847   632 #>   [19,]  750  579  156  146  142   70  453   90  702   135 #>   [20,]  870  583  689  569   59  169  103  752  187   814 #>   [21,]  375  619  532  638  561  394  654  656  934   823 #>   [22,]  645   97  263  391  514  959   82  358  192   812 #>   [23,]  817  186  280  257  245  165  757  794  253   759 #>   [24,]  832   95  975  468   25  838  825  392  332   451 #>   [25,]  468  178  451  188  846  761  540  527  335   589 #>   [26,]  520  118  555  720  339  982  857  869  331   961 #>   [27,]  491  109  751  478  385  378  228  390  112   903 #>   [28,]  932  594  566  609  581  210  919  693  180   587 #>   [29,]  765  533   82  713  918  624  861  888  305   101 #>   [30,]  635  411  370  402  743  963  606  627  445   858 #>   [31,]  864  706  303  476  408  696  264   96  284   996 #>   [32,]  231  501  362  198  444  598  649  390  224   440 #>   [33,]  281  169  177  795  771  745  868  682  559   371 #>   [34,]  402  606  615  265  548  319  635  370  486   534 #>   [35,]  646  304   63  923  439   98  630  418  895   348 #>   [36,]  544  164  935  964  716  719  368  889  148   318 #>   [37,]  667  875  526  938  419  500  724  198  220   612 #>   [38,]  292  260  432  887  300  675  469  316  588    15 #>   [39,]  249  749  881  891  529  883  242  629  359   482 #>   [40,]  719  773  226  521  956  929  770  431  935   802 #>   [41,]  931  132   66  597  834  317  678  179   47   417 #>   [42,]  345   14  282  216  674  815  705  437  338   988 #>   [43,]  262  310  753    9   92  138  833  855  440   334 #>   [44,]  644  511   80  346  424  712  328  756  405     5 #>   [45,]  211  105  356  935  889  470  863  531  956   716 #>   [46,]  860  589  358  812   56  959  539  787  924   703 #>   [47,]  335  194  838  663  781  597  777   86  179   309 #>   [48,]  438  665  376  821  687  574  488  358  329   812 #>   [49,]  845  609  445  906   78  160  425  189  621   739 #>   [50,]  655  611  381  586  367    5  575  712  740   311 #>   [51,]  791  503  124  637  583  721  742  878   20   187 #>   [52,]  625  755  441  471  506  819  405  240  663   984 #>   [53,]  436  456  759  395   55  816  580  573  279   353 #>   [54,]  233  131  312  612  288  950  732   77  229   838 #>   [55,]  818  759  926  573  671  946  673  177   53   279 #>   [56,]  787  860  959   46  602  589  358  495  390   451 #>   [57,]  329  631  901  665  741  438  119  789  237   797 #>   [58,]  299  862  397  522  708  375  378  564  208   854 #>   [59,]  374  752  721  970  814  313  569  820  926    20 #>   [60,]  939  789  833  992  862  334  934  514   92   652 #>   [61,]  204  879  361  793  243  972  783  664  360    69 #>   [62,]  824  343   95  182  941   83  950   24  832   206 #>   [63,]  304   35  895  763  315   98  630  646  418    76 #>   [64,]  914  999  699  311  591   80  153  225  586   836 #>   [65,]  128  979  436  991   53  238  434  818  790   885 #>   [66,]  931   41  132  317  387  597  955  701  129   642 #>   [67,]  681  560   94  290  382  479  608  472  219   782 #>   [68,]  318  788  568  163   89  935  504  610  798   830 #>   [69,]  371  892  866  803  795  664  779  278  617   243 #>   [70,]  142  897  439  146   19  480  579  156  295   750 #>   [71,]  186  409  885  936  257  980  660  590  489   810 #>   [72,]  181  875  127   43  427  310  396  262  307   157 #>   [73,]  341  768  636  818  637  124  136  878  742   790 #>   [74,]  760  420  758  643  842  567  907  839  297   902 #>   [75,]  347  430  960  850  620  907  223  297   98   418 #>   [76,]  763  250  831   98  299  203  246  854  522   620 #>   [77,]  737  229  132  809  298  658  233  725   54   275 #>   [78,]  693  587  695  295  425  117   49  217  609    28 #>   [79,]  440  394  862  334  649  224  833   21  390    60 #>   [80,]  914  311  999   64  465  726  989  381  225   328 #>   [81,]  534  284   96  319  548   88  479  844  803   868 #>   [82,]  918   29  861  467  744  624  888  120  784   263 #>   [83,]  104  206  123  545  941  613   95  506  597   971 #>   [84,]  122  805  696  779  647  548  486  578   69   320 #>   [85,]  998  327  675  285  783  629  887   15  360   508 #>   [86,]  335  161  777  104  110   47  846  188  468    25 #>   [87,]  718  739    1  561  654  512  523  656  849   126 #>   [88,]  289  843  682  728  746  868  301  336  180   196 #>   [89,]  568  964  308  437  504  318  338  269  148   139 #>   [90,]  693  869  691  628  579  156  607  135  400   808 #>   [91,]  563  622  571    6  994  903  360  547  247    15 #>   [92,]  733  114    9  262  649   60   43   79  951   224 #>   [93,]  448  767  894  779  230  600  954  236  122   190 #>   [94,]  563  560   67  547  564  681  301   91  571   987 #>   [95,]   24  206  343  832  838  950  104  363  824   634 #>   [96,]  284  871   81  747  534  408  996  585  479   177 #>   [97,]  645   22  514  939  120  624  263  574  192    82 #>   [98,]   76  453  620  373  763  847  831  250  277   630 #>   [99,] 1000  974  256  489  257  352  484  633   12   149 #>  [100,]  195  465  202  464  608   67  286  502  457   726 #>  [101,]  765  678  834  713  953  650   29  776  533   417 #>  [102,]  717  875  362  601  526  905  997  198  634   667 #>  [103,]  689  807   20  150  908  583  332  474  870   187 #>  [104,]   86  206  613  161   83  123  335   47  994    95 #>  [105,]  470  531  351   45  836  211  530  497  694   546 #>  [106,]  910  940  631  715  509  692  119  808  919   165 #>  [107,]  582  761  539  924  812  732  527   46  776   460 #>  [108,]  978  425  296  295  480  254  906  193  872    78 #>  [109,]  478  491  112   27  185  228  751  385  684   564 #>  [110,]  777  519  335   86  252  874  459  549  188   970 #>  [111,]  827  323  270  152  322  348  886  314  481   326 #>  [112,]  228  109  185  564  491  399  397  684  234   291 #>  [113,]    2  541  251  507  244  851  952  668  895   690 #>  [114,]  700   92  951  307  733  137  383  967  639   231 #>  [115,]   18  502  350  225  593  311  286  195  632   464 #>  [116,]    8  909  323  270  111  827  944  841  829   144 #>  [117,]  609  587  603  823  730  295  566  380  532   193 #>  [118,]  904  982  961   11  496  774  927  446  653   957 #>  [119,]  692  106  715  910  149  901  631  329  789   462 #>  [120,]  624  861   82   97  888  882  208  551  918    10 #>  [121,]  872  708   10  299  296  378  690   58  862   330 #>  [122,]   84  805  486  743  548  230  600  236  320   578 #>  [123,]  206  545  613  508  675  260  104   83  921   317 #>  [124,]  742  341  768  637   34  636  313   73  583   671 #>  [125,]  379  565  205  386  821  220  745  794  253   513 #>  [126,]  654  561  445  570   21  401  532  160  753   823 #>  [127,]  427  157   43   72  310  262  733  138  512   718 #>  [128,]   65  436   53  674  973  830  979  456  450   991 #>  [129,]  387  947  642   66  510  239  317  417  955   244 #>  [130,]  825  452  651  634  220  928    6  451  386   849 #>  [131,]  288  612  233  392  997   54  363  725  543   860 #>  [132,]   41   66  931   77  229  597  658  737  834    54 #>  [133,]  464  457  283  962  286  529  497  781  530   572 #>  [134,]  350  490  593  927   11  961  632  518  388    18 #>  [135,]  842  620  930  850  907  900  389  213   90   985 #>  [136,]  637  341   73  878  636  124  768   51  342   503 #>  [137,]  639   10  334  114   92  296  307  862   60   733 #>  [138,]  262  484  992  513  565  833    9  379   43   855 #>  [139,]  398  592  785  309  781  546  889  460  174   530 #>  [140,]  643  917  266  537  331  683  297  929  802   276 #>  [141,]  584  547  771  458    6  868  571  178  745   728 #>  [142,]   70  695   19  897  579  156  750  146  295   274 #>  [143,]  232  227  769  780  955  151  661  577  893   410 #>  [144,]  829  234  877  708  690  886  775  481  228   909 #>  [145,]  277  213  276    7  850  925  389  297  808   628 #>  [146,]  156  579  480  453  702   19   70  731  872   108 #>  [147,]  865  924  701  539  468  994  194  931  622   312 #>  [148,]  568  318  798  338  282   89  935  163  964   504 #>  [149,]  621  352  992  789  652  119  633   12  484   876 #>  [150,]  474  103  689  215  966  342  807  428  332   499 #>  [151,]  769  287  508  239  921  642  260  955  780   680 #>  [152,]  886  505  380  730  603  193  856  912  175   978 #>  [153,]  516   64  591  344  914  699  999  630  586   958 #>  [154,]  968  321  418  293  895   63  763  552  952    98 #>  [155,]   17  884  391  533  977  406  709  349  754   703 #>  [156,]  579  146  453  731   90   19  620  693  702   135 #>  [157,]  427  523  127  512  396  248   87  718  666   138 #>  [158,]  884  551  263  391  567   29  368  624   17   765 #>  [159,]  985  930  400  901  900  702  876  741  168   633 #>  [160,]  906  401  753  652  570  425  126  445  837    49 #>  [161,]   86  883  335  749  104  777  994  613   47   360 #>  [162,]  680  435  239  455  393  151  642  947  327   780 #>  [163,]  798  991  979  429  353  568  788  456  148   610 #>  [164,]  544   36  716  964  368  650  158  889   17   884 #>  [165,]  245  488  746  377  106  197  257  715   23   910 #>  [166,]  974  271  890  256  494  272  366  704  434   915 #>  [167,]  252  519  460  188  549  736  761  308  540   846 #>  [168,]  901  633  191  159  400  985   12  707  489   149 #>  [169,]   33  583  187  569  281   20  559  795  371   908 #>  [170,]  330  806  384  727  676  407  541  709  383   960 #>  [171,]  981  887  998  327  285   85  432  618  822   326 #>  [172,]  276  213  567  297  145  850  389  907  918   882 #>  [173,]  948  704  596  494  256  687   48  817  711   324 #>  [174,]  546  325  757  460  549  365  556  736  592   889 #>  [175,]  199  886  399  856  394  877  234  730  440   823 #>  [176,]  667  967  725  198   32   77  809  298  233   501 #>  [177,]   16  671  374   33  313  623  284  871   55   868 #>  [178,]  451  468   25    6  584  589  771  141  571   527 #>  [179,]  240  819  515  417  398  572  781  663  776   283 #>  [180,]  722  532  289  319   88  843  609  746  810   692 #>  [181,]   72  875  231  967  700  114  307  661  362    32 #>  [182,]   62  103  807  689   83   95  104  206  150   477 #>  [183,]  716  184  863  650  669  525  403  723  964   889 #>  [184,]  403  525  669  183  650  415  441  417  716   819 #>  [185,]  397  564  112  835  109  880  922  522  203   337 #>  [186,]   23  409  257   71  817  980  794  580  885   559 #>  [187,]  908  583  169  486  615   20  485  487  689    33 #>  [188,]  846   25  540  460  335  167  761  527  549   194 #>  [189,]  739  722  180  445  609  319  810  352  370   205 #>  [190,]  278  894  903  954  287  291  605  976  112   399 #>  [191,]  433  859  168  489  537  226  929  237  557   707 #>  [192,]  574  993  645  514  939  711  959   22  821    97 #>  [193,]  295  505  603  730  978  117  380  729  152   570 #>  [194,]  527  924  540  761  335  572  460  776   47   188 #>  [195,]  100  202  502  593  632  350   67  315  608   465 #>  [196,]  301   88  375  843  289  599  524  587  564   532 #>  [197,]  422  969  416  556  245  165  524  599  509   595 #>  [198,]  362  725   32  452  855  875  224  649   56   220 #>  [199,]  175  334  570  394  440  753   79  877  862   401 #>  [200,]  661  102  905   72  448  181  469  717  875   943 #>  [201,]  937  305  888  475  766  918  953  246  854   219 #>  [202,]  608  195  100  421  465   67  726  382  629   315 #>  [203,]  522  246  397  922  835  299  854  763  690   185 #>  [204,]   61  361  360  783  972  879  563  793  664   560 #>  [205,]  794  682  745  281  722  377  728  746  638   125 #>  [206,]  123  104   95   83  613  597   15  275  363   921 #>  [207,]  987  880  735  679  478  835  467  209  219   953 #>  [208,]  217  741   10  631  876  120  789   57  882    58 #>  [209,]  701  622  385  478  865  987  207  921  751   109 #>  [210,]  843  336  919  940  289  932  910  554   28   746 #>  [211,]   45  331  105  140  863  836  683  531  356   470 #>  [212,]  610  555  890  557  648  857  979   65  770   788 #>  [213,]  850  276  297  389  145  172  907  842  620   277 #>  [214,]  923  304  455  507  646  393  895  251  144   552 #>  [215,]  474  966  499  485  799  559  450  187  980   332 #>  [216,]  816  395  815  282  580  456  340  252  353    53 #>  [217,]  208  741  631  876  400  808  587  901   57   106 #>  [218,]  694  283  359  497  286  464  133  530  625   669 #>  [219,]  782  461  698  679  457  937  475  305  524   207 #>  [220,]  379  452  526  938  130  855  125  686  825   198 #>  [221,]  996  575  408  614  517  747  871   96  498   738 #>  [222,]  333  490  961  466  957  388  518  447  554    11 #>  [223,]  420  430  727  960  840  172  676  709  907   567 #>  [224,]  649  833  855    9  787  514  390   79  959   440 #>  [225,]  115   18  311  694  502  286  836  464  350   530 #>  [226,]  929   40  537  237  719  859  760  433  956   773 #>  [227,]  769  469  577  661  259  232  143  410  780   362 #>  [228,]  491  112  234  877  708  109   27  378  481   775 #>  [229,]  737   77  410  275  983  132  658   54  363   597 #>  [230,]  600  412  743  486  122    1  236   93  265   617 #>  [231,]   32  444  362  501  440  649  198   79  767   954 #>  [232,]  143  227  769  780  469  259  661  151  577   260 #>  [233,]  131  612   54  725  298  288   77  667  500   312 #>  [234,]  708  228  877  112  144  886  481  856  397   185 #>  [235,]  913  553  510  482  359  891  552  947  435    39 #>  [236,]  322  578  866  600  805  803  320  605  399   894 #>  [237,]  329  665  760  797   57  901    7  226  631   808 #>  [238,]  648  590  885  853  557  936   71  660  677   496 #>  [239,]  642  680  435  508  317  947  151  242  209   701 #>  [240,]  819  417  179  283  441  515  663  471  398   309 #>  [241,]  867  473  799  963  370  485  911  411  739   189 #>  [242,]  883  529  749  421  994  515  987  508  249   735 #>  [243,]  618  981  976   61   69  664  779  605  887   879 #>  [244,]  766  937  953  475  201  851  435  668  713   305 #>  [245,]  165  280  757  197  969  488   23  458  416   540 #>  [246,]  203  854  522  763  922  461  475  888  201   835 #>  [247,]  684  844  617  302  602  651  903  795  399   619 #>  [248,]  523  686  396  873  379  526  826  125  849   220 #>  [249,]  891  749  529  359   39  883  242  465  629   133 #>  [250,]  831   76  389  882  763  299  850  854  246   522 #>  [251,]  144  507  829  909  775  214  690  455    2   113 #>  [252,]  519  167  308  504  340  549  188  816  110   456 #>  [253,]  414  386  657  580  821  125  543   23  280   340 #>  [254,]  837  483  978  425  906  108  193  160  295   729 #>  [255,]  840  709  535  533  697  668  713  806  727    29 #>  [256,]  974  817   99  186  173  494  538  409  257   433 #>  [257,]   23  186  794  165  817  715  746  377   71   692 #>  [258,]  594  936  528  585  498  963  590  810  189    71 #>  [259,]  469  444  954  287  227  780  190  501  231   362 #>  [260,]   38  151  123  675  769  410  292  577  469   921 #>  [261,]   13  553  304  552  516  214   63  629  235   202 #>  [262,]   43  138    9  833  992   92  649  855  224    60 #>  [263,]   22  391  376  812  158  884   82  645   97   551 #>  [264,]  696  805  578  706  548  864  627  764  606   534 #>  [265,]  319  656  654  722  619  445  402  548  532   126 #>  [266,]  917  628  388  683  140  927  869  640  277   982 #>  [267,]  702  159  772  930  985  296  876  900  536   741 #>  [268,]  685  492 1000  662  672  271  494  604   99   306 #>  [269,]  437  338  308  345   89    4  941  519  423   568 #>  [270,]  827  111  314  300  322  326  369  618  320   116 #>  [271,]  704  494  433  256  974  173  191  355   99   687 #>  [272,]  915  991  674  163  538  798  353  979  704   282 #>  [273,]  148  786  338  318  355   36  568  798  544   454 #>  [274,]  695  845  707  159   49   78  425  693  633    12 #>  [275,]  363  737  410  229  921  147  622  983  634   577 #>  [276,]  213  172  297  145  567  850  277    7  643   389 #>  [277,]  145  847  373  213  620  388  628  276  925   850 #>  [278,]  190  894  903   69  954  605  247  976  432   291 #>  [279,]  573  413  549  828  673  757  759  558   16   280 #>  [280,]  757  245   23  828  759  540  279  736  413   623 #>  [281,]  745   33  682  205  771  868  794  795  141   656 #>  [282,]  933  340  216  705  429  252  148  786  338   736 #>  [283,]  133  240  464  286  218  179  694  819  457   497 #>  [284,]   96   81  871  747  479  534  177  800  972   996 #>  [285,]  887  316  664   85  822  243  432  588   61   981 #>  [286,]  464  133  283  457  694  100  115  530  497   225 #>  [287,]  903  337  921  190  151  491   27  209  278   385 #>  [288,]  392  131  612  997  657  950  543   54  233   832 #>  [289,]  843   88  746  728  682  180  336  377  722   210 #>  [290,]  681  762  962  804  560  479   67  558  800   472 #>  [291,]  605  976  326  481  337  112  399  185  856   190 #>  [292,]   38  300  369  260  469  432  822  887  316   710 #>  [293,]  321  766  154  475  952  968  937  201  698   670 #>  [294,]  869  859    3  520  537  839   90  140  707   929 #>  [295,]  193  117  603  505  978  730   78  380  731   587 #>  [296,]   10  121  872  330  208  137  108  741  876   702 #>  [297,]  276  213  643  172  850  145  620  277  842   907 #>  [298,]  233   77   54  725  977  406  667  176  658   132 #>  [299,]  522   58  872  203  397  854   76  250  708   690 #>  [300,]  369  292   38  432  469  259  894  944  190   887 #>  [301,]  196   88  969  868  336  560  843  289  524   479 #>  [302,]  823  803  844  399  375  866  619   21  247   856 #>  [303,]  408   31  562  659  357  864  627  706  534    96 #>  [304,]  923  646   35   63  214  895  552  348  507   763 #>  [305,]  201  918  937  766  475  888  219  953   29   572 #>  [306,]  965  685  492  604  687  355  760   74  237   902 #>  [307,]  114  639  137   92  733  951  700  334   43   310 #>  [308,]  519  504  437  252  309  167  592  785   89   139 #>  [309,]  785  781  398  139  592  308  460  874  179   519 #>  [310,]   43  753  718  262  561  401  334   87  394   440 #>  [311,]  914  115   18  225  351  593  502  350  836    64 #>  [312,]  732  703  539  834   54  107  924   46  761   147 #>  [313,]  721  374  177  926  820   59  738  946  671   871 #>  [314,]  320  827  111  236  270  322  578  600  729   743 #>  [315,]  461  382  698  782  763  796  195  502  847   632 #>  [316,]  588  664  285  887   15  822  898  432  360   892 #>  [317,]  642   66  239  613  680  947  931  515  508    41 #>  [318,]  568  148  798  935   89  163   68  338   36   504 #>  [319,]  722  180  265  534  810   81   88  289  682   532 #>  [320,]  578  236  805  314  322  122  743  264  696    84 #>  [321,]  293  154  968  895  766  475  763  552  244   952 #>  [322,]  236  578  605  976  805  866  618  827  894   803 #>  [323,]  111  152  829  886  909  144  348  978  827   505 #>  [324,]  376  812  340  736  933  543  423  732  107   582 #>  [325,]  416  365  540  460  969  546  762  413  174   962 #>  [326,]  291  976  605  481  618  322  337  894  190   243 #>  [327,]   85  998  675  848  881  508  680  629   39   545 #>  [328,]  989  804  962  874  777  511  424  290  381   133 #>  [329,]  665   57  438  237  631  797  119  106  901   760 #>  [330,]  296  121   10  170  676  536  137  872  882   960 #>  [331,]  802  140  929  956  917  555  211  537  813   683 #>  [332,]  975  815  816  395  832  499   24  216  673   474 #>  [333,]  222  466  498  961  554  659  957  446  518   607 #>  [334,]  753  862  401   79  394  440   60  199  570   137 #>  [335,]   86  777  188  846   47  194   25  161  468   110 #>  [336,]  843  289  210   88  623  746  301  682  868   969 #>  [337,]  291  287  112  185  109  481  903  835  775   228 #>  [338,]  786  437  423  576  148  568  964  933  269   308 #>  [339,]  720  614  945  118  857  790  904  648  221    26 #>  [340,]  736  429  933  324  816  282  280  167  414   252 #>  [341,]   73  768  637  636  124  136  742  878  818   721 #>  [342,]  428  150  637  474  136  215  187  583   51   689 #>  [343,]  950  824  832   95   24  838  392  288   54   941 #>  [344,]  630  516  586  942  490   63  350  134   35   153 #>  [345,]   42  437  269  282  252  216  815   14    4   519 #>  [346,]  359  405  644  891  625  249  913  218   44    39 #>  [347,]   75  960  430  620  907  758  850  801  676   135 #>  [348,]  764  152  646  111  505  912  886  304  323   923 #>  [349,]   17  155  754  884  709  164  158  544  965   420 #>  [350,]  593  502   18  134  115  632  195  927  847   315 #>  [351,]  531  989  105  774  470  311  920  497  530   836 #>  [352,]  621  149  739  512  484  652  992   12  633   189 #>  [353,]  538  580  991  429  979  456   53  216  340   817 #>  [354,]    3  191  168  707  294  859  839  433  271  1000 #>  [355,]  704  687  719  544  431  965   40  306  226   173 #>  [356,]   45  211  716  935   36  544  863  778  889   183 #>  [357,]  606  742  303  706  408   31  696  402  548   264 #>  [358,]  959  787   46  860  812  458  589  488   56   543 #>  [359,]  891  249  218  529  283   39  465  286  913   749 #>  [360,]   15  588  204   91  664  563   61  994  571   892 #>  [361,]  569  204   61  986  972  870  374  892  820   793 #>  [362,]  198   32  231  954  452  501  767  102  444   875 #>  [363,]  275  634  131  737  997  288  130  983  451   725 #>  [364,]  801  418   75  968  154  347  516   98  430   630 #>  [365,]  325  416  595  546  556  472  640  197  174   969 #>  [366,]  911  450  799  434  966  409  499  974  873   256 #>  [367,]  550  655    5  738  611  740  996  575  712    50 #>  [368,]  431  376  719  158  582  263  884  812  736   164 #>  [369,]  300  292  469   38   93  259  432  894  779   448 #>  [370,]  411  963  402  189   34  635  739  867  445   265 #>  [371,]  892  795   69  617  844  771  664   33  247   651 #>  [372,]  170  383  951  700  114  639  307  137  330   384 #>  [373,]  847  277  453  388  796  925   98  628  134   490 #>  [374,]  820   59  970  177  313  569  361  926  972   986 #>  [375,]  532   21  638  934  302  823  619  196   88   289 #>  [376,]  812  263  582  324   48  107  358  438  391   368 #>  [377,]  728  746  488  692  462  682  289  843  794   165 #>  [378,]  708   27  491  228  877  109  751  390  862    58 #>  [379,]  220  125  855  452  138    9  565  938  523   526 #>  [380,]  730  603  823  912  505  856  152  117  886   404 #>  [381,]  726  611  804  740  800    5  655  989  972   465 #>  [382,]  782  461  796  315  698   67  632  219  246   195 #>  [383,]  951  114  700  967  733   92  406  407  806   176 #>  [384,]  541  170  727  960    2  330  676  420  223   840 #>  [385,]  751  209   27  688  109  478  896  701  851   893 #>  [386,]  589  253  451  543  860  584  825  178  414   358 #>  [387,]  129  535   66  697  642  668  701  713  931   809 #>  [388,]  628  925  518  266  373  277  640  509  917   554 #>  [389,]  850  882  831  907  213  620  250  842  145   276 #>  [390,]  495  602  784  478   27  787  751  514   56   467 #>  [391,]  884  263   22  812  703  645  158  376  155    46 #>  [392,]  288  657  131  997  832  950  612  543  825   451 #>  [393,]  455  507  337  775  481  162  435  944  553   421 #>  [394,]   79  440   21  561  862  334  401  570  753   375 #>  [395,]  816  216  815   53  499  580  456  332  436   759 #>  [396,]  686  248  873  523  526  157  826  379  419   220 #>  [397,]  522  185  564  203  112  109  299  922   58   835 #>  [398,]  592  139  309  785  781  179  572  546  460   776 #>  [399,]  856  302  605  112  564  866  684  291  803   175 #>  [400,]  901  691  985  808  900  217  159  930  106   631 #>  [401,]  753  570  652  160  561  334  126  934  654   906 #>  [402,]  635  606   34  265  370  534  319  411  548   581 #>  [403,]  184  650  525  415  670  723  778  669  852   863 #>  [404,]  912  856  380  564  302  196  823  803  399   476 #>  [405,]  755  663  506  511  625  874  346  749  161   104 #>  [406,]  990  500  155  192  391  645  725   22  993   711 #>  [407,]  604   97  939   10   57  574   60  645  789   192 #>  [408,]  303   96   31  221  996  534  659  284  747   443 #>  [409,]  186  434  980   71  580  799  559  538   23   256 #>  [410,]  577  275  229  983  737  363  921  123  260   769 #>  [411,]  370  963  402  635  189   30   34  739  445   265 #>  [412,]  230  615  743  486    1  826  122  600  448    87 #>  [413,]  279  573  828  757  558   16  623  549  325   416 #>  [414,]  657  253  543  821  386  596  340  392  938   580 #>  [415,]  778  403  184  525  650  716  952  183  840   670 #>  [416,]  325  969  595  365  197  472  623  413  762    16 #>  [417,]  819  240  179  515  441  101  283  678  650   471 #>  [418,]  154  968  630   63   98  364  516  321   35    75 #>  [419,]  724  513  938  711  993   37  672  379  138   596 #>  [420,]  223  727   74  960  430  676  349  709  758   840 #>  [421,]  608  202  629  242  880  783  735  987  998   563 #>  [422,]  599  524  197  969  744  509  797  918  631   488 #>  [423,]  933  576  732  324  312  107  964  338  786   736 #>  [424,]  986  814  752  511  328  550  756    5  820   970 #>  [425,]  906  160  483   78  254  845  108   49  695   837 #>  [426,]  731  447  912  505  380  404  587  117  566   295 #>  [427,]  157  127   72  310  748  396  718  523  666    43 #>  [428,]  342  150  187  503  474  908  689  826  103   807 #>  [429,]  736  340  353  280  456  817  757   23  431   773 #>  [430,]   75  223  960  347  172  952  907  850  297   293 #>  [431,]  773  719  368  521  736   40  429  956  376   817 #>  [432,]  887  779  664  618  894  278   38  588  316   190 #>  [433,]  191  557  226  704  817  271  929  885  237   256 #>  [434,]  409  450  911   71  186  974  538  885  256   366 #>  [435,]  239  642  947  510  735  680  835  242  162   244 #>  [436,]   53  456  395   55  759  450  128  636  818   409 #>  [437,]  269  308  338   89  519  345  568  252  423   504 #>  [438,]   48  665  329  488  574  462   57  376  797   263 #>  [439,]  897   70   35  646  480  505  146  447  426   348 #>  [440,]   79  394  649  862  334  224  444  231  833    21 #>  [441,]  819  240  471  417  184  669  625  283  525   179 #>  [442,]  926  946  970  721  714   55  313   59  820   573 #>  [443,]  446  800  593  957   11  518  517  134  747   961 #>  [444,]  231  440  259   32  767  954  501  491   79   877 #>  [445,]  654  126  609  265  739  189  722   49  561   532 #>  [446,]   11  957  961  517  518  443  904  496  134   747 #>  [447,]  426  731  453  912  373  932  562  222  156   566 #>  [448,]   93  487  767  412  230  477  779  486  905   954 #>  [449,]  659  528  357  303  258  614  408  963  402    30 #>  [450,]  499  436  434  409  395   53  215  580  366   911 #>  [451,]  178  589  468   25  860    6  386  584  825    56 #>  [452,]  220  855  130  379  198  849  526  224  651   649 #>  [453,]  156   98  373  620  579  731  447  146  277    76 #>  [454,]  355  273  704   40  544   36  271  719  798   935 #>  [455,]  393  507  944  162  214  775  481  337  435   553 #>  [456,]   53  759  816  436  395  279  429  216  252   353 #>  [457,]  133  464  572  219  286  962  679  698  305   937 #>  [458,]  584  488  141  358  728  547  959  377  969   462 #>  [459,]  110    4  814  752  970  519  777   86  874   815 #>  [460,]  540  761  188  527  167  592  325  549  785   781 #>  [461,]  782  698  382  315  219  796  246  475   67   632 #>  [462,]  488  377  728  631  934  458  692  514  438   746 #>  [463,]  840  709  977  255  727  155  535  806  533   697 #>  [464,]  286  133  457  283  100  694  530  497  962   115 #>  [465,]  100  726  195  202  249  464  286  891  608   381 #>  [466,]  333  498  607  594  222  554  528  693  853   869 #>  [467,]  784  744  495   82  679  865  478  547  524   888 #>  [468,]   25  178  451    6  188  846  147  838  589   194 #>  [469,]  259  227  661  577  292  260   38  369  954   362 #>  [470,]  105  531  351  497  694  530  836   45  225   211 #>  [471,]  441  819  240  947  417  663  515  510  529   317 #>  [472,]  632  595  416  640  365  796   67  782  681   800 #>  [473,]  241  867  936  489   71  434  974  258  911   963 #>  [474,]  215  966  499  150  332  187  908  485  689   103 #>  [475,]  937  201  766  305  698  219  246  461  953   735 #>  [476,]  864   31  404  764  706  264  696  912  879   578 #>  [477,]  807  905  928  487  634  448  717  908  588   316 #>  [478,]  109   27  751  784  684  209  602  491  467   390 #>  [479,]  560  800  681  290  284   67  301   81   94   972 #>  [480,]  146  872  108  978  156  299  439  646  536   295 #>  [481,]  291  326  234  228  112  337  605  976  775   185 #>  [482,]  913   39  235  881  891  553  359  510  249   680 #>  [483,]  425  254  906  837  160  108  748  772  753   401 #>  [484,]  992  565  138  352  513  149  833  119  652   574 #>  [485,]  799  867  615  980  215  248  826  523  559   187 #>  [486,]  615    1  122  412  230  187   34  548  743   265 #>  [487,]  908  905  928  849    1  448  486  477  651   634 #>  [488,]  462  458  377  165  728  438  358  746  959   245 #>  [489,]  936   99  885   71  257  715  191  168  919   707 #>  [490,]  134  927  961  222  373   11  388  982  266   350 #>  [491,]   27  109  228  112  378  478  903  684  751   390 #>  [492,]  306  685  965  604  268  902  168  839  985   407 #>  [493,]  348  323  111  439  899  270  897  314  764   152 #>  [494,]  948  173  672  256  271  711  596  704  724   974 #>  [495,]  784  467  751  390  861   56  713  809   46    82 #>  [496,]  904  517  653  957  677  554  518   11  446   774 #>  [497,]  530  694  546  464  133  283  531  286  785   218 #>  [498,]  466  333  554  594  590  853  496  528  659   957 #>  [499,]  395  215  966  450  332  580  816  474  559   815 #>  [500,]  711  938  596  543  821  192  993  406  724   725 #>  [501,]   32  688  893  231  598   27  444  491  362   896 #>  [502,]  115  350   18  593  195  632  315  134  100   225 #>  [503,]   51  124  357  606  615  187   84   34  428   742 #>  [504,]  308  519  252  167  549  174  568  736  309   785 #>  [505,]  152  193  380  603  730  912  295  886  897   426 #>  [506,]  941  755    4   83  663  405  597   41  104    47 #>  [507,]  775  922  895  690  835  203  393  552  455   185 #>  [508,]  239  921  151  642  675  680  123  613  317   242 #>  [509,]  808  940  925  106  631  910  628    7  422   197 #>  [510,]  947  435  515  129  471  244  529  417  235   239 #>  [511,]  328  424  874  989   44  405  777  804  644   814 #>  [512,]  739  352  718   87  621  992  652  138  484   160 #>  [513,]  138  821  565  484  711  724  993  419  574   379 #>  [514,]  645   97  959  939   22  787  192  574  358   390 #>  [515,]  179  417  953  529  240  947  242  701  317   819 #>  [516,]  344  630  418   63  153  968  154   35   18   502 #>  [517,]  496  957  747  446  904  653  518   11  554   800 #>  [518,]  957  554  388   11  517  496  446  961  134   595 #>  [519,]  252  308  167  504  110  549  309  188  460   785 #>  [520,]  869  294   26   90  466  222  333  266  917   607 #>  [521,]  770  956  773  813  802  542  431   40  719   174 #>  [522,]  203  397  299  246  854  922   58  185  835   708 #>  [523,]  248  686  379  396   87  849  157  125  826   485 #>  [524,]  599  422  744  969  467  219  679  197  301   458 #>  [525,]  669  184  852  403  183  863  441  778  415   723 #>  [526,]  220  686  452  379  717  875  938  997   37   396 #>  [527,]  540  761  924  194  460  539  107  776  188   582 #>  [528,]  659  594  581  498  258  466   28  562  333   932 #>  [529,]  749  883  242  249  515  133  283  663   39   947 #>  [530,]  497  694  546  723  464  531  139  286  133   283 #>  [531,]  351  105  530  546  365  497  470  683  640   774 #>  [532,]  375   21  180  722  638  619  934  654  823   289 #>  [533,]   29  765  713  535  709  697  255  101  840   884 #>  [534,]   81  319   96  548  284  566  402  581  265   606 #>  [535,]  697  713  533  255  668  809  896  387  709   765 #>  [536,]  330  296  480  772  872  108  121  146  702   639 #>  [537,]  859  929  226  140  917  869  802    7  294   691 #>  [538,]  353  580  991  979  429  409  817  256  186   456 #>  [539,]  924  761  732  107  312  527   46  147  776   589 #>  [540,]  527  460  761  188  846  325  828  194   25   178 #>  [541,]    2  727  384  113  840  255  330  223  170   709 #>  [542,]  813  677  521  757  802  660  245  956  197   174 #>  [543,]  860  589  821  386  358  414  657  938   46   787 #>  [544,]   36  164  719  368  935  355  716  431   40   964 #>  [545,]  123  675  971   83  613  508  206  317  104   260 #>  [546,]  365  530  139  785  174  325  556  592  398   497 #>  [547,]  141  584    6  865  571  784  467  458  602   771 #>  [548,]  606  534  805   81  265  264  803   34  696   122 #>  [549,]  279  413  167  460  188  558  777  757  846   325 #>  [550,]    5  367  424  986  820  721  655  611  740   738 #>  [551,]  624  158  567  263   82  797  918  120   29   882 #>  [552,]  895  553  507  321  315  421  835   63  763   435 #>  [553,]  629  552  421  235  393  891  202  435  249    39 #>  [554,]  518  957  496  210  853  498  517  940  388   628 #>  [555,]  331  648  212  929  859  802    3  238  537   853 #>  [556,]  197  365  640  683  813  546  325  416  174   422 #>  [557,]  885  433  890  238  979  991  648  817  191   489 #>  [558,]  413   16  762  279  573  828  623  549  926   970 #>  [559,]  980  759  794   33  281  169   55  253  186   205 #>  [560,]   94  681  479   67  290  563  301  868  571   762 #>  [561,]  126  654   21  394  401  570  753  619  656   532 #>  [562,]  627  581  566  303  641  408  447  912  603   528 #>  [563,]   94   91  560  571  547  987  622  247  360   994 #>  [564,]  397  185  112  856  399  684  109  302   94   522 #>  [565,]  484  125  821  513  138  833  377  574  379   205 #>  [566,]  581  609  117   28  932  534  180  603  532   587 #>  [567,]  276  172  551  158  918  213  797  760  145     7 #>  [568,]  148  318   89  798  338  504  308  935  163   437 #>  [569,]  870  361  374   59   20  892  169  583  313   820 #>  [570,]  126  401  561  654  730  823  160  753   21   117 #>  [571,]  771    6   91  141  547  178  563  795  584   868 #>  [572,]  776  457  924  194  679  592  527  744  398   179 #>  [573,]  279  413  759   16  757  558  623  828   55   673 #>  [574,]  192  939  993  514  645  438  821   97  959    48 #>  [575,]  996  738  221  655  871  946  747  740  653   517 #>  [576,]  423  964  338  786  977  678  834  703  312   164 #>  [577,]  410  983  227  275  260  469  229  601  737   363 #>  [578,]  805  322  236  264  696  320  866  803  764   976 #>  [579,]  156  146   19  453   90  702  135  750  693   620 #>  [580,]  353  538  816  253  395  414  340  216  409   186 #>  [581,]  566  609   28  562  534  932  627  402  117   528 #>  [582,]  107  761  812  376  527  539  924  460  592   744 #>  [583,]   20  169  187  569   59  689  870  721  637    33 #>  [584,]  141  547  458    6  178  771  451  868  571   602 #>  [585,]  810  671  660  336  919  210  319   96  594   180 #>  [586,]  942   50  344  443  593  311  446  591  350   961 #>  [587,]  117  731  375  217  932   78  934  532  196   609 #>  [588,]   15  664  360  316  892  432   91  887  371    69 #>  [589,]  860  451   46  543  178   56  386  358  732   539 #>  [590,]  853  660  238  936  648  677  496  554  498   585 #>  [591,]  699   64  914  586  153  836  311  942  999   982 #>  [592,]  398  139  785  460  781  309  572  582  107   546 #>  [593,]  350  134  632  502  195  115   18  443   11   472 #>  [594,]   28  258  528  498  919  932  585  607  936   466 #>  [595,]  416  472  365  677  969  623  336  920  197   653 #>  [596,]  948  500  711  657  414  938  724  173  705   821 #>  [597,]  931   41  838   47  147  132  613   66  312   737 #>  [598,]  896  495  809  861  390  501  751   32  688   378 #>  [599,]  422  524  854  744  196  969  197  918  462   509 #>  [600,]  230  236  866  743  803  122  617  619  805   561 #>  [601,]  983  612  102  229  949  577  363  997  233   131 #>  [602,]  622   56    6  478  390  684  547  247  787   584 #>  [603,]  730  380  117  193  823  505  295  566  152   912 #>  [604,]  407  685   57  965  939  574  687   97  192   789 #>  [605,]  976  291  399  322  326  856  894  866  618   278 #>  [606,]  635  402  548   34  357  534  264  265  743   696 #>  [607,]  691  466  693  707  594  853  869   90  554   400 #>  [608,]  202  421   67  100  195   94  783  382  560   879 #>  [609,]  445  117  566  180  581   28  532  722  654   126 #>  [610,]  212  788  770  979  163  991  521  798  557   555 #>  [611,]    5  381  740  655  793  367  726  972   50   738 #>  [612,]  131  288  997  233  392   54  950  601  363   657 #>  [613,]  994  883  123  104  317  161  508  597  206    47 #>  [614,]  659  221  408  498  303  333  996  446  575   339 #>  [615,]  486   34  412    1  485  187  743  635  826   265 #>  [616,]  824   54  343  132  941  950  229  269  597    41 #>  [617,]  844  619  247  651  803  656  866  302  795   371 #>  [618,]  976  243  981  779  326  605  894  322  432   291 #>  [619,]  656   21  638  617  844  532  302  654  375   265 #>  [620,]  850  389  213  135  277  831  842  907  297    98 #>  [621,]  352  149   12  633  652  992  739  119  512   789 #>  [622,]   91  602  209  903  921    6  865  478  994   547 #>  [623,]   16  413  828  336  757  573  416  677  595   558 #>  [624,]  551  120   82  861   29   97  918   22  158   263 #>  [625,]  441   52  984  218  819  471  240  663  669   405 #>  [626,]  641  303  562  858  659  627   31  942  408   447 #>  [627,]  562  858  581  264  603  566  729  303  635   764 #>  [628,]  388  925  509  266  808  940  917  277  145   691 #>  [629,]  998  421  783  553   85  202  608  879  249   242 #>  [630,]  344  516   98   63  847  373  418  490  453   350 #>  [631,]  106  808  329  509  217  797   57  910  462   119 #>  [632,]  472  796  593  350  782  382  195  134  640   461 #>  [633,]   12  621  149  352  168  845  901  159  652   119 #>  [634,]  928  363  130  905  717  825  997  452  275   362 #>  [635,]  606  402  743   30   34  265  548  370  411   615 #>  [636,]  768  637  341   73  818   55  436  124  878   721 #>  [637,]  341  636  878  136  768  124  583   73  721    51 #>  [638,]  619   21  656  532  728  375  745  722   88   934 #>  [639,]  137  772  307  334  114  296  108  199   10    92 #>  [640,]  683  556  472  388  632  365  197  595  813   796 #>  [641,]  626  562  897  447  627  764  858  899  426   303 #>  [642,]  239  317  680  435  701  508  947  209  151   387 #>  [643,]  297  140  276  842  213  145    7  135  172   917 #>  [644,]   44  346  511  405   80  625  984  218  328   874 #>  [645,]   22   97  514  192  959  263  574  358  391   787 #>  [646,]  923  304   35   63  439  690  348  480  895   144 #>  [647,]   84  898  779  981  122  320  887  822  710   664 #>  [648,]  238  853  590  885  557  555  904  496  677   660 #>  [649,]  224  855    9  833   79  440   92  262  787   514 #>  [650,]  678  101  716  403  184  183  765  417  164   723 #>  [651,]  617  849    1  745  130  656  619  247  844   795 #>  [652,]  401  621  149  934  992  160  789  352  753    60 #>  [653,]  774  920  496  904  517  677  595  747  957    11 #>  [654,]  126  561  445   21  532  265  722  619  570   656 #>  [655,]  740  575  738  367   50    5  714  611  381   996 #>  [656,]  619  638   21  617  265  722  844  745  532   654 #>  [657,]  414  392  253  543  288  938  596  386  705   821 #>  [658,]   77  132  229  955   66  737  387  298  931    41 #>  [659,]  528  614  408  303  498  333  221  562  466   449 #>  [660,]  677  590  919  336  810  585  715  210  165   623 #>  [661,]  227  469  362  102  577  259  181  200  231   232 #>  [662,]  672  666  419  724  513  494 1000   99  138   157 #>  [663,]   47  179  240  874  819  781  529  161  309   515 #>  [664,]  588  316  892  887   69   15  285  360  432   243 #>  [665,]  329  438  797  237   48   57  687  760  376   263 #>  [666,]  662  672  157 1000  512  241   99  127  352    12 #>  [667,]  176   37  725  233  198  875  102  131  612   967 #>  [668,]  896  851  535  697  713  688  255  893  751   385 #>  [669,]  525  852  184  183  441  403  863  218  723   819 #>  [670,]  723  863  766  403  852  530  716  305  889   650 #>  [671,]  177  818   55  585  623   16  810  946  313   871 #>  [672,]  662  494  724  419  666  948  513   99 1000   711 #>  [673,]  279  828  846  759  975  573  970  413  188    16 #>  [674,]  915   14  353  216  395  538  456  128  436   163 #>  [675,]   85  327  508  545  123   15  260  998   38   971 #>  [676,]  907  960  882  389  850  842  330  296  551   213 #>  [677,]  660  496  653  595  542  623  904  336  590   517 #>  [678,]  834  101  650  765  417  977  179  931  703   398 #>  [679,]  207  987  219  735  467  880  865  776  784   572 #>  [680,]  239  642  317  947  508  435  162  151  955   242 #>  [681,]  290  762  560   67  962  479  416   94  301   868 #>  [682,]  746  728  289   88  794  205  745  281  377   843 #>  [683,]  640  813  917  556  266  802  956  388  140   197 #>  [684,]  247  478  903  602  564  112  109  399  302   491 #>  [685,]  965  604  306  492  407  687  990  268  754    57 #>  [686,]  248  523  396  526  379  220  849  905  452   873 #>  [687,]  665   48  438  604  329  173  948  711  237   376 #>  [688,]  893  385  896  501  751  668   27  598  851   809 #>  [689,]  103   20  583  807  870  908  187  169  332   474 #>  [690,]  203  299  522  922  507  775  708  872  144   121 #>  [691,]  940  607  400  910  808  715  509  693  106   628 #>  [692,]  910  715  119  746  106  377  919  843  289   728 #>  [693,]   78  607  691   90   28  932  400  695  587   628 #>  [694,]  497  530  218  286  464  283  225  723  133   470 #>  [695,]  274  845   78  693  425   49  159  702  579   142 #>  [696,]  264  706  805  864  578  548   84   31  122   606 #>  [697,]  535  809  713  533  668  896  255  387  861   495 #>  [698,]  461  782  219  315  382  475  796  246  937   632 #>  [699,]  591  914   64  836  311  982  586  999  153   927 #>  [700,]  114  967  383  951   92  231   32  307  501   598 #>  [701,]  209  147  865  385  931  495  953  642  713   751 #>  [702,]  930  159  579  267  985  146  156  876  741   900 #>  [703,]  312  732   46  391  834  812  539  107  924   860 #>  [704,]  173  271  433  355  773  256  431  817  687   494 #>  [705,]  988  933  786  282  596  657  340  324  414   950 #>  [706,]  696  864  264   31  578  476  805  357  303   858 #>  [707,]  607  168  691  274  489  859  191  466  869   936 #>  [708,]  234  378  877  228  121   58  397  299  522   112 #>  [709,]  840  255  533  727  806   17  535   29  155   697 #>  [710,]  943  822  292  898  647   38  316  477  887   369 #>  [711,]  500  821  192  948  596  513  724  993  574   938 #>  [712,]  995  714  655  367   50  550    5  442  575   790 #>  [713,]   29  697  535  533  861  765  953  495  896   101 #>  [714,]  995  655  946  442  989  774  920  712  790   926 #>  [715,]  910  919  106  692  940  119  746  691  165   843 #>  [716,]  183  164  650  863  889  670  723  778   36   964 #>  [717,]  905  997  634  102  526  928  220  452  363   130 #>  [718,]   87  512  126  310  561  753  654  739  160   445 #>  [719,]   40  431  773  368  544  956  521  226  935   770 #>  [720,]  339   26  614  333  498  466  659  945  792   520 #>  [721,]  313   59  926  820  374  442  738  946  878   970 #>  [722,]  180  532  319  638  289  205  656  265  654   682 #>  [723,]  670  863  530  852  403  694  283  766  889   716 #>  [724,]  419  711  513  938  596  500  948  993  672   821 #>  [725,]  198  233  131   56  787  860  703  809  667   737 #>  [726,]  381  465  100  195  804  202  611  608  783   593 #>  [727,]  840  709  223  255  420  806  541  170  533   676 #>  [728,]  377  746  289  682   88  843  638  488  462   458 #>  [729,]  193  603  899  505  837  730  152  295  627   978 #>  [730,]  380  603  823  117  570  193  152  505  886   856 #>  [731,]  426  447  587  932  453  156  373  117  912   295 #>  [732,]  312  539  761  107  703  589   46  924  423   812 #>  [733,]  951   92  114  262    9  307   43  993  383    60 #>  [734,]  758   74  643  140  356  211  331  297  929   839 #>  [735,]  880  207  987  835  679  937  953  922  475   219 #>  [736,]  429  340  167  324  280  582  174  107  757   431 #>  [737,]  275  229   77  363  410  931  725  147  132   809 #>  [738,]  996  740  575  871  313  655  820  367  946   747 #>  [739,]  189  512  352  445   87  654  722  718  621   126 #>  [740,]  871  972  738  820  655  996  800  611  381     5 #>  [741,]  876  789  217  208  901   57  149  400  159   930 #>  [742,]  124  357  313  996   96  738   34  221  671   606 #>  [743,]  122  230  635  412  600  486  615  606  548   805 #>  [744,]  524  467   82  422  776  784  918  599  527   924 #>  [745,]  281  682  205  638  728  656  651  771  141   794 #>  [746,]  377  843  289  728  682  692   88  336  165   919 #>  [747,]  871  517  800   96  284  653  996  957  496   479 #>  [748,]  483  837  718  310  906  160  512  127  427   254 #>  [749,]  883  529  249  242  161   39  613  663  994   783 #>  [750,]   19  579  453  156  146   70   90  142   98   620 #>  [751,]  385   27  478  495  896  109  861  784  390   851 #>  [752,]  814   59  970  986  374  424  820  870   86   569 #>  [753,]  401  334  561  160  652  570   43  126  394   310 #>  [754,]  990   17  349  155  965  406  884  685  604   407 #>  [755,]   52  506  405  625    4  471  663  941  441   346 #>  [756,]  793    5  986  783  879  424  611  550  972    61 #>  [757,]  280  413  245  279  828  623  573  174   16   540 #>  [758,]   74  960  420  347  902  734   75  430  643   223 #>  [759,]  279  673   53  573   55  828  280  559  456   757 #>  [760,]  237    7  797  329  665   57  900  551  808   567 #>  [761,]  539  107  527  460  540  924  732  582  188   194 #>  [762,]  290  681  962  558  325  416  560   16  804   846 #>  [763,]   76  246  203  315  250  895  461  698  831   854 #>  [764,]  348  912  578  476  264  322  505  152  404   380 #>  [765,]   29  101  533  713  305  678   82  834  953   918 #>  [766,]  475  937  201  305  244  293  953  670  918   888 #>  [767,]  954   93  444  190  651  617  894  278  849   362 #>  [768,]  636   73  818  341  124   55  637  671  313   721 #>  [769,]  151  227  955  780  260  410  143  287  577   232 #>  [770,]  521  773  956  802  788   40  542  813  431   174 #>  [771,]  571    6  141  795  584  868  281  178  745   547 #>  [772,]  639  108  137  296  536  483  267  702  330   425 #>  [773,]  431  521  770   40  719  956  798  429  817   226 #>  [774,]  920  653  904  496  517   11  351  595  446   118 #>  [775,]  922  507  835  228  185  690  234  109  851   112 #>  [776,]  572  924  744  527  539  194  107  679  865   582 #>  [777,]  335  874  110   86  188  549  781  846  161   962 #>  [778,]  415  403  863  716  670  852  525  184  723   183 #>  [779,]  894  618  432   69  243  278  664  976  887    93 #>  [780,]  893  769  259  151  287  688  501  227  232   944 #>  [781,]  785  309  398  592  139  460  777  194  874    47 #>  [782,]  461  698  382  796  219  315  632  854  246    67 #>  [783,]  879  204   61  629  793  998  608   85  421   202 #>  [784,]  467  495  478  865   82  390  744  547  751   679 #>  [785,]  781  309  139  592  398  460  546  549  874   325 #>  [786,]  933  338  705  423  576  988  282  324   54   732 #>  [787,]   56  959  358  860   46  514  224  390  589   602 #>  [788,]  770  916  610  521  163  504  174  979  105   956 #>  [789,]  876  741   60  149  939  652  992  119   57   208 #>  [790,]  995  946  575  714  442  916  818  653  926    73 #>  [791,]   51   20  898  870  569  583  689  550  721    59 #>  [792,]  945  648  238  555  212  339  557  885  890   720 #>  [793,]  879   61  972  783  756  204  361  611    5   986 #>  [794,]  205  682  377  746  745  257  728  281  559   980 #>  [795,]  371  771  892  844  571  617   33   69  247   281 #>  [796,]  782  382  632  461  698  472  315  373  219   925 #>  [797,]  665  329  631  760  438  422  551  237  263    57 #>  [798,]  163  148  568  318  773  429  991  935  431   282 #>  [799,]  485  980  409  867  559  125  241  248  186   966 #>  [800,]  747  479  871  920  517  740  443  595  472   290 #>  [801,]  364  347   75  418  430  960  758  154  968    98 #>  [802,]  813  956  521  331  683  542  929  770  917   537 #>  [803,]  866  302  844  617  805  619   69  399  236   548 #>  [804,]  290  328  962  989  762  381  681  972  820   726 #>  [805,]  578  696  264  236  548  803  122  866  322    84 #>  [806,]  709  255  697  840  535  598  533  727  155   668 #>  [807,]  103  477  689  908  487  905  928  717  150    95 #>  [808,]    7  509  631  106  940  400  925  628  691   217 #>  [809,]  697  535  495  713  598  896   77  668  725   703 #>  [810,]  585  919  319  180  682  289  336  746  843   660 #>  [811,]  298  463  977  155  754  658  406   77  990   176 #>  [812,]  376   46  263  107  358  582  324  391  703   959 #>  [813,]  802  542  956  683  556  521  640  197  917   770 #>  [814,]  752  986  970   59  424  374  820  870  361    86 #>  [815,]  332  395  216  816  975  832  499  252   24   456 #>  [816,]  395  216  975  815  580  340  456  332  759    53 #>  [817,]   23  186  257  256  429   48  280  165  885   245 #>  [818,]  671   55  768  636  946  573   73  436   71   926 #>  [819,]  240  417  179  441  471  283  663  515  398   650 #>  [820,]  374  972  740  313  970  926   59  986  361   177 #>  [821,]  565  543  513  938  711   48  358  414  386   574 #>  [822,]  316  887  898  285  432  710   38  664  292   588 #>  [823,]  730  380  302  375  603   21  532  117  570   856 #>  [824,]  343  950  616   54  612   95  941   62  838   288 #>  [825,]  130  928  386  451  178  392  771    6  220   634 #>  [826,]  248  523  485  615  686  412  908  487    1   396 #>  [827,]  111  322  270  236  894  326  976  618  605   314 #>  [828,]   16  413  846  623  279  673  757  540  280   188 #>  [829,]  144  877  909  234  708  886  121  323  872   690 #>  [830,]   14  973  128  674  456  459  163   53  436   504 #>  [831,]  250  389  882   76  850  620  213  907  854   299 #>  [832,]   24  975  392  950   25  838  343  468  816   332 #>  [833,]  224  649    9  262  855   60  138  565  939    79 #>  [834,]  678  101  703  312  931  539  765  924  732   107 #>  [835,]  922  880  185  735  203  775  207  397  109   246 #>  [836,]  982  225  927  311  531  105   18  351  470   699 #>  [837,]  906  254  160  483  729  570  978  425  193   748 #>  [838,]  597  468   47   25  832   24  312  335  732   147 #>  [839,]  985  900  902  930  842  294  135  537  159   859 #>  [840,]  255  709  727  533  535  806  697   29  223   668 #>  [841,]  307  639  199    8  310  909  483  837  114   137 #>  [842,]  135  907  213  900  850    7  930  389  620   297 #>  [843,]  289  746   88  336  210  728  682  377  692   180 #>  [844,]  247  617  302  619  803  795  656  638  684   866 #>  [845,]  274  695   49  633   12  425   78  621  906   693 #>  [846,]  188   25  828  540  335  673  468  178  460   527 #>  [847,]  277  373  796  315  145  134   98  350  782   388 #>  [848,]  327  881  675  680  545  971   85  162   39   508 #>  [849,]    1  651  452  487  130  379  686  523   87   928 #>  [850,]  389  213  907  620  831  882  842  297  276   145 #>  [851,]  896  668  922  751  385  861  775  888  835   893 #>  [852,]  863  669  525  723  670  403  694  778  218   184 #>  [853,]  590  554  648  238  607  496  660  498  691   904 #>  [854,]  246  522  888  203  599  918  201  782  219   299 #>  [855,]    9  224  649  452  379  833  220  198  262   993 #>  [856,]  399  564  380  302  605  886  112  404  823   234 #>  [857,]  916  339  555  212  118   26  790  648  945   610 #>  [858,]  627  562  706  264  303  899  764  696  357   641 #>  [859,]  537  929  191  226  294  869  853  691    3   433 #>  [860,]  589   56   46  543  787  451  358  959  386   178 #>  [861,]   82  120  888  713  624  751  495   29  896   784 #>  [862,]   79  334   58  394   60   10  440  378  401   708 #>  [863,]  723  670  852  716  183  530  778  889  669   403 #>  [864,]   31  476  706  696  264  805  578   81  303   408 #>  [865,]  147  547  924  467  784  679  209  622  194   776 #>  [866,]  803  302  617  236  399   69  844  805  605   322 #>  [867,]  241  485  963  799  370  473  411  980  189   911 #>  [868,]  141   88  771  301  682  336  281  560  584   571 #>  [869,]  294   90  266  917  607  537  520  859  691   628 #>  [870,]  569   20  361  892   59  986  752  583  689   814 #>  [871,]  747  284   96  740  996  738  800  177  479   575 #>  [872,]  121  299  480  296  690  250  708   58   10   831 #>  [873,]  396  248  686  966  523  526  799  419  215   474 #>  [874,]  777  781  785  309  663  110  328  335   47   161 #>  [875,]  198   37  526  855  102  181  667  452  362     9 #>  [876,]  741  789  217  901  208  149  159   57  652    60 #>  [877,]  234  228  708  378  144  829  491  175  112   121 #>  [878,]  637  721  636  341  768  136   73  583   59    51 #>  [879,]  793  783   61  204  243  608  972  756  202   629 #>  [880,]  735  207  987  835  922  679  185  109  478   397 #>  [881,]   39  971  327  848   85  998  482  675  629   545 #>  [882,]  389  831  907  850  250  213  120  551  208   624 #>  [883,]  749  242  529  994  613  161  249  515  508   360 #>  [884,]  391  158   17  263  155   22  533  551  645   812 #>  [885,]  557  238   71  186  590  489  936  648  817   660 #>  [886,]  152  856  234  380  175  730  505  399  144   708 #>  [887,]  432  285  316  664  981  822  618  779  243   588 #>  [888,]  201  918  854   82  861  305  467  937  246    29 #>  [889,]  139  546  174  556  592  716  398  935  530   368 #>  [890,]  557  433  991  885  979  974  212  704  191   256 #>  [891,]  359  249   39  529  465  749  218  913  553   629 #>  [892,]  371  795   69  664  588  569  361  870  360    61 #>  [893,]  688  896  385  501  668  780  851   27  751   775 #>  [894,]  190  278  779  605  976  618   69  432  866   291 #>  [895,]  552  763  507  203  321  690   63  246  154   304 #>  [896,]  668  851  751  688  385  861  598  893  713   697 #>  [897,]  505   70  439  899  193  295  729  978  641   142 #>  [898,]  316  822  285  664  870  887  647   84  588   892 #>  [899,]  729  897  627  858  193  505  641  562  295   603 #>  [900,]  985  930  842  400  901    7  159  808  135   760 #>  [901,]  400   57  119  741  985  900  876  329  159   631 #>  [902,]  839   74  758  492  306  930  985  900  842   135 #>  [903,]  190  278  622  287  684  491  478   91  247   921 #>  [904,]  496  653  517  118  957  774   11  677  446   518 #>  [905,]  717  487  928  634  452  849  686  526  130   477 #>  [906,]  160  425  837  401  570   49  483  652  753   126 #>  [907,]  850  389  882  213  842  676  620  135  831   276 #>  [908,]  487  187  928  169  486  905  689  826    1   849 #>  [909,]  829  323  144  251    8  877  116  886  234   199 #>  [910,]  715  106  940  919  692  509  119  210  843   691 #>  [911,]  366  434  799  450  241  867  409  473  966   974 #>  [912,]  426  404  380  505  603  730  856  764  731   152 #>  [913,]  482  235  359  891   39  510  553  249  947   471 #>  [914,]   64  311  999   80  699  225  591  836   18   115 #>  [915,]  272  674  991  353  538  163  979  798  282    42 #>  [916,]  788  857  774  118  790  714  995  351  105   653 #>  [917,]  266  683  628  140  388  802  869  640  813   537 #>  [918,]  888  305   82  201   29  744  854  624  551   422 #>  [919,]  715  910  692  940  210  810  843  746  106   660 #>  [920,]  774  653  595  800  517  747  496  904  365   558 #>  [921,]  622  287  209  508  903   91  275   15  151   994 #>  [922,]  835  775  203  880  185  522  246  397  851   735 #>  [923,]  646  304  214   35  895  690   63  144  507   348 #>  [924,]  539  776  527  107  761  865  194   46  147   572 #>  [925,]  628  388  509  940  808  145  277  210  373   796 #>  [926,]  946  970  442  313   55  820  374  558   59   721 #>  [927,]  982  490  134   11  266  961   18  350  917   640 #>  [928,]  634  825  487  905  130  908  849  651  717   371 #>  [929,]  226  537  859  802   40  956  331  140  521   813 #>  [930,]  985  900  159  842  135  400  702  741  901   217 #>  [931,]   41   66  132  597  701  834  147  317  737   515 #>  [932,]   28  210  566  587  693  554  581  731  925   594 #>  [933,]  423  340  705  324  282  786  736  732  338   252 #>  [934,]  375  532   21  652  638  692  462  401  728   377 #>  [935,]   36  719  889  318  544   45  798   40  770   568 #>  [936,]  489   71  590  594  258  885  919  853  660   238 #>  [937,]  475  201  305  766  953  219  735  888  246   698 #>  [938,]  220  500  821  543  711  657  379  596  724   414 #>  [939,]   60  574  514  789   97  192  833  645  992   462 #>  [940,]  910  509  106  715  691  919  210  808  925   628 #>  [941,]  506  838  597  343  104   47   83    4  824    95 #>  [942,]  586  446  443  961   11  344  593  490  134    50 #>  [943,]  710  477  292  807  448  200  369  822   38   898 #>  [944,]  455  393  481  780  300  326  337  162  287   259 #>  [945,]  792  339  648  238   65  857  212  555  790   720 #>  [946,]  926  442   55  313  575  573  818  671  558   738 #>  [947,]  510  317  515  239  680  435  642  129  471   529 #>  [948,]  173  596  494  711  724  687  500   48  513   821 #>  [949,]  601  612  997  717  102  983   37  526  131   288 #>  [950,]  343  824  832  288  392   54  612  838  131    24 #>  [951,]  733  383  114   92  700  307  137  993  407   967 #>  [952,]  293  321  430  223  154  244  766  415  403   778 #>  [953,]  937  735  201  713  305  207  679  888  101   475 #>  [954,]  767  190  903  278  362  444  259  894  287   634 #>  [955,]  769  642   66  151  317  239  410  658  387   680 #>  [956,]  521  802  813  770   40  773  719  542  683   929 #>  [957,]  518  517  446   11  961  496  554  904  747   388 #>  [958,]  630  490  927  344  982  847  153  516  418   750 #>  [959,]  358  787  514   56   46  645  860   22  458   488 #>  [960,]  676  347   75  430  907  223  420  850  882   758 #>  [961,]   11  446  957  134  518  490  118  904  222   927 #>  [962,]  762  290  681  133  804  325  457  194  777   781 #>  [963,]  370  411  402  867   34  189  258  635  241   739 #>  [964,]  576  423  164  338   89   36  139  398  592   308 #>  [965,]  306  685  604  492  687  754  990  407  355    17 #>  [966,]  215  474  499  873  799  485  450  248  366   150 #>  [967,]  700  176   32  383  501  598  114  231  667   181 #>  [968,]  154  321  418  293  895   63  552  516  763   952 #>  [969,]  416  197  524  422  301  325  336  458  595   245 #>  [970,]  926  374   59  752  814  820  673  558  777   442 #>  [971,]  545  881  675   85   39  327   83  123  848   104 #>  [972,]  740  820  361  793  374   61  204  479  871   284 #>  [973,]  830  128  674   14   65  915  436  163  456    53 #>  [974,]  256   99 1000  434  489  409  494  433  271   885 #>  [975,]  832  332   24  673  816  846   25  815  188   759 #>  [976,]  605  291  618  326  322  894  243  399  278   866 #>  [977,]  155  576  678  834  533  535  697  298  703   650 #>  [978,]  193  108  295  254  505  152  837  730  480   729 #>  [979,]  991  353  538  163  557  429  770  885  456   773 #>  [980,]  559  409  186  794  799   71  759  205  485    55 #>  [981,]  618  243  887  779  285  432  976  326  664   322 #>  [982,]  927  836  118  266  134  490   11  917  683   961 #>  [983,]  601  577  410  229  363  275  737  102  634   997 #>  [984,]  625  874  309   89  497  785  139  308  781   504 #>  [985,]  930  900  159  400  901  741  842  839  876   702 #>  [986,]  361  814  752  424  820  374  972  204   59   569 #>  [987,]  207  735  679  880  209  865  478  219  953   563 #>  [988,]  705  786  596  933  657  282  950  500  288   414 #>  [989,]  328  804  351  381  962  920  714  558  290   874 #>  [990,]  754  406  711  687  155  500  965   17  685   604 #>  [991,]  979  538  353  163  798  557  429  773  817   890 #>  [992,]  484  138  149  652  789  352  262   60  833   939 #>  [993,]  192    9  574  711  513  855  224  939  262   649 #>  [994,]  613   91  883  865  147  194  622  209  242   563 #>  [995,]  714  790  712  655  916  575  442  946  774    50 #>  [996,]  738  871  575  221  740  747   96  408  284   655 #>  [997,]  717  612  288  392  131  363  634  220  526   825 #>  [998,]   85  629  327  783  421  675  285  879  887   242 #>  [999,]   64  914   80  311  586  699  591  153   50   726 #> [1000,]   99  974   12  633  489  168  662  256  352   666 #>  #> $neighbor_distances #>              [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7] #>    [1,] 0.3958788 0.5274212 0.5400270 0.5558654 0.6453666 0.6600797 0.6759839 #>    [2,] 0.7643043 0.8269073 1.2454635 1.3115478 1.5546877 1.6277378 1.6472621 #>    [3,] 0.7942946 0.9277140 1.1107965 1.1700056 1.1994370 1.2167336 1.2277691 #>    [4,] 0.8646802 0.9674415 1.0508866 1.0604053 1.0834659 1.1073661 1.1432906 #>    [5,] 0.4941481 0.5756206 0.7028215 0.7343027 0.7553210 0.7583778 0.7885417 #>    [6,] 0.3612491 0.3636563 0.3664027 0.4100770 0.4197049 0.4548318 0.4668836 #>    [7,] 0.2968286 0.5117717 0.5519474 0.5526851 0.5710412 0.5793827 0.5854079 #>    [8,] 0.9702639 1.1141135 1.1471479 1.1817626 1.2357548 1.2380616 1.2526621 #>    [9,] 0.3262306 0.3742529 0.4153049 0.4208624 0.4430401 0.4902054 0.5782539 #>   [10,] 0.4751503 0.5505619 0.6126353 0.6157582 0.6691647 0.6801085 0.7054443 #>   [11,] 0.2706996 0.2779016 0.3756506 0.4917844 0.5021807 0.5803165 0.6132944 #>   [12,] 0.1727962 0.4178846 0.5867655 0.5994893 0.7479381 0.8649144 0.8652867 #>   [13,] 1.2287725 1.2426230 1.2698295 1.2821023 1.3064415 1.3201246 1.3607418 #>   [14,] 0.9742825 1.0153180 1.0364193 1.1361273 1.1725667 1.2614933 1.3176864 #>   [15,] 0.2303572 0.3663513 0.5987499 0.6498066 0.6563408 0.7595645 0.7987503 #>   [16,] 0.2185745 0.3460436 0.3942829 0.4498549 0.4866213 0.5260726 0.5877439 #>   [17,] 0.4463411 0.5159382 0.5364687 0.7112624 0.7665243 0.7952968 0.8243922 #>   [18,] 0.3173452 0.3447042 0.3931910 0.6171834 0.6456768 0.6707475 0.7141384 #>   [19,] 0.4765582 0.6015085 0.7894315 0.8400207 0.9958965 1.0071159 1.0606916 #>   [20,] 0.4730472 0.4894494 0.5939493 0.5991693 0.6816124 0.7479848 0.8319929 #>   [21,] 0.3324746 0.3543659 0.3615296 0.3622888 0.3693318 0.4370965 0.4501168 #>   [22,] 0.1825666 0.3591645 0.4128101 0.4734435 0.4756084 0.5405015 0.5624998 #>   [23,] 0.4273752 0.4307633 0.4712311 0.4932468 0.6068304 0.6085218 0.6594224 #>   [24,] 0.3646918 0.5351745 0.5455041 0.6673485 0.6840166 0.7089533 0.7528006 #>   [25,] 0.2297910 0.3174959 0.3830699 0.3974054 0.4000019 0.5454303 0.5511470 #>   [26,] 1.0669706 1.1620184 1.2897933 1.3184100 1.3827002 1.3854350 1.4243103 #>   [27,] 0.2374153 0.3562196 0.4269487 0.4394138 0.4777010 0.4857634 0.5324416 #>   [28,] 0.3252203 0.4962239 0.5312950 0.5461294 0.5884149 0.6152373 0.6296754 #>   [29,] 0.3224814 0.4466148 0.4491370 0.4629620 0.5144869 0.5153933 0.5559849 #>   [30,] 0.6998528 0.8478834 0.9398106 1.0058799 1.0393122 1.0448305 1.0542234 #>   [31,] 0.3712501 0.6150655 0.6309507 0.6682446 0.6775623 0.7997342 0.8713184 #>   [32,] 0.4125928 0.4591873 0.5479325 0.5922806 0.7142090 0.7214195 0.7254622 #>   [33,] 0.3726184 0.4558455 0.5716035 0.5721657 0.6002090 0.6219473 0.6590016 #>   [34,] 0.5376830 0.5669624 0.6500597 0.6724654 0.6791547 0.6981586 0.7090418 #>   [35,] 0.6183795 0.6538161 0.6915307 0.7571918 0.9439475 1.1071134 1.1485695 #>   [36,] 0.4567149 0.5979363 0.7452708 0.8141089 0.8855800 0.9676890 1.0289958 #>   [37,] 0.6390308 0.7520675 0.7864941 0.8069133 0.8707301 0.8967443 0.9220656 #>   [38,] 0.4461272 0.6165912 0.6994344 0.8820945 0.8847983 0.8962625 0.9300628 #>   [39,] 0.6401810 0.7222722 0.7359959 0.8294419 0.8332599 0.8922835 0.9032825 #>   [40,] 0.4924419 0.5602758 0.6196830 0.6813673 0.6883533 0.7032869 0.7473392 #>   [41,] 0.3591845 0.4581367 0.4726974 0.5296571 0.7841733 0.8421371 0.8662646 #>   [42,] 0.7658622 1.0153180 1.1984984 1.3106085 1.3378549 1.4414623 1.5072696 #>   [43,] 0.3688599 0.4892537 0.6030855 0.6565283 0.6657860 0.6856328 0.7071726 #>   [44,] 0.9865946 1.1272105 1.4472938 1.5135837 1.5724804 1.6031901 1.7577173 #>   [45,] 0.6853616 0.7989546 0.8912921 0.9166019 0.9847889 0.9890728 1.0170143 #>   [46,] 0.3549851 0.3709005 0.4061685 0.4111124 0.4412932 0.4714729 0.4805246 #>   [47,] 0.5002633 0.5535336 0.6021488 0.6210855 0.6394451 0.6736324 0.7005969 #>   [48,] 0.3172071 0.5271262 0.5689817 0.5744486 0.6200234 0.6378726 0.6681215 #>   [49,] 0.6205701 0.6551111 0.6552469 0.6844584 0.7340994 0.7409671 0.7674704 #>   [50,] 0.7428478 0.8997353 0.9050646 1.0577302 1.0582955 1.1174607 1.1227182 #>   [51,] 0.9315703 0.9966173 1.0710190 1.0752969 1.1138345 1.1973086 1.1986470 #>   [52,] 0.8670800 0.8814088 1.1291648 1.2242348 1.3522050 1.4368845 1.4671992 #>   [53,] 0.3590565 0.3953472 0.5166392 0.6031387 0.6893551 0.7158041 0.7807595 #>   [54,] 0.5576524 0.6171152 0.6322211 0.6911671 0.7171174 0.7276160 0.8071010 #>   [55,] 0.5409184 0.5543921 0.5788145 0.5801522 0.6120957 0.6614400 0.6624043 #>   [56,] 0.2244068 0.3116718 0.4356739 0.4412932 0.4615846 0.4791785 0.5110136 #>   [57,] 0.3191484 0.4876958 0.5185980 0.5610354 0.5777540 0.5958928 0.6119032 #>   [58,] 0.5087640 0.5269978 0.5643445 0.5653957 0.5879191 0.6388788 0.6610710 #>   [59,] 0.4714659 0.5360294 0.5433174 0.5567558 0.5802699 0.5945936 0.5991498 #>   [60,] 0.3494974 0.4375598 0.5668559 0.5974524 0.6119439 0.6442349 0.6544426 #>   [61,] 0.3126256 0.5204695 0.5271901 0.5544579 0.6189656 0.6472021 0.6704384 #>   [62,] 1.0143841 1.0409183 1.0738218 1.1209635 1.2756573 1.3685344 1.3744373 #>   [63,] 0.6765294 0.6915307 0.7796470 0.7838794 0.8114422 0.8561424 0.8586384 #>   [64,] 0.3957851 0.5719669 0.8478155 0.9406052 0.9848017 1.0302355 1.1699783 #>   [65,] 0.5443443 0.9554705 0.9994549 1.1609882 1.2064433 1.2120757 1.2173822 #>   [66,] 0.3849193 0.4726974 0.4919683 0.6309251 0.6969678 0.7657190 0.8156145 #>   [67,] 0.4543130 0.4666526 0.5404811 0.5522995 0.5544488 0.5716683 0.5827274 #>   [68,] 1.0631385 1.2050178 1.2621856 1.2953970 1.3466163 1.4039768 1.4228183 #>   [69,] 0.4489702 0.5007673 0.5685410 0.5827584 0.5879543 0.5917162 0.5932370 #>   [70,] 0.6629014 0.7618607 0.7739371 0.8845209 1.0071159 1.0152909 1.0704798 #>   [71,] 0.5339648 0.6322162 0.6327116 0.6365188 0.7105415 0.7431937 0.7567609 #>   [72,] 0.8066893 0.9259026 0.9882278 1.1731891 1.1827120 1.2193617 1.3040383 #>   [73,] 0.4515738 0.4942408 0.7027118 0.8450288 0.9871094 0.9963571 1.1248630 #>   [74,] 0.9665167 0.9865305 1.0027524 1.0208551 1.0623031 1.0874536 1.1097062 #>   [75,] 0.3753404 0.6079044 0.7980990 1.1114403 1.1312473 1.1403630 1.1674499 #>   [76,] 0.3423054 0.3829334 0.4610966 0.5624133 0.6162922 0.6626653 0.6714215 #>   [77,] 0.4974622 0.5902980 0.7017028 0.7086942 0.7339494 0.7489698 0.7842210 #>   [78,] 0.5783442 0.6555931 0.6712776 0.6926129 0.6986476 0.7071535 0.7340994 #>   [79,] 0.2355334 0.3251226 0.4110140 0.5356281 0.5516623 0.6246724 0.6315142 #>   [80,] 0.8095374 0.9493998 0.9498992 1.0302355 1.0455539 1.0507664 1.1789005 #>   [81,] 0.3435575 0.3988810 0.4511184 0.5825886 0.6050866 0.6766276 0.6824157 #>   [82,] 0.4225446 0.4491370 0.4582246 0.4664328 0.4690987 0.4828304 0.4862602 #>   [83,] 0.6717711 0.7405259 0.8585949 0.8611325 0.9625663 1.0372149 1.0504934 #>   [84,] 0.4742243 0.6931242 0.7646652 0.8505988 0.8825739 0.8965886 0.9011137 #>   [85,] 0.3377847 0.5955927 0.6046660 0.7459846 0.7652160 0.8335839 0.8821473 #>   [86,] 0.3877265 0.5295990 0.5757268 0.6039724 0.7041770 0.7105528 0.7368776 #>   [87,] 0.5677036 0.6558034 0.6600797 0.6689830 0.6966842 0.7052481 0.7144689 #>   [88,] 0.2046511 0.3234911 0.3904282 0.4073261 0.4488914 0.4489335 0.4490261 #>   [89,] 0.6752507 0.7983143 0.7997875 0.8012984 0.8786484 0.8852522 0.9100492 #>   [90,] 0.6279489 0.6420198 0.7309049 0.7435435 0.7455655 0.7628241 0.7682029 #>   [91,] 0.3903283 0.3910574 0.4765414 0.5298915 0.5825263 0.5984030 0.6066652 #>   [92,] 0.5188535 0.5360994 0.5955381 0.5991386 0.6031217 0.6579317 0.6657860 #>   [93,] 0.5520035 0.7269182 0.7802800 0.7815630 0.8680538 0.8823794 0.9086884 #>   [94,] 0.3167376 0.3391814 0.5404811 0.6123078 0.6153748 0.6413637 0.6489852 #>   [95,] 0.5351745 0.6777467 0.7594592 0.7904365 0.8562069 0.9244980 0.9368965 #>   [96,] 0.1839888 0.4367402 0.4511184 0.4739782 0.5455786 0.6749520 0.6850499 #>   [97,] 0.3242840 0.3591645 0.3740718 0.5299938 0.5533178 0.5545155 0.5970858 #>   [98,] 0.5624133 0.5714393 0.6704982 0.7090491 0.7288345 0.7489806 0.8156033 #>   [99,] 0.5289744 0.6521091 0.7188898 0.7681720 0.8692386 0.9076675 0.9435049 #>  [100,] 0.3950933 0.4601222 0.5406768 0.6304598 0.6398525 0.6539875 0.6827372 #>  [101,] 0.3428952 0.4355330 0.5457870 0.6133785 0.6151853 0.6210740 0.6297541 #>  [102,] 0.6616158 0.8201765 0.8472650 0.8610750 0.8614138 0.8824205 0.9437582 #>  [103,] 0.2644412 0.7684753 0.8319929 0.9990450 1.0419404 1.0474168 1.0604033 #>  [104,] 0.6039724 0.6311284 0.6505222 0.6673316 0.6717711 0.8536568 0.8904257 #>  [105,] 0.4561880 0.5601086 0.7667470 0.7989546 0.9033618 0.9393479 0.9423895 #>  [106,] 0.2172728 0.3380548 0.3485035 0.3504234 0.4054438 0.4152830 0.4669386 #>  [107,] 0.2243061 0.3327656 0.3384407 0.4070041 0.4634079 0.4700023 0.4998430 #>  [108,] 0.6144628 0.7569892 0.8001295 0.8229999 0.8503567 0.9017110 0.9165243 #>  [109,] 0.3330563 0.3473918 0.3556172 0.3562196 0.4777413 0.4894192 0.5102330 #>  [110,] 0.5402911 0.6175773 0.6750947 0.7041770 0.7528281 0.7599898 0.7908759 #>  [111,] 0.5960792 0.7494299 0.8407996 0.9625622 0.9778127 1.0075896 1.0113810 #>  [112,] 0.3549957 0.3556172 0.3892491 0.4012718 0.4268916 0.4810595 0.5270543 #>  [113,] 0.7643043 0.9711797 1.2542147 1.4068571 1.4341547 1.4664057 1.5151056 #>  [114,] 0.4743537 0.5360994 0.5651305 0.5691687 0.6763253 0.7156187 0.8028642 #>  [115,] 0.3173452 0.3308434 0.4672128 0.5624757 0.6171021 0.6950784 0.7003095 #>  [116,] 0.9702639 1.3848315 1.3998729 1.4307200 1.4712051 1.5996292 1.6434931 #>  [117,] 0.4531359 0.4698670 0.4700474 0.5055550 0.5115678 0.5128944 0.5229167 #>  [118,] 0.5557974 0.6701354 0.6980269 0.7063441 0.7734096 0.8059538 0.8480996 #>  [119,] 0.3724785 0.4669386 0.5056143 0.5240956 0.5275222 0.5348929 0.5663733 #>  [120,] 0.4135067 0.4805031 0.5119189 0.5533178 0.6056605 0.6061702 0.6202396 #>  [121,] 0.4254334 0.5862601 0.6126353 0.6541080 0.6778829 0.7046087 0.7617789 #>  [122,] 0.4742243 0.5701811 0.5906356 0.6079336 0.6867928 0.7584593 0.7714961 #>  [123,] 0.5519483 0.5655042 0.6442443 0.7079721 0.7558011 0.8073335 0.8536568 #>  [124,] 0.5065474 0.6976490 0.7633689 0.8437147 0.8455119 0.8832296 0.9789422 #>  [125,] 0.4111066 0.4737034 0.6020191 0.6143235 0.6259456 0.6513742 0.6522649 #>  [126,] 0.1707441 0.2968705 0.3895032 0.4031496 0.5134973 0.5218092 0.5873350 #>  [127,] 0.9060167 0.9177056 0.9495628 0.9882278 0.9916900 1.0240389 1.0529854 #>  [128,] 0.5443443 0.8770766 1.1241205 1.1273668 1.1382701 1.1949873 1.2094119 #>  [129,] 0.4568271 0.7441506 0.8098649 0.8239750 0.9401676 0.9416457 0.9474715 #>  [130,] 0.4264655 0.4624466 0.5446237 0.5772825 0.5809870 0.6281196 0.6364468 #>  [131,] 0.3037161 0.3849656 0.4889503 0.4999025 0.5986001 0.6171152 0.6230425 #>  [132,] 0.4581367 0.4919683 0.5135232 0.7017028 0.7253857 0.7413473 0.7873519 #>  [133,] 0.3297268 0.4635209 0.5076221 0.5726424 0.5727711 0.6853393 0.7260439 #>  [134,] 0.4276433 0.4889698 0.4925249 0.4940795 0.5021807 0.5871952 0.6139474 #>  [135,] 0.3507359 0.5395834 0.5973652 0.6138062 0.6525579 0.6868367 0.7146929 #>  [136,] 0.7675113 0.7887420 1.1248630 1.1357842 1.2131818 1.2423547 1.2668166 #>  [137,] 0.5046714 0.6801085 0.6870412 0.7156187 0.7843443 0.7964539 0.8291518 #>  [138,] 0.3977930 0.4527603 0.4592307 0.4991214 0.5672398 0.5722037 0.5782539 #>  [139,] 0.2487355 0.3315173 0.4139112 0.4173078 0.5237929 0.5373695 0.6194891 #>  [140,] 0.4635898 0.6195019 0.6852642 0.7271289 0.7424436 0.7819100 0.8127308 #>  [141,] 0.1599595 0.3222093 0.3834567 0.4068520 0.4100770 0.4179199 0.5116123 #>  [142,] 0.6629014 0.9915602 0.9958965 1.0340147 1.1206228 1.1690932 1.1774851 #>  [143,] 0.6691371 0.8668245 0.9612096 1.1265050 1.3247363 1.4117173 1.4388832 #>  [144,] 0.4063918 0.5615268 0.6588544 0.7416006 0.7582832 0.7879693 0.8534795 #>  [145,] 0.3118952 0.4076777 0.4094883 0.5710412 0.5930570 0.6101464 0.6152953 #>  [146,] 0.3962211 0.4498442 0.5760722 0.7884557 0.8312444 0.8400207 0.8845209 #>  [147,] 0.4248042 0.5197859 0.5238537 0.5381640 0.5858927 0.5980988 0.6072072 #>  [148,] 0.3884991 0.5345801 0.6118668 0.7539616 0.8951548 0.9865011 1.0012236 #>  [149,] 0.3593264 0.4620788 0.4657178 0.4674926 0.4815277 0.5275222 0.5784169 #>  [150,] 0.8829645 0.9990450 1.1694842 1.1816125 1.1871917 1.1925131 1.2675466 #>  [151,] 0.4717657 0.6613172 0.6847816 0.7282898 0.7661535 0.7766738 0.7885970 #>  [152,] 0.3803468 0.4350633 0.5386688 0.5731874 0.6627529 0.7335970 0.7706425 #>  [153,] 1.0482942 1.1699783 1.2043238 1.2826571 1.3556154 1.3793944 1.4091219 #>  [154,] 0.2624281 0.5403844 0.7223606 0.7803766 0.8799425 0.9850629 1.0722110 #>  [155,] 0.5364687 0.5984943 0.6807132 0.7505346 0.7682976 0.8002654 0.8064418 #>  [156,] 0.2345092 0.3962211 0.5616091 0.7368415 0.7628241 0.7894315 0.8311435 #>  [157,] 0.7516585 0.7932000 0.9177056 0.9616423 0.9843714 0.9878748 0.9974822 #>  [158,] 0.4075719 0.4629031 0.4695769 0.6021796 0.6418424 0.6490924 0.6504964 #>  [159,] 0.4059566 0.5544345 0.6090505 0.6213515 0.6492618 0.6591912 0.6707514 #>  [160,] 0.2049212 0.4553788 0.5387520 0.5402864 0.5608046 0.6093396 0.6162752 #>  [161,] 0.5295990 0.6136787 0.6324504 0.6457926 0.6673316 0.6957498 0.7089528 #>  [162,] 0.8380118 0.8506294 0.8816909 0.9202722 0.9568119 1.0273529 1.0351961 #>  [163,] 0.5476062 0.7073199 0.7317674 0.8974349 0.9609949 0.9662115 0.9793055 #>  [164,] 0.5494084 0.5979363 0.6671713 0.7870953 0.8161700 0.8810201 0.9455977 #>  [165,] 0.4006855 0.4282523 0.5092214 0.5381749 0.5446711 0.5703136 0.5794776 #>  [166,] 1.2118143 1.3239994 1.3681592 1.4519321 1.4646315 1.5363384 1.6096099 #>  [167,] 0.4213701 0.4421352 0.4425397 0.4573716 0.4841684 0.5567204 0.5806690 #>  [168,] 0.7113624 0.7138183 0.7321836 0.7544498 0.8274341 0.8542068 0.8649144 #>  [169,] 0.4558455 0.5785824 0.6987438 0.7211995 0.7361582 0.7479848 0.7598689 #>  [170,] 0.8500731 1.0438618 1.0553519 1.0717580 1.1391780 1.1610642 1.3078982 #>  [171,] 1.0262330 1.0570616 1.1503392 1.1830646 1.2027355 1.2237032 1.2329011 #>  [172,] 0.3362645 0.4556644 0.4975983 0.5226212 0.6365957 0.6382249 0.7318583 #>  [173,] 0.4889279 0.6845088 0.7465604 0.7473889 0.8286342 0.8428723 0.8846747 #>  [174,] 0.5524559 0.6042073 0.6115134 0.6298321 0.6384367 0.6607325 0.6698253 #>  [175,] 0.6047038 0.6220457 0.6241754 0.6683749 0.6863973 0.7217445 0.7333741 #>  [176,] 0.5957165 0.6050153 0.9098701 0.9990389 1.0182786 1.0213179 1.0815776 #>  [177,] 0.4866213 0.5087454 0.5286997 0.5716035 0.5716988 0.6032254 0.6347264 #>  [178,] 0.2282305 0.3019276 0.3174959 0.3612491 0.4190925 0.4633584 0.5107617 #>  [179,] 0.3968450 0.4978757 0.4996513 0.5046050 0.5738897 0.6407717 0.6544432 #>  [180,] 0.2418212 0.3794666 0.3835741 0.3951752 0.4904181 0.4931029 0.4966920 #>  [181,] 0.8066893 0.8252254 0.9485396 1.0464314 1.0636144 1.1106877 1.1618508 #>  [182,] 1.1209635 1.3371078 1.4643964 1.5162057 1.5297005 1.5807818 1.8175871 #>  [183,] 0.6010726 0.7334535 0.7664095 0.7721200 0.7778284 0.8775842 0.9186331 #>  [184,] 0.4859296 0.5738917 0.7103136 0.7334535 0.7656913 0.8315310 0.8396846 #>  [185,] 0.3333233 0.3572687 0.3892491 0.4311462 0.4777413 0.5128722 0.5179626 #>  [186,] 0.4307633 0.4560278 0.5172334 0.5339648 0.5918147 0.6535505 0.7105028 #>  [187,] 0.5616864 0.6245253 0.6987438 0.7710820 0.8240154 0.9092137 0.9195821 #>  [188,] 0.2542035 0.3974054 0.4144953 0.4285338 0.4434583 0.4573716 0.4946562 #>  [189,] 0.4253331 0.5496126 0.5895142 0.6035660 0.6568121 0.6838960 0.6875739 #>  [190,] 0.2306791 0.3939581 0.4374199 0.5778469 0.6312260 0.6779228 0.6782284 #>  [191,] 0.6092573 0.6576298 0.7321836 0.8992593 0.9160160 0.9386951 0.9620332 #>  [192,] 0.2557244 0.3602671 0.4412104 0.5213667 0.5522057 0.5853017 0.5964796 #>  [193,] 0.2603973 0.4566860 0.4799583 0.5713410 0.5768636 0.6067611 0.6631952 #>  [194,] 0.4226543 0.5009093 0.5218718 0.5432200 0.5455972 0.5499918 0.5512810 #>  [195,] 0.3950933 0.5111744 0.5491708 0.5656983 0.6037206 0.6306124 0.6452375 #>  [196,] 0.3332127 0.5066604 0.5686420 0.5714112 0.5765306 0.5938488 0.6493583 #>  [197,] 0.3885557 0.3885562 0.4668807 0.5163068 0.5265068 0.5703136 0.5770214 #>  [198,] 0.5402270 0.5657751 0.5922806 0.5936516 0.6133180 0.7027257 0.7055467 #>  [199,] 0.6047038 0.6753003 0.8138219 0.8333059 0.8429268 0.8918813 0.8922841 #>  [200,] 1.1987592 1.2769536 1.4741129 1.4975752 1.5070778 1.5180051 1.5706604 #>  [201,] 0.3192190 0.3413684 0.3627460 0.3824601 0.4338930 0.4476108 0.5634343 #>  [202,] 0.3168347 0.5111744 0.5406768 0.6111026 0.6953358 0.7582476 0.8172050 #>  [203,] 0.2799555 0.3111263 0.4450886 0.4564972 0.5146686 0.5330566 0.5400816 #>  [204,] 0.3126256 0.4893799 0.4928110 0.6534226 0.6644596 0.6831773 0.7073361 #>  [205,] 0.3516280 0.4130207 0.4312064 0.5038039 0.5096032 0.5621626 0.5749375 #>  [206,] 0.5519483 0.6311284 0.6777467 0.7405259 0.7773212 0.8767355 0.9163524 #>  [207,] 0.1733556 0.2423027 0.2446095 0.2805693 0.5364597 0.5569057 0.5759362 #>  [208,] 0.3356213 0.4817913 0.5505619 0.6061544 0.6066842 0.6202396 0.6273228 #>  [209,] 0.4526056 0.4562475 0.4652054 0.4759046 0.5403443 0.5560398 0.5883197 #>  [210,] 0.4032344 0.4311597 0.4567191 0.5035883 0.5093473 0.5322270 0.5387782 #>  [211,] 0.6853616 0.9350793 0.9393479 1.0451475 1.0713481 1.0718014 1.0966459 #>  [212,] 0.6419355 0.9845647 1.2755375 1.2982738 1.3451843 1.3498885 1.3805917 #>  [213,] 0.2828474 0.3089039 0.4020657 0.4042463 0.4076777 0.4556644 0.4714874 #>  [214,] 0.7462824 0.7892052 0.9483690 1.0442684 1.0661246 1.0701576 1.1926962 #>  [215,] 0.3332975 0.3888783 0.6565955 0.8683483 0.9862641 1.0174279 1.0257492 #>  [216,] 0.4252007 0.4649356 0.5984252 0.6959388 0.7372187 0.7407907 0.7441114 #>  [217,] 0.3356213 0.4326671 0.4816213 0.5427011 0.5977486 0.6098692 0.6407980 #>  [218,] 0.6115310 0.6684251 0.7829015 0.8167190 0.8518577 0.9001607 0.9522254 #>  [219,] 0.3930992 0.4102853 0.4323765 0.4539678 0.5157606 0.5416005 0.5511619 #>  [220,] 0.4077313 0.4334265 0.4677776 0.4950221 0.5809870 0.6016668 0.6513742 #>  [221,] 0.5884740 0.6394905 0.7146012 0.7207820 0.7351934 0.7394649 0.8266074 #>  [222,] 0.4553974 0.6969912 0.7081827 0.7755972 0.8686189 0.9086006 0.9166054 #>  [223,] 0.5582100 0.6230996 0.7651036 0.9461470 0.9543635 0.9555007 1.0217470 #>  [224,] 0.1671345 0.3560739 0.3594790 0.4208624 0.5184104 0.5964718 0.6243575 #>  [225,] 0.5624757 0.6456768 0.7428245 0.7448427 0.7989709 0.8035172 0.8414542 #>  [226,] 0.4180143 0.6196830 0.6357975 0.6881962 0.7420058 0.7623392 0.7964802 #>  [227,] 0.7060368 0.7746569 0.7812633 0.7936241 0.8209376 0.8595518 0.8668245 #>  [228,] 0.3539767 0.3549957 0.4035892 0.4670264 0.4804604 0.4894192 0.5324416 #>  [229,] 0.4182212 0.5902980 0.6383613 0.6681572 0.7211943 0.7253857 0.8336663 #>  [230,] 0.3835656 0.5650419 0.6311174 0.7441052 0.7584593 0.7683162 0.8620125 #>  [231,] 0.4125928 0.4458748 0.6069418 0.6688904 0.7032936 0.8145399 0.8295502 #>  [232,] 0.6691371 0.8595518 1.0312801 1.0356129 1.2185836 1.2486376 1.2834319 #>  [233,] 0.4889503 0.5566323 0.5576524 0.6073761 0.7200141 0.7254591 0.7842210 #>  [234,] 0.3825866 0.4035892 0.4661805 0.5440449 0.5615268 0.5842682 0.6007627 #>  [235,] 0.7968257 0.9865992 1.0000553 1.0639297 1.1687579 1.1814595 1.2481192 #>  [236,] 0.3849550 0.4808725 0.4966807 0.5177867 0.5501117 0.6286949 0.7177651 #>  [237,] 0.4373999 0.4729340 0.4732983 0.6202906 0.6279788 0.6686328 0.6855722 #>  [238,] 0.3038167 0.5188999 0.5886036 0.7093125 0.8229090 0.8678181 0.8884520 #>  [239,] 0.2418824 0.4476512 0.5737663 0.5893544 0.6510754 0.6900771 0.7282898 #>  [240,] 0.1651655 0.3917967 0.3968450 0.5704091 0.6134853 0.6642607 0.6838298 #>  [241,] 0.3473584 0.7297703 0.9386613 0.9554894 1.0208430 1.0499685 1.0593501 #>  [242,] 0.3443745 0.4610525 0.5591255 0.6289120 0.7027446 0.7335450 0.7369947 #>  [243,] 0.4583017 0.5561368 0.6168672 0.6189656 0.6223950 0.6688053 0.6981820 #>  [244,] 0.6365918 0.6815515 0.6919832 0.7302411 0.7419121 0.8473542 0.8919984 #>  [245,] 0.4006855 0.4311626 0.4324017 0.5265068 0.5787356 0.5928575 0.6068304 #>  [246,] 0.3111263 0.3741903 0.4204032 0.5053129 0.5379922 0.5558828 0.5608033 #>  [247,] 0.2879469 0.3525993 0.4346951 0.5154229 0.5755134 0.5927861 0.6008958 #>  [248,] 0.2917909 0.3224540 0.5611623 0.7204058 0.7543649 0.8074572 0.8151470 #>  [249,] 0.4618406 0.5026561 0.5079071 0.5959307 0.6401810 0.7607613 0.7811186 #>  [250,] 0.1934533 0.3829334 0.5446629 0.5537570 0.5884547 0.6223412 0.6389467 #>  [251,] 0.9706153 1.1178414 1.1260263 1.1332502 1.1873005 1.2013898 1.2119200 #>  [252,] 0.3497051 0.4213701 0.6225000 0.6588853 0.7119516 0.7338842 0.7380311 #>  [253,] 0.2980818 0.5021891 0.5512997 0.6323718 0.6366296 0.6912649 0.6980145 #>  [254,] 0.6068573 0.6901406 0.7377922 0.7532461 0.8446629 0.9017110 0.9892406 #>  [255,] 0.3380681 0.4701566 0.5279254 0.5522129 0.6233386 0.6592886 0.7198712 #>  [256,] 0.5296051 0.7148621 0.7188898 0.8218413 0.8286342 0.8345964 0.8405960 #>  [257,] 0.4932468 0.5172334 0.5716221 0.5794776 0.6079415 0.6381147 0.6961493 #>  [258,] 0.6277738 0.7434022 0.8262811 0.8274570 0.8283654 0.9093853 0.9356692 #>  [259,] 0.6589182 0.7106159 0.7583830 0.7602751 0.8209376 0.8386018 0.8627464 #>  [260,] 0.6165912 0.7885970 0.8073335 0.8607032 0.8779764 0.8915176 0.8958221 #>  [261,] 1.2821023 1.3860701 1.6168208 1.6583570 1.6758296 1.7090808 1.7621923 #>  [262,] 0.3688599 0.3977930 0.4153049 0.5264651 0.5860747 0.5991386 0.6119802 #>  [263,] 0.4128101 0.4372460 0.4416751 0.4447512 0.4695769 0.5176477 0.5224581 #>  [264,] 0.3773446 0.4999294 0.5005509 0.5517161 0.6340937 0.6391951 0.7050573 #>  [265,] 0.4591208 0.4862321 0.4996527 0.5205250 0.5427075 0.5711821 0.6087522 #>  [266,] 0.1488483 0.5445162 0.5577461 0.5952378 0.6852642 0.7097154 0.7377297 #>  [267,] 0.7576443 1.0420564 1.0489673 1.1328151 1.1916613 1.3177501 1.3295095 #>  [268,] 1.1530049 1.2049398 1.2409518 1.2929593 1.3231629 1.3985072 1.4187972 #>  [269,] 0.3406819 0.8657559 0.8895631 0.9496566 0.9818225 1.0604053 1.1346932 #>  [270,] 0.7199291 0.8407996 1.1414841 1.2427836 1.3119747 1.3369583 1.3392080 #>  [271,] 0.7950088 0.8660294 0.8962119 1.0373131 1.0864398 1.1253711 1.1481390 #>  [272,] 0.4528924 1.0585664 1.1523460 1.1725689 1.2038706 1.2151852 1.2254781 #>  [273,] 1.4019846 1.5457491 1.5919700 1.6425619 1.6591459 1.6747879 1.7502270 #>  [274,] 0.4698591 0.5100968 0.9691958 1.0396971 1.0503212 1.0575283 1.0579938 #>  [275,] 0.3695347 0.4075805 0.6059121 0.6681572 0.7119550 0.7596517 0.7818657 #>  [276,] 0.3089039 0.3362645 0.3999254 0.4094883 0.4878990 0.5857092 0.6291834 #>  [277,] 0.3118952 0.4677738 0.5066594 0.5637209 0.5648470 0.6081481 0.6272954 #>  [278,] 0.2306791 0.3979466 0.4483919 0.6141202 0.6375565 0.6588614 0.6685360 #>  [279,] 0.3187897 0.3226564 0.4292007 0.4498533 0.4537485 0.4870662 0.5026990 #>  [280,] 0.3237671 0.4311626 0.4712311 0.5245614 0.5882810 0.6297600 0.6319003 #>  [281,] 0.2556632 0.3726184 0.4207454 0.5038039 0.5083381 0.5564092 0.5847095 #>  [282,] 0.6082266 0.6785633 0.6959388 0.7358031 0.8248636 0.8938934 0.8951548 #>  [283,] 0.5076221 0.5704091 0.5717497 0.5820108 0.6684251 0.7007787 0.7063055 #>  [284,] 0.1839888 0.3988810 0.4149599 0.5139621 0.5564996 0.6060499 0.6347264 #>  [285,] 0.4481043 0.5555141 0.6029454 0.7459846 0.7679514 0.8100199 0.8100694 #>  [286,] 0.2892078 0.5727711 0.5820108 0.6121310 0.6320971 0.6827372 0.7003095 #>  [287,] 0.5176784 0.5604237 0.5777316 0.6312260 0.6613172 0.6894386 0.6957354 #>  [288,] 0.2282839 0.3037161 0.4394292 0.5454020 0.5716479 0.6020740 0.6722494 #>  [289,] 0.1661748 0.2046511 0.2888624 0.3633813 0.3807536 0.3835741 0.4259255 #>  [290,] 0.2090033 0.2663603 0.4334675 0.4970674 0.5113782 0.5407008 0.5522995 #>  [291,] 0.3126654 0.3549687 0.4301853 0.5039649 0.5456792 0.5477005 0.6074699 #>  [292,] 0.4461272 0.7643515 0.7999329 0.8958221 0.8998580 0.9564173 1.0876169 #>  [293,] 0.4250564 0.6411076 0.7803766 0.7996429 0.9184242 0.9331377 0.9335194 #>  [294,] 0.6078509 0.7653864 0.7942946 0.8219534 0.8313359 0.9128442 0.9873481 #>  [295,] 0.2603973 0.5128944 0.6011397 0.6343959 0.6697896 0.6888925 0.6926129 #>  [296,] 0.4751503 0.6778829 0.6982536 0.7023260 0.7400810 0.7964539 0.8001295 #>  [297,] 0.3999254 0.4020657 0.4562501 0.5226212 0.5504362 0.6172936 0.6614082 #>  [298,] 0.7200141 0.7339494 0.9367775 1.0527620 1.0558483 1.0712542 1.0874162 #>  [299,] 0.3686796 0.5087640 0.5140837 0.5330566 0.5546223 0.6081425 0.6162922 #>  [300,] 0.4172817 0.7643515 0.8847983 0.9601713 1.0619769 1.0945734 1.1513899 #>  [301,] 0.3332127 0.4490261 0.4892979 0.4920971 0.5118432 0.5203093 0.5265639 #>  [302,] 0.4147510 0.4213070 0.4269203 0.4315846 0.4566883 0.4635230 0.4834136 #>  [303,] 0.3917303 0.6309507 0.7923845 0.7952429 0.8765315 0.9008648 0.9425651 #>  [304,] 0.5282708 0.5567676 0.6538161 0.6765294 0.7892052 0.8802286 1.0284506 #>  [305,] 0.3413684 0.4140413 0.4147225 0.4998761 0.5076018 0.5416898 0.5595265 #>  [306,] 0.3560451 0.6830510 0.6839223 0.9397940 1.0640806 1.1217156 1.1258046 #>  [307,] 0.5691687 0.7699063 0.8291518 0.8341730 0.8520782 0.8996759 0.9168368 #>  [308,] 0.4069700 0.5415934 0.5747331 0.6225000 0.6245065 0.6318224 0.7881902 #>  [309,] 0.2808273 0.2960704 0.4102580 0.4173078 0.4788826 0.6245065 0.6894017 #>  [310,] 0.4892537 0.6408632 0.6443399 0.8395091 0.8640918 0.8778177 0.8918635 #>  [311,] 0.5743737 0.6950784 0.7141384 0.7428245 0.8305293 0.8326792 0.8355717 #>  [312,] 0.2519073 0.4339342 0.4557704 0.6053898 0.6322211 0.6532572 0.6606817 #>  [313,] 0.4208741 0.5712511 0.5716988 0.5775476 0.5922281 0.5945936 0.6147116 #>  [314,] 0.7847546 0.9895428 1.0782771 1.1400371 1.1414841 1.2345885 1.2568088 #>  [315,] 0.3907769 0.4367201 0.4534707 0.4861302 0.5802435 0.5902354 0.6482861 #>  [316,] 0.5002065 0.5117005 0.5555141 0.5847776 0.6498066 0.6552028 0.7402658 #>  [317,] 0.6268386 0.6309251 0.6510754 0.6650776 0.6759834 0.6855146 0.7596917 #>  [318,] 0.4815243 0.5345801 0.7869932 0.8666045 0.8852522 1.0447137 1.0631385 #>  [319,] 0.3901001 0.3951752 0.4591208 0.5118174 0.5263642 0.5825886 0.5826687 #>  [320,] 0.6348970 0.7177651 0.7632276 0.7847546 0.8126972 0.8350069 0.8528973 #>  [321,] 0.4250564 0.5403844 0.7225121 0.7538339 0.8464074 0.8856993 0.9074619 #>  [322,] 0.3849550 0.3993161 0.5322847 0.5387486 0.6321281 0.6359353 0.6492424 #>  [323,] 0.7494299 0.8989201 0.9211177 0.9321039 0.9410483 1.0056781 1.1558734 #>  [324,] 0.5078031 0.5277916 0.5685494 0.5715468 0.6003458 0.6318877 0.6427957 #>  [325,] 0.3233114 0.3671338 0.4995907 0.5014881 0.5516275 0.5552595 0.5691832 #>  [326,] 0.4301853 0.4404993 0.5421341 0.5746321 0.5798402 0.7816297 0.8072740 #>  [327,] 0.5955927 0.6291535 0.6367343 0.7918091 0.9025183 0.9109135 0.9967717 #>  [328,] 0.3306879 0.5263861 0.7703458 0.7881753 0.8481033 0.8524133 0.8798586 #>  [329,] 0.3081736 0.3191484 0.4125951 0.4373999 0.4418391 0.4576782 0.5687483 #>  [330,] 0.7023260 0.8148932 0.8418795 0.8500731 0.9282663 0.9330747 0.9926106 #>  [331,] 0.6319574 0.7424436 0.8261301 0.8902009 0.8966694 0.9230766 0.9350793 #>  [332,] 0.5002661 0.5632860 0.6873142 0.7150936 0.7391962 0.7607554 0.7957037 #>  [333,] 0.4553974 0.4629651 0.5828254 0.7496759 0.7891213 0.8286314 0.8298054 #>  [334,] 0.4684095 0.4718867 0.4877991 0.5356281 0.5996822 0.6369327 0.6442349 #>  [335,] 0.3877265 0.3880143 0.4434583 0.4752144 0.5002633 0.5455972 0.5872185 #>  [336,] 0.3528784 0.4259255 0.4311597 0.4649544 0.4874785 0.5030661 0.5118432 #>  [337,] 0.5456792 0.5604237 0.5832470 0.6193600 0.6226350 0.6792385 0.6903277 #>  [338,] 0.6515206 0.6880235 0.7192907 0.7245646 0.7539616 0.7674032 0.7903953 #>  [339,] 1.0472764 1.1628513 1.1991610 1.2387111 1.2643859 1.2672338 1.3512444 #>  [340,] 0.4779447 0.5131919 0.5445328 0.5685494 0.6777434 0.6785633 0.6874792 #>  [341,] 0.4515738 0.5505349 0.6496467 0.6643801 0.6976490 0.7887420 1.0001532 #>  [342,] 0.6188761 1.1925131 1.2830224 1.3140313 1.3975310 1.4449225 1.4654566 #>  [343,] 0.3391007 0.3523615 0.7029507 0.7594592 0.8201232 0.8348339 0.8627320 #>  [344,] 0.6362564 0.7426165 1.0792106 1.0804964 1.1171839 1.1805235 1.2435458 #>  [345,] 0.7658622 0.8709460 0.9496566 0.9937590 1.0547865 1.0612307 1.1124756 #>  [346,] 1.2536278 1.2548582 1.2583091 1.2926130 1.4537582 1.4837793 1.4851877 #>  [347,] 0.3753404 0.7488408 0.9194070 1.2055534 1.2088975 1.2128028 1.2268941 #>  [348,] 0.7199640 0.9530489 0.9729342 1.0075896 1.0083321 1.0340864 1.0653486 #>  [349,] 0.4463411 0.8592090 0.8624189 0.9265469 1.0068959 1.0092440 1.0383817 #>  [350,] 0.2708935 0.3365441 0.3931910 0.4276433 0.4672128 0.5409923 0.6306124 #>  [351,] 0.5408693 0.7281972 0.7667470 0.7818807 0.8228154 0.8305293 0.8431123 #>  [352,] 0.3501657 0.4620788 0.5238120 0.5400915 0.5509181 0.5640903 0.5790335 #>  [353,] 0.1885205 0.5593366 0.6532922 0.6805548 0.7222852 0.7751553 0.8337541 #>  [354,] 1.2277691 1.4360570 1.6138869 1.6213691 1.7759718 1.7779905 1.7848476 #>  [355,] 0.8242392 0.9228276 0.9421045 0.9549182 1.0514106 1.0628378 1.0915981 #>  [356,] 0.8912921 1.1052013 1.1787485 1.2019538 1.2176731 1.2840337 1.2922894 #>  [357,] 0.7214758 0.8176732 0.8765315 0.9388705 0.9846060 0.9883766 1.0281245 #>  [358,] 0.2019997 0.3942796 0.4061685 0.4625465 0.4650908 0.4766648 0.5074522 #>  [359,] 0.2852912 0.5959307 0.7829015 0.8684038 0.9360344 0.9660669 1.0255448 #>  [360,] 0.3663513 0.4620726 0.4928110 0.6066652 0.6437686 0.6947540 0.6974378 #>  [361,] 0.4709711 0.4893799 0.5271901 0.5348919 0.5595583 0.6147952 0.6332370 #>  [362,] 0.5402270 0.5479325 0.6069418 0.7156318 0.7923353 0.8285279 0.8466747 #>  [363,] 0.3695347 0.5628904 0.6230425 0.6584946 0.7375044 0.7833738 0.7872584 #>  [364,] 0.8500521 0.9898710 1.3791646 1.3917013 1.3993443 1.4746773 1.7654990 #>  [365,] 0.3671338 0.3884875 0.4877900 0.5013694 0.5329196 0.5652621 0.6519522 #>  [366,] 0.5387650 1.0433633 1.0619416 1.0674395 1.1750497 1.2139404 1.2577582 #>  [367,] 0.6376485 0.6717391 0.7028215 0.7621991 0.8476824 0.9256680 0.9330207 #>  [368,] 0.5058127 0.6326157 0.6419703 0.6504964 0.6797433 0.7538305 0.7872242 #>  [369,] 0.4172817 0.7999329 0.9408210 1.0362409 1.0509540 1.0767166 1.1445447 #>  [370,] 0.1622579 0.2832242 0.6281824 0.7477569 0.7511491 0.7572716 0.8268955 #>  [371,] 0.2256609 0.2723038 0.4489702 0.6187819 0.6662529 0.6749309 0.7011370 #>  [372,] 1.5202529 1.6010063 1.6750438 1.7343802 1.7657997 1.7955735 1.8590321 #>  [373,] 0.4862446 0.5066594 0.5746041 0.5852546 0.6537113 0.6825489 0.7090491 #>  [374,] 0.3479906 0.4714659 0.5216974 0.5286997 0.5712511 0.5968325 0.6332370 #>  [375,] 0.2782736 0.3324746 0.4266716 0.4491954 0.4566883 0.4729272 0.5383274 #>  [376,] 0.2418757 0.4416751 0.4934722 0.5078031 0.5689817 0.5759413 0.5770172 #>  [377,] 0.2120599 0.2500388 0.4157192 0.4222086 0.4484837 0.4486872 0.4664421 #>  [378,] 0.4175537 0.4857634 0.4933681 0.5446001 0.5921126 0.6002133 0.6186615 #>  [379,] 0.4077313 0.4111066 0.4617430 0.5194233 0.6371374 0.6493064 0.6571278 #>  [380,] 0.2409114 0.3210467 0.4137393 0.4965287 0.5111777 0.5353910 0.5386688 #>  [381,] 0.4714606 0.5900336 0.6706116 0.6801725 0.7736385 0.7885417 0.7893598 #>  [382,] 0.2860069 0.3280496 0.3633489 0.4367201 0.5021240 0.5544488 0.5841177 #>  [383,] 0.4877498 0.8028642 0.8382098 0.8574675 0.8894662 1.0119265 1.0470781 #>  [384,] 0.9503432 1.0553519 1.2363702 1.2792987 1.3115478 1.3244094 1.5739693 #>  [385,] 0.3276942 0.4652054 0.4777010 0.4901713 0.5296710 0.5446277 0.5738560 #>  [386,] 0.4830300 0.5021891 0.5185312 0.5255184 0.5330592 0.5870283 0.5878170 #>  [387,] 0.4568271 0.6728635 0.6969678 0.7281046 0.7829656 0.8147391 0.8520805 #>  [388,] 0.3088707 0.3697606 0.4747176 0.5577461 0.5852546 0.6081481 0.6128630 #>  [389,] 0.2826386 0.2906610 0.3657831 0.3658048 0.4042463 0.5358539 0.5446629 #>  [390,] 0.4942294 0.5109154 0.5195490 0.5345708 0.5468445 0.5633748 0.5676130 #>  [391,] 0.3136374 0.4372460 0.4734435 0.5360767 0.5474114 0.5949131 0.6021796 #>  [392,] 0.2282839 0.4884643 0.4999025 0.5586099 0.5869749 0.6186786 0.6329388 #>  [393,] 0.3561721 0.8015432 0.8433407 0.9176593 0.9286451 0.9568119 1.0171466 #>  [394,] 0.3251226 0.3390662 0.4370965 0.4581537 0.5629237 0.5996822 0.5998658 #>  [395,] 0.4142641 0.4649356 0.5892782 0.6031387 0.6106637 0.6749854 0.6934775 #>  [396,] 0.5453192 0.5611623 0.6709691 0.6837227 0.7947814 0.9843714 1.0556965 #>  [397,] 0.2999953 0.3333233 0.3360452 0.4450886 0.5270543 0.5535425 0.5546223 #>  [398,] 0.2293324 0.2487355 0.4102580 0.4358542 0.4728931 0.5738897 0.6283359 #>  [399,] 0.3048060 0.4315846 0.4663009 0.4810595 0.5018910 0.5100331 0.5463946 #>  [400,] 0.3768092 0.4723970 0.5142527 0.5300850 0.5489528 0.5977486 0.6090505 #>  [401,] 0.2541215 0.4122325 0.4401434 0.4553788 0.4792514 0.4877991 0.5218092 #>  [402,] 0.4806187 0.5062312 0.5376830 0.6087522 0.6281824 0.6331571 0.6424541 #>  [403,] 0.4859296 0.7140255 0.7280331 0.7537663 0.7854010 0.7957756 0.8134874 #>  [404,] 0.4776714 0.5856327 0.6375424 0.6573971 0.6697004 0.7190526 0.7320123 #>  [405,] 1.0810412 1.1078828 1.1209323 1.1517058 1.1995452 1.2107555 1.2548582 #>  [406,] 0.7574865 0.7591691 0.8002654 0.8023719 0.8119871 0.8138536 0.8376472 #>  [407,] 0.5076056 0.7160281 0.7288345 0.8508014 0.8726904 0.8957623 0.8965192 #>  [408,] 0.3917303 0.6749520 0.6775623 0.7146012 0.7310751 0.7711324 0.7925142 #>  [409,] 0.4560278 0.5642390 0.6232488 0.6322162 0.7453339 0.8073219 0.8209614 #>  [410,] 0.4024457 0.6059121 0.6383613 0.6580526 0.6855570 0.8746798 0.8859500 #>  [411,] 0.1622579 0.3015309 0.6575790 0.7666700 0.7873041 0.8478834 0.8744806 #>  [412,] 0.5650419 0.6796447 0.7059679 0.7205450 0.8871443 0.8946866 0.9036845 #>  [413,] 0.3226564 0.3619335 0.3877822 0.3879051 0.3904832 0.3942829 0.4366266 #>  [414,] 0.2884836 0.2980818 0.5509843 0.5998683 0.6037742 0.6876990 0.6929950 #>  [415,] 0.7516039 0.7537663 0.8315310 1.0832356 1.1050766 1.1824745 1.2186767 #>  [416,] 0.3233114 0.3346100 0.3730147 0.3884875 0.4668807 0.5560086 0.5570606 #>  [417,] 0.3830085 0.3917967 0.5046050 0.5561590 0.7189127 0.7198377 0.7727212 #>  [418,] 0.7223606 0.7674967 0.9252648 0.9340406 0.9664137 0.9898710 1.0031444 #>  [419,] 0.2193636 0.6522734 0.7493782 0.7838028 0.8554646 0.8707301 0.8848497 #>  [420,] 0.5582100 0.8351911 0.9865305 1.0419349 1.0592579 1.1086303 1.1620955 #>  [421,] 0.4984199 0.6111026 0.6232734 0.6289120 0.7879457 0.8012428 0.8254576 #>  [422,] 0.2357896 0.3252274 0.3885557 0.4825222 0.4998873 0.5852473 0.6121900 #>  [423,] 0.5355846 0.5906037 0.5909170 0.6427957 0.6811925 0.6857925 0.7175342 #>  [424,] 0.6307100 0.7006235 0.7951191 0.8649560 0.8798586 0.8920085 0.9000082 #>  [425,] 0.4779216 0.6093396 0.6676639 0.6986476 0.7532461 0.7562406 0.7569892 #>  [426,] 0.3766115 0.4346719 0.4500400 0.7548900 0.7787326 0.7851741 0.7910527 #>  [427,] 0.7516585 0.9060167 1.1827120 1.3095158 1.3334425 1.4014466 1.4306143 #>  [428,] 0.6188761 1.3906291 1.4627516 1.5088695 1.5204495 1.6083246 1.6304275 #>  [429,] 0.4588847 0.5131919 0.6805548 0.6959257 0.7268296 0.7668665 0.7721169 #>  [430,] 0.6079044 0.6230996 0.8320487 0.9194070 0.9323509 0.9675278 0.9825721 #>  [431,] 0.4222055 0.5056195 0.5058127 0.6642461 0.7182067 0.7846282 0.7926107 #>  [432,] 0.4120308 0.5875270 0.6491674 0.6622900 0.6831521 0.6906525 0.6994344 #>  [433,] 0.6092573 0.6899660 0.8091852 0.8202254 0.8557120 0.8962119 0.9101548 #>  [434,] 0.5642390 0.8728453 0.9143205 0.9304500 0.9506111 0.9627313 0.9699908 #>  [435,] 0.5737663 0.6567739 0.7075758 0.7235561 0.7908859 0.8139988 0.8400099 #>  [436,] 0.3590565 0.6907860 0.7625488 0.7727661 0.8102412 0.8183682 0.8770766 #>  [437,] 0.3406819 0.5747331 0.6880235 0.8012984 0.8521412 0.8709460 0.9677037 #>  [438,] 0.3172071 0.3641350 0.4125951 0.5013049 0.5742369 0.5943617 0.5958928 #>  [439,] 0.7635971 0.7739371 0.9439475 0.9482650 0.9682567 1.1160403 1.1551597 #>  [440,] 0.2355334 0.3390662 0.5633963 0.6275792 0.6369327 0.6588543 0.6669086 #>  [441,] 0.5108991 0.6134853 0.6326242 0.7189127 0.8396846 0.8440908 0.8589440 #>  [442,] 0.5031542 0.5874982 0.7723642 0.8198295 0.8259472 0.8997562 0.9366179 #>  [443,] 0.6061490 0.6721748 0.6845963 0.7131244 0.7591335 0.8119386 0.8226054 #>  [444,] 0.4458748 0.6669086 0.7106159 0.7142090 0.7437033 0.7517326 0.7666163 #>  [445,] 0.3821529 0.3895032 0.4315797 0.5711821 0.5840100 0.6035660 0.6237688 #>  [446,] 0.2706996 0.3589255 0.3688013 0.4810240 0.5669776 0.6061490 0.6640788 #>  [447,] 0.4346719 0.4943880 0.7873505 0.8178699 0.8335206 0.8536089 0.9139232 #>  [448,] 0.5520035 0.8016874 0.9314782 0.9831571 1.0303462 1.0307870 1.0521976 #>  [449,] 1.0163688 1.0443653 1.1252770 1.1665264 1.2362072 1.3064607 1.3148640 #>  [450,] 0.7381526 0.8183682 0.8728453 0.9258321 0.9359091 1.0155430 1.0257492 #>  [451,] 0.2282305 0.3238118 0.3416982 0.3830699 0.4213168 0.4909769 0.5185312 #>  [452,] 0.4334265 0.4429249 0.4624466 0.5194233 0.5936516 0.5989517 0.6277640 #>  [453,] 0.5616091 0.5714393 0.5746041 0.6782628 0.7166887 0.7325940 0.7873505 #>  [454,] 1.6534813 1.8005252 1.9561321 1.9680457 1.9826731 2.0894524 2.1343329 #>  [455,] 0.3561721 0.8645404 0.8921676 0.9202722 0.9483690 1.0298807 1.0680996 #>  [456,] 0.3953472 0.6488499 0.6861264 0.6907860 0.6934775 0.7197752 0.7268296 #>  [457,] 0.4635209 0.4745488 0.5097590 0.5157606 0.6121310 0.6308153 0.6806444 #>  [458,] 0.3606484 0.3630003 0.4068520 0.4766648 0.5065138 0.5477479 0.5508350 #>  [459,] 0.7908759 0.8646802 1.1666422 1.1808374 1.2393749 1.2526579 1.2596075 #>  [460,] 0.3397718 0.4026674 0.4285338 0.4337698 0.4425397 0.4706086 0.5014881 #>  [461,] 0.1967649 0.2044970 0.3280496 0.3907769 0.4102853 0.4836692 0.5558828 #>  [462,] 0.3333925 0.4484837 0.4995070 0.5551638 0.5642318 0.5753715 0.5800256 #>  [463,] 1.0247421 1.0821931 1.0980964 1.1910473 1.2346414 1.2487507 1.2832747 #>  [464,] 0.2892078 0.3297268 0.4745488 0.5717497 0.6304598 0.6570631 0.6733578 #>  [465,] 0.4601222 0.5121445 0.6642103 0.6953358 0.8350582 0.8401030 0.8645532 #>  [466,] 0.4629651 0.5467908 0.5921235 0.7451009 0.7755972 0.8044576 0.8276359 #>  [467,] 0.1037188 0.4428150 0.4636649 0.4664328 0.4892372 0.5054087 0.5325772 #>  [468,] 0.2297910 0.3019276 0.3416982 0.5667249 0.5816925 0.5852583 0.5858927 #>  [469,] 0.6589182 0.7746569 0.8467477 0.8997878 0.8998580 0.9035472 0.9300628 #>  [470,] 0.4561880 0.7975751 0.8228154 0.8302536 0.8330316 0.9025331 0.9588168 #>  [471,] 0.6326242 0.7066998 0.7220772 0.7727892 0.8033060 0.8521892 0.9203529 #>  [472,] 0.3172537 0.4507095 0.5560086 0.5594476 0.5652621 0.5768876 0.5976755 #>  [473,] 0.7297703 0.8908009 1.0149548 1.0483395 1.0551788 1.0896123 1.1773811 #>  [474,] 0.3332975 0.4651329 0.8120959 0.8829645 1.0081941 1.0149294 1.0284496 #>  [475,] 0.1776247 0.3824601 0.3972208 0.5076018 0.5275356 0.5511619 0.5608033 #>  [476,] 0.4489516 0.6682446 0.7673708 0.8060717 0.8436619 0.8738320 0.8746208 #>  [477,] 0.8346687 0.8656072 0.8842997 0.9002728 0.9248882 1.0307870 1.0450899 #>  [478,] 0.3330563 0.4394138 0.4512395 0.4676956 0.4744157 0.4759046 0.5087845 #>  [479,] 0.4164269 0.4986015 0.5044952 0.5407008 0.5564996 0.5716683 0.5886895 #>  [480,] 0.5760722 0.6412465 0.8503567 0.9039584 0.9097192 0.9656383 0.9682567 #>  [481,] 0.5039649 0.5746321 0.6007627 0.6097622 0.6489483 0.6792385 0.6944752 #>  [482,] 0.5027766 1.0063955 1.0639297 1.1081897 1.2266088 1.2825370 1.3081020 #>  [483,] 0.6676639 0.6901406 0.7062261 0.7602003 0.8206898 0.9446543 0.9922475 #>  [484,] 0.3739315 0.3858145 0.4527603 0.5509181 0.5708345 0.6051244 0.6810395 #>  [485,] 0.6538904 0.8027134 0.8113225 0.8469038 0.8683483 0.8773614 0.8863482 #>  [486,] 0.5106410 0.5400270 0.5906356 0.7205450 0.7441052 0.7710820 0.7810050 #>  [487,] 0.4656898 0.5625374 0.5650919 0.6369023 0.7671926 0.8016874 0.8541896 #>  [488,] 0.3333925 0.3630003 0.4157192 0.4282523 0.4932012 0.5013049 0.5107570 #>  [489,] 0.4768777 0.7681720 0.7829454 0.8091297 0.8629120 0.8920162 0.8992593 #>  [490,] 0.4889698 0.4921198 0.6125294 0.6969912 0.7363873 0.7364220 0.7839436 #>  [491,] 0.2374153 0.3473918 0.3539767 0.4268916 0.4933681 0.5185337 0.5520382 #>  [492,] 0.6839223 0.7207868 0.8689665 1.1162303 1.2049398 1.2315382 1.3608196 #>  [493,] 2.1859760 2.2875630 2.3332277 2.5028878 2.5955872 2.5962759 2.5979764 #>  [494,] 0.5452864 0.7473889 0.7890155 0.8345964 0.8660294 1.0326413 1.0363973 #>  [495,] 0.4063619 0.4636649 0.4786091 0.4942294 0.5415113 0.5749347 0.5883195 #>  [496,] 0.2367144 0.3491207 0.3999630 0.4765855 0.4902425 0.5309221 0.5339806 #>  [497,] 0.2964465 0.3738386 0.6670931 0.6839840 0.7260439 0.7632397 0.7840143 #>  [498,] 0.5467908 0.5828254 0.6123603 0.6476858 0.7508591 0.7697303 0.8021341 #>  [499,] 0.6106637 0.6565955 0.7112550 0.7381526 0.7607554 0.7702186 0.8091413 #>  [500,] 0.4803254 0.4967045 0.5546548 0.6530427 0.7326638 0.7462886 0.7547868 #>  [501,] 0.4591873 0.5680426 0.6682023 0.6688904 0.6811815 0.6837995 0.7666163 #>  [502,] 0.3308434 0.3365441 0.3447042 0.5096054 0.5491708 0.7013867 0.7036856 #>  [503,] 0.9966173 1.3381338 1.3453941 1.3875662 1.4058899 1.4221246 1.4931165 #>  [504,] 0.5415934 0.5425533 0.6588853 0.6685695 0.7583167 0.7660456 0.7918567 #>  [505,] 0.4350633 0.4566860 0.5111777 0.5172094 0.5752908 0.5992017 0.6343959 #>  [506,] 0.7422461 0.9612810 1.0834659 1.0904585 1.1073841 1.1209323 1.1706830 #>  [507,] 0.5122345 0.6306156 0.6638285 0.6715817 0.6836024 0.7965138 0.8015432 #>  [508,] 0.5893544 0.5991529 0.6847816 0.7021442 0.7028576 0.7076885 0.7079721 #>  [509,] 0.3314480 0.3364444 0.3738929 0.4054438 0.4726597 0.4788982 0.4863734 #>  [510,] 0.4576199 0.7235561 0.9085088 0.9401676 0.9417579 0.9610424 0.9728641 #>  [511,] 0.8524133 0.8649560 1.0132215 1.0332973 1.1272105 1.1517058 1.3088271 #>  [512,] 0.5233733 0.5400915 0.5751968 0.7052481 0.7299863 0.7418829 0.7535541 #>  [513,] 0.4991214 0.5312998 0.5441923 0.5708345 0.5906503 0.6137442 0.6490438 #>  [514,] 0.3638653 0.3740718 0.3867787 0.4624376 0.4756084 0.5119379 0.5213667 #>  [515,] 0.4996513 0.5561590 0.6532117 0.6623280 0.6642607 0.6876937 0.7335450 #>  [516,] 0.7426165 0.7454337 1.0031444 1.0235061 1.0482942 1.1925060 1.2989619 #>  [517,] 0.3491207 0.3568532 0.3931401 0.4810240 0.4877424 0.4878814 0.4986276 #>  [518,] 0.2434542 0.4648506 0.4747176 0.4917844 0.4986276 0.5339806 0.5669776 #>  [519,] 0.3497051 0.4069700 0.4421352 0.5425533 0.6175773 0.6487045 0.7127512 #>  [520,] 0.7863525 0.8219534 1.0669706 1.1771141 1.2619548 1.2738165 1.3063071 #>  [521,] 0.2988458 0.3317955 0.4500648 0.5790875 0.6030507 0.6155286 0.6642461 #>  [522,] 0.2799555 0.2999953 0.3686796 0.4204032 0.4240675 0.5211590 0.5653957 #>  [523,] 0.2917909 0.4805444 0.6814172 0.6837227 0.7144689 0.7676503 0.7932000 #>  [524,] 0.3242519 0.3252274 0.3619760 0.4244104 0.5424208 0.5724630 0.5743236 #>  [525,] 0.3486809 0.5738917 0.7168527 0.7280331 0.8775842 0.9605247 0.9977871 #>  [526,] 0.4677776 0.5619975 0.6277640 0.6973338 0.7262368 0.7626788 0.7711357 #>  [527,] 0.2312718 0.3367024 0.4039046 0.4226543 0.4337698 0.4568311 0.4998430 #>  [528,] 0.5547316 0.6461318 0.7741801 0.8143255 0.8262811 0.8276359 0.8504683 #>  [529,] 0.4386174 0.4573359 0.4610525 0.5079071 0.6623280 0.6853393 0.7698427 #>  [530,] 0.2964465 0.4481547 0.5156157 0.6582642 0.6733578 0.6962368 0.7358509 #>  [531,] 0.5408693 0.5601086 0.6962368 0.7304615 0.7501616 0.7840143 0.7975751 #>  [532,] 0.2782736 0.3615296 0.3794666 0.3840249 0.4146233 0.4774153 0.4865852 #>  [533,] 0.4466148 0.4576609 0.4888781 0.4944436 0.5029421 0.5230248 0.5522129 #>  [534,] 0.3435575 0.5118174 0.5455786 0.5503629 0.6060499 0.6269038 0.6331571 #>  [535,] 0.1354140 0.4733509 0.4944436 0.5279254 0.5503015 0.5531836 0.6516036 #>  [536,] 0.9330747 0.9349830 0.9921747 1.0178122 1.0360908 1.1407805 1.1720893 #>  [537,] 0.3490248 0.4252894 0.6357975 0.7271289 0.7571890 0.7678280 0.7976871 #>  [538,] 0.1885205 0.6027604 0.6234002 0.7234272 0.8044079 0.8256712 0.8398741 #>  [539,] 0.2635167 0.2849493 0.3336941 0.3384407 0.4557704 0.4568311 0.4805246 #>  [540,] 0.2312718 0.3397718 0.4052340 0.4144953 0.4728637 0.4995907 0.5136086 #>  [541,] 0.8269073 0.9449309 0.9503432 0.9711797 1.0752955 1.1076806 1.2150459 #>  [542,] 0.4216764 0.5261671 0.6155286 0.6548641 0.6675856 0.6806289 0.6817275 #>  [543,] 0.3996243 0.4105368 0.5254439 0.5255184 0.5390286 0.5509843 0.5697183 #>  [544,] 0.4567149 0.5494084 0.6859785 0.8329451 0.9011810 0.9549182 0.9909327 #>  [545,] 0.5655042 0.7377664 0.7751978 0.8611325 0.9101877 0.9814290 1.0028339 #>  [546,] 0.5013694 0.5156157 0.5373695 0.5482985 0.5524559 0.5552595 0.6030685 #>  [547,] 0.3222093 0.3473426 0.4548318 0.4600136 0.5120960 0.5324907 0.5412162 #>  [548,] 0.5327931 0.5503629 0.5631244 0.6050866 0.6090639 0.6340937 0.6403541 #>  [549,] 0.4292007 0.4758166 0.4841684 0.5102184 0.5598599 0.6084161 0.6283728 #>  [550,] 0.5756206 0.6376485 0.8920085 0.9210794 0.9565790 0.9650843 0.9678827 #>  [551,] 0.3658741 0.4629031 0.5598856 0.6002670 0.6146684 0.6159951 0.6254634 #>  [552,] 0.6178595 0.7806528 0.8136846 0.9261903 0.9346225 0.9541693 0.9624899 #>  [553,] 0.7557418 0.7806528 0.9422243 0.9865992 1.0275810 1.0853410 1.1159021 #>  [554,] 0.4648506 0.5142300 0.5309221 0.5647567 0.6084392 0.6123603 0.6335523 #>  [555,] 0.9230766 0.9325296 0.9845647 1.0830179 1.1062695 1.1163056 1.1994370 #>  [556,] 0.5163068 0.5329196 0.5359079 0.5462907 0.5666351 0.6030685 0.6612528 #>  [557,] 0.4856305 0.6899660 0.7058884 0.8229090 0.8312049 0.8797816 0.8937646 #>  [558,] 0.3904832 0.4498549 0.5468519 0.5480606 0.5529967 0.5754240 0.6016540 #>  [559,] 0.2979887 0.6476332 0.6550230 0.7127361 0.7243373 0.7598689 0.7651420 #>  [560,] 0.3391814 0.3628950 0.4164269 0.4666526 0.5113782 0.5201234 0.5203093 #>  [561,] 0.2968705 0.3044153 0.3693318 0.4581537 0.4792514 0.4861192 0.5283992 #>  [562,] 0.5026967 0.5894015 0.7415615 0.7923845 0.8577357 0.9052041 0.9139232 #>  [563,] 0.3167376 0.3903283 0.5201234 0.5476729 0.6287121 0.6488428 0.6885173 #>  [564,] 0.3360452 0.3572687 0.4012718 0.4870719 0.5018910 0.5326273 0.5465198 #>  [565,] 0.3858145 0.4737034 0.4876501 0.5441923 0.5672398 0.5831350 0.5940870 #>  [566,] 0.3554529 0.4545728 0.5229167 0.5312950 0.5343681 0.6269038 0.6370947 #>  [567,] 0.4878990 0.4975983 0.5598856 0.6418424 0.6833277 0.6866807 0.7034803 #>  [568,] 0.3884991 0.4815243 0.6752507 0.7329509 0.7674032 0.7918567 0.9208634 #>  [569,] 0.4423028 0.4709711 0.5968325 0.5991498 0.5991693 0.6859225 0.7211995 #>  [570,] 0.4031496 0.4122325 0.4861192 0.5419426 0.5556667 0.5601752 0.5608046 #>  [571,] 0.3547773 0.4197049 0.4765414 0.5116123 0.5120960 0.5448521 0.5476729 #>  [572,] 0.2840007 0.5097590 0.5281297 0.5499918 0.5716971 0.5736833 0.5817051 #>  [573,] 0.3187897 0.3619335 0.5178539 0.5260726 0.5438461 0.5529967 0.5556020 #>  [574,] 0.2557244 0.4088249 0.4971902 0.5341007 0.5431550 0.5742369 0.6180573 #>  [575,] 0.5066424 0.5257652 0.6394905 0.6602882 0.6951371 0.7170544 0.7558919 #>  [576,] 0.5906037 0.6713251 0.7245646 0.7657191 0.7934218 0.8537098 0.8768584 #>  [577,] 0.4024457 0.5778408 0.7812633 0.8267255 0.8989273 0.8997878 0.9205000 #>  [578,] 0.3607338 0.3993161 0.4808725 0.5005509 0.5652138 0.6348970 0.7020941 #>  [579,] 0.2345092 0.4498442 0.6015085 0.7166887 0.7455655 0.7516894 0.8160630 #>  [580,] 0.5593366 0.6027604 0.6315850 0.6323718 0.6749854 0.7256537 0.7357767 #>  [581,] 0.3554529 0.5354898 0.5884149 0.5894015 0.6789112 0.6907834 0.6936543 #>  [582,] 0.2243061 0.4687024 0.4714862 0.4934722 0.5420559 0.5443058 0.5451903 #>  [583,] 0.4894494 0.5785824 0.6245253 0.7491739 0.7799340 0.8248730 0.8740258 #>  [584,] 0.1599595 0.3473426 0.3606484 0.3664027 0.4190925 0.4445912 0.5514899 #>  [585,] 0.2964075 0.6131158 0.6186149 0.6476402 0.6486387 0.6566004 0.6725225 #>  [586,] 0.4077000 1.0577302 1.0792106 1.1101215 1.1127515 1.1506055 1.1564787 #>  [587,] 0.4698670 0.5907306 0.6313470 0.6407980 0.6554045 0.6555931 0.6666018 #>  [588,] 0.2303572 0.4392056 0.4620726 0.5002065 0.6774032 0.7364477 0.7588341 #>  [589,] 0.1953774 0.3238118 0.3709005 0.4105368 0.4633584 0.4791785 0.4830300 #>  [590,] 0.4798825 0.5118116 0.5188999 0.6480952 0.6668926 0.6795478 0.7066701 #>  [591,] 0.4422656 0.9848017 1.0780373 1.1978771 1.2043238 1.2696152 1.2959284 #>  [592,] 0.2293324 0.3315173 0.4220284 0.4706086 0.4739094 0.4788826 0.5736833 #>  [593,] 0.2708935 0.4925249 0.5080920 0.5096054 0.5656983 0.6171021 0.6171834 #>  [594,] 0.4962239 0.6277738 0.6461318 0.6476858 0.7182977 0.7218247 0.7233158 #>  [595,] 0.3730147 0.4507095 0.4877900 0.5254055 0.5785141 0.5988992 0.6122028 #>  [596,] 0.5451681 0.5546548 0.5878172 0.6682008 0.6876990 0.6998869 0.7415216 #>  [597,] 0.5156909 0.5296571 0.5720592 0.6736324 0.6908298 0.7413473 0.7481673 #>  [598,] 0.5934524 0.6484599 0.6501876 0.6634054 0.6754176 0.6811815 0.7170195 #>  [599,] 0.2357896 0.3242519 0.5509879 0.5869009 0.5938488 0.5995692 0.6023265 #>  [600,] 0.3835656 0.5177867 0.6616281 0.7293568 0.7500252 0.7714961 0.7951125 #>  [601,] 0.4293575 0.8401921 0.8610750 0.9085351 0.9270294 0.9310631 0.9445509 #>  [602,] 0.4329912 0.4615846 0.4668836 0.5087845 0.5109154 0.5284672 0.5547625 #>  [603,] 0.2469935 0.3210467 0.4700474 0.4799583 0.4896213 0.5172094 0.6011397 #>  [604,] 0.5076056 0.6536930 0.7341132 0.7596671 0.7839593 0.7875771 0.7938491 #>  [605,] 0.1989312 0.3126654 0.4663009 0.5322847 0.5421341 0.5553601 0.5670528 #>  [606,] 0.4728509 0.5062312 0.5327931 0.5669624 0.7214758 0.7513954 0.8166686 #>  [607,] 0.4604181 0.5921235 0.6015904 0.6768088 0.7376029 0.7383932 0.7526442 #>  [608,] 0.3168347 0.4984199 0.5827274 0.6398525 0.6545609 0.7170332 0.7628485 #>  [609,] 0.4315797 0.4531359 0.4545728 0.4966920 0.5354898 0.5461294 0.5536090 #>  [610,] 0.6419355 0.9290551 0.9530816 1.0014498 1.0103239 1.0815478 1.2398988 #>  [611,] 0.4941481 0.5900336 0.6751453 0.7781352 0.8106073 0.8476824 0.8629415 #>  [612,] 0.3849656 0.4394292 0.5351830 0.5566323 0.6329388 0.6911671 0.7530470 #>  [613,] 0.5594920 0.5981557 0.6442443 0.6505222 0.6650776 0.7146996 0.7279939 #>  [614,] 0.7183012 0.7207820 0.9555567 0.9892494 1.0426566 1.0632155 1.0833247 #>  [615,] 0.5106410 0.6500597 0.6796447 0.7596670 0.8113225 0.8240154 0.8476716 #>  [616,] 0.8237499 0.9510761 1.1134521 1.1150658 1.1562988 1.1782388 1.1862444 #>  [617,] 0.3622363 0.4123920 0.4346951 0.4453192 0.4730814 0.4769688 0.4953386 #>  [618,] 0.4251477 0.4583017 0.4858478 0.5390297 0.5798402 0.6076570 0.6351726 #>  [619,] 0.1779175 0.3543659 0.3547695 0.4123920 0.4438148 0.4774153 0.4834136 #>  [620,] 0.3579435 0.5358539 0.5366731 0.5395834 0.5648470 0.6081113 0.6427197 #>  [621,] 0.3501657 0.3593264 0.4178846 0.4361177 0.4727850 0.6837802 0.7245343 #>  [622,] 0.3910574 0.4329912 0.4562475 0.4898979 0.5066904 0.5306511 0.5426174 #>  [623,] 0.2185745 0.4366266 0.4441402 0.4874785 0.5383679 0.5556020 0.5570606 #>  [624,] 0.3658741 0.4135067 0.4828304 0.5137121 0.5153933 0.5545155 0.6243260 #>  [625,] 0.8589440 0.8670800 0.8959375 0.9969409 1.0414119 1.0422242 1.0743324 #>  [626,] 0.6434676 1.1887927 1.2036866 1.3003535 1.3587939 1.4489622 1.4644260 #>  [627,] 0.5026967 0.6423436 0.6936543 0.7050573 0.8571478 0.8892194 0.9173877 #>  [628,] 0.3088707 0.3091076 0.4863734 0.5445162 0.5583643 0.5936762 0.5987335 #>  [629,] 0.5647841 0.6232734 0.6712344 0.7557418 0.8335839 0.8426266 0.8723428 #>  [630,] 0.6362564 0.7454337 0.8361406 0.8586384 0.8867327 0.9187829 0.9252648 #>  [631,] 0.3485035 0.4329077 0.4418391 0.4726597 0.4816213 0.4865701 0.4876958 #>  [632,] 0.3172537 0.4269472 0.5080920 0.5409923 0.5531408 0.5841177 0.6037206 #>  [633,] 0.1727962 0.4361177 0.5784169 0.6382418 0.7138183 0.7150422 0.8454453 #>  [634,] 0.5408530 0.5628904 0.5772825 0.6054718 0.6293128 0.7412978 0.7432020 #>  [635,] 0.4728509 0.4806187 0.6366300 0.6998528 0.7090418 0.7254524 0.7375105 #>  [636,] 0.3231234 0.6628998 0.6643801 0.7027118 0.7201094 0.7734807 0.8790075 #>  [637,] 0.6496467 0.6628998 0.6921075 0.7675113 0.8110998 0.8437147 0.9157993 #>  [638,] 0.3547695 0.3622888 0.3641349 0.4146233 0.4202269 0.4266716 0.4789272 #>  [639,] 0.5046714 0.7652280 0.7699063 0.9312268 0.9446005 1.0540575 1.0606064 #>  [640,] 0.3905570 0.5359079 0.5594476 0.6128630 0.6311085 0.6519522 0.6734122 #>  [641,] 0.6434676 0.8577357 1.0081187 1.0427777 1.1492987 1.1724928 1.2094259 #>  [642,] 0.2418824 0.6268386 0.6427886 0.6567739 0.6792586 0.7021442 0.7263555 #>  [643,] 0.4562501 0.4635898 0.6633026 0.7195911 0.7316303 0.8431391 0.8463871 #>  [644,] 0.9865946 1.2583091 1.3697740 1.6952546 1.7187666 1.8021132 1.8710686 #>  [645,] 0.1825666 0.3242840 0.3638653 0.4412104 0.4791898 0.5350797 0.5431550 #>  [646,] 0.4321481 0.5567676 0.6183795 0.8805021 0.9482650 0.9538047 0.9729342 #>  [647,] 0.8825739 0.9941509 1.1650843 1.1835732 1.1987695 1.2930526 1.3032984 #>  [648,] 0.3038167 0.6631138 0.6668926 0.8017866 0.8937646 0.9325296 0.9684391 #>  [649,] 0.1671345 0.3723088 0.3742529 0.3988786 0.5516623 0.5633963 0.6031217 #>  [650,] 0.5927699 0.6210740 0.6741922 0.7140255 0.7656913 0.7721200 0.7877247 #>  [651,] 0.4453192 0.4725953 0.5274212 0.5329345 0.5446237 0.5501248 0.5873070 #>  [652,] 0.4401434 0.4727850 0.4815277 0.5177581 0.5283699 0.5402864 0.5497495 #>  [653,] 0.3552347 0.3686939 0.3999630 0.4220651 0.4878814 0.5225529 0.6315908 #>  [654,] 0.1707441 0.3044153 0.3821529 0.4501168 0.4906728 0.4996527 0.5265614 #>  [655,] 0.5969688 0.6602882 0.6702983 0.6717391 0.7428478 0.7583778 0.7778631 #>  [656,] 0.1779175 0.3641349 0.4669314 0.4769688 0.4862321 0.5107410 0.5242326 #>  [657,] 0.2884836 0.4884643 0.5512997 0.5697183 0.5716479 0.6531894 0.6682008 #>  [658,] 0.7489698 0.7873519 0.8336663 0.9195132 0.9254464 1.0105686 1.1153894 #>  [659,] 0.5547316 0.7183012 0.7925142 0.7952429 0.8169539 0.8286314 0.9453851 #>  [660,] 0.4378167 0.5118116 0.5500943 0.5765119 0.6122430 0.6186149 0.6438595 #>  [661,] 0.7936241 0.8467477 0.9789282 0.9797849 1.0426800 1.1030041 1.1621069 #>  [662,] 0.3605811 0.7217154 0.9537651 0.9882980 1.0391205 1.0608954 1.1102597 #>  [663,] 0.6210855 0.6625665 0.6838298 0.7311249 0.7539422 0.7962146 0.8156924 #>  [664,] 0.4392056 0.5117005 0.5372611 0.5853963 0.5917162 0.5987499 0.6029454 #>  [665,] 0.3081736 0.3641350 0.4303685 0.4729340 0.5271262 0.5610354 0.6017890 #>  [666,] 0.7217154 1.0301736 1.0514150 1.1601509 1.2258868 1.3138742 1.3403902 #>  [667,] 0.5957165 0.6390308 0.7850612 0.8068856 0.8185930 0.8373043 0.9674294 #>  [668,] 0.2608155 0.5164729 0.5503015 0.5737817 0.6229309 0.6455293 0.6592886 #>  [669,] 0.3486809 0.6870243 0.7103136 0.7778284 0.8440908 0.8661141 0.8768750 #>  [670,] 0.1934650 0.4976059 0.7679584 0.7854010 0.7966990 0.8105844 0.8386201 #>  [671,] 0.5087454 0.5266322 0.6120957 0.6131158 0.6602345 0.6841066 0.7359530 #>  [672,] 0.3605811 0.7890155 0.8558846 0.8848497 1.0301736 1.0462197 1.0504178 #>  [673,] 0.4537485 0.4597046 0.4901092 0.5069199 0.5540344 0.6254402 0.6327567 #>  [674,] 0.8091516 0.9742825 0.9928848 1.0548866 1.0703207 1.0707247 1.1230613 #>  [675,] 0.6046660 0.6367343 0.7028576 0.7377664 0.7558011 0.8004971 0.8607032 #>  [676,] 0.5480396 0.6778923 0.7184353 0.8119769 0.8811243 0.9138857 0.9282663 #>  [677,] 0.4378167 0.4902425 0.5225529 0.5254055 0.5261671 0.5919135 0.6542758 #>  [678,] 0.3412836 0.4355330 0.5927699 0.6599623 0.7756791 0.8123276 0.8273155 #>  [679,] 0.2805693 0.2961382 0.4539678 0.4585624 0.4892372 0.5043516 0.5351272 #>  [680,] 0.4476512 0.6427886 0.6759834 0.6980601 0.7076885 0.8139988 0.8380118 #>  [681,] 0.2090033 0.2828096 0.3628950 0.4543130 0.4974309 0.5044952 0.6360859 #>  [682,] 0.3619989 0.3685980 0.3807536 0.3904282 0.4008153 0.4130207 0.4195729 #>  [683,] 0.3905570 0.4756207 0.5412091 0.5462907 0.5952378 0.6411389 0.7400473 #>  [684,] 0.2879469 0.4744157 0.5229341 0.5284672 0.5326273 0.5380783 0.5458251 #>  [685,] 0.5280187 0.6536930 0.6830510 0.7207868 1.0248027 1.0262714 1.0700744 #>  [686,] 0.3224540 0.4805444 0.5453192 0.5619975 0.7267849 0.7289076 0.7509239 #>  [687,] 0.6017890 0.6200234 0.6980644 0.7938491 0.8033950 0.8428723 0.8507786 #>  [688,] 0.3135979 0.4901713 0.5108190 0.5680426 0.6379742 0.6455293 0.6473283 #>  [689,] 0.2644412 0.5939493 0.8248730 0.8795495 0.8867939 0.8988754 0.9671340 #>  [690,] 0.5610128 0.6267142 0.6305275 0.6712300 0.6715817 0.6809556 0.7066524 #>  [691,] 0.4463587 0.4604181 0.4723970 0.5477150 0.5637111 0.5838696 0.6199216 #>  [692,] 0.3575733 0.3665872 0.3724785 0.3742991 0.4152830 0.4222086 0.4352025 #>  [693,] 0.5783442 0.6015904 0.6228384 0.6279489 0.6400903 0.6556327 0.6992264 #>  [694,] 0.3738386 0.4481547 0.6115310 0.6320971 0.6570631 0.7063055 0.7448427 #>  [695,] 0.4698591 0.5611779 0.6712776 0.7390494 0.8125552 0.8962170 0.8993950 #>  [696,] 0.3773446 0.4304110 0.4656622 0.5379842 0.5652138 0.6791821 0.7646652 #>  [697,] 0.1354140 0.4221216 0.4677549 0.5230248 0.5737817 0.6227250 0.6233386 #>  [698,] 0.2044970 0.2813431 0.4323765 0.4534707 0.5021240 0.5275356 0.5343814 #>  [699,] 0.4422656 0.8354571 0.8478155 0.9654936 1.0485823 1.2758359 1.3370421 #>  [700,] 0.4743537 0.5866958 0.8382098 0.8652395 0.8763830 0.8991391 0.9115748 #>  [701,] 0.4526056 0.5238537 0.5891360 0.6191237 0.6500806 0.6589267 0.6644645 #>  [702,] 0.6573711 0.6591912 0.7516894 0.7576443 0.7814956 0.8312444 0.8481842 #>  [703,] 0.4339342 0.4873870 0.5222120 0.5474114 0.5581709 0.5888384 0.5930841 #>  [704,] 0.6845088 0.7950088 0.8202254 0.8242392 0.9307254 0.9599532 0.9742813 #>  [705,] 0.4376309 0.5958351 0.6662670 0.7358031 0.7550694 0.7668032 0.8755014 #>  [706,] 0.4304110 0.5045733 0.5517161 0.6150655 0.8360344 0.8436619 0.8680448 #>  [707,] 0.6768088 0.8950190 0.9634342 0.9691958 0.9717478 1.0080481 1.0121407 #>  [708,] 0.3825866 0.4175537 0.4670998 0.4804604 0.5862601 0.5879191 0.5911446 #>  [709,] 0.3663335 0.4701566 0.5029421 0.6079740 0.6661617 0.7665243 0.7678769 #>  [710,] 0.9363303 1.0100751 1.2011329 1.2302602 1.3636697 1.4685806 1.4728971 #>  [711,] 0.4803254 0.5664114 0.5853017 0.5867643 0.5878172 0.5906503 0.6124764 #>  [712,] 0.7760351 0.8892120 0.9084129 1.0173168 1.1406988 1.1696865 1.2206526 #>  [713,] 0.4629620 0.4677549 0.4733509 0.4888781 0.5004484 0.5154286 0.5669529 #>  [714,] 0.6566094 0.7778631 0.8209974 0.8259472 0.8741656 0.8797610 0.8825735 #>  [715,] 0.2108323 0.2730850 0.3504234 0.3665872 0.3734575 0.5056143 0.5560871 #>  [716,] 0.6010726 0.6671713 0.6741922 0.7198927 0.7712652 0.8386201 0.8614575 #>  [717,] 0.4708821 0.5299029 0.6293128 0.6616158 0.7262368 0.8244515 0.9094021 #>  [718,] 0.5677036 0.5751968 0.6439229 0.6443399 0.6615360 0.6641896 0.6997395 #>  [719,] 0.4924419 0.5056195 0.5964617 0.6419703 0.6859785 0.6960617 0.7266624 #>  [720,] 1.0472764 1.3184100 1.3203076 1.4623461 1.5413792 1.5439096 1.5808427 #>  [721,] 0.4208741 0.5433174 0.6815069 0.7788166 0.7928019 0.8198295 0.8291746 #>  [722,] 0.2418212 0.3840249 0.3901001 0.4837325 0.4995391 0.5096032 0.5107410 #>  [723,] 0.1934650 0.4714971 0.6582642 0.7654104 0.7957756 0.8159574 0.8251129 #>  [724,] 0.2193636 0.6124764 0.6137442 0.7022318 0.7415216 0.7922208 0.7962904 #>  [725,] 0.5657751 0.6073761 0.6546332 0.6881286 0.7332021 0.7339925 0.7717429 #>  [726,] 0.4714606 0.5121445 0.7746408 0.7924199 0.8047652 0.8172050 0.8629415 #>  [727,] 0.5274485 0.6079740 0.7651036 0.7754378 0.8351911 0.9236481 0.9449309 #>  [728,] 0.2120599 0.2929110 0.3633813 0.3685980 0.4073261 0.4199082 0.4202269 #>  [729,] 0.6770855 0.7595197 0.7838107 0.7907184 0.8517025 0.8722485 0.8755273 #>  [730,] 0.2409114 0.2469935 0.3576810 0.5115678 0.5556667 0.5713410 0.5731874 #>  [731,] 0.3766115 0.4943880 0.5907306 0.6997904 0.7325940 0.7368415 0.7687109 #>  [732,] 0.2519073 0.3336941 0.4616543 0.4700023 0.4873870 0.5339643 0.5597358 #>  [733,] 0.4550436 0.5188535 0.6763253 0.7277572 0.8380242 0.8520782 0.8566295 #>  [734,] 1.2532081 1.2724941 1.2967866 1.3305923 1.4871172 1.4953360 1.5108119 #>  [735,] 0.2341277 0.2446095 0.2907175 0.4508542 0.4585624 0.5578122 0.5586949 #>  [736,] 0.4588847 0.4779447 0.5567204 0.5715468 0.6344234 0.6557465 0.6793244 #>  [737,] 0.4075805 0.4182212 0.4974622 0.6584946 0.6855570 0.7698975 0.8017580 #>  [738,] 0.3450018 0.5156554 0.5257652 0.5290774 0.6147116 0.6702983 0.7464663 #>  [739,] 0.4253331 0.5233733 0.5238120 0.5840100 0.6558034 0.6666756 0.6723129 #>  [740,] 0.4694029 0.4991595 0.5156554 0.5223843 0.5969688 0.6456974 0.6625494 #>  [741,] 0.1562207 0.3970671 0.4326671 0.4817913 0.5484170 0.5777540 0.6974324 #>  [742,] 0.5065474 0.8176732 0.8308880 0.8413078 0.8550718 0.8614140 0.8912364 #>  [743,] 0.6079336 0.6311174 0.6366300 0.7059679 0.7293568 0.8232029 0.8476716 #>  [744,] 0.3619760 0.4428150 0.4690987 0.4998873 0.5148664 0.5293162 0.5611208 #>  [745,] 0.2556632 0.4195729 0.4312064 0.4789272 0.5137063 0.5318165 0.5329345 #>  [746,] 0.2500388 0.2770693 0.2888624 0.2929110 0.3619989 0.3742991 0.4488914 #>  [747,] 0.3385360 0.3931401 0.4651564 0.4739782 0.5139621 0.6526109 0.6623339 #>  [748,] 0.9922475 1.0066171 1.0770741 1.1424962 1.1454182 1.2104392 1.2619430 #>  [749,] 0.3392456 0.4386174 0.5026561 0.5591255 0.6457926 0.7222722 0.8195088 #>  [750,] 0.4765582 0.8161502 0.9025089 0.9134330 1.0251546 1.1621741 1.1626996 #>  [751,] 0.3276942 0.4269487 0.4512395 0.4786091 0.5092710 0.5102330 0.5309498 #>  [752,] 0.1187200 0.5360294 0.5688078 0.5865973 0.7426287 0.7951191 0.8145526 #>  [753,] 0.2541215 0.4684095 0.5283992 0.5387520 0.5655034 0.5727699 0.6030855 #>  [754,] 0.6170588 0.8243922 0.8624189 0.9333937 1.0073694 1.0120791 1.1494238 #>  [755,] 0.8814088 0.9612810 1.0810412 1.3347596 1.5695609 1.5772719 1.6231037 #>  [756,] 0.7270006 0.7553210 0.8473550 0.8897790 0.8934518 0.9000082 1.0062982 #>  [757,] 0.3237671 0.3879051 0.4324017 0.4870662 0.4914695 0.5383679 0.5438461 #>  [758,] 1.0027524 1.1718125 1.1769164 1.2128028 1.2165585 1.2532081 1.2809540 #>  [759,] 0.5026990 0.5069199 0.5166392 0.5178539 0.5543921 0.5865905 0.5882810 #>  [760,] 0.4732983 0.5117717 0.5650220 0.6269201 0.6398555 0.6709620 0.6883754 #>  [761,] 0.2849493 0.3327656 0.3367024 0.4026674 0.4052340 0.4277468 0.4616543 #>  [762,] 0.2663603 0.2828096 0.3503878 0.5468519 0.5691832 0.6043631 0.6114488 #>  [763,] 0.3423054 0.5053129 0.5429092 0.5802435 0.5884547 0.6357125 0.6868268 #>  [764,] 0.7199640 0.7357022 0.7719385 0.8060717 0.8093230 0.8561646 0.8712984 #>  [765,] 0.3224814 0.3428952 0.4576609 0.5154286 0.6442773 0.6599623 0.6650934 #>  [766,] 0.3972208 0.4172823 0.4338930 0.4998761 0.6365918 0.6411076 0.7221123 #>  [767,] 0.3675840 0.7269182 0.7437033 0.7574081 0.7706156 0.7838368 0.8063002 #>  [768,] 0.3231234 0.4942408 0.5447581 0.5505349 0.7633689 0.7714211 0.8110998 #>  [769,] 0.4717657 0.7060368 0.7626853 0.7872482 0.8779764 0.8993781 0.9612096 #>  [770,] 0.2988458 0.5451808 0.5495108 0.6986640 0.7295274 0.7473392 0.7674495 #>  [771,] 0.3547773 0.3636563 0.3834567 0.4272958 0.4445912 0.4706863 0.5083381 #>  [772,] 0.7652280 0.9250110 0.9720190 0.9817771 1.0178122 1.0452325 1.0489673 #>  [773,] 0.4222055 0.4500648 0.5451808 0.5602758 0.5964617 0.6886554 0.7966682 #>  [774,] 0.2740490 0.3552347 0.6014663 0.6719396 0.7011634 0.7238620 0.7818807 #>  [775,] 0.4473199 0.5122345 0.5326792 0.6152761 0.6482947 0.6809556 0.6831133 #>  [776,] 0.2840007 0.2940947 0.5148664 0.5228366 0.5385255 0.5522014 0.5533013 #>  [777,] 0.3880143 0.5357262 0.5402911 0.5757268 0.6205554 0.6283728 0.6350839 #>  [778,] 0.7516039 0.8134874 0.8641328 0.8788879 0.9307758 0.9733051 1.0275344 #>  [779,] 0.4795558 0.5390297 0.5875270 0.5932370 0.6981820 0.7150041 0.7185585 #>  [780,] 0.7424838 0.7872482 0.8386018 0.8583676 0.9143442 0.9158798 0.9638344 #>  [781,] 0.1612775 0.2960704 0.4728931 0.4739094 0.5237929 0.5407830 0.6350839 #>  [782,] 0.1967649 0.2813431 0.2860069 0.3144744 0.3930992 0.4861302 0.5531408 #>  [783,] 0.4077905 0.6534226 0.6704384 0.6712344 0.6812332 0.7048666 0.7628485 #>  [784,] 0.1037188 0.4063619 0.4676956 0.5088882 0.5171115 0.5195490 0.5293162 #>  [785,] 0.1612775 0.2808273 0.4139112 0.4220284 0.4358542 0.5321568 0.5482985 #>  [786,] 0.6465565 0.6515206 0.6662670 0.7264164 0.7657191 0.8380772 0.9153141 #>  [787,] 0.2244068 0.2687605 0.3942796 0.4032975 0.5009725 0.5119379 0.5184104 #>  [788,] 0.7295274 0.9019724 0.9290551 0.9582882 0.9793055 1.0242757 1.0593014 #>  [789,] 0.3759315 0.3970671 0.4375598 0.4674926 0.5024543 0.5497495 0.5637695 #>  [790,] 0.7464420 0.8550427 0.9116462 0.9139681 1.0267943 1.0443108 1.0916332 #>  [791,] 0.9315703 1.1719730 1.1905578 1.1931777 1.3727415 1.3843608 1.4448139 #>  [792,] 0.6030888 1.2442686 1.3270773 1.3723203 1.5073706 1.5154273 1.5767424 #>  [793,] 0.3838237 0.5544579 0.6205120 0.6812332 0.7270006 0.7302881 0.7695102 #>  [794,] 0.3516280 0.4008153 0.5063226 0.5120109 0.5641328 0.5716221 0.5793782 #>  [795,] 0.2723038 0.4272958 0.4574893 0.4947823 0.5651094 0.5676470 0.5721657 #>  [796,] 0.3144744 0.3633489 0.4269472 0.4836692 0.5343814 0.5768876 0.5902354 #>  [797,] 0.4303685 0.4576782 0.4865701 0.5650220 0.6061960 0.6121900 0.6159951 #>  [798,] 0.5476062 0.6118668 0.7329509 0.7869932 0.7966682 0.8445349 0.8692849 #>  [799,] 0.6538904 0.7023432 0.8073219 0.8445276 0.8507622 0.9052672 0.9386613 #>  [800,] 0.4651564 0.4986015 0.5490788 0.6321961 0.6472690 0.6625494 0.6721748 #>  [801,] 0.8500521 1.2349154 1.3086777 1.6286492 1.8100826 1.8874466 1.9806082 #>  [802,] 0.3891360 0.4318514 0.6030507 0.6319574 0.6411389 0.6675856 0.6716705 #>  [803,] 0.1932593 0.4213070 0.4624414 0.4730814 0.5664796 0.5814897 0.5827584 #>  [804,] 0.4970674 0.5263861 0.5935936 0.6417659 0.6551953 0.6706116 0.6947289 #>  [805,] 0.3607338 0.4656622 0.4999294 0.5501117 0.5631244 0.5664796 0.5701811 #>  [806,] 0.6661617 0.7275581 0.8153574 0.8323208 0.8389675 0.8577609 0.8594362 #>  [807,] 0.7684753 0.8346687 0.8795495 1.0408123 1.1483287 1.1543869 1.1599364 #>  [808,] 0.2968286 0.3314480 0.4329077 0.5146361 0.5283124 0.5300850 0.5456632 #>  [809,] 0.4221216 0.5531836 0.6128037 0.6436051 0.6501876 0.6840434 0.7086942 #>  [810,] 0.2964075 0.4991625 0.5263642 0.5346823 0.5683967 0.5709637 0.5766111 #>  [811,] 1.4430829 1.5639943 1.6597366 1.7818555 1.8231939 1.9593317 1.9679407 #>  [812,] 0.2418757 0.4111124 0.4447512 0.4634079 0.4650908 0.4714862 0.5277916 #>  [813,] 0.3891360 0.4216764 0.4426562 0.4756207 0.5666351 0.5790875 0.7137021 #>  [814,] 0.1187200 0.5719358 0.5781172 0.5802699 0.7006235 0.7798478 0.8014270 #>  [815,] 0.5632860 0.5892782 0.5984252 0.6249685 0.7627266 0.8395838 0.9584684 #>  [816,] 0.4142641 0.4252007 0.5950293 0.6249685 0.6315850 0.6777434 0.6861264 #>  [817,] 0.4273752 0.5918147 0.6079415 0.7148621 0.7668665 0.7945950 0.7992446 #>  [818,] 0.5266322 0.5409184 0.5447581 0.7201094 0.7249749 0.8321201 0.8450288 #>  [819,] 0.1651655 0.3830085 0.4978757 0.5108991 0.7066998 0.7107323 0.7539422 #>  [820,] 0.3479906 0.5103696 0.5223843 0.5922281 0.5972120 0.6258800 0.6425818 #>  [821,] 0.4876501 0.5254439 0.5312998 0.5518994 0.5664114 0.5744486 0.5992084 #>  [822,] 0.6552028 0.7268458 0.7654792 0.7679514 1.0087882 1.0100751 1.0131296 #>  [823,] 0.3576810 0.4137393 0.4147510 0.4729272 0.4896213 0.4968138 0.4990324 #>  [824,] 0.3523615 0.5535944 0.8237499 0.8823479 0.9626860 0.9687732 0.9788511 #>  [825,] 0.4264655 0.5636996 0.5878170 0.6022947 0.6773532 0.6921613 0.7268728 #>  [826,] 0.8151470 0.8365337 0.8863482 0.8896611 0.8903289 0.8946866 0.9039573 #>  [827,] 0.5960792 0.6872233 0.7199291 0.7965612 0.9002694 0.9203455 0.9535960 #>  [828,] 0.3460436 0.3877822 0.4186599 0.4441402 0.4498533 0.4597046 0.4914695 #>  [829,] 0.4063918 0.6992606 0.7000541 0.7891154 0.8556536 0.8623998 0.8880817 #>  [830,] 1.0364193 1.0784009 1.1949873 1.2324628 1.2338937 1.3394307 1.3518238 #>  [831,] 0.1934533 0.3657831 0.4399102 0.4610966 0.4793509 0.6081113 0.6293689 #>  [832,] 0.3646918 0.4877631 0.5869749 0.6005525 0.6686806 0.6848833 0.7029507 #>  [833,] 0.3560739 0.3988786 0.4902054 0.5264651 0.5306110 0.5668559 0.5722037 #>  [834,] 0.3412836 0.5457870 0.5581709 0.6053898 0.6518997 0.6899134 0.6926778 #>  [835,] 0.2082834 0.3440772 0.4311462 0.4508542 0.5146686 0.5326792 0.5569057 #>  [836,] 0.6389701 0.8414542 0.8419464 0.8639922 0.8790308 0.9033618 0.9493739 #>  [837,] 0.6008200 0.6068573 0.7234618 0.7602003 0.8517025 0.8560541 0.8611004 #>  [838,] 0.5720592 0.5973697 0.6021488 0.6631985 0.6848833 0.7089533 0.7158671 #>  [839,] 0.7397679 0.7715351 0.8403020 0.8408732 0.8876284 0.9128442 0.9630471 #>  [840,] 0.3380681 0.3663335 0.5274485 0.6861658 0.7972831 0.8323208 0.8946486 #>  [841,] 1.1723481 1.2739136 1.2859280 1.5102848 1.5843656 1.6148905 1.6325115 #>  [842,] 0.3507359 0.5028732 0.5203032 0.5317518 0.5325784 0.5526851 0.5827148 #>  [843,] 0.1661748 0.2770693 0.3234911 0.3528784 0.4032344 0.4199082 0.4777697 #>  [844,] 0.3525993 0.3622363 0.4269203 0.4438148 0.4624414 0.4947823 0.5242326 #>  [845,] 0.5100968 0.5611779 0.6205701 0.7150422 0.7479381 0.7562406 0.7928603 #>  [846,] 0.2542035 0.4000019 0.4186599 0.4728637 0.4752144 0.4901092 0.5852583 #>  [847,] 0.4677738 0.4862446 0.6907489 0.7170471 0.7171517 0.7441750 0.7489806 #>  [848,] 0.7918091 0.9931687 1.0718600 1.0961845 1.1470470 1.2271247 1.3150192 #>  [849,] 0.3958788 0.4725953 0.5989517 0.6369023 0.6714055 0.7068264 0.7509239 #>  [850,] 0.2826386 0.2828474 0.3480423 0.3579435 0.4793509 0.5296428 0.5325784 #>  [851,] 0.4821820 0.5164729 0.5625081 0.5746841 0.6232906 0.6769390 0.6981988 #>  [852,] 0.6076193 0.6870243 0.7168527 0.7654104 0.7966990 0.8943879 0.9221830 #>  [853,] 0.4798825 0.6084392 0.6631138 0.7093125 0.7383932 0.7384591 0.7449038 #>  [854,] 0.3741903 0.4240675 0.4459951 0.5400816 0.5509879 0.5768466 0.5880997 #>  [855,] 0.3262306 0.3594790 0.3723088 0.4429249 0.4617430 0.5306110 0.6016668 #>  [856,] 0.3048060 0.4870719 0.5353910 0.5459140 0.5553601 0.5590788 0.5739432 #>  [857,] 0.9328442 1.2643859 1.2900163 1.3498885 1.3560096 1.4243103 1.5087986 #>  [858,] 0.6423436 0.9690906 0.9759546 0.9898572 1.0987175 1.1196786 1.1573668 #>  [859,] 0.3490248 0.5459180 0.6576298 0.7623392 0.7653864 0.8216612 0.9006436 #>  [860,] 0.1953774 0.3116718 0.3549851 0.3996243 0.4032975 0.4213168 0.4625465 #>  [861,] 0.4582246 0.4805031 0.4989773 0.5004484 0.5137121 0.5309498 0.5415113 #>  [862,] 0.4110140 0.4718867 0.5269978 0.5629237 0.6119439 0.6157582 0.6275792 #>  [863,] 0.4714971 0.4976059 0.6076193 0.7198927 0.7664095 0.8194496 0.8641328 #>  [864,] 0.3712501 0.4489516 0.5045733 0.5379842 0.6391951 0.8653682 0.8837182 #>  [865,] 0.4248042 0.4600136 0.4734227 0.5054087 0.5088882 0.5351272 0.5403443 #>  [866,] 0.1932593 0.4635230 0.4953386 0.4966807 0.5100331 0.5685410 0.5717266 #>  [867,] 0.3473584 0.8027134 0.8098294 0.8445276 0.8764046 0.8908009 0.9868386 #>  [868,] 0.4179199 0.4489335 0.4706863 0.4920971 0.5183575 0.5528294 0.5564092 #>  [869,] 0.6078509 0.6420198 0.7377297 0.7390804 0.7526442 0.7678280 0.7863525 #>  [870,] 0.4423028 0.4730472 0.6147952 0.7607260 0.7783258 0.8108566 0.8230818 #>  [871,] 0.3385360 0.4149599 0.4367402 0.4694029 0.5056075 0.5290774 0.5490788 #>  [872,] 0.4254334 0.5140837 0.6412465 0.6982536 0.7386538 0.7726607 0.7747132 #>  [873,] 0.6709691 0.7204058 0.8218344 0.8984057 0.9781919 1.0759482 1.1359350 #>  [874,] 0.5357262 0.6389733 0.7011926 0.7033831 0.7311249 0.7599898 0.7881753 #>  [875,] 0.7027257 0.7520675 0.7626788 0.8190515 0.8201765 0.8252254 0.8373043 #>  [876,] 0.1562207 0.3759315 0.5427011 0.5854135 0.6066842 0.6152510 0.6707514 #>  [877,] 0.4661805 0.4670264 0.4670998 0.5921126 0.6588544 0.6992606 0.7010640 #>  [878,] 0.6921075 0.8578888 0.9427622 1.0078016 1.0413165 1.1357842 1.1358836 #>  [879,] 0.3838237 0.4077905 0.5204695 0.6831773 0.7813246 0.7950072 0.8406355 #>  [880,] 0.2341277 0.2423027 0.3197195 0.3440772 0.4931464 0.5043516 0.5128722 #>  [881,] 0.7359959 0.8355886 0.9025183 0.9931687 1.0133915 1.0460986 1.1081897 #>  [882,] 0.2906610 0.4399102 0.4591539 0.5296428 0.5537570 0.5993244 0.6061702 #>  [883,] 0.3392456 0.3443745 0.4573359 0.5878891 0.5981557 0.6136787 0.7607613 #>  [884,] 0.3136374 0.4075719 0.5159382 0.5176477 0.5984943 0.6401392 0.7352581 #>  [885,] 0.4856305 0.5886036 0.6327116 0.7664067 0.7710483 0.7829454 0.7865100 #>  [886,] 0.3803468 0.5590788 0.5842682 0.5957621 0.6220457 0.6601939 0.6860799 #>  [887,] 0.4120308 0.4481043 0.5847776 0.5853963 0.6997428 0.7268458 0.7467714 #>  [888,] 0.3627460 0.4088412 0.4459951 0.4862602 0.4989773 0.5416898 0.5596547 #>  [889,] 0.6194891 0.6680457 0.7325382 0.7523707 0.7628136 0.7712652 0.7740743 #>  [890,] 0.7058884 0.9770375 1.0127975 1.1088919 1.1412312 1.1956048 1.2755375 #>  [891,] 0.2852912 0.4618406 0.8294419 0.8662724 0.8841050 0.9606742 1.0200280 #>  [892,] 0.2256609 0.4574893 0.5007673 0.5372611 0.6774032 0.6859225 0.6998594 #>  [893,] 0.3135979 0.5984661 0.6366850 0.6682023 0.6793030 0.7424838 0.7441503 #>  [894,] 0.3939581 0.3979466 0.4795558 0.5670528 0.5681036 0.6351726 0.6622661 #>  [895,] 0.6178595 0.6357125 0.6638285 0.7536568 0.7538339 0.7665195 0.7796470 #>  [896,] 0.2608155 0.4821820 0.5092710 0.5108190 0.5738560 0.5876458 0.5934524 #>  [897,] 0.7286447 0.7618607 0.7635971 0.7851140 0.8006872 0.9038126 0.9477234 #>  [898,] 0.7402658 0.7654792 0.9159073 0.9191140 0.9622567 0.9720436 0.9941509 #>  [899,] 0.7838107 0.7851140 1.1033772 1.1196786 1.1535300 1.1885392 1.2330567 #>  [900,] 0.2648473 0.2688583 0.5317518 0.5489528 0.5823803 0.5854079 0.6492618 #>  [901,] 0.3768092 0.5185980 0.5348929 0.5484170 0.5550191 0.5823803 0.5854135 #>  [902,] 0.8403020 1.1326017 1.2165585 1.2315382 1.2480356 1.2973218 1.2985555 #>  [903,] 0.4374199 0.4483919 0.4898979 0.5176784 0.5229341 0.5520382 0.5883220 #>  [904,] 0.2367144 0.4220651 0.4877424 0.5557974 0.5718556 0.6014663 0.6132944 #>  [905,] 0.4708821 0.5625374 0.5984220 0.6054718 0.7814568 0.7858894 0.7890535 #>  [906,] 0.2049212 0.4779216 0.6008200 0.6453349 0.6739491 0.6844584 0.7062261 #>  [907,] 0.3480423 0.3658048 0.4591539 0.4714874 0.5028732 0.5480396 0.6501762 #>  [908,] 0.4656898 0.5616864 0.6956346 0.8379130 0.8538291 0.8876645 0.8988754 #>  [909,] 0.7000541 0.9410483 0.9536978 1.1332502 1.1817626 1.2768826 1.3848315 #>  [910,] 0.2108323 0.2172728 0.2476184 0.3414602 0.3575733 0.4788982 0.5240956 #>  [911,] 0.5387650 0.9143205 1.0232513 1.0578030 1.0593501 1.1137644 1.1509879 #>  [912,] 0.4500400 0.4776714 0.4965287 0.5992017 0.6730059 0.7213751 0.7238385 #>  [913,] 0.5027766 0.7968257 1.0484326 1.0617974 1.1476022 1.2243764 1.3378182 #>  [914,] 0.3957851 0.5743737 0.7533456 0.8095374 0.8354571 1.0301313 1.0780373 #>  [915,] 0.4528924 0.8091516 1.2002101 1.2202713 1.2206850 1.2481223 1.4322009 #>  [916,] 0.9019724 0.9328442 1.0040365 1.0267632 1.0443108 1.0626389 1.0750187 #>  [917,] 0.1488483 0.5412091 0.5987335 0.6195019 0.6397567 0.7273680 0.7390804 #>  [918,] 0.4088412 0.4140413 0.4225446 0.4476108 0.5144869 0.5611208 0.5768466 #>  [919,] 0.2730850 0.3414602 0.4352025 0.4485537 0.4567191 0.4991625 0.5099310 #>  [920,] 0.2740490 0.3686939 0.6152322 0.6321961 0.6718393 0.7048510 0.7153778 #>  [921,] 0.5066904 0.5777316 0.5959538 0.5991529 0.6022620 0.6866513 0.7119550 #>  [922,] 0.2082834 0.4473199 0.4564972 0.4931464 0.5179626 0.5211590 0.5379922 #>  [923,] 0.4321481 0.5282708 0.7462824 0.7571918 0.9469817 0.9507325 0.9656975 #>  [924,] 0.2635167 0.2940947 0.4039046 0.4070041 0.4277468 0.4734227 0.5009093 #>  [925,] 0.3091076 0.3697606 0.3738929 0.5294837 0.5456632 0.6101464 0.6303842 #>  [926,] 0.3846234 0.5016341 0.5031542 0.5775476 0.5788145 0.6258800 0.6362472 #>  [927,] 0.3655743 0.4921198 0.4940795 0.6984037 0.7097154 0.7110734 0.7520671 #>  [928,] 0.5408530 0.5636996 0.5650919 0.5984220 0.6281196 0.6956346 0.7749533 #>  [929,] 0.4180143 0.4252894 0.5459180 0.6716705 0.7032869 0.7463201 0.8261301 #>  [930,] 0.2647668 0.2688583 0.5544345 0.5827148 0.5973652 0.6457990 0.6573711 #>  [931,] 0.3591845 0.3849193 0.5135232 0.5156909 0.6500806 0.6518997 0.6593860 #>  [932,] 0.3252203 0.5322270 0.5343681 0.6554045 0.6556327 0.6803026 0.6907834 #>  [933,] 0.5355846 0.5445328 0.5958351 0.6003458 0.6082266 0.6465565 0.7298527 #>  [934,] 0.4491954 0.4865852 0.4955710 0.5177581 0.5370520 0.5640192 0.5642318 #>  [935,] 0.7452708 0.8241127 0.8271293 0.8666045 0.9011810 0.9166019 0.9249962 #>  [936,] 0.4768777 0.6365188 0.6480952 0.7433205 0.7434022 0.7865100 0.8203693 #>  [937,] 0.1776247 0.3192190 0.4147225 0.4172823 0.4631905 0.5416005 0.5578122 #>  [938,] 0.4950221 0.4967045 0.5518994 0.5714734 0.6478410 0.6531894 0.6737772 #>  [939,] 0.3494974 0.4088249 0.4624376 0.5024543 0.5299938 0.5522057 0.6276569 #>  [940,] 0.2476184 0.3364444 0.3380548 0.3734575 0.4463587 0.4485537 0.5035883 #>  [941,] 0.7422461 0.8046578 0.8733753 0.9294765 0.9433725 0.9532302 0.9625663 #>  [942,] 0.4077000 0.9138644 0.9322573 0.9372015 1.0165090 1.0804964 1.1055303 #>  [943,] 0.9363303 1.2022653 1.3764514 1.4368235 1.4424835 1.6256225 1.6408988 #>  [944,] 0.8921676 1.0265351 1.0501641 1.1141288 1.1648565 1.1664917 1.3031762 #>  [945,] 0.6030888 1.1991610 1.2934591 1.3641554 1.4723308 1.5168862 1.5441707 #>  [946,] 0.3846234 0.5874982 0.6614400 0.6869085 0.7170544 0.7181918 0.7249749 #>  [947,] 0.4576199 0.6855146 0.6876937 0.6900771 0.6980601 0.7075758 0.7263555 #>  [948,] 0.4889279 0.5451681 0.5452864 0.5867643 0.7962904 0.8507786 0.8801716 #>  [949,] 0.9270294 1.0271703 1.0358002 1.0563854 1.1039800 1.2714800 1.2919853 #>  [950,] 0.3391007 0.5535944 0.6005525 0.6020740 0.6186786 0.7276160 0.7530470 #>  [951,] 0.4550436 0.4877498 0.5651305 0.7312991 0.8652395 0.8996759 0.9891598 #>  [952,] 0.9184242 0.9420101 0.9675278 1.1312732 1.1672580 1.1953645 1.2139369 #>  [953,] 0.4631905 0.5586949 0.5634343 0.5669529 0.5698936 0.6055889 0.6056172 #>  [954,] 0.3675840 0.5778469 0.6363185 0.6375565 0.7156318 0.7517326 0.7583830 #>  [955,] 0.7626853 0.7918121 0.8156145 0.8441204 0.8696059 0.8895428 0.9054890 #>  [956,] 0.3317955 0.4318514 0.4426562 0.5495108 0.6883533 0.6886554 0.6960617 #>  [957,] 0.2434542 0.3568532 0.3589255 0.3756506 0.4598874 0.4765855 0.5142300 #>  [958,] 1.1027954 1.1540448 1.2826915 1.3537649 1.4373801 1.4553693 1.4567940 #>  [959,] 0.2019997 0.2687605 0.3867787 0.4356739 0.4714729 0.4791898 0.5140850 #>  [960,] 0.6778923 0.7488408 0.7980990 0.8320487 0.8898546 0.9461470 1.0419349 #>  [961,] 0.2779016 0.3688013 0.4598874 0.5871952 0.5961672 0.6125294 0.6980269 #>  [962,] 0.3503878 0.4334675 0.4974309 0.5726424 0.5935936 0.6052147 0.6308153 #>  [963,] 0.2832242 0.3015309 0.7527319 0.8098294 0.8619861 0.8695598 0.9093853 #>  [964,] 0.6713251 0.7175342 0.7870953 0.7903953 0.7983143 0.8141089 0.8384780 #>  [965,] 0.3560451 0.5280187 0.7596671 0.8689665 0.8893250 1.0073694 1.0539816 #>  [966,] 0.3888783 0.4651329 0.7112550 0.8984057 0.9810554 0.9916602 1.0871188 #>  [967,] 0.5866958 0.6050153 0.8383481 0.8574675 0.8732621 0.9370573 0.9380190 #>  [968,] 0.2624281 0.7225121 0.7674967 0.9331377 1.0649352 1.0770849 1.1736914 #>  [969,] 0.3346100 0.3885562 0.4244104 0.4825222 0.4892979 0.5516275 0.5558636 #>  [970,] 0.5016341 0.5216974 0.5567558 0.5688078 0.5781172 0.5972120 0.6327567 #>  [971,] 0.7751978 0.8355886 0.8981554 1.1068239 1.1368996 1.1772937 1.1859050 #>  [972,] 0.4991595 0.5103696 0.5595583 0.6205120 0.6432679 0.6472021 0.6644596 #>  [973,] 1.0784009 1.1382701 1.3353965 1.3638968 1.5950733 1.7641286 1.8064037 #>  [974,] 0.5296051 0.6521091 0.8392407 0.9627313 1.0225057 1.0484257 1.0606475 #>  [975,] 0.4877631 0.5002661 0.5455041 0.5540344 0.5950293 0.7050775 0.7336718 #>  [976,] 0.1989312 0.3549687 0.4251477 0.4404993 0.5387486 0.5681036 0.6168672 #>  [977,] 0.7682976 0.7934218 0.8123276 0.8776720 0.9873500 1.0460588 1.0504180 #>  [978,] 0.5768636 0.6144628 0.6697896 0.7377922 0.7728753 0.8295657 0.8611004 #>  [979,] 0.3316360 0.7222852 0.7234272 0.7317674 0.8312049 0.8423295 0.9038186 #>  [980,] 0.2979887 0.6232488 0.6535505 0.6647078 0.7023432 0.7431937 0.7977683 #>  [981,] 0.4858478 0.5561368 0.6997428 0.7857822 0.8424101 0.8616263 0.8781826 #>  [982,] 0.3655743 0.6389701 0.6701354 0.7963734 0.8020708 0.8124181 0.8284629 #>  [983,] 0.4293575 0.5778408 0.6580526 0.7211943 0.7922368 0.8021067 0.8928748 #>  [984,] 0.8959375 0.9953464 1.0504788 1.1002434 1.1397803 1.1963781 1.2195543 #>  [985,] 0.2647668 0.2648473 0.4059566 0.5142527 0.5550191 0.7212361 0.7349588 #>  [986,] 0.5348919 0.5719358 0.5865973 0.6307100 0.6441873 0.7208185 0.7472909 #>  [987,] 0.1733556 0.2907175 0.2961382 0.3197195 0.5560398 0.5891690 0.6082143 #>  [988,] 0.4376309 0.8380772 0.8818369 1.0082612 1.0358311 1.0813842 1.1375504 #>  [989,] 0.3306879 0.6417659 0.7281972 0.8268012 0.8360010 0.8411755 0.8741656 #>  [990,] 0.6170588 0.7574865 0.9809870 1.0006884 1.0423808 1.0427151 1.0539816 #>  [991,] 0.3316360 0.6234002 0.6532922 0.7073199 0.8692849 0.8797816 0.8854581 #>  [992,] 0.3739315 0.4592307 0.4657178 0.5283699 0.5637695 0.5790335 0.5860747 #>  [993,] 0.3602671 0.4430401 0.4971902 0.6166141 0.6490438 0.6797722 0.7125341 #>  [994,] 0.5594920 0.5825263 0.5878891 0.5977456 0.5980988 0.6165963 0.6596924 #>  [995,] 0.6566094 0.7464420 0.7760351 1.0296851 1.0750187 1.1042244 1.1714118 #>  [996,] 0.3450018 0.5056075 0.5066424 0.5884740 0.6456974 0.6623339 0.6850499 #>  [997,] 0.5299029 0.5351830 0.5454020 0.5586099 0.5986001 0.7375044 0.7432020 #>  [998,] 0.3377847 0.5647841 0.6291535 0.7048666 0.8607814 0.8920908 0.9170049 #>  [999,] 0.5719669 0.7533456 0.9498992 1.2068123 1.3348159 1.3482400 1.4014283 #> [1000,] 0.5289744 0.8392407 0.9346027 0.9480988 1.0188644 1.0248224 1.1102597 #>              [,8]      [,9]     [,10] #>    [1,] 0.7434216 0.7596670 0.7671926 #>    [2,] 1.7020443 1.7178210 1.7214627 #>    [3,] 1.2706638 1.2912759 1.3000783 #>    [4,] 1.2047836 1.2770600 1.3083843 #>    [5,] 0.8583783 0.8754352 0.9063192 #>    [6,] 0.4909769 0.5298915 0.5306511 #>    [7,] 0.6372320 0.6494058 0.6495185 #>    [8,] 1.3166103 1.3354539 1.4007135 #>    [9,] 0.5955381 0.6493064 0.6565283 #>   [10,] 0.7779960 0.7879815 0.8183824 #>   [11,] 0.6494720 0.6984037 0.7040535 #>   [12,] 0.8887481 0.9334851 0.9346027 #>   [13,] 1.3756840 1.5769264 1.5929428 #>   [14,] 1.3638968 1.4988747 1.5629635 #>   [15,] 0.8004971 0.8201906 0.8238268 #>   [16,] 0.6065686 0.6162420 0.6321092 #>   [17,] 0.8782047 0.9741944 0.9998443 #>   [18,] 0.7520671 0.8292156 0.8510773 #>   [19,] 1.0912378 1.1238874 1.1989739 #>   [20,] 0.8866581 0.9092137 0.9689659 #>   [21,] 0.4669314 0.4955710 0.4968138 #>   [22,] 0.6042484 0.6145992 0.6155049 #>   [23,] 0.6734509 0.7126226 0.7434489 #>   [24,] 0.7805089 0.7957037 0.8052666 #>   [25,] 0.5668522 0.5872185 0.5989430 #>   [26,] 1.4281955 1.4778189 1.4953407 #>   [27,] 0.5468445 0.5964673 0.6175833 #>   [28,] 0.6400903 0.6537328 0.7235630 #>   [29,] 0.5992161 0.6164281 0.6297541 #>   [30,] 1.1809654 1.2603380 1.2793340 #>   [31,] 0.9484685 0.9683863 0.9749206 #>   [32,] 0.7551996 0.7944516 0.8247849 #>   [33,] 0.6922518 0.7127361 0.7204260 #>   [34,] 0.7511491 0.7810050 0.8239607 #>   [35,] 1.2246464 1.2436326 1.2457144 #>   [36,] 1.0772145 1.1064280 1.1392340 #>   [37,] 0.9591347 0.9626242 0.9801220 #>   [38,] 0.9376761 0.9646136 0.9691210 #>   [39,] 0.9581183 0.9660669 1.0063955 #>   [40,] 0.7846282 0.9341321 0.9383822 #>   [41,] 0.8972879 0.8986641 0.9293509 #>   [42,] 1.5313073 1.5525666 1.5533366 #>   [43,] 0.7526045 0.7669591 0.8020559 #>   [44,] 1.8080988 1.8082759 1.8466105 #>   [45,] 1.1488090 1.1554469 1.2103579 #>   [46,] 0.5009725 0.5070854 0.5222120 #>   [47,] 0.7105528 0.7284036 0.7297464 #>   [48,] 0.6696179 0.6700029 0.7085393 #>   [49,] 0.7965093 0.8049078 0.8687637 #>   [50,] 1.1406988 1.1439210 1.1586342 #>   [51,] 1.2014735 1.2577587 1.3160990 #>   [52,] 1.5405516 1.5432970 1.5508415 #>   [53,] 0.7859649 0.7994062 0.8337541 #>   [54,] 0.8380305 0.8410716 0.8592470 #>   [55,] 0.6812543 0.6893551 0.7408492 #>   [56,] 0.5749347 0.5814752 0.6102276 #>   [57,] 0.6200803 0.6279788 0.6405829 #>   [58,] 0.6791956 0.6886143 0.6950119 #>   [59,] 0.6425818 0.6710265 0.6816124 #>   [60,] 0.6554735 0.6579317 0.6655083 #>   [61,] 0.6854768 0.6974378 0.7754061 #>   [62,] 1.4286021 1.5211227 1.5288875 #>   [63,] 0.8805021 0.9340406 0.9351408 #>   [64,] 1.2962635 1.3154338 1.3414285 #>   [65,] 1.2482842 1.2702938 1.2942830 #>   [66,] 0.8199498 0.8239750 0.8437787 #>   [67,] 0.5976755 0.6216103 0.6236231 #>   [68,] 1.4477742 1.4620167 1.5115979 #>   [69,] 0.6141202 0.6200892 0.6223950 #>   [70,] 1.0770433 1.1181882 1.1621741 #>   [71,] 0.7672398 0.8091297 0.8305265 #>   [72,] 1.3391402 1.3413004 1.3452465 #>   [73,] 1.1358836 1.1483814 1.2016451 #>   [74,] 1.1179619 1.1300386 1.1326017 #>   [75,] 1.2173065 1.2246895 1.2476581 #>   [76,] 0.7132508 0.7266438 0.7900773 #>   [77,] 0.8179002 0.8380305 0.8900473 #>   [78,] 0.7570327 0.7701447 0.7877226 #>   [79,] 0.6792970 0.6916732 0.6944603 #>   [80,] 1.2076025 1.2345942 1.2666597 #>   [81,] 0.7592599 0.7600099 0.7639344 #>   [82,] 0.5119189 0.5171115 0.5224581 #>   [83,] 1.0904585 1.1801523 1.1859050 #>   [84,] 0.9367746 0.9393388 0.9530663 #>   [85,] 0.8835700 0.8841980 0.9536665 #>   [86,] 0.7814303 0.8104670 0.8157093 #>   [87,] 0.7263928 0.7713164 0.7719086 #>   [88,] 0.4649544 0.4904181 0.5066604 #>   [89,] 0.9818225 0.9865011 1.0674021 #>   [90,] 0.7684780 0.7854660 0.8445460 #>   [91,] 0.6406668 0.6414002 0.6563408 #>   [92,] 0.7303813 0.7312991 0.7456014 #>   [93,] 1.0036673 1.0121571 1.0163504 #>   [94,] 0.6630428 0.6640640 0.6836144 #>   [95,] 0.9553068 0.9687732 0.9818268 #>   [96,] 0.6918798 0.7001474 0.7140661 #>   [97,] 0.6313678 0.6333102 0.6356206 #>   [98,] 0.8165311 0.8177651 0.8361406 #>   [99,] 0.9631134 0.9828382 1.0139480 #>  [100,] 0.7511208 0.7611078 0.7746408 #>  [101,] 0.6665507 0.6691694 0.7198377 #>  [102,] 0.9450439 0.9626230 0.9674294 #>  [103,] 1.0779042 1.1146790 1.1728482 #>  [104,] 0.9051545 0.9302076 0.9368965 #>  [105,] 0.9588261 1.0665294 1.0887421 #>  [106,] 0.5146361 0.5413036 0.5446711 #>  [107,] 0.5507789 0.5533013 0.5715573 #>  [108,] 0.9178295 0.9202091 0.9244167 #>  [109,] 0.5296710 0.5458251 0.5465198 #>  [110,] 0.8114043 0.8141120 0.8454686 #>  [111,] 1.0782771 1.0902754 1.0982851 #>  [112,] 0.5380783 0.5440449 0.5477005 #>  [113,] 1.5207104 1.5564544 1.5842212 #>  [114,] 0.9380190 0.9446005 0.9904881 #>  [115,] 0.7362420 0.7460591 0.7847691 #>  [116,] 1.6765715 1.7337443 1.8173599 #>  [117,] 0.5838917 0.5888754 0.6067611 #>  [118,] 0.8524284 0.8578438 0.8966037 #>  [119,] 0.5687483 0.5996100 0.6102215 #>  [120,] 0.6265470 0.6446015 0.6691647 #>  [121,] 0.7623581 0.7717730 0.8148932 #>  [122,] 0.7997934 0.8350069 0.8470916 #>  [123,] 0.8585949 0.8639145 0.8779867 #>  [124,] 0.9963571 1.0011837 1.0642982 #>  [125,] 0.6867727 0.6912649 0.7262831 #>  [126,] 0.6162752 0.6311249 0.6357795 #>  [127,] 1.1558495 1.1843277 1.2593355 #>  [128,] 1.2205680 1.3129349 1.3853154 #>  [129,] 0.9804234 0.9842578 1.0288320 #>  [130,] 0.6619513 0.6621456 0.6714055 #>  [131,] 0.6546332 0.7200037 0.7571881 #>  [132,] 0.8127514 0.8270644 0.9133761 #>  [133,] 0.7437919 0.7559358 0.7633203 #>  [134,] 0.6423636 0.6682630 0.6707475 #>  [135,] 0.7219952 0.7684780 0.7922222 #>  [136,] 1.3796050 1.3975310 1.6193796 #>  [137,] 0.8508260 0.8536751 0.9237976 #>  [138,] 0.6371374 0.6856328 0.7042594 #>  [139,] 0.7281047 0.7334966 0.7358509 #>  [140,] 0.8401738 0.8427945 0.8552324 #>  [141,] 0.5240384 0.5634798 0.5779758 #>  [142,] 1.1825261 1.2066972 1.2527195 #>  [143,] 1.4607727 1.4951802 1.4984975 #>  [144,] 0.8549042 0.8619039 0.9536978 #>  [145,] 0.6172936 0.6209641 0.6306031 #>  [146,] 0.8885583 0.9684827 0.9687749 #>  [147,] 0.6593860 0.6642055 0.6655742 #>  [148,] 1.0040433 1.0559073 1.0917612 #>  [149,] 0.5994893 0.6051244 0.6152510 #>  [150,] 1.3906291 1.3945344 1.4691625 #>  [151,] 0.8441204 0.8583676 0.8838908 #>  [152,] 0.7901190 0.8057423 0.8295657 #>  [153,] 1.4372354 1.4550081 1.4567940 #>  [154,] 1.1003546 1.1672580 1.2275275 #>  [155,] 0.8592090 0.9333937 0.9419339 #>  [156,] 0.8333015 0.8481842 0.8485174 #>  [157,] 1.0470206 1.0514150 1.1504832 #>  [158,] 0.6510347 0.7112624 0.7215028 #>  [159,] 0.7104602 0.7544498 0.8760715 #>  [160,] 0.7181823 0.7234618 0.7409671 #>  [161,] 0.7146996 0.7594077 0.8183602 #>  [162,] 1.2073862 1.2377183 1.2401692 #>  [163,] 1.0021592 1.0040433 1.0103239 #>  [164,] 0.9989091 1.0027718 1.0043293 #>  [165,] 0.5911656 0.6085218 0.6114245 #>  [166,] 1.6186345 1.6841220 1.7115073 #>  [167,] 0.6318224 0.6352149 0.6610750 #>  [168,] 0.8950190 0.9376695 0.9995469 #>  [169,] 0.8078641 0.8330062 0.8379130 #>  [170,] 1.3470844 1.3643685 1.3645146 #>  [171,] 1.2355365 1.2942572 1.3142352 #>  [172,] 0.7512758 0.7760748 0.7862200 #>  [173,] 0.9119281 0.9306064 0.9458968 #>  [174,] 0.6793244 0.6871549 0.7325382 #>  [175,] 0.7559137 0.7653319 0.7703317 #>  [176,] 1.1079501 1.1085321 1.1089881 #>  [177,] 0.6732713 0.6812543 0.7024622 #>  [178,] 0.5240384 0.5448521 0.5562612 #>  [179,] 0.6625665 0.7006373 0.7007787 #>  [180,] 0.5165296 0.5346823 0.5664759 #>  [181,] 1.1621069 1.1621305 1.1737187 #>  [182,] 1.8255467 1.8363200 1.8446870 #>  [183,] 0.9556650 1.0018146 1.0252991 #>  [184,] 0.9948565 0.9994385 1.0065922 #>  [185,] 0.5714060 0.5825527 0.6193600 #>  [186,] 0.7595319 0.7664067 0.7808140 #>  [187,] 0.9534345 0.9671340 1.0056282 #>  [188,] 0.5398527 0.5598599 0.5605009 #>  [189,] 0.7070549 0.7477569 0.7785340 #>  [190,] 0.7223955 0.7345533 0.7373843 #>  [191,] 0.9623815 1.0008317 1.0121407 #>  [192,] 0.6145992 0.6332575 0.6333102 #>  [193,] 0.6770855 0.7335970 0.7946235 #>  [194,] 0.5522014 0.5535336 0.5605009 #>  [195,] 0.6482861 0.6545609 0.6642103 #>  [196,] 0.6765619 0.6926137 0.6937128 #>  [197,] 0.6023265 0.6027293 0.6278778 #>  [198,] 0.7124791 0.7589222 0.7623896 #>  [199,] 0.8973015 0.9248408 0.9321723 #>  [200,] 1.5808366 1.5812924 1.6256225 #>  [201,] 0.5765050 0.5880997 0.6229076 #>  [202,] 0.8421779 0.8426266 0.8560223 #>  [203,] 0.5429092 0.5610128 0.5825527 #>  [204,] 0.7302881 0.7610821 0.7641802 #>  [205,] 0.5941824 0.5961991 0.6020191 #>  [206,] 0.9210044 0.9645447 0.9694094 #>  [207,] 0.5883197 0.5911508 0.6055889 #>  [208,] 0.6571458 0.6866401 0.6886143 #>  [209,] 0.5959538 0.6130087 0.6365909 #>  [210,] 0.5647567 0.6152373 0.6228561 #>  [211,] 1.1021078 1.1052013 1.1372962 #>  [212,] 1.4084323 1.4086521 1.4488346 #>  [213,] 0.5203032 0.5366731 0.5637209 #>  [214,] 1.2013898 1.2457755 1.2800357 #>  [215,] 1.0317477 1.0502116 1.0535082 #>  [216,] 0.7926254 0.8500679 0.8764672 #>  [217,] 0.6437483 0.6501200 0.6555746 #>  [218,] 0.9766627 0.9969409 1.0036135 #>  [219,] 0.5595265 0.5724630 0.5911508 #>  [220,] 0.7289076 0.7361034 0.7623896 #>  [221,] 0.8312067 0.8317613 0.8479697 #>  [222,] 0.9193574 0.9267279 0.9362510 #>  [223,] 1.0307449 1.0406951 1.0989174 #>  [224,] 0.6246724 0.6399951 0.6588543 #>  [225,] 0.9600888 0.9815815 0.9898338 #>  [226,] 0.8091852 0.8365198 0.8716231 #>  [227,] 0.9208669 0.9663858 1.0306501 #>  [228,] 0.5446001 0.6097622 0.6152761 #>  [229,] 0.8410716 0.8577524 0.8586549 #>  [230,] 0.8680538 0.8716807 0.8851251 #>  [231,] 0.8609337 0.8744065 0.8867172 #>  [232,] 1.4169838 1.5153627 1.5463913 #>  [233,] 0.8068856 0.8477098 0.8757431 #>  [234,] 0.6159256 0.6688427 0.6698598 #>  [235,] 1.3775032 1.3875096 1.4573858 #>  [236,] 0.7392840 0.7720738 0.7789781 #>  [237,] 0.6881962 0.7004784 0.7548418 #>  [238,] 0.9117736 0.9857004 1.0403952 #>  [239,] 0.8423427 0.8629952 0.8655224 #>  [240,] 0.7220772 0.7791216 0.8602553 #>  [241,] 1.0946693 1.1437590 1.1801975 #>  [242,] 0.7771602 0.7811186 0.8018918 #>  [243,] 0.7661143 0.7754725 0.7813246 #>  [244,] 0.8923656 0.9234134 0.9339268 #>  [245,] 0.6202956 0.6424219 0.6576090 #>  [246,] 0.5764475 0.5765050 0.5776889 #>  [247,] 0.6121093 0.6268759 0.6279490 #>  [248,] 0.8461882 0.8557223 0.8755099 #>  [249,] 0.8350582 0.9241269 0.9269539 #>  [250,] 0.6396920 0.6994450 0.7388356 #>  [251,] 1.2268539 1.2454635 1.2542147 #>  [252,] 0.7412320 0.7528281 0.7622466 #>  [253,] 0.7126226 0.7492535 0.7516070 #>  [254,] 1.0218755 1.0268473 1.0535958 #>  [255,] 0.7275581 0.7754378 0.7970023 #>  [256,] 0.8981180 0.9120077 0.9406196 #>  [257,] 0.6992450 0.7105415 0.7166039 #>  [258,] 0.9635633 1.0317260 1.0416516 #>  [259,] 0.8904516 0.9096577 0.9178224 #>  [260,] 0.8989273 0.9035472 0.9141976 #>  [261,] 1.7795091 1.8186669 1.8597801 #>  [262,] 0.6218180 0.6864852 0.6873740 #>  [263,] 0.5350797 0.5970858 0.6002670 #>  [264,] 0.8093230 0.8166686 0.8188503 #>  [265,] 0.6090639 0.6377668 0.6399595 #>  [266,] 0.7379236 0.7830744 0.7963734 #>  [267,] 1.3551263 1.3601890 1.3772754 #>  [268,] 1.5551516 1.5693528 1.6019560 #>  [269,] 1.1447372 1.2184530 1.2277088 #>  [270,] 1.3721097 1.3729871 1.4307200 #>  [271,] 1.1835101 1.1841546 1.1961658 #>  [272,] 1.3526053 1.3580052 1.4471599 #>  [273,] 1.7565979 1.7974998 1.8005252 #>  [274,] 1.0613202 1.0749852 1.1438005 #>  [275,] 0.8021067 0.8157868 0.8267255 #>  [276,] 0.6494058 0.6633026 0.6751072 #>  [277,] 0.6291834 0.6303842 0.6436655 #>  [278,] 0.6774765 0.6906525 0.6966879 #>  [279,] 0.5480606 0.5877439 0.6319003 #>  [280,] 0.6344234 0.6345348 0.6788916 #>  [281,] 0.6160844 0.6381515 0.6406166 #>  [282,] 0.9153141 0.9247149 0.9251882 #>  [283,] 0.7107323 0.7291229 0.7632397 #>  [284,] 0.6998253 0.7189947 0.7594972 #>  [285,] 0.8206595 0.8387678 0.8424101 #>  [286,] 0.7473432 0.7994980 0.8035172 #>  [287,] 0.7260232 0.7455906 0.7518376 #>  [288,] 0.7171174 0.7254591 0.7534141 #>  [289,] 0.4664421 0.4995391 0.5093473 #>  [290,] 0.6762989 0.6951916 0.7224819 #>  [291,] 0.6429486 0.6658231 0.6779228 #>  [292,] 1.1184052 1.2007710 1.2011329 #>  [293,] 0.9688336 0.9695114 0.9720604 #>  [294,] 1.0807374 1.0831246 1.1206542 #>  [295,] 0.7677160 0.7905991 0.7936758 #>  [296,] 0.8243312 0.8671292 0.9222327 #>  [297,] 0.6718304 0.6741205 0.7278480 #>  [298,] 1.1079501 1.1277039 1.1495813 #>  [299,] 0.6223412 0.6236107 0.6267142 #>  [300,] 1.1648565 1.2054737 1.2198968 #>  [301,] 0.5522299 0.5856605 0.5886895 #>  [302,] 0.5058820 0.5154229 0.5459140 #>  [303,] 0.9499690 0.9758546 1.0219990 #>  [304,] 1.0878359 1.0962023 1.1368727 #>  [305,] 0.5698936 0.6164281 0.6416124 #>  [306,] 1.1623306 1.2047486 1.2480356 #>  [307,] 0.9812335 1.0223775 1.0420393 #>  [308,] 0.7931915 0.7997875 0.8102667 #>  [309,] 0.7033831 0.7070918 0.7127512 #>  [310,] 0.9279180 0.9419531 0.9420428 #>  [311,] 0.8429872 0.8639922 0.9406052 #>  [312,] 0.6607809 0.6622469 0.6655742 #>  [313,] 0.6869085 0.7392788 0.7443213 #>  [314,] 1.2703099 1.2800072 1.2860435 #>  [315,] 0.7036856 0.7170471 0.7244288 #>  [316,] 0.7604488 0.8092327 0.9214358 #>  [317,] 0.7603820 0.7764651 0.8421371 #>  [318,] 1.1229694 1.1392340 1.1663167 #>  [319,] 0.5865577 0.5881838 0.6014209 #>  [320,] 0.8559002 0.9019490 0.9530663 #>  [321,] 0.9261903 0.9352190 0.9420101 #>  [322,] 0.6872233 0.7456259 0.7665643 #>  [323,] 1.1934000 1.2136812 1.2208306 #>  [324,] 0.6494030 0.6706649 0.7031187 #>  [325,] 0.5748394 0.6042073 0.6052147 #>  [326,] 0.8130616 0.8954631 0.8990863 #>  [327,] 1.0337540 1.0617188 1.1702756 #>  [328,] 0.9017710 0.9020799 0.9354488 #>  [329,] 0.5933292 0.6099935 0.6269201 #>  [330,] 1.0032790 1.1392749 1.1734682 #>  [331,] 0.9572883 0.9851491 0.9879490 #>  [332,] 0.9403025 0.9457812 1.0081941 #>  [333,] 0.9169455 0.9436928 0.9582372 #>  [334,] 0.6753003 0.6837428 0.6870412 #>  [335,] 0.6324504 0.6378227 0.6750947 #>  [336,] 0.5435348 0.5528294 0.5558636 #>  [337,] 0.6949244 0.7186007 0.7337643 #>  [338,] 0.8058802 0.8657559 0.8917494 #>  [339,] 1.3690034 1.3751106 1.3827002 #>  [340,] 0.6920727 0.6929950 0.7119516 #>  [341,] 1.0078016 1.0573469 1.1799474 #>  [342,] 1.5276224 1.5624591 1.5804205 #>  [343,] 0.8645246 0.9185541 0.9294765 #>  [344,] 1.2624360 1.2734403 1.2826571 #>  [345,] 1.1361273 1.1432906 1.1593866 #>  [346,] 1.5048977 1.5135837 1.5500167 #>  [347,] 1.2349154 1.2877257 1.2926566 #>  [348,] 1.0878359 1.1558734 1.1879276 #>  [349,] 1.1088744 1.1579836 1.1620955 #>  [350,] 0.7639675 0.7668193 0.7835257 #>  [351,] 0.8484911 0.9381756 0.9579827 #>  [352,] 0.5867655 0.6382418 0.7070549 #>  [353,] 0.8500679 0.8608191 0.8848939 #>  [354,] 1.8835388 1.8909095 1.9301938 #>  [355,] 1.1217156 1.1337348 1.1578438 #>  [356,] 1.3062416 1.4339041 1.4398166 #>  [357,] 1.0687822 1.0904017 1.0928203 #>  [358,] 0.5107570 0.5110136 0.5390286 #>  [359,] 1.0312811 1.0484326 1.0507630 #>  [360,] 0.7242428 0.7662325 0.7700527 #>  [361,] 0.6998594 0.7121006 0.7695102 #>  [362,] 0.8472650 0.8576211 0.8578067 #>  [363,] 0.7922368 0.8162160 0.8195628 #>  [364,] 1.7840225 1.7935957 1.8200792 #>  [365,] 0.6604447 0.6607325 0.6940589 #>  [366,] 1.2676753 1.3127375 1.3455759 #>  [367,] 0.9907611 1.0173168 1.0582955 #>  [368,] 0.7873194 0.8153093 0.8161700 #>  [369,] 1.2283729 1.2864671 1.2900630 #>  [370,] 0.8764046 0.8902603 0.9107619 #>  [371,] 0.7204260 0.7453925 0.7456167 #>  [372,] 1.9136909 1.9257586 1.9737729 #>  [373,] 0.7203373 0.7251746 0.7363873 #>  [374,] 0.6362472 0.6432679 0.7208185 #>  [375,] 0.5686420 0.5760126 0.6036081 #>  [376,] 0.5961185 0.6197778 0.6326157 #>  [377,] 0.4790541 0.5063226 0.5381749 #>  [378,] 0.6281310 0.6451883 0.6610710 #>  [379,] 0.6737772 0.6814172 0.6973338 #>  [380,] 0.5838917 0.5957621 0.6375424 #>  [381,] 0.8268012 0.8868132 0.8966977 #>  [382,] 0.5972139 0.6691856 0.6766093 #>  [383,] 1.1091137 1.1549159 1.1574111 #>  [384,] 1.5863536 1.6189595 1.6538423 #>  [385,] 0.6191237 0.6232906 0.6366850 #>  [386,] 0.5910485 0.6037742 0.6059267 #>  [387,] 0.8561385 0.8773905 0.9195830 #>  [388,] 0.6319978 0.6397567 0.6599379 #>  [389,] 0.5940305 0.6152953 0.6751072 #>  [390,] 0.5702234 0.5814752 0.6183681 #>  [391,] 0.6197778 0.6807132 0.7367154 #>  [392,] 0.6662159 0.6921613 0.6933370 #>  [393,] 1.0265351 1.0275810 1.0382020 #>  [394,] 0.6201608 0.6320602 0.6678811 #>  [395,] 0.7150936 0.7625488 0.8378962 #>  [396,] 1.0709700 1.0786075 1.1044557 #>  [397,] 0.5592612 0.5643445 0.5651044 #>  [398,] 0.6640686 0.6704217 0.7282170 #>  [399,] 0.6074699 0.6097477 0.6241754 #>  [400,] 0.6457990 0.6477321 0.6578003 #>  [401,] 0.5949816 0.6264863 0.6453349 #>  [402,] 0.6575790 0.6945447 0.7303741 #>  [403,] 0.8661141 0.8943879 0.8950794 #>  [404,] 0.7340736 0.7414100 0.7673708 #>  [405,] 1.3332915 1.3421021 1.3814566 #>  [406,] 0.8552862 0.8669846 0.9277560 #>  [407,] 0.9004102 0.9261410 0.9343400 #>  [408,] 0.8135674 0.8450383 0.8705821 #>  [409,] 0.8256712 0.8536410 0.8981180 #>  [410,] 0.8887450 0.8915176 0.8993781 #>  [411,] 0.8759320 0.8867585 0.9849170 #>  [412,] 0.9320588 0.9831571 1.0540273 #>  [413,] 0.4758166 0.5748394 0.5912313 #>  [414,] 0.6969677 0.7072336 0.7256537 #>  [415,] 1.2983299 1.3487658 1.3542367 #>  [416,] 0.5912313 0.6043631 0.6321092 #>  [417,] 0.7756791 0.7986858 0.8033060 #>  [418,] 1.1854908 1.2246464 1.2476581 #>  [419,] 0.9162389 0.9221184 0.9283820 #>  [420,] 1.1735013 1.1769164 1.1872140 #>  [421,] 0.8402929 0.8607814 0.8620609 #>  [422,] 0.6259569 0.6395825 0.6534698 #>  [423,] 0.7192907 0.7264164 0.7613492 #>  [424,] 0.9115718 0.9502124 0.9740664 #>  [425,] 0.7674704 0.8125552 0.8770559 #>  [426,] 0.8036631 0.8197737 0.8293208 #>  [427,] 1.4373107 1.4770409 1.4910315 #>  [428,] 1.6430312 1.6433325 1.6847370 #>  [429,] 0.7836765 0.7926107 0.8011135 #>  [430,] 0.9935446 1.0302644 1.0587683 #>  [431,] 0.8044279 0.8080187 0.8465369 #>  [432,] 0.7364477 0.7604488 0.7798424 #>  [433,] 0.9211230 0.9305275 0.9406196 #>  [434,] 1.0173514 1.0480977 1.0674395 #>  [435,] 0.8496306 0.8506294 0.8919984 #>  [436,] 0.8790075 0.8798837 0.9392250 #>  [437,] 0.9722080 0.9799646 0.9969905 #>  [438,] 0.5961185 0.6061960 0.6314500 #>  [439,] 1.1766610 1.2153089 1.2215174 #>  [440,] 0.7032936 0.7135000 0.7486903 #>  [441,] 0.9360040 0.9977871 0.9991028 #>  [442,] 0.9516419 0.9843123 1.0266264 #>  [443,] 0.8293490 0.8309975 0.8441929 #>  [444,] 0.7670654 0.8382434 0.8433343 #>  [445,] 0.6552469 0.6588415 0.6804468 #>  [446,] 0.6706765 0.6920441 0.7511059 #>  [447,] 0.9193574 0.9581009 0.9949237 #>  [448,] 1.0837812 1.0966625 1.0972310 #>  [449,] 1.3484115 1.3612481 1.3933884 #>  [450,] 1.0410942 1.0433633 1.0578030 #>  [451,] 0.5514899 0.6022947 0.6102276 #>  [452,] 0.6676641 0.6975615 0.7186669 #>  [453,] 0.7884557 0.8004571 0.8858040 #>  [454,] 2.1367734 2.1841891 2.2330255 #>  [455,] 1.1141246 1.1987299 1.2260218 #>  [456,] 0.7407907 0.7622466 0.7751553 #>  [457,] 0.7138028 0.7209309 0.7285232 #>  [458,] 0.5595819 0.5606900 0.5753715 #>  [459,] 1.2664810 1.2953862 1.3025265 #>  [460,] 0.5102184 0.5321568 0.5407830 #>  [461,] 0.5984151 0.6398077 0.6481085 #>  [462,] 0.5870617 0.5943617 0.6064005 #>  [463,] 1.2958510 1.3279136 1.3499538 #>  [464,] 0.6839840 0.7408230 0.7847691 #>  [465,] 0.8841050 0.8893233 0.8966977 #>  [466,] 0.8547247 0.9152153 0.9351894 #>  [467,] 0.5412162 0.5424208 0.5596547 #>  [468,] 0.5973697 0.6052726 0.6141802 #>  [469,] 0.9408210 0.9566718 1.0542626 #>  [470,] 0.9890728 1.0445850 1.1372962 #>  [471,] 0.9417579 0.9627105 0.9764056 #>  [472,] 0.6384854 0.6727299 0.6813998 #>  [473,] 1.1833788 1.2173382 1.2322961 #>  [474,] 1.0716606 1.0766614 1.0779042 #>  [475,] 0.5984151 0.6375358 0.6399035 #>  [476,] 0.9339092 0.9641561 0.9708484 #>  [477,] 1.1039549 1.1293854 1.1574073 #>  [478,] 0.5185337 0.5325772 0.5345708 #>  [479,] 0.6824157 0.6851024 0.6870506 #>  [480,] 0.9909694 0.9921747 1.0125239 #>  [481,] 0.7616735 0.7662220 0.7911263 #>  [482,] 1.4111722 1.4130526 1.4571917 #>  [483,] 1.0452325 1.0866509 1.1174890 #>  [484,] 0.6951444 0.7227387 0.7335368 #>  [485,] 0.8935231 0.9191863 0.9195821 #>  [486,] 0.7894821 0.8232029 0.8284629 #>  [487,] 0.9002728 0.9036583 0.9161660 #>  [488,] 0.5598384 0.5745354 0.5928575 #>  [489,] 0.9376695 0.9697391 0.9717478 #>  [490,] 0.8124181 0.8133119 0.8370879 #>  [491,] 0.5674668 0.6342794 0.6485300 #>  [492,] 1.3803317 1.3940885 1.3991100 #>  [493,] 2.6324376 2.6690664 2.7737263 #>  [494,] 1.0415608 1.0465449 1.0606475 #>  [495,] 0.6128037 0.6143222 0.6348714 #>  [496,] 0.6494720 0.6706765 0.6719396 #>  [497,] 0.7994980 0.8133536 0.8167190 #>  [498,] 0.8143255 0.8169539 0.8255183 #>  [499,] 0.8120959 0.8972287 0.9584684 #>  [500,] 0.7591691 0.7922208 0.8230804 #>  [501,] 0.7942967 0.8285279 0.8572660 #>  [502,] 0.7507853 0.7511208 0.7989709 #>  [503,] 1.4949309 1.5088695 1.5509928 #>  [504,] 0.8053975 0.8365426 0.8680624 #>  [505,] 0.6860799 0.7286447 0.7548900 #>  [506,] 1.2046732 1.2391506 1.2582965 #>  [507,] 0.8136846 0.8645404 0.9054870 #>  [508,] 0.7279939 0.7764651 0.7771602 #>  [509,] 0.5519474 0.5852473 0.6027293 #>  [510,] 0.9828459 1.0000553 1.0062420 #>  [511,] 1.3120544 1.3697740 1.3791040 #>  [512,] 0.7999313 0.8061467 0.8584755 #>  [513,] 0.6522734 0.6537678 0.7067641 #>  [514,] 0.5341007 0.5595721 0.5702234 #>  [515,] 0.7402556 0.7603820 0.7614424 #>  [516,] 1.3036382 1.3175556 1.3310183 #>  [517,] 0.5803165 0.6335523 0.6472690 #>  [518,] 0.5961672 0.6423636 0.6639860 #>  [519,] 0.7267415 0.7633553 0.7781045 #>  [520,] 1.3120326 1.3456364 1.3592018 #>  [521,] 0.6813673 0.7266624 0.7335445 #>  [522,] 0.5714060 0.6042908 0.6261069 #>  [523,] 0.7975021 0.8365337 0.8935231 #>  [524,] 0.5770214 0.5856605 0.5864101 #>  [525,] 1.0275344 1.0832356 1.1227728 #>  [526,] 0.7855333 0.7864941 0.7947814 #>  [527,] 0.5228366 0.5398527 0.5420559 #>  [528,] 0.9385254 0.9589972 0.9752898 #>  [529,] 0.8156924 0.8332599 0.8615127 #>  [530,] 0.7473432 0.7559358 0.7714931 #>  [531,] 0.8158961 0.8562694 0.8780334 #>  [532,] 0.4906728 0.4990324 0.5208221 #>  [533,] 0.6691694 0.6861658 0.7352581 #>  [534,] 0.6789112 0.7336426 0.7513954 #>  [535,] 0.6728635 0.7678769 0.7909957 #>  [536,] 1.1744132 1.2336947 1.3381162 #>  [537,] 0.8196332 0.8313359 0.8403455 #>  [538,] 0.8405960 0.8768382 0.9284968 #>  [539,] 0.5381640 0.5385255 0.5406893 #>  [540,] 0.5218718 0.5511470 0.6098027 #>  [541,] 1.2882662 1.3078982 1.3287785 #>  [542,] 0.6976603 0.7159925 0.7538068 #>  [543,] 0.5714734 0.5942102 0.6285718 #>  [544,] 1.0021444 1.0498677 1.0519129 #>  [545,] 1.0248468 1.0490369 1.0517910 #>  [546,] 0.6121790 0.6640686 0.6670931 #>  [547,] 0.5477479 0.5547625 0.5845560 #>  [548,] 0.6791547 0.6791821 0.6867928 #>  [549,] 0.6311751 0.6329992 0.6341607 #>  [550,] 1.0076839 1.0077841 1.0123677 #>  [551,] 0.6265470 0.6582619 0.6678544 #>  [552,] 0.9844540 1.0010224 1.0075383 #>  [553,] 1.1312600 1.1588874 1.1679290 #>  [554,] 0.6384404 0.6599379 0.6728720 #>  [555,] 1.2058816 1.2092497 1.2136584 #>  [556,] 0.6696183 0.6698253 0.7465571 #>  [557,] 0.9483951 1.0008317 1.0464603 #>  [558,] 0.6084161 0.6473261 0.6520436 #>  [559,] 0.7803574 0.7808140 0.7982618 #>  [560,] 0.5591070 0.5913421 0.6114488 #>  [561,] 0.5428802 0.5876741 0.6124616 #>  [562,] 0.9222297 0.9307235 0.9385254 #>  [563,] 0.6915029 0.6947540 0.7033899 #>  [564,] 0.6099350 0.6153748 0.6295611 #>  [565,] 0.6475919 0.6571278 0.6620978 #>  [566,] 0.6613871 0.6824320 0.7059184 #>  [567,] 0.7330574 0.7808816 0.8216897 #>  [568,] 0.9372712 0.9662115 0.9677037 #>  [569,] 0.7491739 0.7923519 0.7965943 #>  [570,] 0.5727699 0.6041179 0.6079337 #>  [571,] 0.5651094 0.5663454 0.5776907 #>  [572,] 0.6041959 0.6283359 0.6407717 #>  [573,] 0.5697445 0.5801522 0.6254402 #>  [574,] 0.6313678 0.6374224 0.6378726 #>  [575,] 0.8004918 0.8175034 0.8323077 #>  [576,] 0.9936716 1.0049013 1.0061198 #>  [577,] 0.9310631 0.9779457 0.9817270 #>  [578,] 0.7496053 0.7719385 0.7994812 #>  [579,] 0.8161502 0.9042003 0.9188250 #>  [580,] 0.7372187 0.7453339 0.7595319 #>  [581,] 0.7303741 0.7454781 0.7741801 #>  [582,] 0.5664952 0.5762015 0.5926989 #>  [583,] 0.9075313 0.9157993 0.9427345 #>  [584,] 0.5608866 0.5663454 0.5843786 #>  [585,] 0.6918798 0.7233158 0.7490797 #>  [586,] 1.1978771 1.2049093 1.2087941 #>  [587,] 0.6729545 0.6765619 0.7040318 #>  [588,] 0.7863253 0.8041727 0.8200095 #>  [589,] 0.5074522 0.5339643 0.5406893 #>  [590,] 0.7183710 0.7508591 0.7537716 #>  [591,] 1.3441311 1.4014283 1.4517849 #>  [592,] 0.5762015 0.5943558 0.6121790 #>  [593,] 0.6845963 0.7040535 0.7410925 #>  [594,] 0.7376029 0.7433205 0.7451009 #>  [595,] 0.6152322 0.6278778 0.6315908 #>  [596,] 0.7465604 0.7550694 0.7825075 #>  [597,] 0.7657190 0.8428108 0.8585161 #>  [598,] 0.7214195 0.7745880 0.7987840 #>  [599,] 0.6337729 0.6448877 0.6471201 #>  [600,] 0.8168296 0.8416284 0.8426500 #>  [601,] 0.9516237 0.9915572 0.9983110 #>  [602,] 0.5755134 0.5840093 0.5843786 #>  [603,] 0.6613871 0.6627529 0.6730059 #>  [604,] 0.8985013 0.9034936 0.9039363 #>  [605,] 0.5997719 0.6076570 0.6588614 #>  [606,] 0.8421485 0.8662256 0.8729840 #>  [607,] 0.7682029 0.7831944 0.8054474 #>  [608,] 0.7881383 0.7938120 0.7950072 #>  [609,] 0.5976664 0.6129419 0.6358063 #>  [610,] 1.2458807 1.2566878 1.2683027 #>  [611,] 0.8656823 0.8997353 0.9536529 #>  [612,] 0.8401921 0.8574360 0.8988835 #>  [613,] 0.7481673 0.7773212 0.8001707 #>  [614,] 1.0903158 1.1278254 1.1628513 #>  [615,] 0.8802197 0.8896611 0.8917722 #>  [616,] 1.2342011 1.2447175 1.2763667 #>  [617,] 0.5608705 0.5676470 0.6187819 #>  [618,] 0.6492424 0.6622900 0.7294521 #>  [619,] 0.5355730 0.5383274 0.5427075 #>  [620,] 0.6501762 0.6614082 0.6704982 #>  [621,] 0.7245402 0.7299863 0.7461537 #>  [622,] 0.5724824 0.6596924 0.6634423 #>  [623,] 0.5919135 0.5988992 0.6016540 #>  [624,] 0.6370275 0.6510347 0.6611202 #>  [625,] 1.0954630 1.1799942 1.1995452 #>  [626,] 1.4774903 1.4885966 1.5354595 #>  [627,] 0.9425651 0.9427145 0.9561565 #>  [628,] 0.6272954 0.6306031 0.6385995 #>  [629,] 0.9216363 0.9241269 0.9431514 #>  [630,] 0.9413582 1.0119908 1.0699182 #>  [631,] 0.5508429 0.5551638 0.5663733 #>  [632,] 0.6139474 0.6311085 0.6481085 #>  [633,] 0.8760715 0.8883357 0.9078303 #>  [634,] 0.7593810 0.8157868 0.8720700 #>  [635,] 0.7572716 0.7666700 0.8802197 #>  [636,] 0.8832296 0.9427622 0.9846249 #>  [637,] 0.9871094 1.0700715 1.0752969 #>  [638,] 0.4837325 0.5364892 0.5370520 #>  [639,] 1.0791001 1.1101844 1.1581415 #>  [640,] 0.6941355 0.7137021 0.7376078 #>  [641,] 1.2330567 1.2436951 1.2579289 #>  [642,] 0.7711209 0.7766738 0.7829656 #>  [643,] 0.8741666 0.8947221 0.8970010 #>  [644,] 1.9725464 2.0644929 2.1116776 #>  [645,] 0.5688932 0.5949131 0.6118133 #>  [646,] 0.9909694 1.0529737 1.0533868 #>  [647,] 1.3479551 1.3636697 1.4224705 #>  [648,] 1.0236511 1.0558188 1.0661166 #>  [649,] 0.6119802 0.6620747 0.6720401 #>  [650,] 0.7986858 0.8810201 0.9072789 #>  [651,] 0.5927861 0.6127758 0.6417678 #>  [652,] 0.5640903 0.5655034 0.6655083 #>  [653,] 0.6526109 0.7190801 0.7592149 #>  [654,] 0.5355730 0.5419426 0.5473769 #>  [655,] 0.7781352 0.7893598 0.8058373 #>  [656,] 0.5318165 0.5407418 0.5473769 #>  [657,] 0.7384227 0.7668032 0.7671287 #>  [658,] 1.1277039 1.1548729 1.1934277 #>  [659,] 0.9591430 0.9641303 1.0163688 #>  [660,] 0.6580695 0.6654264 0.6738850 #>  [661,] 1.1987592 1.2335577 1.2834319 #>  [662,] 1.1534570 1.1807731 1.2514892 #>  [663,] 0.8294891 0.8325691 0.8468208 #>  [664,] 0.6437686 0.6491674 0.6688053 #>  [665,] 0.6398555 0.6723788 0.6752057 #>  [666,] 1.3548211 1.4343603 1.4766115 #>  [667,] 1.0282640 1.0335529 1.0423458 #>  [668,] 0.6793030 0.7149134 0.7170944 #>  [669,] 1.0036135 1.0317734 1.0962949 #>  [670,] 0.8581274 0.8874609 0.9307183 #>  [671,] 0.7384851 0.7392788 0.7614672 #>  [672,] 1.2070670 1.2230454 1.2312539 #>  [673,] 0.6416740 0.6445448 0.6487790 #>  [674,] 1.1273668 1.1453995 1.1486441 #>  [675,] 0.8920908 0.8962625 0.8981554 #>  [676,] 0.9653476 0.9935017 1.0021042 #>  [677,] 0.6666536 0.6795478 0.6850282 #>  [678,] 0.8307655 0.8524294 0.8533674 #>  [679,] 0.5553743 0.5578504 0.5716971 #>  [680,] 0.8838908 0.9718113 0.9796859 #>  [681,] 0.6413637 0.6417548 0.6650387 #>  [682,] 0.4207454 0.4486872 0.4777697 #>  [683,] 0.7730774 0.7819100 0.8078214 #>  [684,] 0.5463946 0.5473829 0.5674668 #>  [685,] 1.1530049 1.1830191 1.2908591 #>  [686,] 0.7890535 0.8204635 0.8218344 #>  [687,] 0.8578753 0.8594021 0.8875361 #>  [688,] 0.7745880 0.7960903 0.7992109 #>  [689,] 0.9799352 1.0616828 1.0766614 #>  [690,] 0.7386538 0.7582832 0.7617789 #>  [691,] 0.6228384 0.6260551 0.6385995 #>  [692,] 0.4907610 0.5325974 0.5447070 #>  [693,] 0.7390494 0.8180225 0.8321131 #>  [694,] 0.8159574 0.8169514 0.8330316 #>  [695,] 0.9459157 0.9774554 0.9915602 #>  [696,] 0.7997342 0.8509668 0.8729840 #>  [697,] 0.7281046 0.7845302 0.8072378 #>  [698,] 0.6120899 0.6451727 0.6754883 #>  [699,] 1.3482400 1.3793944 1.4142015 #>  [700,] 0.9168368 0.9390019 0.9660656 #>  [701,] 0.6792586 0.7200910 0.7241861 #>  [702,] 0.8655241 0.8864966 0.9114828 #>  [703,] 0.6404817 0.6849991 0.7113354 #>  [704,] 0.9865033 1.0048190 1.0415608 #>  [705,] 0.9126041 0.9171610 0.9335207 #>  [706,] 0.9388705 0.9499690 0.9759546 #>  [707,] 1.0371090 1.0395011 1.0713917 #>  [708,] 0.6236107 0.6261069 0.6367857 #>  [709,] 0.8038135 0.8064418 0.8208255 #>  [710,] 1.5019876 1.5265523 1.6085682 #>  [711,] 0.6166141 0.6409573 0.6478410 #>  [712,] 1.2396150 1.3561953 1.3703831 #>  [713,] 0.5883195 0.6094055 0.6133785 #>  [714,] 0.8892120 0.9139681 0.9643993 #>  [715,] 0.5838696 0.5911656 0.6175134 #>  [716,] 0.8788879 0.8855800 0.9229080 #>  [717,] 0.9145789 0.9228356 0.9442154 #>  [718,] 0.7164260 0.7410933 0.7767975 #>  [719,] 0.7420058 0.8241127 0.9174082 #>  [720,] 1.6620827 1.6719920 1.7390415 #>  [721,] 0.8414038 0.8578888 0.8956830 #>  [722,] 0.5205250 0.5265614 0.5336194 #>  [723,] 0.8359769 0.8475807 0.8614575 #>  [724,] 0.8301186 0.8558846 0.8835816 #>  [725,] 0.7742628 0.7850612 0.8017580 #>  [726,] 0.9629136 0.9852561 1.0036794 #>  [727,] 1.0717580 1.0750655 1.1507472 #>  [728,] 0.4932012 0.4995070 0.5065138 #>  [729,] 0.9035626 0.9173877 0.9280949 #>  [730,] 0.5752908 0.6601939 0.6709965 #>  [731,] 0.7696398 0.7880743 0.7905991 #>  [732,] 0.5820248 0.5909170 0.6342252 #>  [733,] 0.8571998 0.8894662 0.9065892 #>  [734,] 1.6243343 1.6704143 1.6727109 #>  [735,] 0.5749247 0.6399035 0.6480750 #>  [736,] 0.7168924 0.7169690 0.7182067 #>  [737,] 0.8110680 0.8127514 0.8256908 #>  [738,] 0.7621991 0.7963092 0.7976325 #>  [739,] 0.7164260 0.7245343 0.7272189 #>  [740,] 0.6751453 0.6801725 0.7343027 #>  [741,] 0.7029069 0.7104602 0.7169029 #>  [742,] 0.9232281 0.9303042 0.9382034 #>  [743,] 0.8662256 0.8895388 0.9329258 #>  [744,] 0.5869009 0.5890001 0.5902472 #>  [745,] 0.5515260 0.5634798 0.5641328 #>  [746,] 0.5030661 0.5092214 0.5101448 #>  [747,] 0.6742204 0.6772682 0.7024455 #>  [748,] 1.3109515 1.3334425 1.3370805 #>  [749,] 0.8879822 0.9006914 0.9042298 #>  [750,] 1.1774851 1.2695679 1.2885741 #>  [751,] 0.5396846 0.5676130 0.5746841 #>  [752,] 0.8230818 0.8669875 0.8793800 #>  [753,] 0.6311249 0.6320602 0.6408632 #>  [754,] 1.1830191 1.2461672 1.2494274 #>  [755,] 1.6769847 1.7630488 1.8082883 #>  [756,] 1.0337113 1.0907630 1.1005209 #>  [757,] 0.6115134 0.6162420 0.6264962 #>  [758,] 1.3047345 1.3078834 1.3545334 #>  [759,] 0.6476332 0.6488499 0.6602112 #>  [760,] 0.7294000 0.7309384 0.7330574 #>  [761,] 0.4687024 0.4946562 0.5432200 #>  [762,] 0.6398761 0.6551953 0.6849887 #>  [763,] 0.6873010 0.7017468 0.7096704 #>  [764,] 0.9027913 0.9058051 0.9117867 #>  [765,] 0.6926778 0.7046223 0.7129806 #>  [766,] 0.7679584 0.7783103 0.7932272 #>  [767,] 0.8065061 0.8079644 0.8466747 #>  [768,] 0.8655579 0.9056015 0.9336598 #>  [769,] 0.9847036 1.0062233 1.0312801 #>  [770,] 0.7746617 0.8695440 0.8743818 #>  [771,] 0.5107617 0.5515260 0.5845560 #>  [772,] 1.1472033 1.2518029 1.2604979 #>  [773,] 0.8011135 0.8374992 0.8716231 #>  [774,] 0.7862951 0.7926905 0.8059538 #>  [775,] 0.6834379 0.6981988 0.7153690 #>  [776,] 0.5553743 0.5658701 0.6013933 #>  [777,] 0.6450546 0.6957498 0.6994597 #>  [778,] 1.0437685 1.0505492 1.1325979 #>  [779,] 0.7457828 0.7661089 0.7815630 #>  [780,] 0.9663858 1.0356129 1.1141288 #>  [781,] 0.6367787 0.6389733 0.6394451 #>  [782,] 0.5942549 0.6046455 0.6236231 #>  [783,] 0.7652160 0.8012428 0.8831677 #>  [784,] 0.5324907 0.5396846 0.5578504 #>  [785,] 0.6486078 0.7011926 0.7078676 #>  [786,] 0.9794863 1.0735221 1.1246145 #>  [787,] 0.5633748 0.5679865 0.5840093 #>  [788,] 1.0864458 1.1043803 1.1451901 #>  [789,] 0.5996100 0.6200803 0.6273228 #>  [790,] 1.1596246 1.1944638 1.2016451 #>  [791,] 1.4543949 1.4881974 1.5279832 #>  [792,] 1.6465150 1.6540642 1.6719920 #>  [793,] 0.8106073 0.8583783 0.9044092 #>  [794,] 0.5847095 0.6550230 0.6647078 #>  [795,] 0.5879543 0.6121093 0.6160844 #>  [796,] 0.6537113 0.6546843 0.6847850 #>  [797,] 0.6202906 0.6297908 0.6405829 #>  [798,] 0.9249962 0.9599222 0.9850830 #>  [799,] 0.9581526 0.9652656 0.9810554 #>  [800,] 0.6727214 0.6813998 0.6951916 #>  [801,] 2.0102790 2.0668683 2.1392236 #>  [802,] 0.6986640 0.7273680 0.7976871 #>  [803,] 0.6097477 0.6286949 0.6403541 #>  [804,] 0.7618036 0.8036282 0.8047652 #>  [805,] 0.5744496 0.6321281 0.6931242 #>  [806,] 0.9236481 0.9538382 0.9655047 #>  [807,] 1.2172207 1.2675466 1.3771271 #>  [808,] 0.5583643 0.5637111 0.6098692 #>  [809,] 0.7724294 0.7742628 0.7817124 #>  [810,] 0.5847470 0.5992529 0.6122430 #>  [811,] 2.0127832 2.0132546 2.0348013 #>  [812,] 0.5360767 0.5888384 0.6097322 #>  [813,] 0.7269806 0.7546149 0.7746617 #>  [814,] 0.9018087 0.9358204 0.9360448 #>  [815,] 0.9839167 1.0373189 1.0502919 #>  [816,] 0.6873142 0.6893419 0.7158041 #>  [817,] 0.8094694 0.8136929 0.8212123 #>  [818,] 0.8798837 0.8853364 0.9034769 #>  [819,] 0.7614424 0.8309036 0.9128375 #>  [820,] 0.6441873 0.7121006 0.7199168 #>  [821,] 0.5998683 0.6124334 0.6180573 #>  [822,] 1.0559804 1.0876169 1.1256377 #>  [823,] 0.5055550 0.5601752 0.5977994 #>  [824,] 1.0143841 1.0298300 1.0342578 #>  [825,] 0.7269025 0.7361034 0.7412978 #>  [826,] 0.9642689 1.0423922 1.0556965 #>  [827,] 0.9538659 0.9578612 0.9895428 #>  [828,] 0.5136086 0.5245614 0.5648636 #>  [829,] 0.9211177 0.9602262 0.9909242 #>  [830,] 1.4215254 1.4277082 1.4735423 #>  [831,] 0.6552414 0.6650485 0.6933226 #>  [832,] 0.7284871 0.7320340 0.7391962 #>  [833,] 0.5831350 0.6276569 0.6315142 #>  [834,] 0.6979239 0.7193289 0.7489137 #>  [835,] 0.5651044 0.5731068 0.5776889 #>  [836,] 0.9579827 0.9588168 0.9654936 #>  [837,] 0.8770559 0.9508411 1.0066171 #>  [838,] 0.7340724 0.7355500 0.7419134 #>  [839,] 1.0172404 1.0182982 1.0402215 #>  [840,] 0.9497564 0.9543635 0.9926440 #>  [841,] 1.6457853 1.6676971 1.6703937 #>  [842,] 0.5940305 0.6427197 0.6741205 #>  [843,] 0.4790541 0.4907610 0.4931029 #>  [844,] 0.5535695 0.5705535 0.5717266 #>  [845,] 0.8033529 0.9752092 0.9834741 #>  [846,] 0.6058512 0.6092856 0.6214410 #>  [847,] 0.7668193 0.7802200 0.7824217 #>  [848,] 1.3161190 1.3282593 1.3520607 #>  [849,] 0.7676503 0.7713164 0.7749533 #>  [850,] 0.5504362 0.5857092 0.5930570 #>  [851,] 0.7207352 0.7312513 0.7441503 #>  [852,] 0.9733051 1.0633001 1.0828411 #>  [853,] 0.7697303 0.7816603 0.7841466 #>  [854,] 0.5942549 0.6075738 0.6081425 #>  [855,] 0.6133180 0.6218180 0.6797722 #>  [856,] 0.5856327 0.5977994 0.6159256 #>  [857,] 1.5109446 1.5168862 1.5564553 #>  [858,] 1.2071040 1.2082034 1.2094259 #>  [859,] 0.9013572 0.9277140 0.9430382 #>  [860,] 0.5140850 0.5330592 0.5678127 #>  [861,] 0.5559849 0.5876458 0.6253117 #>  [862,] 0.6451883 0.6802330 0.7037397 #>  [863,] 0.8677625 0.8768750 0.8950794 #>  [864,] 0.8943424 0.9008648 0.9135763 #>  [865,] 0.5426174 0.5605382 0.5658701 #>  [866,] 0.5744496 0.5997719 0.6359353 #>  [867,] 1.0335550 1.1132867 1.1137644 #>  [868,] 0.5591070 0.5608866 0.5776907 #>  [869,] 0.8216612 0.8229050 0.8354784 #>  [870,] 0.8740258 0.8867939 0.9018087 #>  [871,] 0.6732713 0.6930500 0.6951371 #>  [872,] 0.8135307 0.8266319 0.8354528 #>  [873,] 1.2137115 1.2175522 1.2272984 #>  [874,] 0.8289833 0.8382800 0.8738860 #>  [875,] 0.8564971 0.8578067 0.8876631 #>  [876,] 0.6896126 0.7214217 0.7440187 #>  [877,] 0.7217445 0.7895364 0.8323803 #>  [878,] 1.1533803 1.1968494 1.2014735 #>  [879,] 0.8934518 0.9209075 0.9216363 #>  [880,] 0.5527097 0.5860162 0.6158828 #>  [881,] 1.1255149 1.1714824 1.2705867 #>  [882,] 0.6678544 0.6866401 0.7009519 #>  [883,] 0.7978641 0.8321555 0.8724084 #>  [884,] 0.7477290 0.7653026 0.7692648 #>  [885,] 0.8017866 0.8136929 0.8975654 #>  [886,] 0.7809196 0.7879693 0.8107196 #>  [887,] 0.7661089 0.7754725 0.7863253 #>  [888,] 0.5709725 0.5764475 0.5992161 #>  [889,] 0.8271293 0.8289344 0.8408611 #>  [890,] 1.2807940 1.2839271 1.2997891 #>  [891,] 1.0617974 1.0853410 1.1068208 #>  [892,] 0.7607260 0.7700527 0.7783519 #>  [893,] 0.7541170 0.7910747 0.8603559 #>  [894,] 0.6831521 0.6890167 0.7141749 #>  [895,] 0.8244483 0.8799425 0.8802286 #>  [896,] 0.5984661 0.6094055 0.6227250 #>  [897,] 0.9890953 1.0081187 1.0340147 #>  [898,] 1.1132297 1.1348071 1.1507885 #>  [899,] 1.2409729 1.3121336 1.3518109 #>  [900,] 0.6509141 0.6868367 0.6883754 #>  [901,] 0.6099935 0.6213515 0.6417361 #>  [902,] 1.3209606 1.3450126 1.3687592 #>  [903,] 0.5984030 0.6008958 0.6022620 #>  [904,] 0.6542758 0.6640788 0.6640856 #>  [905,] 0.7977795 0.8319063 0.8656072 #>  [906,] 0.7173561 0.7203901 0.7555384 #>  [907,] 0.6525579 0.6552414 0.7245683 #>  [908,] 0.9039573 0.9041569 0.9063192 #>  [909,] 1.4298778 1.4329448 1.4472800 #>  [910,] 0.5387782 0.5412956 0.5477150 #>  [911,] 1.2173382 1.2560518 1.2919727 #>  [912,] 0.7357022 0.7880743 0.7901190 #>  [913,] 1.3565171 1.4090639 1.4293918 #>  [914,] 1.1013150 1.1634228 1.1994644 #>  [915,] 1.4331158 1.4575753 1.5599124 #>  [916,] 1.1059065 1.1077675 1.1209279 #>  [917,] 0.7486382 0.7546149 0.7571890 #>  [918,] 0.6243260 0.6254634 0.6259569 #>  [919,] 0.5101448 0.5413036 0.5500943 #>  [920,] 0.7340899 0.7561492 0.7567436 #>  [921,] 0.7595645 0.7661535 0.7857944 #>  [922,] 0.5592612 0.5625081 0.5749247 #>  [923,] 1.0372290 1.0772322 1.1879276 #>  [924,] 0.5070854 0.5197859 0.5281297 #>  [925,] 0.6476842 0.6825489 0.6847850 #>  [926,] 0.6473261 0.6710265 0.6815069 #>  [927,] 0.7639675 0.8028773 0.8372996 #>  [928,] 0.8048193 0.8244515 0.8810398 #>  [929,] 0.8401738 0.8658042 0.8973762 #>  [930,] 0.7169029 0.7236686 0.7391002 #>  [931,] 0.7596917 0.7698975 0.8049440 #>  [932,] 0.6997904 0.7175271 0.7218247 #>  [933,] 0.7609654 0.8058802 0.8287367 #>  [934,] 0.5949816 0.6045570 0.6090686 #>  [935,] 0.9341321 0.9372112 0.9372712 #>  [936,] 0.8459872 0.8576306 0.8678181 #>  [937,] 0.5709725 0.6157957 0.6451727 #>  [938,] 0.6998869 0.7022318 0.7072336 #>  [939,] 0.6418861 0.6517386 0.6818614 #>  [940,] 0.5283124 0.5294837 0.5936762 #>  [941,] 0.9674415 0.9788511 1.0138423 #>  [942,] 1.1128389 1.1143397 1.1690960 #>  [943,] 1.6803101 1.6941995 1.7136917 #>  [944,] 1.3221949 1.3446505 1.3817987 #>  [945,] 1.5710932 1.5776576 1.6620827 #>  [946,] 0.7384851 0.7728510 0.7963092 #>  [947,] 0.7441506 0.7727892 0.8615127 #>  [948,] 0.9017657 0.9118579 0.9316914 #>  [949,] 1.3323397 1.3689026 1.3814822 #>  [950,] 0.7570769 0.8004004 0.8308365 #>  [951,] 1.0578197 1.0634875 1.0936796 #>  [952,] 1.2186767 1.2630524 1.2847756 #>  [953,] 0.6140948 0.6151853 0.6375358 #>  [954,] 0.7717469 0.8756938 0.8785568 #>  [955,] 0.9195132 0.9569820 0.9718113 #>  [956,] 0.6976603 0.7400473 0.7463201 #>  [957,] 0.5718556 0.6742204 0.6855719 #>  [958,] 1.4702517 1.5061594 1.5194647 #>  [959,] 0.5405015 0.5508350 0.5745354 #>  [960,] 1.1047332 1.1716676 1.1718125 #>  [961,] 0.7045063 0.7081827 0.7110734 #>  [962,] 0.6846204 0.6994597 0.7067170 #>  [963,] 0.9440635 0.9554894 1.0223143 #>  [964,] 0.8463291 0.8707906 0.8747427 #>  [965,] 1.0576486 1.0628378 1.1332736 #>  [966,] 1.1343718 1.1750497 1.1871917 #>  [967,] 0.9788190 1.0423458 1.0464314 #>  [968,] 1.1925060 1.2836596 1.2941495 #>  [969,] 0.5606900 0.5785141 0.5787356 #>  [970,] 0.6520436 0.7614299 0.7723642 #>  [971,] 1.2067139 1.2271247 1.2595665 #>  [972,] 0.6870506 0.6957299 0.7189947 #>  [973,] 1.8535979 1.9402700 1.9835709 #>  [974,] 1.0753435 1.0864398 1.0924767 #>  [975,] 0.7627266 0.7896984 0.8246625 #>  [976,] 0.6613643 0.6774765 0.7062599 #>  [977,] 1.0558483 1.0868780 1.0881025 #>  [978,] 0.9009253 0.9039584 0.9280949 #>  [979,] 0.9187408 0.9360467 0.9406206 #>  [980,] 0.8027311 0.8469038 0.8557672 #>  [981,] 0.9498562 0.9599489 0.9757677 #>  [982,] 0.8321479 0.8509284 0.8599406 #>  [983,] 0.9925028 1.0451339 1.0571724 #>  [984,] 1.2354983 1.2401333 1.2591982 #>  [985,] 0.7397679 0.7680355 0.7814956 #>  [986,] 0.7896337 0.7976881 0.8018165 #>  [987,] 0.6382274 0.6476414 0.6488428 #>  [988,] 1.1409059 1.1470921 1.2268842 #>  [989,] 0.9114139 0.9359087 0.9760005 #>  [990,] 1.0555246 1.0700744 1.0821757 #>  [991,] 0.9310123 0.9605320 1.0127975 #>  [992,] 0.5974524 0.6504537 0.6517386 #>  [993,] 0.7126133 0.7134285 0.7195044 #>  [994,] 0.6735379 0.7027446 0.7033899 #>  [995,] 1.1919548 1.2437766 1.2621430 #>  [996,] 0.7310751 0.7594972 0.8058373 #>  [997,] 0.7742144 0.7855333 0.8343724 #>  [998,] 0.9240482 1.0261119 1.0353478 #>  [999,] 1.4091219 1.4352205 1.5047765 #> [1000,] 1.1165651 1.1231420 1.1601509 #>"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_log_rank_threshold.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"Compute log-rank test p-value difference two survival curves obtained splitting dataset \"low\" \"high\" risk group using possible relative-risk thresholds.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_log_rank_threshold.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"","code":"tof_find_log_rank_threshold(input_data, relative_risk_col, time_col, event_col)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_log_rank_threshold.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"input_data tbl_df data.frame observation row. relative_risk_col unquote column name indicating column contains relative-risk estimates observation. time_col unquoted column name indicating column contains true time--event information observation. event_col unquoted column name indicating column contains outcome (event censorship). Must binary column - values  either 0 1 (1 indicating adverse event 0 indicating  censorship) FALSE TRUE (TRUE indicating adverse event FALSE indicating censorship).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_log_rank_threshold.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"tibble 3 columns: \"candidate_thresholds\" (relative-risk threshold used log-rank test), \"log_rank_p_val\" (p-values log-rank tests) \"is_best\" (logical value indicating candidate threshold gave optimal, .e. smallest, p-value).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_panel_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Use tidytof's opinionated heuristic for extracted a high-dimensional cytometry panel's metal-antigen pairs\nfrom a flowFrame (read from a .fcs file.) — tof_find_panel_info","title":"Use tidytof's opinionated heuristic for extracted a high-dimensional cytometry panel's metal-antigen pairs\nfrom a flowFrame (read from a .fcs file.) — tof_find_panel_info","text":"Using character vectors obtained `name` `desc` columns parameters data flowFrame, figure high-dimensional cytometry panel used collect data return tidy tibble.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_panel_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use tidytof's opinionated heuristic for extracted a high-dimensional cytometry panel's metal-antigen pairs\nfrom a flowFrame (read from a .fcs file.) — tof_find_panel_info","text":"","code":"tof_find_panel_info(input_flowFrame)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_panel_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use tidytof's opinionated heuristic for extracted a high-dimensional cytometry panel's metal-antigen pairs\nfrom a flowFrame (read from a .fcs file.) — tof_find_panel_info","text":"input_flowFrame raw flowFrame (just read .fcs file) high-dimensional cytometry panel extracted","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_panel_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use tidytof's opinionated heuristic for extracted a high-dimensional cytometry panel's metal-antigen pairs\nfrom a flowFrame (read from a .fcs file.) — tof_find_panel_info","text":"tibble 2 columns (`metals` `antigens`) correspond metals antigens high-dimensional cytometry panel used data acquisition.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_fit_split.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a glmnet model and calculate performance metrics using a single rsplit object — tof_fit_split","title":"Fit a glmnet model and calculate performance metrics using a single rsplit object — tof_fit_split","text":"function trains glmnet model training set rsplit object, calculates performance metrics model validation/holdout set combinations mixture penalty hyperparameters provided hyperparameter grid.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_fit_split.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a glmnet model and calculate performance metrics using a single rsplit object — tof_fit_split","text":"","code":"tof_fit_split(   split_data,   prepped_recipe,   hyperparameter_grid,   model_type,   outcome_colnames )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_fit_split.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a glmnet model and calculate performance metrics using a single rsplit object — tof_fit_split","text":"split_data `rsplit` object rsample package. Alternatively, unsplit tbl_df can provided, though recommended. prepped_recipe trained recipe hyperparameter_grid tibble containing hyperparameter values tune. Can created using tof_create_grid model_type string representing type glmnet model fit. outcome_colnames Quoted column names indicating columns data fit represent outcome variables (others assumed predictors).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_fit_split.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit a glmnet model and calculate performance metrics using a single rsplit object — tof_fit_split","text":"tibble number rows input hyperparameter grid. row represents combination mixture penalty, column contains performance metric fitted glmnet model `split_data`'s holdout set. specific performance metrics depend type model fit: \"linear\" mean-squared error (`mse`) mean absolute error (`mae`) \"two-class\" binomial deviance (`binomial_deviance`); misclassification error rate `misclassification_error`; area receiver-operating curve (`roc_auc`); `mse` `mse` \"multiclass\" multinomial deviance (`multinomial_deviance`); misclassification error rate `misclassification_error`; area receiver-operating curve (`roc_auc`) computed using Hand-Till method roc_auc; `mse` `mse` \"survival\" negative log2-transformed partial likelihood (`neg_log_partial_likelihood`) Harrel's concordance index (often simply called \"C\"; `concordance_index`)","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_fit_split.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fit a glmnet model and calculate performance metrics using a single rsplit object — tof_fit_split","text":"Harrel Jr, F. E. Lee, K. L. Mark, D. B. (1996) Tutorial biostatistics: multivariable prognostic models: issues developing models, evaluating assumptions adequacy, measuring reducing error, Statistics Medicine, 15, pages 361–387.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_generate_palette.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a color palette using tidytof. — tof_generate_palette","title":"Generate a color palette using tidytof. — tof_generate_palette","text":"function generates color palette based color palette author's favorite pokemon.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_generate_palette.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a color palette using tidytof. — tof_generate_palette","text":"","code":"tof_generate_palette(num_colors)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_generate_palette.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a color palette using tidytof. — tof_generate_palette","text":"num_colors integer specifying number colors like generate.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_generate_palette.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a color palette using tidytof. — tof_generate_palette","text":"character vector hex codes specifying colors palette.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_generate_palette.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a color palette using tidytof. — tof_generate_palette","text":"","code":"tof_generate_palette(num_colors = 5L) #> [1] \"#D86020\" \"#28A8B8\" \"#F89040\" \"#D0D0D0\" \"#903000\""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_mixture.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s optimal mixture (alpha) value — tof_get_model_mixture","title":"Get a `tof_model`'s optimal mixture (alpha) value — tof_get_model_mixture","text":"Get `tof_model`'s optimal mixture (alpha) value","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_mixture.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s optimal mixture (alpha) value — tof_get_model_mixture","text":"","code":"tof_get_model_mixture(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_mixture.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s optimal mixture (alpha) value — tof_get_model_mixture","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_mixture.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s optimal mixture (alpha) value — tof_get_model_mixture","text":"numeric value","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_mixture.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s optimal mixture (alpha) value — tof_get_model_mixture","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_mixture(regression_model) #> [1] 0"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_outcomes.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s outcome variable name(s) — tof_get_model_outcomes","title":"Get a `tof_model`'s outcome variable name(s) — tof_get_model_outcomes","text":"Get `tof_model`'s outcome variable name(s)","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_outcomes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s outcome variable name(s) — tof_get_model_outcomes","text":"","code":"tof_get_model_outcomes(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_outcomes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s outcome variable name(s) — tof_get_model_outcomes","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_outcomes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s outcome variable name(s) — tof_get_model_outcomes","text":"character vector","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_outcomes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s outcome variable name(s) — tof_get_model_outcomes","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_outcomes(regression_model) #> [1] \"outcome\""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_penalty.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s optimal penalty (lambda) value — tof_get_model_penalty","title":"Get a `tof_model`'s optimal penalty (lambda) value — tof_get_model_penalty","text":"Get `tof_model`'s optimal penalty (lambda) value","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_penalty.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s optimal penalty (lambda) value — tof_get_model_penalty","text":"","code":"tof_get_model_penalty(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_penalty.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s optimal penalty (lambda) value — tof_get_model_penalty","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_penalty.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s optimal penalty (lambda) value — tof_get_model_penalty","text":"numeric value","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_penalty.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s optimal penalty (lambda) value — tof_get_model_penalty","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_penalty(regression_model) #> [1] 0.003162278"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_training_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s training data — tof_get_model_training_data","title":"Get a `tof_model`'s training data — tof_get_model_training_data","text":"Get `tof_model`'s training data","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_training_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s training data — tof_get_model_training_data","text":"","code":"tof_get_model_training_data(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_training_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s training data — tof_get_model_training_data","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_training_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s training data — tof_get_model_training_data","text":"tibble (non-preprocessed) training data used fit model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_training_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s training data — tof_get_model_training_data","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_training_data(regression_model) #> # A tibble: 100 × 9 #>    sample   cd45 pstat5   cd34 outcome class  multiclass event time_to_event #>    <chr>   <dbl>  <dbl>  <dbl>   <dbl> <fct>  <fct>      <dbl>         <dbl> #>  1 22     0.947  0.0243 0.157    2.98  class2 class1         0         10.4  #>  2 94     0.228  0.814  0.390    3.59  class2 class3         1          8.30 #>  3 37     0.945  0.393  0.116    5.24  class1 class2         1         13.2  #>  4 69     0.111  0.176  0.208    0.257 class2 class3         1          8.51 #>  5 73     0.268  0.939  0.984    5.30  class1 class3         1         11.5  #>  6 98     0.0237 0.108  0.705    0.715 class2 class3         1          8.20 #>  7 19     0.356  0.354  0.889    0.971 class2 class1         0          9.41 #>  8 49     0.188  0.831  0.456    4.23  class1 class2         1          9.38 #>  9 54     0.325  0.0231 0.0330   1.74  class2 class2         1          9.19 #> 10 76     0.567  0.511  0.152    2.20  class2 class3         1          8.82 #> # ℹ 90 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s model type — tof_get_model_type","title":"Get a `tof_model`'s model type — tof_get_model_type","text":"Get `tof_model`'s model type","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s model type — tof_get_model_type","text":"","code":"tof_get_model_type(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s model type — tof_get_model_type","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s model type — tof_get_model_type","text":"string","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_type.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s model type — tof_get_model_type","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_type(regression_model) #> [1] \"linear\""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_x.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s processed predictor matrix (for glmnet) — tof_get_model_x","title":"Get a `tof_model`'s processed predictor matrix (for glmnet) — tof_get_model_x","text":"Get `tof_model`'s processed predictor matrix (glmnet)","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_x.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s processed predictor matrix (for glmnet) — tof_get_model_x","text":"","code":"tof_get_model_x(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_x.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s processed predictor matrix (for glmnet) — tof_get_model_x","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_x.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s processed predictor matrix (for glmnet) — tof_get_model_x","text":"x value formatted glmnet","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_x.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s processed predictor matrix (for glmnet) — tof_get_model_x","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_x(regression_model) #>                cd45      pstat5         cd34 #>   [1,] -1.068239709  1.52257096  0.056328434 #>   [2,] -0.367999188 -0.56064478 -1.090848160 #>   [3,]  1.695245922  0.65549194 -1.094054555 #>   [4,] -0.931332942 -1.31149237  0.842070036 #>   [5,]  1.009382094 -0.34713385 -0.632263285 #>   [6,]  0.314543427  1.78847807  0.710335168 #>   [7,]  1.228411326  0.03519113  0.459146939 #>   [8,] -0.525728193 -0.87964947  1.314795611 #>   [9,]  1.131592306 -0.48928172 -1.665090265 #>  [10,]  0.683881316  0.66724320  0.007001331 #>  [11,] -0.199224109 -0.80184951  0.121291476 #>  [12,] -1.230614186 -0.56890886 -1.611355255 #>  [13,]  1.696713328 -1.48373156  0.905259328 #>  [14,] -1.484862753 -0.54082380 -0.326379856 #>  [15,] -0.003138423  0.99724543 -1.755776056 #>  [16,] -0.247900689  0.60436158  1.155210470 #>  [17,] -1.388983522  0.74640629 -1.731008286 #>  [18,] -1.175993406 -0.49454343 -1.509302072 #>  [19,]  1.669157570  0.73924385 -0.134404823 #>  [20,] -0.814767780 -0.13573754  0.886593195 #>  [21,] -0.040883853 -0.73219108 -0.951267588 #>  [22,]  1.135502483 -0.98718422 -1.371813902 #>  [23,]  0.091771252  2.15303369 -1.135738236 #>  [24,]  1.203682474  1.95466654  0.733691599 #>  [25,]  1.272452587  1.72170417  0.817377414 #>  [26,] -1.008440051 -0.34702723 -0.193676583 #>  [27,]  0.590000477 -1.51142300 -0.300632441 #>  [28,] -1.512426683  0.90784888 -0.892336976 #>  [29,]  0.255607013 -0.04137989  1.255301281 #>  [30,]  1.142344415 -0.31521313  1.123408329 #>  [31,] -1.533612724  0.63786473  0.139878146 #>  [32,]  1.360797552  0.07581442  0.531790266 #>  [33,] -0.800074851 -0.59434258  1.239513692 #>  [34,]  1.554947660 -0.43984165  0.206254922 #>  [35,] -0.131595726 -1.34989273 -1.101903636 #>  [36,]  1.587971097 -0.23256660 -0.153080565 #>  [37,]  1.612559432 -1.43148389  1.208123072 #>  [38,] -0.259547348  0.38244834 -0.168420956 #>  [39,]  0.862239959 -0.13209431 -1.699293385 #>  [40,] -1.348716689  1.52352406 -1.506477055 #>  [41,]  0.027551438  0.89005031  0.544158192 #>  [42,]  0.325414329 -0.41850716 -0.631072397 #>  [43,]  1.674012055 -0.40477155  1.323901945 #>  [44,] -1.257567975 -1.29642323  0.173887125 #>  [45,] -1.561846431 -1.54832553  0.892911121 #>  [46,]  0.797895130 -0.91722373  0.688245235 #>  [47,]  0.562116776 -1.25702404  1.384430630 #>  [48,]  0.803559025 -1.01422074  1.502716059 #>  [49,] -1.060208652  1.38776456 -1.545845815 #>  [50,]  1.696070490  0.87180996  0.648476752 #>  [51,] -0.119918317  1.71098855 -0.717471131 #>  [52,] -0.894547352 -1.41748404 -0.008328758 #>  [53,] -0.878965334  1.52829640 -0.562084837 #>  [54,] -0.430894923  0.79738028 -0.963411459 #>  [55,] -0.293201472  1.37870588 -0.153930664 #>  [56,]  1.591336359 -0.82280895  0.577212278 #>  [57,]  0.081296334 -1.53466873  0.925606477 #>  [58,] -0.659605240 -1.24862197  0.269090751 #>  [59,] -1.044346584  0.08247921 -1.582058167 #>  [60,]  0.554346677 -0.57027901 -0.464471752 #>  [61,] -1.376642063 -0.45665224  0.745835416 #>  [62,]  0.313222999  0.99628002  0.075092536 #>  [63,]  1.718873599 -0.39036408  0.469850910 #>  [64,] -0.670863111  1.80939521  0.869936039 #>  [65,] -0.851221433 -0.31060722  1.103965635 #>  [66,] -1.291027942 -1.43497806  1.359132131 #>  [67,] -0.477454646  1.56441992 -0.331198916 #>  [68,]  0.813672057  1.22756445  0.820029226 #>  [69,]  1.358549110 -1.45844355  0.411314265 #>  [70,]  0.066894804  0.58637763  1.424380351 #>  [71,]  1.575416438  1.12179993 -1.315177423 #>  [72,]  0.940215083  0.22832883 -0.999652418 #>  [73,]  0.448710835  0.03679179  1.483029317 #>  [74,] -0.461516077 -0.56180149  0.361155374 #>  [75,]  0.327362892 -1.04269106  0.888296166 #>  [76,] -1.217087527  1.83633721 -1.335101163 #>  [77,]  0.466883414 -0.11087098  0.100695215 #>  [78,]  0.485239612  0.29309619 -1.125160522 #>  [79,] -1.379590882 -0.24820802 -1.645131388 #>  [80,] -1.185613290 -0.48925072 -1.051489089 #>  [81,]  0.888031467 -0.25320926 -0.758195095 #>  [82,] -0.336041999  0.13853072  0.136639595 #>  [83,] -0.917844656 -0.22327306 -0.680767327 #>  [84,] -0.284966160 -1.41297104 -1.392900754 #>  [85,] -1.097235138  0.46339608  0.027046145 #>  [86,]  0.907770001  0.49822797  1.431700513 #>  [87,] -0.871803291  1.07750104 -0.668006068 #>  [88,]  0.340856229 -0.39612815  1.538751530 #>  [89,] -0.970819572 -0.32975983  1.050375943 #>  [90,]  0.241407354 -1.06440699  1.040763486 #>  [91,] -0.262088003  0.84891781  1.106293036 #>  [92,] -0.941910268 -1.11536298  0.281501959 #>  [93,]  1.307063104  0.53956636  0.298838078 #>  [94,] -0.513893154  1.48093885 -1.499298878 #>  [95,] -0.578551317 -1.53832715 -1.049402756 #>  [96,]  0.889614744 -0.29972840  1.457284315 #>  [97,] -0.924500907  1.06334779  0.523585908 #>  [98,] -0.462906596  0.46716321  1.435152956 #>  [99,] -0.611567469 -0.66272836 -0.518538980 #> [100,] -1.341855440 -0.06003493 -1.060833625"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_y.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s processed outcome variable matrix (for glmnet) — tof_get_model_y","title":"Get a `tof_model`'s processed outcome variable matrix (for glmnet) — tof_get_model_y","text":"Get `tof_model`'s processed outcome variable matrix (glmnet)","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_y.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s processed outcome variable matrix (for glmnet) — tof_get_model_y","text":"","code":"tof_get_model_y(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_y.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s processed outcome variable matrix (for glmnet) — tof_get_model_y","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_y.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s processed outcome variable matrix (for glmnet) — tof_get_model_y","text":"y value formatted glmnet","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_y.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s processed outcome variable matrix (for glmnet) — tof_get_model_y","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_y(regression_model) #>   [1]  5.20946594  5.42836829  3.95623965  3.59073268  5.48758141  6.25696609 #>   [7]  0.68501159  4.51654021  5.32706072  2.61775916  3.18955183  5.05441494 #>  [13]  2.96498377  3.09820467  1.68461908  2.41482873  4.77183503  1.87912342 #>  [19]  3.36575353  3.89560335  1.33887122  4.28392192  3.64449924  2.86787947 #>  [25]  2.46848516  4.48657588  2.64062460  4.41771748  5.10134788  1.62079208 #>  [31]  6.08523052  1.73710748  3.96338766  0.84302172  4.04191896  3.13520015 #>  [37]  4.76652265 -0.05381758  3.99616702  0.87475094  5.30644110  3.48261841 #>  [43]  1.25304713  6.73519395  6.39895330  0.15831037  1.25793357 -0.18280475 #>  [49]  3.53512142  4.24077283  5.87305297  2.55613998  3.45394321  2.11854779 #>  [55]  2.06680995  4.98486052  6.91152156  4.85388609  2.50421055  2.57143522 #>  [61]  3.75295440  4.24222360  2.81700921  2.03989008  2.32734218  3.34953866 #>  [67]  6.51759031  6.80313896  3.53964167  2.96208762  2.69076707  4.63712593 #>  [73]  4.59329155  6.57512636  2.45452049  3.49334112  2.34970209  0.52109022 #>  [79]  5.62947610  0.62779670  4.25650153  2.99410975  5.01389887  4.00866320 #>  [85]  2.85566505  5.56982649  4.09130720  5.44405689  5.66005501  2.32542027 #>  [91]  5.97370250  4.37342474  1.27892107  1.30763943  1.09434825  5.69765290 #>  [97]  1.81481236  3.05526149  2.77347033  4.41842139"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_panel.html","id":null,"dir":"Reference","previous_headings":"","what":"Get panel information from a tof_tibble — tof_get_panel","title":"Get panel information from a tof_tibble — tof_get_panel","text":"Get panel information tof_tibble","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_panel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get panel information from a tof_tibble — tof_get_panel","text":"","code":"tof_get_panel(tof_tibble)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_panel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get panel information from a tof_tibble — tof_get_panel","text":"tof_tibble `tof_tbl`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_panel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get panel information from a tof_tibble — tof_get_panel","text":"tibble containing information CyTOF panel used data acquisition data contained `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_panel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get panel information from a tof_tibble — tof_get_panel","text":"","code":"input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]] tof_tibble <- tof_read_data(input_file) tof_get_panel(tof_tibble) #> # A tibble: 59 × 2 #>    metals       antigens     #>    <chr>        <chr>        #>  1 Time         Time         #>  2 Event_length Event_length #>  3 Y89          CD45         #>  4 Pd102        empty        #>  5 Pd104        empty        #>  6 Pd105        empty        #>  7 Pd106        empty        #>  8 Pd108        empty        #>  9 Pd110        empty        #> 10 In113        CD61         #> # ℹ 49 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_is_numeric.html","id":null,"dir":"Reference","previous_headings":"","what":"Find if a vector is numeric — tof_is_numeric","title":"Find if a vector is numeric — tof_is_numeric","text":"function takes input vector `.vec` checks either integer double (.e. type vector might encode high-dimensional cytometry measurements).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_is_numeric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find if a vector is numeric — tof_is_numeric","text":"","code":"tof_is_numeric(.vec)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_is_numeric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find if a vector is numeric — tof_is_numeric","text":".vec vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_is_numeric.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find if a vector is numeric — tof_is_numeric","text":"boolean value indicating .vec type integer double.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_knn_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate cells' local densities using K-nearest-neighbor density estimation — tof_knn_density","title":"Estimate cells' local densities using K-nearest-neighbor density estimation — tof_knn_density","text":"function uses distances cell K nearest neighbors estimate local density cell `tof_tbl` `tibble` containing high-dimensional cytometry data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_knn_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate cells' local densities using K-nearest-neighbor density estimation — tof_knn_density","text":"","code":"tof_knn_density(   tof_tibble,   distance_cols = where(tof_is_numeric),   num_neighbors = min(15L, nrow(tof_tibble)),   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\"),   estimation_method = c(\"mean_distance\", \"sum_distance\"),   normalize = TRUE,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_knn_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate cells' local densities using K-nearest-neighbor density estimation — tof_knn_density","text":"tof_tibble `tof_tbl` `tibble`. distance_cols Unquoted names columns `tof_tibble` use calculating cell--cell distances local density estimation cell. Defaults numeric columns `tof_tibble`. num_neighbors integer indicating number nearest neighbors use estimating local density cell. Defaults minimum 15 number rows `tof_tibble`. distance_function string indicating distance function use calculating cell--cell distances local density estimation. Options include \"euclidean\" (default) \"cosine\". estimation_method string indicating relative density cell calculated distances k nearest neighbors. Options \"mean_distance\" (default; estimates relative density cell's neighborhood taking negative average distances nearest neighbors) \"sum_distance\" (estimates relative density cell's neighborhood taking negative sum distances nearest neighbors). normalize boolean value indicating vector local density estimates normalized values 0 1. Defaults TRUE. ... Additional optional arguments pass tof_find_knn.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_knn_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate cells' local densities using K-nearest-neighbor density estimation — tof_knn_density","text":"tibble single column named \".knn_density\" containing local density estimates input cell `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_log_rank_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"Compute log-rank test p-value difference two survival curves obtained splitting dataset \"low\" \"high\" risk group using given relative-risk threshold.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_log_rank_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"","code":"tof_log_rank_test(   input_data,   relative_risk_col,   time_col,   event_col,   threshold )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_log_rank_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"input_data tbl_df data.frame observation row. relative_risk_col unquote column name indicating column contains relative-risk estimates observation. time_col unquoted column name indicating column contains true time--event information observation. event_col unquoted column name indicating column contains outcome (event censorship). Must binary column - values  either 0 1 (1 indicating adverse event 0 indicating  censorship) FALSE TRUE (TRUE indicating adverse event FALSE indicating censorship). threshold numeric value indicating relative-risk threshold used split observations low- high-risk groups.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_log_rank_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"numeric value <1, p-value log-rank test.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_log_rank_test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_knn_graph.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — tof_make_knn_graph","title":"Title — tof_make_knn_graph","text":"Title","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_knn_graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — tof_make_knn_graph","text":"","code":"tof_make_knn_graph(   tof_tibble,   knn_cols,   num_neighbors,   distance_function = c(\"euclidean\", \"cosine\"),   graph_type = c(\"weighted\", \"unweighted\"),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_knn_graph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — tof_make_knn_graph","text":"tof_tibble tibble tof_tbl. knn_cols Unquoted column names indicating columns tof_tibble used KNN calculation. num_neighbors integer number neighbors find cell ( including ). distance_function string indicating distance function use nearest-neighbor calculation. Options include \"euclidean\" (default) \"cosine\" distances. graph_type string indicating graph's edges weights (\"weighted\"; default) (\"unweighted\"). ... Optional additional arguments pass tof_find_knn","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_knn_graph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — tof_make_knn_graph","text":"tbl_graph.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_knn_graph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title — tof_make_knn_graph","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_roc_curve.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute a receiver-operating curve (ROC) for a two-class or multiclass dataset — tof_make_roc_curve","title":"Compute a receiver-operating curve (ROC) for a two-class or multiclass dataset — tof_make_roc_curve","text":"Compute receiver-operating curve (ROC) two-class multiclass dataset","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_roc_curve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute a receiver-operating curve (ROC) for a two-class or multiclass dataset — tof_make_roc_curve","text":"","code":"tof_make_roc_curve(input_data, truth_col, prob_cols)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_roc_curve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute a receiver-operating curve (ROC) for a two-class or multiclass dataset — tof_make_roc_curve","text":"input_data tof_tbl, tbl_df, data.frame row observation. truth_col unquoted column name indicating column `input_data` contains true class labels observation. Must factor. prob_cols Unquoted column names indicating columns `input_data` contain probability estimates class `truth_col`. columns must specified order factor levels `truth_col`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_roc_curve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute a receiver-operating curve (ROC) for a two-class or multiclass dataset — tof_make_roc_curve","text":"tibble can used plot ROC classification task. candidate probability threshold, following reported: specificity, sensitivity, true-positive rate (tpr), false-positive rate (fpr).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_roc_curve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute a receiver-operating curve (ROC) for a two-class or multiclass dataset — tof_make_roc_curve","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             )     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a logistic regression classifier log_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = class,         model_type = \"two-class\"     )  # make predictions predictions <-     tof_predict(         log_model,         new_data = feature_tibble,         prediction_type = \"response\"     ) prediction_tibble <-     dplyr::tibble(         truth = feature_tibble$class,         prediction = predictions$.pred     )  # make ROC curve tof_make_roc_curve(     input_data = prediction_tibble,     truth_col = truth,     prob_cols = prediction )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster.html","id":null,"dir":"Reference","previous_headings":"","what":"Metacluster clustered CyTOF data. — tof_metacluster","title":"Metacluster clustered CyTOF data. — tof_metacluster","text":"function wrapper around tidytof's tof_metacluster_* function family. performs metaclustering CyTOF data using user-specified method (5 choices) method's corresponding input parameters.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metacluster clustered CyTOF data. — tof_metacluster","text":"","code":"tof_metacluster(   tof_tibble,   cluster_col,   metacluster_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   ...,   augment = TRUE,   method = c(\"consensus\", \"hierarchical\", \"kmeans\", \"phenograph\", \"flowsom\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metacluster clustered CyTOF data. — tof_metacluster","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. metacluster_cols Unquoted column names indicating columns `tof_tibble` use computing metaclusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster metaclustering. function used compute summary statistic input cluster `cluster_col` across columns specified `metacluster_cols`, resulting vector (one cluster) used input metaclustering. Defaults median. ... Additional arguments pass `tof_metacluster_*` function family member corresponding chosen `method`. augment boolean value indicating output column-bind metacluster ids cell new column `tof_tibble` (TRUE; default) single-column tibble including metacluster ids returned (FALSE). method string indicating clustering method used. Valid values include \"consensus\", \"hierarchical\", \"kmeans\", \"phenograph\", \"flowsom\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metacluster clustered CyTOF data. — tof_metacluster","text":"`tof_tbl` `tibble` augment = FALSE, single column encoding metacluster ids cell `tof_tibble`. augment = TRUE, ncol(tof_tibble) + 1 columns: (unaltered) columns `tof_tibble` plus additional column encoding metacluster ids.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metacluster clustered CyTOF data. — tof_metacluster","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  tof_metacluster(     tof_tibble = sim_data,     cluster_col = cluster_id,     clustering_algorithm = \"consensus\",     method = \"flowsom\" ) #> # A tibble: 1,000 × 6 #>       cd45    cd38    cd34    cd19 cluster_id .flowsom_metacluster #>      <dbl>   <dbl>   <dbl>   <dbl> <chr>      <chr>                #>  1 -0.0922  0.645   0.252   0.804  z          6                    #>  2 -0.763  -0.0956  0.101  -0.820  j          1                    #>  3 -0.0487  2.12    1.05   -0.690  i          1                    #>  4  0.0728  0.844  -2.45    0.0803 u          1                    #>  5 -1.40   -2.20    0.0921  0.105  t          1                    #>  6 -2.45   -0.666   1.18   -0.603  o          1                    #>  7 -2.05    1.52    0.610  -0.812  y          3                    #>  8  0.553   0.579  -2.46    0.625  w          1                    #>  9  1.33   -0.0281 -0.289   0.972  g          3                    #> 10 -0.0416  0.771  -0.239   1.63   m          2                    #> # ℹ 990 more rows  tof_metacluster(     tof_tibble = sim_data,     cluster_col = cluster_id,     method = \"phenograph\" ) #> # A tibble: 1,000 × 6 #>       cd45    cd38    cd34    cd19 cluster_id .phenograph_metacluster #>      <dbl>   <dbl>   <dbl>   <dbl> <chr>      <chr>                   #>  1 -0.0922  0.645   0.252   0.804  z          2                       #>  2 -0.763  -0.0956  0.101  -0.820  j          1                       #>  3 -0.0487  2.12    1.05   -0.690  i          3                       #>  4  0.0728  0.844  -2.45    0.0803 u          1                       #>  5 -1.40   -2.20    0.0921  0.105  t          1                       #>  6 -2.45   -0.666   1.18   -0.603  o          3                       #>  7 -2.05    1.52    0.610  -0.812  y          2                       #>  8  0.553   0.579  -2.46    0.625  w          5                       #>  9  1.33   -0.0281 -0.289   0.972  g          2                       #> 10 -0.0416  0.771  -0.239   1.63   m          4                       #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_consensus.html","id":null,"dir":"Reference","previous_headings":"","what":"Metacluster clustered CyTOF data using consensus clustering — tof_metacluster_consensus","title":"Metacluster clustered CyTOF data using consensus clustering — tof_metacluster_consensus","text":"function performs consensus metaclustering `tof_tbl` containing CyTOF data using user-specified selection input variables/CyTOF measurements number desired metaclusters. See ConsensusClusterPlus additional details.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_consensus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metacluster clustered CyTOF data using consensus clustering — tof_metacluster_consensus","text":"","code":"tof_metacluster_consensus(   tof_tibble,   cluster_col,   metacluster_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   num_metaclusters = 10L,   proportion_clusters = 0.9,   proportion_features = 1,   num_reps = 20L,   clustering_algorithm = c(\"hierarchical\", \"pam\", \"kmeans\"),   distance_function = c(\"euclidean\", \"minkowski\", \"pearson\", \"spearman\", \"maximum\",     \"binary\", \"canberra\"),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_consensus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metacluster clustered CyTOF data using consensus clustering — tof_metacluster_consensus","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. metacluster_cols Unquoted column names indicating columns `tof_tibble` use computing metaclusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster metaclustering. function used compute summary statistic input cluster `cluster_col` across columns specified `metacluster_cols`, resulting vector (one cluster) used input metaclustering. Defaults median. num_metaclusters integer indicating number clusters returned. Defaults 10. proportion_clusters numeric value 0 1 indicating proportion clusters subsample (total number clusters `cluster_col`) iteration consensus clustering. Defaults 0.9 proportion_features numeric value 0 1 indicating proportion features (.e. proportion columns specified `metacluster_cols`) subsample iteration consensus clustering. Defaults 1 (features included). num_reps integer indicating many subsampled replicates run consensus clustering. Defaults 20. clustering_algorithm string indicating clustering algorithm ConsensusClusterPlus use metacluster subsampled clusters resampling. Options \"hierarchical\" (default), \"pam\" (partitioning around medoids), \"kmeans\". distance_function string indicating distance function used compute distances clusters consensus clustering. Options \"euclidean\" (default), \"manhattan\", \"minkowski\", \"pearson\", \"spearman\", \"maximum\", \"binary\", \"canberra\". See ConsensusClusterPlus. ... Optional additional arguments pass ConsensusClusterPlus.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_consensus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metacluster clustered CyTOF data using consensus clustering — tof_metacluster_consensus","text":"tibble single column (`.consensus_metacluster`) number rows input `tof_tibble`. entry column indicates metacluster label assigned row `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_consensus.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metacluster clustered CyTOF data using consensus clustering — tof_metacluster_consensus","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  tof_metacluster_consensus(tof_tibble = sim_data, cluster_col = cluster_id) #> # A tibble: 1,000 × 1 #>    .consensus_metacluster #>    <chr>                  #>  1 1                      #>  2 7                      #>  3 2                      #>  4 3                      #>  5 2                      #>  6 1                      #>  7 3                      #>  8 1                      #>  9 4                      #> 10 3                      #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_flowsom.html","id":null,"dir":"Reference","previous_headings":"","what":"Metacluster clustered CyTOF data using FlowSOM's built-in metaclustering algorithm — tof_metacluster_flowsom","title":"Metacluster clustered CyTOF data using FlowSOM's built-in metaclustering algorithm — tof_metacluster_flowsom","text":"function performs metaclustering `tof_tbl` containing CyTOF data using user-specified selection input variables/CyTOF measurements number desired metaclusters. takes advantage FlowSOM package's built-functionality automatically detecting number metaclusters can use several strategies adapted FlowSOM team: consensus metaclustering, hierarchical metaclustering, k-means metaclustering, metaclustering using FlowSOM algorithm . See MetaClustering additional details.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_flowsom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metacluster clustered CyTOF data using FlowSOM's built-in metaclustering algorithm — tof_metacluster_flowsom","text":"","code":"tof_metacluster_flowsom(   tof_tibble,   cluster_col,   metacluster_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   num_metaclusters = 10L,   clustering_algorithm = c(\"consensus\", \"hierarchical\", \"kmeans\", \"som\"),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_flowsom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metacluster clustered CyTOF data using FlowSOM's built-in metaclustering algorithm — tof_metacluster_flowsom","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. metacluster_cols Unquoted column names indicating columns `tof_tibble` use computing metaclusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster metaclustering. function used compute summary statistic input cluster `cluster_col` across columns specified `metacluster_cols`, resulting vector (one cluster) used input metaclustering. Defaults median. num_metaclusters integer indicating maximum number clusters returned. Defaults 10. Note function, output may provide small number metaclusters requested. MetaClustering uses \"Elbow method\" automatically detect optimal number metaclusters. clustering_algorithm string indicating clustering algorithm MetaClustering use perform metaclustering. Options \"consensus\" (default), \"hierarchical\", \"kmeans\", \"som\" (.e. self-organizing map; FlowSOM algorithm ). ... Optional additional arguments pass MetaClustering.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_flowsom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metacluster clustered CyTOF data using FlowSOM's built-in metaclustering algorithm — tof_metacluster_flowsom","text":"tibble single column (`.flowsom_metacluster`) number rows input `tof_tibble`. entry column indicates metacluster label assigned row `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_flowsom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metacluster clustered CyTOF data using FlowSOM's built-in metaclustering algorithm — tof_metacluster_flowsom","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  tof_metacluster_flowsom(     tof_tibble = sim_data,     cluster_col = cluster_id,     clustering_algorithm = \"consensus\" ) #> # A tibble: 1,000 × 1 #>    .flowsom_metacluster #>    <chr>                #>  1 2                    #>  2 2                    #>  3 2                    #>  4 2                    #>  5 4                    #>  6 2                    #>  7 2                    #>  8 2                    #>  9 2                    #> 10 6                    #> # ℹ 990 more rows  tof_metacluster_flowsom(     tof_tibble = sim_data,     cluster_col = cluster_id,     clustering_algorithm = \"som\" ) #> # A tibble: 1,000 × 1 #>    .flowsom_metacluster #>    <chr>                #>  1 2                    #>  2 3                    #>  3 2                    #>  4 3                    #>  5 2                    #>  6 4                    #>  7 4                    #>  8 4                    #>  9 4                    #> 10 1                    #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_hierarchical.html","id":null,"dir":"Reference","previous_headings":"","what":"Metacluster clustered CyTOF data using hierarchical agglomerative clustering — tof_metacluster_hierarchical","title":"Metacluster clustered CyTOF data using hierarchical agglomerative clustering — tof_metacluster_hierarchical","text":"function performs hierarchical metaclustering `tof_tbl` containing CyTOF data using user-specified selection input variables/CyTOF measurements number desired metaclusters. See hclust.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_hierarchical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metacluster clustered CyTOF data using hierarchical agglomerative clustering — tof_metacluster_hierarchical","text":"","code":"tof_metacluster_hierarchical(   tof_tibble,   cluster_col,   metacluster_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   num_metaclusters = 10L,   distance_function = c(\"euclidean\", \"manhattan\", \"minkowski\", \"maximum\", \"canberra\",     \"binary\"),   agglomeration_method = c(\"complete\", \"single\", \"average\", \"median\", \"centroid\",     \"ward.D\", \"ward.D2\", \"mcquitty\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_hierarchical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metacluster clustered CyTOF data using hierarchical agglomerative clustering — tof_metacluster_hierarchical","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. metacluster_cols Unquoted column names indicating columns `tof_tibble` use computing metaclusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster metaclustering. function used compute summary statistic input cluster `cluster_col` across columns specified `metacluster_cols`, resulting vector (one cluster) used input metaclustering. Defaults median. num_metaclusters integer indicating number clusters returned. Defaults 10. distance_function string indicating distance function used compute distances clusters hierarchical metaclustering. Options \"euclidean\" (default), \"manhattan\", \"minkowski\", \"maximum\", \"canberra\", \"binary\". See dist additional details. agglomeration_method string indicating agglomeration algorithm used hierarchical cluster combination. Options \"complete\" (default), \"single\", \"average\", \"median\", \"centroid\", \"ward.D\", \"ward.D2\", \"mcquitty\". See hclust details.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_hierarchical.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metacluster clustered CyTOF data using hierarchical agglomerative clustering — tof_metacluster_hierarchical","text":"tibble single column (`.hierarchical_metacluster`) number rows input `tof_tibble`. entry column indicates metacluster label assigned row `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_hierarchical.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metacluster clustered CyTOF data using hierarchical agglomerative clustering — tof_metacluster_hierarchical","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  tof_metacluster_hierarchical(tof_tibble = sim_data, cluster_col = cluster_id) #> # A tibble: 1,000 × 1 #>    .hierarchical_metacluster #>    <chr>                     #>  1 9                         #>  2 6                         #>  3 4                         #>  4 1                         #>  5 2                         #>  6 3                         #>  7 10                        #>  8 10                        #>  9 5                         #> 10 10                        #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_kmeans.html","id":null,"dir":"Reference","previous_headings":"","what":"Metacluster clustered CyTOF data using k-means clustering — tof_metacluster_kmeans","title":"Metacluster clustered CyTOF data using k-means clustering — tof_metacluster_kmeans","text":"function performs k-means metaclustering `tof_tbl` containing CyTOF data using user-specified selection input variables/CyTOF measurements number desired metaclusters. See hclust.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_kmeans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metacluster clustered CyTOF data using k-means clustering — tof_metacluster_kmeans","text":"","code":"tof_metacluster_kmeans(   tof_tibble,   cluster_col,   metacluster_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   num_metaclusters = 10L,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_kmeans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metacluster clustered CyTOF data using k-means clustering — tof_metacluster_kmeans","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. metacluster_cols Unquoted column names indicating columns `tof_tibble` use computing metaclusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster metaclustering. function used compute summary statistic input cluster `cluster_col` across columns specified `metacluster_cols`, resulting vector (one cluster) used input metaclustering. Defaults median. num_metaclusters integer indicating number clusters returned. Defaults 10. ... Optional additional method specifications pass tof_cluster_kmeans.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_kmeans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metacluster clustered CyTOF data using k-means clustering — tof_metacluster_kmeans","text":"tibble single column (`.kmeans_metacluster`) number rows input `tof_tibble`. entry column indicates metacluster label assigned row `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_kmeans.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metacluster clustered CyTOF data using k-means clustering — tof_metacluster_kmeans","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  tof_metacluster_kmeans(tof_tibble = sim_data, cluster_col = cluster_id) #> # A tibble: 1,000 × 1 #>    .kmeans_metacluster #>    <chr>               #>  1 2                   #>  2 4                   #>  3 6                   #>  4 2                   #>  5 6                   #>  6 1                   #>  7 1                   #>  8 1                   #>  9 5                   #> 10 4                   #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_phenograph.html","id":null,"dir":"Reference","previous_headings":"","what":"Metacluster clustered CyTOF data using PhenoGraph clustering — tof_metacluster_phenograph","title":"Metacluster clustered CyTOF data using PhenoGraph clustering — tof_metacluster_phenograph","text":"function performs PhenoGraph metaclustering `tof_tbl` containing CyTOF data using user-specified selection input variables/CyTOF measurements. number metaclusters automatically detected PhenoGraph algorithm. See tof_cluster_phenograph.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_phenograph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metacluster clustered CyTOF data using PhenoGraph clustering — tof_metacluster_phenograph","text":"","code":"tof_metacluster_phenograph(   tof_tibble,   cluster_col,   metacluster_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   num_neighbors = 5L,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_phenograph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metacluster clustered CyTOF data using PhenoGraph clustering — tof_metacluster_phenograph","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. metacluster_cols Unquoted column names indicating columns `tof_tibble` use computing metaclusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster metaclustering. function used compute summary statistic input cluster `cluster_col` across columns specified `metacluster_cols`, resulting vector (one cluster) used input metaclustering. Defaults median. num_neighbors integer indicating number neighbors use constructing PhenoGraph's k-nearest-neighbor graph. Smaller values emphasize local graph structure; larger values emphasize global graph structure (add time computation). Defaults 5. ... Optional additional method specifications pass tof_cluster_phenograph.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_phenograph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metacluster clustered CyTOF data using PhenoGraph clustering — tof_metacluster_phenograph","text":"tibble single column (`.phenograph_metacluster`) number rows input `tof_tibble`. entry column indicates metacluster label assigned row `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_phenograph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metacluster clustered CyTOF data using PhenoGraph clustering — tof_metacluster_phenograph","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  tof_metacluster_phenograph(tof_tibble = sim_data, cluster_col = cluster_id) #> # A tibble: 1,000 × 1 #>    .phenograph_metacluster #>    <chr>                   #>  1 1                       #>  2 2                       #>  3 1                       #>  4 1                       #>  5 3                       #>  6 2                       #>  7 2                       #>  8 2                       #>  9 2                       #> 10 4                       #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot marker expression density plots — tof_plot_cells_density","title":"Plot marker expression density plots — tof_plot_cells_density","text":"function plots marker expression density plots user-specified column tof_tbl. Optionally, cells can grouped plot multiple vertically-arranged density plots","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot marker expression density plots — tof_plot_cells_density","text":"","code":"tof_plot_cells_density(   tof_tibble,   marker_col,   group_col,   num_points = 512,   theme = ggplot2::theme_bw(),   use_ggridges = FALSE,   scale = 1,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot marker expression density plots — tof_plot_cells_density","text":"tof_tibble `tof_tbl` `tibble`. marker_col unquoted column name representing column `tof_tibble` (.e. CyTOF protein measurement) included feature extraction calculation. group_col Unquoted column names representing column `tof_tibble` used break rows `tof_tibble` subgroups plotted separate histograms. Defaults plotting without subgroups. num_points number points along full range `marker_col` density calculated theme ggplot2 theme plot. Defaults theme_bw use_ggridges boolean value indicting geom_ridgeline used plot overlain histograms. Defaults FALSE. TRUE, ggridges package must installed. scale Use set `scale` argument geom_ridgeline, controls far apart (vertically) density plots arranged along y-axis. Defaults 1. ... Additional optional arguments send geom_ridgeline.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot marker expression density plots — tof_plot_cells_density","text":"ggplot object","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot marker expression density plots — tof_plot_cells_density","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(c(\"a\", \"b\"), size = 1000, replace = TRUE)     )  density_plot <-     tof_plot_cells_density(         tof_tibble = sim_data,         marker_col = cd45,         group_col = cluster_id     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_embedding.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot scatterplots of single-cell data using low-dimensional feature embeddings — tof_plot_cells_embedding","title":"Plot scatterplots of single-cell data using low-dimensional feature embeddings — tof_plot_cells_embedding","text":"function makes scatterplots using single-cell data embedded low-dimensional space (generated tof_reduce_dimensions, point colored using user-specified variable.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_embedding.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot scatterplots of single-cell data using low-dimensional feature embeddings — tof_plot_cells_embedding","text":"","code":"tof_plot_cells_embedding(   tof_tibble,   embedding_cols,   color_col,   facet_cols,   compute_embedding_cols = where(tof_is_numeric),   embedding_method = c(\"pca\", \"tsne\", \"umap\"),   embedding_args = list(),   theme = ggplot2::theme_bw(),   ...,   method = c(\"ggplot2\", \"scattermore\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_embedding.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot scatterplots of single-cell data using low-dimensional feature embeddings — tof_plot_cells_embedding","text":"tof_tibble `tof_tbl` `tibble`. embedding_cols Unquoted column names indicating columns `tof_tibble` used x y axes scatterplot. Supports tidyselect helpers. Must select exactly 2 columns. provided, feature embedding can computed scratch using method provided using `embedding_method` argument tof_reduce_dimensions arguments passed `embedding_args`. color_col unquoted column name specifying column `tof_tibble` used color point scatterplot. facet_cols unquoted column name specifying column `tof_tibble` used break scatterplot facets using facet_wrap. compute_embedding_cols Unquoted column names indicating columns 'tof_tibble' use computing embeddings method specified `embedding_method`. Defaults numeric columns 'tof_tibble'. Supports tidyselect helpers. embedding_method string indicating method used feature embedding (`embedding_cols` provided). Options (passed tof_reduce_dimensions) \"pca\" (default), \"tsne\", \"umap\". embedding_args Optional additional arguments pass tof_reduce_dimensions. example, `method = \"tsne\"`, might include `num_comp`, `perplexity`, `theta`. theme ggplot2 theme apply scatterplot. Defaults theme_bw. ... Optional additional arguments pass tof_plot_cells_scatter. method string indicating plotting engine used. Valid values include \"ggplot2\" (default) \"scattermore\" (recommended 100K cells plotted). Note method = \"scattermore\" requires scattermore package installed.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_embedding.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot scatterplots of single-cell data using low-dimensional feature embeddings — tof_plot_cells_embedding","text":"ggplot object.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_embedding.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot scatterplots of single-cell data using low-dimensional feature embeddings — tof_plot_cells_embedding","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = c(rnorm(n = 500), rnorm(n = 500, mean = 2)),         cd34 = c(rnorm(n = 500), rnorm(n = 500, mean = 4)),         cd19 = rnorm(n = 1000),         cluster_id = c(rep(\"a\", 500), rep(\"b\", 500))     )  # embed with pca pca_plot <-     tof_plot_cells_embedding(         tof_tibble = sim_data,         color_col = cd38,         embedding_method = \"pca\",         compute_embedding_cols = starts_with(\"cd\")     )  # embed with tsne tsne_plot <-     tof_plot_cells_embedding(         tof_tibble = sim_data,         color_col = cluster_id,         embedding_method = \"tsne\",         compute_embedding_cols = starts_with(\"cd\")     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_layout.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot force-directed layouts of single-cell data — tof_plot_cells_layout","title":"Plot force-directed layouts of single-cell data — tof_plot_cells_layout","text":"function makes force-directed layouts using single-cell data embedded 2-dimensional space representing k-nearest-neighbor graph constructed using cell--cell similarities. node force-directed layout represents single cell colored using user-specified variable.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_layout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot force-directed layouts of single-cell data — tof_plot_cells_layout","text":"","code":"tof_plot_cells_layout(   tof_tibble,   knn_cols = where(tof_is_numeric),   color_col,   facet_cols,   num_neighbors = 5,   graph_type = c(\"weighted\", \"unweighted\"),   graph_layout = \"fr\",   distance_function = c(\"euclidean\", \"cosine\"),   edge_alpha = 0.25,   node_size = 2,   theme = ggplot2::theme_void(),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_layout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot force-directed layouts of single-cell data — tof_plot_cells_layout","text":"tof_tibble `tof_tbl` `tibble`. knn_cols Unquoted column names indicating columns `tof_tibble` used compute cell--cell distances used construct k-nearest-neighbor graph. Supports tidyselect helpers. Defaults numeric columns. color_col Unquoted column name indicating column `tof_tibble` used color nodes force-directed layout. facet_cols Unquoted column names indicating columns `tof_tibble` used separate nodes different force-directed layouts. num_neighbors integer specifying many neighbors used construct k-nearest neighbor graph. graph_type string specifying k-nearest neighbor graph \"weighted\" (default) \"unweighted\". graph_layout string specifying algorithm used compute force-directed layout. Passed ggraph. Defaults \"fr\", Fruchterman-Reingold algorithm. examples include \"nicely\", \"gem\", \"kk\", many others. See layout_tbl_graph_igraph examples. distance_function string indicating distance function use computing cell--cell distances. Valid options include \"euclidean\" (default) \"cosine\". edge_alpha numeric value 0 1 specifying transparency edges drawn force-directed layout. Defaults 0.25. node_size numeric value specifying size nodes force-directed layout. Defaults 2. theme ggplot2 theme apply force-directed layout. Defaults theme_void ... hnsw_knn","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_layout.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot force-directed layouts of single-cell data — tof_plot_cells_layout","text":"ggraph/ggplot object.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_layout.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot force-directed layouts of single-cell data — tof_plot_cells_layout","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = c(rnorm(n = 500), rnorm(n = 500, mean = 2)),         cd34 = c(rnorm(n = 500), rnorm(n = 500, mean = 4)),         cd19 = rnorm(n = 1000),         cluster_id = c(rep(\"a\", 500), rep(\"b\", 500))     )  # make a layout colored by a marker layout_cd38 <-     tof_plot_cells_layout(         tof_tibble = sim_data,         color_col = cd38     )  # make a layout colored by cluster id layout_cluster <-     tof_plot_cells_layout(         tof_tibble = sim_data,         color_col = cluster_id,     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_scatter.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot scatterplots of single-cell data. — tof_plot_cells_scatter","title":"Plot scatterplots of single-cell data. — tof_plot_cells_scatter","text":"function makes scatterplots single-cell data using user-specified x- y-axes. Additionally, point scatterplot can colored using user-specified variable.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_scatter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot scatterplots of single-cell data. — tof_plot_cells_scatter","text":"","code":"tof_plot_cells_scatter(   tof_tibble,   x_col,   y_col,   color_col,   facet_cols,   theme = ggplot2::theme_bw(),   ...,   method = c(\"ggplot2\", \"scattermore\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_scatter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot scatterplots of single-cell data. — tof_plot_cells_scatter","text":"tof_tibble `tof_tbl` `tibble`. x_col unquoted column name specifying column `tof_tibble` used x-axis. y_col unquoted column name specifying column `tof_tibble` used y-axis. color_col unquoted column name specifying column `tof_tibble` used color point scatterplot. facet_cols unquoted column name specifying column `tof_tibble` used break scatterplot facets using facet_wrap. theme ggplot2 theme apply scatterplot. Defaults theme_bw. ... Optional additional arguments pass geom_point method = \"ggplot2\" geom_scattermore method = \"scattermore\". method string indicating plotting engine used. Valid values include \"ggplot2\" (default) \"scattermore\" (recommended 100K cells plotted). Note method = \"scattermore\" requires scattermore package installed.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_scatter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot scatterplots of single-cell data. — tof_plot_cells_scatter","text":"ggplot object.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_scatter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot scatterplots of single-cell data. — tof_plot_cells_scatter","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = c(rnorm(n = 500), rnorm(n = 500, mean = 2)),         cd34 = c(rnorm(n = 500), rnorm(n = 500, mean = 4)),         cd19 = rnorm(n = 1000),         cluster_id = c(rep(\"a\", 500), rep(\"b\", 500))     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a heatmap summarizing cluster marker expression patterns in CyTOF data — tof_plot_clusters_heatmap","title":"Make a heatmap summarizing cluster marker expression patterns in CyTOF data — tof_plot_clusters_heatmap","text":"function makes heatmap cluster--cluster marker expression patterns single-cell data. Markers plotted along horizontal (x-) axis heatmap cluster IDs plotted along vertical (y-) axis heatmap.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a heatmap summarizing cluster marker expression patterns in CyTOF data — tof_plot_clusters_heatmap","text":"","code":"tof_plot_clusters_heatmap(   tof_tibble,   cluster_col,   marker_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   scale_markerwise = FALSE,   scale_clusterwise = FALSE,   cluster_markers = TRUE,   cluster_clusters = TRUE,   line_width = 0.25,   theme = ggplot2::theme_minimal() )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a heatmap summarizing cluster marker expression patterns in CyTOF data — tof_plot_clusters_heatmap","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names indicating column `tof_tibble` interpreted markers plotted along x-axis heatmap. Supports tidyselect helpers. central_tendency_function function use computing measure central tendency aggregated cluster cluster_col. Defaults median. scale_markerwise boolean value indicating heatmap rescale columns heatmap maximum value marker 1 minimum value 0. Defaults FALSE. scale_clusterwise boolean value indicating heatmap rescale rows heatmap maximum value cluster 1 minimum value 0. Defaults FALSE. cluster_markers boolean value indicating heatmap order columns (.e. markers) using hierarchical clustering. Defaults TRUE. cluster_clusters boolean value indicating heatmap order rows (.e. clusters) using hierarchical clustering. Defaults TRUE. line_width numeric value indicating thick lines separating tiles heatmap . Defaults 0.25. theme ggplot2 theme apply heatmap. Defaults theme_minimal","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a heatmap summarizing cluster marker expression patterns in CyTOF data — tof_plot_clusters_heatmap","text":"ggplot object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_heatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a heatmap summarizing cluster marker expression patterns in CyTOF data — tof_plot_clusters_heatmap","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  heatmap <-     tof_plot_clusters_heatmap(         tof_tibble = sim_data,         cluster_col = cluster_id     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_mst.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize clusters in CyTOF data using a minimum spanning tree (MST). — tof_plot_clusters_mst","title":"Visualize clusters in CyTOF data using a minimum spanning tree (MST). — tof_plot_clusters_mst","text":"function plots minimum-spanning tree using clustered single-cell data order summarize cluster-level characteristics. node MST represents single cluster colored using user-specified variable (either continuous discrete).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_mst.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize clusters in CyTOF data using a minimum spanning tree (MST). — tof_plot_clusters_mst","text":"","code":"tof_plot_clusters_mst(   tof_tibble,   cluster_col,   knn_cols = where(tof_is_numeric),   color_col,   num_neighbors = 5L,   graph_type = c(\"unweighted\", \"weighted\"),   graph_layout = \"nicely\",   central_tendency_function = stats::median,   distance_function = c(\"euclidean\", \"cosine\"),   edge_alpha = 0.4,   node_size = \"cluster_size\",   theme = ggplot2::theme_void(),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_mst.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize clusters in CyTOF data using a minimum spanning tree (MST). — tof_plot_clusters_mst","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. knn_cols Unquoted column names indicating columns `tof_tibble` used compute cluster--cluster distances used construct k-nearest-neighbor graph. Supports tidyselect helpers. Defaults numeric columns. color_col Unquoted column name indicating column `tof_tibble` used color nodes MST. num_neighbors integer specifying many neighbors used construct k-nearest neighbor graph. graph_type string specifying k-nearest neighbor graph \"weighted\" (default) \"unweighted\". graph_layout argument specifies layout MST one two ways. Option 1: Provide string specifying algorithm used compute force-directed layout. Passed ggraph. Defaults \"nicely\", tries automatically select visually-appealing layout. examples include \"fr\", \"gem\", \"kk\", many others. See layout_tbl_graph_igraph examples. Option 2: Provide ggraph object previously generated function. layout used plot ggraph object used template new plot. Using option, number clusters (labels) must identical template. option useful want make multiple plots tof_tibble colored different protein markers, example. central_tendency_function function use computing measure central tendency aggregated cluster cluster_col. Defaults median. distance_function string indicating distance function use computing cluster--clusters distances constructing MST. Valid options include \"euclidean\" (default) \"cosine\". edge_alpha numeric value 0 1 specifying transparency edges drawn force-directed layout. Defaults 0.25. node_size Either numeric value specifying size nodes MST string \"cluster_size\", case size node representing cluster scaled according number cells cluster (default). theme ggplot2 theme apply force-directed layout. Defaults theme_void ... Optional additional arguments hnsw_knn","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_mst.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize clusters in CyTOF data using a minimum spanning tree (MST). — tof_plot_clusters_mst","text":"ggraph/ggplot object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_mst.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize clusters in CyTOF data using a minimum spanning tree (MST). — tof_plot_clusters_mst","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  # make a layout colored by a marker layout_cd38 <-     tof_plot_clusters_mst(         tof_tibble = sim_data,         cluster_col = cluster_id,         color_col = cd38     )  # use the same layout as the plot above to color the same # tree using a different marker layout_cd45 <-     tof_plot_clusters_mst(         tof_tibble = sim_data,         cluster_col = cluster_id,         color_col = cd45,         graph_layout = layout_cd38     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_volcano.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a volcano plot from differential expression analysis results — tof_plot_clusters_volcano","title":"Create a volcano plot from differential expression analysis results — tof_plot_clusters_volcano","text":"function makes volcano plot using results differential expression analysis (DEA) produced one `tof_dea_*` verbs. point volcano plot represents single cluster-marker pair, colored significance level direction marker expression difference.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_volcano.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a volcano plot from differential expression analysis results — tof_plot_clusters_volcano","text":"","code":"tof_plot_clusters_volcano(   dea_result,   num_top_pairs = 10L,   alpha = 0.05,   point_size = 2,   label_size = 3,   nudge_x = 0,   nudge_y = 0.25,   increase_color = \"#207394\",   decrease_color = \"#cd5241\",   insignificant_color = \"#cdcdcd\",   use_ggrepel = FALSE,   theme = ggplot2::theme_bw() )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_volcano.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a volcano plot from differential expression analysis results — tof_plot_clusters_volcano","text":"dea_result tibble containing differential expression analysis (DEA) results produced one members `tof_dea_*` function family. num_top_pairs integer representing number significant cluster-marker pairs labeled volcano plot. alpha numeric value 0 1 representing significance level p-value considered statistically significant. Defaults 0.05. point_size numeric value specifying size points volcano plot. label_size numeric value specifying size text labeling cluster-marker pairs. nudge_x numeric value specifying far cluster-marker pair labels adjusted left (`nudge_x` negative) right (`nudge_x` positive) avoid overlap plotted points. Passed  geom_text, ignored `use_ggrepel` = TRUE. Defaults 0. nudge_y numeric value specifying far cluster-marker pair labels adjusted downwards (`nudge_y` negative) upwards (`nudge_y` positive) avoid overlap plotted points. Passed  geom_text, ignored `use_ggrepel` = TRUE. Defaults 0.25. increase_color hex code specifying fill color used points corresponding cluster-marker pairs significant increases detected. decrease_color hex code specifying fill color used points corresponding cluster-marker pairs significant decreases detected. insignificant_color hex code specifying fill color used points corresponding cluster-marker pairs significant differences detected. use_ggrepel boolean value indicting geom_text_repel used plot labels cluster-marker pairs. Defaults FALSE. TRUE, ggrepel package must installed. theme ggplot2 theme apply volcano plot. Defaults theme_bw","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_volcano.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a volcano plot from differential expression analysis results — tof_plot_clusters_volcano","text":"ggplot object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_volcano.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a volcano plot from differential expression analysis results — tof_plot_clusters_volcano","text":"","code":"# create a mock differential expression analysis result sim_dea_result <-     dplyr::tibble(         cluster_id = rep(letters, 2),         marker = rep(c(\"cd45\", \"cd34\"), times = length(letters)),         p_adj = runif(n = 2 * length(letters), min = 0, max = 0.5),         mean_fc = runif(n = 2 * length(letters), min = 0.01, max = 10),         significant = dplyr::if_else(p_adj < 0.05, \"*\", \"\")     )  attr(sim_dea_result, which = \"dea_method\") <- \"t_unpaired\"  # create the volcano plot volcano <- tof_plot_clusters_volcano(dea_result = sim_dea_result)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a heatmap summarizing group marker expression patterns in high-dimensional cytometry data — tof_plot_heatmap","title":"Make a heatmap summarizing group marker expression patterns in high-dimensional cytometry data — tof_plot_heatmap","text":"function makes heatmap group--group marker expression patterns single-cell data. Markers plotted along horizontal (x-) axis heatmap groups plotted along vertical (y-) axis heatmap.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a heatmap summarizing group marker expression patterns in high-dimensional cytometry data — tof_plot_heatmap","text":"","code":"tof_plot_heatmap(   tof_tibble,   y_col,   marker_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   scale_markerwise = FALSE,   scale_ywise = FALSE,   cluster_markers = TRUE,   cluster_groups = TRUE,   line_width = 0.25,   theme = ggplot2::theme_minimal() )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a heatmap summarizing group marker expression patterns in high-dimensional cytometry data — tof_plot_heatmap","text":"tof_tibble `tof_tbl` `tibble`. y_col unquoted column name indicating column `tof_tibble` stores ids group cell belongs. marker_cols Unquoted column names indicating column `tof_tibble` interpreted markers plotted along x-axis heatmap. Supports tidyselect helpers. central_tendency_function function use computing measure central tendency aggregated cluster cluster_col. Defaults median. scale_markerwise boolean value indicating heatmap rescale columns heatmap maximum value marker 1 minimum value 0. Defaults FALSE. scale_ywise boolean value indicating heatmap rescale rows heatmap maximum value group 1 minimum value 0. Defaults FALSE. cluster_markers boolean value indicating heatmap order columns (.e. markers) using hierarchical clustering. Defaults TRUE. cluster_groups boolean value indicating heatmap order rows (.e. groups) using hierarchical clustering. Defaults TRUE. line_width numeric value indicating thick lines separating tiles heatmap . Defaults 0.25. theme ggplot2 theme apply heatmap. Defaults theme_minimal","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a heatmap summarizing group marker expression patterns in high-dimensional cytometry data — tof_plot_heatmap","text":"ggplot object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the results of a glmnet model fit on sample-level data. — tof_plot_model","title":"Plot the results of a glmnet model fit on sample-level data. — tof_plot_model","text":"Plot results glmnet model fit sample-level data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the results of a glmnet model fit on sample-level data. — tof_plot_model","text":"","code":"tof_plot_model(tof_model, new_data, theme = ggplot2::theme_bw())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the results of a glmnet model fit on sample-level data. — tof_plot_model","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations plot made. new_data provided, plot made using training data used fit model. Alternatively, string \"tuning_data\" can provided, plot generated using predictions generated model tuning. theme ggplot2 theme apply plot Defaults theme_bw","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the results of a glmnet model fit on sample-level data. — tof_plot_model","text":"ggplot object. `tof_model` linear model, scatterplot predicted outcome vs. true outcome returned. `tof_model` two-class model, ROC curve returned. `tof_model` multiclass model, one-versus-ROC curve returned class. `tof_model` survival model, Kaplan-Meier curve returned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the results of a glmnet model fit on sample-level data. — tof_plot_model","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             )     )  new_tibble <-     dplyr::tibble(         sample = as.character(1:20),         cd45 = runif(n = 20),         pstat5 = runif(n = 20),         cd34 = runif(n = 20),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(20),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             )     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  # make the plot plot_1 <- tof_plot_model(tof_model = regression_model, new_data = new_tibble)  # train a logistic regression classifier logistic_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = class,         model_type = \"two-class\"     )  # make the plot  plot_2 <- tof_plot_model(tof_model = logistic_model, new_data = new_tibble)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_linear.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the results of a linear glmnet model fit on sample-level data. — tof_plot_model_linear","title":"Plot the results of a linear glmnet model fit on sample-level data. — tof_plot_model_linear","text":"Plot results linear glmnet model fit sample-level data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_linear.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the results of a linear glmnet model fit on sample-level data. — tof_plot_model_linear","text":"","code":"tof_plot_model_linear(tof_model, new_data, theme = ggplot2::theme_bw())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_linear.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the results of a linear glmnet model fit on sample-level data. — tof_plot_model_linear","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations plot made. new_data provided, plot made using training data used fit model. Alternatively, string \"tuning_data\" can provided, plot generated using predictions generated model tuning. theme ggplot2 theme apply plot Defaults theme_bw","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_linear.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the results of a linear glmnet model fit on sample-level data. — tof_plot_model_linear","text":"ggplot object. Specifically, scatterplot predicted outcome vs. true outcome returned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_logistic.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the results of a two-class glmnet model fit on sample-level data. — tof_plot_model_logistic","title":"Plot the results of a two-class glmnet model fit on sample-level data. — tof_plot_model_logistic","text":"Plot results two-class glmnet model fit sample-level data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_logistic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the results of a two-class glmnet model fit on sample-level data. — tof_plot_model_logistic","text":"","code":"tof_plot_model_logistic(tof_model, new_data, theme = ggplot2::theme_bw())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_logistic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the results of a two-class glmnet model fit on sample-level data. — tof_plot_model_logistic","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations plot made. new_data provided, plot made using training data used fit model. Alternatively, string \"tuning_data\" can provided, plot generated using predictions generated model tuning. theme ggplot2 theme apply plot. Defaults theme_bw","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_logistic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the results of a two-class glmnet model fit on sample-level data. — tof_plot_model_logistic","text":"ggplot object. Specifically, ROC curve..","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_multinomial.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the results of a multiclass glmnet model fit on sample-level data. — tof_plot_model_multinomial","title":"Plot the results of a multiclass glmnet model fit on sample-level data. — tof_plot_model_multinomial","text":"Plot results multiclass glmnet model fit sample-level data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_multinomial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the results of a multiclass glmnet model fit on sample-level data. — tof_plot_model_multinomial","text":"","code":"tof_plot_model_multinomial(tof_model, new_data, theme = ggplot2::theme_bw())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_multinomial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the results of a multiclass glmnet model fit on sample-level data. — tof_plot_model_multinomial","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations plot made. new_data provided, plot made using training data used fit model. Alternatively, string \"tuning_data\" can provided, plot generated using predictions generated model tuning. theme ggplot2 theme apply plot. Defaults theme_bw.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_multinomial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the results of a multiclass glmnet model fit on sample-level data. — tof_plot_model_multinomial","text":"ggplot object. Specifically, one-versus-ROC curve (one class).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_survival.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the results of a survival glmnet model fit on sample-level data. — tof_plot_model_survival","title":"Plot the results of a survival glmnet model fit on sample-level data. — tof_plot_model_survival","text":"Plot results survival glmnet model fit sample-level data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_survival.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the results of a survival glmnet model fit on sample-level data. — tof_plot_model_survival","text":"","code":"tof_plot_model_survival(   tof_model,   new_data,   censor_size = 2.5,   theme = ggplot2::theme_bw() )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_survival.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the results of a survival glmnet model fit on sample-level data. — tof_plot_model_survival","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations plot made. new_data provided, plot made using training data used fit model. Alternatively, string \"tuning_data\" can provided, plot generated using predictions generated model tuning. censor_size numeric value indicating large plot tick marks representing censored values Kaplan-Meier curve. theme ggplot2 theme apply plot. Defaults theme_bw","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_survival.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the results of a survival glmnet model fit on sample-level data. — tof_plot_model_survival","text":"ggplot object. Specifically, Kaplan-Meier curve.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_features","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_features","text":"function makes heatmap sample--sample marker expression patterns single-cell data. Markers plotted along horizontal (x-) axis heatmap sample IDs plotted along vertical (y-) axis heatmap.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_features","text":"","code":"tof_plot_sample_features(   feature_tibble,   sample_col,   feature_cols = where(tof_is_numeric),   scale_featurewise = FALSE,   scale_samplewise = FALSE,   line_width = 0.25,   theme = ggplot2::theme_minimal() )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_features","text":"feature_tibble tbl_df data.frame aggregated sample-level features, generated tof_extract_features. sample_col unquoted column name indicating column `tof_tibble` stores IDs sample. sample IDs present, numeric ID assigned row `feature_tibble` based row index. feature_cols Unquoted column names indicating column `feature_tibble` interpreted features plotted along x-axis heatmap. Supports tidyselect helpers. scale_featurewise boolean value indicating heatmap rescale columns heatmap maximum value marker 1 minimum value 0. Defaults FALSE. scale_samplewise boolean value indicating heatmap rescale rows heatmap maximum value sample 1 minimum value 0. Defaults FALSE. line_width numeric value indicating thick lines separating tiles heatmap . Defaults 0.25. theme ggplot2 theme apply heatmap. Defaults theme_minimal","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_features","text":"ggplot object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_features.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_features","text":"","code":"# simulate single-cell data sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         sample_id = sample(paste0(\"sample\", 1:5), size = 1000, replace = TRUE)     )  # extract cluster proportions in each simulated patient feature_data <-     tof_extract_proportion(         tof_tibble = sim_data,         cluster_col = cluster_id,         group_cols = sample_id     )  # plot the heatmap heatmap <- tof_plot_sample_features(feature_tibble = feature_data)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_heatmap","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_heatmap","text":"function makes heatmap sample--sample marker expression patterns single-cell data. Markers plotted along horizontal (x-) axis heatmap sample IDs plotted along vertical (y-) axis heatmap.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_heatmap","text":"","code":"tof_plot_sample_heatmap(   tof_tibble,   sample_col,   marker_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   scale_markerwise = FALSE,   scale_samplewise = FALSE,   line_width = 0.25,   theme = ggplot2::theme_minimal() )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_heatmap","text":"tof_tibble `tof_tbl` `tibble`. sample_col unquoted column name indicating column `tof_tibble` stores ids sample cell belongs. marker_cols Unquoted column names indicating column `tof_tibble` interpreted markers plotted along x-axis heatmap. Supports tidyselect helpers. central_tendency_function function use computing measure central tendency aggregated sample cluster_col. Defaults median. scale_markerwise boolean value indicating heatmap rescale columns heatmap maximum value marker 1 minimum value 0. Defaults FALSE. scale_samplewise boolean value indicating heatmap rescale rows heatmap maximum value sample 1 minimum value 0. Defaults FALSE. line_width numeric value indicating thick lines separating tiles heatmap . Defaults 0.25. theme ggplot2 theme apply heatmap. Defaults theme_minimal","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_heatmap","text":"ggplot object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_heatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_heatmap","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         sample_id = sample(paste0(\"sample\", 1:5), size = 1000, replace = TRUE)     )  heatmap <-     tof_plot_sample_heatmap(         tof_tibble = sim_data,         sample_col = sample_id     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_postprocess.html","id":null,"dir":"Reference","previous_headings":"","what":"Post-process transformed CyTOF data. — tof_postprocess","title":"Post-process transformed CyTOF data. — tof_postprocess","text":"function transforms `tof_tibble` transformed ion counts mass cytometer back something looks like .fcs file Fluidigm software generates.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_postprocess.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Post-process transformed CyTOF data. — tof_postprocess","text":"","code":"tof_postprocess(   tof_tibble = NULL,   channel_cols = where(tof_is_numeric),   redo_noise = FALSE,   transform_fun = function(x) rev_asinh(x, shift_factor = 0, scale_factor = 0.2) )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_postprocess.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Post-process transformed CyTOF data. — tof_postprocess","text":"tof_tibble `tof_tibble` `tibble`. channel_cols vector non-quoted column names indicating columns `tof_tibble` contain protein measurements. Supports tidyselect helpers. nothing specified, default transform numeric columns. redo_noise boolean value indicating whether add  uniform noise CyTOF measurement aesthetic visualization purposes. See paper. Defaults FALSE transform_fun vectorized function apply column specified `channel_cols` post-processing. Defaults rev_asinh transformation (cofactor 5).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_postprocess.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Post-process transformed CyTOF data. — tof_postprocess","text":"`tof_tbl` identical dimensions input `tof_tibble`, columns specified channel_cols transformed using `transform_fun` (noise added removed depending `redo_noise`).","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_postprocess.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Post-process transformed CyTOF data. — tof_postprocess","text":"","code":"# read in an example .fcs file from tidytof's internal datasets input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]] tof_tibble <- tof_read_data(input_file)  # preprocess all numeric columns with default behavior # arcsinh transformation with a cofactor of 5 preprocessed_tof_tibble <- tof_preprocess(tof_tibble)  # postprocess all numeric columns to reverse the preprocessing tof_postprocess(tof_tibble) #> # A tibble: 100 × 59 #>     Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>    <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1   Inf    22215276.   6.00e224          8.82      1411688.    Inf        #>  2   Inf   446205752. Inf               135.         859679.    Inf        #>  3   Inf    22215276. Inf              2634.            321.      8.51e277 #>  4   Inf    22215276.   2.24e254          3.47         1383.      8.29e254 #>  5   Inf   164149923. Inf               127.          38726.      3.70e280 #>  6   Inf   446205752.   1.14e211        163.            116.      3.29e272 #>  7   Inf    22215276.   2.62e219         79.1           175.      1.82e246 #>  8   Inf   164149923.   5.35e246       1876.         291228.      5.64e305 #>  9   Inf   446205752. Inf                55.3         24727.    Inf        #> 10   Inf    22215276.   2.38e236          5.05      2010273.    Inf        #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_predict.html","id":null,"dir":"Reference","previous_headings":"","what":"Use a trained elastic net model to predict fitted values from new data — tof_predict","title":"Use a trained elastic net model to predict fitted values from new data — tof_predict","text":"function uses trained `tof_model` make predictions new data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_predict.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use a trained elastic net model to predict fitted values from new data — tof_predict","text":"","code":"tof_predict(   tof_model,   new_data,   prediction_type = c(\"response\", \"class\", \"link\", \"survival curve\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_predict.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use a trained elastic net model to predict fitted values from new data — tof_predict","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations predictions made. new_data provided, predictions made training data used fit model. prediction_type string indicating type prediction provided model: \"response\" (default) \"linear\" models, predicted response observation. \"two-class\" \"multiclass\" models, fitted probabilities class observation. \"survival\" models, fitted relative-risk observation. \"class\" applies \"two-class\" \"multiclass\" models. , class label corresponding class maximum fitted probability. \"link\" linear predictions model (output link function model family.) \"survival curve\" applies \"survival\" models. Returns tibble indicating patient's probability survival (1 - probability(event)) timepoint dataset. Obtained using survfit function.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_predict.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use a trained elastic net model to predict fitted values from new data — tof_predict","text":"tibble single column (`.pred`) containing predictions , multiclass models `prediction_type` == \"response\", tibble one column class. row output corresponds row `new_data` ( , `new_data` provided, row `tof_model`'s training data). latter case, sure check `tof_model$training_data` confirm order observations, resampling procedure can change ordering relative original input data.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_predict.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Use a trained elastic net model to predict fitted values from new data — tof_predict","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100)     )  new_tibble <-     dplyr::tibble(         sample = as.character(1:20),         cd45 = runif(n = 20),         pstat5 = runif(n = 20),         cd34 = runif(n = 20),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(20)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  # apply the model to new data tof_predict(tof_model = regression_model, new_data = new_tibble) #> # A tibble: 20 × 1 #>    .pred #>    <dbl> #>  1  4.35 #>  2  4.95 #>  3  2.57 #>  4  2.64 #>  5  6.28 #>  6  2.98 #>  7  1.99 #>  8  4.16 #>  9  2.96 #> 10  1.21 #> 11  2.53 #> 12  4.06 #> 13  2.48 #> 14  3.42 #> 15  4.11 #> 16  4.72 #> 17  2.81 #> 18  1.92 #> 19  1.78 #> 20  3.96"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_prep_recipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Train a recipe or list of recipes for preprocessing sample-level cytometry data — tof_prep_recipe","title":"Train a recipe or list of recipes for preprocessing sample-level cytometry data — tof_prep_recipe","text":"Train recipe list recipes preprocessing sample-level cytometry data","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_prep_recipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Train a recipe or list of recipes for preprocessing sample-level cytometry data — tof_prep_recipe","text":"","code":"tof_prep_recipe(split_data, unprepped_recipe)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_prep_recipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Train a recipe or list of recipes for preprocessing sample-level cytometry data — tof_prep_recipe","text":"split_data `rsplit` `rset` object rsample package containing sample-level data use modeling. easiest way generate use tof_split_data. Alternatively, unsplit tbl_df, though recommended. unprepped_recipe recipe object (`split_data` `rsplit` object `tbl_df`) list recipes (`split_data` `rset` object).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_prep_recipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Train a recipe or list of recipes for preprocessing sample-level cytometry data — tof_prep_recipe","text":"split_data \"rsplit\" \"tbl_df\" object, return single prepped recipe. split_data \"rset\" object, return list prepped recipes specific fold resampling procedure.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_preprocess.html","id":null,"dir":"Reference","previous_headings":"","what":"Preprocess raw high-dimensional cytometry data. — tof_preprocess","title":"Preprocess raw high-dimensional cytometry data. — tof_preprocess","text":"function transforms `tof_tbl` raw ion counts, reads, fluorescence intensity units directly measured cytometer using user-provided function. can used perform standard pre-processing steps (.e. arcsinh transformation) cytometry data analysis.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_preprocess.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preprocess raw high-dimensional cytometry data. — tof_preprocess","text":"","code":"tof_preprocess(   tof_tibble = NULL,   channel_cols = where(tof_is_numeric),   undo_noise = FALSE,   transform_fun = function(x) asinh(x/5) )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_preprocess.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preprocess raw high-dimensional cytometry data. — tof_preprocess","text":"tof_tibble `tof_tbl` `tibble`. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. nothing specified, default transform numeric columns. undo_noise boolean value indicating whether remove uniform noise Fluidigm software adds CyTOF measurements aesthetic visualization purposes. See paper. Defaults FALSE. transform_fun vectorized function apply protein value variance stabilization. Defaults asinh transformation (co-factor 5).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_preprocess.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preprocess raw high-dimensional cytometry data. — tof_preprocess","text":"`tof_tbl` identical dimensions input `tof_tibble`, columns specified channel_cols transformed using `transform_fun` (noise removed removed depending `undo_noise`).","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_preprocess.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Preprocess raw high-dimensional cytometry data. — tof_preprocess","text":"","code":"# read in an example .fcs file from tidytof's internal datasets input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]] tof_tibble <- tof_read_data(input_file)  # preprocess all numeric columns with default behavior # arcsinh transformation with a cofactor of 5 tof_preprocess(tof_tibble) #> # A tibble: 100 × 59 #>     Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>    <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1 15.3          1.88       5.33         0.263         1.70           5.85 #>  2 14.9          2.05       5.83         0.731         1.67           5.71 #>  3 15.2          1.88       5.70         1.13          0.861          5.54 #>  4 13.7          1.88       5.45         0.129         1.06           5.46 #>  5 15.2          1.99       5.73         0.721         1.41           5.55 #>  6 14.4          2.05       5.27         0.760         0.708          5.52 #>  7 13.9          1.88       5.31         0.645         0.771          5.42 #>  8 14.2          1.99       5.42         1.09          1.58           5.64 #>  9 15.6          2.05       6.03         0.586         1.37           5.83 #> 10  9.75         1.88       5.38         0.177         1.73           5.78 #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …  # preprocess all numeric columns using the log base 10 tranformation tof_preprocess(tof_tibble, transform_fun = log10) #> # A tibble: 100 × 59 #>     Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>    <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1  7.04         1.20       2.71        0.125          1.12           2.94 #>  2  6.85         1.28       2.93        0.601          1.11           2.88 #>  3  6.99         1.20       2.87        0.843          0.686          2.81 #>  4  6.36         1.20       2.77       -0.189          0.800          2.77 #>  5  6.98         1.26       2.89        0.594          0.984          2.81 #>  6  6.65         1.28       2.69        0.621          0.584          2.80 #>  7  6.44         1.20       2.70        0.539          0.628          2.75 #>  8  6.57         1.26       2.75        0.821          1.07           2.85 #>  9  7.18         1.28       3.02        0.491          0.964          2.93 #> 10  4.63         1.20       2.74       -0.0515         1.13           2.91 #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Read high-dimensional cytometry data from a .csv file into a tidy tibble. — tof_read_csv","title":"Read high-dimensional cytometry data from a .csv file into a tidy tibble. — tof_read_csv","text":"Read high-dimensional cytometry data .csv file tidy tibble.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read high-dimensional cytometry data from a .csv file into a tidy tibble. — tof_read_csv","text":"","code":"tof_read_csv(file_path = NULL, panel_info = dplyr::tibble())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read high-dimensional cytometry data from a .csv file into a tidy tibble. — tof_read_csv","text":"file_path file path single .csv file. panel_info Optional. tibble data.frame containing information panel used high-dimensional cytometry data acquisition. Two columns required: \"metals\" \"antigens\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_csv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read high-dimensional cytometry data from a .csv file into a tidy tibble. — tof_read_csv","text":"`tof_tbl` row represents single cell column represents high-dimensional cytometry antigen channel. `tof_tbl` S3 class extends \"tibble\" class storing one additional attribute: \"panel\" (tibble storing information panel used data acquisition). panel information obvious data read .csv file, information must provided manually user (unlike `tof_read_fcs`).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Read data from an .fcs/.csv file or a directory of .fcs/.csv files. — tof_read_data","title":"Read data from an .fcs/.csv file or a directory of .fcs/.csv files. — tof_read_data","text":"Read data .fcs/.csv file directory .fcs/.csv files.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read data from an .fcs/.csv file or a directory of .fcs/.csv files. — tof_read_data","text":"","code":"tof_read_data(path = NULL, sep = \"|\", panel_info = dplyr::tibble())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read data from an .fcs/.csv file or a directory of .fcs/.csv files. — tof_read_data","text":"path file path single file directory files. valid file types .fcs files .csv files containing high-dimensional cytometry data. sep Optional. string use separate antigen name associated metal column names output tibble. Defaults \"|\". used input file .fcs file. panel_info Optional. tibble data.frame containing information panel used high-dimensional cytometry data acquisition. Two columns required: \"metals\" \"antigens\". used input file .csv file.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read data from an .fcs/.csv file or a directory of .fcs/.csv files. — tof_read_data","text":"[c m+1] tibble row represents single cell (c total dataset) column represents high-dimensional cytometry measurement (m total dataset). one .fcs read , last column tibble (`file_name`) represent file name .fcs file cell read.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read data from an .fcs/.csv file or a directory of .fcs/.csv files. — tof_read_data","text":"","code":"input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]] tof_read_data(input_file) #> # A tibble: 100 × 59 #>         Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>        <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1 11021370            16       517.         1.33          13.2           865. #>  2  7112446.           19       850.         3.99          12.7           756. #>  3  9722098            16       747.         6.96           4.85          639. #>  4  2267279.           16       585.         0.648          6.32          586. #>  5  9624729            18       773.         3.93           9.65          645. #>  6  4439897            19       485.         4.18           3.84          627. #>  7  2762526.           16       504.         3.46           4.25          566. #>  8  3746682.           18       567.         6.62          11.7           703. #>  9 15214280            19      1043.         3.10           9.20          853. #> 10    42699.           16       543.         0.888         13.6           813. #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_fcs.html","id":null,"dir":"Reference","previous_headings":"","what":"Read high-dimensional cytometry data from an .fcs file into a tidy tibble. — tof_read_fcs","title":"Read high-dimensional cytometry data from an .fcs file into a tidy tibble. — tof_read_fcs","text":"function reads high-dimensional cytometry data single .fcs file tidy data structure called `tof_tbl` (\"tof_tibble\"). tof_tibbles identical normal tibbles except additional attribute (\"panel\") stores information high-dimensional cytometry panel used data acquisition.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_fcs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read high-dimensional cytometry data from an .fcs file into a tidy tibble. — tof_read_fcs","text":"","code":"tof_read_fcs(file_path = NULL, sep = \"|\")"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_fcs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read high-dimensional cytometry data from an .fcs file into a tidy tibble. — tof_read_fcs","text":"file_path file path single .fcs file. sep string use separate antigen name associated metal column names output tibble. Defaults \"|\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_fcs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read high-dimensional cytometry data from an .fcs file into a tidy tibble. — tof_read_fcs","text":"`tof_tbl` row represents single cell column represents high-dimensional cytometry antigen channel. `tof_tbl` S3 class extends \"tibble\" class storing one additional attribute: \"panel\" (tibble storing information panel used data acquisition).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Read high-dimensional cytometry data from a single .fcs or .csv file into a tidy tibble. — tof_read_file","title":"Read high-dimensional cytometry data from a single .fcs or .csv file into a tidy tibble. — tof_read_file","text":"Read high-dimensional cytometry data single .fcs .csv file tidy tibble.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read high-dimensional cytometry data from a single .fcs or .csv file into a tidy tibble. — tof_read_file","text":"","code":"tof_read_file(file_path = NULL, sep = \"|\", panel_info = dplyr::tibble())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read high-dimensional cytometry data from a single .fcs or .csv file into a tidy tibble. — tof_read_file","text":"file_path file path single .fcs .csv file. sep string use separate antigen name associated metal column names output tibble. Defaults \"|\". used input file .fcs file. panel_info Optional. tibble data.frame containing information panel used high-dimensional cytometry data acquisition. Two columns required: \"metals\" \"antigens\". used input file .csv file.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read high-dimensional cytometry data from a single .fcs or .csv file into a tidy tibble. — tof_read_file","text":"`tof_tbl` row represents single cell column represents high-dimensional cytometry antigen channel. `tof_tbl` S3 class extends \"tibble\" class storing one additional attribute: \"panel\" (tibble storing information panel used data acquisition). panel information obvious data read .csv file, information must provided manually user.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_dimensions.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply dimensionality reduction to a single-cell dataset. — tof_reduce_dimensions","title":"Apply dimensionality reduction to a single-cell dataset. — tof_reduce_dimensions","text":"function wrapper around tidytof's tof_reduce_* function family. performs dimensionality reduction single-cell data using user-specified method (3 choices) method's corresponding input parameters","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_dimensions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply dimensionality reduction to a single-cell dataset. — tof_reduce_dimensions","text":"","code":"tof_reduce_dimensions(   tof_tibble,   ...,   augment = TRUE,   method = c(\"pca\", \"tsne\", \"umap\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_dimensions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply dimensionality reduction to a single-cell dataset. — tof_reduce_dimensions","text":"tof_tibble `tof_tbl` `tibble`. ... Arguments passed tof_reduce_* function corresponding embedding method. See tof_reduce_pca, tof_reduce_tsne, tof_reduce_umap. augment boolean value indicating output column-bind dimensionality-reduced embedding vectors cell new column `tof_tibble` (TRUE, default) tibble including low-dimensionality embeddings returned (FALSE). method method dimensionality reduction. Currently, PCA, tSNE, UMAP embedding supported.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_dimensions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply dimensionality reduction to a single-cell dataset. — tof_reduce_dimensions","text":"tibble number rows `tof_tibble`, representing single cell. `num_comp` columns represents cell's embedding calculated embedding space.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_dimensions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply dimensionality reduction to a single-cell dataset. — tof_reduce_dimensions","text":"","code":"# simulate single-cell data sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 100),         cd38 = rnorm(n = 100),         cd34 = rnorm(n = 100),         cd19 = rnorm(n = 100)     )  # calculate pca tof_reduce_dimensions(tof_tibble = sim_data, method = \"pca\") #> # A tibble: 100 × 8 #>       cd45   cd38    cd34   cd19   .pc1    .pc2     .pc3    .pc4 #>      <dbl>  <dbl>   <dbl>  <dbl>  <dbl>   <dbl>    <dbl>   <dbl> #>  1  0.959  -1.44   0.227  -2.10   2.38   0.966  -0.788   -0.215  #>  2  1.46   -0.597 -0.173  -2.04   1.98   1.25   -0.147   -0.993  #>  3  1.06   -1.63   0.518   1.39   1.38  -1.37    0.997    0.995  #>  4  0.281  -0.571  1.55    1.29   0.366 -1.96   -0.00489  0.195  #>  5  0.562   0.263 -0.654  -2.89   1.00   2.26   -0.847   -1.37   #>  6  0.0412  0.446 -0.321  -0.659 -0.188  0.721  -0.133   -0.585  #>  7  2.78    0.557  0.141  -0.526  1.49   0.0724  1.47    -2.14   #>  8 -0.0357 -0.202 -0.0768 -0.405  0.189  0.346  -0.235   -0.0213 #>  9 -0.152   0.583 -0.0791  1.78  -1.23  -0.898   0.946    0.166  #> 10  0.975  -1.96   1.35    1.35   1.75  -2.00    0.451    1.03   #> # ℹ 90 more rows  # calculate tsne tof_reduce_dimensions(tof_tibble = sim_data, method = \"tsne\") #> # A tibble: 100 × 6 #>       cd45   cd38    cd34   cd19  .tsne1 .tsne2 #>      <dbl>  <dbl>   <dbl>  <dbl>   <dbl>  <dbl> #>  1  0.959  -1.44   0.227  -2.10  -0.950   2.63  #>  2  1.46   -0.597 -0.173  -2.04  -0.815   2.73  #>  3  1.06   -1.63   0.518   1.39   1.64    3.89  #>  4  0.281  -0.571  1.55    1.29  -4.09    1.90  #>  5  0.562   0.263 -0.654  -2.89   0.177  -3.68  #>  6  0.0412  0.446 -0.321  -0.659 -0.0963 -1.45  #>  7  2.78    0.557  0.141  -0.526  0.818   2.79  #>  8 -0.0357 -0.202 -0.0768 -0.405 -0.716  -0.753 #>  9 -0.152   0.583 -0.0791  1.78   4.02    1.07  #> 10  0.975  -1.96   1.35    1.35   1.27    4.21  #> # ℹ 90 more rows  # calculate umap tof_reduce_dimensions(tof_tibble = sim_data, method = \"umap\") #> Found more than one class \"dist\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘spam’ #> Found more than one class \"dist\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘spam’ #> # A tibble: 100 × 6 #>       cd45   cd38    cd34   cd19 .umap1 .umap2 #>      <dbl>  <dbl>   <dbl>  <dbl>  <dbl>  <dbl> #>  1  0.959  -1.44   0.227  -2.10  -1.01  -2.70  #>  2  1.46   -0.597 -0.173  -2.04  -0.629 -2.72  #>  3  1.06   -1.63   0.518   1.39  -3.34  -0.758 #>  4  0.281  -0.571  1.55    1.29   0.940  3.52  #>  5  0.562   0.263 -0.654  -2.89   0.873 -2.55  #>  6  0.0412  0.446 -0.321  -0.659  0.554 -1.61  #>  7  2.78    0.557  0.141  -0.526 -1.20  -1.66  #>  8 -0.0357 -0.202 -0.0768 -0.405  1.20  -1.33  #>  9 -0.152   0.583 -0.0791  1.78  -3.09   0.800 #> 10  0.975  -1.96   1.35    1.35   0.606  3.28  #> # ℹ 90 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_pca.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform principal component analysis on single-cell data — tof_reduce_pca","title":"Perform principal component analysis on single-cell data — tof_reduce_pca","text":"function calculates principal components using single-cell data `tof_tibble`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_pca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform principal component analysis on single-cell data — tof_reduce_pca","text":"","code":"tof_reduce_pca(   tof_tibble,   pca_cols = where(tof_is_numeric),   num_comp = 5,   threshold = NA,   center = TRUE,   scale = TRUE,   return_recipe = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_pca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform principal component analysis on single-cell data — tof_reduce_pca","text":"tof_tibble `tof_tbl` `tibble`. pca_cols Unquoted column names indicating columns `tof_tibble` use computing principal components. Defaults numeric columns. Supports tidyselect helpers. num_comp number PCA components calculate. Defaults 5. See step_pca. threshold double 0 1 representing fraction total variance covered components returned output. See step_pca. center boolean value indicating column centered mean 0 PCA analysis. Defaults TRUE. scale boolean value indicating column scaled standard deviation = 1 PCA analysis. Defaults TRUE. return_recipe boolean value indicating instead UMAP result, prepped recipe object containing PCA embedding returned. Set option TRUE want create PCA embedding using one dataset also want project new observations onto embedding space later.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_pca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform principal component analysis on single-cell data — tof_reduce_pca","text":"tibble number rows `tof_tibble`, representing single cell. `num_comp` columns represents cell's embedding calculated principal component space.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_pca.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform principal component analysis on single-cell data — tof_reduce_pca","text":"","code":"# simulate single-cell data sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200)     ) new_data <-     dplyr::tibble(         cd45 = rnorm(n = 50),         cd38 = rnorm(n = 50),         cd34 = rnorm(n = 50),         cd19 = rnorm(n = 50)     )  # calculate pca tof_reduce_pca(tof_tibble = sim_data, num_comp = 2) #> # A tibble: 200 × 2 #>       .pc1    .pc2 #>      <dbl>   <dbl> #>  1  2.33   -0.0528 #>  2 -0.442   0.573  #>  3 -1.88   -0.299  #>  4 -1.10   -0.230  #>  5  0.576  -0.312  #>  6  0.442   0.398  #>  7 -0.0473 -1.14   #>  8  1.06    0.229  #>  9 -0.972  -0.382  #> 10  0.338   0.143  #> # ℹ 190 more rows  # return recipe instead of embeddings pca_recipe <- tof_reduce_pca(tof_tibble = sim_data, return_recipe = TRUE)  # apply recipe to new data recipes::bake(pca_recipe, new_data = new_data) #> # A tibble: 50 × 4 #>       PC1    PC2     PC3     PC4 #>     <dbl>  <dbl>   <dbl>   <dbl> #>  1 -1.56  -0.699  0.0154  0.223  #>  2  0.295  0.789 -0.0991 -0.725  #>  3  0.860  0.183  0.388   0.0457 #>  4  0.524  0.741 -0.0837 -2.23   #>  5 -1.48  -1.82   0.988  -1.51   #>  6  0.781  1.67  -1.81   -0.411  #>  7 -2.01   1.33   1.32    0.110  #>  8 -1.33  -0.312 -0.431  -0.576  #>  9 -1.54   0.937  0.591   0.295  #> 10  0.399  0.559 -0.0750  0.292  #> # ℹ 40 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_tsne.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform t-distributed stochastic neighborhood embedding on single-cell data — tof_reduce_tsne","title":"Perform t-distributed stochastic neighborhood embedding on single-cell data — tof_reduce_tsne","text":"function calculates tSNE embedding using single-cell data `tof_tibble`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_tsne.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform t-distributed stochastic neighborhood embedding on single-cell data — tof_reduce_tsne","text":"","code":"tof_reduce_tsne(   tof_tibble,   tsne_cols = where(tof_is_numeric),   num_comp = 2,   perplexity = 30,   theta = 0.5,   max_iterations = 1000,   verbose = FALSE,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_tsne.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform t-distributed stochastic neighborhood embedding on single-cell data — tof_reduce_tsne","text":"tof_tibble `tof_tbl` `tibble`. tsne_cols Unquoted column names indicating columns `tof_tibble` use computing tSNE embedding. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. num_comp number tSNE components calculate embedding. Defaults 2. perplexity positive numeric value represents represents rough balance input data’s local global structure emphasized embedding. Smaller values emphasize local structure; larger values emphasize global structure. recommended range generally 5-50. Defaults 30. theta numeric value representing speed/accuracy tradeoff embedding. Set 0 exact tSNE; increase faster approximation. Defaults 0.5 max_iterations integer number iterations use embedding calculation. Defaults 1000. verbose boolean value indicating whether progress updates printed embedding calculation. Default FALSE. ... Additional arguments pass Rtsne.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_tsne.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform t-distributed stochastic neighborhood embedding on single-cell data — tof_reduce_tsne","text":"tibble number rows `tof_tibble`, representing single cell. `num_comp` columns represents cell's embedding calculated tSNE space.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_tsne.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform t-distributed stochastic neighborhood embedding on single-cell data — tof_reduce_tsne","text":"","code":"# simulate single-cell data sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200)     )  # calculate tsne tof_reduce_tsne(tof_tibble = sim_data) #> # A tibble: 200 × 2 #>    .tsne1 .tsne2 #>     <dbl>  <dbl> #>  1 -2.43   3.31  #>  2 -1.65  -0.880 #>  3  4.74   4.01  #>  4 -4.52  -1.64  #>  5  6.84  -4.20  #>  6 -5.34   0.394 #>  7  2.79  -3.74  #>  8  1.61   3.11  #>  9 -0.217  3.52  #> 10  8.92  -3.70  #> # ℹ 190 more rows  # calculate tsne with only 2 columns tof_reduce_tsne(tof_tibble = sim_data, tsne_cols = c(cd34, cd38)) #> # A tibble: 200 × 2 #>    .tsne1 .tsne2 #>     <dbl>  <dbl> #>  1  2.89    2.41 #>  2  0.855   1.09 #>  3  7.71    2.97 #>  4 -5.02    2.76 #>  5 -3.47   -6.40 #>  6  0.329   7.05 #>  7 -3.02   -4.22 #>  8  5.94    2.43 #>  9  1.88   -3.08 #> 10 -1.32   -8.99 #> # ℹ 190 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_umap.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply uniform manifold approximation and projection (UMAP) to single-cell data — tof_reduce_umap","title":"Apply uniform manifold approximation and projection (UMAP) to single-cell data — tof_reduce_umap","text":"function calculates UMAP embedding single-cell data `tof_tibble`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_umap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply uniform manifold approximation and projection (UMAP) to single-cell data — tof_reduce_umap","text":"","code":"tof_reduce_umap(   tof_tibble,   umap_cols = where(tof_is_numeric),   num_comp = 2,   neighbors = 5,   min_dist = 0.01,   learn_rate = 1,   epochs = NULL,   verbose = FALSE,   n_threads = 1,   return_recipe = FALSE,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_umap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply uniform manifold approximation and projection (UMAP) to single-cell data — tof_reduce_umap","text":"tof_tibble `tof_tbl` `tibble`. umap_cols Unquoted column names indicating columns `tof_tibble` use computing UMAP embedding. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. num_comp integer number UMAP components. neighbors integer number nearest neighbors used construct target simplicial set. min_dist effective minimum distance embedded points. learn_rate Positive number learning rate optimization process. epochs Number iterations neighbor optimization. See umap details. verbose boolean indicating run details logged console. Defaults FALSE. n_threads Number threads use UMAP calculation. Defaults 1. return_recipe boolean value indicating instead UMAP result, prepped recipe object containing UMAP embedding returned. Set option TRUE want create UMAP embedding using one dataset also want project new observations onto embedding space later. ... Optional. options passed arguments umap.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_umap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply uniform manifold approximation and projection (UMAP) to single-cell data — tof_reduce_umap","text":"tibble number rows `tof_tibble`, representing single cell. `num_comp` columns represents cell's embedding calculated UMAP space.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_umap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply uniform manifold approximation and projection (UMAP) to single-cell data — tof_reduce_umap","text":"","code":"# simulate single-cell data sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200)     ) new_data <-     dplyr::tibble(         cd45 = rnorm(n = 50),         cd38 = rnorm(n = 50),         cd34 = rnorm(n = 50),         cd19 = rnorm(n = 50)     )  # calculate umap tof_reduce_umap(tof_tibble = sim_data) #> Found more than one class \"dist\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘spam’ #> Found more than one class \"dist\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘spam’ #> # A tibble: 200 × 2 #>    .umap1  .umap2 #>     <dbl>   <dbl> #>  1  1.44   2.48   #>  2  0.270 -2.03   #>  3 -2.56   4.39   #>  4  0.428 -3.15   #>  5  3.26  -1.54   #>  6  1.69  -3.33   #>  7  2.92  -1.90   #>  8 -1.35   0.0126 #>  9  0.766 -1.98   #> 10  0.725 -0.250  #> # ℹ 190 more rows  # calculate umap with only 2 columns tof_reduce_tsne(tof_tibble = sim_data, umap_cols = c(cd34, cd38)) #> # A tibble: 200 × 2 #>    .tsne1 .tsne2 #>     <dbl>  <dbl> #>  1 -0.975 -3.62  #>  2 -0.514  1.65  #>  3  8.44   0.616 #>  4 -3.63  -3.98  #>  5  5.61   0.114 #>  6  5.69  -3.07  #>  7  5.85   2.58  #>  8  0.574  3.59  #>  9  0.285  0.852 #> 10 -1.13   0.358 #> # ℹ 190 more rows  # return recipe umap_recipe <- tof_reduce_umap(tof_tibble = sim_data, return_recipe = TRUE) #> Found more than one class \"dist\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘spam’ #> Found more than one class \"dist\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘spam’  # apply recipe to new data recipes::bake(umap_recipe, new_data = new_data) #> # A tibble: 50 × 2 #>     UMAP1  UMAP2 #>     <dbl>  <dbl> #>  1  2.15  -0.696 #>  2 -0.126  2.42  #>  3  1.82  -2.57  #>  4  3.10   0.605 #>  5 -1.65  -0.764 #>  6 -0.548 -3.67  #>  7  1.88   1.71  #>  8  0.136  2.94  #>  9 -2.01  -0.272 #> 10 -0.986  4.87  #> # ℹ 40 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_set_panel.html","id":null,"dir":"Reference","previous_headings":"","what":"Set panel information from a tof_tibble — tof_set_panel","title":"Set panel information from a tof_tibble — tof_set_panel","text":"Set panel information tof_tibble","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_set_panel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set panel information from a tof_tibble — tof_set_panel","text":"","code":"tof_set_panel(tof_tibble, panel)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_set_panel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set panel information from a tof_tibble — tof_set_panel","text":"tof_tibble `tof_tbl`. panel tibble containing two columns (`metals` `antigens`) representing information panel","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_set_panel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set panel information from a tof_tibble — tof_set_panel","text":"`tof_tibble` containing information CyTOF panel used data acquisition data contained input `tof_tibble`. Two columns required: \"metals\" \"antigens\".","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_set_panel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set panel information from a tof_tibble — tof_set_panel","text":"","code":"# get current panel from an .fcs file input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]] tof_tibble <- tof_read_data(input_file) current_panel <- tof_get_panel(tof_tibble)  # create a new panel (remove empty channels) new_panel <- dplyr::filter(current_panel, antigens != \"empty\") tof_set_panel(tof_tibble = tof_tibble, panel = new_panel) #> # A tibble: 100 × 59 #>         Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>        <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1 11021370            16       517.         1.33          13.2           865. #>  2  7112446.           19       850.         3.99          12.7           756. #>  3  9722098            16       747.         6.96           4.85          639. #>  4  2267279.           16       585.         0.648          6.32          586. #>  5  9624729            18       773.         3.93           9.65          645. #>  6  4439897            19       485.         4.18           3.84          627. #>  7  2762526.           16       504.         3.46           4.25          566. #>  8  3746682.           18       567.         6.62          11.7           703. #>  9 15214280            19      1043.         3.10           9.20          853. #> 10    42699.           16       543.         0.888         13.6           813. #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_spade_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate cells' local densities as done in Spanning-tree Progression Analysis of Density-normalized Events (SPADE) — tof_spade_density","title":"Estimate cells' local densities as done in Spanning-tree Progression Analysis of Density-normalized Events (SPADE) — tof_spade_density","text":"function uses algorithm described Qiu et al., (2011) estimate local density cell `tof_tbl` `tibble` containing high-dimensional cytometry data. Briefly, algorithm involves counting number neighboring cells within  sphere radius alpha surrounding cell. , using nn2 function.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_spade_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate cells' local densities as done in Spanning-tree Progression Analysis of Density-normalized Events (SPADE) — tof_spade_density","text":"","code":"tof_spade_density(   tof_tibble,   distance_cols = where(tof_is_numeric),   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\"),   num_alpha_cells = 2000L,   alpha_multiplier = 5,   max_neighbors = round(0.01 * nrow(tof_tibble)),   normalize = TRUE,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_spade_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate cells' local densities as done in Spanning-tree Progression Analysis of Density-normalized Events (SPADE) — tof_spade_density","text":"tof_tibble `tof_tbl` `tibble`. distance_cols Unquoted names columns `tof_tibble` use calculating cell--cell distances local density estimation cell. Defaults numeric columns `tof_tibble`. distance_function string indicating distance function use calculating cell--cell distances local density estimation. Options include \"euclidean\" (default) \"cosine\". num_alpha_cells integer indicating many cells `tof_tibble` randomly sampled `tof_tibble` order estimate `alpha`, radius sphere constructed around cell local density estimation. Alpha calculated taking median nearest-neighbor distance `num_alpha_cells` randomly-sampled cells multiplying `alpha_multiplier`. Defaults 2000. alpha_multiplier numeric value indicating multiplier used calculating `alpha`, radius sphere constructed around cell local density estimation. Alpha calculated taking median nearest-neighbor distance `num_alpha_cells` cells randomly-sampled `tof_tibble` multiplying `alpha_multiplier`. Defaults 5. max_neighbors integer indicating maximum number neighbors can counted within sphere surrounding given cell. Implemented reduce density estimation procedure's speed memory requirements. Defaults 1% number rows `tof_tibble`. normalize boolean value indicating vector local density estimates normalized values 0 1. Defaults TRUE. ... Additional optional arguments pass tof_find_knn.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_spade_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate cells' local densities as done in Spanning-tree Progression Analysis of Density-normalized Events (SPADE) — tof_spade_density","text":"tibble single column named \".spade_density\" containing local density estimates input cell `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_spade_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate cells' local densities as done in Spanning-tree Progression Analysis of Density-normalized Events (SPADE) — tof_spade_density","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  # perform the density estimation tof_spade_density(tof_tibble = sim_data) #> # A tibble: 1,000 × 1 #>    .spade_density #>             <dbl> #>  1              1 #>  2              1 #>  3              1 #>  4              1 #>  5              1 #>  6              1 #>  7              1 #>  8              1 #>  9              1 #> 10              1 #> # ℹ 990 more rows  # perform the density estimation using cosine distance tof_spade_density(     tof_tibble = sim_data,     distance_function = \"cosine\",     alpha_multiplier = 2 ) #> # A tibble: 1,000 × 1 #>    .spade_density #>             <dbl> #>  1          0.444 #>  2          0.111 #>  3          0     #>  4          0.333 #>  5          0.444 #>  6          0.111 #>  7          0.111 #>  8          0.222 #>  9          0     #> 10          0.222 #> # ℹ 990 more rows  # perform the density estimation with a smaller search radius around # each cell tof_spade_density(     tof_tibble = sim_data,     alpha_multiplier = 2 ) #> # A tibble: 1,000 × 1 #>    .spade_density #>             <dbl> #>  1            0.5 #>  2            0   #>  3            1   #>  4            1   #>  5            0   #>  6            1   #>  7            1   #>  8            0.6 #>  9            0.1 #> 10            0.9 #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Split high-dimensional cytometry data into a training and test set — tof_split_data","title":"Split high-dimensional cytometry data into a training and test set — tof_split_data","text":"Split high-dimensional cytometry data training test set","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split high-dimensional cytometry data into a training and test set — tof_split_data","text":"","code":"tof_split_data(   feature_tibble,   split_method = c(\"k-fold\", \"bootstrap\", \"simple\"),   split_col,   simple_prop = 3/4,   num_cv_folds = 10,   num_cv_repeats = 1L,   num_bootstraps = 10,   strata = NULL,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split high-dimensional cytometry data into a training and test set — tof_split_data","text":"feature_tibble tibble row represents sample- patient- level observation, produced tof_extract_features. split_method Either string logical vector specifying perform split. string, valid options include k-fold cross validation (\"k-fold\"; default), bootstrapping (\"bootstrap\"), single binary split (\"simple\"). logical vector, contain one entry row `feature_tibble` indicating row included training set (TRUE) excluded validation/test set (FALSE). Ignored entirely `split_col` specified. split_col unquoted column name logical column `feature_tibble` indicating row included training set (TRUE) excluded validation/test set (FALSE). simple_prop numeric value 0 1 indicating proportion data used training. Defaults 3/4. Ignored split_method \"simple\". num_cv_folds integer indicating many cross-validation folds used. Defaults 10. Ignored split_method \"k-fold\". num_cv_repeats integer indicating many independent cross-validation replicates used (.e. many num_cv_fold splits performed). Defaults 1. Ignored split_method \"k-fold\". num_bootstraps integer indicating many independent bootstrap replicates used. Defaults 25. Ignored split_method \"bootstrap\". strata unquoted column name representing column feature_tibble used stratify data splitting. Defaults NULL (stratification). ... Optional additional arguments pass vfold_cv k-fold cross validation, bootstraps bootstrapping, initial_split simple splitting.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split high-dimensional cytometry data into a training and test set — tof_split_data","text":"k-fold cross validation bootstrapping, \"rset\" object; simple splitting, \"rsplit\" object. details, see rsample.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split high-dimensional cytometry data into a training and test set — tof_split_data","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 50), rep(1, times = 50)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  # split the dataset into 10 CV folds tof_split_data(     feature_tibble = feature_tibble,     split_method = \"k-fold\" ) #> #  10-fold cross-validation  #> # A tibble: 10 × 2 #>    splits          id     #>    <list>          <chr>  #>  1 <split [90/10]> Fold01 #>  2 <split [90/10]> Fold02 #>  3 <split [90/10]> Fold03 #>  4 <split [90/10]> Fold04 #>  5 <split [90/10]> Fold05 #>  6 <split [90/10]> Fold06 #>  7 <split [90/10]> Fold07 #>  8 <split [90/10]> Fold08 #>  9 <split [90/10]> Fold09 #> 10 <split [90/10]> Fold10  # split the dataset into 10 bootstrap resamplings tof_split_data(     feature_tibble = feature_tibble,     split_method = \"bootstrap\" ) #> # Bootstrap sampling  #> # A tibble: 10 × 2 #>    splits           id          #>    <list>           <chr>       #>  1 <split [100/36]> Bootstrap01 #>  2 <split [100/41]> Bootstrap02 #>  3 <split [100/42]> Bootstrap03 #>  4 <split [100/38]> Bootstrap04 #>  5 <split [100/36]> Bootstrap05 #>  6 <split [100/34]> Bootstrap06 #>  7 <split [100/40]> Bootstrap07 #>  8 <split [100/40]> Bootstrap08 #>  9 <split [100/36]> Bootstrap09 #> 10 <split [100/38]> Bootstrap10  # split the dataset into a single training/test set # stratified by the \"class\" column tof_split_data(     feature_tibble = feature_tibble,     split_method = \"simple\",     strata = class ) #> <Training/Testing/Total> #> <74/26/100>"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_tidytof_reduced_dimensions.html","id":null,"dir":"Reference","previous_headings":"","what":"Split the dimensionality reduction data that tidytof combines during SingleCellExperiment conversion — tof_split_tidytof_reduced_dimensions","title":"Split the dimensionality reduction data that tidytof combines during SingleCellExperiment conversion — tof_split_tidytof_reduced_dimensions","text":"Split dimensionality reduction data tidytof combines SingleCellExperiment conversion","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_tidytof_reduced_dimensions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split the dimensionality reduction data that tidytof combines during SingleCellExperiment conversion — tof_split_tidytof_reduced_dimensions","text":"","code":"tof_split_tidytof_reduced_dimensions(sce)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_tidytof_reduced_dimensions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split the dimensionality reduction data that tidytof combines during SingleCellExperiment conversion — tof_split_tidytof_reduced_dimensions","text":"sce SingleCellExperiment entry named \"tidytof_reduced_dimensions\" reducedDims slot.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_tidytof_reduced_dimensions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split the dimensionality reduction data that tidytof combines during SingleCellExperiment conversion — tof_split_tidytof_reduced_dimensions","text":"SingleCellExperiment separate entries named \"tidytof_pca\", \"tidytof_umap\", \"tidytof_tsne\" reducedDims slots (one dimensionality reduction methods tidytof native support).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_tidytof_reduced_dimensions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split the dimensionality reduction data that tidytof combines during SingleCellExperiment conversion — tof_split_tidytof_reduced_dimensions","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_train_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Train an elastic net model to predict sample-level phenomena using high-dimensional cytometry data. — tof_train_model","title":"Train an elastic net model to predict sample-level phenomena using high-dimensional cytometry data. — tof_train_model","text":"function uses training set/test set paradigm tune fit elastic net model using variety user-specified details. Tuning can performed using either simple training vs. test set split, k-fold cross-validation, bootstrapping, multiple preprocessing options available.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_train_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Train an elastic net model to predict sample-level phenomena using high-dimensional cytometry data. — tof_train_model","text":"","code":"tof_train_model(   split_data,   unsplit_data,   predictor_cols,   response_col = NULL,   time_col = NULL,   event_col = NULL,   model_type = c(\"linear\", \"two-class\", \"multiclass\", \"survival\"),   hyperparameter_grid = tof_create_grid(),   standardize_predictors = TRUE,   remove_zv_predictors = FALSE,   impute_missing_predictors = FALSE,   optimization_metric = \"tidytof_default\",   best_model_type = c(\"best\", \"best with sparsity\"),   num_cores = 1 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_train_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Train an elastic net model to predict sample-level phenomena using high-dimensional cytometry data. — tof_train_model","text":"split_data `rsplit` `rset` object rsample package containing sample-level data use modeling. easiest way generate use tof_split_data. unsplit_data tibble containing sample-level data use modeling without resampling. using resampling method advised, argument provides interface fit model without using cross-validation bootstrap resampling. Ignored split_data provided. predictor_cols Unquoted column names indicating columns data contained `split_data` used predictors elastic net model. Supports tidyselect helpers. response_col Unquoted column name indicating column data contained `split_data` used outcome \"two-class\", \"multiclass\", \"linear\" elastic net model. Must factor \"two-class\" \"multiclass\" models must numeric \"linear\" models. Ignored `model_type` \"survival\". time_col Unquoted column name indicating column data contained `split_data` represents time--event outcome \"survival\" elastic net model. Must numeric. Ignored `model_type` \"two-class\", \"multiclass\", \"linear\". event_col Unquoted column name indicating column data contained `split_data` represents time--event outcome \"survival\" elastic net model. Must binary column - values either 0 1 (1 indicating adverse event) FALSE TRUE (TRUE indicating adverse event). Ignored `model_type` \"two-class\", \"multiclass\", \"linear\". model_type string indicating kind elastic net model build. continuous response predicted, use \"linear\" linear regression; categorical response 2 classes predicted, use \"two-class\" logistic regression; categorical response 2 levels predicted, use \"multiclass\" multinomial regression; time--event outcome predicted, use \"survival\" Cox regression. hyperparameter_grid hyperparameter grid indicating values elastic net penalty (lambda) elastic net mixture (alpha) hyperparamters used model tuning. Generate grid using tof_create_grid. standardize_predictors logical value indicating numeric predictor columns standardized (centered scaled) model fitting, standard practice elastic net regularization. Defaults TRUE. remove_zv_predictors logical value indicating predictor columns near-zero variance removed model fitting using step_nzv. Defaults FALSE. impute_missing_predictors logical value indicating predictor columns missing values imputed using k-nearest neighbors model fitting (see step_impute_knn). Imputation performed using observation's 5 nearest-neighbors. Defaults FALSE. optimization_metric string indicating optimization metric used hyperparameter selection model tuning. Valid values depend model_type. \"linear\" models, choices \"mse\" (mean squared error predictions; default) \"mae\" (mean absolute error predictions). \"two-class\" models, choices \"roc_auc\" (area Receiver-Operating Curve classification; default), \"misclassification error\" (proportion misclassified observations), \"binomial_deviance\" (see deviance.glmnet), \"mse\" (mean squared error logit function), \"mae\" (mean absolute error logit function). \"multiclass\" models, choices \"roc_auc\" (area Receiver-Operating Curve classification using Hand-Till generalization ROC AUC multiclass models roc_auc; default), \"misclassification error\" (proportion misclassified observations), \"multinomial_deviance\" (see deviance.glmnet), \"mse\" \"mae\" . \"survival\" models, choices \"concordance_index\" (Harrel's C index; see deviance.glmnet) \"partial_likelihood_deviance\" (see deviance.glmnet). best_model_type Currently unused. num_cores Integer indicating many cores used parallel processing fitting multiple models. Defaults 1. Overhead separate models across multiple cores can high, significant speedup unlikely observed unless many large models fit.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_train_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Train an elastic net model to predict sample-level phenomena using high-dimensional cytometry data. — tof_train_model","text":"`tof_model`, S3 class includes elastic net model best performance (assessed via cross-validation, bootstrapping, simple splitting depending `split_data`) across tested hyperparameter value combinations. `tof_models` store following information: model final elastic net (\"glmnet\") model, chosen selecting elastic net hyperparameters best `optimization_metric` performance validation sets resample used train model (average) recipe recipe used data preprocessing mixture optimal mixture hyperparameter (alpha) glmnet model penalty optimal penalty hyperparameter (lambda) glmnet model model_type string indicating type glmnet model fit outcome_colnames character vector representing names columns training data modeled outcome variables training_data tibble containing (preprocessed) data used train model tuning_metrics tibble containing validation set performance metrics (model predictions) resample fold model tuning. log_rank_thresholds survival models , tibble containing information relative-risk thresholds can used split training data 2 risk groups (low- high-risk) based final model's predictions. relative-risk threshold, log-rank test p-value indicator threshold gives significant separation provided. best_log_rank_threshold survival models , numeric value representing relative-risk threshold yields significant log-rank test separating training data low- high-risk groups.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_train_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Train an elastic net model to predict sample-level phenomena using high-dimensional cytometry data. — tof_train_model","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model tof_train_model(     split_data = split_data,     predictor_cols = c(cd45, pstat5, cd34),     response_col = outcome,     model_type = \"linear\" ) #> A linear `tof_model` with a mixture parameter (alpha) of 0 and a penalty parameter (lambda) of 1e-10  #> # A tibble: 4 × 2 #>   feature     coefficient #>   <chr>             <dbl> #> 1 (Intercept)      3.50   #> 2 pstat5           1.22   #> 3 cd45             0.817  #> 4 cd34            -0.0478  # train a logistic regression classifier tof_train_model(     split_data = split_data,     predictor_cols = c(cd45, pstat5, cd34),     response_col = class,     model_type = \"two-class\" ) #> A two-class `tof_model` with a mixture parameter (alpha) of 0 and a penalty parameter (lambda) of 1e+00  #> # A tibble: 4 × 2 #>   feature     coefficient #>   <chr>             <dbl> #> 1 pstat5       -0.243     #> 2 cd45         -0.170     #> 3 cd34         -0.00919   #> 4 (Intercept)  -0.0000847  # train a cox regression survival model tof_train_model(     split_data = split_data,     predictor_cols = c(cd45, pstat5, cd34),     time_col = time_to_event,     event_col = event,     model_type = \"survival\" ) #> A survival `tof_model` with a mixture parameter (alpha) of 1 and a penalty parameter (lambda) of 1e+00  #> # A tibble: 0 × 2 #> # ℹ 2 variables: feature <chr>, coefficient <dbl>"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_transform.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform raw high-dimensional cytometry data. — tof_transform","title":"Transform raw high-dimensional cytometry data. — tof_transform","text":"function transforms `tof_tbl` raw ion counts, reads, fluorescence intensity units directly measured cytometer using user-provided function.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_transform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform raw high-dimensional cytometry data. — tof_transform","text":"","code":"tof_transform(   tof_tibble = NULL,   channel_cols = where(tof_is_numeric),   transform_fun )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_transform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform raw high-dimensional cytometry data. — tof_transform","text":"tof_tibble `tof_tbl` `tibble`. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. nothing specified, default transform numeric columns. transform_fun vectorized function apply protein value variance stabilization.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_transform.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform raw high-dimensional cytometry data. — tof_transform","text":"`tof_tbl` identical dimensions input `tof_tibble`, columns specified channel_cols transformed using `transform_fun`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_transform.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform raw high-dimensional cytometry data. — tof_transform","text":"","code":"# read in an example .fcs file from tidytof's internal datasets input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]] tof_tibble <- tof_read_data(input_file)  # preprocess all numeric columns with default behavior # arcsinh transformation with a cofactor of 5 tof_preprocess(tof_tibble) #> # A tibble: 100 × 59 #>     Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>    <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1 15.3          1.88       5.33         0.263         1.70           5.85 #>  2 14.9          2.05       5.83         0.731         1.67           5.71 #>  3 15.2          1.88       5.70         1.13          0.861          5.54 #>  4 13.7          1.88       5.45         0.129         1.06           5.46 #>  5 15.2          1.99       5.73         0.721         1.41           5.55 #>  6 14.4          2.05       5.27         0.760         0.708          5.52 #>  7 13.9          1.88       5.31         0.645         0.771          5.42 #>  8 14.2          1.99       5.42         1.09          1.58           5.64 #>  9 15.6          2.05       6.03         0.586         1.37           5.83 #> 10  9.75         1.88       5.38         0.177         1.73           5.78 #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …  # preprocess all numeric columns using the log base 10 tranformation tof_preprocess(tof_tibble, transform_fun = log10) #> # A tibble: 100 × 59 #>     Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>    <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1  7.04         1.20       2.71        0.125          1.12           2.94 #>  2  6.85         1.28       2.93        0.601          1.11           2.88 #>  3  6.99         1.20       2.87        0.843          0.686          2.81 #>  4  6.36         1.20       2.77       -0.189          0.800          2.77 #>  5  6.98         1.26       2.89        0.594          0.984          2.81 #>  6  6.65         1.28       2.69        0.621          0.584          2.80 #>  7  6.44         1.20       2.70        0.539          0.628          2.75 #>  8  6.57         1.26       2.75        0.821          1.07           2.85 #>  9  7.18         1.28       3.02        0.491          0.964          2.93 #> 10  4.63         1.20       2.74       -0.0515         1.13           2.91 #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_tune_glmnet.html","id":null,"dir":"Reference","previous_headings":"","what":"Tune an elastic net model's hyperparameters over multiple resamples — tof_tune_glmnet","title":"Tune an elastic net model's hyperparameters over multiple resamples — tof_tune_glmnet","text":"Tune elastic net model's hyperparameters multiple resamples","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_tune_glmnet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tune an elastic net model's hyperparameters over multiple resamples — tof_tune_glmnet","text":"","code":"tof_tune_glmnet(   split_data,   prepped_recipe,   hyperparameter_grid,   model_type,   outcome_cols,   optimization_metric = \"tidytof_default\",   num_cores = 1 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_tune_glmnet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tune an elastic net model's hyperparameters over multiple resamples — tof_tune_glmnet","text":"split_data `rsplit` `rset` object rsample package. easiest way generate use tof_split_data. Alternatively, unsplit tbl_df can provided, though recommended. prepped_recipe Either single recipe object (`split_data` `rsplit` object `tbl_df`) list recipes (`split_data` `rset` object) entry list corresponds resample `split_data`. hyperparameter_grid hyperparameter grid indicating values elastic net penalty (lambda) elastic net mixture (alpha) hyperparameters used model tuning. Generate grid using tof_create_grid. model_type string indicating kind elastic net model build. continuous response predicted, use \"linear\" linear regression; categorical response 2 classes predicted, use \"two-class\" logistic regression; categorical response 2 levels predicted, use \"multiclass\" multinomial regression; time--event outcome predicted, use \"survival\" Cox regression. outcome_cols Unquoted column name(s) indicating column(s) data contained `split_data` used outcome elastic net model. survival models, two columns selected; others, one column selected. optimization_metric string indicating optimization metric used hyperparameter selection model tuning. Valid values depend model_type. num_cores Integer indicating many cores used parallel processing fitting multiple models. Defaults 1. Overhead separate models across multiple cores can high, significant speedup unlikely observed unless many large models fit.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_tune_glmnet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tune an elastic net model's hyperparameters over multiple resamples — tof_tune_glmnet","text":"tibble containing summary model's performance resampling iteration across hyperparameter combinations. contain 3 columns: \"splits\" (list-col containing resampling iteration's `rsplit` object), \"id\" (name resampling iteration), \"performance_metrics\" (list-col containing performance metrics resampling iteration. row \"performance_metrics\" tibble columns \"mixture\" \"penalty\" several additional columns containing performance metrics model mixture/penalty combination). See tof_fit_split additional details.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample.html","id":null,"dir":"Reference","previous_headings":"","what":"Upsample cells into the closest cluster in a reference dataset — tof_upsample","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample","text":"function performs distance-based upsampling CyTOF data sorting single cells (passed function `tof_tibble`) phenotypically similar cell subpopulation reference dataset (passed function `reference_tibble`). calculating distance (either mahalanobis, cosine, pearson) cell `tof_tibble` centroid cluster `reference_tibble`, sorting cells cluster corresponding closest centroid.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample","text":"","code":"tof_upsample(   tof_tibble,   reference_tibble,   reference_cluster_col,   upsample_cols = where(tof_is_numeric),   ...,   augment = TRUE,   method = c(\"distance\", \"neighbor\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample","text":"tof_tibble `tibble` `tof_tbl` containing cells upsampled nearest reference subpopulation. reference_tibble `tibble` `tof_tibble` containing cells already clustered manually gated subpopulations. reference_cluster_col unquoted column name indicating column `reference_tibble` contains subpopulation label (cluster id) cell `reference_tibble`. upsample_cols Unquoted column names indicating columns `tof_tibble` use computing distances used upsampling. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. ... Additional arguments pass `tof_upsample_*` function family member corresponding chosen method. augment boolean value indicating output column-bind cluster ids cell new column `tof_tibble` (TRUE, default) single-column tibble including cluster ids returned (FALSE). method string indicating clustering methods used. Valid values include \"distance\" (default) \"neighbor\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample","text":"`tof_tbl` `tibble` augment = FALSE, single column encoding upsampled cluster ids cell `tof_tibble`. augment = TRUE, ncol(tof_tibble) + 1 columns: (unaltered) columns `tof_tibble` plus additional column encoding cluster ids.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample","text":"","code":"# simulate single-cell data (and reference data with clusters to upsample # into sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     ) reference_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200),         cluster_id = c(rep(\"a\", times = 100), rep(\"b\", times = 100))     )  # upsample using distance to cluster centroids tof_upsample(     tof_tibble = sim_data,     reference_tibble = reference_data,     reference_cluster_col = cluster_id,     method = \"distance\" ) #> # A tibble: 1,000 × 5 #>      cd45    cd38    cd34    cd19 .upsample_cluster #>     <dbl>   <dbl>   <dbl>   <dbl> <chr>             #>  1 -0.189 -0.0149 -1.61    0.492  a                 #>  2 -0.262 -2.52    0.203  -0.381  a                 #>  3  0.660 -0.235   0.357  -0.602  a                 #>  4 -0.182  0.633   0.950   0.699  b                 #>  5  0.459 -1.48    0.180   0.102  a                 #>  6  0.853 -0.600  -0.0910 -0.0597 a                 #>  7 -1.35  -1.02    1.27   -0.810  a                 #>  8 -1.01   1.49    0.0191 -0.392  b                 #>  9 -1.07  -0.947   1.42    0.484  a                 #> 10  0.131  0.548   0.614   0.873  b                 #> # ℹ 990 more rows  # upsample using distance to nearest neighbor tof_upsample(     tof_tibble = sim_data,     reference_tibble = reference_data,     reference_cluster_col = cluster_id,     method = \"neighbor\" ) #> # A tibble: 1,000 × 5 #>      cd45    cd38    cd34    cd19 .upsample_cluster #>     <dbl>   <dbl>   <dbl>   <dbl> <chr>             #>  1 -0.189 -0.0149 -1.61    0.492  b                 #>  2 -0.262 -2.52    0.203  -0.381  b                 #>  3  0.660 -0.235   0.357  -0.602  b                 #>  4 -0.182  0.633   0.950   0.699  b                 #>  5  0.459 -1.48    0.180   0.102  a                 #>  6  0.853 -0.600  -0.0910 -0.0597 a                 #>  7 -1.35  -1.02    1.27   -0.810  a                 #>  8 -1.01   1.49    0.0191 -0.392  b                 #>  9 -1.07  -0.947   1.42    0.484  b                 #> 10  0.131  0.548   0.614   0.873  b                 #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_distance.html","id":null,"dir":"Reference","previous_headings":"","what":"Upsample cells into the closest cluster in a reference dataset — tof_upsample_distance","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample_distance","text":"function performs distance-based upsampling CyTOF data sorting single cells (passed function `tof_tibble`) phenotypically similar cell subpopulation reference dataset (passed function `reference_tibble`). calculating distance (either mahalanobis, cosine, pearson) cell `tof_tibble` centroid cluster `reference_tibble`, sorting cells cluster corresponding closest centroid.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample_distance","text":"","code":"tof_upsample_distance(   tof_tibble,   reference_tibble,   reference_cluster_col,   upsample_cols = where(tof_is_numeric),   parallel_cols,   distance_function = c(\"mahalanobis\", \"cosine\", \"pearson\"),   num_cores = 1L,   return_distances = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_distance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample_distance","text":"tof_tibble `tibble` `tof_tbl` containing cells upsampled nearest reference subpopulation. reference_tibble `tibble` `tof_tibble` containing cells already clustered manually gated subpopulations. reference_cluster_col unquoted column name indicating column `reference_tibble` contains subpopulation label (cluster id) cell `reference_tibble`. upsample_cols Unquoted column names indicating columns `tof_tibble` use computing distances used upsampling. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. parallel_cols Optional. Unquoted column names indicating columns `tof_tibble` use breaking data order parallelize upsampling using `foreach` `doParallel` backend. Supports tidyselect helpers. distance_function string indicating distance function used perform upsampling. Options \"mahalanobis\" (default), \"cosine\", \"pearson\". num_cores integer indicating number CPU cores used parallelize classification. Defaults 1 (single core). return_distances boolean value indicating whether returned result include one column, cluster ids corresponding row `tof_tibble` (return_distances = FALSE, default), returned result include additional columns representing distance row `tof_tibble` reference subpopulation centroids (return_distances = TRUE).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_distance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample_distance","text":"`return_distances = FALSE`, tibble one column named `.upsample_cluster`, character vector length `nrow(tof_tibble)` indicating id reference cluster cell (.e. row) `tof_tibble` assigned. `return_distances = TRUE`, tibble `nrow(tof_tibble)` rows num_clusters + 1 columns, num_clusters number clusters `reference_tibble`. row represents cell `tof_tibble`, num_clusters columns represent distance cell reference subpopulations' cluster centroids. final column represents cluster id reference subpopulation minimum distance cell represented row.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_distance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample_distance","text":"","code":"# simulate single-cell data (and reference data with clusters to upsample # into sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  reference_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200),         cluster_id = c(rep(\"a\", times = 100), rep(\"b\", times = 100))     )  # upsample using mahalanobis distance tof_upsample_distance(     tof_tibble = sim_data,     reference_tibble = reference_data,     reference_cluster_col = cluster_id ) #> # A tibble: 1,000 × 1 #>    .upsample_cluster #>    <chr>             #>  1 a                 #>  2 a                 #>  3 a                 #>  4 a                 #>  5 b                 #>  6 a                 #>  7 a                 #>  8 b                 #>  9 a                 #> 10 a                 #> # ℹ 990 more rows  # upsample using cosine distance tof_upsample_distance(     tof_tibble = sim_data,     reference_tibble = reference_data,     reference_cluster_col = cluster_id,     distance_function = \"cosine\" ) #> # A tibble: 1,000 × 1 #>    .upsample_cluster #>    <chr>             #>  1 a                 #>  2 a                 #>  3 b                 #>  4 a                 #>  5 b                 #>  6 b                 #>  7 b                 #>  8 a                 #>  9 a                 #> 10 b                 #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_neighbor.html","id":null,"dir":"Reference","previous_headings":"","what":"Upsample cells into the cluster of their nearest neighbor a reference dataset — tof_upsample_neighbor","title":"Upsample cells into the cluster of their nearest neighbor a reference dataset — tof_upsample_neighbor","text":"function performs upsampling CyTOF data sorting single cells (passed function `tof_tibble`) phenotypically similar cell subpopulation reference dataset (passed function `reference_tibble`). finding cell `tof_tibble`'s nearest neighbor `reference_tibble` assigning cluster nearest neighbor belongs. nearest neighbor calculation can performed either euclidean cosine distance.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_neighbor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upsample cells into the cluster of their nearest neighbor a reference dataset — tof_upsample_neighbor","text":"","code":"tof_upsample_neighbor(   tof_tibble,   reference_tibble,   reference_cluster_col,   upsample_cols = where(tof_is_numeric),   num_neighbors = 1L,   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_neighbor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upsample cells into the cluster of their nearest neighbor a reference dataset — tof_upsample_neighbor","text":"tof_tibble `tibble` `tof_tbl` containing cells upsampled nearest reference subpopulation. reference_tibble `tibble` `tof_tibble` containing cells already clustered manually gated subpopulations. reference_cluster_col unquoted column name indicating column `reference_tibble` contains subpopulation label (cluster id) cell `reference_tibble`. upsample_cols Unquoted column names indicating columns `tof_tibble` use computing distances used upsampling. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. num_neighbors integer indicating many neighbors used nearest neighbor calculation. Clusters assigned based majority vote. distance_function string indicating distance function used perform upsampling. Options \"euclidean\" (default) \"cosine\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_neighbor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Upsample cells into the cluster of their nearest neighbor a reference dataset — tof_upsample_neighbor","text":"tibble one column named `.upsample_cluster`, character vector length `nrow(tof_tibble)` indicating id reference cluster cell (.e. row) `tof_tibble` assigned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_neighbor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Upsample cells into the cluster of their nearest neighbor a reference dataset — tof_upsample_neighbor","text":"","code":"# simulate single-cell data (and reference data with clusters to upsample # into sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  reference_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200),         cluster_id = c(rep(\"a\", times = 100), rep(\"b\", times = 100))     )  # upsample using euclidean distance tof_upsample_neighbor(     tof_tibble = sim_data,     reference_tibble = reference_data,     reference_cluster_col = cluster_id ) #> # A tibble: 1,000 × 1 #>    .upsample_cluster #>    <chr>             #>  1 a                 #>  2 b                 #>  3 b                 #>  4 a                 #>  5 b                 #>  6 b                 #>  7 a                 #>  8 b                 #>  9 b                 #> 10 b                 #> # ℹ 990 more rows  # upsample using cosine distance tof_upsample_neighbor(     tof_tibble = sim_data,     reference_tibble = reference_data,     reference_cluster_col = cluster_id,     distance_function = \"cosine\" ) #> # A tibble: 1,000 × 1 #>    .upsample_cluster #>    <chr>             #>  1 a                 #>  2 b                 #>  3 a                 #>  4 a                 #>  5 b                 #>  6 b                 #>  7 b                 #>  8 a                 #>  9 b                 #> 10 a                 #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a series of .csv files from a tof_tbl — tof_write_csv","title":"Write a series of .csv files from a tof_tbl — tof_write_csv","text":"function takes given `tof_tbl` writes single-cell data contains .csv files within directory located `out_path`. `group_cols` argument specifies rows `tof_tbl` (cell) broken separate .csv files","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a series of .csv files from a tof_tbl — tof_write_csv","text":"","code":"tof_write_csv(tof_tibble, group_cols, out_path, sep = \"_\", file_name)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a series of .csv files from a tof_tbl — tof_write_csv","text":"tof_tibble `tof_tbl` `tibble`. group_cols Optional. Unquoted names columns `tof_tibble` used group cells separate files. Supports tidyselect helpers. Defaults NULL (cells written single file). out_path system path indicating directory output .csv files saved. directory exist, created. sep Delimiter used values `group_cols` create output .csv file names. Defaults \"_\". file_name `group_cols` specified, name (without extension) used saved .csv file.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_csv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write a series of .csv files from a tof_tbl — tof_write_csv","text":"function return anything. Instead, side-effect saving .csv files `out_path`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Write high-dimensional cytometry data to a file or to a directory of files — tof_write_data","title":"Write high-dimensional cytometry data to a file or to a directory of files — tof_write_data","text":"Write data (form `tof_tbl`) either .csv .fcs file storage.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write high-dimensional cytometry data to a file or to a directory of files — tof_write_data","text":"","code":"tof_write_data(   tof_tibble = NULL,   group_cols,   out_path = NULL,   format = c(\"fcs\", \"csv\"),   sep = \"_\",   file_name )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write high-dimensional cytometry data to a file or to a directory of files — tof_write_data","text":"tof_tibble `tof_tbl` `tibble`. group_cols Optional. Unquoted names columns `tof_tibble` used group cells separate files. Supports tidyselect helpers. Defaults grouping (cells written single file). out_path Path directory output files saved. format format files written. Currently supports .csv .fcs files sep Delimiter used values `group_cols` create output .csv/.fcs file names. Defaults \"_\". file_name `group_cols` specified, name (without extension) used saved file.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write high-dimensional cytometry data to a file or to a directory of files — tof_write_data","text":"function explicitly return values. Instead, writes .csv /.fcs files specified `out_path`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write high-dimensional cytometry data to a file or to a directory of files — tof_write_data","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_fcs.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a series of .fcs files from a tof_tbl — tof_write_fcs","title":"Write a series of .fcs files from a tof_tbl — tof_write_fcs","text":"function takes given `tof_tbl` writes single-cell data contains .fcs files within directory located `out_path`. `group_cols` argument specifies rows `tof_tbl` (cell) broken separate .fcs files","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_fcs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a series of .fcs files from a tof_tbl — tof_write_fcs","text":"","code":"tof_write_fcs(tof_tibble, group_cols, out_path, sep = \"_\", file_name)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_fcs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a series of .fcs files from a tof_tbl — tof_write_fcs","text":"tof_tibble `tof_tbl` `tibble`. group_cols Unquoted names columns `tof_tibble` used group cells separate files. Supports tidyselect helpers. Defaults NULL (cells written single file). out_path system path indicating directory output .csv files saved. directory exist, created. sep Delimiter used values `group_cols` create output .fcs file names. Defaults \"_\". file_name `group_cols` specified, name (without extension) used saved .csv file.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_fcs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write a series of .fcs files from a tof_tbl — tof_write_fcs","text":"function return anything. Instead, side-effect saving .fcs files `out_path`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_fcs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write a series of .fcs files from a tof_tbl — tof_write_fcs","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":null,"dir":"Reference","previous_headings":"","what":"Select variables with a function — where","title":"Select variables with a function — where","text":"copy , selection helper selects variables predicate function returns TRUE. See  language details tidyselection.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select variables with a function — where","text":"","code":"where(fn)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select variables with a function — where","text":"fn function returns TRUE FALSE (technically, predicate function). Can also purrr-like formula.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select variables with a function — where","text":"predicate can used select columns data.frame.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Select variables with a function — where","text":"help file replicated verbatim tidyselect-package.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Select variables with a function — where","text":"Lionel Henry Hadley Wickham (2021). tidyselect: Select Set Strings. R package version 1.1.1. https://CRAN.R-project.org/package=tidyselect","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select variables with a function — where","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/news/index.html","id":"tidytof-0990","dir":"Changelog","previous_headings":"","what":"tidytof 0.99.0","title":"tidytof 0.99.0","text":"NEW FEATURES Added NEWS.md file track changes package. SIGNIFICANT USER-VISIBLE CHANGES Submitted Bioconductor BUG FIXES None","code":""}]
