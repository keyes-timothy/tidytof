[{"path":"https://keyes-timothy.github.io/tidytof/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to tidytof","title":"Contributing to tidytof","text":"outlines propose change tidytof. detailed info contributing , tidyverse packages, please see development contributing guide.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to tidytof","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to tidytof","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to tidytof","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"keyes-timothy/tidytof\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to tidytof","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to tidytof","text":"Please note tidytof project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2020 Timothy Keyes Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/clustering.html","id":"clustering-with-tof_cluster","dir":"Articles","previous_headings":"","what":"Clustering with tof_cluster()","title":"Clustering and metaclustering","text":"demonstrate, can apply PhenoGraph clustering algorithm tidytof’s built-phenograph_data. Note phenograph_data contains 3000 total cells (1000 3 clusters identified original PhenoGraph publication). demonstration purposes, also metacluster PhenoGraph clusters using k-means clustering. outputs tof_cluster() tof_metacluster() tof_tbl identical input tibble, now addition additional column (case, “.phenograph_cluster” “.kmeans_metacluster”) encodes cluster id cell input tof_tbl. Note output columns added tibble tof_tbl tidytof begin full-stop (“.”) reduce likelihood collisions existing column names. output tof_cluster tof_tbl, can use dplyr’s count method assess accuracy clustering procedure compared original clustering PhenoGraph paper. , can see clustering procedure groups cells PhenoGraph cluster one another (small number mistakes). change clustering algorithm tof_cluster uses, alter method flag. change columns used compute clusters, change cluster_cols flag. finally, want return one-column tibble includes cluster labels (opposed cluster labels added new column input tof_tbl), set augment FALSE.","code":"data(phenograph_data)  set.seed(203L)  phenograph_clusters <-     phenograph_data |>     tof_preprocess() |>     tof_cluster(         cluster_cols = starts_with(\"cd\"),         num_neighbors = 50L,         distance_function = \"cosine\",         method = \"phenograph\"     ) |>     tof_metacluster(         cluster_col = .phenograph_cluster,         metacluster_cols = starts_with(\"cd\"),         num_metaclusters = 3L,         method = \"kmeans\"     )  phenograph_clusters |>     dplyr::select(sample_name, .phenograph_cluster, .kmeans_metacluster) |>     head() #> # A tibble: 6 × 3 #>   sample_name            .phenograph_cluster .kmeans_metacluster #>   <chr>                  <chr>               <chr>               #> 1 H1_PhenoGraph_cluster1 6                   2                   #> 2 H1_PhenoGraph_cluster1 1                   2                   #> 3 H1_PhenoGraph_cluster1 6                   2                   #> 4 H1_PhenoGraph_cluster1 6                   2                   #> 5 H1_PhenoGraph_cluster1 6                   2                   #> 6 H1_PhenoGraph_cluster1 6                   2 phenograph_clusters |>     dplyr::count(phenograph_cluster, .kmeans_metacluster, sort = TRUE) #> # A tibble: 4 × 3 #>   phenograph_cluster .kmeans_metacluster     n #>   <chr>              <chr>               <int> #> 1 cluster2           3                    1000 #> 2 cluster3           1                    1000 #> 3 cluster1           2                     995 #> 4 cluster1           1                       5 # use the kmeans algorithm phenograph_data |>     tof_preprocess() |>     tof_cluster(         cluster_cols = contains(\"cd\"),         method = \"kmeans\"     )  # use the flowsom algorithm phenograph_data |>     tof_preprocess() |>     tof_cluster(         cluster_cols = contains(\"cd\"),         method = \"flowsom\"     ) # will result in a tibble with only 1 column (the cluster labels) phenograph_data |>     tof_preprocess() |>     tof_cluster(         cluster_cols = contains(\"cd\"),         method = \"kmeans\",         augment = FALSE     ) |>     head() #> # A tibble: 6 × 1 #>   .kmeans_cluster #>   <chr>           #> 1 2               #> 2 1               #> 3 19              #> 4 9               #> 5 2               #> 6 9"},{"path":"https://keyes-timothy.github.io/tidytof/articles/clustering.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Clustering and metaclustering","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] dplyr_1.1.4    tidytof_0.99.0 #>  #> loaded via a namespace (and not attached): #>   [1] tidyselect_1.2.0    viridisLite_0.4.2   timeDate_4032.109   #>   [4] farver_2.1.1        viridis_0.6.5       ggraph_2.2.1        #>   [7] fastmap_1.1.1       tweenr_2.0.3        rpart_4.1.23        #>  [10] digest_0.6.34       timechange_0.3.0    lifecycle_1.0.4     #>  [13] yardstick_1.3.0     survival_3.5-8      magrittr_2.0.3      #>  [16] compiler_4.3.3      rlang_1.1.3         sass_0.4.8          #>  [19] tools_4.3.3         igraph_2.0.2        utf8_1.2.4          #>  [22] yaml_2.3.8          data.table_1.15.2   knitr_1.45          #>  [25] graphlayouts_1.1.1  withr_3.0.0         purrr_1.0.2         #>  [28] RProtoBufLib_2.14.0 BiocGenerics_0.48.1 desc_1.4.3          #>  [31] nnet_7.3-19         grid_4.3.3          polyclip_1.10-6     #>  [34] stats4_4.3.3        fansi_1.0.6         RcppHNSW_0.6.0      #>  [37] future_1.33.1       colorspace_2.1-0    ggplot2_3.5.0       #>  [40] globals_0.16.3      scales_1.3.0        iterators_1.0.14    #>  [43] MASS_7.3-60.0.1     cli_3.6.2           rmarkdown_2.26      #>  [46] ragg_1.2.7          generics_0.1.3      future.apply_1.11.1 #>  [49] tzdb_0.4.0          cachem_1.0.8        flowCore_2.14.1     #>  [52] ggforce_0.4.2       stringr_1.5.1       splines_4.3.3       #>  [55] parallel_4.3.3      matrixStats_1.2.0   vctrs_0.6.5         #>  [58] hardhat_1.3.1       glmnet_4.1-8        Matrix_1.6-5        #>  [61] jsonlite_1.8.8      cytolib_2.14.1      hms_1.1.3           #>  [64] S4Vectors_0.40.2    ggrepel_0.9.5       listenv_0.9.1       #>  [67] systemfonts_1.0.6   foreach_1.5.2       gower_1.0.1         #>  [70] tidyr_1.3.1         jquerylib_0.1.4     recipes_1.0.10      #>  [73] parallelly_1.37.1   glue_1.7.0          pkgdown_2.0.7       #>  [76] codetools_0.2-19    stringi_1.8.3       lubridate_1.9.3     #>  [79] gtable_0.3.4        shape_1.4.6.1       munsell_0.5.0       #>  [82] tibble_3.2.1        pillar_1.9.0        htmltools_0.5.7     #>  [85] ipred_0.9-14        lava_1.8.0          R6_2.5.1            #>  [88] textshaping_0.3.7   doParallel_1.0.17   tidygraph_1.3.1     #>  [91] evaluate_0.23       Biobase_2.62.0      lattice_0.22-5      #>  [94] readr_2.1.5         memoise_2.0.1       bslib_0.6.1         #>  [97] class_7.3-22        Rcpp_1.0.12         prodlim_2023.08.28  #> [100] gridExtra_2.3       xfun_0.42           fs_1.6.3            #> [103] pkgconfig_2.0.3"},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"general-guidelines","dir":"Articles","previous_headings":"","what":"General Guidelines","title":"How to contribute code","text":"extend tidytof include new algorithm - example, one ’ve just developed - can take 1 2 general strategies (cases, may take !). first write tidytof-style verb algorithm can included standalone package. case, benefit writing tidytof-style verb algorithm taking advantage tidytof’s design schema make algorithm easy users access without learning much () new syntax still allowing maintain code base independently team. second approach write tidytof-style function ’d like team add tidytof next release. case, code review process take bit time, also allow teams collaborate provide greater degree critical feedback one another well share burden code maintenance future. either case, ’re welcome contact tidytof team review code via pull request /issue tidytof GitHub page. tutorial may helpful don’t lot experience collaborating programmers via GitHub. open request, can submit code team reviewed. Whether want method incorporated tidytof ’re simply looking external code review/feedback team, please mention request.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"code-style","dir":"Articles","previous_headings":"","what":"Code style","title":"How to contribute code","text":"tidytof uses tidyverse style guide. Adhering tidyverse style something team expect code incorporated tidytof, ’s also something encourage functions write analysis packages. experience, best code written just executed, also read humans! also many tools can use lint automatically style R code, {lintr} {styler} packages.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"testing","dir":"Articles","previous_headings":"","what":"Testing","title":"How to contribute code","text":"addition written well-styled code, encourage write unit tests every function write. common practice software engineering world, common probably (!) bioinformatics community. tidytof team uses {testthat} package unit tests, ’s great tutorial .","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"general-principles","dir":"Articles","previous_headings":"How to contribute","what":"General principles","title":"How to contribute code","text":"important part writing function extends tidytof adhere tidytof verb syntax. exceptions, tidytof functions follow specific, shared syntax involves 3 types arguments always occur order. argument types follows: almost tidytof functions, first argument data frame (tibble). enables use pipe (|>) multi-step calculations, means first argument functions implicit (passed previous function using pipe). second group arguments called column specifications, end suffix _col _cols. Column specifications unquoted column names tell tidytof verb columns compute particular operation. example, cluster_cols argument tof_cluster allows user specify column input data frames used perform clustering. Regardless verb requires , column specifications support tidyselect helpers follow rules tidyselection tidyverse verbs like dplyr::select() tidyr::pivot_longer(). Finally, third group arguments tidytof verb called method specifications, ’re comprised every argument isn’t input data frame column specification. Whereas column specifications represent columns used perform operation, method specifications represent details operation performed. example, tof_cluster_phenograph() function requires method specification num_neighbors, specifies many nearest neighbors used construct PhenoGraph algorithm’s k-nearest-neighbor graph. exceptions, tidytof extension include 3 argument types (order). addition, functions extend tidytof name starts prefix tof_. make easier users find tidytof functions using text completion functionality included development environments.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"contributing-a-new-method-to-an-existing-tidytof-verb","dir":"Articles","previous_headings":"How to contribute","what":"Contributing a new method to an existing {tidytof} verb","title":"How to contribute code","text":"tidytof currently includes multiple verbs perform fundamental single-cell data manipulation tasks. Currently, tidytof’s extensible verbs following: tof_analyze_abundance: Perform differential cluster abundance analysis tof_analyze_expression: Perform differential marker expression analysis tof_annotate_clusters: Annotate clusters manual IDs tof_batch_correct: Perform batch correction tof_cluster: Cluster cells subpopulations tof_downsample: Subsample dataset smaller number cells tof_extract: Calculate sample-level summary statistics tof_metacluster: Metacluster clusters smaller number subpopulations tof_plot_cells: Plot cell-level data tof_plot_clusters: Plot cluster-level data tof_plot_model: Plot results sample-level model tof_read_data: Read data memory disk tof_reduce_dimensions: Perform dimensionality reduction tof_transform: Transform marker expression values vectorized fashion tof_upsample: Assign new cells existing clusters (defined downsample dataset) tof_write_data: Write data memory disk tidytof verb wraps family related functions perform basic task. example, tof_cluster verb wrapper following functions: tof_cluster_ddpr, tof_cluster_flowsom, tof_cluster_kmeans, tof_cluster_phenograph. functions implement different clustering algorithm, share underlying logic standardized tof_cluster abstraction. practice, means users can apply DDPR, FlowSOM, K-means, PhenoGraph clustering algorithms datasets either calling one tof_cluster_* functions directly, calling tof_cluster method argument set appropriate value (“ddpr”, “flowsom”, “kmeans”, “phenograph”, respectively). extend existing tidytof verb, write function whose name fits pattern tof_{verb name}_*, “*” represents name algorithm used perform computation. function definition, try share many arguments possible tidytof verb ’re extending, return output object described “Value” heading help file verb extended. example, suppose wanted write tidytof-style interface new clustering algorithm “supercluster”, performs k-means clustering dataset twice outputs final cluster assignment equal two k-means cluster assignments spliced together. add supercluster algorithm tidytof, might write function like : example , note tof_cluster_supercluster named using tof_{verb name}_* style, function definition uses tof_tibble cluster_cols arguments tof_cluster, returned output object tof_tbl single column encoding cluster ids cells tof_tibble.","code":"#' Perform superclustering on high-dimensional cytometry data. #' #' This function applies the silly, hypothetical clustering algorithm #' \"supercluster\" to high-dimensional cytometry data using user-specified #' input variables/cytometry measurements. #' #' @param tof_tibble A `tof_tbl` or `tibble`. #' #' @param cluster_cols Unquoted column names indicating which columns in #' `tof_tibble` to use in computing the supercluster clusters. #' Supports tidyselect helpers. #' #' @param num_kmeans_clusters An integer indicating how many clusters should be #' used for the two k-means clustering steps. #' #' @param sep A string to use when splicing the 2 k-means clustering assignments #' to one another. #' #' @param ... Optional additional parameters to pass to #' \\code{\\link[tidytof]{tof_cluster_kmeans}} #' #' @return A tibble with one column named `.supercluster_cluster` containing #' a character vector of length `nrow(tof_tibble)` indicating the id of the #' supercluster cluster to which each cell (i.e. each row) in `tof_tibble` was #' assigned. #' #' @importFrom dplyr tibble #' tof_cluster_supercluster <-     function(tof_tibble, cluster_cols, num_kmeans_clusters = 10L, sep = \"_\", ...) {         kmeans_1 <-             tof_tibble |>             tof_cluster_kmeans(                 cluster_cols = {{ cluster_cols }},                 num_clusters = num_kmeans_clusters,                 ...             )          kmeans_2 <-             tof_tibble |>             tof_cluster_kmeans(                 cluster_cols = {{ cluster_cols }},                 num_clusters = num_kmeans_clusters,                 ...             )          final_result <-             dplyr::tibble(                 .supercluster_cluster =                     paste(kmeans_1$.kmeans_cluster, kmeans_2$.kmeans_cluster, sep = sep)             )          return(final_result)     }"},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"creating-a-new-tidytof-verb","dir":"Articles","previous_headings":"How to contribute","what":"Creating a new {tidytof} verb","title":"How to contribute code","text":"want contribute function tidytof represents new operation encompassed existing verbs , include suggestion create new verb pull request tidytof team. case, ’ll considerably flexibility define interface tidytof use implement new verb, tidytof team happy work figure makes sense (least brainstorm together).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"a-note-about-modeling-functions","dir":"Articles","previous_headings":"How to contribute","what":"A note about modeling functions","title":"How to contribute code","text":"point development, don’t recommend extending tidytof’s modeling functionality, likely abstracted standalone package (emphasis interoperability tidymodels ecosystem) point future.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"contact-us","dir":"Articles","previous_headings":"","what":"Contact us","title":"How to contribute code","text":"general questions/comments/concerns tidytof, feel free reach team GitHub .","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"How to contribute code","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> loaded via a namespace (and not attached): #>  [1] digest_0.6.34     desc_1.4.3        R6_2.5.1          fastmap_1.1.1     #>  [5] xfun_0.42         magrittr_2.0.3    cachem_1.0.8      knitr_1.45        #>  [9] memoise_2.0.1     htmltools_0.5.7   rmarkdown_2.26    lifecycle_1.0.4   #> [13] cli_3.6.2         vctrs_0.6.5       sass_0.4.8        pkgdown_2.0.7     #> [17] textshaping_0.3.7 jquerylib_0.1.4   systemfonts_1.0.6 compiler_4.3.3    #> [21] purrr_1.0.2       tools_4.3.3       ragg_1.2.7        bslib_0.6.1       #> [25] evaluate_0.23     yaml_2.3.8        jsonlite_1.8.8    rlang_1.1.3       #> [29] fs_1.6.3"},{"path":"https://keyes-timothy.github.io/tidytof/articles/differential-discovery-analysis.html","id":"accessing-the-data-for-this-vignette","dir":"Articles","previous_headings":"","what":"Accessing the data for this vignette","title":"Differential discovery analysis","text":"demonstrate use verbs, ’ll first download dataset originally collected development CITRUS algorithm. data available HDCytoData package, available Bioconductor can downloaded following command: load CITRUS data current R session, can call function HDCytoData, provide us format {flowCore} package (called “flowSet”). convert tidy tibble, can use tidytof built-method converting flowCore objects tof_tbl’s . Thus, can see citrus_data tof_tbl 172791 cells (one row) 39 pieces information cell (one column). can also extract metadata raw data join single-cell data using functions tidyverse: Thus, now sample-level information patient sample collected stimulation condition (“Basal” “BCR-XL”) sample exposed data acquisition. Finally, can join metadata single-cell tof_tbl obtain cleaned dataset. data cleaning steps, now citrus_data, tof_tbl containing cells collected 8 patients. Specifically, 2 samples taken patient: one cells’ B-cell receptors stimulated (BCR-XL) one (Basal). citrus_data, cell’s patient origin stored patient column, cell’s stimulation condition stored stimulation column. addition, population_id column stores information cluster labels applied cell using combination FlowSOM clustering manual merging (details, run ?HDCytoData::Bodenmiller_BCR_XL R console).","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE)) {     install.packages(\"BiocManager\") }  BiocManager::install(\"HDCytoData\") citrus_raw <- HDCytoData::Bodenmiller_BCR_XL_flowSet()  citrus_data <-     citrus_raw |>     as_tof_tbl(sep = \"_\") citrus_metadata <-     tibble(         file_name = as.character(flowCore::pData(citrus_raw)[[1]]),         sample_id = 1:length(file_name),         patient = stringr::str_extract(file_name, \"patient[:digit:]\"),         stimulation = stringr::str_extract(file_name, \"(BCR-XL)|Reference\")     ) |>     mutate(         stimulation = if_else(stimulation == \"Reference\", \"Basal\", stimulation)     )  citrus_metadata |>     head() #> # A tibble: 6 × 4 #>   file_name                          sample_id patient  stimulation #>   <chr>                                  <int> <chr>    <chr>       #> 1 PBMC8_30min_patient1_BCR-XL.fcs            1 patient1 BCR-XL      #> 2 PBMC8_30min_patient1_Reference.fcs         2 patient1 Basal       #> 3 PBMC8_30min_patient2_BCR-XL.fcs            3 patient2 BCR-XL      #> 4 PBMC8_30min_patient2_Reference.fcs         4 patient2 Basal       #> 5 PBMC8_30min_patient3_BCR-XL.fcs            5 patient3 BCR-XL      #> 6 PBMC8_30min_patient3_Reference.fcs         6 patient3 Basal citrus_data <-     citrus_data |>     left_join(citrus_metadata, by = \"sample_id\")"},{"path":"https://keyes-timothy.github.io/tidytof/articles/differential-discovery-analysis.html","id":"differential-abundance-analysis-using-tof_analyze_abundance","dir":"Articles","previous_headings":"","what":"Differential abundance analysis using tof_analyze_abundance()","title":"Differential discovery analysis","text":"might wonder certain clusters expand deplete within patients two stimulation conditions described - question requires differential abundance analysis (DAA). tidytof’s tof_analyze_abundance() verb supports use 3 statistical approaches performing DAA: diffcyt, generalized-linear mixed modeling (GLMMs), simple t-tests. setup described uses paired design 2 experimental conditions interest (Basal vs. BCR-XL), can use paired t-test method: Based output, can see 6 8 clusters statistically different abundance two stimulation conditions. Using tidytof easy integration tidyverse packages, can use result visualize fold-changes cluster (within patient) BCR-XL condition compared Basal condition using ggplot2:  Importantly, output tof_analyze_abundance depends slightly underlying statistical method used, details can found documentation tof_analyze_abundance_* function family member: tof_analyze_abundance_diffcyt tof_analyze_abundance_glmm tof_analyze_abundance_ttest","code":"daa_result <-     citrus_data |>     tof_analyze_abundance(         cluster_col = population_id,         effect_col = stimulation,         group_cols = patient,         test_type = \"paired\",         method = \"ttest\"     )  daa_result #> # A tibble: 8 × 8 #>   population_id    p_val   p_adj significant      t    df mean_diff mean_fc #>   <chr>            <dbl>   <dbl> <chr>        <dbl> <dbl>     <dbl>   <dbl> #> 1 1             0.000924 0.00535 \"*\"         -5.48      7  -0.00743   0.644 #> 2 2             0.00623  0.0166  \"*\"         -3.86      7  -0.0156    0.674 #> 3 3             0.0235   0.0314  \"*\"         -2.88      7  -0.0638    0.849 #> 4 4             0.0235   0.0314  \"*\"          2.88      7   0.0832    1.38  #> 5 5             0.0116   0.0232  \"*\"          3.39      7   0.00246   1.08  #> 6 6             0.371    0.371   \"\"          -0.955     7  -0.0168    0.919 #> 7 7             0.00134  0.00535 \"*\"          5.14      7   0.0202    1.14  #> 8 8             0.236    0.270   \"\"          -1.30      7  -0.00228   0.901 plot_data <-     citrus_data |>     mutate(population_id = as.character(population_id)) |>     left_join(         select(daa_result, population_id, significant, mean_fc),         by = \"population_id\"     ) |>     dplyr::count(patient, stimulation, population_id, significant, mean_fc, name = \"n\") |>     group_by(patient, stimulation) |>     mutate(prop = n / sum(n)) |>     ungroup() |>     pivot_wider(         names_from = stimulation,         values_from = c(prop, n),     ) |>     mutate(         diff = `prop_BCR-XL` - prop_Basal,         fc = `prop_BCR-XL` / prop_Basal,         population_id = fct_reorder(population_id, diff),         direction =             case_when(                 mean_fc > 1 & significant == \"*\" ~ \"increase\",                 mean_fc < 1 & significant == \"*\" ~ \"decrease\",                 TRUE ~ NA_character_             )     )  significance_data <-     plot_data |>     group_by(population_id, significant, direction) |>     summarize(diff = max(diff), fc = max(fc)) |>     ungroup()  plot_data |>     ggplot(aes(x = population_id, y = fc, fill = direction)) +     geom_violin(trim = FALSE) +     geom_hline(yintercept = 1, color = \"red\", linetype = \"dotted\", size = 0.5) +     geom_point() +     geom_text(         aes(x = population_id, y = fc, label = significant),         data = significance_data,         size = 8,         nudge_x = 0.2,         nudge_y = 0.06     ) +     scale_x_discrete(labels = function(x) str_c(\"cluster \", x)) +     scale_fill_manual(         values = c(\"decrease\" = \"#cd5241\", \"increase\" = \"#207394\"),         na.translate = FALSE     ) +     labs(         x = NULL,         y = \"Abundance fold-change (stimulated / basal)\",         fill = \"Effect\",         caption = \"Asterisks indicate significance at an adjusted p-value of 0.05\"     ) #> Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0. #> ℹ Please use `linewidth` instead. #> This warning is displayed once every 8 hours. #> Call `lifecycle::last_lifecycle_warnings()` to see where this warning was #> generated."},{"path":"https://keyes-timothy.github.io/tidytof/articles/differential-discovery-analysis.html","id":"differential-expression-analysis-with-tof_analyze_expression","dir":"Articles","previous_headings":"","what":"Differential expression analysis with tof_analyze_expression()","title":"Differential discovery analysis","text":"Similarly, suppose ’re interested intracellular signaling proteins change expression levels two stimulation conditions clusters. Differential Expression Analysis (DEA) can performed using tidytof’s tof_analyze_expression verb. , can use paired t-tests multiple-hypothesis correction test significant differences cluster’s expression signaling markers stimulation conditions. output tof_analyze_expression() also depends underlying test used, can see result looks relatively similar output tof_analyze_abundance(). , output tibble row represents differential expression results single cluster-marker pair - example, first row represents difference expression pS6 cluster 1 BCR-XL Basal conditions. row includes raw p-value multiple-hypothesis-corrected p-value cluster-marker pair. result can used make volcano plot visualize results cluster-marker pairs:  , details can found documentation tof_analyze_expression_* function family member: tof_analyze_expression_diffcyt tof_analyze_expression_lmm tof_analyze_expression_ttest","code":"signaling_markers <-     c(         \"pNFkB_Nd142\", \"pStat5_Nd150\", \"pAkt_Sm152\", \"pStat1_Eu153\", \"pStat3_Gd158\",         \"pSlp76_Dy164\", \"pBtk_Er166\", \"pErk_Er168\", \"pS6_Yb172\", \"pZap70_Gd156\"     )  dea_result <-     citrus_data |>     tof_preprocess(channel_cols = any_of(signaling_markers)) |>     tof_analyze_expression(         method = \"ttest\",         cluster_col = population_id,         marker_cols = any_of(signaling_markers),         effect_col = stimulation,         group_cols = patient,         test_type = \"paired\"     )  dea_result |>     head() #> # A tibble: 6 × 9 #>   population_id marker   p_val   p_adj significant     t    df mean_diff mean_fc #>   <chr>         <chr>    <dbl>   <dbl> <chr>       <dbl> <dbl>     <dbl>   <dbl> #> 1 1             pS6_Y… 7.58e-8 2.12e-6 *            22.9     7     2.56    4.31  #> 2 2             pS6_Y… 1.16e-7 2.12e-6 *            21.6     7     2.13    2.49  #> 3 3             pBtk_… 1.32e-7 2.12e-6 *           -21.2     7    -0.475   0.289 #> 4 7             pBtk_… 1.18e-7 2.12e-6 *           -21.5     7    -0.518   0.286 #> 5 8             pBtk_… 1.30e-7 2.12e-6 *           -21.2     7    -0.516   0.324 #> 6 4             pBtk_… 7.85e-7 1.05e-5 *           -16.3     7    -0.462   0.296 volcano_data <-     dea_result |>     mutate(         log2_fc = log(mean_fc, base = 2),         log_p = -log(p_adj),         significance =             case_when(                 p_adj < 0.05 & mean_fc > 1 ~ \"increased\",                 p_adj < 0.05 & mean_fc < 1 ~ \"decreased\",                 TRUE ~ NA_character_             ),         marker =             str_extract(marker, \".+_\") |>                 str_remove(\"_\"),         pair = str_c(marker, str_c(\"cluster \", population_id), sep = \"@\")     )  volcano_data |>     ggplot(aes(x = log2_fc, y = log_p, fill = significance)) +     geom_vline(xintercept = 0, linetype = \"dashed\", color = \"gray50\") +     geom_hline(yintercept = -log(0.05), linetype = \"dashed\", color = \"red\") +     geom_point(shape = 21, size = 2) +     ggrepel::geom_text_repel(         aes(label = pair),         data = slice_head(volcano_data, n = 10L),         size = 2     ) +     scale_fill_manual(         values = c(\"decreased\" = \"#cd5241\", \"increased\" = \"#207394\"),         na.value = \"#cdcdcd\"     ) +     labs(         x = \"log2(Fold-change)\",         y = \"-log10(p-value)\",         fill = NULL,         caption = \"Labels indicate the 10 most significant marker-cluster pairs\"     )"},{"path":"https://keyes-timothy.github.io/tidytof/articles/differential-discovery-analysis.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Differential discovery analysis","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats4    stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #>  [1] HDCytoData_1.22.0           flowCore_2.14.1             #>  [3] SummarizedExperiment_1.32.0 Biobase_2.62.0              #>  [5] GenomicRanges_1.54.1        GenomeInfoDb_1.38.7         #>  [7] IRanges_2.36.0              S4Vectors_0.40.2            #>  [9] MatrixGenerics_1.14.0       matrixStats_1.2.0           #> [11] ExperimentHub_2.10.0        AnnotationHub_3.10.0        #> [13] BiocFileCache_2.10.1        dbplyr_2.4.0                #> [15] BiocGenerics_0.48.1         forcats_1.0.0               #> [17] tidyr_1.3.1                 ggplot2_3.5.0               #> [19] stringr_1.5.1               dplyr_1.1.4                 #> [21] tidytof_0.99.0              #>  #> loaded via a namespace (and not attached): #>   [1] jsonlite_1.8.8                shape_1.4.6.1                 #>   [3] magrittr_2.0.3                farver_2.1.1                  #>   [5] rmarkdown_2.26                fs_1.6.3                      #>   [7] zlibbioc_1.48.0               ragg_1.2.7                    #>   [9] vctrs_0.6.5                   memoise_2.0.1                 #>  [11] htmltools_0.5.7               S4Arrays_1.2.1                #>  [13] curl_5.2.1                    SparseArray_1.2.4             #>  [15] sass_0.4.8                    parallelly_1.37.1             #>  [17] bslib_0.6.1                   desc_1.4.3                    #>  [19] lubridate_1.9.3               cachem_1.0.8                  #>  [21] igraph_2.0.2                  mime_0.12                     #>  [23] lifecycle_1.0.4               iterators_1.0.14              #>  [25] pkgconfig_2.0.3               Matrix_1.6-5                  #>  [27] R6_2.5.1                      fastmap_1.1.1                 #>  [29] shiny_1.8.0                   GenomeInfoDbData_1.2.11       #>  [31] future_1.33.1                 digest_0.6.34                 #>  [33] colorspace_2.1-0              AnnotationDbi_1.64.1          #>  [35] textshaping_0.3.7             RSQLite_2.3.5                 #>  [37] labeling_0.4.3                filelock_1.0.3                #>  [39] cytolib_2.14.1                fansi_1.0.6                   #>  [41] yardstick_1.3.0               timechange_0.3.0              #>  [43] httr_1.4.7                    polyclip_1.10-6               #>  [45] abind_1.4-5                   compiler_4.3.3                #>  [47] bit64_4.0.5                   withr_3.0.0                   #>  [49] doParallel_1.0.17             viridis_0.6.5                 #>  [51] DBI_1.2.2                     highr_0.10                    #>  [53] ggforce_0.4.2                 MASS_7.3-60.0.1               #>  [55] lava_1.8.0                    rappdirs_0.3.3                #>  [57] DelayedArray_0.28.0           tools_4.3.3                   #>  [59] interactiveDisplayBase_1.40.0 httpuv_1.6.14                 #>  [61] future.apply_1.11.1           nnet_7.3-19                   #>  [63] glue_1.7.0                    promises_1.2.1                #>  [65] grid_4.3.3                    generics_0.1.3                #>  [67] recipes_1.0.10                gtable_0.3.4                  #>  [69] tzdb_0.4.0                    class_7.3-22                  #>  [71] data.table_1.15.2             hms_1.1.3                     #>  [73] tidygraph_1.3.1               utf8_1.2.4                    #>  [75] XVector_0.42.0                ggrepel_0.9.5                 #>  [77] BiocVersion_3.18.1            foreach_1.5.2                 #>  [79] pillar_1.9.0                  RcppHNSW_0.6.0                #>  [81] later_1.3.2                   splines_4.3.3                 #>  [83] tweenr_2.0.3                  lattice_0.22-5                #>  [85] survival_3.5-8                bit_4.0.5                     #>  [87] RProtoBufLib_2.14.0           tidyselect_1.2.0              #>  [89] Biostrings_2.70.2             knitr_1.45                    #>  [91] gridExtra_2.3                 xfun_0.42                     #>  [93] graphlayouts_1.1.1            hardhat_1.3.1                 #>  [95] timeDate_4032.109             stringi_1.8.3                 #>  [97] yaml_2.3.8                    evaluate_0.23                 #>  [99] codetools_0.2-19              ggraph_2.2.1                  #> [101] tibble_3.2.1                  BiocManager_1.30.22           #> [103] cli_3.6.2                     rpart_4.1.23                  #> [105] xtable_1.8-4                  systemfonts_1.0.6             #> [107] munsell_0.5.0                 jquerylib_0.1.4               #> [109] Rcpp_1.0.12                   globals_0.16.3                #> [111] png_0.1-8                     parallel_4.3.3                #> [113] ellipsis_0.3.2                pkgdown_2.0.7                 #> [115] gower_1.0.1                   readr_2.1.5                   #> [117] blob_1.2.4                    listenv_0.9.1                 #> [119] glmnet_4.1-8                  viridisLite_0.4.2             #> [121] ipred_0.9-14                  scales_1.3.0                  #> [123] prodlim_2023.08.28            purrr_1.0.2                   #> [125] crayon_1.5.2                  rlang_1.1.3                   #> [127] KEGGREST_1.42.0"},{"path":"https://keyes-timothy.github.io/tidytof/articles/dimensionality-reduction.html","id":"dimensionality-reduction-with-tof_reduce_dimensions-","dir":"Articles","previous_headings":"","what":"Dimensionality reduction with tof_reduce_dimensions().","title":"Dimensionality reduction","text":"example call tof_reduce_dimensions() use tSNE visualize data tidytof’s built-phenograph_data dataset. default, tof_reduce_dimensions add reduced-dimension feature embeddings input tof_tbl return augmented tof_tbl (, tof_tbl new columns embedding dimension) result. return features embeddings , set augment FALSE (tof_cluster). Changing method argument results different low-dimensional embeddings:","code":"data(phenograph_data)  # perform the dimensionality reduction phenograph_tsne <-     phenograph_data |>     tof_preprocess() |>     tof_reduce_dimensions(method = \"tsne\") #> Loading required namespace: Rtsne  # select only the tsne embedding columns phenograph_tsne |>     select(contains(\"tsne\")) |>     head() #> # A tibble: 6 × 2 #>   .tsne1 .tsne2 #>    <dbl>  <dbl> #> 1   14.7  -7.18 #> 2   13.6   4.75 #> 3   36.7   5.48 #> 4   22.6   4.31 #> 5   21.2  -4.57 #> 6   22.4  12.0 phenograph_data |>     tof_preprocess() |>     tof_reduce_dimensions(method = \"tsne\", augment = FALSE) #> # A tibble: 3,000 × 2 #>    .tsne1 .tsne2 #>     <dbl>  <dbl> #>  1 -3.00  -16.8  #>  2  9.20   -8.73 #>  3 13.2   -33.3  #>  4  9.74  -19.4  #>  5  0.555 -19.4  #>  6 18.5   -18.2  #>  7 10.6    -9.68 #>  8 17.4   -26.0  #>  9 15.0   -17.2  #> 10  1.19   -8.12 #> # ℹ 2,990 more rows phenograph_data |>     tof_reduce_dimensions(method = \"umap\", augment = FALSE) #> # A tibble: 3,000 × 2 #>    .umap1 .umap2 #>     <dbl>  <dbl> #>  1  5.11  -4.59  #>  2  5.68  -3.51  #>  3  3.32  -0.142 #>  4  3.49   1.61  #>  5  4.78  -4.40  #>  6  0.766  2.67  #>  7  4.44  -4.11  #>  8  2.62   0.698 #>  9  6.56   0.257 #> 10  6.96  -5.41  #> # ℹ 2,990 more rows  phenograph_data |>     tof_reduce_dimensions(method = \"pca\", augment = FALSE) #> # A tibble: 3,000 × 5 #>       .pc1     .pc2   .pc3    .pc4   .pc5 #>      <dbl>    <dbl>  <dbl>   <dbl>  <dbl> #>  1 -2.77    1.23    -0.868  0.978   3.49  #>  2 -0.969  -1.02    -0.787  1.22    0.329 #>  3 -2.36    2.54    -1.95  -0.882  -1.30  #>  4 -3.68   -0.00565  0.962  0.410   0.788 #>  5 -4.03    2.07    -0.829  1.59    5.39  #>  6 -2.59   -0.108    1.32  -1.41   -1.24  #>  7 -1.55   -0.651   -0.233  1.08    0.129 #>  8 -1.18   -0.446    0.134 -0.771  -0.932 #>  9 -2.00   -0.485    0.593 -0.0416 -0.658 #> 10 -0.0356 -0.924   -0.692  1.45    0.270 #> # ℹ 2,990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/dimensionality-reduction.html","id":"method-specifications-for-tof_reduce_-functions","dir":"Articles","previous_headings":"","what":"Method specifications for tof_reduce_*() functions","title":"Dimensionality reduction","text":"tof_reduce_dimensions() provides high-level API three lower-level functions: tof_reduce_pca(), tof_reduce_umap(), tof_reduce_tsne(). help files functions provide details algorithm-specific method specifications associated dimensionality reduction approaches. example, tof_reduce_pca takes num_comp argument determine many principal components returned: see ?tof_reduce_pca, ?tof_reduce_umap, ?tof_reduce_tsne additional details.","code":"# 2 principal components phenograph_data |>     tof_reduce_pca(num_comp = 2) #> # A tibble: 3,000 × 2 #>       .pc1     .pc2 #>      <dbl>    <dbl> #>  1 -2.77    1.23    #>  2 -0.969  -1.02    #>  3 -2.36    2.54    #>  4 -3.68   -0.00565 #>  5 -4.03    2.07    #>  6 -2.59   -0.108   #>  7 -1.55   -0.651   #>  8 -1.18   -0.446   #>  9 -2.00   -0.485   #> 10 -0.0356 -0.924   #> # ℹ 2,990 more rows # 3 principal components phenograph_data |>     tof_reduce_pca(num_comp = 3) #> # A tibble: 3,000 × 3 #>       .pc1     .pc2   .pc3 #>      <dbl>    <dbl>  <dbl> #>  1 -2.77    1.23    -0.868 #>  2 -0.969  -1.02    -0.787 #>  3 -2.36    2.54    -1.95  #>  4 -3.68   -0.00565  0.962 #>  5 -4.03    2.07    -0.829 #>  6 -2.59   -0.108    1.32  #>  7 -1.55   -0.651   -0.233 #>  8 -1.18   -0.446    0.134 #>  9 -2.00   -0.485    0.593 #> 10 -0.0356 -0.924   -0.692 #> # ℹ 2,990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/dimensionality-reduction.html","id":"visualization-using-tof_plot_cells_embedding","dir":"Articles","previous_headings":"","what":"Visualization using tof_plot_cells_embedding()","title":"Dimensionality reduction","text":"Regardless method used, reduced-dimension feature embeddings can visualized using ggplot2 (graphics package). tidytof also provides helper functions easily generating dimensionality reduction plots tof_tbl tibble columns representing embedding dimensions:   visualizations can helpful qualitatively describing phenotypic differences clusters dataset. example, example , can see one clusters high CD11b expression, whereas others lower CD11b expression.","code":"# plot the tsne embeddings using color to distinguish between clusters phenograph_tsne |>     tof_plot_cells_embedding(         embedding_cols = contains(\".tsne\"),         color_col = phenograph_cluster     ) # plot the tsne embeddings using color to represent CD11b expression phenograph_tsne |>     tof_plot_cells_embedding(         embedding_cols = contains(\".tsne\"),         color_col = cd11b     ) +     ggplot2::scale_fill_viridis_c()"},{"path":"https://keyes-timothy.github.io/tidytof/articles/dimensionality-reduction.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Dimensionality reduction","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] ggplot2_3.5.0  dplyr_1.1.4    tidytof_0.99.0 #>  #> loaded via a namespace (and not attached): #>   [1] gridExtra_2.3       rlang_1.1.3         magrittr_2.0.3      #>   [4] RcppAnnoy_0.0.22    matrixStats_1.2.0   compiler_4.3.3      #>   [7] png_0.1-8           systemfonts_1.0.6   vctrs_0.6.5         #>  [10] stringr_1.5.1       pkgconfig_2.0.3     shape_1.4.6.1       #>  [13] fastmap_1.1.1       ellipsis_0.3.2      labeling_0.4.3      #>  [16] ggraph_2.2.1        utf8_1.2.4          rmarkdown_2.26      #>  [19] prodlim_2023.08.28  tzdb_0.4.0          ragg_1.2.7          #>  [22] purrr_1.0.2         xfun_0.42           glmnet_4.1-8        #>  [25] cachem_1.0.8        jsonlite_1.8.8      recipes_1.0.10      #>  [28] highr_0.10          keras_2.13.0        tweenr_2.0.3        #>  [31] irlba_2.3.5.1       tensorflow_2.15.0   parallel_4.3.3      #>  [34] R6_2.5.1            bslib_0.6.1         stringi_1.8.3       #>  [37] reticulate_1.35.0   parallelly_1.37.1   rpart_4.1.23        #>  [40] lubridate_1.9.3     jquerylib_0.1.4     Rcpp_1.0.12         #>  [43] iterators_1.0.14    knitr_1.45          future.apply_1.11.1 #>  [46] base64enc_0.1-3     readr_2.1.5         flowCore_2.14.1     #>  [49] Matrix_1.6-5        splines_4.3.3       nnet_7.3-19         #>  [52] igraph_2.0.2        timechange_0.3.0    tidyselect_1.2.0    #>  [55] yaml_2.3.8          viridis_0.6.5       timeDate_4032.109   #>  [58] doParallel_1.0.17   codetools_0.2-19    listenv_0.9.1       #>  [61] lattice_0.22-5      tibble_3.2.1        Biobase_2.62.0      #>  [64] withr_3.0.0         evaluate_0.23       Rtsne_0.17          #>  [67] future_1.33.1       desc_1.4.3          survival_3.5-8      #>  [70] polyclip_1.10-6     embed_1.1.3         pillar_1.9.0        #>  [73] whisker_0.4.1       foreach_1.5.2       stats4_4.3.3        #>  [76] generics_0.1.3      RcppHNSW_0.6.0      S4Vectors_0.40.2    #>  [79] hms_1.1.3           munsell_0.5.0       scales_1.3.0        #>  [82] globals_0.16.3      class_7.3-22        glue_1.7.0          #>  [85] tools_4.3.3         data.table_1.15.2   gower_1.0.1         #>  [88] fs_1.6.3            graphlayouts_1.1.1  tidygraph_1.3.1     #>  [91] grid_4.3.3          yardstick_1.3.0     tidyr_1.3.1         #>  [94] RProtoBufLib_2.14.0 ipred_0.9-14        colorspace_2.1-0    #>  [97] ggforce_0.4.2       cli_3.6.2           tfruns_1.5.2        #> [100] textshaping_0.3.7   fansi_1.0.6         cytolib_2.14.1      #> [103] viridisLite_0.4.2   lava_1.8.0          uwot_0.1.16         #> [106] gtable_0.3.4        zeallot_0.1.0       sass_0.4.8          #> [109] digest_0.6.34       BiocGenerics_0.48.1 ggrepel_0.9.5       #> [112] farver_2.1.1        memoise_2.0.1       htmltools_0.5.7     #> [115] pkgdown_2.0.7       lifecycle_1.0.4     hardhat_1.3.1       #> [118] MASS_7.3-60.0.1"},{"path":"https://keyes-timothy.github.io/tidytof/articles/downsampling.html","id":"downsampling-with-tof_downsample","dir":"Articles","previous_headings":"","what":"Downsampling with tof_downsample()","title":"Downsampling","text":"Using tidytof’s built-dataset phenograph_data, can see original size dataset 1000 cells per cluster, 3000 cells total: randomly sample 200 cells per cluster, can use tof_downsample() using “constant” method: Alternatively, wanted sample 50% cells cluster, use “prop” method: finally, might also interested taking slightly different approach downsampling reduces number cells fixed constant proportion, fixed density phenotypic space. example, following scatterplot demonstrates certain areas phenotypic density phenograph_data contain cells others along cd34/cd38 axes:  reduce number cells dataset local density around cell dataset relatively constant, can use “density” method tof_downsample:  Thus, can see density downsampling uniform (though exactly uniform) across range cd34/cd38 values phenograph_data.","code":"data(phenograph_data)  phenograph_data |>     dplyr::count(phenograph_cluster) #> # A tibble: 3 × 2 #>   phenograph_cluster     n #>   <chr>              <int> #> 1 cluster1            1000 #> 2 cluster2            1000 #> 3 cluster3            1000 phenograph_data |>     # downsample     tof_downsample(         group_cols = phenograph_cluster,         method = \"constant\",         num_cells = 200     ) |>     # count the number of downsampled cells in each cluster     count(phenograph_cluster) #> # A tibble: 3 × 2 #>   phenograph_cluster     n #>   <chr>              <int> #> 1 cluster1             200 #> 2 cluster2             200 #> 3 cluster3             200 phenograph_data |>     # downsample     tof_downsample(         group_cols = phenograph_cluster,         method = \"prop\",         prop_cells = 0.5     ) |>     # count the number of downsampled cells in each cluster     count(phenograph_cluster) #> # A tibble: 3 × 2 #>   phenograph_cluster     n #>   <chr>              <int> #> 1 cluster1             500 #> 2 cluster2             500 #> 3 cluster3             500 rescale_max <-     function(x, to = c(0, 1), from = range(x, na.rm = TRUE)) {         x / from[2] * to[2]     }  phenograph_data |>     # preprocess all numeric columns in the dataset     tof_preprocess(undo_noise = FALSE) |>     # plot     ggplot(aes(x = cd34, y = cd38)) +     geom_hex() +     coord_fixed(ratio = 0.4) +     scale_x_continuous(limits = c(NA, 1.5)) +     scale_y_continuous(limits = c(NA, 4)) +     scale_fill_viridis_c(         labels = function(x) round(rescale_max(x), 2)     ) +     labs(         fill = \"relative density\"     ) phenograph_data |>     tof_preprocess(undo_noise = FALSE) |>     tof_downsample(method = \"density\", density_cols = c(cd34, cd38)) |>     # plot     ggplot(aes(x = cd34, y = cd38)) +     geom_hex() +     coord_fixed(ratio = 0.4) +     scale_x_continuous(limits = c(NA, 1.5)) +     scale_y_continuous(limits = c(NA, 4)) +     scale_fill_viridis_c(         labels = function(x) round(rescale_max(x), 2)     ) +     labs(         fill = \"relative density\"     )"},{"path":"https://keyes-timothy.github.io/tidytof/articles/downsampling.html","id":"additional-documentation","dir":"Articles","previous_headings":"","what":"Additional documentation","title":"Downsampling","text":"details, check documentation 3 underlying members tof_downsample_* function family (wrapped tof_downsample): tof_downsample_constant tof_downsample_prop tof_downsample_density","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/downsampling.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Downsampling","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] ggplot2_3.5.0  dplyr_1.1.4    tidytof_0.99.0 #>  #> loaded via a namespace (and not attached): #>   [1] gridExtra_2.3       rlang_1.1.3         magrittr_2.0.3      #>   [4] matrixStats_1.2.0   compiler_4.3.3      systemfonts_1.0.6   #>   [7] vctrs_0.6.5         stringr_1.5.1       pkgconfig_2.0.3     #>  [10] shape_1.4.6.1       fastmap_1.1.1       ggraph_2.2.1        #>  [13] utf8_1.2.4          rmarkdown_2.26      prodlim_2023.08.28  #>  [16] tzdb_0.4.0          ragg_1.2.7          purrr_1.0.2         #>  [19] xfun_0.42           glmnet_4.1-8        cachem_1.0.8        #>  [22] jsonlite_1.8.8      recipes_1.0.10      highr_0.10          #>  [25] tweenr_2.0.3        parallel_4.3.3      R6_2.5.1            #>  [28] bslib_0.6.1         stringi_1.8.3       parallelly_1.37.1   #>  [31] rpart_4.1.23        lubridate_1.9.3     jquerylib_0.1.4     #>  [34] Rcpp_1.0.12         iterators_1.0.14    knitr_1.45          #>  [37] future.apply_1.11.1 readr_2.1.5         flowCore_2.14.1     #>  [40] Matrix_1.6-5        splines_4.3.3       nnet_7.3-19         #>  [43] igraph_2.0.2        timechange_0.3.0    tidyselect_1.2.0    #>  [46] yaml_2.3.8          viridis_0.6.5       timeDate_4032.109   #>  [49] doParallel_1.0.17   codetools_0.2-19    listenv_0.9.1       #>  [52] lattice_0.22-5      tibble_3.2.1        Biobase_2.62.0      #>  [55] withr_3.0.0         evaluate_0.23       future_1.33.1       #>  [58] desc_1.4.3          survival_3.5-8      polyclip_1.10-6     #>  [61] pillar_1.9.0        foreach_1.5.2       stats4_4.3.3        #>  [64] generics_0.1.3      RcppHNSW_0.6.0      S4Vectors_0.40.2    #>  [67] hms_1.1.3           munsell_0.5.0       scales_1.3.0        #>  [70] globals_0.16.3      class_7.3-22        glue_1.7.0          #>  [73] tools_4.3.3         data.table_1.15.2   gower_1.0.1         #>  [76] fs_1.6.3            graphlayouts_1.1.1  tidygraph_1.3.1     #>  [79] grid_4.3.3          yardstick_1.3.0     tidyr_1.3.1         #>  [82] RProtoBufLib_2.14.0 ipred_0.9-14        colorspace_2.1-0    #>  [85] ggforce_0.4.2       cli_3.6.2           textshaping_0.3.7   #>  [88] fansi_1.0.6         cytolib_2.14.1      viridisLite_0.4.2   #>  [91] lava_1.8.0          gtable_0.3.4        sass_0.4.8          #>  [94] digest_0.6.34       BiocGenerics_0.48.1 ggrepel_0.9.5       #>  [97] farver_2.1.1        memoise_2.0.1       htmltools_0.5.7     #> [100] pkgdown_2.0.7       lifecycle_1.0.4     hardhat_1.3.1       #> [103] MASS_7.3-60.0.1"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"accessing-the-data-for-this-vignette","dir":"Articles","previous_headings":"","what":"Accessing the data for this vignette","title":"Feature extraction","text":"demonstrate use verbs, ’ll first download dataset originally collected development CITRUS algorithm. data available HDCytoData package, available Bioconductor can downloaded following command: load CITRUS data current R session, can call function HDCytoData, provide us format {flowCore} package (called “flowSet”). convert tidy tibble, can use tidytof built-method converting flowCore objects tof_tbl’s . Thus, can see citrus_data tof_tbl 172791 cells (one row) 39 pieces information cell (one column). can also extract metadata raw data join single-cell data using functions tidyverse: Thus, now sample-level information patient sample collected stimulation condition (“Basal” “BCR-XL”) sample exposed data acquisition. Finally, can join metadata single-cell tof_tbl obtain cleaned dataset. data cleaning steps, now citrus_data, tof_tbl containing cells collected 8 patients. Specifically, 2 samples taken patient: one cells’ B-cell receptors stimulated (BCR-XL) one (Basal). citrus_data, cell’s patient origin stored patient column, cell’s stimulation condition stored stimulation column. addition, population_id column stores information cluster labels applied cell using combination FlowSOM clustering manual merging (details, run ?HDCytoData::Bodenmiller_BCR_XL R console).","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE)) {     install.packages(\"BiocManager\") }  BiocManager::install(\"HDCytoData\") citrus_raw <- HDCytoData::Bodenmiller_BCR_XL_flowSet()  citrus_data <-     citrus_raw |>     as_tof_tbl(sep = \"_\") citrus_metadata <-     tibble(         file_name = as.character(flowCore::pData(citrus_raw)[[1]]),         sample_id = 1:length(file_name),         patient = stringr::str_extract(file_name, \"patient[:digit:]\"),         stimulation = stringr::str_extract(file_name, \"(BCR-XL)|Reference\")     ) |>     mutate(         stimulation = if_else(stimulation == \"Reference\", \"Basal\", stimulation)     )  citrus_metadata |>     head() #> # A tibble: 6 × 4 #>   file_name                          sample_id patient  stimulation #>   <chr>                                  <int> <chr>    <chr>       #> 1 PBMC8_30min_patient1_BCR-XL.fcs            1 patient1 BCR-XL      #> 2 PBMC8_30min_patient1_Reference.fcs         2 patient1 Basal       #> 3 PBMC8_30min_patient2_BCR-XL.fcs            3 patient2 BCR-XL      #> 4 PBMC8_30min_patient2_Reference.fcs         4 patient2 Basal       #> 5 PBMC8_30min_patient3_BCR-XL.fcs            5 patient3 BCR-XL      #> 6 PBMC8_30min_patient3_Reference.fcs         6 patient3 Basal citrus_data <-     citrus_data |>     left_join(citrus_metadata, by = \"sample_id\")"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"calculating-cluster-proportions-using-tof_extract_proportion","dir":"Articles","previous_headings":"","what":"Calculating cluster proportions using tof_extract_proportion()","title":"Feature extraction","text":"First, tof_extract_proportion(), extracts proportion cells cluster within sample (samples defined using group_cols argument): Like members tof_extract_* function family, tof_extract_proportion() returns one row sample (defined unique combination values columns specified group_cols) one column extracted feature (, one column proportion 8 clusters citrus_data). values can also returned “long” format changing format argument:","code":"# preprocess the numeric columns in the citrus dataset citrus_data <-     citrus_data |>     mutate(cluster = str_c(\"cluster\", population_id)) |>     tof_preprocess()  citrus_data |>     tof_extract_proportion(         cluster_col = cluster,         group_cols = c(patient, stimulation)     ) |>     head() #> # A tibble: 6 × 10 #>   patient  stimulation `prop@cluster1` `prop@cluster2` `prop@cluster3` #>   <chr>    <chr>                 <dbl>           <dbl>           <dbl> #> 1 patient1 Basal                0.0190          0.0482           0.447 #> 2 patient1 BCR-XL               0.0109          0.0395           0.268 #> 3 patient2 Basal                0.0130          0.0280           0.491 #> 4 patient2 BCR-XL               0.0101          0.0143           0.358 #> 5 patient3 Basal                0.0326          0.0830           0.397 #> 6 patient3 BCR-XL               0.0200          0.0412           0.323 #> # ℹ 5 more variables: `prop@cluster4` <dbl>, `prop@cluster5` <dbl>, #> #   `prop@cluster6` <dbl>, `prop@cluster7` <dbl>, `prop@cluster8` <dbl> citrus_data |>     tof_extract_proportion(         cluster_col = cluster,         group_cols = c(patient, stimulation),         format = \"long\"     ) |>     head() #> # A tibble: 6 × 4 #>   patient  stimulation cluster     prop #>   <chr>    <chr>       <chr>      <dbl> #> 1 patient1 Basal       cluster1 0.0190  #> 2 patient1 Basal       cluster2 0.0482  #> 3 patient1 Basal       cluster3 0.447   #> 4 patient1 Basal       cluster4 0.237   #> 5 patient1 Basal       cluster5 0.00219 #> 6 patient1 Basal       cluster6 0.0759"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"calculating-cluster-marker-expression-measures-using-tof_extract_central_tendency","dir":"Articles","previous_headings":"","what":"Calculating cluster marker expression measures using tof_extract_central_tendency()","title":"Feature extraction","text":"Another member tof_extract_*() function family, tof_extract_central_tendency(), computes central tendency (e.g. mean median) user-specified markers cluster. argument central_tendency_function can used compute summary statistic. example, following choice central_tendency_function compute 75th percentile marker-cluster pair citrus_data:","code":"citrus_data |>     tof_extract_central_tendency(         cluster_col = cluster,         group_cols = c(patient, stimulation),         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         central_tendency_function = mean     ) |>     head() #> # A tibble: 6 × 26 #>   patient  stimulation `CD45_In115@cluster1_ct` `CD4_Nd145@cluster1_ct` #>   <chr>    <chr>                          <dbl>                   <dbl> #> 1 patient1 BCR-XL                          4.80                  0.0967 #> 2 patient1 Basal                           4.68                  0.765  #> 3 patient2 BCR-XL                          5.00                 -0.0579 #> 4 patient2 Basal                           4.88                  0.808  #> 5 patient3 BCR-XL                          5.04                 -0.0432 #> 6 patient3 Basal                           4.98                  0.745  #> # ℹ 22 more variables: `CD20_Sm147@cluster1_ct` <dbl>, #> #   `CD45_In115@cluster2_ct` <dbl>, `CD4_Nd145@cluster2_ct` <dbl>, #> #   `CD20_Sm147@cluster2_ct` <dbl>, `CD45_In115@cluster3_ct` <dbl>, #> #   `CD4_Nd145@cluster3_ct` <dbl>, `CD20_Sm147@cluster3_ct` <dbl>, #> #   `CD45_In115@cluster4_ct` <dbl>, `CD4_Nd145@cluster4_ct` <dbl>, #> #   `CD20_Sm147@cluster4_ct` <dbl>, `CD45_In115@cluster5_ct` <dbl>, #> #   `CD4_Nd145@cluster5_ct` <dbl>, `CD20_Sm147@cluster5_ct` <dbl>, … citrus_data |>     tof_extract_central_tendency(         cluster_col = cluster,         group_cols = c(patient, stimulation),         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         central_tendency_function = function(x) quantile(x = x, probs = 0.75)     ) |>     head() #> # A tibble: 6 × 26 #>   patient  stimulation `CD45_In115@cluster1_ct` `CD4_Nd145@cluster1_ct` #>   <chr>    <chr>                          <dbl>                   <dbl> #> 1 patient1 BCR-XL                          5.30                 -0.0186 #> 2 patient1 Basal                           5.18                  1.32   #> 3 patient2 BCR-XL                          5.41                 -0.0201 #> 4 patient2 Basal                           5.28                  1.39   #> 5 patient3 BCR-XL                          5.42                 -0.0362 #> 6 patient3 Basal                           5.41                  1.27   #> # ℹ 22 more variables: `CD20_Sm147@cluster1_ct` <dbl>, #> #   `CD45_In115@cluster2_ct` <dbl>, `CD4_Nd145@cluster2_ct` <dbl>, #> #   `CD20_Sm147@cluster2_ct` <dbl>, `CD45_In115@cluster3_ct` <dbl>, #> #   `CD4_Nd145@cluster3_ct` <dbl>, `CD20_Sm147@cluster3_ct` <dbl>, #> #   `CD45_In115@cluster4_ct` <dbl>, `CD4_Nd145@cluster4_ct` <dbl>, #> #   `CD20_Sm147@cluster4_ct` <dbl>, `CD45_In115@cluster5_ct` <dbl>, #> #   `CD4_Nd145@cluster5_ct` <dbl>, `CD20_Sm147@cluster5_ct` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"calculating-the-proportion-of-cells-with-marker-expression-above-a-threshold-using-tof_extract_proportion","dir":"Articles","previous_headings":"","what":"Calculating the proportion of cells with marker expression above a threshold using tof_extract_proportion()","title":"Feature extraction","text":"tof_extract_threshold() similar tof_extract_central_tendency(), calculates proportion cells user-specified expression value marker instead measure central tendency:","code":"citrus_data |>     tof_extract_threshold(         cluster_col = cluster,         group_cols = c(patient, stimulation),         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         threshold = 5     ) |>     head() #> # A tibble: 6 × 26 #>   patient  stimulation `CD45_In115@cluster1_threshold` CD4_Nd145@cluster1_thre…¹ #>   <chr>    <chr>                                 <dbl>                     <dbl> #> 1 patient1 BCR-XL                                0.516                         0 #> 2 patient1 Basal                                 0.365                         0 #> 3 patient2 BCR-XL                                0.554                         0 #> 4 patient2 Basal                                 0.452                         0 #> 5 patient3 BCR-XL                                0.547                         0 #> 6 patient3 Basal                                 0.549                         0 #> # ℹ abbreviated name: ¹​`CD4_Nd145@cluster1_threshold` #> # ℹ 22 more variables: `CD20_Sm147@cluster1_threshold` <dbl>, #> #   `CD45_In115@cluster2_threshold` <dbl>, #> #   `CD4_Nd145@cluster2_threshold` <dbl>, #> #   `CD20_Sm147@cluster2_threshold` <dbl>, #> #   `CD45_In115@cluster3_threshold` <dbl>, #> #   `CD4_Nd145@cluster3_threshold` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"calculating-differences-in-marker-distributions-using-tof_extract_emd-and-tof_extract_jsd","dir":"Articles","previous_headings":"","what":"Calculating differences in marker distributions using tof_extract_emd() and tof_extract_jsd()","title":"Feature extraction","text":"two final members tof_extract_* function family – tof_extract_emd tof_extract_jsd – designed specifically comparing distributions marker expression stimulation conditions. , must given stimulation column (using emd_col jsd_col argument) identifies stimulation condition cell , reference_level specifies reference (.e. unstimulated) condition within emd_col jsd_col. additional arguments, tof_extract_emd computes Earth-mover’s distance marker’s distribution stimulation conditions (within cluster) basal condition; similarly, tof_extract_jsd computes Jensen-Shannon divergence index distributions. values ways compare different 2 distributions one another computationally expensive (also higher-resolution) simply comparing measures central tendency.","code":"# Earth-mover's distance citrus_data |>     tof_extract_emd(         cluster_col = cluster,         group_cols = patient,         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         emd_col = stimulation,         reference_level = \"Basal\"     ) |>     head() #> # A tibble: 6 × 25 #>   patient  BCR-XL_CD45_In115@clu…¹ BCR-XL_CD4_Nd145@clu…² BCR-XL_CD20_Sm147@cl…³ #>   <chr>                      <dbl>                  <dbl>                  <dbl> #> 1 patient1                   0.864                   2.47                  13.0  #> 2 patient2                   1.11                    7.05                  10.8  #> 3 patient3                   0.670                   6.23                  10.5  #> 4 patient4                   2.64                    5.86                   9.90 #> 5 patient5                   0.594                   7.56                   8.13 #> 6 patient6                   0.661                   4.77                   7.97 #> # ℹ abbreviated names: ¹​`BCR-XL_CD45_In115@cluster3_emd`, #> #   ²​`BCR-XL_CD4_Nd145@cluster3_emd`, ³​`BCR-XL_CD20_Sm147@cluster3_emd` #> # ℹ 21 more variables: `BCR-XL_CD45_In115@cluster7_emd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster7_emd` <dbl>, #> #   `BCR-XL_CD20_Sm147@cluster7_emd` <dbl>, #> #   `BCR-XL_CD45_In115@cluster4_emd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster4_emd` <dbl>, … # Jensen-Shannon Divergence citrus_data |>     tof_extract_jsd(         cluster_col = cluster,         group_cols = patient,         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         jsd_col = stimulation,         reference_level = \"Basal\"     ) |>     head() #> # A tibble: 6 × 25 #>   patient  BCR-XL_CD45_In115@clu…¹ BCR-XL_CD4_Nd145@clu…² BCR-XL_CD20_Sm147@cl…³ #>   <chr>                      <dbl>                  <dbl>                  <dbl> #> 1 patient1                 0.0367                  0.0513                  0.347 #> 2 patient2                 0.00831                 0.168                   0.401 #> 3 patient3                 0.0104                  0.115                   0.357 #> 4 patient4                 0.0301                  0.135                   0.205 #> 5 patient5                 0.00911                 0.0789                  0.274 #> 6 patient6                 0.00972                 0.0346                  0.214 #> # ℹ abbreviated names: ¹​`BCR-XL_CD45_In115@cluster3_jsd`, #> #   ²​`BCR-XL_CD4_Nd145@cluster3_jsd`, ³​`BCR-XL_CD20_Sm147@cluster3_jsd` #> # ℹ 21 more variables: `BCR-XL_CD45_In115@cluster7_jsd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster7_jsd` <dbl>, #> #   `BCR-XL_CD20_Sm147@cluster7_jsd` <dbl>, #> #   `BCR-XL_CD45_In115@cluster4_jsd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster4_jsd` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"putting-it-all-together-with-tof_extract_features","dir":"Articles","previous_headings":"","what":"Putting it all together with tof_extract_features()","title":"Feature extraction","text":"Finally, tof_extract_features() verb provides wrapper members function family, allowing users extract multiple features types . example, following code extracts proportion cluster, median several markers cluster, EMD basal condition stimulated condition cluster patients citrus_data.","code":"signaling_markers <-     c(         \"pNFkB_Nd142\", \"pStat5_Nd150\", \"pAkt_Sm152\", \"pStat1_Eu153\", \"pStat3_Gd158\",         \"pSlp76_Dy164\", \"pBtk_Er166\", \"pErk_Er168\", \"pS6_Yb172\", \"pZap70_Gd156\"     )  citrus_data |>     tof_extract_features(         cluster_col = cluster,         group_cols = patient,         stimulation_col = stimulation,         lineage_cols = any_of(c(\"CD45_In115\", \"CD20_Sm147\", \"CD33_Nd148\")),         signaling_cols = any_of(signaling_markers),         signaling_method = \"emd\",         basal_level = \"Basal\"     ) |>     head() #> # A tibble: 6 × 193 #>   patient  `prop@cluster1` `prop@cluster2` `prop@cluster3` `prop@cluster4` #>   <chr>              <dbl>           <dbl>           <dbl>           <dbl> #> 1 patient1          0.0149          0.0438           0.356           0.351 #> 2 patient2          0.0115          0.0212           0.425           0.323 #> 3 patient3          0.0255          0.0594           0.355           0.217 #> 4 patient4          0.0127          0.0418           0.320           0.223 #> 5 patient5          0.0207          0.0423           0.377           0.269 #> 6 patient6          0.0183          0.0493           0.459           0.250 #> # ℹ 188 more variables: `prop@cluster5` <dbl>, `prop@cluster6` <dbl>, #> #   `prop@cluster7` <dbl>, `prop@cluster8` <dbl>, #> #   `CD45_In115@cluster1_ct` <dbl>, `CD20_Sm147@cluster1_ct` <dbl>, #> #   `CD33_Nd148@cluster1_ct` <dbl>, `CD45_In115@cluster2_ct` <dbl>, #> #   `CD20_Sm147@cluster2_ct` <dbl>, `CD33_Nd148@cluster2_ct` <dbl>, #> #   `CD45_In115@cluster3_ct` <dbl>, `CD20_Sm147@cluster3_ct` <dbl>, #> #   `CD33_Nd148@cluster3_ct` <dbl>, `CD45_In115@cluster4_ct` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Feature extraction","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats4    stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #>  [1] HDCytoData_1.22.0           flowCore_2.14.1             #>  [3] SummarizedExperiment_1.32.0 Biobase_2.62.0              #>  [5] GenomicRanges_1.54.1        GenomeInfoDb_1.38.7         #>  [7] IRanges_2.36.0              S4Vectors_0.40.2            #>  [9] MatrixGenerics_1.14.0       matrixStats_1.2.0           #> [11] ExperimentHub_2.10.0        AnnotationHub_3.10.0        #> [13] BiocFileCache_2.10.1        dbplyr_2.4.0                #> [15] BiocGenerics_0.48.1         stringr_1.5.1               #> [17] dplyr_1.1.4                 tidytof_0.99.0              #>  #> loaded via a namespace (and not attached): #>   [1] jsonlite_1.8.8                shape_1.4.6.1                 #>   [3] magrittr_2.0.3                farver_2.1.1                  #>   [5] rmarkdown_2.26                fs_1.6.3                      #>   [7] zlibbioc_1.48.0               ragg_1.2.7                    #>   [9] vctrs_0.6.5                   memoise_2.0.1                 #>  [11] htmltools_0.5.7               S4Arrays_1.2.1                #>  [13] curl_5.2.1                    SparseArray_1.2.4             #>  [15] sass_0.4.8                    parallelly_1.37.1             #>  [17] bslib_0.6.1                   desc_1.4.3                    #>  [19] lubridate_1.9.3               cachem_1.0.8                  #>  [21] igraph_2.0.2                  mime_0.12                     #>  [23] lifecycle_1.0.4               iterators_1.0.14              #>  [25] pkgconfig_2.0.3               Matrix_1.6-5                  #>  [27] R6_2.5.1                      fastmap_1.1.1                 #>  [29] shiny_1.8.0                   GenomeInfoDbData_1.2.11       #>  [31] future_1.33.1                 digest_0.6.34                 #>  [33] colorspace_2.1-0              AnnotationDbi_1.64.1          #>  [35] textshaping_0.3.7             RSQLite_2.3.5                 #>  [37] philentropy_0.8.0             filelock_1.0.3                #>  [39] cytolib_2.14.1                fansi_1.0.6                   #>  [41] yardstick_1.3.0               timechange_0.3.0              #>  [43] httr_1.4.7                    polyclip_1.10-6               #>  [45] abind_1.4-5                   compiler_4.3.3                #>  [47] bit64_4.0.5                   withr_3.0.0                   #>  [49] doParallel_1.0.17             viridis_0.6.5                 #>  [51] DBI_1.2.2                     ggforce_0.4.2                 #>  [53] MASS_7.3-60.0.1               lava_1.8.0                    #>  [55] rappdirs_0.3.3                DelayedArray_0.28.0           #>  [57] tools_4.3.3                   interactiveDisplayBase_1.40.0 #>  [59] httpuv_1.6.14                 future.apply_1.11.1           #>  [61] nnet_7.3-19                   glue_1.7.0                    #>  [63] promises_1.2.1                grid_4.3.3                    #>  [65] generics_0.1.3                recipes_1.0.10                #>  [67] gtable_0.3.4                  tzdb_0.4.0                    #>  [69] class_7.3-22                  tidyr_1.3.1                   #>  [71] data.table_1.15.2             hms_1.1.3                     #>  [73] tidygraph_1.3.1               utf8_1.2.4                    #>  [75] XVector_0.42.0                ggrepel_0.9.5                 #>  [77] BiocVersion_3.18.1            foreach_1.5.2                 #>  [79] pillar_1.9.0                  RcppHNSW_0.6.0                #>  [81] later_1.3.2                   splines_4.3.3                 #>  [83] tweenr_2.0.3                  lattice_0.22-5                #>  [85] survival_3.5-8                bit_4.0.5                     #>  [87] emdist_0.3-3                  RProtoBufLib_2.14.0           #>  [89] tidyselect_1.2.0              Biostrings_2.70.2             #>  [91] knitr_1.45                    gridExtra_2.3                 #>  [93] xfun_0.42                     graphlayouts_1.1.1            #>  [95] hardhat_1.3.1                 timeDate_4032.109             #>  [97] stringi_1.8.3                 yaml_2.3.8                    #>  [99] evaluate_0.23                 codetools_0.2-19              #> [101] ggraph_2.2.1                  tibble_3.2.1                  #> [103] BiocManager_1.30.22           cli_3.6.2                     #> [105] rpart_4.1.23                  xtable_1.8-4                  #> [107] systemfonts_1.0.6             munsell_0.5.0                 #> [109] jquerylib_0.1.4               Rcpp_1.0.12                   #> [111] globals_0.16.3                png_0.1-8                     #> [113] parallel_4.3.3                ellipsis_0.3.2                #> [115] pkgdown_2.0.7                 gower_1.0.1                   #> [117] ggplot2_3.5.0                 readr_2.1.5                   #> [119] blob_1.2.4                    listenv_0.9.1                 #> [121] glmnet_4.1-8                  viridisLite_0.4.2             #> [123] ipred_0.9-14                  scales_1.3.0                  #> [125] prodlim_2023.08.28            purrr_1.0.2                   #> [127] crayon_1.5.2                  rlang_1.1.3                   #> [129] KEGGREST_1.42.0"},{"path":"https://keyes-timothy.github.io/tidytof/articles/modeling.html","id":"accessing-the-data-for-this-vignette","dir":"Articles","previous_headings":"","what":"Accessing the data for this vignette","title":"Building predictive models","text":"illustrate work, first download patient-level data paper combine sample-level clinical annotations one tidytof’s built-datasets (ddpr_metadata). data processing steps result tibble called ddpr_patients. numeric columns ddpr_patients represent aggregated cell population features sample (see Supplementary Table 5 paper details). non-numeric columns represent clinical metadata sample (run ?ddpr_metadata information). metadata columns, important ones indicate patient develop refractory disease (“relapse”), /happen. information stored relapse_status time_to_relapse columns, respectively. also preprocessing steps might want perform now save us headaches ’re fitting models later. next part vignette, ’ll use patient-level data build predictive models using resampling procedures like k-fold cross-validation bootstrapping.","code":"data(ddpr_metadata)  # link for downloading the sample-level data from the Nature Medicine website data_link <-     \"https://static-content.springer.com/esm/art%3A10.1038%2Fnm.4505/MediaObjects/41591_2018_BFnm4505_MOESM3_ESM.csv\"  # download the data and combine it with clinical annotations ddpr_patients <-     readr::read_csv(data_link, skip = 2L, n_max = 78L, show_col_types = FALSE) |>     dplyr::rename(patient_id = Patient_ID) |>     dplyr::left_join(ddpr_metadata, by = \"patient_id\") |>     dplyr::filter(!str_detect(patient_id, \"Healthy\"))  # preview only the metadata (i.e. non-numeric) columns ddpr_patients |>     dplyr::select(where(~ !is.numeric(.x))) |>     head() #> # A tibble: 6 × 8 #>   patient_id gender mrd_risk nci_rome_risk relapse_status type_of_relapse cohort #>   <chr>      <chr>  <chr>    <chr>         <chr>          <chr>           <chr>  #> 1 UPN1       Male   Interme… Standard      Yes            Early           Train… #> 2 UPN1-Rx    Male   Interme… Standard      Yes            Early           Train… #> 3 UPN2       Male   Interme… Standard      No             NA              Train… #> 4 UPN3       Female Standard Standard      No             NA              Train… #> 5 UPN4       Male   Standard Standard      No             NA              Valid… #> 6 UPN5       Female Standard High          No             NA              Valid… #> # ℹ 1 more variable: ddpr_risk <chr> ddpr_patients <-     ddpr_patients |>     # convert the relapse_status variable to a factor     # and create the time_to_event and event columns for survival modeling     dplyr::mutate(         relapse_status = as.factor(relapse_status),         time_to_event = dplyr::if_else(relapse_status == \"Yes\", time_to_relapse, ccr),         event = dplyr::if_else(relapse_status == \"Yes\", 1, 0)     )"},{"path":"https://keyes-timothy.github.io/tidytof/articles/modeling.html","id":"building-a-classifier-using-elastic-net-regularized-logistic-regression","dir":"Articles","previous_headings":"","what":"Building a classifier using elastic net-regularized logistic regression","title":"Building predictive models","text":"First, can build elastic net classifier predict patients relapse patients won’t (ignoring time--event data now). , can use relapse_status column ddpr_patients outcome variable: can see samples annotated, can throw away samples don’t clinical outcome associated . original DDPR paper, 10-fold cross-validation used tune glmnet model estimate error model new datasets. , can use tof_split_data() function split cohort training test set either 10 times using k-fold cross-validation bootstrapping. Reading documentation tof_split_data() demonstrates use resampling methods (like bootstrapping). output tof_split_data() varies depending split_method used. cross-validation, result rset object rsample package. rset objects type tibble two columns: splits - column entry rsplit object (contains single resample full dataset) id - character column entry represents name fold entry splits belongs . can inspect one resamples splits column see contain: Note can use rsample::training rsample::testing return training test observations resampling: , can feed training_split tof_train_model function tune logistic regression model predicts relapse_status leukemia patient. sure check tof_create_grid documentation learn make hyperparameter search grid model tuning (case, limit mixture parameter value 1, fits sparse lasso model). Also note , case, illustrative purposes ’re incorporating features one populations interest (population 2) model, whereas original model incorporated features 12 populations (likely required quite bit computational power result). output tof_train_model tof_model, object containing information trained model (can passed tof_predict tof_assess_model verbs). tof_model printed, information optimal hyperparamters printed, table nonzero model coefficients model. training model, might interested seeing performs. One way assess classification model see well works applied directly back data trained (model’s “training data”). , can use tof_assess_model() function arguments: tof_assess_model() returns list several model assessment metrics differ depending kind tof_model trained. two-class classifier models, among useful confusion_matrix, shows classifier classified observation relative true class assignment. case, can see model performed perfectly training data (expected, model optimized using data !). can also visualize model’s performance using tof_plot_model() verb, case two-class model give us Receiver-Operating Characteristic (ROC) curve:  shown , tof_plot_model() return receiver-operating curve two-class model. ’s unusual get AUC 1 machine learning world, can note case, classification problem wasn’t particularly difficult (lot input features work ). training model, generally isn’t sufficient evaluate model performs training data alone, provide overly-optimistic representation model perform data ’s never seen (problem often called “overfitting” model training data). get fairer estimate model’s performance new datasets, can also evaluate cross-validation error calling tof_assess_model() tof_plot_model() new_data argument set “tuning”.  case, plot ROC Curve using predictions observation excluded model training cross-validation, approach gives accurate estimate model’s performance new data simple evaluation training dataset.","code":"# find how many of each outcome we have in our cohort ddpr_patients |>     dplyr::count(relapse_status) #> # A tibble: 3 × 2 #>   relapse_status     n #>   <fct>          <int> #> 1 No                37 #> 2 Yes               24 #> 3 NA                12 ddpr_patients_unannotated <-     ddpr_patients |>     dplyr::filter(is.na(relapse_status))  ddpr_patients <-     ddpr_patients |>     dplyr::filter(!is.na(relapse_status)) set.seed(3000L)  training_split <-     ddpr_patients |>     tof_split_data(         split_method = \"k-fold\",         num_cv_folds = 10,         strata = relapse_status     )  training_split #> #  10-fold cross-validation using stratification  #> # A tibble: 10 × 2 #>    splits         id     #>    <list>         <chr>  #>  1 <split [54/7]> Fold01 #>  2 <split [54/7]> Fold02 #>  3 <split [54/7]> Fold03 #>  4 <split [54/7]> Fold04 #>  5 <split [55/6]> Fold05 #>  6 <split [55/6]> Fold06 #>  7 <split [55/6]> Fold07 #>  8 <split [56/5]> Fold08 #>  9 <split [56/5]> Fold09 #> 10 <split [56/5]> Fold10 my_resample <- training_split$splits[[1]]  print(my_resample) #> <Analysis/Assess/Total> #> <54/7/61> my_resample |>     rsample::training() |>     head() #> # A tibble: 6 × 1,854 #>   patient_id Pop_P_Pop1 CD19_Pop1 CD20_Pop1 CD24_Pop1 CD34_Pop1 CD38_Pop1 #>   <chr>           <dbl>     <dbl>     <dbl>     <dbl>     <dbl>     <dbl> #> 1 UPN1           3.06      0.583    0.00449    0.164       1.94     0.416 #> 2 UPN1-Rx        0.0395    0.618    0.0634     0.572       2.93     0.944 #> 3 UPN2           0.139     0.0662   0.0221     0.0825      2.25     0.454 #> 4 UPN3           0.633     0.0234   0.0165     0.0327      2.25     0.226 #> 5 UPN4           0.0443    0.129    0.0447     0.232       2.47     0.336 #> 6 UPN5           0.0647    0.0577   0.0163     0.162       2.89     0.406 #> # ℹ 1,847 more variables: CD127_Pop1 <dbl>, CD179a_Pop1 <dbl>, #> #   CD179b_Pop1 <dbl>, IgMi_Pop1 <dbl>, IgMs_Pop1 <dbl>, TdT_Pop1 <dbl>, #> #   CD22_Pop1 <dbl>, tIkaros_Pop1 <dbl>, CD79b_Pop1 <dbl>, Ki67_Pop1 <dbl>, #> #   TSLPr_Pop1 <dbl>, RAG1_Pop1 <dbl>, CD123_Pop1 <dbl>, CD45_Pop1 <dbl>, #> #   CD10_Pop1 <dbl>, Pax5_Pop1 <dbl>, CD43_Pop1 <dbl>, CD58_Pop1 <dbl>, #> #   HLADR_Pop1 <dbl>, p4EBP1_FC_Basal_Pop1 <dbl>, pSTAT5_FC_Basal_Pop1 <dbl>, #> #   pPLCg1_2_FC_Basal_Pop1 <dbl>, pAkt_FC_Basal_Pop1 <dbl>, … my_resample |>     rsample::testing() |>     head() #> # A tibble: 6 × 1,854 #>   patient_id Pop_P_Pop1 CD19_Pop1 CD20_Pop1 CD24_Pop1 CD34_Pop1 CD38_Pop1 #>   <chr>           <dbl>     <dbl>     <dbl>     <dbl>     <dbl>     <dbl> #> 1 UPN6          5.62      0.550     0.00374     0.622      2.86     0.342 #> 2 UPN10-Rx      0.00240   0.167     0.203       0.802      2.57     0.822 #> 3 UPN13         0.0634    0.0300    0.0219      0.109      2.34     0.314 #> 4 UPN22-Rx      0.0643    1.68      0.0804      1.56       3.06     0.529 #> 5 UPN58         0.00546   0.00918   0.0168      0.480      2.70     0.112 #> 6 UPN95         0.300     0.389     0.00454     0.697      2.45     0.247 #> # ℹ 1,847 more variables: CD127_Pop1 <dbl>, CD179a_Pop1 <dbl>, #> #   CD179b_Pop1 <dbl>, IgMi_Pop1 <dbl>, IgMs_Pop1 <dbl>, TdT_Pop1 <dbl>, #> #   CD22_Pop1 <dbl>, tIkaros_Pop1 <dbl>, CD79b_Pop1 <dbl>, Ki67_Pop1 <dbl>, #> #   TSLPr_Pop1 <dbl>, RAG1_Pop1 <dbl>, CD123_Pop1 <dbl>, CD45_Pop1 <dbl>, #> #   CD10_Pop1 <dbl>, Pax5_Pop1 <dbl>, CD43_Pop1 <dbl>, CD58_Pop1 <dbl>, #> #   HLADR_Pop1 <dbl>, p4EBP1_FC_Basal_Pop1 <dbl>, pSTAT5_FC_Basal_Pop1 <dbl>, #> #   pPLCg1_2_FC_Basal_Pop1 <dbl>, pAkt_FC_Basal_Pop1 <dbl>, … hyperparams <- tof_create_grid(mixture_values = 1)  class_mod <-     training_split |>     tof_train_model(         predictor_cols = c(contains(\"Pop2\")),         response_col = relapse_status,         model_type = \"two-class\",         hyperparameter_grid = hyperparams,         impute_missing_predictors = TRUE,         remove_zv_predictors = TRUE # often a smart decision     ) print(class_mod) #> A two-class `tof_model` with a mixture parameter (alpha) of 1 and a penalty parameter (lambda) of 1e-10  #> # A tibble: 28 × 2 #>    feature               coefficient #>    <chr>                       <dbl> #>  1 p4EBP1_dP_IL7_Pop2          -3.10 #>  2 pCreb_dP_PVO4_Pop2          -2.66 #>  3 TSLPr_Pop2                   2.07 #>  4 CD43_Pop2                    2.00 #>  5 pSTAT5_FC_PVO4_Pop2         -1.80 #>  6 pS6_dP_IL7_Pop2              1.56 #>  7 pPLCg1_2_dP_PVO4_Pop2        1.44 #>  8 (Intercept)                 -1.43 #>  9 pSTAT5_FC_BCR_Pop2           1.24 #> 10 pErk_dP_IL7_Pop2            -1.23 #> # ℹ 18 more rows training_classifier_metrics <-     class_mod |>     tof_assess_model() training_classifier_metrics$confusion_matrix #> # A tibble: 4 × 3 #>   true_outcome predicted_outcome num_observations #>   <chr>        <chr>                        <int> #> 1 No           No                              37 #> 2 No           Yes                              0 #> 3 Yes          No                               0 #> 4 Yes          Yes                             24 class_mod |>     tof_plot_model() cv_classifier_metrics <-     class_mod |>     tof_assess_model(new_data = \"tuning\")  class_mod |>     tof_plot_model(new_data = \"tuning\")"},{"path":"https://keyes-timothy.github.io/tidytof/articles/modeling.html","id":"building-a-survival-model-using-elastic-net-regularized-cox-regression","dir":"Articles","previous_headings":"","what":"Building a survival model using elastic net-regularized cox regression","title":"Building predictive models","text":"Building ideas , sophisticated way model data simply predict relapse won’t, build time--event model estimates patients’ probabilities relapse function time since diagnosis. approach called “survival modeling” (specifically, case use Cox-proportional hazards modeling) takes account patients adverse events different times course disease (.e. everyone relapses time). build survival model using tidytof, use tof_train_model() verb setting model_type flag “survival”. addition, need provide two outcome columns. first columns (event_col) indicates patient relapsed (.e. experienced event--interest) censored certain amount follow-time. second (time_col) indicates much time took patient relapse censored analysis. survival model trained, can used predict patient’s probability event--interest different times post-diagnosis. However, common way survival models applied practice use patient’s predicted relative risk event--interest divide patients low- high-risk subgroups. tidytof can automatically according optimal split obtained using log-rank test possible split points dataset tof_assess_model(). addition, return predicted survival curve patient time: survival models, tof_plot_model() plots average survival curves low- high-risk groups:","code":"hyperparams <- tof_create_grid(mixture_values = 1)  survival_mod <-     training_split |>     tof_train_model(         predictor_cols = c(contains(\"Pop2\")),         time_col = time_to_event,         event_col = event,         model_type = \"survival\",         hyperparameter_grid = hyperparams,         impute_missing_predictors = TRUE,         remove_zv_predictors = TRUE # often a smart decision     )  print(survival_mod) #> A survival `tof_model` with a mixture parameter (alpha) of 1 and a penalty parameter (lambda) of 3.162e-03  #> # A tibble: 40 × 2 #>    feature               coefficient #>    <chr>                       <dbl> #>  1 pErk_dP_TSLP_Pop2           -7.03 #>  2 pCreb_dP_PVO4_Pop2          -5.47 #>  3 CD19_Pop2                   -3.73 #>  4 CD34_Pop2                    3.63 #>  5 pSTAT5_FC_BCR_Pop2           3.40 #>  6 HLADR_Pop2                  -3.38 #>  7 pPLCg1_2_dP_IL7_Pop2         3.33 #>  8 pPLCg1_2_dP_PVO4_Pop2        3.14 #>  9 pSyk_dP_TSLP_Pop2            2.88 #> 10 CD123_Pop2                   2.77 #> # ℹ 30 more rows survival_metrics <-     survival_mod |>     tof_assess_model()  survival_metrics #> $model_metrics #> # A tibble: 3 × 2 #>   metric                        value #>   <chr>                         <dbl> #> 1 neg_log_partial_likelihood 1.76e+ 1 #> 2 concordance_index          1   e+ 0 #> 3 log_rank_p_value           1.47e-22 #>  #> $survival_curves #> # A tibble: 61 × 6 #>    row_index survival_curve    relative_risk time_to_event event risk_group #>    <chr>     <list>                    <dbl>         <dbl> <dbl> <chr>      #>  1 1         <tibble [54 × 2]>       2.83e+3          1043     1 low        #>  2 2         <tibble [54 × 2]>       2.61e+3          1043     1 low        #>  3 3         <tibble [54 × 2]>       1.58e-8          5406     0 low        #>  4 4         <tibble [54 × 2]>       2.09e-4          4917     0 low        #>  5 5         <tibble [54 × 2]>       9.98e-3          4538     0 low        #>  6 6         <tibble [54 × 2]>       6.62e-1          4490     0 low        #>  7 7         <tibble [54 × 2]>       4.09e+9           136     1 high       #>  8 8         <tibble [54 × 2]>       2.57e+8           364     1 high       #>  9 9         <tibble [54 × 2]>       1.27e+9           237     1 high       #> 10 10        <tibble [54 × 2]>       2.31e+4           886     1 low        #> # ℹ 51 more rows survival_mod |>     tof_plot_model() cv_survival_metrics <-     survival_mod |>     tof_assess_model(new_data = \"tuning\") survival_mod |>     tof_plot_model(new_data = \"tuning\")"},{"path":"https://keyes-timothy.github.io/tidytof/articles/modeling.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Building predictive models","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] stringr_1.5.1  tidytof_0.99.0 #>  #> loaded via a namespace (and not attached): #>   [1] gridExtra_2.3       rlang_1.1.3         magrittr_2.0.3      #>   [4] furrr_0.3.1         matrixStats_1.2.0   compiler_4.3.3      #>   [7] systemfonts_1.0.6   vctrs_0.6.5         crayon_1.5.2        #>  [10] pkgconfig_2.0.3     shape_1.4.6.1       fastmap_1.1.1       #>  [13] ellipsis_0.3.2      labeling_0.4.3      ggraph_2.2.1        #>  [16] utf8_1.2.4          rmarkdown_2.26      prodlim_2023.08.28  #>  [19] tzdb_0.4.0          ragg_1.2.7          bit_4.0.5           #>  [22] purrr_1.0.2         xfun_0.42           glmnet_4.1-8        #>  [25] cachem_1.0.8        jsonlite_1.8.8      recipes_1.0.10      #>  [28] highr_0.10          tweenr_2.0.3        parallel_4.3.3      #>  [31] R6_2.5.1            rsample_1.2.0       bslib_0.6.1         #>  [34] stringi_1.8.3       parallelly_1.37.1   rpart_4.1.23        #>  [37] lubridate_1.9.3     jquerylib_0.1.4     Rcpp_1.0.12         #>  [40] iterators_1.0.14    knitr_1.45          future.apply_1.11.1 #>  [43] readr_2.1.5         flowCore_2.14.1     Matrix_1.6-5        #>  [46] splines_4.3.3       nnet_7.3-19         igraph_2.0.2        #>  [49] timechange_0.3.0    tidyselect_1.2.0    yaml_2.3.8          #>  [52] viridis_0.6.5       timeDate_4032.109   doParallel_1.0.17   #>  [55] codetools_0.2-19    curl_5.2.1          listenv_0.9.1       #>  [58] lattice_0.22-5      tibble_3.2.1        Biobase_2.62.0      #>  [61] withr_3.0.0         evaluate_0.23       future_1.33.1       #>  [64] desc_1.4.3          survival_3.5-8      polyclip_1.10-6     #>  [67] pillar_1.9.0        foreach_1.5.2       stats4_4.3.3        #>  [70] generics_0.1.3      vroom_1.6.5         RcppHNSW_0.6.0      #>  [73] S4Vectors_0.40.2    hms_1.1.3           ggplot2_3.5.0       #>  [76] munsell_0.5.0       scales_1.3.0        globals_0.16.3      #>  [79] class_7.3-22        glue_1.7.0          tools_4.3.3         #>  [82] data.table_1.15.2   gower_1.0.1         fs_1.6.3            #>  [85] graphlayouts_1.1.1  tidygraph_1.3.1     grid_4.3.3          #>  [88] yardstick_1.3.0     tidyr_1.3.1         RProtoBufLib_2.14.0 #>  [91] ipred_0.9-14        colorspace_2.1-0    ggforce_0.4.2       #>  [94] cli_3.6.2           textshaping_0.3.7   fansi_1.0.6         #>  [97] cytolib_2.14.1      viridisLite_0.4.2   lava_1.8.0          #> [100] dplyr_1.1.4         gtable_0.3.4        sass_0.4.8          #> [103] digest_0.6.34       BiocGenerics_0.48.1 ggrepel_0.9.5       #> [106] farver_2.1.1        memoise_2.0.1       htmltools_0.5.7     #> [109] pkgdown_2.0.7       lifecycle_1.0.4     hardhat_1.3.1       #> [112] bit64_4.0.5         MASS_7.3-60.0.1"},{"path":"https://keyes-timothy.github.io/tidytof/articles/preprocessing.html","id":"preprocessing-with-tof_preprocess","dir":"Articles","previous_headings":"","what":"Preprocessing with tof_preprocess","title":"Preprocessing","text":"Generally speaking, raw ion counts measured analyte mass cytometer (content raw FCS files obtained directly mass cytometer) need transformed CyTOF data analysis. Common preprocessing steps may include variance-stabilizing transformations - hyperbolic arcsine (arcsinh) transformation log transformation - scaling/centering, /denoising. perform standard preprocessing tasks tidytof, use tof_preprocess. tof_preprocess’s default behavior apply arcsinh transformation (cofactor 5) numeric column input tof_tibble well remove gaussian noise Fluidigm software adds ion count (noise added visualization purposes, analyses, removing recommended). example, can preprocess tidytof’s built-phenograph_data tof_tibble see first measurements change . alter tof_preprocess’s default behavior, change channel_cols argument specify columns tof_tibble transformed. Alter transform_fun argument specify vector-valued function used transform channel_cols. example, suppose want center scale numeric columns instead arcsinh-transforming : keep gaussian noise added Fluidigm software (working dataset noise), set undo_noise argument FALSE.","code":"data(phenograph_data)  # before preprocessing phenograph_data %>%     select(cd45, cd34, cd38) %>%     head() #> # A tibble: 6 × 3 #>    cd45   cd34  cd38 #>   <dbl>  <dbl> <dbl> #> 1  131.  3.23   1.51 #> 2  230. -0.582 11.4  #> 3  293.  5.20   1.84 #> 4  431.  0.363 13.3  #> # ℹ 2 more rows phenograph_data %>%     # perform preprocessing     tof_preprocess() %>%     # inspect new values     select(cd45, cd34, cd38) %>%     head() #> # A tibble: 6 × 3 #>    cd45    cd34  cd38 #>   <dbl>   <dbl> <dbl> #> 1  3.96  0.608  0.298 #> 2  4.52 -0.116  1.56  #> 3  4.76  0.909  0.360 #> 4  5.15  0.0725 1.70  #> # ℹ 2 more rows phenograph_data %>%     # preprocess     tof_preprocess(transform_fun = scale) %>%     # inspect new values     select(cd45, cd34, cd38) %>%     head() #> # A tibble: 6 × 3 #>   cd45[,1] cd34[,1] cd38[,1] #>      <dbl>    <dbl>    <dbl> #> 1   -1.40     1.01   -0.437  #> 2   -1.15    -0.911   0.0316 #> 3   -0.999    2.00   -0.422  #> 4   -0.661   -0.436   0.120  #> # ℹ 2 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/preprocessing.html","id":"postprocessing-with-tof_postprocess","dir":"Articles","previous_headings":"","what":"Postprocessing with tof_postprocess","title":"Preprocessing","text":"final note, note built-function tof_postprocess works nearly identically tof_preprocess, provides different default behavior (namely, applying reverse arcsinh transformation cofactor 5 numeric columns. See ?tof_postprocess details).","code":"print(phenograph_data) %>%     select(cd45, cd34, cd38) %>%     head() #> # A tibble: 3,000 × 25 #>   sample_name  phenograph_cluster    cd19 cd11b   cd34  cd45  cd123   cd33  cd47 #>   <chr>        <chr>                <dbl> <dbl>  <dbl> <dbl>  <dbl>  <dbl> <dbl> #> 1 H1_PhenoGra… cluster1           -0.168  29.0   3.23   131. -0.609  1.21   13.0 #> 2 H1_PhenoGra… cluster1            1.65    4.83 -0.582  230.  2.53  -0.507  12.9 #> 3 H1_PhenoGra… cluster1            2.79   36.1   5.20   293. -0.265  3.67   27.1 #> 4 H1_PhenoGra… cluster1            0.0816 48.8   0.363  431.  2.04   9.40   41.0 #> # ℹ 2,996 more rows #> # ℹ 16 more variables: cd7 <dbl>, cd44 <dbl>, cd38 <dbl>, cd3 <dbl>, #> #   cd117 <dbl>, cd64 <dbl>, cd41 <dbl>, pstat3 <dbl>, pstat5 <dbl>, #> #   pampk <dbl>, p4ebp1 <dbl>, ps6 <dbl>, pcreb <dbl>, `pzap70-syk` <dbl>, #> #   prb <dbl>, `perk1-2` <dbl> #> # A tibble: 6 × 3 #>    cd45   cd34  cd38 #>   <dbl>  <dbl> <dbl> #> 1  131.  3.23   1.51 #> 2  230. -0.582 11.4  #> 3  293.  5.20   1.84 #> 4  431.  0.363 13.3  #> # ℹ 2 more rows  # after preprocessing and post-processing, the data are the same # except that the re-added noise component is different for each value phenograph_data %>%     tof_preprocess() %>%     tof_postprocess(redo_noise = TRUE) %>%     select(cd45, cd34, cd38) %>%     head() #> # A tibble: 6 × 3 #>    cd45   cd34   cd38 #>   <dbl>  <dbl>  <dbl> #> 1  130.  3.07   1.44  #> 2  229. -1.56  10.9   #> 3  293.  4.49   0.873 #> 4  431. -0.218 12.7   #> # ℹ 2 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/preprocessing.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Preprocessing","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] dplyr_1.1.4    tidytof_0.99.0 #>  #> loaded via a namespace (and not attached): #>   [1] tidyselect_1.2.0    viridisLite_0.4.2   timeDate_4032.109   #>   [4] farver_2.1.1        viridis_0.6.5       ggraph_2.2.1        #>   [7] fastmap_1.1.1       tweenr_2.0.3        rpart_4.1.23        #>  [10] digest_0.6.34       timechange_0.3.0    lifecycle_1.0.4     #>  [13] yardstick_1.3.0     survival_3.5-8      magrittr_2.0.3      #>  [16] compiler_4.3.3      rlang_1.1.3         sass_0.4.8          #>  [19] tools_4.3.3         igraph_2.0.2        utf8_1.2.4          #>  [22] yaml_2.3.8          data.table_1.15.2   knitr_1.45          #>  [25] graphlayouts_1.1.1  withr_3.0.0         purrr_1.0.2         #>  [28] RProtoBufLib_2.14.0 BiocGenerics_0.48.1 desc_1.4.3          #>  [31] nnet_7.3-19         grid_4.3.3          polyclip_1.10-6     #>  [34] stats4_4.3.3        fansi_1.0.6         RcppHNSW_0.6.0      #>  [37] future_1.33.1       colorspace_2.1-0    ggplot2_3.5.0       #>  [40] globals_0.16.3      scales_1.3.0        iterators_1.0.14    #>  [43] MASS_7.3-60.0.1     cli_3.6.2           rmarkdown_2.26      #>  [46] ragg_1.2.7          generics_0.1.3      future.apply_1.11.1 #>  [49] tzdb_0.4.0          cachem_1.0.8        flowCore_2.14.1     #>  [52] ggforce_0.4.2       stringr_1.5.1       splines_4.3.3       #>  [55] parallel_4.3.3      matrixStats_1.2.0   vctrs_0.6.5         #>  [58] hardhat_1.3.1       glmnet_4.1-8        Matrix_1.6-5        #>  [61] jsonlite_1.8.8      cytolib_2.14.1      hms_1.1.3           #>  [64] S4Vectors_0.40.2    ggrepel_0.9.5       listenv_0.9.1       #>  [67] systemfonts_1.0.6   foreach_1.5.2       gower_1.0.1         #>  [70] tidyr_1.3.1         jquerylib_0.1.4     recipes_1.0.10      #>  [73] parallelly_1.37.1   glue_1.7.0          pkgdown_2.0.7       #>  [76] codetools_0.2-19    stringi_1.8.3       lubridate_1.9.3     #>  [79] gtable_0.3.4        shape_1.4.6.1       munsell_0.5.0       #>  [82] tibble_3.2.1        pillar_1.9.0        htmltools_0.5.7     #>  [85] ipred_0.9-14        lava_1.8.0          R6_2.5.1            #>  [88] textshaping_0.3.7   doParallel_1.0.17   tidygraph_1.3.1     #>  [91] evaluate_0.23       Biobase_2.62.0      lattice_0.22-5      #>  [94] readr_2.1.5         memoise_2.0.1       bslib_0.6.1         #>  [97] class_7.3-22        Rcpp_1.0.12         prodlim_2023.08.28  #> [100] gridExtra_2.3       xfun_0.42           fs_1.6.3            #> [103] pkgconfig_2.0.3"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"accessing-the-data-for-this-vignette","dir":"Articles","previous_headings":"","what":"Accessing the data for this vignette","title":"Quality control","text":"demonstrate use {tidytof}’s quality control verbs, use combination simulated real data vignette. Simulated data generated --fly sections , walk download real dataset section. want download dataset originally collected development PhenoGraph algorithm. data built HDCytoData package, available Bioconductor can downloaded following command: load PhenoGraph data current R session, can call function HDCytoData, provide us format {flowCore} package (called “flowSet”). convert tidy tibble, can use tidytof built-method converting flowCore objects tof_tbl’s. also add lines dplyr code clean column names perform standard arcsinh transformation. Thus, can see levine tof_tbl 265627 cells (one row) 40 pieces information cell (one column).","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE)) {     install.packages(\"BiocManager\") }  BiocManager::install(\"HDCytoData\") levine <-     HDCytoData::Levine_32dim_flowSet() |>     as_tof_tbl() |>     # a bit of data cleaning     dplyr::mutate(population_id = as.character(population_id)) |>     dplyr::rename_with(         .fn = \\(x) stringr::str_to_lower(stringr::str_remove(x, \"\\\\|.+\"))     ) |>     dplyr::mutate(dplyr::across(c(file_number, population_id), as.character)) |>     # arcsinh transformation     tof_preprocess(         channel_cols =             c(-time, -cell_length, -event_number, -file_number, -population_id)     )"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"detect-low-expression-i-e--potentially-failed-channels-with-tof_assess_channels","dir":"Articles","previous_headings":"","what":"Detect low-expression (i.e. potentially failed) channels with tof_assess_channels()","title":"Quality control","text":"data collection, might wonder channels include downstream analyses. particular, might want exclude channels positive values, situation indicates antibody may failed, signal particular channel may weak detected. , can use tof_assess_channels(), verb calculates many cells negative (.e. use-specified threshold, negative_threshold) channel flags channels user-specified proportion negative cells (negative_proportion_flag). levine dataset, look markers 97.5% cells threshold 5 ion counts: can see two channels 97.5% cells dataset 5 counts. given experiment, might expected (.e. marker expressed rare cell population) unexpected (marker expressed many cells). case, can visualize marker negative cells manually inspect (recommend flagged channels).  case, looks like small population cells slightly positive cd14, simply measurement noise/nonspecific binding antibody. user whether include cd14 downstream analyses.","code":"# convert 5 counts to asinh value with a cofactor of 5 threshold <- asinh(5 / 5)  levine |>     tof_assess_channels(         negative_threshold = threshold,         negative_proportion_flag = 0.975     ) #> # A tibble: 38 × 3 #>    channel negative_proportion flagged_channel #>    <chr>                 <dbl> <lgl>           #>  1 cd14                  0.988 TRUE            #>  2 cd133                 0.975 TRUE            #>  3 cd117                 0.969 FALSE           #>  4 cd16                  0.967 FALSE           #>  5 flt3                  0.960 FALSE           #>  6 cd15                  0.940 FALSE           #>  7 cd41                  0.923 FALSE           #>  8 cd34                  0.909 FALSE           #>  9 cd61                  0.890 FALSE           #> 10 cd33                  0.885 FALSE           #> # ℹ 28 more rows levine |>     tof_plot_cells_density(marker_col = cd14)"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"identify-time-periods-of-abnormally-low-or-high-flow-rate-during-data-acquisition-using-tof_assess_flow_rate","dir":"Articles","previous_headings":"","what":"Identify time periods of abnormally low or high flow rate during data acquisition using tof_assess_flow_rate()","title":"Quality control","text":"Large changes flow rate cytometer can impact quality signal acquired data collection: example, abnormally low flow rates can caused partial occlusions cytometer’s flow cell, leading debris air infiltration cytometer’s microfluidics system. Thus, can useful perform quality control step explicitly interrogates flow rate course cytometry experiment order flag cells collected unusually high low rates acquisition. , {tidytof} provides tof_assess_flow_rate(), function implements simplified version FlowAI’s flow rate analysis. short, relative flow rates timestep cytometry experiment calculated, outlier timepoints particularly high low flow rates (.e. beyond extreme values t-distribution across timesteps) flagged. size timesteps user-defined parameter calculation, significance level (0 1) within t-distribution determines anomalous time step’s flow rate must cells flagged. can apply tof_assess_flow_rate() levine dataset , using  result , can see last several timesteps flagged potentially low flow rates. decision include exclude cells analyses left user. group_cols argument can also used analyze flow rates samples, patients, mass cytometry barcode plates, etc. separately.","code":"levine |>     tof_assess_flow_rate(         time_col = time,         num_timesteps = 200,         # flag timepoints in which flow rates are high or low at a signicance level         # of p = 0.01         alpha_threshold = 0.01,         # plot the number of cells in each timestep, and whether or not the         # rates were flagged as too high or too low         visualize = TRUE     ) levine |>     tof_assess_flow_rate(         time_col = time,         # analyze two files in the levine dataset separately         group_cols = file_number,         alpha_threshold = 0.01,         visualize = TRUE     )"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"flag-cells-that-are-unusually-far-from-the-centroid-of-a-cluster-to-which-they-have-been-assigned-with-tof_assess_clusters_distance","dir":"Articles","previous_headings":"","what":"Flag cells that are unusually far from the centroid of a cluster to which they have been assigned with tof_assess_clusters_distance()","title":"Quality control","text":"using favorite clustering algorithm define cell subpopulations (example, using tof_cluster()), may wonder well clustering procedure worked. example, may clusters contain outliers - , cells less similar cells cluster typical. detect cells, tidytof provides tof_assess_clusters_distance() verb, computes Mahalanobis distance cell centroid cluster assigned. , computes z-score mahalanobis distances cells cluster flags cells z-score user-specified threshold. Altogether, procedure flags cells unusually far cluster centroid - .e. candidate outliers. demonstrate use tof_assess_clusters_distance() simulated data. simulate data 3 clusters, large population cells “truly” belong cluster well small population outliers cells erroneously assigned cluster. following plots visualize simulated data described :   Using dataset, see tof_assess_clusters_distance() can successfully flag majority outlier cells cluster.","code":"set.seed(2020L)  # simulate large population of cells that truly belong in their assigned cluster sim_data_base <-     dplyr::tibble(         cd45 = c(rnorm(n = 600), rnorm(n = 500, mean = -4)),         cd38 =             c(                 rnorm(n = 100, sd = 0.5),                 rnorm(n = 500, mean = -3),                 rnorm(n = 500, mean = 8)             ),         cd34 =             c(                 rnorm(n = 100, sd = 0.2, mean = -10),                 rnorm(n = 500, mean = 4),                 rnorm(n = 500, mean = 60)             ),         cd19 = c(rnorm(n = 100, sd = 0.3, mean = 10), rnorm(n = 1000)),         cluster_id = c(rep(\"a\", 100), rep(\"b\", 500), rep(\"c\", 500)),         dataset = \"non-outlier\"     )  # simulate outlier cells that do not belong in their assigned cluster sim_data_outlier <-     dplyr::tibble(         cd45 = c(rnorm(n = 10), rnorm(50, mean = 3), rnorm(n = 50, mean = -12)),         cd38 =             c(                 rnorm(n = 10, sd = 0.5),                 rnorm(n = 50, mean = -10),                 rnorm(n = 50, mean = 10)             ),         cd34 =             c(                 rnorm(n = 10, sd = 0.2, mean = -15),                 rnorm(n = 50, mean = 15),                 rnorm(n = 50, mean = 70)             ),         cd19 = c(rnorm(n = 10, sd = 0.3, mean = 19), rnorm(n = 100)),         cluster_id = c(rep(\"a\", 10), rep(\"b\", 50), rep(\"c\", 50)),         dataset = \"outlier\"     )  # bind simulated data together sim_data <- bind_rows(sim_data_base, sim_data_outlier) sim_data |>     tof_plot_cells_embedding(color_col = cluster_id) sim_data |>     tof_plot_cells_embedding(color_col = dataset) sim_data |>     tof_assess_clusters_distance(         cluster_col = cluster_id,         # flag cells with a mahalanobis distance z-score over 3         z_threshold = 3,         augment = TRUE     ) |>     # visualize result as above     dplyr::select(-dplyr::starts_with(\".mahala\"), -z_score) |>     dplyr::mutate(flagged_cell = as.character(flagged_cell)) |>     tof_plot_cells_embedding(color_col = flagged_cell) +     scale_fill_manual(values = tof_generate_palette(num_colors = 2))"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"flag-cells-whose-cluster-assignment-is-ambiguous-with-tof_assess_clusters_entropy","dir":"Articles","previous_headings":"","what":"Flag cells whose cluster assignment is ambiguous with tof_assess_clusters_entropy()","title":"Quality control","text":"may also wish evaluate clustering result based cell’s absolute distance centroid cluster assigned, based relative distances cell cluster centroids. , order confident cell’s cluster assignment, ideally want cell close centroid cluster assigned, relatively distant clusters. contrasts scenario cell might similarly close centroids 2-3 clusters, case might think cell “ambiguous” phenotype, phenotype intermediate clusters clustering algorithm identified. flag “ambiguous” clusters, {tidytof} provides tof_assess_clusters_entropy() verb. tof_assess_clusters_entropy() computes entropy L1-scaled mahalanobis distance vector (.e. mahalanobis distance cell centroids clusters dataset) - entropy low (close 0) confident cell’s cluster assignment, high (near 1) equally close multiple cluster centroids. demonstrate use function simulated data levine dataset .","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"simulated-data","dir":"Articles","previous_headings":"Flag cells whose cluster assignment is ambiguous with tof_assess_clusters_entropy()","what":"Simulated data","title":"Quality control","text":"First, simulate fake dataset 3000 cells 4 channels. simulated dataset, two well-defined clusters (“b” “c”) dispersed cluster intermediate others (“”). data visualized :  dataset, can imagine first analysis approach might involve clustering cells 2 distinct clusters. data simulated, already know number clusters small - can calculating entropy cells resulting clusters help us realize without prior knowledge? check, can use tof_assess_clusters_entropy():   plots , can see cells middle 2 k-means clusters (correspond well ground-truth clusters “b” “c” ) high entropy values, whereas cells closer one centroids low entropy values. can also see tof_assess_clusters_entropy() flags cells potentially anomalous (.e. intermediate phenotype two clusters identified) entropy values 75th percentile (user-specified parameter) entropy values dataset. user wish recluster dataset, filter anomalous cells, processing steps.  can see , expected, intermediate cluster (“”) higher entropies either distinct clusters (“b” “c”).","code":"sim_data <-     dplyr::tibble(         cd45 =             c(                 rnorm(n = 1000, sd = 2),                 rnorm(n = 1000, mean = 2),                 rnorm(n = 1000, mean = -2)             ),         cd38 =             c(                 rnorm(n = 1000, sd = 2),                 rnorm(n = 1000, mean = 2),                 rnorm(n = 1000, mean = -2)             ),         cd34 =             c(                 rnorm(n = 1000, sd = 2),                 rnorm(n = 1000, mean = 2),                 rnorm(n = 1000, mean = -2)             ),         cd19 =             c(                 rnorm(n = 1000, sd = 2),                 rnorm(n = 1000, mean = 2),                 rnorm(n = 1000, mean = -2)             ),         cluster_id = c(rep(\"a\", 1000), rep(\"b\", 1000), rep(\"c\", 1000))     ) sim_data |>     tof_reduce_dimensions(method = \"pca\") |>     tof_plot_cells_embedding(         embedding_cols = c(.pc1, .pc2),         color_col = cluster_id     ) set.seed(17L)  entropy_result <-     sim_data |>     # cluster into 2 clusters     tof_cluster(         num_clusters = 2,         method = \"kmeans\"     ) |>     # calculate the entropy of all cells     tof_assess_clusters_entropy(         cluster_col = .kmeans_cluster,         marker_cols = starts_with(\"cd\"),         entropy_quantile = 0.8,         augment = TRUE     )  # plot the clusters in PCA space entropy_result |>     select(-starts_with(\".mahala\"), -flagged_cell) |>     tof_reduce_dimensions(pca_cols = starts_with(\"cd\"), method = \"pca\") |>     tof_plot_cells_embedding(embedding_cols = c(.pc1, .pc2), color_col = .kmeans_cluster) # show the entropy values for each cell entropy_result |>     select(-starts_with(\".mahala\"), -flagged_cell) |>     tof_reduce_dimensions(pca_cols = starts_with(\"cd\"), method = \"pca\") |>     tof_plot_cells_embedding(embedding_cols = c(.pc1, .pc2), color_col = entropy) +     scale_fill_viridis_c() entropy_result |>     select(-starts_with(\".mahala\")) |>     tof_reduce_dimensions(pca_cols = starts_with(\"cd\"), method = \"pca\") |>     tof_plot_cells_embedding(embedding_cols = c(.pc1, .pc2), color_col = flagged_cell) +     scale_fill_viridis_d() entropy_result |>     ggplot(aes(x = entropy, fill = cluster_id)) +     geom_density(alpha = 0.4) +     theme_bw()"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"real-data","dir":"Articles","previous_headings":"Flag cells whose cluster assignment is ambiguous with tof_assess_clusters_entropy()","what":"Real data","title":"Quality control","text":"can also apply tof_assess_clusters_entropy() dataset derived levine data. Suppose take 5 largest clusters levine save result small_levine tof_tbl. , can perturb dataset replacing labels cells smallest cluster (cluster 9) random labels. effectively creates population cells dataset whose “true” cluster label absent. scenario, expect cells perturbed cluster relatively distant remaining clusters, whereas unperturbed cells relatively close cluster centroid (correct centroid). Thus, can test tof_assess_clusters_entropy() successfully flags cells perturbed cluster relative others: plot , can see cells cluster 9 larger entropy values cells clusters, expected.  Similarly, can see majority cells 9 successfully flagged tof_assess_clusters_entropy() using entropy quantile threshold 0.9. Conversely, cells cluster (cluster 15) flagged.","code":"clusters_to_keep <-     levine |>     dplyr::count(population_id) |>     dplyr::slice_max(order_by = n, n = 5L) |>     dplyr::arrange(n) |>     pull(population_id)  smallest_cluster <- clusters_to_keep[1] largest_cluster <- clusters_to_keep[[length(clusters_to_keep)]]  small_levine <-     levine |>     dplyr::filter(population_id %in% clusters_to_keep) # perform the perturbation small_levine <-     small_levine |>     dplyr::mutate(         new_population_id =             dplyr::if_else(                 population_id %in% smallest_cluster,                 sample(                     clusters_to_keep[-which(clusters_to_keep %in% smallest_cluster)],                     size = nrow(small_levine),                     replace = TRUE                 ),                 population_id             )     )  # perform the entropy assessment entropy_levine <-     small_levine |>     tof_assess_clusters_entropy(         cluster_col = new_population_id,         marker_cols = starts_with(\"cd\"),         augment = TRUE     ) entropy_levine |>     mutate(population_id = fct_reorder(population_id, entropy)) |>     tof_plot_cells_density(         marker_col = entropy,         group_col = population_id,         use_ggridges = TRUE,         scale = 0.1     ) +     ggplot2::theme(legend.position = \"none\") +     ggplot2::labs(x = \"Entropy\", y = \"Cluster ID\") entropy_levine |>     mutate(flagged_cell = entropy > quantile(entropy, prob = 0.9)) |>     dplyr::count(population_id, flagged_cell) |>     group_by(population_id) |>     mutate(prop = n / sum(n)) |>     ungroup() |>     dplyr::filter(flagged_cell) #> # A tibble: 2 × 4 #>   population_id flagged_cell     n   prop #>   <chr>         <lgl>        <int>  <dbl> #> 1 15            TRUE         12888 0.0798 #> 2 9             TRUE         11666 0.706"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Quality control","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats4    stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #>  [1] HDCytoData_1.22.0           flowCore_2.14.1             #>  [3] SummarizedExperiment_1.32.0 Biobase_2.62.0              #>  [5] GenomicRanges_1.54.1        GenomeInfoDb_1.38.7         #>  [7] IRanges_2.36.0              S4Vectors_0.40.2            #>  [9] MatrixGenerics_1.14.0       matrixStats_1.2.0           #> [11] ExperimentHub_2.10.0        AnnotationHub_3.10.0        #> [13] BiocFileCache_2.10.1        dbplyr_2.4.0                #> [15] BiocGenerics_0.48.1         forcats_1.0.0               #> [17] ggplot2_3.5.0               dplyr_1.1.4                 #> [19] tidytof_0.99.0              #>  #> loaded via a namespace (and not attached): #>   [1] jsonlite_1.8.8                shape_1.4.6.1                 #>   [3] magrittr_2.0.3                farver_2.1.1                  #>   [5] rmarkdown_2.26                fs_1.6.3                      #>   [7] zlibbioc_1.48.0               ragg_1.2.7                    #>   [9] vctrs_0.6.5                   memoise_2.0.1                 #>  [11] htmltools_0.5.7               S4Arrays_1.2.1                #>  [13] curl_5.2.1                    SparseArray_1.2.4             #>  [15] sass_0.4.8                    parallelly_1.37.1             #>  [17] bslib_0.6.1                   desc_1.4.3                    #>  [19] lubridate_1.9.3               cachem_1.0.8                  #>  [21] igraph_2.0.2                  mime_0.12                     #>  [23] lifecycle_1.0.4               iterators_1.0.14              #>  [25] pkgconfig_2.0.3               Matrix_1.6-5                  #>  [27] R6_2.5.1                      fastmap_1.1.1                 #>  [29] shiny_1.8.0                   GenomeInfoDbData_1.2.11       #>  [31] future_1.33.1                 digest_0.6.34                 #>  [33] colorspace_2.1-0              AnnotationDbi_1.64.1          #>  [35] textshaping_0.3.7             RSQLite_2.3.5                 #>  [37] labeling_0.4.3                filelock_1.0.3                #>  [39] cytolib_2.14.1                fansi_1.0.6                   #>  [41] yardstick_1.3.0               timechange_0.3.0              #>  [43] httr_1.4.7                    polyclip_1.10-6               #>  [45] abind_1.4-5                   compiler_4.3.3                #>  [47] bit64_4.0.5                   withr_3.0.0                   #>  [49] doParallel_1.0.17             viridis_0.6.5                 #>  [51] DBI_1.2.2                     highr_0.10                    #>  [53] ggforce_0.4.2                 MASS_7.3-60.0.1               #>  [55] lava_1.8.0                    rappdirs_0.3.3                #>  [57] DelayedArray_0.28.0           tools_4.3.3                   #>  [59] interactiveDisplayBase_1.40.0 httpuv_1.6.14                 #>  [61] future.apply_1.11.1           nnet_7.3-19                   #>  [63] glue_1.7.0                    promises_1.2.1                #>  [65] grid_4.3.3                    generics_0.1.3                #>  [67] recipes_1.0.10                gtable_0.3.4                  #>  [69] tzdb_0.4.0                    class_7.3-22                  #>  [71] tidyr_1.3.1                   data.table_1.15.2             #>  [73] hms_1.1.3                     tidygraph_1.3.1               #>  [75] utf8_1.2.4                    XVector_0.42.0                #>  [77] ggrepel_0.9.5                 BiocVersion_3.18.1            #>  [79] foreach_1.5.2                 pillar_1.9.0                  #>  [81] stringr_1.5.1                 RcppHNSW_0.6.0                #>  [83] later_1.3.2                   splines_4.3.3                 #>  [85] tweenr_2.0.3                  lattice_0.22-5                #>  [87] survival_3.5-8                bit_4.0.5                     #>  [89] RProtoBufLib_2.14.0           tidyselect_1.2.0              #>  [91] Biostrings_2.70.2             knitr_1.45                    #>  [93] gridExtra_2.3                 xfun_0.42                     #>  [95] graphlayouts_1.1.1            hardhat_1.3.1                 #>  [97] timeDate_4032.109             stringi_1.8.3                 #>  [99] yaml_2.3.8                    evaluate_0.23                 #> [101] codetools_0.2-19              ggraph_2.2.1                  #> [103] tibble_3.2.1                  BiocManager_1.30.22           #> [105] cli_3.6.2                     rpart_4.1.23                  #> [107] xtable_1.8-4                  systemfonts_1.0.6             #> [109] munsell_0.5.0                 jquerylib_0.1.4               #> [111] Rcpp_1.0.12                   globals_0.16.3                #> [113] png_0.1-8                     parallel_4.3.3                #> [115] ellipsis_0.3.2                pkgdown_2.0.7                 #> [117] gower_1.0.1                   readr_2.1.5                   #> [119] blob_1.2.4                    listenv_0.9.1                 #> [121] glmnet_4.1-8                  viridisLite_0.4.2             #> [123] ipred_0.9-14                  ggridges_0.5.6                #> [125] scales_1.3.0                  prodlim_2023.08.28            #> [127] purrr_1.0.2                   crayon_1.5.2                  #> [129] rlang_1.1.3                   KEGGREST_1.42.0"},{"path":"https://keyes-timothy.github.io/tidytof/articles/reading-and-writing-data.html","id":"accessing-the-data-for-this-vignette","dir":"Articles","previous_headings":"","what":"Accessing the data for this vignette","title":"Reading and writing data","text":"tidytof comes bundled several example mass cytometry datasets. access raw FCS CSV files containing data, use tidytof_example_data function. called arguments, tidytof_example_data return character vector naming datasets contained tidytof: details datasets contained directories isn’t particularly important, basic information follows: aml - one FCS file containing myeloid cells healthy bone marrow one FCS file containing myeloid cells AML patient bone marrow ddpr - two FCS files containing B-cell lineage cells paper mix - two FCS files different CyTOF antigen panels (one FCS file “aml” directory one “phenograph” directory) mix2 - three files different CyTOF antigen panels different file extensions (one FCS file “aml” directory two CSV files “phenograph_csv directory) phenograph - three FCS files containing AML cells paper phenograph_csv - cells “phenograph” directory, stored CSV files scaffold - three FCS files paper statistical_scaffold - three FCS files paper surgery - three FCS files paper obtain file path directory containing dataset, call tidytof_example_data one dataset names argument. example, obtain directory phenograph data, use following command:","code":"tidytof_example_data() #> [1] \"aml\"               \"ddpr\"              \"ddpr_metadata.csv\" #> [4] \"mix\"               \"mix2\"              \"phenograph\"        #> [7] \"phenograph_csv\"    \"surgery\" tidytof_example_data(\"phenograph\") #> [1] \"/home/runner/work/_temp/Library/tidytof/extdata/phenograph\""},{"path":"https://keyes-timothy.github.io/tidytof/articles/reading-and-writing-data.html","id":"reading-data-with-tof_read_data","dir":"Articles","previous_headings":"","what":"Reading Data with tof_read_data","title":"Reading and writing data","text":"Using one directories (directory containing CyTOF data local machine), can use tof_read_data read CyTOF data raw files. Acceptable formats include FCS files CSV files. Importantly, tof_read_data smart enough read single FCS/CSV files multiple FCS/CSV files depending whether first argument (path) leads single file directory files. , can use tof_read_data read FCS files “phenograph” example dataset bundled tidytof store phenograph variable. Regardless input data file type, tidytof reads data extended tibble class called tof_tbl (pronounced “tof tibble”). tof tibbles S3 class identical tbl_df, one additional attribute (“panel”). tidytof stores additional attribute tof_tbls , addition analyzing CyTOF data individual experiments, CyTOF users often want compare panels experiments find common markers compare metals associated particular markers across panels. retrieve panel information tof_tbl, use tof_get_panel: additional notes tof_tbls: tof_tbls contains one cell per row one CyTOF channel per column (provide data “tidy” format). tof_read_data adds additional column output tof_tbl encoding name file cell read (“file_name” column). tof_tbls inherit tbl_df class, methods available tibbles also available tof_tbls.","code":"phenograph <-     tidytof_example_data(\"phenograph\") %>%     tof_read_data()  phenograph %>%     class() #> [1] \"tof_tbl\"    \"tbl_df\"     \"tbl\"        \"data.frame\" phenograph %>%     tof_get_panel() #> # A tibble: 44 × 2 #>   metals      antigens    #>   <chr>       <chr>       #> 1 Time        Time        #> 2 Cell_length Cell_length #> 3 Ir191       DNA1        #> 4 Ir193       DNA2        #> # ℹ 40 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/reading-and-writing-data.html","id":"using-tibble-methods-with-tidytof-tibbles","dir":"Articles","previous_headings":"","what":"Using tibble methods with {tidytof} tibbles","title":"Reading and writing data","text":"extension tbl_df class, tof_tbls get access dplyr tidyr free. can useful performing variety common operations. example, phenograph object two columns - PhenoGraph Condition - encode categorical variables numeric codes. might interested converting types columns strings make sure don’t accidentally perform quantitative operations later. Thus, dplyr’s useful mutate method can applied phenograph convert two columns character vectors. note tof_tbl class preserved even transformations. Importantly, tof_read_data uses opinionated heuristic mine different keyword slots input FCS file(s) guess metals antigens used data acquisition. Thus, CSV files read using tof_read_data, recommended use panel_info argument provide panel manually (CSV files, unlike FCS files, provide built-metadata columns contain).","code":"phenograph <-     phenograph %>%     # mutate the input tof_tbl     mutate(         PhenoGraph = as.character(PhenoGraph),         Condition = as.character(Condition)     )  phenograph %>%     # use dplyr's select method to show     # that the columns have been changed     select(where(is.character)) #> # A tibble: 300 × 3 #>   file_name                  PhenoGraph Condition #>   <chr>                      <chr>      <chr>     #> 1 H1_PhenoGraph_cluster1.fcs 7          7         #> 2 H1_PhenoGraph_cluster1.fcs 6          6         #> 3 H1_PhenoGraph_cluster1.fcs 9          9         #> 4 H1_PhenoGraph_cluster1.fcs 2          2         #> # ℹ 296 more rows phenograph %>%     class() #> [1] \"tof_tbl\"    \"tbl_df\"     \"tbl\"        \"data.frame\" # when csv files are read, the tof_tibble's \"panel\" # attribute will be empty by default tidytof_example_data(\"phenograph_csv\") %>%     tof_read_data() %>%     tof_get_panel() #> # A tibble: 0 × 0  # to add a panel manually, provide it as a tibble # to tof_read_data phenograph_panel <-     phenograph %>%     tof_get_panel()  tidytof_example_data(\"phenograph_csv\") %>%     tof_read_data(panel_info = phenograph_panel) %>%     tof_get_panel() #> # A tibble: 44 × 2 #>   antigens    metals      #>   <chr>       <chr>       #> 1 Time        Time        #> 2 Cell_length Cell_length #> 3 DNA1        Ir191       #> 4 DNA2        Ir193       #> # ℹ 40 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/reading-and-writing-data.html","id":"writing-data-from-a-tof_tbl-to-disk","dir":"Articles","previous_headings":"","what":"Writing data from a tof_tbl to disk","title":"Reading and writing data","text":"Users may wish store CyTOF data FCS CSV files transformation, concatenation, filtering, data processing. write single-cell data tof_tbl FCS CSV files, use tof_write_data. illustrate use verb, use tidytof’s built-phenograph_data dataset. tof_write_data’s trickiest argument group_cols, argument used specify columns tof_tibble used group cells (rows tof_tibble) separate FCS CSV files. Simply put, argument allows tof_write_data create single FCS CSV file unique combination values group_cols columns specified user. example , cells grouped 3 output FCS files - one 3 clusters encoded phenograph_cluster column phenograph_data. files following names (derived values phenograph_cluster column): cluster1.fcs cluster2.fcs cluster3.fcs Note file names match distinct values group_cols column (phenograph_cluster): However, suppose wanted write multiple files cluster breaking cells two groups: express high levels pstat5 express low levels pstat5. can use dplyr::mutate create new column phenograph_data breaks cells high- low-pstat5 expression groups, add column group_cols specification: write 6 files following names (derived values phenograph_cluster expression_group). cluster1_low.fcs cluster1_high.fcs cluster2_low.fcs cluster2_high.fcs cluster3_low.fcs cluster3_high.fcs , note file names match distinct values group_cols columns (phenograph_cluster expression_group): useful feature tof_write_data automatically concatenate cells single FCS CSV files based specified group_cols regardless many unique files cells came . allows easy concatenation FCS CSV files containing data single sample acquired multiple CyTOF runs, example.","code":"data(phenograph_data)  print(phenograph_data) #> # A tibble: 3,000 × 25 #>   sample_name  phenograph_cluster    cd19 cd11b   cd34  cd45  cd123   cd33  cd47 #>   <chr>        <chr>                <dbl> <dbl>  <dbl> <dbl>  <dbl>  <dbl> <dbl> #> 1 H1_PhenoGra… cluster1           -0.168  29.0   3.23   131. -0.609  1.21   13.0 #> 2 H1_PhenoGra… cluster1            1.65    4.83 -0.582  230.  2.53  -0.507  12.9 #> 3 H1_PhenoGra… cluster1            2.79   36.1   5.20   293. -0.265  3.67   27.1 #> 4 H1_PhenoGra… cluster1            0.0816 48.8   0.363  431.  2.04   9.40   41.0 #> # ℹ 2,996 more rows #> # ℹ 16 more variables: cd7 <dbl>, cd44 <dbl>, cd38 <dbl>, cd3 <dbl>, #> #   cd117 <dbl>, cd64 <dbl>, cd41 <dbl>, pstat3 <dbl>, pstat5 <dbl>, #> #   pampk <dbl>, p4ebp1 <dbl>, ps6 <dbl>, pcreb <dbl>, `pzap70-syk` <dbl>, #> #   prb <dbl>, `perk1-2` <dbl> # when copying and pasting this code, feel free to change this path # to wherever you'd like to save your output files my_path <- file.path(\"~\", \"Desktop\", \"tidytof_vignette_files\")  phenograph_data %>%     tof_write_data(         group_cols = phenograph_cluster,         out_path = my_path,         format = \"fcs\"     ) phenograph_data %>%     distinct(phenograph_cluster) #> # A tibble: 3 × 1 #>   phenograph_cluster #>   <chr>              #> 1 cluster1           #> 2 cluster2           #> 3 cluster3 phenograph_data %>%     # create a variable representing if a cell is above or below     # the median expression level of pstat5     mutate(         expression_group = if_else(pstat5 > median(pstat5), \"high\", \"low\")     ) %>%     tof_write_data(         group_cols = c(phenograph_cluster, expression_group),         out_path = my_path,         format = \"fcs\"     ) phenograph_data %>%     mutate(         expression_group = if_else(pstat5 > median(pstat5), \"high\", \"low\")     ) %>%     distinct(phenograph_cluster, expression_group) #> # A tibble: 6 × 2 #>   phenograph_cluster expression_group #>   <chr>              <chr>            #> 1 cluster1           low              #> 2 cluster1           high             #> 3 cluster2           low              #> 4 cluster2           high             #> # ℹ 2 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/reading-and-writing-data.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Reading and writing data","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] dplyr_1.1.4    tidytof_0.99.0 #>  #> loaded via a namespace (and not attached): #>   [1] gridExtra_2.3       rlang_1.1.3         magrittr_2.0.3      #>   [4] matrixStats_1.2.0   compiler_4.3.3      systemfonts_1.0.6   #>   [7] vctrs_0.6.5         stringr_1.5.1       crayon_1.5.2        #>  [10] pkgconfig_2.0.3     shape_1.4.6.1       fastmap_1.1.1       #>  [13] ggraph_2.2.1        utf8_1.2.4          rmarkdown_2.26      #>  [16] prodlim_2023.08.28  tzdb_0.4.0          ragg_1.2.7          #>  [19] bit_4.0.5           purrr_1.0.2         xfun_0.42           #>  [22] glmnet_4.1-8        cachem_1.0.8        jsonlite_1.8.8      #>  [25] recipes_1.0.10      tweenr_2.0.3        parallel_4.3.3      #>  [28] R6_2.5.1            bslib_0.6.1         stringi_1.8.3       #>  [31] parallelly_1.37.1   rpart_4.1.23        lubridate_1.9.3     #>  [34] jquerylib_0.1.4     Rcpp_1.0.12         iterators_1.0.14    #>  [37] knitr_1.45          future.apply_1.11.1 readr_2.1.5         #>  [40] flowCore_2.14.1     Matrix_1.6-5        splines_4.3.3       #>  [43] nnet_7.3-19         igraph_2.0.2        timechange_0.3.0    #>  [46] tidyselect_1.2.0    yaml_2.3.8          viridis_0.6.5       #>  [49] timeDate_4032.109   doParallel_1.0.17   codetools_0.2-19    #>  [52] listenv_0.9.1       lattice_0.22-5      tibble_3.2.1        #>  [55] Biobase_2.62.0      withr_3.0.0         evaluate_0.23       #>  [58] future_1.33.1       desc_1.4.3          survival_3.5-8      #>  [61] polyclip_1.10-6     pillar_1.9.0        foreach_1.5.2       #>  [64] stats4_4.3.3        generics_0.1.3      vroom_1.6.5         #>  [67] RcppHNSW_0.6.0      S4Vectors_0.40.2    hms_1.1.3           #>  [70] ggplot2_3.5.0       munsell_0.5.0       scales_1.3.0        #>  [73] globals_0.16.3      class_7.3-22        glue_1.7.0          #>  [76] tools_4.3.3         data.table_1.15.2   gower_1.0.1         #>  [79] fs_1.6.3            graphlayouts_1.1.1  tidygraph_1.3.1     #>  [82] grid_4.3.3          yardstick_1.3.0     tidyr_1.3.1         #>  [85] RProtoBufLib_2.14.0 ipred_0.9-14        colorspace_2.1-0    #>  [88] ggforce_0.4.2       cli_3.6.2           textshaping_0.3.7   #>  [91] fansi_1.0.6         cytolib_2.14.1      viridisLite_0.4.2   #>  [94] lava_1.8.0          gtable_0.3.4        sass_0.4.8          #>  [97] digest_0.6.34       BiocGenerics_0.48.1 ggrepel_0.9.5       #> [100] farver_2.1.1        memoise_2.0.1       htmltools_0.5.7     #> [103] pkgdown_2.0.7       lifecycle_1.0.4     hardhat_1.3.1       #> [106] bit64_4.0.5         MASS_7.3-60.0.1"},{"path":"https://keyes-timothy.github.io/tidytof/articles/tidytof.html","id":"prerequisites","dir":"Articles","previous_headings":"","what":"Prerequisites","title":"Getting started with tidytof","text":"tidytof makes heavy use two concepts may unfamiliar R beginners. first pipe (|>), can read . second “grouping” data data.frame tibble using dplyr::group_by, can read . tidytof users also benefit relatively -depth understanding dplyr package, wonderful introductory vignette : Everything else self-explanatory beginner advanced R users, though zero background running R code, read chapter R Data Science Hadley Wickham.","code":"vignette(\"dplyr\")"},{"path":"https://keyes-timothy.github.io/tidytof/articles/tidytof.html","id":"workflow-basics","dir":"Articles","previous_headings":"","what":"Workflow basics","title":"Getting started with tidytof","text":"Broadly speaking, tidytof’s functionality organized support 3 levels analysis inherent single-cell data described : Reading, writing, preprocessing, visualizing data level individual cells Identifying describing cell subpopulations clusters Building models (inference prediction) level patients samples tidytof provides functions (“verbs”) operate levels analysis: Cell-level data: tof_read_data() reads single-cell data FCS CSV files disk tidy data frame called tof_tbl. tof_tbls represent cell row protein measurement (piece information associated given cell) column. tof_preprocess() transforms protein expression values using user-provided function (.e. log-transformation, centering, scaling) tof_downsample() reduces number cells tof_tibble via subsampling. tof_reduce_dimensions() performs dimensionality reduction (across columns) tof_write_data writes single-cell data tof_tibble back disk form FCS CSV file. Cluster-level data: tof_cluster() clusters cells using one several algorithms commonly applied high-dimensional cytometry data tof_metacluster() agglomerates clusters smaller number metaclusters tof_analyze_abundance() performs differential abundance analysis (DAA) clusters metaclusters across experimental groups tof_analyze_expression() performs differential expression analysis (DEA) clusters’ metaclusters’ marker expression levels across experimental groups tof_extract_features() computes summary statistics (mean marker expression) cluster. Also (optionally) pivots summary statistics sample-level tidy data frame row represents sample column represents cluster-level summary statistic. Sample-level data: tof_split_data() splits sample-level data training test set predictive modeling tof_create_grid() creates elastic net hyperparameter search grid model tuning tof_train_model() trains sample-level elastic net model saves tof_model object tof_predict() Applies trained tof_model new data predict sample-level outcomes tof_assess_model() calculates performance metrics trained tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/tidytof.html","id":"tidytof-verb-syntax","dir":"Articles","previous_headings":"","what":"{tidytof} verb syntax","title":"Getting started with tidytof","text":"exceptions, tidytof functions follow specific, shared syntax involves 3 types arguments always occur order. argument types follows: almost tidytof functions, first argument data frame (tibble). enables use pipe (|>) multi-step calculations, means first argument functions implicit (passed previous function using pipe). also means tidytof functions -called “single-table verbs,” exception tof_cluster_ddpr, “two-table verb” (details use tof_cluster_ddpr, see “clustering--metaclustering” vignette). second group arguments called column specifications, end suffix _col _cols. Column specifications unquoted column names tell tidytof verb columns compute particular operation. example, cluster_cols argument tof_cluster allows user specify column input data frames used perform clustering. Regardless verb requires , column specifications support tidyselect helpers follow rules tidyselection tidyverse verbs like dplyr::select() tidyr::pivot_longer(). Finally, third group arguments tidytof verb called method specifications, ’re comprised every argument isn’t input data frame column specification. Whereas column specifications represent columns used perform operation, method specifications represent details operation performed. example, tof_cluster_phenograph() function requires method specification num_neighbors, specifies many nearest neighbors used construct PhenoGraph algorithm’s k-nearest-neighbor graph. cases, tidytof sets reasonable defaults verb’s particular method specifications, workflows can also customized experimenting non-default values. following code demonstrates tidytof verb syntax looks practice, column method specifications explicitly pointed :","code":"data(ddpr_data)  set.seed(777L)  ddpr_data |>     tof_preprocess() |>     tof_cluster(         cluster_cols = starts_with(\"cd\"), # column specification         method = \"phenograph\", # method specification,     ) |>     tof_metacluster(         cluster_col = .phenograph_cluster, # column specification         num_metaclusters = 4, # method specification         method = \"kmeans\" # method specification     ) |>     tof_downsample(         group_cols = .kmeans_metacluster, # column specification         num_cells = 200, # method specification         method = \"constant\" # method specification     ) |>     tof_plot_cells_layout(         knn_cols = starts_with(\"cd\"), # column specification         color_col = .kmeans_metacluster, # column specification         num_neighbors = 7L, # method specification         node_size = 2L # method specification     )"},{"path":"https://keyes-timothy.github.io/tidytof/articles/tidytof.html","id":"pipelines","dir":"Articles","previous_headings":"","what":"Pipelines","title":"Getting started with tidytof","text":"tidytof verbs can used combination one another using pipe (|>) operator. example, multistep “pipeline” takes built-tidytof dataset performs following analytical steps: Arcsinh-transform column protein measurements (default behavior tof_preprocess verb Cluster cells based surface markers panel Downsample dataset 100 random cells picked cluster Perform dimensionality reduction downsampled dataset using tSNE Visualize clusters using low-dimensional tSNE embedding","code":"ddpr_data |>     # step 1     tof_preprocess() |>     # step 2     tof_cluster(         cluster_cols = starts_with(\"cd\"),         method = \"phenograph\",         # num_metaclusters = 4L,         seed = 2020L     ) |>     # step 3     tof_downsample(         group_cols = .phenograph_cluster,         method = \"constant\",         num_cells = 400     ) |>     # step 4     tof_reduce_dimensions(method = \"tsne\") |>     # step 5     tof_plot_cells_embedding(         embedding_cols = contains(\"tsne\"),         color_col = .phenograph_cluster     ) +     ggplot2::theme(legend.position = \"none\") #> Loading required namespace: Rtsne"},{"path":"https://keyes-timothy.github.io/tidytof/articles/tidytof.html","id":"other-tips","dir":"Articles","previous_headings":"","what":"Other tips","title":"Getting started with tidytof","text":"tidytof designed multidisciplinary team wet-lab biologists, bioinformaticians, physician-scientists analyze high-dimensional cytometry kinds single-cell data solve variety problems. result, tidytof’s high-level API designed great care mirror tidyverse - , human-centered, consistent, composable, inclusive wide userbase. Practically speaking, means things using tidytof. First, means tidytof designed quality--life features mind. example, may notice tidytof functions begin prefix tof_. intentional, allow use development environment’s code-completing software search tidytof functions easily (even can’t remember specific function name). reason, recommend using tidytof within RStudio development environment; however, many code editors predictive text functionality serves similar function. general, tidytof verbs organized way IDE’s code-completion tools also allow search (compare) related functions relative ease. (instance, tof_cluster_ prefix used clustering functions, tof_downsample_ prefix used downsampling functions). Second, means tidytof functions relatively intuitive use due shared logic - words, understand use one tidytof function, understand use others. example shared logic across tidytof functions argument group_cols, shows multiple verbs (tof_downsample, tof_cluster, tof_daa, tof_dea, tof_extract_features, tof_write_data). case, group_cols works way: accepts unquoted vector column names (specified manually using tidyselection) used group cells operation performed. idea generalizes throughout tidytof: see argument one place, behave identically (least similarly) wherever else encounter . Finally, means tidytof optimized first ease--use, performance. humans computers interact data differently, always trade-choosing data representation intuitive human user vs. choosing data representation optimized computational speed memory efficiency. design choices conflict one another, team tends err side choosing representation easy--understand users even expense small performance costs. Ultimately, means tidytof may optimal tool every high-dimensional cytometry analysis, though hopefully general framework provide users useful functionality.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/tidytof.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Getting started with tidytof","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] tidytof_0.99.0 #>  #> loaded via a namespace (and not attached): #>   [1] gridExtra_2.3       rlang_1.1.3         magrittr_2.0.3      #>   [4] matrixStats_1.2.0   compiler_4.3.3      systemfonts_1.0.6   #>   [7] vctrs_0.6.5         stringr_1.5.1       pkgconfig_2.0.3     #>  [10] shape_1.4.6.1       fastmap_1.1.1       labeling_0.4.3      #>  [13] ggraph_2.2.1        utf8_1.2.4          rmarkdown_2.26      #>  [16] prodlim_2023.08.28  tzdb_0.4.0          ragg_1.2.7          #>  [19] purrr_1.0.2         xfun_0.42           glmnet_4.1-8        #>  [22] cachem_1.0.8        jsonlite_1.8.8      recipes_1.0.10      #>  [25] highr_0.10          tweenr_2.0.3        parallel_4.3.3      #>  [28] R6_2.5.1            bslib_0.6.1         stringi_1.8.3       #>  [31] parallelly_1.37.1   rpart_4.1.23        lubridate_1.9.3     #>  [34] jquerylib_0.1.4     Rcpp_1.0.12         iterators_1.0.14    #>  [37] knitr_1.45          future.apply_1.11.1 readr_2.1.5         #>  [40] flowCore_2.14.1     Matrix_1.6-5        splines_4.3.3       #>  [43] nnet_7.3-19         igraph_2.0.2        timechange_0.3.0    #>  [46] tidyselect_1.2.0    yaml_2.3.8          viridis_0.6.5       #>  [49] timeDate_4032.109   doParallel_1.0.17   codetools_0.2-19    #>  [52] listenv_0.9.1       lattice_0.22-5      tibble_3.2.1        #>  [55] Biobase_2.62.0      withr_3.0.0         Rtsne_0.17          #>  [58] evaluate_0.23       future_1.33.1       desc_1.4.3          #>  [61] survival_3.5-8      polyclip_1.10-6     pillar_1.9.0        #>  [64] foreach_1.5.2       stats4_4.3.3        generics_0.1.3      #>  [67] RcppHNSW_0.6.0      S4Vectors_0.40.2    hms_1.1.3           #>  [70] ggplot2_3.5.0       munsell_0.5.0       scales_1.3.0        #>  [73] globals_0.16.3      class_7.3-22        glue_1.7.0          #>  [76] tools_4.3.3         data.table_1.15.2   gower_1.0.1         #>  [79] fs_1.6.3            graphlayouts_1.1.1  tidygraph_1.3.1     #>  [82] grid_4.3.3          yardstick_1.3.0     tidyr_1.3.1         #>  [85] RProtoBufLib_2.14.0 ipred_0.9-14        colorspace_2.1-0    #>  [88] ggforce_0.4.2       cli_3.6.2           textshaping_0.3.7   #>  [91] fansi_1.0.6         cytolib_2.14.1      viridisLite_0.4.2   #>  [94] lava_1.8.0          dplyr_1.1.4         gtable_0.3.4        #>  [97] sass_0.4.8          digest_0.6.34       BiocGenerics_0.48.1 #> [100] ggrepel_0.9.5       farver_2.1.1        memoise_2.0.1       #> [103] htmltools_0.5.7     pkgdown_2.0.7       lifecycle_1.0.4     #> [106] hardhat_1.3.1       MASS_7.3-60.0.1"},{"path":"https://keyes-timothy.github.io/tidytof/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Timothy Keyes. Maintainer. Kara Davis. Research team head, owner. Garry Nolan. Research team head, owner.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Keyes T (2024). tidytof: Analyze High-dimensional Cytometry Data Using Tidy Data Principles. R package version 0.99.0,  https://keyes-timothy.github.io/tidytof/, https://keyes-timothy.github.io/tidytof.","code":"@Manual{,   title = {tidytof: Analyze High-dimensional Cytometry Data Using Tidy Data Principles},   author = {Timothy Keyes},   year = {2024},   note = {R package version 0.99.0,  https://keyes-timothy.github.io/tidytof/},   url = {https://keyes-timothy.github.io/tidytof}, }"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"tidytof-a-user-friendly-framework-for-interactive-and-highly-reproducible-cytometry-data-analysis-","dir":"","previous_headings":"","what":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"tidytof R package implements open-source, integrated “grammar” single-cell data analysis high-dimensional cytometry data (.e. mass cytometry, full-spectrum flow cytometry, sequence-based cytometry). Specifically, tidytof provides easy--use pipeline handling high-dimensional cytometry data multiple levels observation - single-cell level, cell subpopulation (cluster) level, whole-sample level - automating many common data-processing tasks common “tidy data” interface. extension tidyverse ecosystem data manipulation tools R, tidytof’s functions developed internally consistent, human-centered set design principles. means using tidytof equally intuitive among scientists wide range coding experience (including beginners).","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"prerequisites","dir":"","previous_headings":"Getting started","what":"Prerequisites","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"tidytof makes heavy use two concepts R beginners may unfamiliar . first pipe (|>), can read . second “grouping” data data.frame tibble using dplyr::group_by, can read . Everything else self-explanatory beginner advanced R users, though zero background running R code, read chapter R Data Science Hadley Wickham.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"package-structure","dir":"","previous_headings":"Getting started","what":"Package structure","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"Broadly speaking, tidytof’s functionality organized support 3 levels analysis inherent single-cell data: Reading, writing, preprocessing, visualizing data level single cells Identifying describing cell subpopulations clusters Building models (inference prediction) level patients samples use tidytof levels cytometry data analysis detailed “Usage” section .","code":""},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"can install development version tidytof GitHub following command: tidytof installed, can attach current R session using following code: addition, can install load packages need vignette:","code":"if(!require(devtools)) install.packages(\"devtools\")  devtools::install_github(\"keyes-timothy/tidytof\") library(tidytof) if(!require(FlowSOM)) BiocManager::install(\"FlowSOM\") library(FlowSOM)  if(!require(tidyverse)) install.packages(\"tidyverse\") library(tidyverse)"},{"path":[]},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"reading-data-with-tof_read_data","dir":"","previous_headings":"Usage > Analyzing data at the single-cell level","what":"Reading data with tof_read_data","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"tidytof comes bundled several example mass cytometry datasets. access raw .fcs .csv files containing data, use tidytof_example_data function. called arguments, tidytof_example_data return character vector naming datasets contained tidytof: obtain file path directory containing dataset, call tidytof_example_data one dataset names argument. example, obtain directory phenograph data, use following command: Using one directories (directory containing cytometry data local machine), can use tof_read_data read cytometry data raw files. Acceptable formats include .fcs files .csv files. Importantly, tof_read_data smart enough read single .fcs/.csv files multiple .fcs/.csv files depending whether first argument (path) leads single file directory files. , can use tof_read_data read .fcs files “phenograph” example dataset bundled tidytof store phenograph variable. Regardless input format, tidytof reads data extended tibble called tof_tbl (pronounced “tof tibble”), S3 class identical tbl_df, one additional attribute (“panel”). tidytof stores additional attribute tof_tbls , addition analyzing cytometry data individual experiments, cytometry users often want compare panels experiments find common markers compare metals associated particular markers across panels. notes tof_tbls: tof_tbls contains one cell per row one cytometry channel per column (provide data “tidy” format). tof_read_data adds additional column output tof_tbl encoding name file cell read (“file_name” column). tof_tbls inherit tbl_df class, methods available tibbles also available tof_tbls. example, dplyr’s useful mutate method can applied tof_tbl named phenograph convert columns encoding phenograph cluster ID stimulation condition cell belongs character vectors (instead original numeric codes uncleaned dataset). tof_tbl class preserved even transformations. Finally, retrieve panel information tof_tbl, use tof_get_panel: Importantly, tof_read_data uses opinionated heuristic mine different keyword slots input .fcs file(s) guess metals antigens used data collection. Thus, .csv files read using tof_read_data, recommended use panel_info argument provide panel manually (.csv files, unlike .fcs files, provide built-metadata columns contain).","code":"tidytof_example_data() #>  [1] \"aml\"                  \"ddpr\"                 \"ddpr_metadata.csv\"    #>  [4] \"mix\"                  \"mix2\"                 \"phenograph\"           #>  [7] \"phenograph_csv\"       \"scaffold\"             \"statistical_scaffold\" #> [10] \"surgery\" tidytof_example_data(\"phenograph\") #> [1] \"/Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/library/tidytof/extdata/phenograph\" phenograph <-    tidytof_example_data(\"phenograph\") |>    tof_read_data()  phenograph |>    class() #> [1] \"tof_tbl\"    \"tbl_df\"     \"tbl\"        \"data.frame\" phenograph <-    phenograph |>    # mutate the input tof_tbl   mutate(     PhenoGraph = as.character(PhenoGraph),      Condition = as.character(Condition)   )  phenograph |>    # use dplyr's select method to show that the columns have been changed   select(where(is.character)) |>    head() #> # A tibble: 6 × 3 #>   file_name                  PhenoGraph Condition #>   <chr>                      <chr>      <chr>     #> 1 H1_PhenoGraph_cluster1.fcs 7          7         #> 2 H1_PhenoGraph_cluster1.fcs 6          6         #> 3 H1_PhenoGraph_cluster1.fcs 9          9         #> 4 H1_PhenoGraph_cluster1.fcs 2          2         #> 5 H1_PhenoGraph_cluster1.fcs 15         15        #> 6 H1_PhenoGraph_cluster1.fcs 12         12 phenograph |>    class() #> [1] \"tof_tbl\"    \"tbl_df\"     \"tbl\"        \"data.frame\" phenograph |>    tof_get_panel() |>    head() #> # A tibble: 6 × 2 #>   metals      antigens    #>   <chr>       <chr>       #> 1 Time        Time        #> 2 Cell_length Cell_length #> 3 Ir191       DNA1        #> 4 Ir193       DNA2        #> 5 Pd104       BC1         #> 6 Pd106       BC2"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"pre-processing-with-tof_preprocess","dir":"","previous_headings":"Usage > Analyzing data at the single-cell level","what":"Pre-processing with tof_preprocess","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"Generally, raw ion counts analyte measured mass cytometer need transformed cytometry data analysis. Common preprocessing steps may include variance-stabilizing transformations - hyperbolic arcsine (arcsinh) transformation log transformation - scaling/centering, /denoising. perform standard preprocessing tasks tidytof, use tof_preprocess. tof_preprocess’s default behavior apply arcsinh transformation (cofactor 5) numeric column input tof_tibble well remove gaussian noise Fluidigm software adds ion count (noise added visualization purposes, analyses, removing recommended). example, can preprocess phenograph tof_tibble see first measurements change . alter tof_preprocess’s default behavior, change channel_cols argument (specify columns tof_tibble transformed) transform_fun argument (specify vector-valued function used transform channel_cols). keep gaussian noise added Fluidigm software (working dataset noise), set undo_noise argument FALSE. Finally, note built-function tof_postprocess works nearly identically tof_preprocess, provides different default behavior (namely, applying reverse arcsinh transformation cofactor 5 numeric columns. See ?tof_postprocess details).","code":"# before preprocessing phenograph |>    select(`CD45|Sm154`, `CD34|Nd148`, `CD38|Er167`) |>    head() #> # A tibble: 6 × 3 #>   `CD45|Sm154` `CD34|Nd148` `CD38|Er167` #>          <dbl>        <dbl>        <dbl> #> 1        440.         0.256        18.7  #> 2        705.         1.96         41.2  #> 3        383.        -0.302         6.51 #> 4         44.4        2.74         27.2  #> 5        892.         4.08         24.5  #> 6        448.         2.69         11.1 # perform preprocessing phenograph <-    phenograph |>    tof_preprocess()  # inspect new values phenograph |>    select(`CD45|Sm154`, `CD34|Nd148`, `CD38|Er167`) |>    head() #> # A tibble: 6 × 3 #>   `CD45|Sm154` `CD34|Nd148` `CD38|Er167` #>          <dbl>        <dbl>        <dbl> #> 1         5.17       0.0512         2.03 #> 2         5.64       0.382          2.81 #> 3         5.03      -0.0603         1.08 #> 4         2.88       0.524          2.40 #> 5         5.88       0.746          2.29 #> 6         5.19       0.515          1.54"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"downsampling-with-tof_downsample","dir":"","previous_headings":"Usage > Analyzing data at the single-cell level","what":"Downsampling with tof_downsample","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"Often, cytometry experiments collect tens hundreds millions cells total, can useful downsample smaller, computationally tractable number cells - either final analysis developing code. , tidytof implements tof_downsample verb, allows downsampling using 3 methods. Using tidytof’s built-dataset phenograph_data (smaller version dataset read ), can see original size dataset 1000 cells per cluster, 3000 cells total: randomly sample 200 cells per cluster, can use tof_downsample using “constant” method: Alternatively, wanted sample 50% cells cluster, use “prop” method: finally, might also interested taking slightly different approach downsampling downsamples number cells fixed constant proportion, fixed density phenotypic space. example, following scatterplot demonstrates certain areas phenotypic density phenograph_data contain cells others along cd34/cd38 axes:  reduce number cells dataset local density around cell dataset relatively constant, can use “density” method tof_downsample:  details, check documentation 3 underlying members tof_downsample_* function family (wrapped tof_downsample): tof_downsample_constant tof_downsample_prop tof_downsample_density","code":"data(phenograph_data)  phenograph_data |>    count(phenograph_cluster) #> # A tibble: 3 × 2 #>   phenograph_cluster     n #>   <chr>              <int> #> 1 cluster1            1000 #> 2 cluster2            1000 #> 3 cluster3            1000 phenograph_data |>    # downsample    tof_downsample(     method = \"constant\",      group_cols = phenograph_cluster,      num_cells = 200   ) |>    # count the number of downsampled cells in each cluster   count(phenograph_cluster) #> # A tibble: 3 × 2 #>   phenograph_cluster     n #>   <chr>              <int> #> 1 cluster1             200 #> 2 cluster2             200 #> 3 cluster3             200 phenograph_data |>    # downsample   tof_downsample(     method = \"prop\",     group_cols = phenograph_cluster,      prop_cells = 0.5   ) |>    # count the number of downsampled cells in each cluster   count(phenograph_cluster) #> # A tibble: 3 × 2 #>   phenograph_cluster     n #>   <chr>              <int> #> 1 cluster1             500 #> 2 cluster2             500 #> 3 cluster3             500 phenograph_data |>    # preprocess all numeric columns in the dataset   tof_preprocess(undo_noise = FALSE) |>    # make a scatterplot   ggplot(aes(x = cd34, y = cd38)) +    geom_point(alpha = 0.5) +    scale_x_continuous(limits = c(NA, 1.5)) +    scale_y_continuous(limits = c(NA, 4)) +    theme_bw() phenograph_data |>    tof_preprocess(undo_noise = FALSE) |>    tof_downsample(     density_cols = c(cd34, cd38),      target_prop_cells = 0.25,      method = \"density\",    ) |>    ggplot(aes(x = cd34, y = cd38)) +    geom_point(alpha = 0.5) +    scale_x_continuous(limits = c(NA, 1.5)) +    scale_y_continuous(limits = c(NA, 4)) +    theme_bw()"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"writing-data-with-tof_write_data","dir":"","previous_headings":"Usage > Analyzing data at the single-cell level","what":"Writing data with tof_write_data","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"Finally, users may wish store single-cell data .fcs .csv files transformation, concatenation, filtering, data processing steps dimensionality reduction /clustering (see ). write single-cell data tof_tbl .fcs .csv files, use tof_write_data. tof_write_data’s trickiest argument group_cols, argument used specify columns tof_tibble used group cells (.e. rows tof_tibble) separate .fcs .csv files. Simply put, argument allows tof_write_data create single .fcs .csv file unique combination values columns specified user. example , cells grouped 3 output .fcs files - one 3 clusters encoded phenograph_cluster column phenograph_data. files following names (derived values phenograph_cluster column): cluster1.fcs cluster2.fcs cluster3.fcs However, suppose wanted write multiple files cluster breaking cells two groups: express high levels pstat5 express low levels pstat5. can use dplyr::mutate create new column phenograph_data breaks cells high- low-pstat5 expression groups, add column group_cols specification: write 6 files following names (derived values phenograph_cluster expression_group). cluster1_low.fcs cluster1_high.fcs cluster2_low.fcs cluster2_high.fcs cluster3_low.fcs cluster3_high.fcs useful feature tof_write_data automatically concatenate cells single .fcs .csv files based specified group_cols regardless many unique files cells came , allowing easy concatenation .fcs .csv files containing data single sample acquired multiple cytometry runs.","code":"# when copying and pasting this code, feel free to change this path  # to wherever you'd like to save your output files my_path <- file.path(\"~\", \"Desktop\", \"tidytof_vignette_files\")  phenograph_data |>    tof_write_data(     group_cols = phenograph_cluster,      out_path = my_path,     format = \"fcs\"   ) phenograph_data |>    # create a variable representing if a cell is above or below the median    # expression level of pstat5   mutate(expression_group = if_else(pstat5 > median(pstat5), \"high\", \"low\")) |>    tof_write_data(     group_cols = c(phenograph_cluster, expression_group),      out_path = my_path,      format = \"fcs\"   )"},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"identifying-clusters-with-tof_cluster","dir":"","previous_headings":"Usage > Analyzing data at the cluster-level","what":"Identifying clusters with tof_cluster","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"input files read tabular format preprocessed/downsampled, might interested clustering data define communities cells shared characteristics. , can use tof_cluster verb. Several clustering methods implemented tidytof, including FlowSOM, PhenoGraph, k-means, others. demonstrate, can apply FlowSOM clustering algorithm phenograph_data . Note phenograph_data contains 6000 total cells (2000 3 clusters identified original PhenoGraph publication). output tof_cluster tof_tbl identical input tibble, now addition additional column (“.flowsom_metacluster”) encodes cluster id cell input tof_tbl. Note output columns added tibble tof_tbl tidytof begin full-stop (“.”) reduce likelihood collisions existing column names. output tof_cluster tof_tbl, can use dplyr’s count method assess accuracy FlowSOM clustering compared original clustering PhenoGraph paper. , can see FlowSOM algorithm groups cells PhenoGraph cluster one another (small number mistakes per PhenoGraph cluster). change clustering algorithm tof_cluster uses, alter method flag; change columns used compute clusters, change cluster_cols flag. finally, want return tibble includes cluster labels (cluster labels added new column input tof_tbl), set augment FALSE.","code":"phenograph_clusters <-    phenograph_data |>    tof_preprocess() |>    tof_cluster(method = \"flowsom\", cluster_cols = contains(\"cd\"))  phenograph_clusters |>    select(sample_name, .flowsom_metacluster, everything()) |>    head() #> # A tibble: 6 × 26 #>   sample_name      .flowsom_metacluster phenograph_cluster    cd19 cd11b    cd34 #>   <chr>            <chr>                <chr>                <dbl> <dbl>   <dbl> #> 1 H1_PhenoGraph_c… 3                    cluster1           -0.0336 2.46   0.608  #> 2 H1_PhenoGraph_c… 7                    cluster1            0.324  0.856 -0.116  #> 3 H1_PhenoGraph_c… 3                    cluster1            0.532  2.67   0.909  #> 4 H1_PhenoGraph_c… 2                    cluster1            0.0163 2.97   0.0725 #> 5 H1_PhenoGraph_c… 4                    cluster1            0.144  2.98   0.128  #> 6 H1_PhenoGraph_c… 2                    cluster1            0.742  3.41   0.336  #> # ℹ 20 more variables: cd45 <dbl>, cd123 <dbl>, cd33 <dbl>, cd47 <dbl>, #> #   cd7 <dbl>, cd44 <dbl>, cd38 <dbl>, cd3 <dbl>, cd117 <dbl>, cd64 <dbl>, #> #   cd41 <dbl>, pstat3 <dbl>, pstat5 <dbl>, pampk <dbl>, p4ebp1 <dbl>, #> #   ps6 <dbl>, pcreb <dbl>, `pzap70-syk` <dbl>, prb <dbl>, `perk1-2` <dbl> phenograph_clusters |>    count(phenograph_cluster, .flowsom_metacluster, sort = TRUE) #> # A tibble: 24 × 3 #>    phenograph_cluster .flowsom_metacluster     n #>    <chr>              <chr>                <int> #>  1 cluster2           13                     483 #>  2 cluster3           18                     418 #>  3 cluster3           11                     300 #>  4 cluster2           20                     215 #>  5 cluster1           3                      213 #>  6 cluster3           12                     182 #>  7 cluster1           4                      177 #>  8 cluster1           1                      167 #>  9 cluster1           2                      165 #> 10 cluster2           19                     124 #> # ℹ 14 more rows # will result in a tibble with only 1 column (the cluster labels) phenograph_data |>    tof_preprocess() |>    tof_cluster(method = \"flowsom\", cluster_cols = contains(\"cd\"), augment = FALSE) |>    head() #> # A tibble: 6 × 1 #>   .flowsom_metacluster #>   <chr>                #> 1 11                   #> 2 7                    #> 3 11                   #> 4 16                   #> 5 4                    #> 6 16"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"dimensionality-reduction-with-tof_reduce_dimensions","dir":"","previous_headings":"Usage > Analyzing data at the cluster-level","what":"Dimensionality reduction with tof_reduce_dimensions()","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"clusters identified, useful tool visualizing dimensionality reduction, form unsupervised machine learning used represent high-dimensional datasets smaller, easier--visualize number dimensions. tidytof includes several algorithms commonly used biologists dimensionality reduction: Principal component analysis (PCA), t-distributed stochastic neighbor embedding (tSNE), uniform manifold approximation projection (UMAP). apply dataset, use tof_reduce_dimensions: default, tof_reduce_dimensions add reduced-dimension feature embeddings input tof_tbl return augmented tof_tbl (, tof_tbl new columns embedding dimension) result. return features embeddings , set augment FALSE (tof_cluster). Regardless method used, reduced-dimension feature embeddings can visualized using ggplot2 (graphics package):   visualizations can helpful qualitatively describing phenotypic differences clusters dataset. example, example , can see one clusters high CD11b expression, whereas others lower CD11b expression.","code":"# perform the dimensionality reduction phenograph_tsne <-    phenograph_clusters |>    tof_reduce_dimensions(method = \"tsne\")  # select only the tsne embedding columns using a tidyselect helper (contains) phenograph_tsne |>    select(contains(\"tsne\")) |>    head() #> # A tibble: 6 × 2 #>   .tsne_1 .tsne_2 #>     <dbl>   <dbl> #> 1   7.44    -5.16 #> 2   5.64    -9.25 #> 3 -10.9    -25.6  #> 4   0.781  -17.2  #> 5   3.50    -7.82 #> 6   2.82   -24.9 # plot the tsne embeddings using color to distinguish between clusters phenograph_tsne |>    ggplot(aes(x = .tsne_1, y = .tsne_2, fill = phenograph_cluster)) +    geom_point(shape = 21) +    theme_bw() +    labs(fill = NULL) # plot the tsne embeddings using color to represent CD11b expression phenograph_tsne |>    ggplot(aes(x = .tsne_1, y = .tsne_2, fill = cd11b)) +    geom_point(shape = 21) +    scale_fill_viridis_c() +   theme_bw() +    labs(fill = \"CD11b expression\")"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"differential-discovery-analysis-with-tof_analyze_abundance-and-tof_analyze_expression","dir":"","previous_headings":"Usage > Analyzing data at the cluster-level","what":"Differential discovery analysis with tof_analyze_abundance and tof_analyze_expression","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"dimensionality reduction can used visualize clustering result, many cytometry users also want use statistical tools rigorously quantify clusters(s) dataset associate particular experimental clinical variable. analyses often grouped umbrella term differential discovery analysis include comparing relative size clusters experimental conditions (differential abundance analysis; DAA) well comparing marker expression patterns clusters experimental conditions (differential expression analysis; DEA). tidytof provides tof_analyze_abundance tof_analyze_expression verbs differential abundance differential expression analyses, respectively. demonstrate use verbs, ’ll first download dataset originally collected development CITRUS algorithm. data available HDCytoData package, available Bioconductor can downloaded following command: load CITRUS data current R session, can call function HDCytoData, provide us format {flowCore} package (called “flowSet”). convert tidy tibble, can use tidytof built-method converting flowCore objects tof_tbl’s . Thus, can see citrus_data tof_tbl 172791 cells (one row) 39 pieces information cell (one column). can also extract metadata raw data join single-cell data using functions tidyverse: Thus, now sample-level information patient sample collected stimulation condition (“Basal” “BCR-XL”) sample exposed data acquisition. Finally, can join metadata single-cell tof_tbl obtain cleaned dataset. data cleaning steps, now citrus_data, tof_tbl containing cells collected 8 patients. Specifically, 2 samples taken patient: one cells’ B-cell receptors stimulated (BCR-XL) one (Basal). citrus_data, cell’s patient origin stored patient column, cell’s stimulation condition stored stimulation column. addition, population_id column stores information cluster labels applied cell using combination FlowSOM clustering manual merging (details, run ?HDCytoData::Bodenmiller_BCR_XL R console). might wonder certain clusters expand deplete within patients two stimulation conditions described - question requires differential abundance analysis (DAA). tidytof’s tof_analyze_abundance verb supports use 3 statistical approaches performing DAA: diffcyt, generalized-linear mixed modeling (GLMMs), simple t-tests. setup described uses paired design 2 experimental conditions interest (Basal vs. BCR-XL), can use paired t-test method: Based output, can see 6 8 clusters statistically different abundance two stimulation conditions. Using tidytof easy integration tidyverse packages, can use result visualize fold-changes cluster (within patient) BCR-XL condition compared Basal condition using ggplot2:  Importantly, output tof_analyze_abundance depends slightly underlying statistical method used, details can found documentation tof_analyze_abundance_* function family member: tof_analyze_abundance_diffcyt tof_analyze_abundance_glmm tof_analyze_abundance_ttest Similarly, suppose ’re interested intracellular signaling proteins change expression levels two stimulation conditions clusters. Differential Expression Analysis (DEA) can performed using tidytof’s tof_analyze_expression verb. , can use paired t-tests multiple-hypothesis correction test significant differences cluster’s expression signaling markers stimulation conditions. output tof_analyze_expression() also depends underlying test used, can see result looks relatively similar output tof_analyze_abundance(). , output tibble row represents differential expression results single cluster-marker pair - example, first row represents difference expression pS6 cluster 1 BCR-XL Basal conditions. row includes raw p-value multiple-hypothesis-corrected p-value cluster-marker pair. result can used make volcano plot visualize results cluster-marker pairs:","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE))     install.packages(\"BiocManager\")  BiocManager::install(\"HDCytoData\") citrus_raw <- HDCytoData::Bodenmiller_BCR_XL_flowSet()  citrus_data <-    citrus_raw |>    as_tof_tbl(sep = \"_\") citrus_metadata <-    tibble(     file_name = as.character(flowCore::pData(citrus_raw)[[1]]),      sample_id = 1:length(file_name),     patient = str_extract(file_name, \"patient[:digit:]\"),      stimulation = str_extract(file_name, \"(BCR-XL)|Reference\")   ) |>    mutate(     stimulation = if_else(stimulation == \"Reference\", \"Basal\", stimulation)   )  citrus_metadata |>   head() #> # A tibble: 6 × 4 #>   file_name                          sample_id patient  stimulation #>   <chr>                                  <int> <chr>    <chr>       #> 1 PBMC8_30min_patient1_BCR-XL.fcs            1 patient1 BCR-XL      #> 2 PBMC8_30min_patient1_Reference.fcs         2 patient1 Basal       #> 3 PBMC8_30min_patient2_BCR-XL.fcs            3 patient2 BCR-XL      #> 4 PBMC8_30min_patient2_Reference.fcs         4 patient2 Basal       #> 5 PBMC8_30min_patient3_BCR-XL.fcs            5 patient3 BCR-XL      #> 6 PBMC8_30min_patient3_Reference.fcs         6 patient3 Basal citrus_data <-    citrus_data |>    left_join(citrus_metadata, by = \"sample_id\") daa_result <-    citrus_data |>    tof_analyze_abundance(     cluster_col = population_id,      effect_col = stimulation,      group_cols = patient,      test_type = \"paired\",      method = \"ttest\"   )  daa_result #> # A tibble: 8 × 8 #>   population_id    p_val   p_adj significant      t    df mean_diff mean_fc #>   <chr>            <dbl>   <dbl> <chr>        <dbl> <dbl>     <dbl>   <dbl> #> 1 1             0.000924 0.00535 \"*\"         -5.48      7  -0.00743   0.644 #> 2 2             0.00623  0.0166  \"*\"         -3.86      7  -0.0156    0.674 #> 3 3             0.0235   0.0314  \"*\"         -2.88      7  -0.0638    0.849 #> 4 4             0.0235   0.0314  \"*\"          2.88      7   0.0832    1.38  #> 5 5             0.0116   0.0232  \"*\"          3.39      7   0.00246   1.08  #> 6 6             0.371    0.371   \"\"          -0.955     7  -0.0168    0.919 #> 7 7             0.00134  0.00535 \"*\"          5.14      7   0.0202    1.14  #> 8 8             0.236    0.270   \"\"          -1.30      7  -0.00228   0.901 plot_data <-    citrus_data |>    mutate(population_id = as.character(population_id)) |>   left_join(     select(daa_result, population_id, significant, mean_fc),      by = \"population_id\"   ) |>    dplyr::count(patient, stimulation, population_id, significant, mean_fc, name = \"n\") |>    group_by(patient, stimulation) |>    mutate(prop = n / sum(n)) |>    ungroup() |>    pivot_wider(     names_from = stimulation,      values_from = c(prop, n),    ) |>    mutate(     diff = `prop_BCR-XL` - prop_Basal,      fc = `prop_BCR-XL` / prop_Basal,     population_id = fct_reorder(population_id, diff),     direction =        case_when(         mean_fc > 1 & significant == \"*\" ~ \"increase\",         mean_fc < 1 & significant == \"*\" ~ \"decrease\",          TRUE ~ NA_character_       )   )  significance_data <-    plot_data |>    group_by(population_id, significant, direction) |>    summarize(diff = max(diff), fc = max(fc)) |>    ungroup()  plot_data |>    ggplot(aes(x = population_id, y = fc, fill = direction)) +    geom_violin(trim = FALSE) +   geom_hline(yintercept = 1, color = \"red\", linetype = \"dotted\", size = 0.5) +    geom_point() +    geom_text(     aes(x = population_id, y = fc, label = significant),      data = significance_data,      size = 8,      nudge_x = 0.2,     nudge_y = 0.06   ) +   scale_x_discrete(labels = function(x) str_c(\"cluster \", x)) +    scale_fill_manual(     values = c(\"decrease\" = \"#cd5241\", \"increase\" = \"#207394\"),     na.translate = FALSE   ) +   labs(     x = NULL,      y = \"Abundance fold-change (stimulated / basal)\",      fill = \"Effect\",      caption = \"Asterisks indicate significance at an adjusted p-value of 0.05\"   ) signaling_markers <-    c(     \"pNFkB_Nd142\", \"pStat5_Nd150\", \"pAkt_Sm152\", \"pStat1_Eu153\", \"pStat3_Gd158\",      \"pSlp76_Dy164\", \"pBtk_Er166\", \"pErk_Er168\", \"pS6_Yb172\", \"pZap70_Gd156\"   )  dea_result <-    citrus_data |>    tof_preprocess(channel_cols = any_of(signaling_markers)) |>    tof_analyze_expression(     cluster_col = population_id,      marker_cols = any_of(signaling_markers),      effect_col = stimulation,     group_cols = patient,      test_type = \"paired\",      method = \"ttest\"   )  dea_result |>    head() #> # A tibble: 6 × 9 #>   population_id marker   p_val   p_adj significant     t    df mean_diff mean_fc #>   <chr>         <chr>    <dbl>   <dbl> <chr>       <dbl> <dbl>     <dbl>   <dbl> #> 1 1             pS6_Y… 7.58e-8 2.12e-6 *            22.9     7     2.56    4.31  #> 2 2             pS6_Y… 1.16e-7 2.12e-6 *            21.6     7     2.13    2.49  #> 3 3             pBtk_… 1.32e-7 2.12e-6 *           -21.2     7    -0.475   0.289 #> 4 7             pBtk_… 1.18e-7 2.12e-6 *           -21.5     7    -0.518   0.286 #> 5 8             pBtk_… 1.30e-7 2.12e-6 *           -21.2     7    -0.516   0.324 #> 6 4             pBtk_… 7.85e-7 1.05e-5 *           -16.3     7    -0.462   0.296 volcano_plot <-    dea_result |>    tof_plot_clusters_volcano(     use_ggrepel = TRUE   )   volcano_plot"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"analyzing-data-at-the-patient--and-sample-level","dir":"","previous_headings":"Usage","what":"Analyzing data at the patient- and sample-level","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"addition verbs operate single-cell data directly, tidytof implements functions aggregating single-cell measurements cluster- sample-level summary statistics can analyzed using variety statistical models.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"feature-extraction-with-tof_extract_features","dir":"","previous_headings":"Usage > Analyzing data at the patient- and sample-level","what":"Feature extraction with tof_extract_features","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"addition functions analyzing visualizing cytometry data single-cell cluster levels, tidytof’s tof_extract_features verb allows users aggregate single-cell cluster-level information order summarize whole-samples (whole-patients) cells collected. features can useful visualizing differences patients samples different experimental conditions building machine learning models. understand tof_extract_features verb works, ’s easiest look subroutines (members tof_extract_* function family) independently. First, tof_extract_proportion, extracts proportion cells cluster within sample (samples defined using group_cols argument): Like members tof_extract_* function family, tof_extract_proportion() returns one row sample (defined unique combination values group_cols) one column extracted feature (, one column proportion 8 clusters citrus_data). values can also returned “long” format changing format argument: Another member function family, tof_extract_central_tendency, computes central tendency (e.g. mean median) user-specified markers cluster. tof_extract_threshold similar tof_extract_central_tendency, calculates proportion cells user-specified expression value marker instead measure central tendency: two final members tof_extract_* function family – tof_extract_emd tof_extract_jsd designed specifically comparing distributions marker expression stimulation conditions. , must given stimulation_col identifies stimulation condition cell , basal_level specifies reference (.e. unstimulated) condition within stimulation_col. additional arguments, tof_extract_emd computes Earth-mover’s distance marker’s distribution stimulation conditions (within cluster) basal condition; similarly, tof_extract_jsd computes Jensen-Shannon divergence index distributions. values ways compare different 2 distributions one another computationally expensive (also higher-resolution) simply comparing measures central tendency. Finally, tof_extract_features verb provides wrapper members function family, allowing users extract multiple features types . example, following code extracts proportion cluster, median several markers cluster, EMD basal condition stimulated condition cluster patients citrus_data.","code":"# preprocess the numeric columns in the citrus dataset citrus_data <-    citrus_data |>    mutate(cluster = str_c(\"cluster\", population_id)) |>    tof_preprocess()  citrus_data |>    tof_extract_proportion(     cluster_col = cluster,      group_cols = c(patient, stimulation)   ) |>    head() #> # A tibble: 6 × 10 #>   patient  stimulation `prop@cluster1` `prop@cluster2` `prop@cluster3` #>   <chr>    <chr>                 <dbl>           <dbl>           <dbl> #> 1 patient1 Basal                0.0190          0.0482           0.447 #> 2 patient1 BCR-XL               0.0109          0.0395           0.268 #> 3 patient2 Basal                0.0130          0.0280           0.491 #> 4 patient2 BCR-XL               0.0101          0.0143           0.358 #> 5 patient3 Basal                0.0326          0.0830           0.397 #> 6 patient3 BCR-XL               0.0200          0.0412           0.323 #> # ℹ 5 more variables: `prop@cluster4` <dbl>, `prop@cluster5` <dbl>, #> #   `prop@cluster6` <dbl>, `prop@cluster7` <dbl>, `prop@cluster8` <dbl> citrus_data |>    tof_extract_proportion(     cluster_col = cluster,      group_cols = c(patient, stimulation),      format = \"long\"   ) |>    head() #> # A tibble: 6 × 4 #>   patient  stimulation cluster     prop #>   <chr>    <chr>       <chr>      <dbl> #> 1 patient1 Basal       cluster1 0.0190  #> 2 patient1 Basal       cluster2 0.0482  #> 3 patient1 Basal       cluster3 0.447   #> 4 patient1 Basal       cluster4 0.237   #> 5 patient1 Basal       cluster5 0.00219 #> 6 patient1 Basal       cluster6 0.0759 citrus_data |>    tof_extract_central_tendency(     cluster_col = cluster,      group_cols = c(patient, stimulation),      marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),      central_tendency_function = mean   ) |>    head() #> # A tibble: 6 × 26 #>   patient  stimulation `CD45_In115@cluster1_ct` `CD4_Nd145@cluster1_ct` #>   <chr>    <chr>                          <dbl>                   <dbl> #> 1 patient1 BCR-XL                          4.80                  0.0967 #> 2 patient1 Basal                           4.68                  0.765  #> 3 patient2 BCR-XL                          5.00                 -0.0579 #> 4 patient2 Basal                           4.88                  0.808  #> 5 patient3 BCR-XL                          5.04                 -0.0432 #> 6 patient3 Basal                           4.98                  0.745  #> # ℹ 22 more variables: `CD20_Sm147@cluster1_ct` <dbl>, #> #   `CD45_In115@cluster2_ct` <dbl>, `CD4_Nd145@cluster2_ct` <dbl>, #> #   `CD20_Sm147@cluster2_ct` <dbl>, `CD45_In115@cluster3_ct` <dbl>, #> #   `CD4_Nd145@cluster3_ct` <dbl>, `CD20_Sm147@cluster3_ct` <dbl>, #> #   `CD45_In115@cluster4_ct` <dbl>, `CD4_Nd145@cluster4_ct` <dbl>, #> #   `CD20_Sm147@cluster4_ct` <dbl>, `CD45_In115@cluster5_ct` <dbl>, #> #   `CD4_Nd145@cluster5_ct` <dbl>, `CD20_Sm147@cluster5_ct` <dbl>, … citrus_data |>    tof_extract_threshold(     cluster_col = cluster,      group_cols = c(patient, stimulation),      marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),      threshold = 5   ) |>    head() #> # A tibble: 6 × 26 #>   patient  stimulation `CD45_In115@cluster1_threshold` CD4_Nd145@cluster1_thre…¹ #>   <chr>    <chr>                                 <dbl>                     <dbl> #> 1 patient1 BCR-XL                                0.516                         0 #> 2 patient1 Basal                                 0.365                         0 #> 3 patient2 BCR-XL                                0.554                         0 #> 4 patient2 Basal                                 0.452                         0 #> 5 patient3 BCR-XL                                0.547                         0 #> 6 patient3 Basal                                 0.549                         0 #> # ℹ abbreviated name: ¹​`CD4_Nd145@cluster1_threshold` #> # ℹ 22 more variables: `CD20_Sm147@cluster1_threshold` <dbl>, #> #   `CD45_In115@cluster2_threshold` <dbl>, #> #   `CD4_Nd145@cluster2_threshold` <dbl>, #> #   `CD20_Sm147@cluster2_threshold` <dbl>, #> #   `CD45_In115@cluster3_threshold` <dbl>, #> #   `CD4_Nd145@cluster3_threshold` <dbl>, … # Earth-mover's distance citrus_data |>    tof_extract_emd(     cluster_col = cluster,      group_cols = patient,      marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),      emd_col = stimulation,      reference_level = \"Basal\"   ) |>    head() #> # A tibble: 6 × 25 #>   patient  BCR-XL_CD45_In115@clu…¹ BCR-XL_CD4_Nd145@clu…² BCR-XL_CD20_Sm147@cl…³ #>   <chr>                      <dbl>                  <dbl>                  <dbl> #> 1 patient1                   0.864                   2.47                  13.0  #> 2 patient2                   1.11                    7.05                  10.8  #> 3 patient3                   0.670                   6.23                  10.5  #> 4 patient4                   2.64                    5.86                   9.90 #> 5 patient5                   0.594                   7.56                   8.13 #> 6 patient6                   0.661                   4.77                   7.97 #> # ℹ abbreviated names: ¹​`BCR-XL_CD45_In115@cluster3_emd`, #> #   ²​`BCR-XL_CD4_Nd145@cluster3_emd`, ³​`BCR-XL_CD20_Sm147@cluster3_emd` #> # ℹ 21 more variables: `BCR-XL_CD45_In115@cluster7_emd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster7_emd` <dbl>, #> #   `BCR-XL_CD20_Sm147@cluster7_emd` <dbl>, #> #   `BCR-XL_CD45_In115@cluster4_emd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster4_emd` <dbl>, … # Jensen-Shannon Divergence citrus_data |>    tof_extract_jsd(     cluster_col = cluster,      group_cols = patient,       marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),      jsd_col = stimulation,      reference_level = \"Basal\"   ) |>    head() #> # A tibble: 6 × 25 #>   patient  BCR-XL_CD45_In115@clu…¹ BCR-XL_CD4_Nd145@clu…² BCR-XL_CD20_Sm147@cl…³ #>   <chr>                      <dbl>                  <dbl>                  <dbl> #> 1 patient1                 0.0367                  0.0513                  0.347 #> 2 patient2                 0.00831                 0.168                   0.401 #> 3 patient3                 0.0104                  0.115                   0.357 #> 4 patient4                 0.0301                  0.135                   0.205 #> 5 patient5                 0.00911                 0.0789                  0.274 #> 6 patient6                 0.00972                 0.0346                  0.214 #> # ℹ abbreviated names: ¹​`BCR-XL_CD45_In115@cluster3_jsd`, #> #   ²​`BCR-XL_CD4_Nd145@cluster3_jsd`, ³​`BCR-XL_CD20_Sm147@cluster3_jsd` #> # ℹ 21 more variables: `BCR-XL_CD45_In115@cluster7_jsd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster7_jsd` <dbl>, #> #   `BCR-XL_CD20_Sm147@cluster7_jsd` <dbl>, #> #   `BCR-XL_CD45_In115@cluster4_jsd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster4_jsd` <dbl>, … citrus_data |>    tof_extract_features(     cluster_col = cluster,      group_cols = patient,      stimulation_col = stimulation,     lineage_cols = any_of(c(\"CD45_In115\", \"CD20_Sm147\", \"CD33_Nd148\")),      signaling_cols = any_of(signaling_markers),      signaling_method = \"emd\",      basal_level = \"Basal\"   ) |>    head()"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"outcomes-modeling-with-tof_model","dir":"","previous_headings":"Usage > Analyzing data at the patient- and sample-level","what":"Outcomes modeling with tof_model","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"[brief intro building predictive models might motivated .] tidytof implements several functions building predictive models using sample- patient-level data. illustrate work, first download patient-level data paper combining sample-level clinical annotations one tidytof’s built-data objects (ddpr_metadata). data processing steps result ddpr_patients tibble. numeric columns ddpr_patients represent aggregated cell population features sample (see Supplementary Table 5 paper details). non-numeric columns represent clinical metadata sample (run ?ddpr_metadata information). also preprocessing steps might want perform now save us headaches ’re fitting models later.","code":"data(ddpr_metadata)  # link for downloading the sample-level data from the Nature Medicine website data_link <-    \"https://static-content.springer.com/esm/art%3A10.1038%2Fnm.4505/MediaObjects/41591_2018_BFnm4505_MOESM3_ESM.csv\"  # downloading the data and combining it with clinical annotations ddpr_patients <-    readr::read_csv(data_link, skip = 2L, n_max = 78L, show_col_types = FALSE) |>    dplyr::rename(patient_id = Patient_ID) |>    left_join(ddpr_metadata, by = \"patient_id\") |>    dplyr::filter(!str_detect(patient_id, \"Healthy\"))  ddpr_patients |>    select(where(~ !is.numeric(.x))) |>    head() #> # A tibble: 6 × 8 #>   patient_id gender mrd_risk nci_rome_risk relapse_status type_of_relapse cohort #>   <chr>      <chr>  <chr>    <chr>         <chr>          <chr>           <chr>  #> 1 UPN1       Male   Interme… Standard      Yes            Early           Train… #> 2 UPN1-Rx    Male   Interme… Standard      Yes            Early           Train… #> 3 UPN2       Male   Interme… Standard      No             <NA>            Train… #> 4 UPN3       Female Standard Standard      No             <NA>            Train… #> 5 UPN4       Male   Standard Standard      No             <NA>            Valid… #> 6 UPN5       Female Standard High          No             <NA>            Valid… #> # ℹ 1 more variable: ddpr_risk <chr> ddpr_patients <-    ddpr_patients |>    # convert the relapse_status variable to a factor first,    # which is something we'll want for fitting the model later   # and create the time_to_event and event columns for survival modeling   mutate(     relapse_status = as.factor(relapse_status),      time_to_event = if_else(relapse_status == \"Yes\", time_to_relapse, ccr),     event = if_else(relapse_status == \"Yes\", 1, 0)   )"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"separating-the-training-and-validation-cohorts","dir":"","previous_headings":"Usage > Analyzing data at the patient- and sample-level > Outcomes modeling with tof_model","what":"Separating the training and validation cohorts","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"original DDPR paper, patients used fit model rest used assess model tuned. can separate training validation cohorts using cohort variable ddpr_patients","code":"ddpr_training <-    ddpr_patients |>    dplyr::filter(cohort == \"Training\")   ddpr_validation <-    ddpr_patients |>    dplyr::filter(cohort == \"Validation\") nrow(ddpr_training) #> [1] 49  nrow(ddpr_validation) #> [1] 12"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"building-a-classifier-using-logistic-regression","dir":"","previous_headings":"Usage > Analyzing data at the patient- and sample-level > Outcomes modeling with tof_model","what":"Building a classifier using logistic regression","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"First, can build elastic net classifier predict patients relapse patients won’t (ignoring time--event data now). , can use relapse_status column ddpr_training outcome variable: Specifically, can use tof_split_data function split cohort training test set either (“simple” split) multiple times (using either k-fold cross-validation bootstrapping). case, use 5-fold cross-validation, reading documentation tof_split_data demonstrates use methods. output tof_split_data varies depending split_method used. cross-validation, result rset object rsample package. rset objects type tibble two columns: splits - column entry rsplit object (contains single resample full dataset) id - character column entry represents name fold entry splits belongs . can inspect one resamples splits column see contain: Note can use rsample::training rsample::testing return training test obeservations resampling: , can feed training_split tof_train_model function tune logistic regression model predicts relapse_status leukemia patient. sure check tof_create_grid documentation learn make hyperparameter search grid model tuning (case, limit mixture parameter value 1, fits sparse lasso model). Also note demonstration purposes, include features come one cell population (“Population 2”) original dataset, means probably shouldn’t expect model perform well one original paper (select many features). output tof_train_model tof_model, object containing information trained model (can passed tof_predict tof_assess_model verbs). tof_model printed, information optimal hyperparamters printed, table nonzero model coefficients model. can use trained model make predictions validation data set aside earlier: can see model gets (!) predictions correct validation set set aside. can also assess model directly using tof_assess_model can make ROC curve using metrics:  can assess model validation data…","code":"# find how many of each outcome we have in our cohort ddpr_training |>    dplyr::count(relapse_status) #> # A tibble: 2 × 2 #>   relapse_status     n #>   <fct>          <int> #> 1 No                31 #> 2 Yes               18 training_split <-    ddpr_training |>    tof_split_data(     split_method = \"k-fold\",      num_cv_folds = 5,      strata = relapse_status   )  training_split #> #  5-fold cross-validation using stratification  #> # A tibble: 5 × 2 #>   splits          id    #>   <list>          <chr> #> 1 <split [38/11]> Fold1 #> 2 <split [39/10]> Fold2 #> 3 <split [39/10]> Fold3 #> 4 <split [40/9]>  Fold4 #> 5 <split [40/9]>  Fold5 my_resample <- training_split$splits[[1]]  print(my_resample) #> <Analysis/Assess/Total> #> <38/11/49>  class(my_resample) #> [1] \"vfold_split\" \"rsplit\" my_resample |>    rsample::training() |>    head() #> # A tibble: 6 × 1,854 #>   patient_id Pop_P_Pop1 CD19_Pop1 CD20_Pop1 CD24_Pop1 CD34_Pop1 CD38_Pop1 #>   <chr>           <dbl>     <dbl>     <dbl>     <dbl>     <dbl>     <dbl> #> 1 UPN1-Rx        0.0395    0.618     0.0634    0.572       2.93     0.944 #> 2 UPN2           0.139     0.0662    0.0221    0.0825      2.25     0.454 #> 3 UPN3           0.633     0.0234    0.0165    0.0327      2.25     0.226 #> 4 UPN7           0.474     0.966     0.124     1.24        2.59     0.243 #> 5 UPN8           0.951     0.958     0.161     0.556       3.18     0.556 #> 6 UPN9          15.6       0.446     0.0445    0.163       2.86     0.434 #> # ℹ 1,847 more variables: CD127_Pop1 <dbl>, CD179a_Pop1 <dbl>, #> #   CD179b_Pop1 <dbl>, IgMi_Pop1 <dbl>, IgMs_Pop1 <dbl>, TdT_Pop1 <dbl>, #> #   CD22_Pop1 <dbl>, tIkaros_Pop1 <dbl>, CD79b_Pop1 <dbl>, Ki67_Pop1 <dbl>, #> #   TSLPr_Pop1 <dbl>, RAG1_Pop1 <dbl>, CD123_Pop1 <dbl>, CD45_Pop1 <dbl>, #> #   CD10_Pop1 <dbl>, Pax5_Pop1 <dbl>, CD43_Pop1 <dbl>, CD58_Pop1 <dbl>, #> #   HLADR_Pop1 <dbl>, p4EBP1_FC_Basal_Pop1 <dbl>, pSTAT5_FC_Basal_Pop1 <dbl>, #> #   pPLCg1_2_FC_Basal_Pop1 <dbl>, pAkt_FC_Basal_Pop1 <dbl>, …  my_resample |>    rsample::testing() |>    head() #> # A tibble: 6 × 1,854 #>   patient_id Pop_P_Pop1 CD19_Pop1 CD20_Pop1 CD24_Pop1 CD34_Pop1 CD38_Pop1 #>   <chr>           <dbl>     <dbl>     <dbl>     <dbl>     <dbl>     <dbl> #> 1 UPN1          3.06       0.583   0.00449      0.164      1.94     0.416 #> 2 UPN6          5.62       0.550   0.00374      0.622      2.86     0.342 #> 3 UPN10         0.00374    0.761   0.000696     0.829      3.19     0.886 #> 4 UPN13         0.0634     0.0300  0.0219       0.109      2.34     0.314 #> 5 UPN22         3.29       1.63    0.128        0.525      3.38     0.688 #> 6 UPN22-Rx      0.0643     1.68    0.0804       1.56       3.06     0.529 #> # ℹ 1,847 more variables: CD127_Pop1 <dbl>, CD179a_Pop1 <dbl>, #> #   CD179b_Pop1 <dbl>, IgMi_Pop1 <dbl>, IgMs_Pop1 <dbl>, TdT_Pop1 <dbl>, #> #   CD22_Pop1 <dbl>, tIkaros_Pop1 <dbl>, CD79b_Pop1 <dbl>, Ki67_Pop1 <dbl>, #> #   TSLPr_Pop1 <dbl>, RAG1_Pop1 <dbl>, CD123_Pop1 <dbl>, CD45_Pop1 <dbl>, #> #   CD10_Pop1 <dbl>, Pax5_Pop1 <dbl>, CD43_Pop1 <dbl>, CD58_Pop1 <dbl>, #> #   HLADR_Pop1 <dbl>, p4EBP1_FC_Basal_Pop1 <dbl>, pSTAT5_FC_Basal_Pop1 <dbl>, #> #   pPLCg1_2_FC_Basal_Pop1 <dbl>, pAkt_FC_Basal_Pop1 <dbl>, … class_mod <-    training_split |>    tof_train_model(     predictor_cols = contains(\"Pop2\"),      response_col = relapse_status,     model_type = \"two-class\",      hyperparameter_grid = tof_create_grid(mixture_values = 1),      impute_missing_predictors = TRUE,      remove_zv_predictors = TRUE # often a smart decision   ) print(class_mod) #> A two-class `tof_model` with a mixture parameter (alpha) of 1 and a penalty parameter (lambda) of 1e-10  #> # A tibble: 25 × 2 #>    feature             coefficient #>    <chr>                     <dbl> #>  1 p4EBP1_dP_IL7_Pop2        -2.59 #>  2 CD58_Pop2                  2.23 #>  3 (Intercept)               -1.83 #>  4 pSTAT5_dP_TSLP_Pop2        1.69 #>  5 p4EBP1_FC_IL7_Pop2         1.46 #>  6 CD43_Pop2                  1.37 #>  7 HLADR_Pop2                -1.32 #>  8 pSyk_dP_TSLP_Pop2          1.08 #>  9 pErk_dP_IL7_Pop2          -1.05 #> 10 Ki67_Pop2                 -1.05 #> # ℹ 15 more rows class_predictions <-    class_mod |>    tof_predict(new_data = ddpr_validation, prediction_type = \"class\")  class_predictions |>    dplyr::mutate(     truth = ddpr_validation$relapse_status   ) #> # A tibble: 12 × 2 #>    .pred truth #>    <chr> <fct> #>  1 Yes   No    #>  2 No    No    #>  3 No    Yes   #>  4 No    No    #>  5 No    No    #>  6 Yes   Yes   #>  7 Yes   Yes   #>  8 No    No    #>  9 No    No    #> 10 No    Yes   #> 11 No    Yes   #> 12 No    Yes # calling the function with no new_data evaluates the # the nodel using its training data training_assessment <-    class_mod |>    tof_assess_model()  training_assessment #> $model_metrics #> # A tibble: 6 × 2 #>   metric                    value #>   <chr>                     <dbl> #> 1 binomial_deviance       0.0291  #> 2 misclassification_error 0       #> 3 roc_auc                 1       #> 4 mse                     0.00119 #> 5 mae                     0.0285  #> 6 accuracy                1       #>  #> $roc_curve #> # A tibble: 51 × 5 #>       .threshold specificity sensitivity   tpr   fpr #>            <dbl>       <dbl>       <dbl> <dbl> <dbl> #>  1 -Inf               0                1     1 1     #>  2    0.00000114      0                1     1 1     #>  3    0.0000955       0.0323           1     1 0.968 #>  4    0.000160        0.0645           1     1 0.935 #>  5    0.000190        0.0968           1     1 0.903 #>  6    0.000612        0.129            1     1 0.871 #>  7    0.000896        0.161            1     1 0.839 #>  8    0.00135         0.194            1     1 0.806 #>  9    0.00142         0.226            1     1 0.774 #> 10    0.00194         0.258            1     1 0.742 #> # ℹ 41 more rows #>  #> $confusion_matrix #> # A tibble: 4 × 3 #>   true_outcome predicted_outcome num_observations #>   <chr>        <chr>                        <int> #> 1 No           No                              31 #> 2 No           Yes                              0 #> 3 Yes          No                               0 #> 4 Yes          Yes                             18 class_mod |>    tof_plot_model() +    labs(subtitle = \"ROC Curve (Training data)\") validation_assessment <-    class_mod |>    tof_assess_model(new_data = ddpr_validation)  validation_assessment #> $model_metrics #> # A tibble: 6 × 2 #>   metric                  value #>   <chr>                   <dbl> #> 1 binomial_deviance       4.75  #> 2 misclassification_error 0.417 #> 3 roc_auc                 0.639 #> 4 mse                     0.759 #> 5 mae                     0.879 #> 6 accuracy                0.583 #>  #> $roc_curve #> # A tibble: 14 × 5 #>     .threshold specificity sensitivity   tpr   fpr #>          <dbl>       <dbl>       <dbl> <dbl> <dbl> #>  1 -Inf              0           1     1     1     #>  2    0.000240       0           1     1     1     #>  3    0.00105        0.167       1     1     0.833 #>  4    0.00195        0.167       0.833 0.833 0.833 #>  5    0.00230        0.333       0.833 0.833 0.667 #>  6    0.00472        0.5         0.833 0.833 0.5   #>  7    0.00618        0.667       0.833 0.833 0.333 #>  8    0.0464         0.667       0.667 0.667 0.333 #>  9    0.273          0.667       0.5   0.5   0.333 #> 10    0.286          0.667       0.333 0.333 0.333 #> 11    0.844          0.833       0.333 0.333 0.167 #> 12    0.852          0.833       0.167 0.167 0.167 #> 13    1.00           0.833       0     0     0.167 #> 14  Inf              1           0     0     0     #>  #> $confusion_matrix #> # A tibble: 4 × 3 #>   true_outcome predicted_outcome num_observations #>   <chr>        <chr>                        <int> #> 1 No           No                               5 #> 2 No           Yes                              1 #> 3 Yes          No                               4 #> 4 Yes          Yes                              2 class_mod |>    tof_plot_model(new_data = ddpr_validation) +    labs(subtitle = \"ROC Curve (Validation data)\")"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"tidytofs-design-principles-and-some-tips","dir":"","previous_headings":"","what":"{tidytof}’s Design Principles (and some tips)","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"{tidytof} designed multidisciplinary team wet-lab biologists, bioinformaticians, physician-scientists analyze cytometry kinds single-cell data solve variety problems. result, tidytof’s high-level API designed great care mirror tidyverse - , human-centered, consistent, composable, inclusive wide userbase. section, describe miscellaneous design decisions tips using tidytof may help enthusiastic user.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"id_1-use-the-tof_-prefix-to-your-advantage","dir":"","previous_headings":"{tidytof}’s Design Principles (and some tips)","what":"1. Use the tof_ prefix to your advantage.","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"may notice tidytof functions begin prefix tof_. intentional, allow use development environment’s code-completing software search functions easily (even don’t remember function name). reason, recommend using tidytof within RStudio development environment; however, many code editors predictive text functionality serves similar function. general, tidytof verbs organized way IDE’s code-completion tools also allow search (compare) related functions relative ease. (instance, tof_cluster_ prefix used clustering functions, tof_downsample_ prefix used downsampling functions).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"id_2-tidytof-functions-use-2-kinds-of-arguments","dir":"","previous_headings":"{tidytof}’s Design Principles (and some tips)","what":"2. {tidytof} functions use 2 kinds of arguments","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"tidytof functions optimized working “tidy” data form tibbles data.frames. means tidytof functions share basic design principles terms arguments work. details design principles, check Getting Started tidytof vignette","code":""},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"id_3-use-tidytof-to-write-human-readable-pipelines","dir":"","previous_headings":"{tidytof}’s Design Principles (and some tips)","what":"3. Use {tidytof} to write human-readable pipelines","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"real “magic” tidytof derives ability simplify multistep data-processing tasks simple readable chunk code. example, suppose just acquired .fcs files mass cytometer want perform following analysis: Read .fcs files R session Arcsinh-transform column protein measurements Cluster cells based surface markers panel Downsample dataset 100 random cells picked cluster Perform dimensionality reduction downsampled dataset using tSNE Visualize clusters using low-dimensional tSNE embedding using appropriate tidytof verbs step analysis, can easily write code function call corresponds exactly one step pipeline:  shown , stringing together tidytof verbs creates pipeline can read easily left--right top--bottom – means relatively easy return code later (modify , write methods section next high-impact manuscript!) , perhaps importantly, one colleagues return later want recreate analysis.","code":"input_path <- tidytof_example_data(\"phenograph\")  set.seed(0012)  input_path |>    # step 1   tof_read_data() |>    # step 2   tof_preprocess() |>    # step 3   tof_cluster(method = \"phenograph\") |>   # step 4   tof_downsample(     group_cols = .phenograph_cluster,      num_cells = 100,     method = \"constant\"    ) |>    # step 5   tof_reduce_dimensions(perplexity = 50, method = \"tsne\") |>    # step 6   tof_plot_cells_embedding(     embedding_cols = starts_with(\".tsne\"),     color_col = .phenograph_cluster   )"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"id_4-additional-resources","dir":"","previous_headings":"{tidytof}’s Design Principles (and some tips)","what":"4. Additional resources","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"tidytof built top tidyverse family R packages. result, users tidytof benefit substantially spending hours dplyr, ggplot2, tidyr package vignettes learn many useful functions packages provide. access recommended list package vignettes, run following lines R code console:","code":"# dplyr vignette(topic = \"dplyr\", package = \"dplyr\") vignette(topic = \"grouping\", package = \"dplyr\") vignette(topic = \"colwise\", package = \"dplyr\")  # ggplot2 vignette(topic = \"ggplot2-specs\", package = \"ggplot2\")  # tidyr vignette(topic = \"tidy-data\", package = \"tidyr\") vignette(topic = \"nest\", package = \"tidyr\")"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_SingleCellExperiment.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce an object into a SingleCellExperiment — as_SingleCellExperiment","title":"Coerce an object into a SingleCellExperiment — as_SingleCellExperiment","text":"Coerce object SingleCellExperiment Coerce tof_tbl SingleCellExperiment","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_SingleCellExperiment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce an object into a SingleCellExperiment — as_SingleCellExperiment","text":"","code":"as_SingleCellExperiment(x, ...)  # S3 method for tof_tbl as_SingleCellExperiment(   x,   channel_cols = where(tof_is_numeric),   reduced_dimensions_cols,   metadata_cols = where(function(.x) !tof_is_numeric(.x)),   split_reduced_dimensions = FALSE,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_SingleCellExperiment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce an object into a SingleCellExperiment — as_SingleCellExperiment","text":"x tof_tbl ... Unused. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. nothing specified, default numeric columns. reduced_dimensions_cols Unquoted column names representing columns contain dimensionality reduction embeddings, tSNE UMAP embeddings. Supports tidyselect helpers. metadata_cols Unquoted column names representing columns contain metadata samples cell collected. nothing specified, default non-numeric columns. split_reduced_dimensions boolean value indicating whether dimensionality results x split separate slots resulting SingleCellExperiment. FALSE (default), split performed reducedDims slot result single entry (\"tidytof_reduced_dimensions\"). TRUE, split performed reducedDims slot result 1-4 entries depending dimensionality reduction results present x (\"tidytof_pca\", \"tidytof_tsne\", \"tidytof_umap\", \"tidytof_reduced_dimensions\"). Note \"tidytof_reduced_dimensions\" include dimensionality reduction results named according tidytof's pca, umap, tsne conventions.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_SingleCellExperiment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce an object into a SingleCellExperiment — as_SingleCellExperiment","text":"SingleCellExperiment SingleCellExperiment.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_SingleCellExperiment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce an object into a SingleCellExperiment — as_SingleCellExperiment","text":"","code":"NULL #> NULL  NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce an object into a flowFrame — as_flowFrame","title":"Coerce an object into a flowFrame — as_flowFrame","text":"Coerce object flowFrame Coerce tof_tbl flowFrame","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowFrame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce an object into a flowFrame — as_flowFrame","text":"","code":"as_flowFrame(x, ...)  # S3 method for tof_tbl as_flowFrame(x, ...)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowFrame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce an object into a flowFrame — as_flowFrame","text":"x tof_tbl. ... Unused.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowFrame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce an object into a flowFrame — as_flowFrame","text":"flowFrame flowFrame. Note non-numeric columns `x` removed.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowFrame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce an object into a flowFrame — as_flowFrame","text":"","code":"NULL #> NULL  NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce an object into a flowSet — as_flowSet","title":"Coerce an object into a flowSet — as_flowSet","text":"Coerce object flowSet Coerce tof_tbl flowSet","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce an object into a flowSet — as_flowSet","text":"","code":"as_flowSet(x, ...)  # S3 method for tof_tbl as_flowSet(x, group_cols, ...)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce an object into a flowSet — as_flowSet","text":"x tof_tbl. ... Unused. group_cols Unquoted names columns `x` used group cells separate flowFrames. Supports tidyselect helpers. Defaults NULL (cells written single flowFrame).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce an object into a flowSet — as_flowSet","text":"flowSet flowSet. Note non-numeric columns `x` removed.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowSet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce an object into a flowSet — as_flowSet","text":"","code":"NULL #> NULL  NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_seurat.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce an object into a SeuratObject — as_seurat","title":"Coerce an object into a SeuratObject — as_seurat","text":"Coerce object SeuratObject Coerce tof_tbl SeuratObject","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_seurat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce an object into a SeuratObject — as_seurat","text":"","code":"as_seurat(x, ...)  # S3 method for tof_tbl as_seurat(   x,   channel_cols = where(tof_is_numeric),   reduced_dimensions_cols,   metadata_cols = where(function(.x) !tof_is_numeric(.x)),   split_reduced_dimensions = FALSE,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_seurat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce an object into a SeuratObject — as_seurat","text":"x tof_tbl ... Unused. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. nothing specified, default numeric columns. reduced_dimensions_cols Unquoted column names representing columns contain dimensionality reduction embeddings, tSNE UMAP embeddings. Supports tidyselect helpers. metadata_cols Unquoted column names representing columns contain metadata samples cell collected. nothing specified, default non-numeric columns. split_reduced_dimensions boolean value indicating whether dimensionality results x split separate slots resulting SingleCellExperiment. FALSE (default), split performed reducedDims slot result single entry (\"tidytof_reduced_dimensions\"). TRUE, split performed reducedDims slot result 1-4 entries depending dimensionality reduction results present x (\"tidytof_pca\", \"tidytof_tsne\", \"tidytof_umap\", \"tidytof_reduced_dimensions\"). Note \"tidytof_reduced_dimensions\" include dimensionality reduction results named according tidytof's pca, umap, tsne conventions.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_seurat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce an object into a SeuratObject — as_seurat","text":"SeuratObject SeuratObject.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_seurat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce an object into a SeuratObject — as_seurat","text":"","code":"NULL #> NULL  NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.flowSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an object into a tof_tbl — as_tof_tbl.flowSet","title":"Convert an object into a tof_tbl — as_tof_tbl.flowSet","text":"Convert object tof_tbl","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.flowSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an object into a tof_tbl — as_tof_tbl.flowSet","text":"","code":"# S3 method for flowSet as_tof_tbl(flow_data, sep = \"|\")"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.flowSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an object into a tof_tbl — as_tof_tbl.flowSet","text":"flow_data FlowSet sep string use separate antigen name associated metal column names output tibble. Defaults \"|\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.flowSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert an object into a tof_tbl — as_tof_tbl.flowSet","text":"`tof_tbl`","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce flowFrames or flowSets into tof_tbl's. — as_tof_tbl","title":"Coerce flowFrames or flowSets into tof_tbl's. — as_tof_tbl","text":"Coerce flowFrames flowSets tof_tbl's.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce flowFrames or flowSets into tof_tbl's. — as_tof_tbl","text":"","code":"as_tof_tbl(flow_data, sep = \"|\")"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce flowFrames or flowSets into tof_tbl's. — as_tof_tbl","text":"flow_data flowFrame flowSet sep string indicating symbol used separate antigen names metal names columns output tof_tbl.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce flowFrames or flowSets into tof_tbl's. — as_tof_tbl","text":"tof_tbl.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce flowFrames or flowSets into tof_tbl's. — as_tof_tbl","text":"","code":"input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]]  input_flowframe <- flowCore::read.FCS(input_file)  tof_tibble <- as_tof_tbl(input_flowframe)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/cosine_similarity.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the cosine similarity between two vectors — cosine_similarity","title":"Find the cosine similarity between two vectors — cosine_similarity","text":"Find cosine similarity two vectors","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/cosine_similarity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the cosine similarity between two vectors — cosine_similarity","text":"","code":"cosine_similarity(x, y)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/cosine_similarity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the cosine similarity between two vectors — cosine_similarity","text":"x numeric vector y numeric vector","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/cosine_similarity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the cosine similarity between two vectors — cosine_similarity","text":"scalar value representing cosine similarity x y","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_data.html","id":null,"dir":"Reference","previous_headings":"","what":"CyTOF data from two samples: 5,000 B-cell lineage cells from a healthy\npatient and 5,000 B-cell lineage cells from a B-cell precursor Acute\nLymphoblastic Leukemia (BCP-ALL) patient. — ddpr_data","title":"CyTOF data from two samples: 5,000 B-cell lineage cells from a healthy\npatient and 5,000 B-cell lineage cells from a B-cell precursor Acute\nLymphoblastic Leukemia (BCP-ALL) patient. — ddpr_data","text":"dataset containing CyTOF measurements immune cells originally studied following paper:   Good Z, Sarno J, et al. Single-cell developmental classification B cell precursor acute lymphoblastic leukemia diagnosis reveals predictors relapse. Nat Med. 2018 May;24(4):474-483. doi: 10.1038/nm.4505. Epub 2018 Mar 5. PMID: 29505032; PMCID: PMC5953207.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CyTOF data from two samples: 5,000 B-cell lineage cells from a healthy\npatient and 5,000 B-cell lineage cells from a B-cell precursor Acute\nLymphoblastic Leukemia (BCP-ALL) patient. — ddpr_data","text":"","code":"data(ddpr_data)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"CyTOF data from two samples: 5,000 B-cell lineage cells from a healthy\npatient and 5,000 B-cell lineage cells from a B-cell precursor Acute\nLymphoblastic Leukemia (BCP-ALL) patient. — ddpr_data","text":"data frame 10000 rows 24 variables: sample_name name sample data read cd45 CyTOF measurement raw ion counts cd19 CyTOF measurement raw ion counts cd22 CyTOF measurement raw ion counts cd79b CyTOF measurement raw ion counts cd20 CyTOF measurement raw ion counts cd34 CyTOF measurement raw ion counts cd123 CyTOF measurement raw ion counts cd10 CyTOF measurement raw ion counts cd24 CyTOF measurement raw ion counts cd127 CyTOF measurement raw ion counts cd43 CyTOF measurement raw ion counts cd38 CyTOF measurement raw ion counts cd58 CyTOF measurement raw ion counts psyk CyTOF measurement raw ion counts p4ebp1 CyTOF measurement raw ion counts pstat5 CyTOF measurement raw ion counts pakt CyTOF measurement raw ion counts ps6 CyTOF measurement raw ion counts perk CyTOF measurement raw ion counts pcreb CyTOF measurement raw ion counts","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"CyTOF data from two samples: 5,000 B-cell lineage cells from a healthy\npatient and 5,000 B-cell lineage cells from a B-cell precursor Acute\nLymphoblastic Leukemia (BCP-ALL) patient. — ddpr_data","text":"https://github.com/kara-davis-lab/DDPR","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CyTOF data from two samples: 5,000 B-cell lineage cells from a healthy\npatient and 5,000 B-cell lineage cells from a B-cell precursor Acute\nLymphoblastic Leukemia (BCP-ALL) patient. — ddpr_data","text":"data.frame","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Clinical metadata for each patient sample in Good & Sarno et al. (2018). — ddpr_metadata","title":"Clinical metadata for each patient sample in Good & Sarno et al. (2018). — ddpr_metadata","text":"dataset containing patient-level clinical metadata samples originally studied following paper:  Good Z, Sarno J, et al. Single-cell developmental classification B cell precursor acute lymphoblastic leukemia diagnosis reveals predictors relapse. Nat Med. 2018 May;24(4):474-483. doi: 10.1038/nm.4505. Epub 2018 Mar 5. PMID: 29505032; PMCID: PMC5953207.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clinical metadata for each patient sample in Good & Sarno et al. (2018). — ddpr_metadata","text":"","code":"data(ddpr_metadata)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_metadata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Clinical metadata for each patient sample in Good & Sarno et al. (2018). — ddpr_metadata","text":"data frame 10000 rows 12 variables: patient_id Name sample data read gender Gender patient sample collected age_at_diagnosis Age (years) patient sample collected wbc_count diagnostic White Blood Cell (WBC) count patient sample collected mrd_risk Risk stratification category patient using minimal residual disease (MRD) criteria nci_rome_risk Risk stratification category patient using National Cancer Institute (NCI) criteria relapse_status string representing whether patient relapsed time_to_relapse time (days) took patient relapse. Patients relapse value NA type_of_relapse string representing timing relapse patient.   \"early\" relapses occurred less 18 months diagnosis;   \"Early\" relapses occurred 18 months 32 months diagnosis;   \"Late\" relapses occurred later 32 months diagnosis. ccr number documented days continuous complete remission (CCR) patients relapse. patients relapsed value NA. cohort string representing sample used \"Training\" \"Validation\" cohort original study ddpr_risk risk category (\"Low\" \"High\") assigned sample using original paper's risk-stratification algorithm","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_metadata.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Clinical metadata for each patient sample in Good & Sarno et al. (2018). — ddpr_metadata","text":"Good Z, Sarno J, et al. Single-cell developmental classification B cell precursor acute lymphoblastic leukemia diagnosis reveals predictors relapse. Nat Med. 2018 May;24(4):474-483. doi: 10.1038/nm.4505. Epub 2018 Mar 5. PMID: 29505032; PMCID: PMC5953207. Supplementary Table 1.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clinical metadata for each patient sample in Good & Sarno et al. (2018). — ddpr_metadata","text":"data.frame","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/dot.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the dot product between two vectors. — dot","title":"Find the dot product between two vectors. — dot","text":"Find dot product two vectors.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/dot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the dot product between two vectors. — dot","text":"","code":"dot(x, y)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/dot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the dot product between two vectors. — dot","text":"x numeric vector. y numeric vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/dot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the dot product between two vectors. — dot","text":"dot product x y.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/get_extension.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the extension for a file — get_extension","title":"Find the extension for a file — get_extension","text":"Find extension file","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/get_extension.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the extension for a file — get_extension","text":"","code":"get_extension(filename)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/get_extension.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the extension for a file — get_extension","text":"filename string representing name file local directory","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/get_extension.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the extension for a file — get_extension","text":"file extension `filename`","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/l2_normalize.html","id":null,"dir":"Reference","previous_headings":"","what":"L2 normalize an input vector x to a length of 1 — l2_normalize","title":"L2 normalize an input vector x to a length of 1 — l2_normalize","text":"L2 normalize input vector x length 1","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/l2_normalize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"L2 normalize an input vector x to a length of 1 — l2_normalize","text":"","code":"l2_normalize(x)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/l2_normalize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"L2 normalize an input vector x to a length of 1 — l2_normalize","text":"x numeric vector","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/l2_normalize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"L2 normalize an input vector x to a length of 1 — l2_normalize","text":"vector length length(x) magnitude 1","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/magnitude.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the magnitude of a vector. — magnitude","title":"Find the magnitude of a vector. — magnitude","text":"Find magnitude vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/magnitude.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the magnitude of a vector. — magnitude","text":"","code":"magnitude(x)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/magnitude.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the magnitude of a vector. — magnitude","text":"x numeric vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/magnitude.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the magnitude of a vector. — magnitude","text":"scalar value (magnitude x).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/make_flowcore_annotated_data_frame.html","id":null,"dir":"Reference","previous_headings":"","what":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","title":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","text":"Make AnnotatedDataFrame needed flowFrame class","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/make_flowcore_annotated_data_frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","text":"","code":"make_flowcore_annotated_data_frame(maxes_and_mins)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/make_flowcore_annotated_data_frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","text":"maxes_and_mins data.frame containing information max min values channel saved flowFrame.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/make_flowcore_annotated_data_frame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","text":"AnnotatedDataFrame.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/make_flowcore_annotated_data_frame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/metal_masterlist.html","id":null,"dir":"Reference","previous_headings":"","what":"A character vector of metal name patterns supported by tidytof. — metal_masterlist","title":"A character vector of metal name patterns supported by tidytof. — metal_masterlist","text":"character vector used `tof_read_fcs` `tof_read_data` detect parse CyTOF metals correspond channel input .fcs file.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/metal_masterlist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A character vector of metal name patterns supported by tidytof. — metal_masterlist","text":"","code":"data(metal_masterlist)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/metal_masterlist.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A character vector of metal name patterns supported by tidytof. — metal_masterlist","text":"character vector entry pattern tidytof searches every CyTOF channel input .fcs files. patterns amalgamate example .fcs files sampled studies linked .","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/metal_masterlist.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"A character vector of metal name patterns supported by tidytof. — metal_masterlist","text":"https://github.com/kara-davis-lab/DDPR https://cytobank.org/nolanlab/reports/Levine2015.html https://cytobank.org/nolanlab/reports/Spitzer2015.html https://cytobank.org/nolanlab/reports/Spitzer2017.html https://community.cytobank.org/cytobank/projects/609","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/metal_masterlist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A character vector of metal name patterns supported by tidytof. — metal_masterlist","text":"named character vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor for a tof_model. — new_tof_model","title":"Constructor for a tof_model. — new_tof_model","text":"Constructor tof_model.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor for a tof_model. — new_tof_model","text":"","code":"new_tof_model(   model,   recipe,   penalty,   mixture,   model_type = c(\"linear\", \"two-class\", \"multiclass\", \"survival\"),   outcome_colnames,   training_data )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor for a tof_model. — new_tof_model","text":"model glmnet model. recipe prepped recipe object. penalty double indicating lambda value used within glmnet path. mixture double indicating alpha value used fit glmnet model. model_type string indicating type glmnet model fit. outcome_colnames training_data ","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructor for a tof_model. — new_tof_model","text":"`tof_model`, S3 class includes trained glmnet model recipe used perform associated preprocessing.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor for a tof_tibble. — new_tof_tibble","title":"Constructor for a tof_tibble. — new_tof_tibble","text":"Constructor tof_tibble.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor for a tof_tibble. — new_tof_tibble","text":"","code":"new_tof_tibble(x = dplyr::tibble(), panel = dplyr::tibble())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor for a tof_tibble. — new_tof_tibble","text":"x data.frame tibble containing single-cell mass cytometry data rows cells columns CyTOF measurements. panel data.frame tibble containing information panel mass cytometry data x.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_tibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructor for a tof_tibble. — new_tof_tibble","text":"`tof_tbl`, tibble extension tracks attributes useful CyTOF data analysis.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/phenograph_data.html","id":null,"dir":"Reference","previous_headings":"","what":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","title":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","text":"dataset containing CyTOF measurements healthy control cells originally studied following paper:   Levine JH, Simonds EF, et al. Data-Driven Phenotypic Dissection AML Reveals Progenitor-like Cells Correlate Prognosis. Cell. 2015 Jul 2;162(1):184-97. doi: 10.1016/j.cell.2015.05.047. Epub 2015 Jun 18. PMID: 26095251; PMCID: PMC4508757.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/phenograph_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","text":"","code":"data(phenograph_data)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/phenograph_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","text":"data frame 6000 rows 26 variables: sample_name Name sample data read phenograph_cluster Numeric ID cluster assignment row cd19 CyTOF measurement raw ion counts cd11b CyTOF measurement raw ion counts cd34 CyTOF measurement raw ion counts cd45 CyTOF measurement raw ion counts cd123 CyTOF measurement raw ion counts cd33 CyTOF measurement raw ion counts cd47 CyTOF measurement raw ion counts cd7 CyTOF measurement raw ion counts cd44 CyTOF measurement raw ion counts cd38 CyTOF measurement raw ion counts cd3 CyTOF measurement raw ion counts cd117 CyTOF measurement raw ion counts cd64 CyTOF measurement raw ion counts cd41 CyTOF measurement raw ion counts pstat3 CyTOF measurement raw ion counts pstat5 CyTOF measurement raw ion counts pampk CyTOF measurement raw ion counts p4ebp1 CyTOF measurement raw ion counts ps6 CyTOF measurement raw ion counts pcreb CyTOF measurement raw ion counts pzap70-syk CyTOF measurement raw ion counts prb CyTOF measurement raw ion counts perk1-2 CyTOF measurement raw ion counts","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/phenograph_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","text":"https://cytobank.org/nolanlab/reports/Levine2015.html","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/phenograph_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","text":"data.frame","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/phenograph_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","text":"2000 cells 3 clusters identified original paper sampled.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. dplyr %>% rlang :=, .data tidyselect all_of, any_of, contains, ends_with, everything, last_col, matches, num_range, starts_with","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/rev_asinh.html","id":null,"dir":"Reference","previous_headings":"","what":"Reverses arcsinh transformation with cofactor `scale_factor` and a\nshift of `shift_factor`. — rev_asinh","title":"Reverses arcsinh transformation with cofactor `scale_factor` and a\nshift of `shift_factor`. — rev_asinh","text":"Reverses arcsinh transformation cofactor `scale_factor` shift `shift_factor`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/rev_asinh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reverses arcsinh transformation with cofactor `scale_factor` and a\nshift of `shift_factor`. — rev_asinh","text":"","code":"rev_asinh(x, shift_factor, scale_factor)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/rev_asinh.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reverses arcsinh transformation with cofactor `scale_factor` and a\nshift of `shift_factor`. — rev_asinh","text":"x numeric vector. shift_factor scalar value `` following equation used transform high-dimensional cytometry raw data ion counts using hyperbolic arcsinh function:    `new_x <- asinh(+ b * x)`. scale_factor scalar value `b` following equation used transform high-dimensional cytometry raw data ion counts using hyperbolic arcsinh function:    `new_x <- asinh(+ b * x)`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/rev_asinh.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reverses arcsinh transformation with cofactor `scale_factor` and a\nshift of `shift_factor`. — rev_asinh","text":"numeric vector undergoing reverse arcsinh transformation","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/rev_asinh.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reverses arcsinh transformation with cofactor `scale_factor` and a\nshift of `shift_factor`. — rev_asinh","text":"","code":"shift_factor <- 0 scale_factor <- 1 / 5  input_value <- 20 asinh_value <- asinh(shift_factor + input_value * scale_factor)  restored_value <- rev_asinh(asinh_value, shift_factor, scale_factor)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tidytof_example_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get paths to tidytof example data — tidytof_example_data","title":"Get paths to tidytof example data — tidytof_example_data","text":"tidytof comes bundled number sample .fcs files inst/extdata directory. function makes easy access.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tidytof_example_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get paths to tidytof example data — tidytof_example_data","text":"","code":"tidytof_example_data(dataset_name = NULL)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tidytof_example_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get paths to tidytof example data — tidytof_example_data","text":"dataset_name Name dataset want access. NULL, names datasets (different study) listed.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tidytof_example_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get paths to tidytof example data — tidytof_example_data","text":"character vector file paths requested .fcs files located. `dataset_name` NULL, character vector dataset names (can used values `dataset_name`) returned instead.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tidytof_example_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get paths to tidytof example data — tidytof_example_data","text":"","code":"tidytof_example_data() #> [1] \"aml\"               \"ddpr\"              \"ddpr_metadata.csv\" #> [4] \"mix\"               \"mix2\"              \"phenograph\"        #> [7] \"phenograph_csv\"    \"surgery\"           tidytof_example_data(dataset_name = \"phenograph\") #> [1] \"/home/runner/work/_temp/Library/tidytof/extdata/phenograph\""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Differential Abundance Analysis (DAA) on high-dimensional cytometry data — tof_analyze_abundance","title":"Perform Differential Abundance Analysis (DAA) on high-dimensional cytometry data — tof_analyze_abundance","text":"function performs differential abundance analysis cell clusters contained within `tof_tbl` using one three methods (\"diffcyt\", \"glmm\", \"ttest\"). wraps members `tof_analyze_abundance_*` function family: tof_analyze_abundance_diffcyt, tof_analyze_abundance_glmm, tof_analyze_abundance_ttest.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Differential Abundance Analysis (DAA) on high-dimensional cytometry data — tof_analyze_abundance","text":"","code":"tof_analyze_abundance(tof_tibble, method = c(\"diffcyt\", \"glmm\", \"ttest\"), ...)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Differential Abundance Analysis (DAA) on high-dimensional cytometry data — tof_analyze_abundance","text":"tof_tibble `tof_tbl` `tibble`. method string indicating statistical method used. Valid values include \"diffcyt\", \"glmm\", \"ttest\". ... Additional arguments pass onto `tof_analyze_abundance_*` function family member corresponding chosen method.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform Differential Abundance Analysis (DAA) on high-dimensional cytometry data — tof_analyze_abundance","text":"tibble nested tibble containing differential abundance results chosen method. See tof_analyze_abundance_diffcyt, tof_analyze_abundance_glmm, tof_analyze_abundance_ttest details.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform Differential Abundance Analysis (DAA) on high-dimensional cytometry data — tof_analyze_abundance","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_diffcyt.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","title":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","text":"function performs differential abundance analysis cell clusters contained within `tof_tbl` using one three methods implemented diffcyt package differential discovery analysis high-dimensional cytometry data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_diffcyt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","text":"","code":"tof_analyze_abundance_diffcyt(   tof_tibble,   sample_col,   cluster_col,   fixed_effect_cols,   random_effect_cols,   diffcyt_method = c(\"glmm\", \"edgeR\", \"voom\"),   include_observation_level_random_effects = FALSE,   min_cells = 3,   min_samples = 5,   alpha = 0.05,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_diffcyt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","text":"tof_tibble `tof_tbl` `tibble`. sample_col unquoted column name indicating column `tof_tibble` represents id sample cell collected. `sample_col` serve unique identifier sample collected data acquisition - cells value `sample_col` treated part observational unit. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. fixed_effect_cols Unquoted column names representing columns `tof_tibble` used model fixed effects differential abundance analysis. Generally speaking, fixed effects represent comparisons biological interest (often variables manipulated experiments), treated vs. non-treated, -treatment vs. -treatment, healthy vs. non-healthy. random_effect_cols Optional. Unquoted column names representing columns `tof_tibble` used model random effects differential abundance analysis. Generally speaking, random effects represent variables researcher wants control/account , necessarily biological interest. Example random effect variables might include batch id, patient id (paired design), patient age. Note without multiple samples level random effect variables, can easy overfit mixed models. high-dimensional cytometry experiments, 2 fewer (often 0) random effect variables appropriate. diffcyt_method string indicating diffcyt method used differential abundance analysis. Valid methods include \"glmm\" (default), \"edgeR\", \"voom\". include_observation_level_random_effects boolean value indicating \"observation-level random effects\" (OLREs) included random effect terms \"glmm\" differential abundance model. details OLREs , see diffcyt paper. \"glmm\" method can model observation-level random effects, values ignore argument (throw warning set TRUE). Defaults FALSE. min_cells integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 3. min_samples integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 5. alpha numeric value 0 1 indicating significance level applied multiple-comparison adjusted p-values differential abundance analysis. Defaults 0.05. ... Optional additional arguments pass --hood diffcyt function used perform differential abundance analysis. See testDA_GLMM, testDA_edgeR, testDA_voom details.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_diffcyt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","text":"nested tibble two columns: `tested_effect` `daa_results`. first column, `tested_effect` character vector indicating term differential abundance model used significance testing. values row obtained pasting together column names fixed effect variable values. example, fixed effect column named `fixed_effect` levels \"\", \"b\", \"c\" two terms `tested_effect`: \"fixed_effectb\" \"fixed_effectc\" (note level \"\" fixed_effect set reference level dummy coding). values correspond terms differential abundance model represent difference cluster abundances samples fixed_effect = \"b\" fixed_effect = \"\" samples fixed_effect = \"c\" fixed_effect = \"\", respectively. addition, first row `tested_effect` always represent \"omnibus\" test, test significant differences levels fixed effect variable model. second column, `daa_results` list tibbles entry gives differential abundance results tested_effect. Within entry `daa_results`, find several columns including following: * `p_val`, p-value associated tested effect input cluster * `p_adj`, multiple-comparison adjusted p-value (using p.adjust function) * values associated underlying method used perform differential abundance analysis (log-fold change cluster abundance levels compared). details, see glmFit, voom, topTable, testDA_GLMM.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_diffcyt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","text":"three methods based generalized linear mixed models (\"glmm\"), edgeR (\"edgeR\"), voom (\"voom\"). \"glmm\" \"voom\" methods can model fixed effects random effects, \"edgeR\" method can model fixed effects.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_diffcyt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_glmm.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Abundance Analysis (DAA) with generalized linear mixed-models (GLMMs) — tof_analyze_abundance_glmm","title":"Differential Abundance Analysis (DAA) with generalized linear mixed-models (GLMMs) — tof_analyze_abundance_glmm","text":"function performs differential abundance analysis cell clusters contained within `tof_tbl` using generalized linear mixed-models. Users specify columns represent sample, cluster, fixed effect, random effect information, (mixed) binomial regression model fit using either glmer glm.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_glmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Abundance Analysis (DAA) with generalized linear mixed-models (GLMMs) — tof_analyze_abundance_glmm","text":"","code":"tof_analyze_abundance_glmm(   tof_tibble,   sample_col,   cluster_col,   fixed_effect_cols,   random_effect_cols,   min_cells = 3,   min_samples = 5,   alpha = 0.05 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_glmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Abundance Analysis (DAA) with generalized linear mixed-models (GLMMs) — tof_analyze_abundance_glmm","text":"tof_tibble `tof_tbl` `tibble`. sample_col unquoted column name indicating column `tof_tibble` represents id sample cell collected. `sample_col` serve unique identifier sample collected data acquisition - cells value `sample_col` treated part observational unit. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. fixed_effect_cols Unquoted column names representing columns `tof_tibble` used model fixed effects differential abundance analysis. Supports tidyselect helpers. Generally speaking, fixed effects represent comparisons biological interest (often variables manipulated experiments), treated vs. non-treated, -treatment vs. -treatment, healthy vs. non-healthy. random_effect_cols Unquoted column names representing columns `tof_tibble` used model random effects differential abundance analysis. Supports tidyselection. Generally speaking, random effects represent variables researcher wants control/account , necessarily biological interest. Example random effect variables might include batch id, patient id (paired design), patient age. Note without many samples level random effect variables, can easy overfit mixed models. high-dimensional cytometry experiments, 2 fewer (often 0) random effect variables appropriate. min_cells integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 3. min_samples integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 5. alpha numeric value 0 1 indicating significance level applied multiple-comparison adjusted p-values differential abundance analysis. Defaults 0.05.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_glmm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Abundance Analysis (DAA) with generalized linear mixed-models (GLMMs) — tof_analyze_abundance_glmm","text":"nested tibble two columns: `tested_effect` `daa_results`. first column, `tested_effect`, character vector indicating term differential abundance model used significance testing. values row obtained pasting together column names fixed effect variable values. example, fixed effect column named fixed_effect levels \"\", \"b\", \"c\" two terms `tested_effect`: \"fixed_effectb\" \"fixed_effectc\" (note level \"\" fixed_effect set reference level dummy coding). values correspond terms differential abundance model represent difference cluster abundances samples fixed_effect = \"b\" fixed_effect = \"\" samples fixed_effect = \"c\" fixed_effect = \"\", respectively. addition, note first row `tested_effect` always represent \"omnibus\" test, test significant differences levels fixed effect variable model. second column, `daa_results`, list tibbles entry gives differential abundance results tested_effect. Within entry `daa_results`, find `p_value`, p-value associated tested effect input cluster; `p_adj`, multiple-comparison adjusted p-value (using p.adjust function), values associated underlying method used perform differential abundance analysis (log-fold change cluster abundance levels compared).","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_glmm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Abundance Analysis (DAA) with generalized linear mixed-models (GLMMs) — tof_analyze_abundance_glmm","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_ttest.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Abundance Analysis (DAA) with t-tests — tof_analyze_abundance_ttest","title":"Differential Abundance Analysis (DAA) with t-tests — tof_analyze_abundance_ttest","text":"function performs differential abundance analysis cell clusters contained within `tof_tbl` using simple t-tests. Users specify columns represent sample, cluster, effect information, either paired unpaired t-test (one per cluster) used detect significant differences sample types.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_ttest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Abundance Analysis (DAA) with t-tests — tof_analyze_abundance_ttest","text":"","code":"tof_analyze_abundance_ttest(   tof_tibble,   cluster_col,   effect_col,   group_cols,   test_type = c(\"unpaired\", \"paired\"),   min_cells = 3,   min_samples = 5,   alpha = 0.05,   quiet = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_ttest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Abundance Analysis (DAA) with t-tests — tof_analyze_abundance_ttest","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. effect_col Unquoted column name representing column `tof_tibble` used break samples groups t-test. 2 unique values. group_cols Unquoted names columns `effect_col` used group cells independent observations. Fills similar role `sample_col` `tof_analyze_abundance_*` functions. example, experiment involves analyzing samples taken multiple patients two timepoints (`effect_col = timepoint`), group_cols name column representing patient IDs. test_type string indicating whether t-test \"unpaired\" (default) \"paired\". min_cells integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 3. min_samples integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 5. alpha numeric value 0 1 indicating significance level applied multiple-comparison adjusted p-values differential abundance analysis. Defaults 0.05. quiet boolean value indicating whether warnings printed. Defaults `TRUE`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_ttest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Abundance Analysis (DAA) with t-tests — tof_analyze_abundance_ttest","text":"tibble 7 columns: {cluster_col} name/ID cluster tested.   entry column match unique value input   {cluster_col}. t t-statistic computed cluster. df degrees freedom used t-test cluster. p_val (unadjusted) p-value t-test cluster. p_adj p.adjust-adjusted p-value t-test cluster. significant character vector \"*\" clusters    p_adj < alpha \"\" otherwise. mean_diff unpaired t-test, difference average   proportions cluster two levels `effect_col`. paired   t-test, average difference proportions cluster   two levels `effect_col` within given patient. mean_fc unpaired t-test, ratio average   proportions cluster two levels `effect_col`. paired   t-test, average ratio proportions cluster   two levels `effect_col` within given patient. 0.001 added   denominator ratio avoid divide--zero errors. \"levels\" attribute result indicates order different levels `effect_col` considered. `mean_diff` value row output computed subtracting second level first level, `mean_fc` value row computed dividing first level second level.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_ttest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Abundance Analysis (DAA) with t-tests — tof_analyze_abundance_ttest","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Differential Expression Analysis (DEA) on high-dimensional cytometry data — tof_analyze_expression","title":"Perform Differential Expression Analysis (DEA) on high-dimensional cytometry data — tof_analyze_expression","text":"function performs differential expression analysis cell clusters contained within `tof_tbl` using one three methods (\"diffcyt\", \"glmm\", \"ttest\"). wraps members `tof_analyze_expression_*` function family: tof_analyze_expression_diffcyt, tof_analyze_expression_lmm, tof_analyze_expression_ttest.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Differential Expression Analysis (DEA) on high-dimensional cytometry data — tof_analyze_expression","text":"","code":"tof_analyze_expression(tof_tibble, method = c(\"diffcyt\", \"glmm\", \"ttest\"), ...)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Differential Expression Analysis (DEA) on high-dimensional cytometry data — tof_analyze_expression","text":"tof_tibble `tof_tbl` `tibble`. method string indicating statistical method used. Valid values include \"diffcyt\", \"lmm\", \"ttest\". ... Additional arguments pass onto `tof_analyze_expression_*` function family member corresponding chosen method.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform Differential Expression Analysis (DEA) on high-dimensional cytometry data — tof_analyze_expression","text":"tibble nested tibble containing differential abundance results chosen method. See tof_analyze_expression_diffcyt, tof_analyze_expression_lmm, tof_analyze_expression_ttest details.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform Differential Expression Analysis (DEA) on high-dimensional cytometry data — tof_analyze_expression","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_diffcyt.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","title":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","text":"function performs differential expression analysis cell clusters contained within `tof_tbl` using one two methods implemented diffcyt package differential discovery analysis high-dimensional cytometry data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_diffcyt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","text":"","code":"tof_analyze_expression_diffcyt(   tof_tibble,   sample_col,   cluster_col,   marker_cols = where(tof_is_numeric),   fixed_effect_cols,   random_effect_cols,   diffcyt_method = c(\"lmm\", \"limma\"),   include_observation_level_random_effects = FALSE,   min_cells = 3,   min_samples = 5,   alpha = 0.05,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_diffcyt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","text":"tof_tibble `tof_tbl` `tibble`. sample_col unquoted column name indicating column `tof_tibble` represents id sample cell collected. `sample_col` serve unique identifier sample collected data acquisition - cells value `sample_col` treated part observational unit. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names representing columns `tof_tibble` (.e. high-dimensional cytometry protein measurements) tested differential expression levels `fixed_effect_cols`. Defaults numeric (integer double) columns. Supports tidyselect helpers. fixed_effect_cols Unquoted column names representing columns `tof_tibble` used model fixed effects differential expression analysis. Generally speaking, fixed effects represent comparisons biological interest (often variables manipulated experiments), treated vs. non-treated, -treatment vs. -treatment, healthy vs. non-healthy. random_effect_cols Unquoted column names representing columns `tof_tibble` used model random effects differential expression analysis. Generally speaking, random effects represent variables researcher wants control/account , necessarily biological interest. Example random effect variables might include batch id, patient id (paired design), patient age. Note without many samples level random effect variables, can easy overfit mixed models. high-dimensional cytometry experiments, 2 fewer (often 0) random effect variables appropriate. diffcyt_method string indicating diffcyt method used differential expression analysis. Valid methods include \"lmm\" (default) \"limma\". include_observation_level_random_effects boolean value indicating \"observation-level random effects\" (OLREs) included random effect terms \"lmm\" differential expression model. details OLREs , see diffcyt paper. Defaults FALSE. min_cells integer value used filter clusters differential expression analysis. Clusters included differential expression testing least `min_cells` least `min_samples` samples. Defaults 3. min_samples integer value used filter clusters differential expression analysis. Clusters included differential expression testing least `min_cells` least `min_samples` samples. Defaults 5. alpha numeric value 0 1 indicating significance level applied multiple-comparison adjusted p-values differential abundance analysis. Defaults 0.05. ... Optional additional arguments pass --hood diffcyt function used perform differential expression analysis. See testDS_LMM testDS_limma details.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_diffcyt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","text":"nested tibble two columns: `tested_effect` `dea_results`. first column, `tested_effect` character vector indicating term differential expression model used significance testing. values row obtained pasting together column names fixed effect variable values. example, fixed effect column named fixed_effect levels \"\", \"b\", \"c\" two terms `tested_effect`: \"fixed_effectb\" \"fixed_effectc\" (note level \"\" fixed_effect set reference level dummy coding). values correspond terms differential expression model represent difference cluster median expression values marker samples fixed_effect = \"b\" fixed_effect = \"\" samples fixed_effect = \"c\" fixed_effect = \"\", respectively. addition, note first row `tested_effect` always represent \"omnibus\" test, test significant differences levels fixed effect variable model. second column, `dea_results` list tibbles entry gives differential expression results tested_effect. Within entry `dea_results`, find `p_val`, p-value associated tested effect input cluster/marker pair; `p_adj`, multiple-comparison adjusted p-value (using p.adjust function), values associated underlying method used perform differential expression analysis (log-fold change clusters' median marker expression values conditions compared). tibble `dea_results` also two columns representing cluster marker corresponding p-value row.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_diffcyt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","text":"two methods based linear mixed models (\"lmm\") limma (\"limma\"). \"lmm\" \"limma\" methods can model fixed effects random effects.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_diffcyt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_lmm.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","title":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","text":"function performs differential expression analysis cell clusters contained within `tof_tbl` using linear mixed-models. Users specify columns represent sample, cluster, marker, fixed effect, random effect information, (mixed) linear regression model fit using either lmer glm.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_lmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","text":"","code":"tof_analyze_expression_lmm(   tof_tibble,   sample_col,   cluster_col,   marker_cols = where(tof_is_numeric),   fixed_effect_cols,   random_effect_cols,   central_tendency_function = median,   min_cells = 3,   min_samples = 5,   alpha = 0.05 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_lmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","text":"tof_tibble `tof_tbl` `tibble`. sample_col unquoted column name indicating column `tof_tibble` represents id sample cell collected. `sample_col` serve unique identifier sample collected data acquisition - cells value `sample_col` treated part observational unit. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names representing columns `tof_tibble` (.e. high-dimensional cytometry protein measurements) included differential discovery analysis. Defaults numeric (integer double) columns. Supports tidyselection. fixed_effect_cols Unquoted column names representing columns `tof_tibble` used model fixed effects differential expression analysis. Supports tidyselection. Generally speaking, fixed effects represent comparisons biological interest (often variables manipulated experiments), treated vs. non-treated, -treatment vs. -treatment, healthy vs. non-healthy. random_effect_cols Optional. Unquoted column names representing columns `tof_tibble` used model random effects differential expression analysis. Supports tidyselection. Generally speaking, random effects represent variables researcher wants control/account , necessarily biological interest. Example random effect variables might include batch id, patient id (paired design), patient age. analyses include random effects. central_tendency_function function used calculate measurement central tendency cluster/marker pair (used dependent variable linear model). Defaults median. min_cells integer value used filter clusters differential expression analysis. Clusters included differential expression testing least `min_cells` least `min_samples` samples. Defaults 3. min_samples integer value used filter clusters differential expression analysis. Clusters included differential expression testing least `min_cells` least `min_samples` samples. Defaults 5. alpha numeric value 0 1 indicating significance level applied multiple-comparison adjusted p-values differential abundance analysis. Defaults 0.05.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_lmm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","text":"nested tibble two columns: `tested_effect` `dea_results`. first column, `tested_effect` character vector indicating term differential expression model used significance testing. values row obtained pasting together column names fixed effect variable values. example, fixed effect column named fixed_effect levels \"\", \"b\", \"c\" two terms `tested_effect`: \"fixed_effectb\" \"fixed_effectc\" (note level \"\" fixed_effect set reference level dummy coding). values correspond terms differential expression model represent difference cluster median expression values marker samples fixed_effect = \"b\" fixed_effect = \"\" samples fixed_effect = \"c\" fixed_effect = \"\", respectively. addition, note first row `tested_effect` always represent \"omnibus\" test, test significant differences levels fixed effect variable model. second column, `dea_results` list tibbles entry gives differential expression results tested_effect. Within entry `daa_results`, find `p_val`, p-value associated tested effect input cluster/marker pair; `p_adj`, multiple-comparison adjusted p-value (using p.adjust function), values associated underlying method used perform differential expression analysis (log-fold change clusters' median marker expression values levels compared).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_lmm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","text":"Specifically, one linear model fit cluster/marker pair. cluster/marker pair, user-supplied measurement central tendency (`central_tendency_function`), mean median, calculated across cells cluster sample--sample basis. , central tendency value used dependent variable linear model `fixed_effect_cols` fixed effects predictors `random_effect_cols` random effects predictors. models (one per cluster/marker pair) fit, p-values coefficient model multiple-comparisons adjusted using p.adjust function.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_lmm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_ttest.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Expression Analysis (DEA) with t-tests — tof_analyze_expression_ttest","title":"Differential Expression Analysis (DEA) with t-tests — tof_analyze_expression_ttest","text":"function performs differential expression analysis cell clusters contained within `tof_tbl` using simple t-tests. Specifically, either unpaired paired t-test compare samples' marker expression distributions (two conditions) within cluster using user-specified summary function (.e. mean median). One t-test conducted per cluster/marker pair significant differences sample types detected multiple-hypothesis correction.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_ttest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Expression Analysis (DEA) with t-tests — tof_analyze_expression_ttest","text":"","code":"tof_analyze_expression_ttest(   tof_tibble,   cluster_col,   marker_cols = where(tof_is_numeric),   effect_col,   group_cols,   test_type = c(\"unpaired\", \"paired\"),   summary_function = mean,   min_cells = 3,   min_samples = 5,   alpha = 0.05,   quiet = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_ttest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Expression Analysis (DEA) with t-tests — tof_analyze_expression_ttest","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names representing columns `tof_tibble` (.e. high-dimensional cytometry protein measurements) tested differential expression levels `effect_col`. Defaults numeric (integer double) columns. Supports tidyselect helpers. effect_col Unquoted column name representing column `tof_tibble` used break samples groups t-test. 2 unique values. group_cols Unquoted names columns `effect_col` used group cells independent observations. Fills similar role `sample_col` `tof_analyze_abundance_*` functions. example, experiment involves analyzing samples taken multiple patients two timepoints (`effect_col = timepoint`), group_cols name column representing patient IDs. test_type string indicating whether t-test \"unpaired\" (default) \"paired\". summary_function vector-valued function used summarize distribution marker cluster (within sample, grouped `group_cols`). Defaults `mean`. min_cells integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 3. min_samples integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 5. alpha numeric value 0 1 indicating significance level applied multiple-comparison adjusted p-values differential abundance analysis. Defaults 0.05. quiet boolean value indicating whether warnings printed. Defaults `TRUE`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_ttest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Expression Analysis (DEA) with t-tests — tof_analyze_expression_ttest","text":"tibble 7 columns: {cluster_col} name/ID cluster cluster/marker pair   tested. entry column match unique value input   {cluster_col}. marker name marker cluster/marker pair tested. t t-statistic computed cluster. df degrees freedom used t-test cluster. p_val (unadjusted) p-value t-test cluster. p_adj p.adjust-adjusted p-value t-test cluster. significant character vector \"*\" clusters    p_adj < alpha \"\" otherwise. mean_diff unpaired t-test, difference average   proportions cluster two levels `effect_col`. paired   t-test, average difference proportions cluster   two levels `effect_col` within given patient. mean_fc unpaired t-test, ratio average   proportions cluster two levels `effect_col`. paired   t-test, average ratio proportions cluster   two levels `effect_col` within given patient. 0.001 added   denominator ratio avoid divide--zero errors. \"levels\" attribute result indicates order different levels `effect_col` considered. `mean_diff` value row output computed subtracting second level first level, `mean_fc` value row computed dividing first level second level.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_ttest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Expression Analysis (DEA) with t-tests — tof_analyze_expression_ttest","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_annotate_clusters.html","id":null,"dir":"Reference","previous_headings":"","what":"Manually annotate tidytof-computed clusters using user-specified labels — tof_annotate_clusters","title":"Manually annotate tidytof-computed clusters using user-specified labels — tof_annotate_clusters","text":"function adds additional column `tibble` `tof_tbl` allow users incorporate manual cell type labels clusters identified using unsupervised algorithms.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_annotate_clusters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Manually annotate tidytof-computed clusters using user-specified labels — tof_annotate_clusters","text":"","code":"tof_annotate_clusters(tof_tibble, cluster_col, annotations)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_annotate_clusters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Manually annotate tidytof-computed clusters using user-specified labels — tof_annotate_clusters","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` contains ids unsupervised cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. annotations data structure indicating annotate cluster id `cluster_col`. `annotations` can provided data.frame two columns (first name `cluster_col` contain unique cluster id; second can name contain character vector indicating manual annotation matched cluster id first column). `annotations` can also provided named character vector; case, entry `annotations` unique cluster id, names entry corresponding manual cluster annotation. See examples.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_annotate_clusters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Manually annotate tidytof-computed clusters using user-specified labels — tof_annotate_clusters","text":"`tof_tbl` number rows `tof_tibble` one additional column containing manual cluster annotations cell (character vector). `annotations` provided data.frame, new column name column containing cluster annotations `annotations`. `annotations` provided named character vector, new column named `cluster_col_annotation`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_annotate_clusters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Manually annotate tidytof-computed clusters using user-specified labels — tof_annotate_clusters","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = c(rnorm(n = 500), rnorm(n = 500, mean = 2)),         cd34 = c(rnorm(n = 500), rnorm(n = 500, mean = 4)),         cd19 = rnorm(n = 1000),         cluster_id = c(rep(\"a\", 500), rep(\"b\", 500))     )  # using named character vector sim_data |>     tof_annotate_clusters(         cluster_col = cluster_id,         annotations = c(\"macrophage\" = \"a\", \"dendritic cell\" = \"b\")     ) #> # A tibble: 1,000 × 6 #>        cd45   cd38   cd34   cd19 cluster_id cluster_id_annotation #>       <dbl>  <dbl>  <dbl>  <dbl> <chr>      <chr>                 #>  1 -1.40    -0.337 -0.166  1.12  a          macrophage            #>  2  0.255   -0.216  0.120  0.400 a          macrophage            #>  3 -2.44     0.621 -0.662 -0.985 a          macrophage            #>  4 -0.00557 -1.28  -0.531 -0.503 a          macrophage            #>  5  0.622   -1.30  -0.301  0.987 a          macrophage            #>  6  1.15    -0.377 -0.602  2.19  a          macrophage            #>  7 -1.82     0.104 -0.318 -0.165 a          macrophage            #>  8 -0.247   -0.704  0.308 -0.686 a          macrophage            #>  9 -0.244    1.50   0.799  0.941 a          macrophage            #> 10 -0.283   -0.303  1.75  -0.164 a          macrophage            #> # ℹ 990 more rows  # using two-column data.frame annotation_data_frame <-     data.frame(         cluster_id = c(\"a\", \"b\"),         cluster_annotation = c(\"macrophage\", \"dendritic cell\")     )  sim_data |>     tof_annotate_clusters(         cluster_col = cluster_id,         annotations = annotation_data_frame     ) #> # A tibble: 1,000 × 6 #>        cd45   cd38   cd34   cd19 cluster_id cluster_annotation #>       <dbl>  <dbl>  <dbl>  <dbl> <chr>      <chr>              #>  1 -1.40    -0.337 -0.166  1.12  a          macrophage         #>  2  0.255   -0.216  0.120  0.400 a          macrophage         #>  3 -2.44     0.621 -0.662 -0.985 a          macrophage         #>  4 -0.00557 -1.28  -0.531 -0.503 a          macrophage         #>  5  0.622   -1.30  -0.301  0.987 a          macrophage         #>  6  1.15    -0.377 -0.602  2.19  a          macrophage         #>  7 -1.82     0.104 -0.318 -0.165 a          macrophage         #>  8 -0.247   -0.704  0.308 -0.686 a          macrophage         #>  9 -0.244    1.50   0.799  0.941 a          macrophage         #> 10 -0.283   -0.303  1.75  -0.164 a          macrophage         #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_apply_classifier.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform developmental clustering on CyTOF data using a pre-fit classifier — tof_apply_classifier","title":"Perform developmental clustering on CyTOF data using a pre-fit classifier — tof_apply_classifier","text":"Perform developmental clustering CyTOF data using pre-fit classifier","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_apply_classifier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform developmental clustering on CyTOF data using a pre-fit classifier — tof_apply_classifier","text":"","code":"tof_apply_classifier(   cancer_tibble = NULL,   classifier_fit = NULL,   distance_function = c(\"mahalanobis\", \"cosine\", \"pearson\"),   num_cores = 1,   parallel_vars )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_apply_classifier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform developmental clustering on CyTOF data using a pre-fit classifier — tof_apply_classifier","text":"cancer_tibble `tibble` `tof_tibble` containing cells classified nearest healthy subpopulation (generally cancer cells). classifier_fit nested `tibble` produced `tof_build_classifier` row represents healthy cell subpopulation cells `cancer_tibble` classified using minimum distance. distance_function string indicating distance function used perform classification. Options \"mahalanobis\" (default), \"cosine\", \"pearson\". num_cores integer indicating number CPU cores used parallelize classification. Defaults 1 (single core). parallel_vars Unquoted column names indicating columns `cancer_tibble` use breaking data order parallelize classification. Defaults NULL. Supports tidyselect helpers.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_apply_classifier.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform developmental clustering on CyTOF data using a pre-fit classifier — tof_apply_classifier","text":"tibble `nrow(cancer_tibble)` rows `nrow(classifier_fit) + 1` columns. row represents cell `cancer_tibble`, `nrow(classifier_fit)` columns represent distance cell healthy subpopulations' cluster centroids. final column represents cluster id healthy subpopulation minimum distance cell represented row.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_apply_classifier.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform developmental clustering on CyTOF data using a pre-fit classifier — tof_apply_classifier","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_channels.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect low-expression (i.e. potentially failed) channels in high-dimensional cytometry data — tof_assess_channels","title":"Detect low-expression (i.e. potentially failed) channels in high-dimensional cytometry data — tof_assess_channels","text":"Detect low-expression (.e. potentially failed) channels high-dimensional cytometry data","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_channels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect low-expression (i.e. potentially failed) channels in high-dimensional cytometry data — tof_assess_channels","text":"","code":"tof_assess_channels(   tof_tibble,   channel_cols = where(tof_is_numeric),   negative_threshold = asinh(10/5),   negative_proportion_flag = 0.95 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_channels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect low-expression (i.e. potentially failed) channels in high-dimensional cytometry data — tof_assess_channels","text":"tof_tibble `tof_tbl` `tibble`. channel_cols vector unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. nothing specified, default analyze numeric columns. negative_threshold scalar indicating threshold measurement considered negative. Defaults hyperbolic arcsine transformation 10 counts. negative_proportion_flag scalar 0 1 indicating proportion cells tof_tibble need `negative_threshold` given marker order marker flagged. Defaults 0.95.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_channels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect low-expression (i.e. potentially failed) channels in high-dimensional cytometry data — tof_assess_channels","text":"tibble 3 columns number rows equal number columns `tof_tibble` chosen `channel_cols`. three columns \"channel\", character vector channel names, \"negative_proportion\", numeric vector values 0 1 indicating many cells `tof_tibble` `negative_threshold` channel, `flagged_channel`, boolean vector indicating whether channel flagged potentially failed (TRUE means channel large number cells `negative_threshold`).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_channels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect low-expression (i.e. potentially failed) channels in high-dimensional cytometry data — tof_assess_channels","text":"","code":"# simulate some data sim_data <-     data.frame(         cd4 = rnorm(n = 100, mean = 5, sd = 0.5),         cd8 = rnorm(n = 100, mean = 0, sd = 0.1),         cd33 = rnorm(n = 100, mean = 10, sd = 0.1)     )  tof_assess_channels(tof_tibble = sim_data) #> # A tibble: 3 × 3 #>   channel negative_proportion flagged_channel #>   <chr>                 <dbl> <lgl>           #> 1 cd8                       1 TRUE            #> 2 cd4                       0 FALSE           #> 3 cd33                      0 FALSE            tof_assess_channels(tof_tibble = sim_data, channel_cols = c(cd4, cd8)) #> # A tibble: 2 × 3 #>   channel negative_proportion flagged_channel #>   <chr>                 <dbl> <lgl>           #> 1 cd8                       1 TRUE            #> 2 cd4                       0 FALSE            tof_assess_channels(tof_tibble = sim_data, negative_threshold = 2) #> # A tibble: 3 × 3 #>   channel negative_proportion flagged_channel #>   <chr>                 <dbl> <lgl>           #> 1 cd8                       1 TRUE            #> 2 cd4                       0 FALSE           #> 3 cd33                      0 FALSE"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_distance.html","id":null,"dir":"Reference","previous_headings":"","what":"Assess a clustering result by calculating the z-score of each cell's\nmahalanobis distance to its cluster centroid and flagging outliers. — tof_assess_clusters_distance","title":"Assess a clustering result by calculating the z-score of each cell's\nmahalanobis distance to its cluster centroid and flagging outliers. — tof_assess_clusters_distance","text":"function evaluates result clustering procedure comparing mahalanobis distance cell centroid cluster assigned among cells given cluster. cells mahalanobis-distance z-score user-specified threshold flagged potentially anomalous. Note z-score calculated using modified formula minimize effect outliers (Z = x - median(x) / mad(x)).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assess a clustering result by calculating the z-score of each cell's\nmahalanobis distance to its cluster centroid and flagging outliers. — tof_assess_clusters_distance","text":"","code":"tof_assess_clusters_distance(   tof_tibble,   cluster_col,   marker_cols = where(tof_is_numeric),   z_threshold = 3,   augment = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_distance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assess a clustering result by calculating the z-score of each cell's\nmahalanobis distance to its cluster centroid and flagging outliers. — tof_assess_clusters_distance","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names indicating column `tof_tibble` interpreted markers used mahalanobis distance calculation. Defaults numeric columns. Supports tidyselection. z_threshold scalar indicating distance z-score threshold cell considered anomalous. Defaults 3. augment boolean value indicating output column-bind computed flags cell (see ) new columns `tof_tibble` (TRUE) tibble including computed flags returned (FALSE, default).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_distance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assess a clustering result by calculating the z-score of each cell's\nmahalanobis distance to its cluster centroid and flagging outliers. — tof_assess_clusters_distance","text":"augment = FALSE (default), tibble 3 columns: \".mahalanobis_distance\" (mahalanobis distance cell centroid tits assigned cluster), \"z_score\" (modified z-score cell's mahalanobis distance relative cells dataset), \"flagged_cell\" (boolean indicating whether cell flagged z-score z_threshold). augment = TRUE, 3 columns column-bound tof_tibble, resulting tibble returned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_distance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assess a clustering result by calculating the z-score of each cell's\nmahalanobis distance to its cluster centroid and flagging outliers. — tof_assess_clusters_distance","text":"","code":"# simulate data sim_data_inner <-     dplyr::tibble(         cd45 = c(rnorm(n = 600), rnorm(n = 500, mean = -4)),         cd38 =             c(                 rnorm(n = 100, sd = 0.5),                 rnorm(n = 500, mean = -3),                 rnorm(n = 500, mean = 8)             ),         cd34 =             c(                 rnorm(n = 100, sd = 0.2, mean = -10),                 rnorm(n = 500, mean = 4),                 rnorm(n = 500, mean = 60)             ),         cd19 = c(rnorm(n = 100, sd = 0.3, mean = 10), rnorm(n = 1000)),         cluster_id = c(rep(\"a\", 100), rep(\"b\", 500), rep(\"c\", 500)),         dataset = \"inner\"     )  sim_data_outer <-     dplyr::tibble(         cd45 = c(rnorm(n = 10), rnorm(50, mean = 3), rnorm(n = 50, mean = -12)),         cd38 =             c(                 rnorm(n = 10, sd = 0.5),                 rnorm(n = 50, mean = -10),                 rnorm(n = 50, mean = 10)             ),         cd34 =             c(                 rnorm(n = 10, sd = 0.2, mean = -15),                 rnorm(n = 50, mean = 15),                 rnorm(n = 50, mean = 70)             ),         cd19 = c(rnorm(n = 10, sd = 0.3, mean = 19), rnorm(n = 100)),         cluster_id = c(rep(\"a\", 10), rep(\"b\", 50), rep(\"c\", 50)),         dataset = \"outer\"     )  sim_data <- rbind(sim_data_inner, sim_data_outer)  # detect anomalous cells (in this case, the \"outer\" dataset contains small # clusters that get lumped into the larger clusters in the \"inner\" dataset) z_result <-     sim_data |>     tof_assess_clusters_distance(cluster_col = cluster_id, z_threshold = 2.5)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_entropy.html","id":null,"dir":"Reference","previous_headings":"","what":"Assess a clustering result by calculating the shannon entropy of each cell's\nmahalanobis distance to all cluster centroids and flagging outliers. — tof_assess_clusters_entropy","title":"Assess a clustering result by calculating the shannon entropy of each cell's\nmahalanobis distance to all cluster centroids and flagging outliers. — tof_assess_clusters_entropy","text":"function evaluates result clustering procedure calculating mahalanobis distance cell centroids clusters dataset finding shannon entropy resulting vector distances. cells entropy threshold user-specified threshold flagged potentially anomalous. Entropy minimized (0) cell close one (small number) clusters, far rest . cell close multiple cluster centroids (.e. ambiguous phenotype), entropy large.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_entropy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assess a clustering result by calculating the shannon entropy of each cell's\nmahalanobis distance to all cluster centroids and flagging outliers. — tof_assess_clusters_entropy","text":"","code":"tof_assess_clusters_entropy(   tof_tibble,   cluster_col,   marker_cols = where(tof_is_numeric),   entropy_threshold,   entropy_quantile = 0.9,   num_closest_clusters,   augment = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_entropy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assess a clustering result by calculating the shannon entropy of each cell's\nmahalanobis distance to all cluster centroids and flagging outliers. — tof_assess_clusters_entropy","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names indicating column `tof_tibble` interpreted markers used mahalanobis distance calculation. Defaults numeric columns. Supports tidyselection. entropy_threshold scalar indicating entropy threshold cell considered anomalous. unspecified, threshold computed using `entropy_quantile` (see ). (Note: Entropy often 0 1, can larger many classes/clusters). entropy_quantile scalar 0 1 indicating entropy quantile cell considered anomalous. Defaults 0.9, means cells entropy 90th percentile flagged. Ignored entropy_threshold specified directly. num_closest_clusters integer indicating many cell's closest cluster centroids mahalanobis distance included entropy calculation. Playing argument allow ignore distances clusters far away cell (thus may distort result, many distant centroids large distances can artificially inflate cells' entropy value; said, rarely issue empirically). Defaults clusters tof_tibble. augment boolean value indicating output column-bind computed flags cell (see ) new columns `tof_tibble` (TRUE) tibble including computed flags returned (FALSE, default).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_entropy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assess a clustering result by calculating the shannon entropy of each cell's\nmahalanobis distance to all cluster centroids and flagging outliers. — tof_assess_clusters_entropy","text":"augment = FALSE (default), tibble 2 + NUM_CLUSTERS columns. NUM_CLUSTERS number unique clusters cluster_col. Two columns \"entropy\" (entropy value cell) \"flagged_cell\" (boolean value indicating cell entropy value entropy_threshold). NUM_CLUSTERS columns contain mahalanobis distances cell clusters cluster_col (named \".mahalanobis_cluster_name\"). augment = TRUE, 2 + NUM_CLUSTERS columns column-bound tof_tibble, resulting tibble returned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_entropy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assess a clustering result by calculating the shannon entropy of each cell's\nmahalanobis distance to all cluster centroids and flagging outliers. — tof_assess_clusters_entropy","text":"","code":"# simulate data sim_data <-     dplyr::tibble(         cd45 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cd38 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cd34 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cd19 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cluster_id = c(rep(\"a\", 1000), rep(\"b\", 1000), rep(\"c\", 1000))     )  # imagine a \"reference\" dataset in which \"cluster a\" isn't present sim_data_reference <-     sim_data |>     dplyr::filter(cluster_id %in% c(\"b\", \"c\"))  # if we cluster into the reference dataset, we will force all cells in # cluster a into a population where they don't fit very well sim_data <-     sim_data |>     tof_cluster(         healthy_tibble = sim_data_reference,         healthy_label_col = cluster_id,         method = \"ddpr\"     )  # we can evaluate the clustering quality by calculating by the entropy of the # mahalanobis distance vector for each cell to all cluster centroids entropy_result <-     sim_data |>     tof_assess_clusters_entropy(         cluster_col = .mahalanobis_cluster,         marker_cols = starts_with(\"cd\"),         entropy_quantile = 0.8,         augment = TRUE     )  # most cells in \"cluster a\" are flagged, and few cells in the other clusters are flagged_cluster_proportions <-     entropy_result |>     dplyr::group_by(cluster_id) |>     dplyr::summarize(         prop_flagged = mean(flagged_cell)     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_knn.html","id":null,"dir":"Reference","previous_headings":"","what":"Assess a clustering result by calculating a cell's cluster assignment to that\nof its K nearest neighbors. — tof_assess_clusters_knn","title":"Assess a clustering result by calculating a cell's cluster assignment to that\nof its K nearest neighbors. — tof_assess_clusters_knn","text":"function evaluates result clustering procedure finding cell's K nearest neighbors, determining cluster majority assigned , checking matches cell's cluster assignment. cluster assignment majority cell's nearest neighbors match cell's cluster assignment, cell flagged potentially anomalous.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_knn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assess a clustering result by calculating a cell's cluster assignment to that\nof its K nearest neighbors. — tof_assess_clusters_knn","text":"","code":"tof_assess_clusters_knn(   tof_tibble,   cluster_col,   marker_cols = where(tof_is_numeric),   num_neighbors = min(10, nrow(tof_tibble)),   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\"),   augment = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_knn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assess a clustering result by calculating a cell's cluster assignment to that\nof its K nearest neighbors. — tof_assess_clusters_knn","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names indicating column `tof_tibble` interpreted markers used mahalanobis distance calculation. Defaults numeric columns. Supports tidyselection. num_neighbors integer indicating many neighbors found nearest neighbor calculation. distance_function string indicating distance function used perform k nearest neighbor calculation.  Options \"euclidean\" (default) \"cosine\". augment boolean value indicating output column-bind computed flags cell (see ) new columns `tof_tibble` (TRUE) tibble including computed flags returned (FALSE, default).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_knn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assess a clustering result by calculating a cell's cluster assignment to that\nof its K nearest neighbors. — tof_assess_clusters_knn","text":"augment = FALSE (default), tibble 2 columns: \".knn_cluster\" (character vector indicating cluster received majority vote cell's k nearest neighbors) \"flagged_cell\" (boolean value indicating cell's cluster assignment matched majority vote (TRUE) (FALSE)). augment = TRUE, 2 columns column-bound tof_tibble, resulting tibble returned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_knn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assess a clustering result by calculating a cell's cluster assignment to that\nof its K nearest neighbors. — tof_assess_clusters_knn","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cd38 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cd34 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cd19 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cluster_id = c(rep(\"a\", 1000), rep(\"b\", 1000), rep(\"c\", 1000))     )  knn_result <-     sim_data |>     tof_assess_clusters_knn(         cluster_col = cluster_id,         num_neighbors = 10     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect flow rate abnormalities in high-dimensional cytometry data — tof_assess_flow_rate","title":"Detect flow rate abnormalities in high-dimensional cytometry data — tof_assess_flow_rate","text":"function performs simplified version flowAI's statistical test detect time periods abnormal flow rates course flow cytometry experiment. Briefly, relative flow rates timestep throughout data acquisition calculated (see tof_calculate_flow_rate), outlier timepoints particularly high low flow rates (.e. beyond extreme values t-distribution across timesteps) flagged.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect flow rate abnormalities in high-dimensional cytometry data — tof_assess_flow_rate","text":"","code":"tof_assess_flow_rate(   tof_tibble,   time_col,   group_cols,   num_timesteps = nrow(tof_tibble)/1000,   alpha_threshold = 0.01,   visualize = FALSE,   ...,   augment = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect flow rate abnormalities in high-dimensional cytometry data — tof_assess_flow_rate","text":"tof_tibble `tof_tbl` `tibble`. time_col unquoted column name indicating column `tof_tibble` contains time cell collected. group_cols Optional. Unquoted column names indicating columns used group cells analysis. Flow rate calculation performed independently within group. Supports tidyselect helpers. num_timesteps number bins `time_col` split. define \"timesteps\" data collection process. number cells analyzed cytometer counted bin separately represent relative average flow rate timestep data collection. alpha_threshold scalar 0 1 indicating two-tailed significance level draw outlier thresholds t-distribution `num_timesteps` - 1 degrees freedom. Defaults 0.01. visualize boolean value indicating plot generated visualize timestep's relative flow rate (group) instead returning tibble directly. Defaults FALSE. ... Optional additional arguments pass facet_wrap. Ignored visualize = FALSE. augment boolean value indicating output column-bind computed flags cell (see ) new columns `tof_tibble` (TRUE) tibble including computed flags returned (FALSE, default).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect flow rate abnormalities in high-dimensional cytometry data — tof_assess_flow_rate","text":"tibble number rows `tof_tibble`. augment = FALSE (default), 3 columns: \"time_col\" (column `time_col`), \"timestep\" (numeric timestep cell assigned based value `time_col`), \"flagged_window\" (boolean vector indicating cell collecting timestep flagged high low flow rate). augment = TRUE, 3 columns column-bound `tof_tibble` return augmented version input dataset. (Note case, time_col duplicated). visualize = TRUE, ggplot object returned instead tibble.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect flow rate abnormalities in high-dimensional cytometry data — tof_assess_flow_rate","text":"","code":"set.seed(1000L) sim_data <-     data.frame(         cd4 = rnorm(n = 1000, mean = 5, sd = 0.5),         cd8 = rnorm(n = 1000, mean = 0, sd = 0.1),         cd33 = rnorm(n = 1000, mean = 10, sd = 0.1),         file_name = c(rep(\"a\", times = 500), rep(\"b\", times = 500)),         time =             c(                 sample(1:100, size = 200, replace = TRUE),                 sample(100:400, size = 300, replace = TRUE),                 sample(1:150, size = 400, replace = TRUE),                 sample(1:500, size = 100, replace = TRUE)             )     )  sim_data |>     tof_assess_flow_rate(         time_col = time,         num_timesteps = 20,         visualize = TRUE     )   sim_data |>     tof_assess_flow_rate(         time_col = time,         group_cols = file_name,         num_timesteps = 20,         visualize = TRUE     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect flow rate abnormalities in high-dimensional cytometry data (stored in a\nsingle data.frame) — tof_assess_flow_rate_tibble","title":"Detect flow rate abnormalities in high-dimensional cytometry data (stored in a\nsingle data.frame) — tof_assess_flow_rate_tibble","text":"function performs simplified version flowAI's statistical test detect time periods abnormal flow rates course flow cytometry experiment. Briefly, relative flow rates timestep throughout data acquisition calculated (see tof_calculate_flow_rate), outlier timepoints particularly high low flow rates (.e. beyond extreme values t-distribution across timesteps) flagged.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect flow rate abnormalities in high-dimensional cytometry data (stored in a\nsingle data.frame) — tof_assess_flow_rate_tibble","text":"","code":"tof_assess_flow_rate_tibble(   tof_tibble,   time_col,   num_timesteps = nrow(tof_tibble)/1000,   alpha_threshold = 0.01,   augment = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect flow rate abnormalities in high-dimensional cytometry data (stored in a\nsingle data.frame) — tof_assess_flow_rate_tibble","text":"tof_tibble `tof_tbl` `tibble`. time_col unquoted column name indicating column `tof_tibble` contains time cell collected. num_timesteps number bins `time_col` split. define \"timesteps\" data collection process. number cells analyzed cytometer counted bin separately represent relative average flow rate timestep data collection. alpha_threshold scalar 0 1 indicating two-tailed significance level draw outlier thresholds t-distribution `num_timesteps` - 1 degrees freedom. Defaults 0.01. augment boolean value indicating output column-bind computed flags cell (see ) new columns `tof_tibble` (TRUE) tibble including computed flags returned (FALSE, default).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate_tibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect flow rate abnormalities in high-dimensional cytometry data (stored in a\nsingle data.frame) — tof_assess_flow_rate_tibble","text":"tibble number rows `tof_tibble`. augment = FALSE (default), 3 columns: \"time_col\" (column `time_col`), \"timestep\" (numeric timestep cell assigned based value `time_col`), \"flagged_window\" (boolean vector indicating cell collecting timestep flagged high low flow rate). augment = TRUE, 3 columns column-bound `tof_tibble` return augmented version input dataset. (Note case, time_col duplicated).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate_tibble.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect flow rate abnormalities in high-dimensional cytometry data (stored in a\nsingle data.frame) — tof_assess_flow_rate_tibble","text":"","code":"set.seed(1000L) sim_data <-     data.frame(         cd4 = rnorm(n = 1000, mean = 5, sd = 0.5),         cd8 = rnorm(n = 1000, mean = 0, sd = 0.1),         cd33 = rnorm(n = 1000, mean = 10, sd = 0.1),         time =             c(                 sample(1:100, size = 200, replace = TRUE),                 sample(100:400, size = 300, replace = TRUE),                 sample(1:150, size = 400, replace = TRUE),                 sample(1:500, size = 100, replace = TRUE)             )     )  sim_data |>     tof_assess_flow_rate(         time_col = time,         num_timesteps = 20,         visualize = TRUE     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Assess a trained elastic net model — tof_assess_model","title":"Assess a trained elastic net model — tof_assess_model","text":"function assesses trained `tof_model`'s performance new data computing model type-specific performance measurements. new data provided, performance metrics training data provided.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assess a trained elastic net model — tof_assess_model","text":"","code":"tof_assess_model(tof_model, new_data)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assess a trained elastic net model — tof_assess_model","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations used evaluate `tof_model`'s performance. new_data provided, model evaluation performed using training data used fit model. Alternatively, string \"tuning\" can provided access model's performance metrics (resampled) model tuning process.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assess a trained elastic net model — tof_assess_model","text":"list performance metrics whose components depend model type: \"model_metrics\" tibble two columns (\"metric\" \"value\") containing standard performance metrics model type. linear models, \"mse\" (mean squared error predictions) \"mae\" (mean absolute error predictions). two-class models, \"roc_auc\" (area Receiver-Operating Curve classification), \"misclassification error\" (proportion misclassified observations), \"binomial_deviance\" (see deviance.glmnet), \"mse\" (mean squared error logit function), \"mae\" (mean absolute error logit function). multiclass models, \"roc_auc\" (area Receiver-Operating Curve classification using Hand-Till generalization ROC AUC multiclass models roc_auc), \"misclassification error\" (proportion misclassified observations), \"multinomial_deviance\" (see deviance.glmnet), \"mse\" \"mae\" . survival models, \"concordance_index\" (Harrel's C index; see deviance.glmnet) \"partial_likelihood_deviance\" (see deviance.glmnet). \"roc_curve\" Reported \"two-class\" \"multiclass\" models. ,  tibble provided reporting true-positive rate (tpr) false-positive  rate (fpr) threshold classification use plotting  receiver-operating curve. \"multiclass\" models, \".level\" column  allows separating values roc_curve one ROC can plotted  class. \"confusion_matrix\" Reported \"two-class\" \"multiclass\" models. , tibble provided reporting \"confusion matrix\" classification long-format. \"survival_curves\" Reported \"survival\" models. tibble indicating patient's probability survival (1 - probability(event)) timepoint dataset whether sample placed \"high\" \"low\" risk group according predicted relative risk (tof_model's optimal relative_risk cutoff training dataset).","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assess a trained elastic net model — tof_assess_model","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100)     )  new_tibble <-     dplyr::tibble(         sample = as.character(1:20),         cd45 = runif(n = 20),         pstat5 = runif(n = 20),         cd34 = runif(n = 20),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(20)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  # assess the model on new data tof_assess_model(tof_model = regression_model, new_data = new_tibble) #> $model_metrics #> # A tibble: 2 × 2 #>   metric value #>   <chr>  <dbl> #> 1 mse    0.795 #> 2 mae    0.788 #>"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_new_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute a trained elastic net model's performance metrics using new_data. — tof_assess_model_new_data","title":"Compute a trained elastic net model's performance metrics using new_data. — tof_assess_model_new_data","text":"Compute trained elastic net model's performance metrics using new_data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_new_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute a trained elastic net model's performance metrics using new_data. — tof_assess_model_new_data","text":"","code":"tof_assess_model_new_data(tof_model, new_data)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_new_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute a trained elastic net model's performance metrics using new_data. — tof_assess_model_new_data","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations used evaluate `tof_model`'s performance.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_new_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute a trained elastic net model's performance metrics using new_data. — tof_assess_model_new_data","text":"list performance metrics whose components depend model type.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_tuning.html","id":null,"dir":"Reference","previous_headings":"","what":"Access a trained elastic net model's performance metrics using its tuning data. — tof_assess_model_tuning","title":"Access a trained elastic net model's performance metrics using its tuning data. — tof_assess_model_tuning","text":"Access trained elastic net model's performance metrics using tuning data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_tuning.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Access a trained elastic net model's performance metrics using its tuning data. — tof_assess_model_tuning","text":"","code":"tof_assess_model_tuning(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_tuning.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Access a trained elastic net model's performance metrics using its tuning data. — tof_assess_model_tuning","text":"tof_model `tof_model` trained using tof_train_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_tuning.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Access a trained elastic net model's performance metrics using its tuning data. — tof_assess_model_tuning","text":"list performance metrics whose components depend model type.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct","text":"function performs quantile normalization high-dimensional cytometry data tidy format using either linear rescaling quantile normalization. channel specified `channel_cols` batch corrected, `group_cols` can used break cells groups batch correction performed separately.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct","text":"","code":"tof_batch_correct(   tof_tibble,   channel_cols,   group_cols,   augment = TRUE,   method = c(\"rescale\", \"quantile\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct","text":"tof_tibble `tof_tbl` `tibble`. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. group_cols Optional. Unquoted column names indicating columns used group cells batch correction. Batch correction performed independently within group. Supports tidyselect helpers. augment boolean value indicating output replace `channel_cols` `tof_tibble` new, batch corrected columns (TRUE, default) return batch-corrected columns (FALSE) columns omitted. method string indicating batch correction method used. Valid options \"rescale\" linear scaling (default) \"quantile\" quantile normalization using normalize.quantiles.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct","text":"augment = TRUE, tibble number rows columns tof_tibble, columns specified `channel_cols` batch-corrected. augment = FALSE, tibble containing batch-corrected `channel_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile.html","id":null,"dir":"Reference","previous_headings":"","what":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile","text":"function performs quantile normalization high-dimensional cytometry data tidy format using normalize.quantiles. Optionally, groups can specified normalized separately.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile","text":"","code":"tof_batch_correct_quantile(   tof_tibble,   channel_cols,   group_cols,   augment = TRUE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile","text":"tof_tibble `tof_tbl` `tibble`. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. group_cols Optional. Unquoted column names indicating columns used group cells batch correction. Batch correction performed independently within group. Supports tidyselect helpers. augment boolean value indicating output replace `channel_cols` `tof_tibble` new, batch corrected columns (TRUE, default) return batch-corrected columns (FALSE) columns omitted.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile","text":"augment = TRUE, tibble number rows columns tof_tibble, columns specified `channel_cols` batch-corrected. augment = FALSE, tibble containing batch-corrected `channel_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile_tibble","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile_tibble","text":"function performs quantile normalization high-dimensional cytometry data tidy format using normalize.quantiles.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile_tibble","text":"","code":"tof_batch_correct_quantile_tibble(tof_tibble, channel_cols, augment = TRUE)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile_tibble","text":"tof_tibble `tof_tbl` `tibble`. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. augment boolean value indicating output replace `channel_cols` `tof_tibble` new, batch corrected columns (TRUE, default) return batch-corrected columns (FALSE) columns omitted.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile_tibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile_tibble","text":"augment = TRUE, tibble number rows columns tof_tibble, columns specified `channel_cols` batch-corrected. augment = FALSE, tibble containing batch-corrected `channel_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile_tibble.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile_tibble","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_rescale.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct_rescale","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct_rescale","text":"function performs quantile normalization high-dimensional cytometry data tidy format using linear rescaling. channel specified `channel_cols` rescaled maximum value 1 minimum value 0. `group_cols` specifies columns used break cells groups rescaling performed separately.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_rescale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct_rescale","text":"","code":"tof_batch_correct_rescale(tof_tibble, channel_cols, group_cols, augment = TRUE)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_rescale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct_rescale","text":"tof_tibble `tof_tbl` `tibble`. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. group_cols Optional. Unquoted column names indicating columns used group cells batch correction. Batch correction performed independently within group. Supports tidyselect helpers. augment boolean value indicating output replace `channel_cols` `tof_tibble` new, batch corrected columns (TRUE, default) return batch-corrected columns (FALSE) columns omitted.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_rescale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct_rescale","text":"augment = TRUE, tibble number rows columns tof_tibble, columns specified `channel_cols` batch-corrected. augment = FALSE, tibble containing batch-corrected `channel_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_rescale.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct_rescale","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_build_classifier.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate centroids and covariance matrices for each cell subpopulation in\nhealthy CyTOF data. — tof_build_classifier","title":"Calculate centroids and covariance matrices for each cell subpopulation in\nhealthy CyTOF data. — tof_build_classifier","text":"function takes `tibble` `tof_tibble` storing healthy cell measurements rows vector (`healthy_cell_labels`) representing cell subpopulation cell belongs. uses values calculate several values required perform \"developmental classification\" described paper.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_build_classifier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate centroids and covariance matrices for each cell subpopulation in\nhealthy CyTOF data. — tof_build_classifier","text":"","code":"tof_build_classifier(   healthy_tibble = NULL,   healthy_cell_labels = NULL,   classifier_markers = where(tof_is_numeric),   verbose = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_build_classifier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate centroids and covariance matrices for each cell subpopulation in\nhealthy CyTOF data. — tof_build_classifier","text":"healthy_tibble `tibble` `tof_tibble` containing cells healthy control samples (.e. disease samples). healthy_cell_labels character integer vector length `nrow(healthy_tibble)`. entry vector represent cell subpopulation label (cluster id) corresponding row `healthy_tibble`. classifier_markers Unquoted column names indicating columns `healthy_tibble` use developmental classification. Defaults numeric columns `healthy_tibble`. Supports tidyselect helpers. verbose boolean value indicating updates printed console classification. Defaults FALSE.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_build_classifier.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate centroids and covariance matrices for each cell subpopulation in\nhealthy CyTOF data. — tof_build_classifier","text":"tibble three columns: population (id healthy cell population), centroid (centroid vector cell population), covariance_matrix (covariance matrix cell population)","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_calculate_flow_rate.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the relative flow rates of different timepoints throughout a flow\nor mass cytometry run. — tof_calculate_flow_rate","title":"Calculate the relative flow rates of different timepoints throughout a flow\nor mass cytometry run. — tof_calculate_flow_rate","text":"Calculate relative flow rates different timepoints throughout flow mass cytometry run.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_calculate_flow_rate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the relative flow rates of different timepoints throughout a flow\nor mass cytometry run. — tof_calculate_flow_rate","text":"","code":"tof_calculate_flow_rate(   tof_tibble,   time_col,   num_timesteps = nrow(tof_tibble)/1000 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_calculate_flow_rate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the relative flow rates of different timepoints throughout a flow\nor mass cytometry run. — tof_calculate_flow_rate","text":"tof_tibble `tof_tbl` `tibble`. time_col unquoted column name indicating column `tof_tibble` contains time cell collected. num_timesteps number bins `time_col` split. define \"timesteps\" data collection process. number cells analyzed cytometer counted bin separately represent relative average flow rate timestep data collection.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_calculate_flow_rate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the relative flow rates of different timepoints throughout a flow\nor mass cytometry run. — tof_calculate_flow_rate","text":"tibble 3 columns num_timesteps rows. row represent single timestep (error thrown `num_timesteps` larger number rows `tof_tibble`). three columns follows: \"timestep\", numeric vector indicating timestep represented given row; \"time_window\", factor showing interval `time_col` \"timestep\" defined; \"num_cells\", number cells collected timestep.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_calculate_flow_rate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the relative flow rates of different timepoints throughout a flow\nor mass cytometry run. — tof_calculate_flow_rate","text":"","code":"# simulate some data sim_data <-     data.frame(         cd4 = rnorm(n = 100, mean = 5, sd = 0.5),         cd8 = rnorm(n = 100, mean = 0, sd = 0.1),         cd33 = rnorm(n = 100, mean = 10, sd = 0.1),         time = sample(1:300, size = 100)     )  tof_calculate_flow_rate(tof_tibble = sim_data, time_col = time, num_timesteps = 20L) #>    timestep time_window num_cells #> 1         1 (6.71,21.6]         4 #> 2         2 (21.6,36.2]         6 #> 3         3 (36.2,50.8]         7 #> 4         4 (50.8,65.4]         7 #> 5         5   (65.4,80]         5 #> 6         6   (80,94.6]         4 #> 7         7  (94.6,109]         5 #> 8         8   (109,124]         4 #> 9         9   (124,138]         1 #> 10       10   (138,153]         7 #> 11       11   (153,168]         5 #> 12       12   (168,182]         2 #> 13       13   (182,197]         7 #> 14       14   (197,211]         7 #> 15       15   (211,226]         5 #> 16       16   (226,241]         2 #> 17       17   (241,255]         4 #> 18       18   (255,270]         5 #> 19       19   (270,284]         7 #> 20       20   (284,299]         6"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_check_model_args.html","id":null,"dir":"Reference","previous_headings":"","what":"Check argument specifications for a glmnet model. — tof_check_model_args","title":"Check argument specifications for a glmnet model. — tof_check_model_args","text":"Check argument specifications glmnet model.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_check_model_args.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check argument specifications for a glmnet model. — tof_check_model_args","text":"","code":"tof_check_model_args(   split_data,   model_type = c(\"linear\", \"two-class\", \"multiclass\", \"survival\"),   best_model_type = c(\"best\", \"best with sparsity\"),   response_col,   time_col,   event_col )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_check_model_args.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check argument specifications for a glmnet model. — tof_check_model_args","text":"split_data `rsplit` `rset` object rsample package containing sample-level data use modeling. Alternatively, unsplit tbl_df can provided, though recommended. model_type string indicating kind elastic net model build. continuous response predicted, use \"linear\" linear regression; categorical response 2 classes predicted, use \"two-class\" logistic regression; categorical response 2 levels predicted, use \"multiclass\" multinomial regression; time--event outcome predicted, use \"survival\" Cox regression. best_model_type Currently unused. response_col Unquoted column name indicating column data contained `split_data` used outcome \"two-class\", \"multiclass\", \"linear\" elastic net model. Must factor \"two-class\" \"multiclass\" models must numeric \"linear\" models. Ignored `model_type` \"survival\". time_col Unquoted column name indicating column data contained `split_data` represents time--event outcome \"survival\" elastic net model. Must numeric. Ignored `model_type` \"two-class\", \"multiclass\", \"linear\". event_col Unquoted column name indicating column data contained `split_data` represents time--event outcome \"survival\" elastic net model. Must binary column - values either 0 1 (1 indicating adverse event) FALSE TRUE (TRUE indicating adverse event). Ignored `model_type` \"two-class\", \"multiclass\", \"linear\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_check_model_args.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check argument specifications for a glmnet model. — tof_check_model_args","text":"tibble. arguments specified correctly, tibble can used create recipe preprocessing.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_classify_cells.html","id":null,"dir":"Reference","previous_headings":"","what":"Classify each cell (i.e. each row) in a matrix of cancer cells into its most\nsimilar healthy developmental subpopulation. — tof_classify_cells","title":"Classify each cell (i.e. each row) in a matrix of cancer cells into its most\nsimilar healthy developmental subpopulation. — tof_classify_cells","text":"function uses specified distance metric classify cell data.frame matrix (`cancer_data`) one `nrow(classifier_fit)` subpopulations based minimum distance, described paper.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_classify_cells.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Classify each cell (i.e. each row) in a matrix of cancer cells into its most\nsimilar healthy developmental subpopulation. — tof_classify_cells","text":"","code":"tof_classify_cells(   classifier_fit,   cancer_data,   distance_function = c(\"mahalanobis\", \"cosine\", \"pearson\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_classify_cells.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Classify each cell (i.e. each row) in a matrix of cancer cells into its most\nsimilar healthy developmental subpopulation. — tof_classify_cells","text":"classifier_fit tibble produced tof_build_classifier. cancer_data matrix row corresponds cell column corresponds measured CyTOF antigen. distance_function string indicating three distance functions used calculate distances row `cancer_data` healthy developmental subpopulations corresponding row `classifier_fit`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_classify_cells.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Classify each cell (i.e. each row) in a matrix of cancer cells into its most\nsimilar healthy developmental subpopulation. — tof_classify_cells","text":"data.frame column represents distance cell input data healthy subpopulation cells classified .","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_clean_metric_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename glmnet's default model evaluation metrics to make them more interpretable — tof_clean_metric_names","title":"Rename glmnet's default model evaluation metrics to make them more interpretable — tof_clean_metric_names","text":"Rename glmnet's default model evaluation metrics make interpretable","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_clean_metric_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename glmnet's default model evaluation metrics to make them more interpretable — tof_clean_metric_names","text":"","code":"tof_clean_metric_names(metric_tibble, model_type)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_clean_metric_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename glmnet's default model evaluation metrics to make them more interpretable — tof_clean_metric_names","text":"metric_tibble tibble column represents glmnet model evaluation metric default name. model_type string indicating type glmnet model trained.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_clean_metric_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename glmnet's default model evaluation metrics to make them more interpretable — tof_clean_metric_names","text":"tibble column represents glmnet model evaluation metric \"cleaned\" name.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster high-dimensional cytometry data. — tof_cluster","title":"Cluster high-dimensional cytometry data. — tof_cluster","text":"function wrapper around tidytof's tof_cluster_* function family. performs clustering high-dimensional cytometry data using user-specified method (5 choices) method's corresponding input parameters.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster high-dimensional cytometry data. — tof_cluster","text":"","code":"tof_cluster(   tof_tibble,   cluster_cols = where(tof_is_numeric),   group_cols = NULL,   ...,   augment = TRUE,   method )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster high-dimensional cytometry data. — tof_cluster","text":"tof_tibble `tof_tbl` `tibble`. cluster_cols Unquoted column names indicating columns `tof_tibble` use computing clusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. group_cols Optional. Unquoted column names indicating columns used group cells clustering. Clustering performed group independently. Supports tidyselect helpers. ... Additional arguments pass `tof_cluster_*` function family member corresponding chosen method. augment boolean value indicating output column-bind cluster ids cell new column `tof_tibble` (TRUE, default) single-column tibble including cluster ids returned (FALSE). method string indicating clustering methods used. Valid values include \"flowsom\", \"phenograph\", \"kmeans\", \"ddpr\", \"xshift\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cluster high-dimensional cytometry data. — tof_cluster","text":"`tof_tbl` `tibble` augment = FALSE, single column encoding cluster ids cell `tof_tibble`. augment = TRUE, ncol(tof_tibble) + 1 columns: (unaltered) columns `tof_tibble` plus additional column encoding cluster ids.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cluster high-dimensional cytometry data. — tof_cluster","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 500),         cd38 = rnorm(n = 500),         cd34 = rnorm(n = 500),         cd19 = rnorm(n = 500)     )  tof_cluster(tof_tibble = sim_data, method = \"kmeans\") #> # A tibble: 500 × 5 #>      cd45   cd38   cd34   cd19 .kmeans_cluster #>     <dbl>  <dbl>  <dbl>  <dbl> <chr>           #>  1  1.33  -0.447  1.50   0.436 11              #>  2 -1.20  -0.481 -0.391 -1.54  9               #>  3 -0.541  0.666 -1.68  -0.986 16              #>  4 -1.22   1.32   0.689 -0.791 10              #>  5  0.639  0.519 -1.32  -0.204 18              #>  6 -0.239  0.397 -0.780  0.372 1               #>  7  0.651  0.997 -0.665  0.805 18              #>  8  0.788  1.26   0.584 -0.953 19              #>  9 -0.344  0.388 -0.407 -0.442 13              #> 10  0.120  0.885 -2.26   0.583 17              #> # ℹ 490 more rows tof_cluster(tof_tibble = sim_data, method = \"phenograph\") #> # A tibble: 500 × 5 #>      cd45   cd38   cd34   cd19 .phenograph_cluster #>     <dbl>  <dbl>  <dbl>  <dbl> <chr>               #>  1  1.33  -0.447  1.50   0.436 2                   #>  2 -1.20  -0.481 -0.391 -1.54  1                   #>  3 -0.541  0.666 -1.68  -0.986 1                   #>  4 -1.22   1.32   0.689 -0.791 3                   #>  5  0.639  0.519 -1.32  -0.204 5                   #>  6 -0.239  0.397 -0.780  0.372 5                   #>  7  0.651  0.997 -0.665  0.805 4                   #>  8  0.788  1.26   0.584 -0.953 8                   #>  9 -0.344  0.388 -0.407 -0.442 1                   #> 10  0.120  0.885 -2.26   0.583 5                   #> # ℹ 490 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_ddpr.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform developmental clustering on high-dimensional cytometry data. — tof_cluster_ddpr","title":"Perform developmental clustering on high-dimensional cytometry data. — tof_cluster_ddpr","text":"function performs distance-based clustering high-dimensional cytometry data sorting cancer cells (passed function `tof_tibble`) phenotypically similar healthy cell subpopulation (passed function using `healthy_tibble`). details algorithm used perform clustering, see paper.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_ddpr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform developmental clustering on high-dimensional cytometry data. — tof_cluster_ddpr","text":"","code":"tof_cluster_ddpr(   tof_tibble,   healthy_tibble,   healthy_label_col,   cluster_cols = where(tof_is_numeric),   distance_function = c(\"mahalanobis\", \"cosine\", \"pearson\"),   num_cores = 1L,   parallel_cols,   return_distances = FALSE,   verbose = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_ddpr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform developmental clustering on high-dimensional cytometry data. — tof_cluster_ddpr","text":"tof_tibble `tibble` `tof_tbl` containing cells classified nearest healthy subpopulation (generally cancer cells). healthy_tibble `tibble` `tof_tibble` containing cells healthy control samples (.e. disease samples). healthy_label_col unquoted column name indicating column `healthy_tibble` contains subpopulation label (cluster id) cell `healthy_tibble`. cluster_cols Unquoted column names indicating columns `tof_tibble` use computing DDPR clusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. distance_function string indicating distance function used perform classification. Options \"mahalanobis\" (default), \"cosine\", \"pearson\". num_cores integer indicating number CPU cores used parallelize classification. Defaults 1 (single core). parallel_cols Optional. Unquoted column names indicating columns `tof_tibble` use breaking data order parallelize classification using `foreach` `doParallel` backend. Supports tidyselect helpers. return_distances boolean value indicating whether returned result include one column, cluster ids corresponding row `tof_tibble` (return_distances = FALSE, default), returned result include additional columns representing distance row `tof_tibble` healthy subpopulation centroids (return_distances = TRUE). verbose boolean value indicating whether progress updates printed developmental classification. Default FALSE.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_ddpr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform developmental clustering on high-dimensional cytometry data. — tof_cluster_ddpr","text":"`return_distances = FALSE`, tibble one column named `.distance_function_cluster`, character vector length `nrow(tof_tibble)` indicating id developmental cluster cell (.e. row) `tof_tibble` assigned. `return_distances = TRUE`, tibble `nrow(tof_tibble)` rows `nrow(classifier_fit) + 1` columns. row represents cell `tof_tibble`, `nrow(classifier_fit)` columns represent distance cell healthy subpopulations' cluster centroids. final column represents cluster id healthy subpopulation minimum distance cell represented row. `return_distances = FALSE`, tibble one column named `.distance_function_cluster`. column contain integer vector length `nrow(tof_tibble)` indicating id developmental cluster cell (.e. row) `tof_tibble` assigned.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_ddpr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform developmental clustering on high-dimensional cytometry data. — tof_cluster_ddpr","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  healthy_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200),         cluster_id = c(rep(\"a\", times = 100), rep(\"b\", times = 100))     )  tof_cluster_ddpr(     tof_tibble = sim_data,     healthy_tibble = healthy_data,     healthy_label_col = cluster_id ) #> # A tibble: 1,000 × 1 #>    .mahalanobis_cluster #>    <chr>                #>  1 b                    #>  2 b                    #>  3 b                    #>  4 a                    #>  5 b                    #>  6 b                    #>  7 b                    #>  8 a                    #>  9 a                    #> 10 b                    #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_flowsom.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","title":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","text":"function performs FlowSOM clustering high-dimensional cytometry data using user-specified selection input variables/high-dimensional cytometry measurements. mostly convenient wrapper around SOM MetaClustering.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_flowsom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","text":"","code":"tof_cluster_flowsom(   tof_tibble = NULL,   cluster_cols = where(tof_is_numeric),   som_xdim = 10,   som_ydim = 10,   som_distance_function = c(\"euclidean\", \"manhattan\", \"chebyshev\", \"cosine\"),   perform_metaclustering = TRUE,   num_metaclusters = 20,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_flowsom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","text":"tof_tibble `tof_tbl` `tibble`. cluster_cols Unquoted column names indicating columns `tof_tibble` use computing flowSOM clusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. som_xdim width grid used self-organizing map. total number clusters returned FlowSOM som_xdim * som_ydim, adjust value affect final number clusters. Defaults 10. som_ydim height grid used self-organizing map. total number clusters returned FlowSOM som_xdim * som_ydim, adjust value affect final number clusters. Defaults 10. som_distance_function distance function used self-organizing map calculations. Options \"euclidean\" (default), \"manhattan\", \"chebyshev\", \"cosine\". perform_metaclustering boolean value indicating metaclustering performed initial clustering result returned FlowSOM. Defaults TRUE. num_metaclusters integer indicating maximum number metaclusters returned metaclustering. Defaults 20. ... Optional additional parameters can passed BuildSOM function.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_flowsom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","text":"tibble one column named `.flowsom_cluster` `.flowsom_metacluster` depending value `perform_metaclustering`. column contain integer vector length `nrow(tof_tibble)` indicating id flowSOM cluster cell (.e. row) `tof_tibble` assigned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_flowsom.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","text":"additional details FlowSOM algorithm, see paper.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_flowsom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200)     )  tof_cluster_flowsom(tof_tibble = sim_data, cluster_cols = c(cd45, cd19)) #> # A tibble: 200 × 1 #>    .flowsom_metacluster #>    <chr>                #>  1 10                   #>  2 10                   #>  3 8                    #>  4 5                    #>  5 10                   #>  6 15                   #>  7 6                    #>  8 8                    #>  9 15                   #> 10 2                    #> # ℹ 190 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_grouped.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster (grouped) high-dimensional cytometry data. — tof_cluster_grouped","title":"Cluster (grouped) high-dimensional cytometry data. — tof_cluster_grouped","text":"function wrapper around tidytof's tof_cluster_* function family provides low-level API clustering grouped data frames. subroutine tof_cluster called directly users.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_grouped.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster (grouped) high-dimensional cytometry data. — tof_cluster_grouped","text":"","code":"tof_cluster_grouped(tof_tibble, group_cols, ..., augment = TRUE, method)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_grouped.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster (grouped) high-dimensional cytometry data. — tof_cluster_grouped","text":"tof_tibble `tof_tbl` `tibble`. group_cols unquoted column name indicating columns used group cells clustering. Clustering performed group independently. ... Additional arguments pass `tof_cluster_*` function family member corresponding chosen method. augment boolean value indicating output column-bind cluster ids cell new column `tof_tibble` (TRUE, default) single-column tibble including cluster ids returned (FALSE). method string indicating clustering methods used. Valid values include \"flowsom\", \"phenograph\", \"kmeans\", \"ddpr\", \"xshift\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_grouped.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cluster (grouped) high-dimensional cytometry data. — tof_cluster_grouped","text":"`tof_tbl` `tibble` augment = FALSE, single column encoding cluster ids cell `tof_tibble`. augment = TRUE, ncol(tof_tibble) + 1 columns: (unaltered) columns `tof_tibble` plus additional column encoding cluster ids.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_kmeans.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform k-means clustering on high-dimensional cytometry data. — tof_cluster_kmeans","title":"Perform k-means clustering on high-dimensional cytometry data. — tof_cluster_kmeans","text":"function performs k-means clustering high-dimensional cytometry data using user-specified selection input variables/high-dimensional cytometry measurements. mostly convenient wrapper around kmeans.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_kmeans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform k-means clustering on high-dimensional cytometry data. — tof_cluster_kmeans","text":"","code":"tof_cluster_kmeans(   tof_tibble,   cluster_cols = where(tof_is_numeric),   num_clusters = 20,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_kmeans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform k-means clustering on high-dimensional cytometry data. — tof_cluster_kmeans","text":"tof_tibble `tof_tibble`. cluster_cols Unquoted column names indicating columns `tof_tibble` use computing k-means clusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. num_clusters integer indicating maximum number clusters returned. Defaults 20. ... Optional additional arguments can passed kmeans.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_kmeans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform k-means clustering on high-dimensional cytometry data. — tof_cluster_kmeans","text":"tibble one column named `.kmeans_cluster`. column contain integer vector length `nrow(tof_tibble)` indicating id k-means cluster cell (.e. row) `tof_tibble` assigned.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_kmeans.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform k-means clustering on high-dimensional cytometry data. — tof_cluster_kmeans","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     ) tof_cluster_kmeans(tof_tibble = sim_data) #> # A tibble: 1,000 × 1 #>    .kmeans_cluster #>    <chr>           #>  1 7               #>  2 19              #>  3 1               #>  4 9               #>  5 10              #>  6 19              #>  7 14              #>  8 8               #>  9 20              #> 10 8               #> # ℹ 990 more rows tof_cluster_kmeans(tof_tibble = sim_data, cluster_cols = c(cd45, cd19)) #> # A tibble: 1,000 × 1 #>    .kmeans_cluster #>    <chr>           #>  1 8               #>  2 8               #>  3 9               #>  4 4               #>  5 7               #>  6 14              #>  7 16              #>  8 5               #>  9 9               #> 10 11              #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_phenograph.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","title":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","text":"function performs PhenoGraph clustering high-dimensional cytometry data using user-specified selection input variables/high-dimensional cytometry measurements.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_phenograph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","text":"","code":"tof_cluster_phenograph(   tof_tibble,   cluster_cols = where(tof_is_numeric),   num_neighbors = 30,   distance_function = c(\"euclidean\", \"cosine\"),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_phenograph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","text":"tof_tibble `tof_tbl` `tibble`. cluster_cols Unquoted column names indicating columns `tof_tibble` use computing PhenoGraph clusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. num_neighbors integer indicating number neighbors use constructing PhenoGraph's k-nearest-neighbor graph. Smaller values emphasize local graph structure; larger values emphasize global graph structure (add time computation). Defaults 30. distance_function string indicating distance function use nearest-neighbor calculation. Options include \"euclidean\" (default) \"cosine\" distances. ... Optional additional parameters can passed tof_find_knn.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_phenograph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","text":"tibble one column named `.phenograph_cluster`. column contain integer vector length `nrow(tof_tibble)` indicating id PhenoGraph cluster cell (.e. row) `tof_tibble` assigned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_phenograph.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","text":"additional details Phenograph algorithm, see paper.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_phenograph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     ) tof_cluster_phenograph(tof_tibble = sim_data) #> # A tibble: 1,000 × 1 #>    .phenograph_cluster #>    <chr>               #>  1 4                   #>  2 6                   #>  3 10                  #>  4 7                   #>  5 10                  #>  6 5                   #>  7 8                   #>  8 2                   #>  9 1                   #> 10 7                   #> # ℹ 990 more rows tof_cluster_phenograph(tof_tibble = sim_data, cluster_cols = c(cd45, cd19)) #> # A tibble: 1,000 × 1 #>    .phenograph_cluster #>    <chr>               #>  1 3                   #>  2 8                   #>  3 7                   #>  4 6                   #>  5 7                   #>  6 11                  #>  7 1                   #>  8 8                   #>  9 6                   #> 10 5                   #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster (ungrouped) high-dimensional cytometry data. — tof_cluster_tibble","title":"Cluster (ungrouped) high-dimensional cytometry data. — tof_cluster_tibble","text":"function wrapper around tidytof's tof_cluster_* function family provides low-level API clustering ungrouped data frames. subroutine tof_cluster called directly users.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster (ungrouped) high-dimensional cytometry data. — tof_cluster_tibble","text":"","code":"tof_cluster_tibble(tof_tibble, ..., augment = TRUE, method)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster (ungrouped) high-dimensional cytometry data. — tof_cluster_tibble","text":"tof_tibble `tof_tbl` `tibble`. ... Additional arguments pass `tof_cluster_*` function family member corresponding chosen method. augment boolean value indicating output column-bind cluster ids cell new column `tof_tibble` (TRUE, default) single-column tibble including cluster ids returned (FALSE). method string indicating clustering methods used. Valid values include \"flowsom\", \"phenograph\", \"kmeans\", \"ddpr\", \"xshift\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_tibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cluster (ungrouped) high-dimensional cytometry data. — tof_cluster_tibble","text":"`tof_tbl` `tibble` augment = FALSE, single column encoding cluster ids cell `tof_tibble`. augment = TRUE, ncol(tof_tibble) + 1 columns: (unaltered) columns `tof_tibble` plus additional column encoding cluster ids.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_compute_km_curve.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute a Kaplan-Meier curve from sample-level survival data — tof_compute_km_curve","title":"Compute a Kaplan-Meier curve from sample-level survival data — tof_compute_km_curve","text":"Compute Kaplan-Meier curve sample-level survival data","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_compute_km_curve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute a Kaplan-Meier curve from sample-level survival data — tof_compute_km_curve","text":"","code":"tof_compute_km_curve(survival_curves)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_compute_km_curve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute a Kaplan-Meier curve from sample-level survival data — tof_compute_km_curve","text":"survival_curves tibble Kaplan-Meier curve computed. row must represent observation must two columns named \"time_to_event\" \"event\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_compute_km_curve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute a Kaplan-Meier curve from sample-level survival data — tof_compute_km_curve","text":"tibble 3 columns: time_to_event, survival_probability, is_censored (whether event censored timepoint).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cosine_dist.html","id":null,"dir":"Reference","previous_headings":"","what":"A function for finding the cosine distance between each of the rows of a numeric\nmatrix and a numeric vector. — tof_cosine_dist","title":"A function for finding the cosine distance between each of the rows of a numeric\nmatrix and a numeric vector. — tof_cosine_dist","text":"function finding cosine distance rows numeric matrix numeric vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cosine_dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function for finding the cosine distance between each of the rows of a numeric\nmatrix and a numeric vector. — tof_cosine_dist","text":"","code":"tof_cosine_dist(matrix, vector)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cosine_dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function for finding the cosine distance between each of the rows of a numeric\nmatrix and a numeric vector. — tof_cosine_dist","text":"matrix numeric matrix. vector numeric vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cosine_dist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function for finding the cosine distance between each of the rows of a numeric\nmatrix and a numeric vector. — tof_cosine_dist","text":"numeric vector distances length `nrow(matrix)` ith entry represents cosine distance ith row `matrix` `vector`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cosine_dist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A function for finding the cosine distance between each of the rows of a numeric\nmatrix and a numeric vector. — tof_cosine_dist","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an elastic net hyperparameter search grid of a specified size — tof_create_grid","title":"Create an elastic net hyperparameter search grid of a specified size — tof_create_grid","text":"function creates regular hyperparameter search grid (form tibble) specifying search space two hyperparameters generalized linear model using glmnet package: regularization penalty term lasso/ridge regression mixture term.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an elastic net hyperparameter search grid of a specified size — tof_create_grid","text":"","code":"tof_create_grid(   penalty_values,   mixture_values,   num_penalty_values = 5,   num_mixture_values = 5 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an elastic net hyperparameter search grid of a specified size — tof_create_grid","text":"penalty_values numeric vector unique elastic net penalty values (\"lambda\") include hyperparameter grid. unspecified, regular grid `num_penalty_values` 10^(-10) 10^(0) used. mixture_values numeric vector elastic net mixture values (\"alpha\") include hyperparameter grid. unspecified, regular grid `num_mixture_values` 0 1 used. num_penalty_values Optional. `penalty_values` supplied, `num_penalty_values` (integer) can given specify many equally-spaced penalty values 10^(-10) 1 included hyperparameter grid. method used, regular grid always returned. Defaults 5. num_mixture_values Optional. `mixture_values` supplied, `num_mixture_values` (integer) can given specify many equally-spaced penalty values 0 (ridge regression) 1 (lasso) included hyperparameter grid. method used, regular grid always returned. Defaults 5.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an elastic net hyperparameter search grid of a specified size — tof_create_grid","text":"tibble two numeric columns: `penalty` `mixture`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_grid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an elastic net hyperparameter search grid of a specified size — tof_create_grid","text":"","code":"tof_create_grid() #> # A tibble: 25 × 2 #>         penalty mixture #>           <dbl>   <dbl> #>  1 0.0000000001    0    #>  2 0.0000000001    0.25 #>  3 0.0000000001    0.5  #>  4 0.0000000001    0.75 #>  5 0.0000000001    1    #>  6 0.0000000316    0    #>  7 0.0000000316    0.25 #>  8 0.0000000316    0.5  #>  9 0.0000000316    0.75 #> 10 0.0000000316    1    #> # ℹ 15 more rows  tof_create_grid(num_penalty_values = 10, num_mixture_values = 5) #> # A tibble: 50 × 2 #>          penalty mixture #>            <dbl>   <dbl> #>  1 0.0000000001     0    #>  2 0.0000000001     0.25 #>  3 0.0000000001     0.5  #>  4 0.0000000001     0.75 #>  5 0.0000000001     1    #>  6 0.00000000129    0    #>  7 0.00000000129    0.25 #>  8 0.00000000129    0.5  #>  9 0.00000000129    0.75 #> 10 0.00000000129    1    #> # ℹ 40 more rows  tof_create_grid(penalty_values = c(0.01, 0.1, 0.5)) #> # A tibble: 15 × 2 #>    penalty mixture #>      <dbl>   <dbl> #>  1    0.01    0    #>  2    0.01    0.25 #>  3    0.01    0.5  #>  4    0.01    0.75 #>  5    0.01    1    #>  6    0.1     0    #>  7    0.1     0.25 #>  8    0.1     0.5  #>  9    0.1     0.75 #> 10    0.1     1    #> 11    0.5     0    #> 12    0.5     0.25 #> 13    0.5     0.5  #> 14    0.5     0.75 #> 15    0.5     1"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_recipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a recipe for preprocessing sample-level cytometry data for an elastic net model — tof_create_recipe","title":"Create a recipe for preprocessing sample-level cytometry data for an elastic net model — tof_create_recipe","text":"Create recipe preprocessing sample-level cytometry data elastic net model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_recipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a recipe for preprocessing sample-level cytometry data for an elastic net model — tof_create_recipe","text":"","code":"tof_create_recipe(   feature_tibble,   predictor_cols,   outcome_cols,   standardize_predictors = TRUE,   remove_zv_predictors = FALSE,   impute_missing_predictors = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_recipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a recipe for preprocessing sample-level cytometry data for an elastic net model — tof_create_recipe","text":"feature_tibble tibble row represents sample- patient- level observation, produced tof_extract_features. predictor_cols Unquoted column names indicating columns data contained `feature_tibble` used predictors elastic net model. Supports tidyselect helpers. outcome_cols Unquoted column names indicating columns `feature_tibble` used outcome variables elastic net model. Supports tidyselect helpers. standardize_predictors logical value indicating numeric predictor columns standardized (centered scaled) model fitting. Defaults TRUE. remove_zv_predictors logical value indicating predictor columns near-zero variance removed model fitting using step_nzv. Defaults FALSE. impute_missing_predictors logical value indicating predictor columns missing values imputed using k-nearest neighbors model fitting (see step_impute_knn). Imputation performed using observation's 5 nearest-neighbors. Defaults FALSE.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_recipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a recipe for preprocessing sample-level cytometry data for an elastic net model — tof_create_recipe","text":"recipe object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample.html","id":null,"dir":"Reference","previous_headings":"","what":"Downsample high-dimensional cytometry data. — tof_downsample","title":"Downsample high-dimensional cytometry data. — tof_downsample","text":"function downsamples number cells `tof_tbl` using one three methods (randomly sampling constant number cells, randomly sampling proportion cells, performing density-dependent downsampling per algorithm Qiu et al., (2011)).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downsample high-dimensional cytometry data. — tof_downsample","text":"","code":"tof_downsample(   tof_tibble,   group_cols = NULL,   ...,   method = c(\"constant\", \"prop\", \"density\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downsample high-dimensional cytometry data. — tof_downsample","text":"tof_tibble `tof_tbl` `tibble`. group_cols Unquoted names columns `tof_tibble` used define groups within downsampling performed. Supports tidyselect helpers. Defaults `NULL` (grouping). ... Additional arguments pass `tof_downsample_*` function family member corresponding chosen method. method string indicating downsampling method use: \"constant\" (default), \"prop\", \"density\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downsample high-dimensional cytometry data. — tof_downsample","text":"downsampled `tof_tbl` number columns input `tof_tibble`, fewer rows. number rows result depend chosen downsampling method.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downsample high-dimensional cytometry data. — tof_downsample","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  # sample 200 cells from the input data tof_downsample(     tof_tibble = sim_data,     num_cells = 200L,     method = \"constant\" ) #> # A tibble: 200 × 5 #>      cd45    cd38    cd34   cd19 cluster_id #>     <dbl>   <dbl>   <dbl>  <dbl> <chr>      #>  1  1.27  -0.576  -0.240  -1.38  q          #>  2 -0.328 -0.152   0.165   0.438 z          #>  3 -0.477  0.702  -2.68   -0.222 x          #>  4  0.124  0.0174  0.0884 -0.669 v          #>  5 -0.280 -2.40   -1.46    1.76  j          #>  6  0.688  1.02    0.416   2.54  t          #>  7 -2.25   0.717  -1.35   -0.769 x          #>  8 -0.419  1.20   -1.07   -0.367 p          #>  9  0.923  0.553  -0.224  -0.799 j          #> 10  0.521 -0.500   1.81    0.801 z          #> # ℹ 190 more rows  # sample 10% of all cells from the input data tof_downsample(     tof_tibble = sim_data,     prop_cells = 0.1,     method = \"prop\" ) #> # A tibble: 100 × 5 #>      cd45    cd38   cd34    cd19 cluster_id #>     <dbl>   <dbl>  <dbl>   <dbl> <chr>      #>  1  1.39   1.16   -0.481 -0.0421 i          #>  2  1.55   2.29    0.141  1.04   a          #>  3  1.29   0.451  -1.73  -0.455  o          #>  4 -0.605  1.55   -0.716  0.676  c          #>  5 -0.684  0.0113  0.300 -0.283  k          #>  6  0.549  0.740   0.263  0.247  a          #>  7  0.369 -0.675  -1.64   0.737  j          #>  8  0.860 -0.425  -0.477  3.04   i          #>  9 -1.48   0.702   0.207 -1.23   d          #> 10 -1.56   1.75   -0.176  0.0710 o          #> # ℹ 90 more rows  # sample ~10% of cells from the input data using density dependence tof_downsample(     tof_tibble = sim_data,     target_prop_cells = 0.1,     method = \"density\" ) #> # A tibble: 110 × 5 #>      cd45    cd38    cd34    cd19 cluster_id #>     <dbl>   <dbl>   <dbl>   <dbl> <chr>      #>  1  0.688  0.139   0.961  -0.601  n          #>  2  1.48   1.67    0.304   0.742  n          #>  3  0.124  0.0174  0.0884 -0.669  v          #>  4 -0.725 -1.95    0.760   0.844  p          #>  5 -1.33  -0.620  -1.01    0.202  z          #>  6  0.872 -0.676  -1.25    0.327  m          #>  7 -0.163  0.250  -1.09   -0.0590 h          #>  8 -1.48   0.702   0.207  -1.23   d          #>  9  0.266 -0.558  -0.546  -0.334  l          #> 10  0.287 -0.794   2.84   -1.49   i          #> # ℹ 100 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_constant.html","id":null,"dir":"Reference","previous_headings":"","what":"Downsample high-dimensional cytometry data by randomly selecting a constant number of cells per group. — tof_downsample_constant","title":"Downsample high-dimensional cytometry data by randomly selecting a constant number of cells per group. — tof_downsample_constant","text":"function downsamples number cells `tof_tbl` randomly selecting `num_cells` cells unique combination values `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_constant.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downsample high-dimensional cytometry data by randomly selecting a constant number of cells per group. — tof_downsample_constant","text":"","code":"tof_downsample_constant(tof_tibble, group_cols = NULL, num_cells)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_constant.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downsample high-dimensional cytometry data by randomly selecting a constant number of cells per group. — tof_downsample_constant","text":"tof_tibble `tof_tbl` `tibble`. group_cols Unquoted names columns `tof_tibble` used define groups `num_cells` downsampled. Supports tidyselect helpers. Defaults `NULL` (grouping). num_cells integer number cells sampled group defined `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_constant.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downsample high-dimensional cytometry data by randomly selecting a constant number of cells per group. — tof_downsample_constant","text":"`tof_tbl` number columns input `tof_tibble`, fewer rows. Specifically, number rows `num_cells` multiplied number unique combinations values `group_cols`. group fewer `num_cells` number cells, cells group kept.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_constant.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downsample high-dimensional cytometry data by randomly selecting a constant number of cells per group. — tof_downsample_constant","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  # sample 500 cells from the input data tof_downsample_constant(     tof_tibble = sim_data,     num_cells = 500L ) #> # A tibble: 500 × 5 #>        cd45    cd38   cd34   cd19 cluster_id #>       <dbl>   <dbl>  <dbl>  <dbl> <chr>      #>  1 -1.49    -0.128  -0.444 -1.19  b          #>  2 -0.258   -0.693   1.63  -0.550 a          #>  3  1.08    -1.98   -0.566 -1.52  y          #>  4  0.678    0.399   1.48   0.658 p          #>  5  0.649    1.72    2.99  -0.389 b          #>  6  0.228    0.955  -0.938  1.19  v          #>  7  0.0283   0.933   0.388  0.292 z          #>  8  0.00467  0.284  -0.718  2.02  h          #>  9 -0.253    0.0427  1.45   0.761 u          #> 10 -0.507   -0.950  -0.461 -0.324 l          #> # ℹ 490 more rows  # sample 20 cells per cluster from the input data tof_downsample_constant(     tof_tibble = sim_data,     group_cols = cluster_id,     num_cells = 20L ) #> # A tibble: 520 × 5 #>        cd45   cd38   cd34    cd19 cluster_id #>       <dbl>  <dbl>  <dbl>   <dbl> <chr>      #>  1 -0.179    0.907  0.319 -1.35   l          #>  2  0.937   -0.302  0.626  0.303  j          #>  3  0.706    0.589 -0.360  0.519  x          #>  4 -0.172    0.881 -0.317  0.399  u          #>  5 -1.10    -0.416  0.877  0.191  x          #>  6 -0.687    0.967  0.507 -0.738  r          #>  7  0.494   -0.261 -0.278  1.16   a          #>  8  1.33    -0.294 -1.65   0.0857 b          #>  9  1.46    -0.419 -0.345  1.63   b          #> 10  0.00467  0.284 -0.718  2.02   h          #> # ℹ 510 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_density","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_density","text":"function downsamples number cells `tof_tbl` using density-dependent downsampling algorithm described Qiu et al., (2011).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_density","text":"","code":"tof_downsample_density(   tof_tibble,   group_cols = NULL,   density_cols = where(tof_is_numeric),   target_num_cells,   target_prop_cells,   target_percentile = 0.03,   outlier_percentile = 0.01,   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\"),   density_estimation_method = c(\"mean_distance\", \"sum_distance\", \"spade\"),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_density","text":"tof_tibble `tof_tbl` `tibble`. group_cols Unquoted names columns `tof_tibble` used define groups within downsampling performed. Supports tidyselect helpers. Defaults `NULL` (grouping). density_cols Unquoted names columns `tof_tibble` use density estimation cell. Defaults numeric columns `tof_tibble`. target_num_cells approximate constant number cells (0 1) sampled group defined `group_cols`. Slightly fewer cells may returned due density calculation performed. target_prop_cells approximate proportion cells (0 1) sampled group defined `group_cols`. Slightly fewer cells may returned due density calculation performed. Ignored `target_num_cells` specified. target_percentile local density percentile (.e. value 0 1) downsampling procedure adjust cells. short, algorithm continue remove cells input `tof_tibble` local densities remaining cells equal `target_percentile`. Lower values result cells removed. See Qiu et al., (2011) details. Defaults 0.1 (10th percentile local densities). Ignored either `target_num_cells` `target_prop_cells` specified. outlier_percentile local density percentile (.e. value 0 1) cells considered outliers (discarded). Cells local density `outlier_percentile` never selected downsampling procedure. Defaults 0.01 (cells 1st local density percentile removed). distance_function string indicating distance function use cell--cell distance calculations. Options include \"euclidean\" (default) \"cosine\" distances. density_estimation_method string indicating algorithm used calculate local density estimate cell. Options include k-nearest neighbor density estimation using mean distance cell's k-nearest neighbors (\"mean_distance\"; default), k-nearest neighbor density estimation using summed distance cell's k nearest neighbors (\"sum_distance\") counting number neighboring cells within spherical radius around cell described Qiu et al., 2011  (\"spade\"). \"spade\" often produces best results, slower knn-density estimation methods. ... Optional additional arguments pass tof_knn_density tof_spade_density.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_density","text":"`tof_tbl` number columns input `tof_tibble`, fewer rows. number rows depend chosen value `target_percentile`, fewer cells selected lower values `target_percentile`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_density","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  tof_downsample_density(     tof_tibble = sim_data,     density_cols = c(cd45, cd34, cd38),     target_prop_cells = 0.5,     density_estimation_method = \"spade\" ) #> # A tibble: 494 × 4 #>      cd45   cd38    cd34    cd19 #>     <dbl>  <dbl>   <dbl>   <dbl> #>  1  0.817 -0.339 -1.30    0.0415 #>  2  1.38   0.319 -0.114   0.606  #>  3 -0.318  0.477  1.02    0.172  #>  4  0.491  2.49   0.0921  0.873  #>  5 -1.43   0.451  2.73   -0.783  #>  6  0.703  1.56   1.01   -1.56   #>  7 -0.490 -0.770 -0.345  -0.484  #>  8  0.402 -1.46  -0.152  -0.415  #>  9 -0.645  1.35   0.0769 -0.230  #> 10 -0.386 -0.143 -0.872   0.925  #> # ℹ 484 more rows  tof_downsample_density(     tof_tibble = sim_data,     density_cols = c(cd45, cd34, cd38),     target_num_cells = 200L,     density_estimation_method = \"spade\" ) #> # A tibble: 205 × 4 #>       cd45   cd38    cd34   cd19 #>      <dbl>  <dbl>   <dbl>  <dbl> #>  1 -1.43    1.12  -0.532  -0.280 #>  2 -0.318   0.477  1.02    0.172 #>  3  0.491   2.49   0.0921  0.873 #>  4 -0.0853  1.14   0.433   1.37  #>  5 -1.43    0.451  2.73   -0.783 #>  6 -0.490  -0.770 -0.345  -0.484 #>  7 -0.645   1.35   0.0769 -0.230 #>  8 -0.386  -0.143 -0.872   0.925 #>  9 -0.998   2.81   0.594   0.619 #> 10 -0.381  -1.42   0.349  -0.652 #> # ℹ 195 more rows  tof_downsample_density(     tof_tibble = sim_data,     density_cols = c(cd45, cd34, cd38),     target_num_cells = 200L,     density_estimation_method = \"mean_distance\" ) #> # A tibble: 186 × 4 #>      cd45   cd38    cd34   cd19 #>     <dbl>  <dbl>   <dbl>  <dbl> #>  1  1.38   0.319 -0.114   0.606 #>  2  0.491  2.49   0.0921  0.873 #>  3  0.703  1.56   1.01   -1.56  #>  4  0.402 -1.46  -0.152  -0.415 #>  5 -0.262 -1.35  -0.558   0.169 #>  6 -0.998  2.81   0.594   0.619 #>  7 -0.272  0.715 -0.689  -0.722 #>  8  0.398  0.233 -0.639  -0.339 #>  9 -2.15  -1.50   1.07   -0.552 #> 10  1.94   1.75   0.0351  0.713 #> # ℹ 176 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_prop.html","id":null,"dir":"Reference","previous_headings":"","what":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_prop","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_prop","text":"function downsamples number cells `tof_tbl` randomly selecting `prop_cells` proportion total number cells unique combination values `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_prop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_prop","text":"","code":"tof_downsample_prop(tof_tibble, group_cols = NULL, prop_cells)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_prop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_prop","text":"tof_tibble `tof_tbl` `tibble`. group_cols Unquoted names columns `tof_tibble` used define groups `prop_cells` downsampled. Supports tidyselect helpers. Defaults `NULL` (grouping). prop_cells proportion cells (0 1) sampled group defined `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_prop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_prop","text":"`tof_tbl` number columns input `tof_tibble`, fewer rows. Specifically, number rows `prop_cells` times number rows input `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_prop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_prop","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  # sample 10% of all cells from the input data tof_downsample_prop(     tof_tibble = sim_data,     prop_cells = 0.1 ) #> # A tibble: 100 × 5 #>      cd45    cd38     cd34   cd19 cluster_id #>     <dbl>   <dbl>    <dbl>  <dbl> <chr>      #>  1 -0.294 -0.897  -0.632   -0.129 o          #>  2 -0.324  0.734   0.00271 -1.83  k          #>  3 -0.461  1.42    0.244    1.48  o          #>  4  0.851 -0.209   0.601    0.610 k          #>  5  1.01   0.0457 -0.0864   0.420 r          #>  6  0.439 -1.18   -1.62     1.93  q          #>  7  0.227 -1.45   -2.57     1.32  j          #>  8  1.27  -0.879  -0.0882  -0.170 p          #>  9  1.29   0.781  -0.934    0.971 a          #> 10 -2.33  -0.253  -1.11     2.78  g          #> # ℹ 90 more rows  # sample 10% of all cells from each cluster in the input data tof_downsample_prop(     tof_tibble = sim_data,     group_cols = cluster_id,     prop_cells = 0.1 ) #> # A tibble: 89 × 5 #>       cd45    cd38    cd34   cd19 cluster_id #>      <dbl>   <dbl>   <dbl>  <dbl> <chr>      #>  1  0.906   0.493   0.0767  0.208 a          #>  2 -0.713   1.14    1.05   -0.282 a          #>  3 -0.0586  1.75    0.589  -0.653 a          #>  4 -0.0914  1.69   -0.533   0.749 a          #>  5  0.618   1.25   -0.821  -2.08  b          #>  6 -0.246  -0.503  -0.648  -1.09  b          #>  7 -0.0737 -0.467  -2.30   -1.27  b          #>  8 -0.882   0.301   0.403  -1.42  b          #>  9  0.643  -0.429   0.487   0.698 c          #> 10 -1.46    0.0138  0.342  -0.528 c          #> # ℹ 79 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_estimate_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate the local densities for all cells in a high-dimensional cytometry dataset. — tof_estimate_density","title":"Estimate the local densities for all cells in a high-dimensional cytometry dataset. — tof_estimate_density","text":"function wrapper around tidytof's tof_*_density() function family. performs local density estimation high-dimensional cytometry data using user-specified method (3 choices) method's corresponding input parameters.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_estimate_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate the local densities for all cells in a high-dimensional cytometry dataset. — tof_estimate_density","text":"","code":"tof_estimate_density(   tof_tibble,   distance_cols = where(tof_is_numeric),   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\"),   normalize = TRUE,   ...,   augment = TRUE,   method = c(\"mean_distance\", \"sum_distance\", \"spade\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_estimate_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate the local densities for all cells in a high-dimensional cytometry dataset. — tof_estimate_density","text":"tof_tibble `tof_tbl` `tibble`. distance_cols Unquoted names columns `tof_tibble` use calculating cell--cell distances local density estimation cell. Defaults numeric columns `tof_tibble`. distance_function string indicating distance function use calculating cell--cell distances local density estimation. Options include \"euclidean\" (default) \"cosine\". normalize boolean value indicating vector local density estimates normalized values 0 1. Defaults TRUE. ... Additional arguments pass `tof_*_density()` function family member corresponding chosen `method`. augment boolean value indicating output column-bind local density estimates cell new column `tof_tibble` (TRUE; default) single-column tibble including local density estimates returned (FALSE). method string indicating local density estimation method used. Valid values include \"mean_distance\", \"sum_distance\", \"spade\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_estimate_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate the local densities for all cells in a high-dimensional cytometry dataset. — tof_estimate_density","text":"`tof_tbl` `tibble` augment = FALSE, single column encoding local density estimates cell `tof_tibble`. augment = TRUE, ncol(tof_tibble) + 1 columns: (unaltered) columns `tof_tibble` plus additional column encoding local density estimates.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_estimate_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate the local densities for all cells in a high-dimensional cytometry dataset. — tof_estimate_density","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  # perform the density estimation tof_estimate_density(tof_tibble = sim_data, method = \"spade\") #> # A tibble: 1,000 × 5 #>       cd45   cd38    cd34    cd19 .spade_density #>      <dbl>  <dbl>   <dbl>   <dbl>          <dbl> #>  1 -0.785  -0.826 -0.600   1.08                1 #>  2  1.20    0.556  0.0872 -0.566               1 #>  3  0.0521  0.508 -0.196   2.77                1 #>  4 -0.635  -1.01  -0.0110 -2.05                1 #>  5  0.889   0.199 -1.51    0.467               1 #>  6 -0.623   1.66   0.909   0.751               1 #>  7  0.978   1.72  -1.18    0.0845              1 #>  8  0.0450  2.07  -0.677  -0.564               1 #>  9 -0.527  -2.22   1.37   -0.387               1 #> 10  0.609  -0.205 -0.175   0.332               1 #> # ℹ 990 more rows  # perform the density estimation with a smaller search radius around # each cell tof_estimate_density(     tof_tibble = sim_data,     alpha_multiplier = 2,     method = \"spade\" ) #> # A tibble: 1,000 × 5 #>       cd45   cd38    cd34    cd19 .spade_density #>      <dbl>  <dbl>   <dbl>   <dbl>          <dbl> #>  1 -0.785  -0.826 -0.600   1.08              1   #>  2  1.20    0.556  0.0872 -0.566             1   #>  3  0.0521  0.508 -0.196   2.77              0.1 #>  4 -0.635  -1.01  -0.0110 -2.05              0.6 #>  5  0.889   0.199 -1.51    0.467             1   #>  6 -0.623   1.66   0.909   0.751             1   #>  7  0.978   1.72  -1.18    0.0845            0.7 #>  8  0.0450  2.07  -0.677  -0.564             0.5 #>  9 -0.527  -2.22   1.37   -0.387             0.1 #> 10  0.609  -0.205 -0.175   0.332             1   #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_central_tendency.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the central tendencies of CyTOF markers in each cluster in a `tof_tibble`. — tof_extract_central_tendency","title":"Extract the central tendencies of CyTOF markers in each cluster in a `tof_tibble`. — tof_extract_central_tendency","text":"feature extraction function calculates user-specified measurement central tendency (.e. median mode) cells cluster `tof_tibble` across user-specified selection CyTOF markers. calculations can done either overall (across cells dataset) breaking cells subgroups using `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_central_tendency.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the central tendencies of CyTOF markers in each cluster in a `tof_tibble`. — tof_extract_central_tendency","text":"","code":"tof_extract_central_tendency(   tof_tibble,   cluster_col,   group_cols = NULL,   marker_cols = where(tof_is_numeric),   stimulation_col = NULL,   central_tendency_function = stats::median,   format = c(\"wide\", \"long\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_central_tendency.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the central tendencies of CyTOF markers in each cluster in a `tof_tibble`. — tof_extract_central_tendency","text":"tof_tibble `tof_tibble` `tibble` row represents single cell column represents CyTOF measurement piece metadata (.e. cluster id, patient id, etc.) cell. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. group_cols Unquoted column names representing columns `tof_tibble` used break rows `tof_tibble` subgroups feature extraction calculation. Defaults NULL (.e. performing extraction without subgroups). marker_cols Unquoted column names representing columns `tof_tibble` (.e. CyTOF protein measurements) included feature extraction calculation. Defaults numeric (integer double) columns. Supports tidyselection. stimulation_col Optional. unquoted column name indicates column `tof_tibble` contains information stimulation condition cell exposed data acquisition. provided, feature extraction broken subgroups stimulation condition (features stimulation condition included features wide format). central_tendency_function function used calculate measurement central tendency cluster (used dependent variable linear model). Defaults median. format string indicating data returned \"wide\" format (default; cluster feature given column) \"long\" format (cluster feature provided row).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_central_tendency.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the central tendencies of CyTOF markers in each cluster in a `tof_tibble`. — tof_extract_central_tendency","text":"tibble. format == \"wide\", tibble 1 row combination grouping variables provided `group_cols` one column grouping variable, one column extracted feature (central tendency given marker given cluster). names column containing cluster features obtained using following pattern: \"{marker_id}@{cluster_id}_ct\". format == \"long\", tibble 1 row combination grouping variables `group_cols`, cluster id (.e. level) `cluster_col`, marker `marker_cols`. one column grouping variable, one column cluster ids, one column CyTOF channel names, one column (`value`) containing features.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_central_tendency.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract the central tendencies of CyTOF markers in each cluster in a `tof_tibble`. — tof_extract_central_tendency","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         patient = sample(c(\"kirby\", \"mario\"), size = 1000, replace = TRUE),         stim = sample(c(\"basal\", \"stim\"), size = 1000, replace = TRUE)     )  # extract proportion of each cluster in each patient in wide format tof_extract_central_tendency(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient ) #> # A tibble: 2 × 105 #>   patient `cd45@a_ct` `cd38@a_ct` `cd34@a_ct` `cd19@a_ct` `cd45@b_ct` #>   <chr>         <dbl>       <dbl>       <dbl>       <dbl>       <dbl> #> 1 kirby        -0.211       0.272     -0.356       0.0907     -0.0320 #> 2 mario        -0.265      -0.220     -0.0790     -0.207       0.249  #> # ℹ 99 more variables: `cd38@b_ct` <dbl>, `cd34@b_ct` <dbl>, `cd19@b_ct` <dbl>, #> #   `cd45@c_ct` <dbl>, `cd38@c_ct` <dbl>, `cd34@c_ct` <dbl>, `cd19@c_ct` <dbl>, #> #   `cd45@d_ct` <dbl>, `cd38@d_ct` <dbl>, `cd34@d_ct` <dbl>, `cd19@d_ct` <dbl>, #> #   `cd45@e_ct` <dbl>, `cd38@e_ct` <dbl>, `cd34@e_ct` <dbl>, `cd19@e_ct` <dbl>, #> #   `cd45@f_ct` <dbl>, `cd38@f_ct` <dbl>, `cd34@f_ct` <dbl>, `cd19@f_ct` <dbl>, #> #   `cd45@g_ct` <dbl>, `cd38@g_ct` <dbl>, `cd34@g_ct` <dbl>, `cd19@g_ct` <dbl>, #> #   `cd45@h_ct` <dbl>, `cd38@h_ct` <dbl>, `cd34@h_ct` <dbl>, …  # extract proportion of each cluster in each patient in long format tof_extract_central_tendency(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     format = \"long\" ) #> # A tibble: 208 × 4 #>    patient cluster_id channel  values #>    <chr>   <chr>      <chr>     <dbl> #>  1 kirby   a          cd45    -0.211  #>  2 kirby   a          cd38     0.272  #>  3 kirby   a          cd34    -0.356  #>  4 kirby   a          cd19     0.0907 #>  5 kirby   b          cd45    -0.0320 #>  6 kirby   b          cd38     0.102  #>  7 kirby   b          cd34    -0.0760 #>  8 kirby   b          cd19    -0.0296 #>  9 kirby   c          cd45     0.0872 #> 10 kirby   c          cd38     0.305  #> # ℹ 198 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_emd.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract aggregated features from CyTOF data using earth-mover's distance (EMD) — tof_extract_emd","title":"Extract aggregated features from CyTOF data using earth-mover's distance (EMD) — tof_extract_emd","text":"feature extraction function calculates earth-mover's distance (EMD) stimulated unstimulated (\"basal\") experimental conditions samples CyTOF experiment. calculation performed across user-specified selection CyTOF antigens can performed either overall (across cells dataset) breaking cells subgroups using `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_emd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract aggregated features from CyTOF data using earth-mover's distance (EMD) — tof_extract_emd","text":"","code":"tof_extract_emd(   tof_tibble,   cluster_col,   group_cols = NULL,   marker_cols = where(tof_is_numeric),   emd_col,   reference_level,   format = c(\"wide\", \"long\"),   num_bins = 100 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_emd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract aggregated features from CyTOF data using earth-mover's distance (EMD) — tof_extract_emd","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. group_cols Unquoted column names representing columns `tof_tibble` used break rows `tof_tibble` subgroups feature extraction calculation. Defaults NULL (.e. performing extraction without subgroups). marker_cols Unquoted column names representing columns `tof_tibble` (.e. CyTOF protein measurements) included earth-mover's distance calculation. Defaults numeric (integer double) columns. Supports tidyselect helpers. emd_col unquoted column name indicates column `tof_tibble` used group cells different distributions compared one another EMD calculation. example, want compare marker expression distributions across stimulation conditions, `emd_col` column `tof_tibble` containing information stimulation condition cell exposed data acquisition. provided, feature extraction broken subgroups stimulation condition (features stimulation condition included features wide format). reference_level string indicating value `emd_col` corresponds \"reference\" value values `emd_col` compared. example, `emd_col` represents stimulation condition cell, reference_level might take value \"basal\" \"unstimulated\" want compare stimulation basal state. format string indicating data returned \"wide\" format (default; cluster feature given column) \"long\" format (cluster feature provided row). num_bins Optional. number bins use dividing one-dimensional marker distributions discrete segments EMD calculation. Defaults 100.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_emd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract aggregated features from CyTOF data using earth-mover's distance (EMD) — tof_extract_emd","text":"tibble. format == \"wide\", tibble 1 row combination grouping variables provided `group_cols` one column grouping variable, one column extracted feature (EMD distribution given marker given cluster basal condition distribution marker given cluster stimulated condition). names column containing cluster features obtained using following pattern: \"{stimulation_id}_{marker_id}@{cluster_id}_emd\". format == \"long\", tibble 1 row combination grouping variables `group_cols`, cluster id (.e. level) `cluster_col`, marker `marker_cols`. one column grouping variable, one column cluster ids, one column CyTOF channel names, one column (`value`) containing features.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_emd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract aggregated features from CyTOF data using earth-mover's distance (EMD) — tof_extract_emd","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         patient = sample(c(\"kirby\", \"mario\"), size = 1000, replace = TRUE),         stim = sample(c(\"basal\", \"stim\"), size = 1000, replace = TRUE)     )  # extract emd of each cluster in each patient (using the \"basal\" stim # condition as a reference) in wide format tof_extract_emd(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     emd_col = stim,     reference_level = \"basal\" ) #> # A tibble: 2 × 105 #>   patient `stim_cd45@t_emd` `stim_cd38@t_emd` `stim_cd34@t_emd` #>   <chr>               <dbl>             <dbl>             <dbl> #> 1 kirby                12.8              19.0              8.42 #> 2 mario                NA                NA               NA    #> # ℹ 101 more variables: `stim_cd19@t_emd` <dbl>, `stim_cd45@q_emd` <dbl>, #> #   `stim_cd38@q_emd` <dbl>, `stim_cd34@q_emd` <dbl>, `stim_cd19@q_emd` <dbl>, #> #   `stim_cd45@m_emd` <dbl>, `stim_cd38@m_emd` <dbl>, `stim_cd34@m_emd` <dbl>, #> #   `stim_cd19@m_emd` <dbl>, `stim_cd45@z_emd` <dbl>, `stim_cd38@z_emd` <dbl>, #> #   `stim_cd34@z_emd` <dbl>, `stim_cd19@z_emd` <dbl>, `stim_cd45@x_emd` <dbl>, #> #   `stim_cd38@x_emd` <dbl>, `stim_cd34@x_emd` <dbl>, `stim_cd19@x_emd` <dbl>, #> #   `stim_cd45@j_emd` <dbl>, `stim_cd38@j_emd` <dbl>, …  # extract emd of each cluster (using the \"basal\" stim # condition as a reference) in long format tof_extract_emd(     tof_tibble = sim_data,     cluster_col = cluster_id,     emd_col = stim,     reference_level = \"basal\",     format = \"long\" ) #> # A tibble: 104 × 4 #>    cluster_id marker stimulation   emd #>    <chr>      <chr>  <chr>       <dbl> #>  1 t          cd45   stim         6.00 #>  2 t          cd38   stim        10.3  #>  3 t          cd34   stim         5.44 #>  4 t          cd19   stim         4.95 #>  5 q          cd45   stim         8.41 #>  6 q          cd38   stim        12.7  #>  7 q          cd34   stim        15.7  #>  8 q          cd19   stim         3.68 #>  9 m          cd45   stim        11.7  #> 10 m          cd38   stim        12.3  #> # ℹ 94 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","title":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","text":"function wraps members `tof_extract_*` function family extract sample-level features lineage (.e. cell surface antigen) CyTOF channels assumed stable across stimulation conditions signaling CyTOF channels assumed change across stimulation conditions. Features extracted cluster within independent sample (defined `group_cols` argument).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","text":"","code":"tof_extract_features(   tof_tibble,   cluster_col,   group_cols = NULL,   stimulation_col = NULL,   lineage_cols,   signaling_cols,   central_tendency_function = stats::median,   signaling_method = c(\"threshold\", \"emd\", \"jsd\", \"central tendency\"),   basal_level = NULL,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. group_cols Unquoted column names representing columns `tof_tibble` used break rows `tof_tibble` subgroups feature extraction calculation. Defaults NULL (.e. performing extraction without subgroups). stimulation_col Optional. unquoted column name indicates column `tof_tibble` contains information stimulation condition cell exposed data acquisition. provided, feature extraction broken subgroups stimulation condition (features stimulation condition included features wide format). lineage_cols Unquoted column names representing columns `tof_tibble` (.e. CyTOF protein measurements) considered lineage markers feature extraction calculation. Supports tidyselect helpers. signaling_cols Unquoted column names representing columns `tof_tibble` (.e. CyTOF protein measurements) considered signaling markers feature extraction calculation. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster (used dependent variable linear model). Defaults median. signaling_method string indicating feature extraction method use signaling markers (identified `signaling_cols` argument). Options \"threshold\" (default), \"emd\", \"jsd\", \"central tendency\". basal_level string indicating value `stimulation_col` corresponds basal stimulation condition (.e. \"basal\" \"unstimulated\"). ... Optional additional arguments passed tof_extract_threshold, tof_extract_emd, tof_extract_jsd.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","text":"tibble. output tibble 1 row combination grouping variables provided `group_cols` (thus, row represent considered single \"sample\" based grouping provided). one column grouping variable one column extracted feature (\"wide\" format).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_features.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","text":"Lineage channels specified using `lineage_cols` argument, extracted features measurements central tendency (computed user-supplied `central_tendency_function`). Signaling channels specified using `signaling_cols` argument, extracted features depend user's chosen `signaling_method`. `signaling method` == \"threshold\" (default), tof_extract_threshold used calculate proportion cells cluster signaling marker expression `threshold` stimulation condition. `signaling_method` == \"emd\" `signaling_method` == \"jsd\", tof_extract_emd tof_extract_jsd used calculate earth-mover's distance (EMD) Jensen-Shannon Distance (JSD), respectively, basal condition stimulated conditions cluster sample. Finally, none options chosen, tof_extract_central_tendency used calculate measurements central tendency. addition, tof_extract_proportion used extract proportion cells cluster computed sample. calculations can performed either overall (across cells dataset) breaking cells subgroups using `group_cols`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_features.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         patient = sample(c(\"kirby\", \"mario\"), size = 1000, replace = TRUE),         stim = sample(c(\"basal\", \"stim\"), size = 1000, replace = TRUE)     )  # extract the following features from each cluster in each # patient/stimulation: #    - proportion of each cluster #    - central tendency (median) of cd45 and cd38 in each cluster #    - the proportion of cells in each cluster with cd34 expression over #      the default threshold (asinh(10 / 5)) tof_extract_features(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     lineage_cols = c(cd45, cd38),     signaling_cols = cd34,     stimulation_col = stim ) #> # A tibble: 2 × 131 #>   patient `prop@a` `prop@b` `prop@c` `prop@d` `prop@e` `prop@f` `prop@g` #>   <chr>      <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl> #> 1 kirby     0.0437   0.0312   0.0395   0.0187   0.0457   0.0499   0.0499 #> 2 mario     0.0250   0.0405   0.0385   0.0462   0.0366   0.0289   0.0482 #> # ℹ 123 more variables: `prop@h` <dbl>, `prop@i` <dbl>, `prop@j` <dbl>, #> #   `prop@k` <dbl>, `prop@l` <dbl>, `prop@m` <dbl>, `prop@n` <dbl>, #> #   `prop@o` <dbl>, `prop@p` <dbl>, `prop@q` <dbl>, `prop@r` <dbl>, #> #   `prop@s` <dbl>, `prop@t` <dbl>, `prop@u` <dbl>, `prop@v` <dbl>, #> #   `prop@w` <dbl>, `prop@x` <dbl>, `prop@y` <dbl>, `prop@z` <dbl>, #> #   `cd45@a_ct` <dbl>, `cd38@a_ct` <dbl>, `cd45@b_ct` <dbl>, `cd38@b_ct` <dbl>, #> #   `cd45@c_ct` <dbl>, `cd38@c_ct` <dbl>, `cd45@d_ct` <dbl>, …  # extract the following features from each cluster in each # patient/stimulation: #    - proportion of each cluster #    - central tendency (mean) of cd45 and cd38 in each cluster #    - the earth mover's distance between each cluster's cd34 histogram in #      the \"basal\" and \"stim\" conditions tof_extract_features(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     lineage_cols = c(cd45, cd38),     signaling_cols = cd34,     central_tendency_function = mean,     stimulation_col = stim,     signaling_method = \"emd\",     basal_level = \"basal\" ) #> # A tibble: 2 × 131 #>   patient `prop@a` `prop@b` `prop@c` `prop@d` `prop@e` `prop@f` `prop@g` #>   <chr>      <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl> #> 1 kirby     0.0437   0.0312   0.0395   0.0187   0.0457   0.0499   0.0499 #> 2 mario     0.0250   0.0405   0.0385   0.0462   0.0366   0.0289   0.0482 #> # ℹ 123 more variables: `prop@h` <dbl>, `prop@i` <dbl>, `prop@j` <dbl>, #> #   `prop@k` <dbl>, `prop@l` <dbl>, `prop@m` <dbl>, `prop@n` <dbl>, #> #   `prop@o` <dbl>, `prop@p` <dbl>, `prop@q` <dbl>, `prop@r` <dbl>, #> #   `prop@s` <dbl>, `prop@t` <dbl>, `prop@u` <dbl>, `prop@v` <dbl>, #> #   `prop@w` <dbl>, `prop@x` <dbl>, `prop@y` <dbl>, `prop@z` <dbl>, #> #   `cd45@a_ct` <dbl>, `cd38@a_ct` <dbl>, `cd45@b_ct` <dbl>, `cd38@b_ct` <dbl>, #> #   `cd45@c_ct` <dbl>, `cd38@c_ct` <dbl>, `cd45@d_ct` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_jsd.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract aggregated features from CyTOF data using the Jensen-Shannon Distance (JSD) — tof_extract_jsd","title":"Extract aggregated features from CyTOF data using the Jensen-Shannon Distance (JSD) — tof_extract_jsd","text":"feature extraction function calculates Jensen-Shannon Distance (JSD) stimulated unstimulated (\"basal\") experimental conditions samples CyTOF experiment. calculation performed across user-specified selection CyTOF antigens can performed either overall (across cells dataset) breaking cells subgroups using `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_jsd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract aggregated features from CyTOF data using the Jensen-Shannon Distance (JSD) — tof_extract_jsd","text":"","code":"tof_extract_jsd(   tof_tibble,   cluster_col,   group_cols = NULL,   marker_cols = where(tof_is_numeric),   jsd_col,   reference_level,   format = c(\"wide\", \"long\"),   num_bins = 100 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_jsd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract aggregated features from CyTOF data using the Jensen-Shannon Distance (JSD) — tof_extract_jsd","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. group_cols Unquoted column names representing columns `tof_tibble` used break rows `tof_tibble` subgroups feature extraction calculation. Defaults NULL (.e. performing extraction without subgroups). marker_cols Unquoted column names representing columns `tof_tibble` (.e. CyTOF protein measurements) included feature extraction calculation. Defaults numeric (integer double) columns. Supports tidyselect helpers. jsd_col unquoted column name indicates column `tof_tibble` contains information stimulation condition cell exposed data acquisition. provided, feature extraction broken subgroups stimulation condition (features stimulation condition included features wide format). reference_level string indicating value `jsd_col` corresponds basal stimulation condition (.e. \"basal\" \"unstimulated\"). format string indicating data returned \"wide\" format (default; cluster feature given column) \"long\" format (cluster feature provided row). num_bins Optional. number bins use dividing one-dimensional marker distributions discrete segments JSD calculation. Defaults 100.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_jsd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract aggregated features from CyTOF data using the Jensen-Shannon Distance (JSD) — tof_extract_jsd","text":"tibble. format == \"wide\", tibble 1 row combination grouping variables provided `group_cols` one column grouping variable, one column extracted feature (JSD distribution given marker given cluster basal condition distribution marker cluster stimulated condition). names column containing cluster features obtained using following pattern: \"{stimulation_id}_{marker_id}@{cluster_id}_jsd\". format == \"long\", tibble 1 row combination grouping variables `group_cols`, cluster id (.e. level) `cluster_col`, marker `marker_cols`. one column grouping variable, one column cluster ids, one column CyTOF channel names, one column (`value`) containing features.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_jsd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract aggregated features from CyTOF data using the Jensen-Shannon Distance (JSD) — tof_extract_jsd","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         patient = sample(c(\"kirby\", \"mario\"), size = 1000, replace = TRUE),         stim = sample(c(\"basal\", \"stim\"), size = 1000, replace = TRUE)     )  # extract jsd of each cluster in each patient (using the \"basal\" stim # condition as a reference) in wide format tof_extract_jsd(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     jsd_col = stim,     reference_level = \"basal\" ) #> # A tibble: 2 × 105 #>   patient `stim_cd45@g_jsd` `stim_cd38@g_jsd` `stim_cd34@g_jsd` #>   <chr>               <dbl>             <dbl>             <dbl> #> 1 kirby                  NA                NA                NA #> 2 mario                  NA                NA                NA #> # ℹ 101 more variables: `stim_cd19@g_jsd` <dbl>, `stim_cd45@q_jsd` <dbl>, #> #   `stim_cd38@q_jsd` <dbl>, `stim_cd34@q_jsd` <dbl>, `stim_cd19@q_jsd` <dbl>, #> #   `stim_cd45@e_jsd` <dbl>, `stim_cd38@e_jsd` <dbl>, `stim_cd34@e_jsd` <dbl>, #> #   `stim_cd19@e_jsd` <dbl>, `stim_cd45@c_jsd` <dbl>, `stim_cd38@c_jsd` <dbl>, #> #   `stim_cd34@c_jsd` <dbl>, `stim_cd19@c_jsd` <dbl>, `stim_cd45@l_jsd` <dbl>, #> #   `stim_cd38@l_jsd` <dbl>, `stim_cd34@l_jsd` <dbl>, `stim_cd19@l_jsd` <dbl>, #> #   `stim_cd45@p_jsd` <dbl>, `stim_cd38@p_jsd` <dbl>, …  # extract jsd of each cluster (using the \"basal\" stim # condition as a reference) in long format tof_extract_jsd(     tof_tibble = sim_data,     cluster_col = cluster_id,     jsd_col = stim,     reference_level = \"basal\",     format = \"long\" ) #> # A tibble: 104 × 4 #>    cluster_id marker stimulation   jsd #>    <chr>      <chr>  <chr>       <dbl> #>  1 g          cd45   stim        0.785 #>  2 g          cd38   stim        0.571 #>  3 g          cd34   stim        0.714 #>  4 g          cd19   stim        0.831 #>  5 q          cd45   stim        0.722 #>  6 q          cd38   stim        0.722 #>  7 q          cd34   stim        0.737 #>  8 q          cd19   stim        0.798 #>  9 e          cd45   stim        0.721 #> 10 e          cd38   stim        0.861 #> # ℹ 94 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_proportion.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the proportion of cells in each cluster in a `tof_tibble`. — tof_extract_proportion","title":"Extract the proportion of cells in each cluster in a `tof_tibble`. — tof_extract_proportion","text":"feature extraction function allows calculate proportion cells cluster `tof_tibble` - either overall broken subgroups using `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_proportion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the proportion of cells in each cluster in a `tof_tibble`. — tof_extract_proportion","text":"","code":"tof_extract_proportion(   tof_tibble,   cluster_col,   group_cols = NULL,   format = c(\"wide\", \"long\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_proportion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the proportion of cells in each cluster in a `tof_tibble`. — tof_extract_proportion","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. group_cols Unquoted column names representing columns `tof_tibble` used break rows `tof_tibble` subgroups feature extraction calculation. Defaults NULL (.e. performing extraction without subgroups). format string indicating data returned \"wide\" format (default; cluster proportion given column) \"long\" format (cluster proportion provided row).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_proportion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the proportion of cells in each cluster in a `tof_tibble`. — tof_extract_proportion","text":"tibble. format == \"wide\", tibble 1 row combination grouping variables provided `group_cols` one column grouping variable well one column proportion cells cluster. names column containing cluster proportions obtained using following pattern: \"prop@{cluster_id}\". format == \"long\", tibble 1 row combination grouping variables `group_cols` cluster id (.e. level) `cluster_col`. one column grouping variable, one column cluster ids, one column (`prop`) containing cluster proportions.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_proportion.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract the proportion of cells in each cluster in a `tof_tibble`. — tof_extract_proportion","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         patient = sample(c(\"kirby\", \"mario\"), size = 1000, replace = TRUE),         stim = sample(c(\"basal\", \"stim\"), size = 1000, replace = TRUE)     )  # extract proportion of each cluster in each patient in wide format tof_extract_proportion(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient ) #> # A tibble: 2 × 27 #>   patient `prop@a` `prop@b` `prop@c` `prop@d` `prop@e` `prop@f` `prop@g` #>   <chr>      <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl> #> 1 kirby     0.0320   0.0264   0.0358   0.0320   0.0358   0.0414   0.0320 #> 2 mario     0.0448   0.0277   0.0426   0.0362   0.0426   0.0341   0.0320 #> # ℹ 19 more variables: `prop@h` <dbl>, `prop@i` <dbl>, `prop@j` <dbl>, #> #   `prop@k` <dbl>, `prop@l` <dbl>, `prop@m` <dbl>, `prop@n` <dbl>, #> #   `prop@o` <dbl>, `prop@p` <dbl>, `prop@q` <dbl>, `prop@r` <dbl>, #> #   `prop@s` <dbl>, `prop@t` <dbl>, `prop@u` <dbl>, `prop@v` <dbl>, #> #   `prop@w` <dbl>, `prop@x` <dbl>, `prop@y` <dbl>, `prop@z` <dbl>  # extract proportion of each cluster in each patient in long format tof_extract_proportion(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     format = \"long\" ) #> # A tibble: 52 × 3 #>    patient cluster_id   prop #>    <chr>   <chr>       <dbl> #>  1 kirby   a          0.0320 #>  2 kirby   b          0.0264 #>  3 kirby   c          0.0358 #>  4 kirby   d          0.0320 #>  5 kirby   e          0.0358 #>  6 kirby   f          0.0414 #>  7 kirby   g          0.0320 #>  8 kirby   h          0.0320 #>  9 kirby   i          0.0452 #> 10 kirby   j          0.0377 #> # ℹ 42 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_threshold.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract aggregated features from CyTOF data using a binary threshold — tof_extract_threshold","title":"Extract aggregated features from CyTOF data using a binary threshold — tof_extract_threshold","text":"feature extraction function calculates proportion cells given cluster CyTOF antigen expression user-specified threshold across user-specified selection CyTOF markers. calculations can done either overall (across cells dataset) breaking cells subgroups using `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_threshold.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract aggregated features from CyTOF data using a binary threshold — tof_extract_threshold","text":"","code":"tof_extract_threshold(   tof_tibble,   cluster_col,   group_cols = NULL,   marker_cols = where(tof_is_numeric),   stimulation_col = NULL,   threshold = asinh(10/5),   format = c(\"wide\", \"long\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_threshold.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract aggregated features from CyTOF data using a binary threshold — tof_extract_threshold","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. group_cols Unquoted column names representing columns `tof_tibble` used break rows `tof_tibble` subgroups feature extraction calculation. Defaults NULL (.e. performing extraction without subgroups). marker_cols Unquoted column names representing columns `tof_tibble` (.e. CyTOF protein measurements) included feature extraction calculation. Defaults numeric (integer double) columns. Supports tidyselect helpers. stimulation_col Optional. unquoted column name indicates column `tof_tibble` contains information stimulation condition cell exposed data acquisition. provided, feature extraction broken subgroups stimulation condition (features stimulation condition included features wide format). threshold double integer length 1 indicating threshold used. format string indicating data returned \"wide\" format (default; cluster feature given column) \"long\" format (cluster feature provided row).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_threshold.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract aggregated features from CyTOF data using a binary threshold — tof_extract_threshold","text":"tibble. format == \"wide\", tibble 1 row combination grouping variables provided `group_cols` one column grouping variable, one column extracted feature (proportion cells given cluster marker expression values `threshold`). names column containing cluster features obtained using following pattern: \"{marker_id}@{cluster_id}_threshold\". format == \"long\", tibble 1 row combination grouping variables `group_cols`, cluster id (.e. level) `cluster_col`, marker `marker_cols`. one column grouping variable, one column cluster ids, one column CyTOF channel names, one column (`value`) containing features.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_threshold.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract aggregated features from CyTOF data using a binary threshold — tof_extract_threshold","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         patient = sample(c(\"kirby\", \"mario\"), size = 1000, replace = TRUE),         stim = sample(c(\"basal\", \"stim\"), size = 1000, replace = TRUE)     )  # extract proportion of each cluster in each patient in wide format tof_extract_threshold(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient ) #> # A tibble: 2 × 105 #>   patient `cd45@a_threshold` `cd38@a_threshold` `cd34@a_threshold` #>   <chr>                <dbl>              <dbl>              <dbl> #> 1 kirby               0.0833             0.0833                  0 #> 2 mario               0.118              0.176                   0 #> # ℹ 101 more variables: `cd19@a_threshold` <dbl>, `cd45@b_threshold` <dbl>, #> #   `cd38@b_threshold` <dbl>, `cd34@b_threshold` <dbl>, #> #   `cd19@b_threshold` <dbl>, `cd45@c_threshold` <dbl>, #> #   `cd38@c_threshold` <dbl>, `cd34@c_threshold` <dbl>, #> #   `cd19@c_threshold` <dbl>, `cd45@d_threshold` <dbl>, #> #   `cd38@d_threshold` <dbl>, `cd34@d_threshold` <dbl>, #> #   `cd19@d_threshold` <dbl>, `cd45@e_threshold` <dbl>, …  # extract proportion of each cluster in each patient in long format tof_extract_threshold(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     format = \"long\" ) #> # A tibble: 208 × 4 #>    patient cluster_id channel values #>    <chr>   <chr>      <chr>    <dbl> #>  1 kirby   a          cd45    0.0833 #>  2 kirby   a          cd38    0.0833 #>  3 kirby   a          cd34    0      #>  4 kirby   a          cd19    0.0833 #>  5 kirby   b          cd45    0.0556 #>  6 kirby   b          cd38    0.111  #>  7 kirby   b          cd34    0.167  #>  8 kirby   b          cd19    0      #>  9 kirby   c          cd45    0      #> 10 kirby   c          cd38    0      #> # ℹ 198 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_best.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the optimal hyperparameters for an elastic net model from candidate performance metrics — tof_find_best","title":"Find the optimal hyperparameters for an elastic net model from candidate performance metrics — tof_find_best","text":"Find optimal hyperparameters elastic net model candidate performance metrics","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_best.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the optimal hyperparameters for an elastic net model from candidate performance metrics — tof_find_best","text":"","code":"tof_find_best(performance_metrics, model_type, optimization_metric)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_best.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the optimal hyperparameters for an elastic net model from candidate performance metrics — tof_find_best","text":"performance_metrics tibble performance metrics elastic net model (wide format) model_type string indicating type glmnet model trained. optimization_metric string indicating performance metric used select optimal model.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_best.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the optimal hyperparameters for an elastic net model from candidate performance metrics — tof_find_best","text":"tibble 3 columns: \"mixture\", \"penalty\", column containing chosen optimization metric. returned tibble 1 column, means 1 mixture/penalty combination yielded optimal result (.e. tuning procedure resulted tie).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_cv_predictions.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate and store the predicted outcomes for each validation set observation during model tuning — tof_find_cv_predictions","title":"Calculate and store the predicted outcomes for each validation set observation during model tuning — tof_find_cv_predictions","text":"Calculate store predicted outcomes validation set observation model tuning","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_cv_predictions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate and store the predicted outcomes for each validation set observation during model tuning — tof_find_cv_predictions","text":"","code":"tof_find_cv_predictions(   split_data,   prepped_recipe,   lambda,   alpha,   model_type,   outcome_colnames )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_cv_predictions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate and store the predicted outcomes for each validation set observation during model tuning — tof_find_cv_predictions","text":"split_data `rsplit` object rsample package. Alternatively, unsplit tbl_df can provided, though recommended. prepped_recipe trained recipe lambda single numeric value indicating penalty (lambda) value used make predictions alpha single numeric value indicating mixture (alpha) value used make predictions model_type string indicating kind elastic net model build. continuous response predicted, use \"linear\" linear regression; categorical response 2 classes predicted, use \"two-class\" logistic regression; categorical response 2 levels predicted, use \"multiclass\" multinomial regression; time--event outcome predicted, use \"survival\" Cox regression. outcome_colnames Quoted column names indicating columns data fit represent outcome variables (others assumed predictors).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_cv_predictions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate and store the predicted outcomes for each validation set observation during model tuning — tof_find_cv_predictions","text":"tibble containing predicted true values outcome validation observations `split_data`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_emd.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the earth-mover's distance between two numeric vectors — tof_find_emd","title":"Find the earth-mover's distance between two numeric vectors — tof_find_emd","text":"Find earth-mover's distance two numeric vectors","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_emd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the earth-mover's distance between two numeric vectors — tof_find_emd","text":"","code":"tof_find_emd(vec_1, vec_2, num_bins = 100)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_emd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the earth-mover's distance between two numeric vectors — tof_find_emd","text":"vec_1 numeric vector. vec_2 numeric vector. num_bins integer number bins use performing kernel density estimation two vectors. Defaults 100.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_emd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the earth-mover's distance between two numeric vectors — tof_find_emd","text":"double (length 1) representing EMD two vectors.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_jsd.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the Jensen-Shannon Divergence (JSD) between two numeric vectors — tof_find_jsd","title":"Find the Jensen-Shannon Divergence (JSD) between two numeric vectors — tof_find_jsd","text":"Find Jensen-Shannon Divergence (JSD) two numeric vectors","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_jsd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the Jensen-Shannon Divergence (JSD) between two numeric vectors — tof_find_jsd","text":"","code":"tof_find_jsd(vec_1, vec_2, num_bins = 100)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_jsd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the Jensen-Shannon Divergence (JSD) between two numeric vectors — tof_find_jsd","text":"vec_1 numeric vector. vec_2 numeric vector. num_bins integer number bins use binning across two vectors' combined range. Defaults 100.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_jsd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the Jensen-Shannon Divergence (JSD) between two numeric vectors — tof_find_jsd","text":"double (length 1) representing JSD two vectors.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_knn.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the k-nearest neighbors of each cell in a high-dimensional cytometry dataset. — tof_find_knn","title":"Find the k-nearest neighbors of each cell in a high-dimensional cytometry dataset. — tof_find_knn","text":"Find k-nearest neighbors cell high-dimensional cytometry dataset.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_knn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the k-nearest neighbors of each cell in a high-dimensional cytometry dataset. — tof_find_knn","text":"","code":"tof_find_knn(   .data,   k = min(10, nrow(.data)),   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\"),   .query,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_knn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the k-nearest neighbors of each cell in a high-dimensional cytometry dataset. — tof_find_knn","text":".data `tof_tibble` `tibble` row represents cell column represents high-dimensional cytometry measurement. k integer indicating number nearest neighbors return cell. distance_function string indicating distance function use nearest-neighbor calculation. Options include \"euclidean\" (default) \"cosine\" distances. .query set cells queried .data (.e. set cells find nearest neighbors within .data). Defaults .data , .e. finding nearest neighbors cells .data. ... Optional additional arguments pass hnsw_knn","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_knn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the k-nearest neighbors of each cell in a high-dimensional cytometry dataset. — tof_find_knn","text":"list two elements: \"neighbor_ids\" \"neighbor_distances,\" n k matrices (n number cells input `.data`. [,j]-th entry \"neighbor_ids\" represents row index j-th nearest neighbor cell -th row `.data`. [,j]-th entry \"neighbor_distances\" represents distance two cells according `distance_function`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_knn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find the k-nearest neighbors of each cell in a high-dimensional cytometry dataset. — tof_find_knn","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  # Find the 10 nearest neighbors of each cell in the dataset tof_find_knn(     .data = sim_data,     k = 10,     distance_function = \"euclidean\" ) #> $neighbor_ids #>         [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] #>    [1,]  975  324  119  116  296  217   80  880  603   500 #>    [2,]  117  904  522  425  190  671  114  267  889   747 #>    [3,]  818  921  150  368   81  316  990  706  633   513 #>    [4,]  819  766  454  843  243  287  616  298   30    13 #>    [5,]  426  366  539  247  595  697  821  185  473   520 #>    [6,]  412  790  611  528  964  390  298  408  946   377 #>    [7,]  605  568  752  983  532  927  178  380  202   712 #>    [8,]  866  469  944  774  580  771  400  517  976   858 #>    [9,]  206  229  304  235  332  463  855  524  334    18 #>   [10,]   25  106  876  102  437   22  729   63  867   307 #>   [11,]  755   98  630  305  646  538  871  290  739    96 #>   [12,]  310  772  590  279  383  625  492  696  928   235 #>   [13,]  308  280  710  843  819  526  616  421  125    71 #>   [14,]  870  509  739  502   61  514  398  543  480    96 #>   [15,]  491  721  732  230  261  198  916  111  466   768 #>   [16,]  225  971  994  115  151  345  459  152  723   897 #>   [17,]  586  193  648  139  731  485  290  871  978   697 #>   [18,]  235  928  229  719  735  164  590  492    9    12 #>   [19,]  467  868  961  148  992  695  728  292   10   169 #>   [20,]  914  253  129  435  101  414  665  688  582   244 #>   [21,]  500  324  601  147  941   32  107  593  869    79 #>   [22,]  393   67  307  373  453  672   39  202   95   437 #>   [23,]  517  526  967  944  179  771  525 1000  766   480 #>   [24,]  211  922  847  751  822   56  359  617  406   508 #>   [25,]   10  876  106  437  867  307   63  102  428   537 #>   [26,]  479  186  512  196  239  131  882  880  716   132 #>   [27,]   66  970  529  999  552  855  126  285  220   418 #>   [28,]  752  532  699  621  380  897  605    7  983   462 #>   [29,]  191  700   74  349  810  321  754  846  613   804 #>   [30,]  866  976  580    4    8  858  932  433  766   616 #>   [31,]  537  674  574  695  338   87   71  382  819   194 #>   [32,]  371  568  779  201   21  869  500  906  147    45 #>   [33,]  623  175  236  442  481  482  110  363  518   141 #>   [34,]  564  711  913  423  545  940  827  628  495   986 #>   [35,]  159  910  110  541  352  338  242  379  306   505 #>   [36,]   52  252  681  227  323  950  974  391  990     3 #>   [37,]  302  279  995  647  550  780  310  696   12    99 #>   [38,]  743  223   50   70  998  237  476  566  724   407 #>   [39,]  233  942  176  202  453  405  994   67  416    22 #>   [40,]  280  125  629  809  188   13  217   69  421   710 #>   [41,]  194  664  955  381   92  801  574  674  469   733 #>   [42,]  775  513  884  490  544  793    3  915  831   817 #>   [43,]  563  810  790  611  263  966  700  662  613   349 #>   [44,]  325  461  255  370  968  654  344  165  547   565 #>   [45,]  558  929  179  242   71  518  201   32  226   525 #>   [46,]  957   84  169   99  536  220  676  496  780   146 #>   [47,]  881  189  435  832  139  519  266  797  667   122 #>   [48,]   79  329  186  488  534  758  713  575  869   483 #>   [49,]  258  134  645  354  549  554  781  584  806   158 #>   [50,]   70  237   38  743  125  223  998  507  492   360 #>   [51,]   63  980  102  100   10   25  876  106  634   278 #>   [52,]  252  681   36  404  323  183  430   60  195   783 #>   [53,]  861  965  504  898  776  771  275  331  517   510 #>   [54,]  936  884  199  513  663  342  768  197  628   326 #>   [55,]  908  204  542  952   90  934  977  643  639   722 #>   [56,]  359  674  925  469  606  516  385   85  799   357 #>   [57,]  265  915   98  630  831   11  834   83  544   755 #>   [58,]  814  682  334  615  379  597  524  811  363   833 #>   [59,]  495  864  578  628  392  845  199  640  522   904 #>   [60,]  183  842  353  195  684  440  207  938  121   554 #>   [61,]  221  760  509   14  127  870  171  863  387   774 #>   [62,]  289  250  763  403  927  748  208  712  583   427 #>   [63,]   51  100  634   25   10  102  278  382  537   560 #>   [64,]  538  438  480  466  841   96  739  213  771   944 #>   [65,]  275  630  230  466  646  538  438  755  768   898 #>   [66,]  970   27  285  126  249  304  330  104  418   220 #>   [67,]  373  694   22  178  505  393  453  416  202   447 #>   [68,]  109  270  713  813  153  997  820  329  180   258 #>   [69,]  282  629  477  421  804  303  256  420  592    40 #>   [70,]   50  223   38  743  237  125  566  998  492   507 #>   [71,]  482  226  929  558  297  194  518  242   45   236 #>   [72,]  893  919  829  424  553  627  497  737  315   303 #>   [73,]  138  353   81  549  311  652  921  234  668   158 #>   [74,]  321  846  335  700  679  613  399  512  190   174 #>   [75,]  136  653  979  846  805  533  865  725  993   903 #>   [76,]  529  552  146  855  999   27  220  536  970    84 #>   [77,]  108  891  229  306  574  206  338  463  955   481 #>   [78,]  404  430  742  600  888  596  791  937  709   276 #>   [79,]   48  176  186  329  575  869   21  500  717   324 #>   [80,]  880    1  132  512  196  140  186  116  324   603 #>   [81,]  150  633   73  921  818  138  353    3  706   195 #>   [82,]  119  116  443  296  268  975  966  882  328   933 #>   [83,]  265  834  366  185  316    5  697   98  802   759 #>   [84,]  957  146  833  536   46  212  220  395  169   105 #>   [85,]   56  433  359  922  232  799  384  866  674   469 #>   [86,]  813  738  800  270  820  703  153  350  977    68 #>   [87,]  695  359  382   31  674  537  278   56  551   614 #>   [88,]  581  960  142  984  114  575  668  603  805   180 #>   [89,]  131  318  962  714  935   26  459  815  716   690 #>   [90,]  156  926  204  977  782  908  800  795  639    55 #>   [91,]  987  932  273  858  708  230  911  466   15    65 #>   [92,]  664  724  442   41  381  481  194  200  801   733 #>   [93,]  980  746  787   51  632  452  263  560  102   634 #>   [94,]  929  226  558  431  187  543  297  518  730   763 #>   [95,]  453  202  210  301  602  687  942  953  307   428 #>   [96,]  739  213  680  860  480   64   14  835  870   538 #>   [97,]  916  566  721  355  396   15  733  767  223   743 #>   [98,]  831  290  739   96   11  544  835  755  697   538 #>   [99,]  957   46  496  780  912  676  647  169  489   467 #>  [100,]  560   63  124  634   51  550  452  278  825   980 #>  [101,]  969  577  582  446   20  565  567  200  129   451 #>  [102,]   10   51  106   25  876   63  980  647  278   729 #>  [103,]  350  738  418  285  246  104  157  126  956    86 #>  [104,]  418  246  285  249  337  203  370  675  126   636 #>  [105,]  811  146  212  947  669  339  529  364   84   833 #>  [106,]  876   10   25  729  672  102   22  307  393   867 #>  [107,]  601  741  638  500   21  826  941  201  505   795 #>  [108,]   77  229  955  891  206  182  574  463  995   406 #>  [109,]   68  180  612  270  813  153  960  713  329   320 #>  [110,]  306   35  175  910   33  623  338  463  242   379 #>  [111,]  627   15  768  721  315  197  491  358  261   663 #>  [112,]  796  709  742  791  888  115  596  173  430   807 #>  [113,]  525 1000  923  710  843  162  179  421  394   287 #>  [114,]  984  522  845  740  747    2  889   88  117   267 #>  [115,]  288  345  173  239  214  747   16  161  889   520 #>  [116,]    1  873  119  942  619  882  176  880   82   500 #>  [117,]    2  904  190  522  425  889  196  747  114   671 #>  [118,]  454  501  537   63  243  277  819  494  867   571 #>  [119,]  975  296    1  443  116  324   82  500  268   619 #>  [120,]  502  137  523  457  398  543  757  838  458   773 #>  [121,]  684  530  207  353  658  554  440  917  637   869 #>  [122,]  519  585  761   47  670  885  322  410  257   655 #>  [123,]  696  277  182  891  188  144  574  215  590   955 #>  [124,]  560  100  144  634  123  849  452  696   63   188 #>  [125,]   40   50  998  280   13  360  308  237   38   593 #>  [126,]  285   66  573  104  650  956  878  337  418   249 #>  [127,]  253  221   61  797  387  244  760  189  374   503 #>  [128,]  284  821  887  726  185  288  765  173  986   727 #>  [129,]  567  435  503  253   20  127  797  688  101   387 #>  [130,]  562  701  600  937  511  681   78   52  436   618 #>  [131,]  935   89   26  690  459  749  140  186  962   882 #>  [132,]  880   80  479  512  186  140   26  471  196   425 #>  [133,]  474  334  463  363  524  206  814  579  110   274 #>  [134,]   49  715  840  842  354  258  498  554  549   432 #>  [135,]  852  498  260  432  715  840  134  584   49   591 #>  [136,]  903   75  865  533  993  725  979  661  653   805 #>  [137,]  502  543  120  458  398  870  863  803   14   691 #>  [138,]  549   73  311  652  234  554  921  478  150   718 #>  [139,]  171  760  731  266  189  485  863  402  875   221 #>  [140,]  186  329  880  132  488   80  690   79   48   131 #>  [141,]  251  769  175  623  260  236  147   33  645   593 #>  [142,]   88  158  668  960  581  984  592  192  533   421 #>  [143,]  254  531  968  165  943  461  255  490  641   654 #>  [144,]  497  188  123  124  809  424  737  849   40   492 #>  [145,]  661  136  903  685  725  865  660  979  993    75 #>  [146,]   84  529  105  212  220  536  833   76  552    58 #>  [147,]  593   21  236  906   32  941  324  601  201   319 #>  [148,]  209  666  569  248  868  728   19  434  313   169 #>  [149,]  364  798  468  654  607  339  669  811  785   783 #>  [150,]   81  633  921  138    3   73  513  818  195   884 #>  [151,]  347  345  214  994  152  441  293  692  486   897 #>  [152,]  486  151  472  333   16  225  214  971  948   723 #>  [153,]   68  419  713  109   48  488  329  758  270   997 #>  [154,]  759  386  823  259  240  631  392  920  587   834 #>  [155,]  341  209  283  666  248  409  148  569  169   455 #>  [156,]   90  926  782  977  204  268  172  795  741   924 #>  [157,]  432  840  584  675  636  354  164  337  135   249 #>  [158,]  549  142  645  652  234  311  960  258   73   668 #>  [159,]   35  910  338  279  772  306  784  110  635   541 #>  [160,]  367  599  428  662  372  291  812  672  876   263 #>  [161,]  239  173  693  288  765  327  369  318   26   962 #>  [162,]  394  640 1000  841  113  168  946  192  390   923 #>  [163,]  817  458  965  776  294  665  502  691  137   120 #>  [164,]  719  432  636  157  901  249  675  769   18   584 #>  [165,]  968  461  451  254  659  255  949  143  531    44 #>  [166,]  416  673  393  762  826  405   39  994   67    22 #>  [167,]  704  688  484  916  200  504  244  396    8   721 #>  [168,]  394  778  213  854  923  640  162  390  841   522 #>  [169,]  957   46  676  666  992  148   19   84  673    99 #>  [170,]  745  598  991  203  917  589  375  478  608   363 #>  [171,]  760  863  266  731  139  543  870  875   61   221 #>  [172,]  657  924  784  777  156  268  912  383  279   635 #>  [173,]  288  161  239  115  765  369  887  327  709   727 #>  [174,]  750  231  754  321  362  846   74  613  335   512 #>  [175,]  623   33  236  141  110  481  442  251  306   363 #>  [176,]  942   79   39  873  233  717  186  116  500   779 #>  [177,]  462  514  480  509  860  677  870   14  213   602 #>  [178,]  694  373  985   67  927  416  447  505    7   201 #>  [179,]  525   45  558   23  113  929 1000  705  308   514 #>  [180,]  612  320  805  865  109  960  581   88  653   142 #>  [181,]  340  388  547  446  344  460  565  325  101   312 #>  [182,]  801  576  955  891  733  574  123  277  360   401 #>  [183,]   60  842  195  440  353  684  938  404  207   121 #>  [184,]  979  411  750  231  314  174  419  362  132   725 #>  [185,]  821  247    5  426  128  366  879   83  802   723 #>  [186,]   79   26   48  140  176  575  880  132   80   196 #>  [187,]  589  689  336  608  658   94  624  518  763   457 #>  [188,]  809  280  215  789   40  277  125  501  144   123 #>  [189,]  797  863  881  667  171  402  139   47  137   543 #>  [190,]  117  904  522    2  196  640  192  392  889   778 #>  [191,]   29  548  321   74  846  174   75  754  700   411 #>  [192,]  640  162  864  420  190 1000  421  522  581    88 #>  [193,]  586  731  585  697  290   17  266  473  139   670 #>  [194,]  664   41  381   71  297  482  226  674  469   929 #>  [195,]  842   60  183  681  150   81  353  134  531   138 #>  [196,]  603  190  880  873  117  512   80   26  575   889 #>  [197,]  756  592  303  996  256  767  477  282  768   315 #>  [198,]  642  222  708  261  408  491   15  946  553   987 #>  [199,]  874  936  628  495   59  326  759   54  831   768 #>  [200,]   92  232  664  381  577  969  567  167    8    41 #>  [201,]  601  242   32  352  608  985  505  336  518   178 #>  [202,]  453   95  687  942  233  602  373  301    7   779 #>  [203,]  745  170  370  598  468  938  104  246  337   991 #>  [204,]   90  908  156  977  926   55  782  657  643   172 #>  [205,]  714  219  815   22  935  656  672  393  318   882 #>  [206,]  463  229  133  334   77  524  110  306    9   406 #>  [207,]  997  713  121  745  806  554  684  534  258   610 #>  [208,]  748  250  427  402   62  403  431  487  583   699 #>  [209,]  148  248  569  666  728  988  434  570  753   313 #>  [210,]  953   95  453  202  437  942  687  528  599   873 #>  [211,]  922   24  847   85  567  406  751   56  359   508 #>  [212,]  682  833  300  583   84   58  146  570  851   105 #>  [213,]  854  168  841   96  394  940  480  986  739    64 #>  [214,]  345  347  520  151  530  293  692  115  486   333 #>  [215,]  789  772  188  696  319  383  338  891  574   809 #>  [216,]  656  734  166  971  405  151  448  753   16   994 #>  [217,]  328  975    1  809  119  966  324  349  296    40 #>  [218,]  981  907  351  808  346  809  320  625  555   237 #>  [219,]  673  205  676  393   22  166  729  672  106   815 #>  [220,]  330   84  780  146  957  970   46   66  126   657 #>  [221,]   61  760  127  387  374  871  171   14  509   244 #>  [222,]  553  198  804  642  315  261  456  919  627   408 #>  [223,]   38   70  566  743   50  998  724  576  733    92 #>  [224,]  339  669  783  948  333  391  785  607  364   486 #>  [225,]  971   16  994  333  459  214  115  345  152   151 #>  [226,]  297  929   71  518  558  482   94  194  274    45 #>  [227,]  950  974  286  391   36  641  670  473  885   958 #>  [228,]  824  934  905  459  971  830  542  409  535   952 #>  [229,]   77  206  928  481  235  306  108   18  463   590 #>  [230,]  466  438  491   65  771  538  275   64   15   708 #>  [231,]  750  174  716  515  132  512  131  690  679    89 #>  [232,]  786  200  484   41  396  567   85    8  733   866 #>  [233,]   39  176  942  202  345  405  416  779  453     7 #>  [234,]  311  652  989  138  549  158  591  718   73   658 #>  [235,]   18  229  928   12  304    9  590  206  719    77 #>  [236,]  623   33  482  175  518  147  242  593  906    71 #>  [237,]   50  507  743   38   70  125  781  407  218   492 #>  [238,]  423  982  973  422  913  677  726  940  506   412 #>  [239,]  288  161  778  173   26  765  327  889  115   747 #>  [240,]  834  759  154  326  874  265  199  386  259    83 #>  [241,]  472  152  948  794  486  455  449  872  707   272 #>  [242,]  518  201  236   71   45  274  558  226   35   608 #>  [243,]  298  843  501    4  710  408  766  454  616   819 #>  [244,]  688  665  253  704  504   61  776  127  221   163 #>  [245,]  792  292  300  429  822  487  751  615  269   682 #>  [246,]  104  418  370  836  203  938  337  285  675   249 #>  [247,]  426  185    5  821  366  520  539  802  723   595 #>  [248,]  570  728  209  527  753  300  434  988  992   148 #>  [249,]  285  675  636  104  337  418  432   66  370   246 #>  [250,]  748  208  427   62  699  431  380  605  532   403 #>  [251,]  141  769  623  175  806  645  556  147  260   236 #>  [252,]   52   36  681  783  607  183   60  404  610   938 #>  [253,]  127  244  688  797  665  914  704  221   61   129 #>  [254,]  641  143  461  531  968  165  990  654  949   255 #>  [255,]   44  461  968  370  654  715  165  675  254   598 #>  [256,]  592  756  282  743  998   69  197  477  526   767 #>  [257,]  410  914   47  585  122  670   20  435  460   193 #>  [258,]  645  554   49  806  917  549  478  158  652   134 #>  [259,]  587  764  154  631  727  823  711  495  904   369 #>  [260,]  141  476  510  591  623  251  769  175  478    33 #>  [261,]  198  456  491  827  477  642  768  708  222   545 #>  [262,]  374  387  886  433  932  620  588  799  503   911 #>  [263,]  563   43  662  787  599  746  790  160  611   966 #>  [264,]  918  385  736  875  988  402  606  890  621   357 #>  [265,]   57  834   83  316   98  240  831  759  326   874 #>  [266,]  731  171  838  885  523  139  189  543  863   137 #>  [267,]  271    2  425  740  747  709  671  114  823   117 #>  [268,]  777  784  635  924  119  741  443  107  156    82 #>  [269,]  524  615  751  245  499  332  792  334  899   682 #>  [270,]  813   68  820  800  713  109  738  329   86   878 #>  [271,]  267  845  818  920  740  440  353  386  706   114 #>  [272,]  698  455  707  472  397  723  152  844  241   449 #>  [273,]   91  987  686  198  642  932  708  422  545   423 #>  [274,]  336  518  608  352  429  242  379  226  363   201 #>  [275,]   65  898  438  230  466  776  768  861  538   630 #>  [276,]  295  823  633  896  701  631  271  993  267    81 #>  [277,]  123  955  574  891  696  182  188  401  501   801 #>  [278,]  550  494  382   87   63  614  467  695   25    10 #>  [279,]  310  383  784  647  159  635  777  772  172   924 #>  [280,]   13   40  308  710  188  789  125  501  571   843 #>  [281,]  465  309  798  811  322  816  851  761  683   519 #>  [282,]  477   69  303  629  256  804  421  592  732   315 #>  [283,]  449  455  947  465  794  707  155  892  472   241 #>  [284,]  887  128  397  765  939  173  288  726  161   115 #>  [285,]  249  104  337  636  126  418   66  675  246   432 #>  [286,]  473  974  670  539  227  595  885  950  697   366 #>  [287,]  900  649  602  953  923    4  301  179  113   298 #>  [288,]  239  173  161  115  765  778  747  889  327   726 #>  [289,]  403   62  763  712  441  583  927  748  983   985 #>  [290,]  697  835   98  871  739  731   11  171   96    14 #>  [291,]  604  372  448  651  428  734  367  546   95   656 #>  [292,]  487  447  961  245  792  728  300  357  429   208 #>  [293,]  983  757  523  347  520  699  605  214  838   595 #>  [294,]  817  163  120  502  544  793  776  773  665   368 #>  [295,]  276  633  342  823  993  896  668   81  701   631 #>  [296,]  975  119    1  116   82  324   80  268  217   741 #>  [297,]  226  381  929  664   71  194  482  558  516    94 #>  [298,]  243  412  408  946  964  390  843  900  766   113 #>  [299,]  499  309  702  862  667  683  617  751  519   446 #>  [300,]  570  487  728  245  583  682  527  792  292   248 #>  [301,]  649  621  447  602   95  202  453    7  532   307 #>  [302,]  780  330   37  279   12  912  310  657   99   995 #>  [303,]  477  282  315  197   69  592  420  256  629   456 #>  [304,]  970  334  910   66  206  110  573  855  463   330 #>  [305,]  588   11  374  221  871  290  911  127   61   262 #>  [306,]  338  110  481  360  891  574  175   35   77    33 #>  [307,]  428  649  301   95   22  393  437  447  672   453 #>  [308,]   13  280  710   71  482  526  179  525  843   819 #>  [309,]  683  465  761  816  851  862  299  702  519   322 #>  [310,]  383  279  772  924  625   12  777  784  215   172 #>  [311,]  234  652  138  549  989   73  718  158  658   591 #>  [312,]  565  344  931   44  325  451  165  461  968   255 #>  [313,]  753  434  393  728  992  569  988  527  248   672 #>  [314,]  722  594  317  231  184  750  419  837  515   749 #>  [315,]  456  477  553  627  303  919  804  282  222   358 #>  [316,]  818  366  831    3  539  706  920   83  323    98 #>  [317,]  314  850  594  419  515  749  231  962  184   716 #>  [318,]   89  161  693  714  239   26  651  656  604   815 #>  [319,]  625  941  593  556  772  981  907  924  147   119 #>  [320,]  612  180  805  865  808  653  555  346  109   660 #>  [321,]   74  846  335  548  679  174  399  613   29   700 #>  [322,]  816  851  832  683  761  838  885  309  519   376 #>  [323,]  791  807  430  742  562   36  271  818   52   440 #>  [324,]   21    1  500  603  575  119  975  116  960   147 #>  [325,]   44  344  461  547  255  811  370  565  597   388 #>  [326,]  199  834  759  936  874  884  831  240  633   513 #>  [327,]  369  765  727  161  239  693  288  377  778   173 #>  [328,]  966  217  975  349    1  119  809  443  810    82 #>  [329,]   48   79  140  488  713  270  800  186  639   813 #>  [330,]  220  780  970  302  573  657   66  304  910   126 #>  [331,]  356  609  861   53  665  969  965  776  493   167 #>  [332,]  269  524    9  899  206  463  334  536  751   855 #>  [333,]  225  796  888  152  894  214  596  971  486   151 #>  [334,]  524  463  133  379   58  206  110  814  615   274 #>  [335,]   74  512  613  679  321  700  846  196  880   479 #>  [336,]  608  274  518  187  201  352  589  985  763   363 #>  [337,]  636  806  432  285  249  104  675  251  203   370 #>  [338,]  306  574  159  891   35  242   31  110  215    77 #>  [339,]  224  669  364  783  149  798  468  607  785   105 #>  [340,]  547  181  388  325  460   44  499  344  659   461 #>  [341,]  155  666  569  209  148  444  557  361  859   455 #>  [342,]  495  864  663   59  295  578  199   54  628   420 #>  [343,]  356  439   97  493  767  407  996  331  566   609 #>  [344,]  325  312   44  565  388  931  255  461  547   552 #>  [345,]  347  214  692  994  233  151  115  897  530   293 #>  [346,]  555  808  907  218  769  820  981  320  660   180 #>  [347,]  345  692  712  293  983  214  530  151  233     7 #>  [348,]  496  912  657   99  204  676  330  220   46   780 #>  [349,]  328  810  754  217  700  966   29  809  975   613 #>  [350,]  270  813   68  738   86  820  713  103  153   109 #>  [351,]  218  808  507  981  492  346  555  907  237   417 #>  [352,]  379  201  541  608  336  601  274  985   35   638 #>  [353,]   73  440  121  684  896   60  921  183  842    81 #>  [354,]  584   49  134  781  840  498  157  432  135   258 #>  [355,]  786  856  484   97  396  916  733  401  167   566 #>  [356,]  331  721  609  861  916  493  167   53  767    97 #>  [357,]  822  551  292  359  434  385  208  264   56   988 #>  [358,]  456  315  578  909  627  663  303  420  553   111 #>  [359,]   56  674   87  357  925  551   31  695  384   606 #>  [360,]  481  590  306  891  574  175  492   33  125   338 #>  [361,]  521  859  557  812  546  569  367  672  868   313 #>  [362,]  750  174  754  653  632   80  933  184  846   132 #>  [363,]  474  991  623  589  274   33  336  608  187   175 #>  [364,]  149  339  468  798  607  669  783  654  811   540 #>  [365,]  450  790  118  222  501  243    6  553  198   611 #>  [366,]  539    5  595  697  835  788  316  426  473   807 #>  [367,]  546  160  428  812  672  521  291  859  599   372 #>  [368,]  773  706  921  718  818  457  788    3  624   120 #>  [369,]  327  765  727  161  693  679  239  173  288   711 #>  [370,]  203  255  598  246  675  654  104  337  745   715 #>  [371,]  869   32  568  705  779  658  608  717  689   624 #>  [372,]  291  599  900  964  428  528  982  604  210    95 #>  [373,]   67  694  178  505  453  202  619  500  201   447 #>  [374,]  387  262  886  221  911  127  799   61  588   620 #>  [375,]  478  949  917  598  554  457  991  589  684   658 #>  [376,]  785  838  757  763  457  589  187  120  832   598 #>  [377,]  528  778  390  168  412  964  327  923  210   394 #>  [378,]  978  828   17  586  655  193  185  247   83   585 #>  [379,]  352  274  541  833   35  334  395  336  608   110 #>  [380,]  532  699  431  605  621  250   28  514  752   875 #>  [381,]  664  297  516  194  577  226  469   41   92   482 #>  [382,]  695  537  550   87   31  696  789  278  961   338 #>  [383,]  310  924  279  772  777  625  784  319  215   635 #>  [384,]  470  433  606  886  359   56  799  385  559   857 #>  [385,]  606  875  925  431  863  264  918  402  380   649 #>  [386,]  920  759  154  271  845  986  680  823  392   709 #>  [387,]  374  799  503  127  221   61  886  262  433   774 #>  [388,]  499  181  340  524  325  446  344  547  269   579 #>  [389,]  955  401  182  801  277  576  733  123  108    85 #>  [390,]  412  946  528  394  298  923  168  964  162   377 #>  [391,]  958  227   36  224  950  948  486  974  607   252 #>  [392,]  522  904  640  845  117  190    2   59  986   940 #>  [393,]   22   67  313  672  307  405  166  416  992    39 #>  [394,]  168  162  640  841  923  213  390 1000  778   946 #>  [395,]  895  833  541  826  352  985  972  379  762   638 #>  [396,]  916  733  786  484  616    8  232   97  401   355 #>  [397,]  939  284  887  844  723  128  272  698   16   821 #>  [398,]  954  445  624  705  870  989  543  860  137   514 #>  [399,]  471  671  479  425  679  846    2  716  117   587 #>  [400,]  469  509  297  925  929   94  863  543    8   803 #>  [401,]  733  801  616  182  277  576  396  955  501   819 #>  [402,]  427  667  208  748  250  863  431  385  189   464 #>  [403,]  289  583  748   62  763  427  441  250  699   208 #>  [404,]  430  183   78   60  888   52  475  937  596   252 #>  [405,]  416  897  752  927  233  734  202    7   39   453 #>  [406,]  516  751  508  429  577  133  463  381  674   664 #>  [407,]  743  439   38  476  237  507  767  756   70    50 #>  [408,]  946  298  843  642  412  766  390  162  708   243 #>  [409,]  830  228  824  155  934  905  947  971  673   216 #>  [410,]  257  460  122  914   47  659  435  670  585   519 #>  [411,]  548  321  174  515  184  846  679  231   74   399 #>  [412,]  390  964  946  528  298    6  408  377  900   168 #>  [413,]  894  783  404  888  333  475  742  252  224   540 #>  [414,]  582  451  659  609   20  775  165  817  101   969 #>  [415,]  848  844  982  291  372  859  448  604  651   812 #>  [416,]  927  405  178  762  233    7   67  985  441   712 #>  [417,]  507  439  351  492   70  237  901   50  737   719 #>  [418,]  104  246  285  249  675  370  337  203  126    66 #>  [419,]  594  153  749  488  850   86  542  758  140    48 #>  [420,]  864  578  192  533   69  456  282  303  477    59 #>  [421,]  967 1000   69  113  906  192  282  525  710   526 #>  [422,]  423  238  564  987  973  273   34  506  755    11 #>  [423,]  564  238  940  987  827  946  913  412  708    34 #>  [424,]  737  497  144  417   72  351  893   70  492    50 #>  [425,]  671  479  471    2  117  399  267  904   26   716 #>  [426,]    5  247  366  821  539  185  595  520  486   697 #>  [427,]  748  208  250  402  403  431  699   62  667   863 #>  [428,]  307  672  599  372  367   95  291  546  867   900 #>  [429,]  792  274  226  245  516  674  518  297  292   929 #>  [430,]  791  888  596  742  404  440  807  323   78   758 #>  [431,]  863  380  543  250  875   94  427  699  514   532 #>  [432,]  636  157  337  584  675  840  164  769  249   806 #>  [433,]  799  866  503  470  384  387  262  976   30    85 #>  [434,]  988  313  728  753  527  569  570  248  357   487 #>  [435,]   47  129  881  253  127  797   20  914  189   446 #>  [436,]  600  725  618  993  979   78  661  276  701   896 #>  [437,]  953  619  210  571   25  453  443  307  662   966 #>  [438,]  466  771  230  504   64  538  944  517  275   491 #>  [439,]  407  507  417   70  743   38  237   50  223   901 #>  [440,]  353  684  637  121  530  921   60  183  430   807 #>  [441,]  289  927  403  762  583  416  712  527   62   151 #>  [442,]   33  724  623  482  510  175  481   92  664   236 #>  [443,]  119  619  268   82  789  505  571  975  635   500 #>  [444,]  557  569  361  736  988  209  868  521  434   148 #>  [445,]  398  989  624  705  954  480  773  689  870   658 #>  [446,]  579  499  508  945  577  751  881  615  524   883 #>  [447,]  649  694  301  178  292  487  373  927  250     7 #>  [448,]  734  656  291  546  604  897  651  859  405    95 #>  [449,]  707  794  948  283  761  152  455  472  441   465 #>  [450,]  365  563  560   43  790  810  349   29  829   263 #>  [451,]  659  165  565  582  883  461  460  969  414   968 #>  [452,]  825  634  849  777  647  383  560  924  310   100 #>  [453,]  202   95  942  687  373  619  210  602   67   301 #>  [454,]    4  819  243  537  118  501   30  616  298   287 #>  [455,]  272  472  707  698  449  283  241  152  794   948 #>  [456,]  315  358  578  261  477  804  553  222  420   627 #>  [457,]  658  624  989  375  589  689  684  187  120   773 #>  [458,]  803  691  137  163  797  730  881  945  120   502 #>  [459,]  971  994  131  225   89  935  749  815  962   542 #>  [460,]  659  883  881  451  945  547  832   47  410   322 #>  [461,]   44  255  165  968  254  654  659  451  325   641 #>  [462,]  177  890  621  514  677  602  380  532  875   923 #>  [463,]  206  334  133  110  306   77  338  406  524   429 #>  [464,]  736  617  667  402  822  770  264  918  357   988 #>  [465,]  309  281  862  761  683  892  519  702  794   816 #>  [466,]  230  438  538  771   64   65  491  275  504   944 #>  [467,]   19  961  695  382  868   10  278  292   25   647 #>  [468,]  607  669  654  149  785  745  203  364  376   610 #>  [469,]    8  400  925   56  381  194  297  866  674   664 #>  [470,]  384  886  606  433  799  976  385  387  559   774 #>  [471,]  671  399  425  479    2  132  117  846  716   267 #>  [472,]  241  152  455  486  272  948  449  698  707   794 #>  [473,]  286  539  697  595  366  974  670  835    5   788 #>  [474,]  363  991  597  931  133  589  691  814  187   730 #>  [475,]  997  483  758  938  956  713  404  783  207   540 #>  [476,]  591  260  743  998  724   38  256  510  756   549 #>  [477,]  282  315   69  303  804  456  629  732  261   256 #>  [478,]  917  554  375  652  991  949  598  589  658   258 #>  [479,]  425  716   26  399  132  671  471  117  679     2 #>  [480,]  841  860  445  514   64  954  705  177   96   398 #>  [481,]  360  306   33  175  442   92  623  590  110   574 #>  [482,]   71  226  236  297  194  442  929   33  518   558 #>  [483,]  639  758  972  488  692  997   48  475  534   713 #>  [484,]  786  396  167  232  355  916   30  866    8   704 #>  [485,]  139  761  266  731  667  707  402  464  736   862 #>  [486,]  948  152  214  151  520  426  293  723  595   333 #>  [487,]  292  300  728  992  570  447  527  792  927   762 #>  [488,]   48  329  749  639  140  483  542  186  758    79 #>  [489,]  963   19   99  467  169  868  666  148  899   729 #>  [490,]  531  943  968  150  165  775  143  949  852    42 #>  [491,]  732   15  230  466  261  438  771  721  768   708 #>  [492,]  590  928  719  360   50   70  237  507  351   125 #>  [493,]  200  566  331  356  969  101   92  916   97   724 #>  [494,]  278  118   87  550  614   63  867  857  551   382 #>  [495,]   59  628  578  864  199  342  874  420  827   392 #>  [496,]  676   99  912  348  957   46  169  204  673   657 #>  [497,]  144  737  424  188   70  492  123   50  125    40 #>  [498,]  840  943  135  134  852  715  354  157   49   584 #>  [499,]  299  446  579  615  269  388  751  524  309   945 #>  [500,]   21  601  324  107  779  619   32  176  717    79 #>  [501,]  243  616  280  819  710   13  571  843  789   188 #>  [502,]  137  120  870   14  543  398  163  458  776   773 #>  [503,]  799  387  433  567  127  866  129  374  262   797 #>  [504,]  771  438  944  861  517  965  466  244  509   776 #>  [505,]  694  373  541  201  178   67  601  635  107   352 #>  [506,]  238  913  939  422  726  986  128  564  940   727 #>  [507,]  237  417  901   50  719  351  407   70   38   439 #>  [508,]  516  577  579  751  406  446  797  945  381   881 #>  [509,]   14  870  944  400  514   61  177  774  771   480 #>  [510,]  689  442  260  965  691  803  474  591  589   187 #>  [511,]  562   36   52  681  323  252  958  742  701     3 #>  [512,]  880  613  882  335  690  132   26  196   80   186 #>  [513,]  884  150  936   42   54   81    3  831  633   326 #>  [514,]  177  860  870  462  380  480  509  543  398    14 #>  [515,]  716  679  231  411  962  479  399  335   89   321 #>  [516,]  381  508  664  577  297  406  429  674  194   226 #>  [517,]   23  771  944  526  732  438  504  967  766   509 #>  [518,]  274  242  336  226  608  236  558   71  929   201 #>  [519,]  122  761  309  322  862   47  585  885  465   683 #>  [520,]  595  214  788  293  807  879  821  539  366   680 #>  [521,]  361  367  546  859  672  812  428  557  867   729 #>  [522,]  904  392  117  640  190    2  114  747  845   889 #>  [523,]  757  838  293  983  788  120  543  954  398   595 #>  [524,]  334  615  133  269   58  814  579  463  206   499 #>  [525,]  179  113 1000   23  568  967   32   45  923   705 #>  [526,]   23  517  967  732   13  308  482  771  421   998 #>  [527,]  570  753  728  762  248  927  434  487  441   988 #>  [528,]  964  377  390  412    6  298  372  210  900   611 #>  [529,]   76  146  552   27  999  105  855  220  970    66 #>  [530,]  534  637  121  740  692  347  610  684  440   214 #>  [531,]  490  254  143  990  949  968  943  195  165     3 #>  [532,]  380   28  699  752  621  605    7  250  983   431 #>  [533,]  903  420  805  142  136  865   69  864  303   668 #>  [534,]  758  530   48  740  997  869  121  692  596   207 #>  [535,]  643  720  908  830  951  650  542  956   55   952 #>  [536,]   84  146   46  212  957  899  833  220  269   169 #>  [537,]  571   31  789  382  695  454   87  819  437     4 #>  [538,]   64  466  438  755  230  646  739   96   65   275 #>  [539,]  366  595    5  788  473  697  835  286  520   807 #>  [540,]  836  938  783  475  246  364  956  413  894   339 #>  [541,]  505  352  395   35  694  379  201  833  178   601 #>  [542,]  639  488  935   55  459  483  131  749  908   140 #>  [543,]  137  863  431  870  398  514   94  171   14   502 #>  [544,]  776  831  817  665  294  915   98  773  368   718 #>  [545,]  628  261  564  827  456  768  646  495  578   198 #>  [546,]  672  859  448  367  428  656  291  734  521   393 #>  [547,]  340  325  460  181   44  659  461  451  388   565 #>  [548,]  321  411  846   74  191  679  174   75  399   335 #>  [549,]  138  652  158  311  234  591   73  258  554   645 #>  [550,]  278  382  696  995  647   87  614   37  467    63 #>  [551,]  357  359  857  868  867   87  384   56  434   695 #>  [552,]  855  529   76  146   27  970  999   66  304   811 #>  [553,]  222  919  315  804  627  629  456  477  893   198 #>  [554,]  478  917  258  375  652  138  121  645  549    49 #>  [555,]  808  660  346  320  865  820  218  180  781   612 #>  [556,]  907  941  625  319  251  981  878  772  795   573 #>  [557,]  444  361  569  859  988  521  736  264  434   812 #>  [558,]  929   45  226   71  179  518   94  297  242   482 #>  [559,]  973  470  982  848  886  677  384  890  900   372 #>  [560,]  124  100  634   63  452  825  144  849  188    51 #>  [561,]  238  422  959  982  559  973  506  423  273   415 #>  [562,]  323  701  511  742   52  791  276  681   78   430 #>  [563,]   43  263  790  611  787  810  662    6  613   528 #>  [564,]   34  423  940  913  545  827  986  711  628   422 #>  [565,]  931  451  312  969  597  659  945  883  474   165 #>  [566,]  223   38   97  724  733   92   70  743  576   998 #>  [567,]  129  503  232  200  577  799  508  516  797   101 #>  [568,]  779  705  371   32    7  605  687  869  525   717 #>  [569,]  209  988  434  148  313  753  666  248  444   557 #>  [570,]  728  527  248  300  487  753  762  992  434   583 #>  [571,]  789  537  710  437  443  953  280  619  501    31 #>  [572,]  770  617  464  702  822   24  736  299  862   667 #>  [573,]  910  556  772  878  625  657  638   35  172   795 #>  [574,]  891  955  338   31  306  360  277   77   41   182 #>  [575,]  717  603  869   79  324  960  186  984   88    21 #>  [576,]  801  733  182  223  566  401   92  955  928    41 #>  [577,]  516  381  508  664  579  803  200  406  969   297 #>  [578,]  420  864  495  456   59  628  192  827  358   261 #>  [579,]  945  446  508  615  814  597  730  577  133   751 #>  [580,]  858  774  976  911  944  866  708    8  771   466 #>  [581,]   88  960  805  603  142  575  180  324  192   196 #>  [582,]  414  451  659  101  565  609  165  969   20   460 #>  [583,]  403  289  683  851  682   62  748  441  816   300 #>  [584,]  354   49  432  781  157  769  901  346  135   134 #>  [585,]  122  655  193  519  586  670  731  885  257   485 #>  [586,]  193   17  585  139  731  648  485  655  290   305 #>  [587,]  259  631  399  764  679  904  823  369  471   154 #>  [588,]  620  305  374  262  387  127  221  886  253   503 #>  [589,]  187  689  991  658  608  336  917  457  170   363 #>  [590,]  492  360  928  481   12  306  772  719  891   182 #>  [591,]  476  549  234  311  652  260  510  138  158   852 #>  [592,]  256  756  197  282  142  158  303   69  591   767 #>  [593,]  147  236  319   21  906  941  324   32  242   601 #>  [594,]  419  314  722  749   86  153  542  488  317   184 #>  [595,]  539  788  520  366  523  835    5  807  473   293 #>  [596,]  888  758  430  534  791  749  404  483  997   333 #>  [597,]  474  945  814  730  691  363  883  991  579   598 #>  [598,]  375  991  170  917  745  478  203  589  370   949 #>  [599,]  662  372  428  160  210  964  900  528  953   437 #>  [600,]  436   78  937  701  618  725  276  993  896   404 #>  [601,]  107  638  201  500   21  741  352  941  505   147 #>  [602,]  923  621  301  462  687  287  202   95  453     7 #>  [603,]  575  717  873  196  324  581  779    1  889   116 #>  [604,]  651  291  448  656  372  318   95  210  897   734 #>  [605,]  983    7  532  380  699  752  568  250  763   757 #>  [606,]  385  925  875  470  431  863   56  469  649   380 #>  [607,]  468  610  785  783  669  637  654  745  149   376 #>  [608,]  336  518  274  201  352  187  589  985   32   371 #>  [609,]  331  817  356  775  861  414  969   53  665   582 #>  [610,]  637  684  607  530  785  745  440  783  121   207 #>  [611,]  790    6  810   43  528  390  412  700  298   377 #>  [612,]  180  320  805  865  653  109  960  581  808    88 #>  [613,]  512  754  335  700  880  882  690   74  933   196 #>  [614,]  995  278   87  550  467  847  382  922   19   695 #>  [615,]  814  682  792  579  524  751  245   58  269   334 #>  [616,]  819  501   13    4  243  843  766  396  280   401 #>  [617,]  770  822  464  572  702  667  357  751  402   736 #>  [618,]  600  436  937  725  354  350  145  993  701   661 #>  [619,]  873  953  500  687  116  443  373  453  942   437 #>  [620,]  588  262  374  387  127  503  886  799  221   305 #>  [621,]  532  301  380  462   28  752  602  890    7   605 #>  [622,]  744  746  205  714  815  367  546  672  160   812 #>  [623,]   33  175  236  442  141  363  110  251  518   260 #>  [624,]  658  989  457  954  398  705  445  689  187   757 #>  [625,]  907  772  319  556  981  383  924  310  941   573 #>  [626,]  958  872  391  227  241  511  950   36  974   798 #>  [627,]  919  315  553  111  456  222   15  358  477   261 #>  [628,]  495  545   59  199  768  578  663  874  261   864 #>  [629,]  804   69  282  477   40  553  315  303  421   280 #>  [630,]   65  646  755  275   11  538   98  466  831   544 #>  [631,]  877  823  587  259  154  276  399  471  295   709 #>  [632,]  750  362  174  754  933  787  231   93  613   349 #>  [633,]   81  150  276  818  295   73  271  668  896   353 #>  [634,]  825  452   63  100  560  647  777  789  328   215 #>  [635,]  784  268  777  505  443  647  279  924  383   159 #>  [636,]  337  432  285  249  806  675  769  251  157   164 #>  [637,]  610  684  530  440  121  785  607  376  745   457 #>  [638,]  741  601  107  941  795  352  895   21  201   556 #>  [639,]  542  483  488  972  329  826  800  908  926   951 #>  [640,]  394  162  522  192  190  168  827  841  392   904 #>  [641,]  254  950  974  654  227  670  990  461  659   294 #>  [642,]  198  708  408  222  261  946  491  766   15   987 #>  [643,]  951  650  908  956  535  639  204  895  972   720 #>  [644,]  798  340  547  626  281  950  149  410  122   641 #>  [645,]  258  158   49  554  549  251  652  960  141   806 #>  [646,]  755  630  538   65  874   11  987  466  230   628 #>  [647,]  279  784  635  777  383  634  825  310  382    37 #>  [648,]   17  586  736  930  139  886  485  620  464   264 #>  [649,]  301  447  287  307  621  602  900   45  925   385 #>  [650,]  951  643  908  956  720  126  895  204  738   535 #>  [651,]  604  291  656  448  318  693  372  887  726   210 #>  [652,]  311  234  549  138  478  158  989  554  658    73 #>  [653,]  805  612  320   75  180  865  846  979   80   581 #>  [654,]  468  598  149  461  607  370  254  641  255   949 #>  [655,]  585  122  586  193  519  485   17  794  257   885 #>  [656,]  448  604  734  651  546  897  405  318  291    39 #>  [657,]  172  912  573  156  924  279  204  784  383   795 #>  [658,]  624  989  457  689  589  187  705  954  371   652 #>  [659,]  451  460  883  165  461  582  565  641  414   881 #>  [660,]  808  555  320  346  865  820  612  180  218   351 #>  [661,]  145  136  979  725  865  660  903   75  685   993 #>  [662,]  599  437  953  263  964  210  528  790  966   900 #>  [663,]  909  628  342  358   54  495  199  578  111   545 #>  [664,]  381  194  297  516   92   41  482  226  442   577 #>  [665,]  244  776  163  817  688  544  253  861  504   704 #>  [666,]  148  209  569  868  313  169  729  248   19   361 #>  [667,]  402  427  189  464  208  748  683  822  617   863 #>  [668,]  142   88   73  896  984  158  864  114  845   533 #>  [669,]  785  468  339  607  224  610  783  851  149   376 #>  [670,]  974  286  950  473  885  641  227  793  294   122 #>  [671,]  471  425  399    2  479  117  267  904  132   896 #>  [672,]  546  428  876  393  367   22  307  106  729   521 #>  [673,]  676  219  166  826  204   90  393  957  639   395 #>  [674,]   56   31  359  194  429  469  516  925  297   929 #>  [675,]  249  432  370  636  337  157  104  285  418   246 #>  [676,]  673  496  957  219  169  204   46   99  912   172 #>  [677,]  890  462  177  900  982  602  621  973  923   854 #>  [678,]  852  781  756  996  903  592  767  407  197   591 #>  [679,]  716  335  399  479  321   74  369  846  327   515 #>  [680,]  920  860  788   96  954  706  835  739  845   213 #>  [681,]   52  252   36  195  183   60  531  404    3   842 #>  [682,]  814   58  615  583  300  212  792  851  833   816 #>  [683,]  816  309  851  583  761  322  403  667  427   748 #>  [684,]  637  121  440  610  457  658  530  353  917   375 #>  [685,]  903  136  533  145  661  865  660  555  303   678 #>  [686,]  273   91  198   15  642  627  222  932  708   919 #>  [687,]  873  779  202  453  942  717  619  602  568   923 #>  [688,]  704  244  253  167  665  504  127   61  797   503 #>  [689,]  187  589  658  989  624  457  705  510  445   608 #>  [690,]  882  933  512  880  935  116  131  140  613    26 #>  [691,]  803  458  730  945  883  137  163  597  832   474 #>  [692,]  347  345  530  712  994  534  214  233  826   483 #>  [693,]  161  369  765  318  327  239  651  887  173   604 #>  [694,]  178  373  505   67  447  201  541  985   45   927 #>  [695,]  961  382   87   31  537  292  467  674  359   694 #>  [696,]  123  891  215  277  574  382  550  789  338   188 #>  [697,]  835  290  539  366  473    5  595  731  788    98 #>  [698,]  272  455  472  397  152  216   16  241  723   707 #>  [699,]  532  380  752  605   28  983  250  748  427   431 #>  [700,]  810  613  196   74  335  754  966  349   29   190 #>  [701,]  562  276  633  195  600  295   81  150  681    78 #>  [702,]  770  617  309  862  299  683  570  248  300   822 #>  [703,]   86  820  660  813  853  808  362  270  320   612 #>  [704,]  688  167  244  504  253  665  858  438  466   230 #>  [705,]  954  568  398  624  989  445  371  860  658   480 #>  [706,]  818  368  921  920  680  788  773  271  954   845 #>  [707,]  449  794  948  485  272  455  761  486  152   472 #>  [708,]  642  987  198  580  858  408  946  491  230   466 #>  [709,]  267  791  112  823  271  386  173  430  807   115 #>  [710,]  113  280  843  308   13  571  243  421  525   619 #>  [711,]  727  327   34  369  913  377  764  564  827   765 #>  [712,]  289  763  985  347  983  927   62    7  692   605 #>  [713,]  997  207   68   48  270  329  758  153  109   483 #>  [714,]  205  815   89  318  935  131  690  882  656   933 #>  [715,]  134  840  949  498  554  375  478  968  255    49 #>  [716,]  479  679  962   26  399  515  425  335  132   161 #>  [717,]  575  779  603  869  873  889  687  176  500    79 #>  [718,]  773  368  311  989  234  445  457  776  965   624 #>  [719,]  901  492  164  769  507  590  928   18  237   141 #>  [720,]  650  535  643  951  956  830  908  540  738   126 #>  [721,]  916   15  491   97  230  732  275  996  767   861 #>  [722,]  314  837  594   55  750   86  231  542  419   977 #>  [723,]  879  821  520  897  151   16  486   28  115   214 #>  [724,]  442  998   92  476  223   38  510  566  260   481 #>  [725,]  993  979  136  436   75  661  865  896  471   903 #>  [726,]  854  765  128  288  887  778  844  377  284   986 #>  [727,]  765  327  369  913  711  392  173  288  986   128 #>  [728,]  570  992  527  248  487  753  434  762  300   313 #>  [729,]  106  672  876  744   10  521  361  546  393   666 #>  [730,]  945  691  832  803   94  814  597  458  187   763 #>  [731,]  266  171  139  193  697  885  760  290  523   835 #>  [732,]  491  517  771  526   23  477   15  282  230   766 #>  [733,]  801  576  401  396  182  566   41   92  223   786 #>  [734,]  448  897  405  656  752  291   28  546  621    95 #>  [735,]  901   18  719  164  417  507  235  928  492   157 #>  [736,]  464  264  918  988  557  402  617  485  444   667 #>  [737,]  424  497  417  144   70  492  351   72   50   123 #>  [738,]  800  270  813   86  977  908  878  782  956   329 #>  [739,]   96   14  870   64  835  213  860  480   98   538 #>  [740,]  747  889  114  984  534  530  267  869  717   271 #>  [741,]  638  795  107  941  601  926  268   21  782   119 #>  [742,]  791  430  888  112  796  323   78  709  596   404 #>  [743,]   38   50  237   70  998  223  407  476  256   756 #>  [744,]  729  106  876  622  672  102   10  521  367   361 #>  [745,]  170  203  598  938  207  610  917  684  468   375 #>  [746,]  787  263  563   93  160  622  714   43  205   662 #>  [747,]  889  740  114  522  117    2  267  288  717   984 #>  [748,]  427  208  250  403  699  402   62  583  431   289 #>  [749,]  962  488  131  459  419  850   89  596  542   479 #>  [750,]  231  174  362  933  132  632  754  184  512   722 #>  [751,]  615  508  245  822  406  792  269  579  516   429 #>  [752,]   28  532  699  605  621    7  897  380  405   983 #>  [753,]  527  313  728  434  570  988  248  762  992   569 #>  [754,]  613  349  700  174  512  933  880  335   80    74 #>  [755,]  646   11  538  630   65  987  874   98  466    64 #>  [756,]  767  592  996  197  256  743  303  476  591   282 #>  [757,]  983  523  763  838  293  605  398  954  376   543 #>  [758,]  534  596  997   48  483  713  488  888  530   475 #>  [759,]  874  834  386  154  920  986  199  940  326   240 #>  [760,]  171   61  221  875  863  871  139  870   14   543 #>  [761,]  519  309  683  794  322  885  816  485  862   465 #>  [762,]  927  992  416  527  441  728  570  487  753   178 #>  [763,]  289   62  712  757  983  403  605  187  336    94 #>  [764,]  259  587  711  369  679  727  327  548  321   631 #>  [765,]  727  327  161  369  288  887  173  239  693   726 #>  [766,]  843    4  944  408   23  946  517  298  113   243 #>  [767,]  996  756  197  256  592  743  721   53  476   407 #>  [768,]  628  261  491  898  275  230   65  477  111   197 #>  [769,]  141  251  346  260  556  645  636  584  175   432 #>  [770,]  617  572  702  464  822  736  209  667  299   862 #>  [771,]  517  944  438  504  466   23  230  732  509    64 #>  [772,]  625  383  319  310  215  556  910  159  924    35 #>  [773,]  718  368  989  445  457  776  624  311  234   921 #>  [774,]  580  858  911  976  944  509    8  866   61   771 #>  [775,]   42  609  490  414  817  793  531  294  544   165 #>  [776,]  544  665  965  163  817  773  861  718  504   275 #>  [777,]  784  268  924  635  383  172  825  647  279   443 #>  [778,]  168  377  239  854  923  394  288  889  747   522 #>  [779,]  717  568  687   32  873  869  500  371  603   233 #>  [780,]  302  330  220   99  279  910  657  159  957    37 #>  [781,]   49  584  354  549  158  852  555  645  237   591 #>  [782,]  926  977  795  156   90  878  800  741  296   329 #>  [783,]  607  610  252  224  938  669  339  468  540   475 #>  [784,]  635  777  268  383  279  924  647  172  443   159 #>  [785,]  669  376  607  838  610  468  637  757  293   289 #>  [786,]  484  232  396  355  733  167  916  801  401   200 #>  [787,]  746  263  563   43  613  754  933  174  335   512 #>  [788,]  595  539  680  835  523  954  520  706  366   860 #>  [789,]  571  215  537  188  280  443  710  328   31   308 #>  [790,]  611    6   43  810  298  243  528  412  964   390 #>  [791,]  807  430  323  742  709  271  440  112  888   596 #>  [792,]  429  245  615  292  487  300  682  274  751   814 #>  [793,]  974  915  294  670  286  473  950    3  544   641 #>  [794,]  948  449  761  707  885  486  485  465  519   241 #>  [795,]  741  878  782  926  638  941  107  556  977   156 #>  [796,]  112  333  742  888  791  225  152  214  486   430 #>  [797,]  189  127  458  881  253   61  400  863  137   803 #>  [798,]  149  364  339  281  468  322  669  391  607   224 #>  [799,]  503  387  433  866    8  469  470  976  774   374 #>  [800,]  738  977  270  813  782  329  908  926  878    86 #>  [801,]  733  182  576  955  401   41   92  574  277   891 #>  [802,]  185  247   83  821  828  128    5  426  386   154 #>  [803,]  458  691  730  137   94  297  400  945  510   226 #>  [804,]  629  477  553   69  282  315  456  222  261   303 #>  [805,]  612  653  180  581  320  865   88  533  960   142 #>  [806,]  337  258  251  636  207  645  554   49  917   713 #>  [807,]  791  323  520  595  440  539  788  366  271   430 #>  [808,]  555  660  346  320  218  820  612  865  180   351 #>  [809,]  188  217   40  981  328  319  975  215  218   280 #>  [810,]  700  966   43  349  611  790  328  217  710    29 #>  [811,]   58  851  105  816  468  149  364  814  682   669 #>  [812,]  367  859  521  361  546  160  557  415  672   291 #>  [813,]  270  820   68  109  800   86  738  329  713   878 #>  [814,]   58  682  615  597  730  474  274  579  945   363 #>  [815,]  714  318  205   89  459  656  935  131  971   824 #>  [816,]  851  683  322  583  309  832  403  682  761   289 #>  [817,]  163  294  776  665  544  773  965  718  502   458 #>  [818,]  706  921    3  368  271  920   81  316  633   150 #>  [819,]    4  616   13  454  308  501  766  843   31   243 #>  [820,]  813  270  346  808  109   68  555  660  320   878 #>  [821,]  185  247  128  879  520  723  426    5  366   539 #>  [822,]  617  245  357  751  667  402  208  464  300   792 #>  [823,]  267  276  631  154  709  386  271  845  587   671 #>  [824,]  228  934  815  409  971  459  219  673  216   166 #>  [825,]  452  634  777  924  383  328  647  310  809   784 #>  [826,]  972  985  395  107  895  233  692  416  178   601 #>  [827,]  640  162  261  394  946  408  578  192  390   168 #>  [828,]  185  802  378   83  978  247  506  939  821    17 #>  [829,]  553  627  919  893   72  358  222  315  456   365 #>  [830,]  535  409  228  643  720  934  952  951  650   905 #>  [831,]   98  936  544  706  316  818  874  368  920   199 #>  [832,]  945  730  883  881  322  691  838  816  376   189 #>  [833,]  395  379   84  541  212  682  762  352  895   300 #>  [834,]  759  874  265  240  326   83  199  154  831   386 #>  [835,]  697  788  539  290  739   96  595  366  523   680 #>  [836,]  938  540  246  783  364  252  183  370  203   745 #>  [837,]  722   55  952  314  934  750  542  594   90   231 #>  [838,]  523  757  376  785  885  266  293  120  763   403 #>  [839,]  339  224  947  364  798  149  105  783  669   540 #>  [840,]  498  715  134  157  432  354  135  675  943    49 #>  [841,]  480  394  162  213 1000   64  640  168  967    23 #>  [842,]   60  183  195  134  353  554  258   73  207    49 #>  [843,]  766  243  113  710  408  298   13    4  946   308 #>  [844,]  415  939  726  848  397  887  723  284  291   651 #>  [845,]  114  920  271  522  392  267  904  680   59   984 #>  [846,]   74  321  399  335  653   75  132  548  679   471 #>  [847,]  922  211   24  406  751  614  108   85  359    87 #>  [848,]  982  415  890  372  291  677  559  844  973   264 #>  [849,]  452  825  144  634  853  560  124  809  310   383 #>  [850,]  749  888  962  596  419  112   78  225  317   742 #>  [851,]  816  683  583  322  403  682  309  289  811   832 #>  [852,]  135  498  591  781  549  678  476  134   49   354 #>  [853,]  981  907  625  218  924  808  809  782  975   351 #>  [854,]  213  168  778  726  986  394  940  177  462    96 #>  [855,]  552  970  304   76  529   66    9   27  146   524 #>  [856,]  355  786   97  484  733  576  401  566  396   493 #>  [857,]  551  384  902  867  521  559  470  361  359   357 #>  [858,]  580  911  774  976  866  708  944  932  466     8 #>  [859,]  546  812  361  367  448  521  557  734  672   291 #>  [860,]  954  514  480  398  705  680  870   96  177   739 #>  [861,]   53  965  504  776  898  331  275  771  163   438 #>  [862,]  309  465  761  702  892  519  299  683  485   667 #>  [863,]  431  543  875  189  171  760  137  380  400   427 #>  [864,]  420  578   59  192  495  668  342  142  533   628 #>  [865,]  180  612  320  805  136  653  903  555  533   109 #>  [866,]    8  976   30  799  774  580  433  858  469   503 #>  [867,]   25  428  307  599  876   10  521  900  662   551 #>  [868,]   19  148  666  361  551  467  209  521  569   434 #>  [869,]  371  717  779  575   32   21   79  568  500   534 #>  [870,]   14  543  509  514  398  860  739  137  502   480 #>  [871,]  760  221  290   61  739  171   14  870   11   177 #>  [872,]  958  626  241  796  413  391  742  472  333   894 #>  [873,]  687  603  942  717  116  619  779  176  196   500 #>  [874,]  199  759  834  646  936  920  628  940  831   755 #>  [875,]  385  606  863  760  431  380  462  171  925   514 #>  [876,]  106   10   25  672  729  428  102   22  307   867 #>  [877,]  631  587  823  259  154  709  399  276  471   764 #>  [878,]  795  782  556  977  741  941  926  800  638   907 #>  [879,]  723  821  520  835   28  293  595  752  697   185 #>  [880,]   80  512  132  882  196  690  116  186    1   140 #>  [881,]  883  945  832   47  797  189  458  691  460   508 #>  [882,]  690  512  880  116  933   26  613  942  176   935 #>  [883,]  945  832  881  691  460  659  597  458  730   451 #>  [884,]  513  936   54  150   42   81  831  326    3   633 #>  [885,]  838  266  286  731  322  761  670  473  948   523 #>  [886,]  470  374  387  262  973  384  433  799  559   911 #>  [887,]  284  765  128  288  726  161  173  397  939   239 #>  [888,]  596  430  742  333  758  791  404  796  225    78 #>  [889,]  747  717  740  117  114  522    2  575  603   984 #>  [890,]  677  462  621  848  875  177  982  918  532    28 #>  [891,]  574  338   77  955  306  696  360  182  277   215 #>  [892,]  862  465  702  309  283  519  761  299  281   794 #>  [893,]  919  553  629   72  315  303  804  627  477    69 #>  [894,]  413  333  888  475  783  224  596  905  404   540 #>  [895,]  972  395  826  638  951  107  352  741  985   833 #>  [896,]  353  668  993   73  984  633  671   88  276   109 #>  [897,]  752  405   28  734  345  621  448   95  202   233 #>  [898,]  275  438   53  768  861  776  771  718  230   936 #>  [899,]  269  536  332  245  148   19  209  770  617   614 #>  [900,]  287  964  298  372  677  953  602  649  528   412 #>  [901,]  719  507  584  735  164  417  237  769  157   432 #>  [902,]  857  551  384   24  444  357  211  433  359   572 #>  [903,]  136  533  865  685  993   75  678  781  805   661 #>  [904,]  522  117    2  392  190  640  114  267  845   747 #>  [905,]  228  225  894  333  971  459  824  796  152    16 #>  [906,]  147  236   32  593  967  421  525  960 1000   526 #>  [907,]  981  625  556  319  218  346  941  878  772   853 #>  [908,]  643  650  204  951  800   90  977   55  738   639 #>  [909,]  663  358  342  578  628  495  545  456  420    59 #>  [910,]   35  159  573  110  772  379  306  541  338   352 #>  [911,]  858  580  774  976  932  987  708  374  466   973 #>  [912,]  657  172  496   99  279  647  777  204  676   784 #>  [913,]  940  986  727  564  392  854  423  726   34   711 #>  [914,]  253  257   20  127   47  665  435  244  881   797 #>  [915,]  793  544   57   98  473  294  831  290  316   665 #>  [916,]  721  396   97   15  167  732  491  861   53   566 #>  [917,]  478  554  375  991  598  589  170  258  658   652 #>  [918,]  264  385  875  532   28  621  402  380  890   699 #>  [919,]  553  627  315  893  222  629  477  804  303   456 #>  [920,]  386  680  845  706  818  271  759   96  986   874 #>  [921,]  368  706  818  138   81   73    3  440  353   150 #>  [922,]  847  211   24   85  359   56  406   87  674   614 #>  [923,]  602  113  394  168  390  687  162  778  525  1000 #>  [924,]  383  777  268  319  625  784  310  172  772   795 #>  [925,]  606  385  469   56  929  400  431  558  875   863 #>  [926,]  782  156   90  977  795  741  800  878  204   268 #>  [927,]  416  178   62  762  441    7  289  712  985   405 #>  [928,]  590  492  229  360   18  182  481  719  223   235 #>  [929,]  558  226  297   71   94   45  518  482  179   925 #>  [930,]  648  736  485   17  978  707  464  862  557   586 #>  [931,]  565  474  597  363  991  510  133  442  969   260 #>  [932,]  976  858  911   91  262  580   30  866  987   774 #>  [933,]  690  882  512  880   82  613  754  296  116   140 #>  [934,]  952  228   55  824  542  535  830  837  643   459 #>  [935,]  131  690   89  882  140  459  714  542  176    39 #>  [936,]  199  831  884   54  513  898  874  818  706   275 #>  [937,]  404  600   78  842  681  183  195   52  618    60 #>  [938,]  745  836  203  183   60  207  246  783  540   475 #>  [939,]  397  844  284  887  128  726  506  185  723   765 #>  [940,]  986  913  213  392  854  423  564  168  874   759 #>  [941,]  556  741   21  638  319  795  601  147  593   107 #>  [942,]  176  873  453  687  202   39  116  233  619   779 #>  [943,]  498  490  968  840  715  143  531  135  852   165 #>  [944,]  771  517  509  774   23  438  580    8  766   504 #>  [945,]  883  579  730  832  597  691  881  803  458   814 #>  [946,]  408  390  412  298  162  394  766  843  168   827 #>  [947,]  105  339  839  224  449  283  281  669  465   212 #>  [948,]  794  486  449  761  885  707  152  224  785   391 #>  [949,]  375  990  478  968  554  598  917  715  138   457 #>  [950,]  974  227  641  670  286   36  793  254  391   473 #>  [951,]  956  643  650  908  895  972  639  483  800   738 #>  [952,]  934   55  535  837  908  228  542  643  204   830 #>  [953,]  437  210  619  453   95  287  687  202  873   900 #>  [954,]  398  860  705  624  989  445  480  757  658   788 #>  [955,]  574  891   41  801  182  277   77   31  733   194 #>  [956,]  951  650  643  475  972  895  483  908  738   126 #>  [957,]   46   84  169  676   99  220  833  536  673   395 #>  [958,]  391  626  872  227   36  252  950   52  224   974 #>  [959,]  711  693  765  727  369  377  327  651  238   726 #>  [960,]   88  581  142  575  180  324  984  158  645   906 #>  [961,]  695  467  292  694   19  487  992  505  541   447 #>  [962,]  749   89  716  131  161   26  479  173  459   318 #>  [963,]  489   19  868  467  614   99  666  148  278   899 #>  [964,]  528  412  900  298  390  372    6  946  599   377 #>  [965,]   53  861  163  776  504  510  718  773  817   458 #>  [966,]  328  810  217  953  116   82  437  700  619   349 #>  [967,]   23 1000  421  526  525  841  906  517  162   480 #>  [968,]  165  255  461  949  254  715  143  943  375   531 #>  [969,]  200  965  577  163  565  724  458  510  803   451 #>  [970,]   66   27  330  304  220  855  126  552  285   249 #>  [971,]  994  225  459   16  151  216  166  345  152   333 #>  [972,]  826  895  483  395  639  107  692  985  638   951 #>  [973,]  238  677  911  559  886  982  871  890  470   423 #>  [974,]  950  227  286  670  641  473  793  885   36   294 #>  [975,]  296  119    1  217  324  328  116  319  443   809 #>  [976,]  580  858  774  866  911   30  932    8  708   470 #>  [977,]  782  926  800   90  156  878  795  908  738   204 #>  [978,]  378  828   17  272  939  185  397  844  586   247 #>  [979,]  725   75  136  653  184  993  865  846  661   471 #>  [980,]   51  102   93   63  100  452  634   10  876   106 #>  [981,]  907  218  625  319  556  809  853  346  941   808 #>  [982,]  848  238  677  372  890  559  973  726  291   415 #>  [983,]  605  757  293  699  763    7  712  523  532   347 #>  [984,]  114   88  740  575  960  889  142    2  747   717 #>  [985,]  178  712  201  608  826  352  336  927  395   416 #>  [986,]  940  913  213  854  392  386  759  920   96   168 #>  [987,]  708  911  423   91  858  466  538  755  230   646 #>  [988,]  434  569  753  527  570  248  728  313  264   918 #>  [989,]  624  658  445  705  689  398  954  457  234   311 #>  [990,]  949  375  921  254  457  684  531  368    3   138 #>  [991,]  363  598  589  474  170  917  478  375  187   689 #>  [992,]  728  762  487  570  527  753  313  292  961   248 #>  [993,]  725  896  136  865  979  668  295  903   75   276 #>  [994,]  971  345  225  692   39  151  459   16  233   347 #>  [995,]  614  550   37  108  467  382   77  159  696   647 #>  [996,]  767  756  197  592  256  721  898   53  768   275 #>  [997,]  713  207  758  534  475  483   48  121   68   153 #>  [998,]   38  724  125  743  476  256  526  223  442    50 #>  [999,]  529   27  552   76   66  418  855  970  104   146 #> [1000,]  525  967  113  162  421  841  394   23  923   179 #>  #> $neighbor_distances #>               [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7] #>    [1,] 0.32598192 0.3517470 0.3983120 0.3988403 0.4299103 0.4523133 0.4572616 #>    [2,] 0.14772271 0.3259053 0.4415792 0.4424782 0.4461021 0.4821276 0.5026028 #>    [3,] 0.56772122 0.5864353 0.6326098 0.6856507 0.6954350 0.7472492 0.7768351 #>    [4,] 0.40405642 0.4642207 0.4931797 0.5589871 0.6006939 0.6264537 0.6579612 #>    [5,] 0.33780522 0.3520641 0.4645845 0.5369969 0.6359642 0.6458903 0.7017763 #>    [6,] 0.46799055 0.5207719 0.5321226 0.6218483 0.6523362 0.6733755 0.7184528 #>    [7,] 0.25862185 0.4570674 0.4617116 0.4686618 0.4890909 0.5059085 0.5157680 #>    [8,] 0.39222424 0.4564674 0.5120623 0.5612151 0.6067695 0.6308169 0.6340176 #>    [9,] 0.84282231 1.0042958 1.0372775 1.0957005 1.1094598 1.1284633 1.1623174 #>   [10,] 0.28660239 0.3502692 0.4575445 0.6278179 0.8589123 0.9097440 0.9100704 #>   [11,] 0.47674013 0.6761885 0.7511646 0.7621841 0.7746836 0.7762177 0.7859846 #>   [12,] 0.66802264 0.7333008 0.7647138 0.8863794 0.8958242 0.8987650 0.9262374 #>   [13,] 0.19789203 0.3916494 0.5405148 0.5584395 0.5782979 0.6018116 0.6457170 #>   [14,] 0.18838163 0.3636297 0.4439515 0.5298820 0.5307130 0.5461855 0.5535785 #>   [15,] 0.36272351 0.5236960 0.6196467 0.6253014 0.7292030 0.7394048 0.7426871 #>   [16,] 0.50921756 0.6068497 0.6422609 0.7028193 0.7795477 0.7979951 0.8310449 #>   [17,] 0.64306722 0.8723741 1.0235358 1.0872380 1.1144050 1.1241432 1.1735064 #>   [18,] 0.58741553 0.8173819 0.8766831 0.9175625 0.9600847 1.0268859 1.1398897 #>   [19,] 0.36058998 0.6417075 0.6987769 0.9320511 0.9366956 0.9455169 1.0261321 #>   [20,] 0.81493749 0.8783900 0.9590535 1.0357485 1.0792041 1.1255355 1.1414414 #>   [21,] 0.34275484 0.3475120 0.4310727 0.4427783 0.4565149 0.4942699 0.5088111 #>   [22,] 0.26633902 0.4318777 0.6535563 0.6697698 0.6745008 0.6972221 0.7125792 #>   [23,] 0.28299200 0.3057175 0.3734783 0.4824530 0.5037700 0.5118929 0.5123928 #>   [24,] 0.64981253 0.7137534 0.7800309 0.8423703 0.8638734 0.8718479 0.9858058 #>   [25,] 0.28660239 0.5296101 0.5356200 0.6580408 0.7095556 0.7747999 0.8317026 #>   [26,] 0.46582553 0.4895113 0.5439686 0.5980760 0.6058093 0.6076498 0.6245262 #>   [27,] 0.58851702 0.6163321 0.9313221 0.9626636 1.0551082 1.1676306 1.1874188 #>   [28,] 0.21760928 0.2778161 0.3999022 0.4262878 0.4704627 0.5324263 0.5690884 #>   [29,] 0.66732949 0.7427499 0.8170231 0.8247312 0.8402202 0.8817030 0.8994272 #>   [30,] 0.47016211 0.5033323 0.7129762 0.7150483 0.7208621 0.7431481 0.8026459 #>   [31,] 0.50706650 0.5099469 0.5770295 0.6165272 0.6400653 0.6669070 0.6838300 #>   [32,] 0.37929652 0.4060368 0.4174111 0.4324252 0.4942699 0.5028283 0.5112406 #>   [33,] 0.14279790 0.1962717 0.3929293 0.4126443 0.5382454 0.5441986 0.5656965 #>   [34,] 0.34224397 0.8136328 0.8614730 0.8696395 0.9392468 0.9550796 1.0518885 #>   [35,] 0.37912461 0.3862680 0.4823542 0.5142341 0.5457086 0.5510166 0.5849882 #>   [36,] 0.51021766 0.5283605 0.6536650 0.7364091 0.8554775 0.8901491 0.9577043 #>   [37,] 0.90030178 0.9196222 0.9464186 0.9477255 1.0575600 1.1266378 1.1601833 #>   [38,] 0.27239772 0.3724233 0.4396195 0.4510148 0.5291027 0.6003026 0.6756355 #>   [39,] 0.33897426 0.4286280 0.4738944 0.5689022 0.5893628 0.6095877 0.6253038 #>   [40,] 0.41899543 0.4767682 0.5827580 0.6146203 0.6198439 0.6971500 0.7099077 #>   [41,] 0.39725588 0.5541566 0.5804012 0.6192598 0.6274048 0.6462393 0.6792826 #>   [42,] 0.72637954 0.7764916 0.8220381 1.0430024 1.0553317 1.1237133 1.1620752 #>   [43,] 0.52362467 0.6062999 0.6318903 0.6432682 0.6464190 0.8079821 0.8639624 #>   [44,] 0.48842963 0.4967938 0.5159632 0.8401037 0.8981402 0.8993822 0.8998936 #>   [45,] 0.25759807 0.4162849 0.4702986 0.4972155 0.4983791 0.5380449 0.5598957 #>   [46,] 0.44593944 0.7554403 0.8576604 0.8808269 0.9029771 0.9832605 1.0238916 #>   [47,] 0.60176373 0.6900892 0.7458627 0.8747098 0.8789273 0.8856183 0.8859983 #>   [48,] 0.37763893 0.4018477 0.4982705 0.5085804 0.5150674 0.5525042 0.5786978 #>   [49,] 0.36538589 0.4545399 0.5028749 0.5624584 0.6050915 0.6237282 0.6332056 #>   [50,] 0.37960751 0.3979177 0.4396195 0.5031203 0.5443134 0.6264189 0.6862083 #>   [51,] 0.65294106 0.7006712 0.7163305 0.9782295 0.9822635 1.0339669 1.0520680 #>   [52,] 0.40133873 0.4443992 0.5102177 0.8086790 0.8656774 0.8719315 0.8932843 #>   [53,] 0.17271549 0.3793629 0.6358424 0.6488399 0.6931132 0.7681802 0.7739150 #>   [54,] 0.72175918 0.7560877 0.7838901 0.8338945 0.8655917 0.8868289 0.9618751 #>   [55,] 0.67710707 0.7459275 0.7795800 0.7913864 0.8060969 0.9793953 0.9817102 #>   [56,] 0.39582656 0.5037719 0.5361988 0.5976289 0.6843879 0.7468478 0.7578581 #>   [57,] 0.66191963 0.8445011 0.9588250 0.9630460 1.0309123 1.0773592 1.0981416 #>   [58,] 0.42190500 0.4973245 0.6307078 0.6773804 0.7283915 0.7302750 0.7418523 #>   [59,] 0.27587720 0.4844229 0.5790721 0.5964854 0.6476882 0.6598923 0.6949004 #>   [60,] 0.06835597 0.3371185 0.6155966 0.6270480 0.6312708 0.6371034 0.7290932 #>   [61,] 0.24968823 0.4300717 0.5100807 0.5307130 0.5506625 0.5961255 0.6015820 #>   [62,] 0.35240759 0.3824229 0.4000388 0.4109127 0.4439081 0.4702077 0.4834766 #>   [63,] 0.65294106 0.7087893 0.7806047 0.8317026 0.9200251 0.9227241 0.9255173 #>   [64,] 0.30256200 0.4470308 0.4894312 0.5130115 0.5186367 0.5507818 0.5527388 #>   [65,] 0.39735100 0.4664945 0.5209553 0.5387643 0.6104954 0.6569517 0.6652874 #>   [66,] 0.39804258 0.5885170 0.7238866 0.7639838 0.8322009 0.9095920 0.9826018 #>   [67,] 0.29146293 0.3897283 0.4318777 0.4349011 0.5244276 0.5370354 0.5566304 #>   [68,] 0.32410497 0.4609533 0.5251186 0.5389519 0.6262027 0.7619953 0.7688458 #>   [69,] 0.27037670 0.4754922 0.4922357 0.5287656 0.5603999 0.5631538 0.6638352 #>   [70,] 0.37960751 0.4428390 0.4510148 0.5756552 0.7030962 0.8106279 0.8169433 #>   [71,] 0.28511091 0.3408914 0.3803989 0.3890931 0.4147054 0.4208349 0.4831592 #>   [72,] 0.81903718 1.0685151 1.2969026 1.3174046 1.3473959 1.3727136 1.4303141 #>   [73,] 0.39305774 0.4012257 0.5376179 0.5413994 0.5473648 0.5623854 0.5801135 #>   [74,] 0.30372362 0.3174368 0.4289008 0.6562540 0.6715311 0.7244878 0.7383865 #>   [75,] 0.53366658 0.6585944 0.6608047 0.7299661 0.7946506 0.8450033 0.8872168 #>   [76,] 0.68102431 0.9364010 0.9841743 0.9988770 1.2041270 1.2258500 1.3201109 #>   [77,] 0.55179430 0.5571897 0.6122684 0.6541090 0.6725759 0.7530248 0.7650664 #>   [78,] 0.73606994 0.7893473 0.8324373 0.8810557 0.8900224 0.9026943 1.0333421 #>   [79,] 0.37763893 0.4349458 0.4712447 0.4828338 0.4832965 0.5216529 0.5405952 #>   [80,] 0.28415209 0.4572616 0.5067520 0.5856444 0.5940916 0.6001751 0.6176997 #>   [81,] 0.25269447 0.3747215 0.5376179 0.5783029 0.6211608 0.6599968 0.6695516 #>   [82,] 0.54198078 0.5475102 0.6006039 0.6128972 0.6527970 0.6810007 0.6919742 #>   [83,] 0.71079198 0.8043866 0.8472756 0.8762341 0.8770516 0.9281897 0.9680946 #>   [84,] 0.62092461 0.6445546 0.6509262 0.7421967 0.7554403 0.8471272 0.8671748 #>   [85,] 0.79546969 0.8257411 0.8485160 0.8496971 0.9060798 0.9406087 0.9523932 #>   [86,] 0.62294694 0.6394287 0.7182691 0.7291157 0.8301703 0.8436856 0.9178012 #>   [87,] 0.59529906 0.6333614 0.6550372 0.6669070 0.7617910 0.7727307 0.8793161 #>   [88,] 0.34566559 0.3644325 0.3824966 0.3952351 0.5507824 0.5578793 0.5985339 #>   [89,] 0.40861348 0.5824214 0.5996770 0.6350303 0.6846027 0.6996974 0.7289494 #>   [90,] 0.31737910 0.3201712 0.4559013 0.4790044 0.5040580 0.6573362 0.7421423 #>   [91,] 0.73836900 0.7423340 0.8310077 0.9232213 0.9555666 0.9589393 0.9726968 #>   [92,] 0.52515579 0.5899362 0.5946205 0.6274048 0.6356567 0.6403796 0.6420475 #>   [93,] 1.07656072 1.3350486 1.3567802 1.4678011 1.5065179 1.7212341 1.7423119 #>   [94,] 0.39865482 0.4279061 0.4806310 0.4819336 0.4874887 0.5336732 0.5437060 #>   [95,] 0.29755928 0.3098689 0.4416186 0.5195663 0.5240128 0.5756170 0.6015224 #>   [96,] 0.17442898 0.4724363 0.5146986 0.5251973 0.5275758 0.5507818 0.5646981 #>   [97,] 0.60254876 0.7010912 0.7379605 0.7886108 0.8180519 1.0015504 1.0106405 #>   [98,] 0.54634526 0.5798844 0.6157630 0.6737371 0.6761885 0.7416885 0.7508909 #>   [99,] 0.84699371 0.8808269 0.8870028 0.8960951 0.9892446 1.0670114 1.1085836 #>  [100,] 0.66464560 0.7087893 0.7521187 0.8586183 0.9782295 1.1252005 1.1521600 #>  [101,] 0.94507095 0.9917083 1.0271338 1.0642716 1.0792041 1.0845426 1.0925347 #>  [102,] 0.62781788 0.7163305 0.7357040 0.8493089 0.8711462 0.9227241 0.9695747 #>  [103,] 1.07872960 1.5046497 1.5211299 1.5451708 1.5545126 1.5867193 1.6613357 #>  [104,] 0.18695263 0.3601551 0.5258646 0.5894416 0.6977874 0.7150916 0.7227502 #>  [105,] 0.86636403 0.8719055 0.9123238 0.9305895 0.9516152 0.9522564 1.0998652 #>  [106,] 0.27178070 0.3502692 0.5356200 0.5834167 0.7113880 0.7357040 0.9018566 #>  [107,] 0.26382785 0.3217752 0.3524559 0.4406653 0.5088111 0.5719279 0.5876651 #>  [108,] 0.55179430 0.8758229 0.9184732 0.9910519 0.9966855 1.0773902 1.0776354 #>  [109,] 0.32410497 0.5086704 0.5290478 0.5870070 0.5875086 0.6723061 0.6870034 #>  [110,] 0.44192468 0.4823542 0.5233099 0.5521031 0.5656965 0.5686891 0.6506952 #>  [111,] 0.69244197 0.7528559 0.7654303 0.8621099 0.8732936 0.8968442 0.9514895 #>  [112,] 0.61613532 0.6241639 0.7424427 0.7574440 0.8975431 0.9750273 0.9930924 #>  [113,] 0.36932625 0.4011750 0.4429853 0.4604765 0.4828729 0.4978523 0.5291797 #>  [114,] 0.26873931 0.4543503 0.4557890 0.4679440 0.4976931 0.5026028 0.5313733 #>  [115,] 0.51050027 0.5921090 0.6021753 0.6397974 0.6618070 0.6769789 0.7028193 #>  [116,] 0.39884029 0.4338438 0.4769931 0.4909808 0.4957269 0.5112118 0.5141013 #>  [117,] 0.14772271 0.3132639 0.3269249 0.4102375 0.4993736 0.5073504 0.5408590 #>  [118,] 0.77759145 0.9951456 1.0756486 1.0774729 1.1177713 1.2063608 1.2068160 #>  [119,] 0.31193116 0.3547688 0.3983120 0.4364350 0.4769931 0.5036652 0.5419808 #>  [120,] 0.37005510 0.3871259 0.5587759 0.5773100 0.5947247 0.6255331 0.6449042 #>  [121,] 0.37705146 0.5138346 0.5139100 0.5252715 0.5541338 0.5668082 0.5835430 #>  [122,] 0.40965196 0.6003888 0.8927569 0.9175895 0.9672832 0.9714351 1.0484572 #>  [123,] 0.57720810 0.6077988 0.7163927 0.7542905 0.8563963 0.8893385 0.9017009 #>  [124,] 0.57020555 0.7521187 1.0352781 1.0682651 1.1456465 1.2587465 1.2695734 #>  [125,] 0.47676825 0.5443134 0.6012839 0.6122324 0.6879926 0.7115509 0.7272478 #>  [126,] 0.61224292 0.7639838 0.8348187 0.8484403 0.8865131 0.8967691 0.9056557 #>  [127,] 0.47128129 0.4742885 0.5506625 0.5576488 0.5855391 0.7084379 0.7361315 #>  [128,] 0.55902699 0.5779786 0.6259580 0.6759824 0.7406785 0.7412295 0.7706631 #>  [129,] 0.52640450 0.7872247 0.8119500 0.8691706 0.9590535 1.0056971 1.0547595 #>  [130,] 1.32460885 1.3372252 1.4753410 1.4921726 1.5647777 1.7410715 1.7702731 #>  [131,] 0.39224540 0.4086135 0.6076498 0.6388631 0.6616216 0.6782935 0.6975890 #>  [132,] 0.48358229 0.5067520 0.5331307 0.5393310 0.5477623 0.5784624 0.6617352 #>  [133,] 0.59905264 0.6009181 0.6353046 0.6514528 0.6861254 0.6981637 0.7038827 #>  [134,] 0.45453992 0.4740229 0.5669323 0.6106367 0.6221501 0.6412341 0.6657613 #>  [135,] 0.59210504 0.6041034 0.7940382 0.8103320 0.8341434 0.8354779 0.8376443 #>  [136,] 0.52054448 0.5336666 0.6198285 0.7053231 0.7141794 0.7405079 0.7609127 #>  [137,] 0.33360186 0.3361237 0.3871259 0.4628323 0.5069489 0.5241810 0.5689214 #>  [138,] 0.38927101 0.3930577 0.4042808 0.4177205 0.4701422 0.5661374 0.5721873 #>  [139,] 0.52682614 0.5787552 0.5986974 0.6351774 0.6751799 0.7010782 0.7737709 #>  [140,] 0.50103028 0.5390435 0.5686183 0.5784624 0.5889430 0.6001751 0.6495725 #>  [141,] 0.40653761 0.4252189 0.4953637 0.5226871 0.5490626 0.5771025 0.6129426 #>  [142,] 0.38249659 0.4300582 0.4803878 0.5113963 0.5693444 0.6195682 0.6604910 #>  [143,] 0.63449741 0.6775179 0.8270223 0.8645391 0.9106158 0.9164684 0.9447863 #>  [144,] 0.51138609 0.8558286 0.8893385 1.0352781 1.0409002 1.0651401 1.0818223 #>  [145,] 0.40060568 0.9769978 1.0996311 1.1243578 1.1423133 1.2060170 1.2254479 #>  [146,] 0.64455460 0.6857650 0.8719055 0.8759750 0.8826073 0.8837762 0.8979529 #>  [147,] 0.14133022 0.4427783 0.4481422 0.4515533 0.5129071 0.5210050 0.5868033 #>  [148,] 0.31256232 0.5174086 0.6927888 0.7231681 0.7670178 0.8893941 0.9320511 #>  [149,] 0.42079314 0.5249974 0.5396951 0.6883049 0.7095461 0.7897186 0.8103686 #>  [150,] 0.25269447 0.5908408 0.6206132 0.6250772 0.6326098 0.6569702 0.7249904 #>  [151,] 0.55815494 0.5773820 0.6062823 0.6265692 0.6492780 0.6954854 0.6967617 #>  [152,] 0.61904625 0.6492780 0.7160424 0.7298638 0.8401095 0.8415885 0.8908792 #>  [153,] 0.62620267 0.6320622 0.6535339 0.6723061 0.6955315 0.7127139 0.7325808 #>  [154,] 0.57781967 0.6330033 0.6672846 0.8335989 0.8949388 0.9214416 0.9268127 #>  [155,] 1.14346045 1.3087046 1.3093782 1.3639135 1.4085650 1.4257619 1.4399710 #>  [156,] 0.31737910 0.3187343 0.4564433 0.5860091 0.6232933 0.6443000 0.6696273 #>  [157,] 0.47684041 0.6096090 0.7173135 0.7342114 0.7597481 0.8649065 0.8888699 #>  [158,] 0.42783532 0.4300582 0.4631909 0.4955587 0.5308287 0.5534722 0.6068476 #>  [159,] 0.37912461 0.4214704 0.5252374 0.6655652 0.6694105 0.6915947 0.7048638 #>  [160,] 0.59452774 0.6584650 0.9193077 0.9254299 0.9310772 1.0383139 1.0483510 #>  [161,] 0.34846232 0.4755879 0.4833048 0.4908146 0.5226039 0.5821078 0.5929847 #>  [162,] 0.26041472 0.3803643 0.4294431 0.4300336 0.4978523 0.5012725 0.5264046 #>  [163,] 0.38004758 0.4867412 0.5410478 0.5431129 0.5665810 0.6053057 0.6079471 #>  [164,] 0.69337064 0.7378916 0.8151782 0.8888699 0.9053361 0.9114618 0.9593250 #>  [165,] 0.36181453 0.5870537 0.6344490 0.6603520 0.7871295 0.8400570 0.8608513 #>  [166,] 0.65550189 0.6949375 0.7014940 0.7199481 0.7239229 0.7383726 0.7574850 #>  [167,] 0.48684578 0.6358165 0.7235966 0.7486613 0.9109017 0.9310533 0.9337529 #>  [168,] 0.24773903 0.4039905 0.4258998 0.4375188 0.4688398 0.5007872 0.5012725 #>  [169,] 0.77026897 0.8576604 0.9302934 0.9669876 0.9931596 0.9971648 1.0420816 #>  [170,] 0.41121950 0.4299097 0.4923261 0.4994570 0.5338603 0.5511658 0.6654790 #>  [171,] 0.29657645 0.4868728 0.5069881 0.5166517 0.5268261 0.5450850 0.5856823 #>  [172,] 0.27776550 0.6249022 0.6457408 0.6518826 0.6696273 0.6987329 0.7091813 #>  [173,] 0.44458861 0.4755879 0.5550841 0.6021753 0.6096077 0.7501093 0.7558703 #>  [174,] 0.61071532 0.6898515 0.7161314 0.7284857 0.7518720 0.8066130 0.8074366 #>  [175,] 0.14732493 0.1962717 0.4338155 0.4953637 0.5233099 0.5705367 0.5712850 #>  [176,] 0.31895836 0.4349458 0.4738944 0.4740565 0.4854720 0.5021878 0.5130961 #>  [177,] 0.29808367 0.3167138 0.5267255 0.5336380 0.5452705 0.5536663 0.5548832 #>  [178,] 0.28720115 0.3484428 0.4024417 0.4349011 0.4412928 0.4470223 0.4819549 #>  [179,] 0.24470101 0.4702986 0.4765722 0.5037700 0.5291797 0.5378320 0.5861700 #>  [180,] 0.20007388 0.3235179 0.4134800 0.4540353 0.5086704 0.5371358 0.6313796 #>  [181,] 0.92876988 0.9859014 0.9984175 1.2811398 1.3444084 1.3683306 1.3792131 #>  [182,] 0.42936132 0.5520683 0.5907279 0.6467386 0.7035630 0.7130495 0.7163927 #>  [183,] 0.06835597 0.3834549 0.6396947 0.6402763 0.6521973 0.6598095 0.7142474 #>  [184,] 0.78066128 1.0575453 1.0655618 1.1074326 1.1173914 1.1382770 1.1542081 #>  [185,] 0.41066908 0.4734737 0.7323096 0.7376410 0.7406785 0.8487756 0.8511564 #>  [186,] 0.47124466 0.4895113 0.4982705 0.5010303 0.5130961 0.5320985 0.5325155 #>  [187,] 0.21610560 0.2367651 0.4427288 0.4641256 0.4792826 0.4874887 0.5441749 #>  [188,] 0.51150724 0.5554745 0.5787932 0.5886041 0.6198439 0.8046583 0.8133747 #>  [189,] 0.47308129 0.4824729 0.6257274 0.6521729 0.6588286 0.6592049 0.6751799 #>  [190,] 0.32692488 0.3980963 0.4343172 0.4461021 0.4623474 0.4922527 0.5957651 #>  [191,] 0.66732949 0.8588624 0.9108899 1.0408351 1.0693896 1.1057367 1.1557583 #>  [192,] 0.42544861 0.5353137 0.5691576 0.5718892 0.5957651 0.5974988 0.6030620 #>  [193,] 0.63858932 0.6464408 0.7627649 0.8257721 0.8446432 0.8723741 0.9450504 #>  [194,] 0.32686186 0.3972559 0.3980801 0.4208349 0.4232408 0.4960613 0.5535276 #>  [195,] 0.55700088 0.6270480 0.6396947 0.7242864 0.7628844 0.7916990 0.8473770 #>  [196,] 0.41402644 0.4623474 0.5032931 0.5118320 0.5408590 0.5807167 0.5940916 #>  [197,] 0.43987683 0.5205178 0.5224489 0.5852782 0.6680371 0.6893787 0.7041496 #>  [198,] 0.21628876 0.4861247 0.5319275 0.5321671 0.6488672 0.7288937 0.7394048 #>  [199,] 0.44205011 0.5472946 0.5998515 0.6439092 0.6949004 0.7251351 0.7556735 #>  [200,] 0.68096444 0.7229654 0.7305429 0.7436472 0.7564088 0.7696355 0.8753282 #>  [201,] 0.36824820 0.4251266 0.4324252 0.4376735 0.4412538 0.4747394 0.4831927 #>  [202,] 0.11325351 0.3098689 0.3783761 0.4282394 0.4960587 0.5068216 0.5178829 #>  [203,] 0.44904092 0.4994570 0.5419641 0.5935340 0.6858326 0.7065369 0.7150916 #>  [204,] 0.45590127 0.5865520 0.6232933 0.6893433 0.7023126 0.7459275 0.8449605 #>  [205,] 0.51251177 0.7445109 0.7538046 0.8546175 0.9033337 0.9332846 0.9382224 #>  [206,] 0.33162417 0.6527104 0.6981637 0.7181652 0.7530248 0.8231171 0.8313864 #>  [207,] 0.32826211 0.4715368 0.5139100 0.5712133 0.6207593 0.6825043 0.6832309 #>  [208,] 0.26423318 0.2859779 0.3103154 0.4242439 0.4834766 0.5730866 0.5980282 #>  [209,] 0.31256232 0.5267520 0.5330623 0.6763978 0.8033484 0.8300433 0.8341672 #>  [210,] 0.41587867 0.4416186 0.5446931 0.6101217 0.6103322 0.6279916 0.6577660 #>  [211,] 0.57339624 0.6498125 0.6600410 1.2153990 1.2409322 1.2762425 1.3071461 #>  [212,] 0.62714176 0.6932963 0.7129156 0.7762662 0.8471272 0.8753385 0.8759750 #>  [213,] 0.39278080 0.4258998 0.4606733 0.4724363 0.4915610 0.5613314 0.5678430 #>  [214,] 0.48368451 0.5458797 0.5502703 0.6062823 0.6065024 0.6229592 0.6452091 #>  [215,] 0.48186433 0.5715810 0.5787932 0.6033591 0.6728272 0.6928941 0.7017235 #>  [216,] 0.79124229 0.8242560 0.8439542 0.8538699 0.8701064 0.8945305 0.8954027 #>  [217,] 0.38305619 0.4281580 0.4523133 0.5464768 0.6071129 0.6410367 0.6503179 #>  [218,] 0.39335353 0.5718571 0.5952205 0.6260684 0.6284988 0.7457071 0.7670961 #>  [219,] 0.66295302 0.7445109 0.8868162 0.8999739 0.9124658 0.9296668 1.0543031 #>  [220,] 0.66030191 0.8671748 0.8784594 0.8826073 0.9152098 0.9329139 0.9832605 #>  [221,] 0.24968823 0.4342078 0.4742885 0.5931120 0.5967708 0.6109130 0.6403009 #>  [222,] 0.41067548 0.4861247 0.5997069 0.6121950 0.6728004 0.6782660 0.6883640 #>  [223,] 0.37242334 0.4428390 0.4983137 0.6182252 0.6264189 0.6596286 0.7075028 #>  [224,] 0.37424618 0.6998807 0.7508261 0.9364368 0.9567939 0.9666819 0.9880972 #>  [225,] 0.48699550 0.5092176 0.6032008 0.6112506 0.6683383 0.7991218 0.8259202 #>  [226,] 0.22933684 0.2541160 0.3408914 0.3603529 0.3606621 0.4103019 0.4279061 #>  [227,] 0.36685370 0.3941877 0.6103213 0.6652800 0.7364091 0.7844638 0.7861898 #>  [228,] 0.62061342 0.7086017 0.9591465 1.0044910 1.0321494 1.0458583 1.0826169 #>  [229,] 0.61226843 0.6527104 0.7660171 0.8260823 0.8315630 0.8636953 0.8758229 #>  [230,] 0.15030489 0.3227035 0.4311378 0.5209553 0.5342721 0.5400906 0.5858607 #>  [231,] 0.54820411 0.6898515 0.8432010 0.8476020 0.8726598 0.9015805 0.9961271 #>  [232,] 0.56312352 0.7229654 0.7495838 0.7817954 0.8035070 0.8339870 0.9060798 #>  [233,] 0.33897426 0.4854720 0.4914041 0.4960587 0.5452859 0.5544002 0.5547912 #>  [234,] 0.07132547 0.2075466 0.4644055 0.4701422 0.4884485 0.5308287 0.5735980 #>  [235,] 0.58741553 0.8315630 0.9547777 0.9688383 1.0759753 1.0957005 1.1478599 #>  [236,] 0.38541516 0.3929293 0.4332254 0.4338155 0.4473776 0.4481422 0.4737448 #>  [237,] 0.39791775 0.4541796 0.5642034 0.6003026 0.7030962 0.7666463 0.8313680 #>  [238,] 0.62576690 0.6507029 0.7325876 0.9326724 0.9524719 0.9660905 0.9841905 #>  [239,] 0.29789921 0.3484623 0.5497434 0.5550841 0.6058093 0.6126398 0.6239321 #>  [240,] 0.69731505 0.8542169 0.8949388 0.9759280 1.0468300 1.1380680 1.1725916 #>  [241,] 0.49550314 1.0933728 1.1092112 1.1273791 1.1616698 1.2027252 1.2364814 #>  [242,] 0.34647644 0.4251266 0.4737448 0.4840733 0.4972155 0.5416739 0.5592224 #>  [243,] 0.43673303 0.4770336 0.5334615 0.6006939 0.6200198 0.6234643 0.6603943 #>  [244,] 0.34023766 0.4541827 0.4934460 0.5094559 0.6079898 0.6895664 0.6967741 #>  [245,] 0.36060219 0.5660918 0.5712044 0.6190197 0.6271702 0.6377146 0.6436401 #>  [246,] 0.36015511 0.3644425 0.6944870 0.7117850 0.7183294 0.7424644 0.8306284 #>  [247,] 0.36909380 0.4734737 0.5369969 0.5452334 0.8001850 0.9234541 0.9477127 #>  [248,] 0.35668214 0.4328247 0.5267520 0.5533137 0.5758673 0.6587651 0.6903848 #>  [249,] 0.37200292 0.4752661 0.5868652 0.5894416 0.6342963 0.6608485 0.7589584 #>  [250,] 0.27184051 0.2859779 0.3465163 0.3824229 0.4353087 0.4374621 0.4590230 #>  [251,] 0.40653761 0.4544195 0.5738802 0.5853618 0.6018173 0.6029533 0.6133457 #>  [252,] 0.40133873 0.5283605 0.6303409 0.7231242 0.7940408 0.8170341 0.8737754 #>  [253,] 0.47128129 0.4934460 0.5471460 0.6324457 0.7091207 0.7470907 0.7981082 #>  [254,] 0.54298412 0.6344974 0.6561961 0.6579412 0.6601682 0.6603520 0.6968947 #>  [255,] 0.51596324 0.5677328 0.5862836 0.6027891 0.7584904 0.8131396 0.8400570 #>  [256,] 0.40353296 0.4402996 0.5402961 0.6379144 0.6500177 0.6638352 0.6680371 #>  [257,] 0.60126775 0.7671970 1.0910174 1.0917530 1.1101612 1.2407562 1.2723166 #>  [258,] 0.28060718 0.3648128 0.3653859 0.5558958 0.5566050 0.5715436 0.5797815 #>  [259,] 0.44501988 0.6850767 0.8335989 0.8422160 0.9627042 1.0000130 1.0416466 #>  [260,] 0.54906260 0.5744101 0.5931066 0.6266943 0.6284892 0.6757104 0.6769900 #>  [261,] 0.53216706 0.5571379 0.5903075 0.6055067 0.6233332 0.6288942 0.6335342 #>  [262,] 0.49409562 0.7071099 0.7164088 0.7446708 0.7537775 0.7615917 0.7848660 #>  [263,] 0.56775129 0.6464190 0.7476130 0.8731351 0.9056541 0.9457059 0.9853541 #>  [264,] 0.19540212 0.6267527 0.7162786 0.7389621 0.7723067 0.7726763 0.7923699 #>  [265,] 0.66191963 0.6924002 0.7107920 1.0698195 1.1324855 1.1380680 1.1598146 #>  [266,] 0.31773468 0.5069881 0.6128070 0.6158653 0.6285809 0.6351774 0.7193439 #>  [267,] 0.49819978 0.5187856 0.5382699 0.5766209 0.5913674 0.5932713 0.5939121 #>  [268,] 0.37940826 0.4363144 0.4475071 0.5230733 0.5587013 0.5646338 0.5780436 #>  [269,] 0.69500501 0.7233039 0.7278041 0.7977026 0.7997141 0.8243990 0.9716060 #>  [270,] 0.18433339 0.4609533 0.5495781 0.5650019 0.5840718 0.5870070 0.5997947 #>  [271,] 0.49819978 0.5478648 0.5991654 0.6025885 0.6458689 0.6494588 0.6696104 #>  [272,] 0.60403154 0.8748786 0.9931236 1.0316261 1.0634468 1.1212463 1.1462342 #>  [273,] 0.83100771 0.8892374 0.8922623 0.9570991 1.0051895 1.0496217 1.0506564 #>  [274,] 0.32946725 0.3426315 0.4076913 0.5062079 0.5247823 0.5416739 0.5633715 #>  [275,] 0.39735100 0.4225234 0.5823519 0.5858607 0.5997829 0.6747781 0.6843956 #>  [276,] 0.41532072 0.6426177 0.6735193 0.8577266 0.9034791 0.9284122 0.9382072 #>  [277,] 0.60779876 0.6416269 0.6445477 0.6541176 0.6871569 0.7253465 0.8046583 #>  [278,] 0.60022056 0.7909097 0.8002504 0.8793161 0.9255173 0.9706227 0.9949494 #>  [279,] 0.43420657 0.4698964 0.5744500 0.5985609 0.6655652 0.7018831 0.7065814 #>  [280,] 0.39164937 0.4189954 0.4676806 0.4941619 0.5554745 0.6047202 0.6122324 #>  [281,] 0.63313059 0.8374622 0.9068302 1.0229235 1.0394214 1.0601062 1.0659662 #>  [282,] 0.26865679 0.2703767 0.5199935 0.5369755 0.5402961 0.5736754 0.6102832 #>  [283,] 0.95858570 1.0830766 1.2319824 1.2365635 1.2951740 1.2952838 1.3093782 #>  [284,] 0.18386282 0.5590270 0.6746104 0.7282894 0.7737247 0.7915410 0.8153690 #>  [285,] 0.37200292 0.5258646 0.5786138 0.5845786 0.6122429 0.6194325 0.7238866 #>  [286,] 0.28591091 0.4484353 0.5758287 0.6059288 0.6103213 0.6884948 0.7013371 #>  [287,] 0.41808991 0.5016669 0.5054613 0.6182067 0.6224790 0.6264537 0.6277338 #>  [288,] 0.29789921 0.4445886 0.4908146 0.5105003 0.5387817 0.5718749 0.6099010 #>  [289,] 0.26325674 0.3524076 0.3559512 0.3655044 0.4421957 0.4741708 0.5083474 #>  [290,] 0.44751180 0.5480448 0.5798844 0.6785474 0.6920280 0.7799816 0.7962362 #>  [291,] 0.41506617 0.4668731 0.4999502 0.5258536 0.6758989 0.7152171 0.7330891 #>  [292,] 0.30531850 0.5381090 0.5648752 0.5660918 0.5797904 0.6416179 0.6470441 #>  [293,] 0.38635861 0.4901231 0.4928923 0.4948917 0.5559103 0.5813702 0.6005053 #>  [294,] 0.41864440 0.5665810 0.6904734 0.7173443 0.7319281 0.7409018 0.7776149 #>  [295,] 0.41532072 0.6989748 0.7922869 0.8280687 0.8469895 0.9656487 0.9843356 #>  [296,] 0.28567511 0.3547688 0.4299103 0.5960039 0.6128972 0.6370624 0.6694553 #>  [297,] 0.22933684 0.3580262 0.3663064 0.3827375 0.4147054 0.4232408 0.4455629 #>  [298,] 0.43673303 0.4651977 0.4705903 0.4712141 0.4761688 0.5035357 0.5301457 #>  [299,] 0.64878000 0.7364683 0.8633104 0.8680433 0.8897434 0.9342975 1.0127492 #>  [300,] 0.37351513 0.4474791 0.5540647 0.5712044 0.5718871 0.6052438 0.6080981 #>  [301,] 0.33163462 0.3844579 0.4583786 0.4849102 0.5195663 0.5265330 0.5576925 #>  [302,] 0.59391082 0.8758984 0.9003018 1.0793699 1.1993726 1.2638421 1.2645727 #>  [303,] 0.49596385 0.5199935 0.5203474 0.5224489 0.5631538 0.7015644 0.7269744 #>  [304,] 0.81127948 0.8427809 0.8971830 0.9095920 0.9205455 0.9616453 0.9629760 #>  [305,] 0.68615467 0.7621841 0.8688856 0.8811358 0.9343341 1.0532246 1.0752022 #>  [306,] 0.40768559 0.4419247 0.4698283 0.5233243 0.5779651 0.6055924 0.6449725 #>  [307,] 0.38670534 0.5589710 0.5864755 0.6351454 0.6535563 0.6788266 0.6831843 #>  [308,] 0.19789203 0.4676806 0.5399629 0.5524862 0.6054818 0.6112289 0.6134404 #>  [309,] 0.40504324 0.5918209 0.6083832 0.6097298 0.6999184 0.7041330 0.7364683 #>  [310,] 0.27600512 0.4342066 0.5367370 0.5924552 0.6171621 0.6680226 0.7774347 #>  [311,] 0.07132547 0.1802522 0.4042808 0.4598812 0.4718671 0.5473648 0.5502673 #>  [312,] 0.69884332 0.7383808 0.8702970 1.1327244 1.1397861 1.1692959 1.2375196 #>  [313,] 0.42791493 0.4773642 0.6130195 0.6223924 0.6949748 0.6989032 0.7178039 #>  [314,] 0.78655479 0.8851034 1.1068370 1.1141341 1.1173914 1.1265020 1.2483791 #>  [315,] 0.40955399 0.4171951 0.4484908 0.4994180 0.5203474 0.5408364 0.5819964 #>  [316,] 0.62804135 0.6616229 0.7384322 0.7472492 0.8019991 0.8228684 0.8408728 #>  [317,] 1.10683699 1.2076360 1.2079282 1.3998610 1.4022481 1.5033001 1.5756963 #>  [318,] 0.58242137 0.6215111 0.6652602 0.6662070 0.6831915 0.7141244 0.7170650 #>  [319,] 0.44074794 0.4777097 0.5069040 0.5081992 0.5198749 0.5316174 0.5567107 #>  [320,] 0.24980537 0.3235179 0.4799232 0.4938043 0.5381337 0.5867560 0.6738817 #>  [321,] 0.30372362 0.4604179 0.5440237 0.5899427 0.6558086 0.7284857 0.8437631 #>  [322,] 0.47053726 0.5595107 0.6035621 0.6721422 0.7172802 0.7280122 0.7350353 #>  [323,] 0.52898643 0.5890639 0.7473518 0.8078973 0.8283306 0.8554775 0.8580004 #>  [324,] 0.34751199 0.3517470 0.4364278 0.4590410 0.4932762 0.5036652 0.5549712 #>  [325,] 0.48842963 0.6629737 0.8385625 0.8978932 0.9510402 1.0357138 1.0402117 #>  [326,] 0.72513510 0.7909047 0.8362839 0.8708417 0.8733496 0.9418483 0.9755770 #>  [327,] 0.21983106 0.4708862 0.5403826 0.5821078 0.6239321 0.6841080 0.7017563 #>  [328,] 0.37918199 0.3830562 0.5563920 0.5978801 0.6508135 0.6534669 0.6636123 #>  [329,] 0.40184770 0.4828338 0.5390435 0.5738459 0.5989031 0.6392396 0.6435460 #>  [330,] 0.66030191 0.7188937 0.7753187 0.8758984 0.9394186 0.9430325 0.9826018 #>  [331,] 0.56393277 0.5804967 0.6811795 0.7814949 0.8822451 0.9641457 0.9746942 #>  [332,] 0.82439902 1.0427598 1.1094598 1.1450703 1.1883550 1.2314210 1.3088589 #>  [333,] 0.61125056 0.6791240 0.6976860 0.7298638 0.7694042 0.7751308 0.8681628 #>  [334,] 0.54732013 0.5491897 0.6009181 0.6220493 0.6307078 0.7181652 0.7212012 #>  [335,] 0.42890083 0.4873775 0.4930425 0.5194916 0.5440237 0.6726341 0.6763179 #>  [336,] 0.10810706 0.3294673 0.3593134 0.4427288 0.4871285 0.4893573 0.4978260 #>  [337,] 0.25554467 0.4697919 0.5157164 0.5786138 0.6342963 0.6977874 0.7274763 #>  [338,] 0.40768559 0.5045397 0.5252374 0.5424044 0.5510166 0.6072745 0.6400653 #>  [339,] 0.37424618 0.5358929 0.6992714 0.7775920 0.7897186 0.8310089 0.8320638 #>  [340,] 0.61067548 0.9287699 1.0595420 1.1747648 1.2706467 1.4426239 1.4912409 #>  [341,] 1.14346045 1.3122097 1.4672224 1.5237292 1.5838112 1.6915524 1.7849743 #>  [342,] 0.64428877 0.7309024 0.7890501 0.7893484 0.7922869 0.8149134 0.8630630 #>  [343,] 1.48377601 1.7592300 1.7654445 1.7690870 1.8097449 1.8252022 1.8458329 #>  [344,] 0.66297366 0.7383808 0.8998936 1.0120345 1.1570144 1.1594638 1.2400079 #>  [345,] 0.34298912 0.4836845 0.4849024 0.4955943 0.5452859 0.5773820 0.5921090 #>  [346,] 0.45729426 0.4860984 0.6253287 0.6284988 0.6429512 0.6430842 0.6833282 #>  [347,] 0.34298912 0.3708523 0.4412802 0.4948917 0.5384694 0.5458797 0.5547049 #>  [348,] 1.07517519 1.1103321 1.4139938 1.4293626 1.4705411 1.4828461 1.4891489 #>  [349,] 0.59788008 0.6096323 0.6226411 0.6542160 0.7329587 0.7377619 0.8247312 #>  [350,] 0.79014238 0.8369747 0.8456920 0.8906760 0.9219119 0.9649313 1.0450662 #>  [351,] 0.59522050 0.7812579 0.8179655 0.8478010 0.8675830 0.8816706 0.8863166 #>  [352,] 0.38101236 0.4376735 0.4576367 0.4588303 0.4893573 0.5027846 0.5062079 #>  [353,] 0.40122575 0.4324122 0.5252715 0.6009259 0.6119041 0.6155966 0.6168993 #>  [354,] 0.47980952 0.5624584 0.6221501 0.6698357 0.7819192 0.8053076 0.8649065 #>  [355,] 0.70603468 0.7262984 0.7652929 0.7886108 0.8815210 0.9732450 1.0855033 #>  [356,] 0.56393277 0.9512981 0.9659486 1.0412179 1.0469568 1.0994232 1.1009957 #>  [357,] 0.62855378 0.6516452 0.6529808 0.6901665 0.6961547 0.7831046 0.8133900 #>  [358,] 0.54924772 0.6784487 0.7565201 0.7667798 0.8231362 0.8544686 0.8582530 #>  [359,] 0.39582656 0.5246606 0.6333614 0.6901665 0.7236910 0.7560151 0.7966898 #>  [360,] 0.39468371 0.4648933 0.5233243 0.6198275 0.6426323 0.6649136 0.7010565 #>  [361,] 0.28080873 0.7384373 0.7607239 0.8336808 0.8524056 0.8684984 0.8956578 #>  [362,] 0.73745791 0.7518720 0.9013195 0.9325857 1.0677905 1.0805214 1.1259808 #>  [363,] 0.28547883 0.3743093 0.5268720 0.5624790 0.5698817 0.5743378 0.5916723 #>  [364,] 0.42079314 0.6992714 0.7158574 0.7384209 0.8770209 0.8800577 0.8984235 #>  [365,] 1.17723182 1.2294219 1.2891147 1.3122449 1.3487555 1.3535295 1.4423165 #>  [366,] 0.29066074 0.3520641 0.5550580 0.5565381 0.6280158 0.6457970 0.6616229 #>  [367,] 0.57629233 0.5945277 0.6541845 0.6651434 0.6830604 0.7235138 0.7330891 #>  [368,] 0.37062338 0.4014523 0.4140471 0.4260758 0.5948627 0.6694850 0.6829906 #>  [369,] 0.21983106 0.5318942 0.5725290 0.5929847 0.6423811 0.6724229 0.7362588 #>  [370,] 0.54196414 0.6027891 0.6345191 0.6944870 0.6992218 0.7025568 0.7227502 #>  [371,] 0.31229712 0.3792965 0.3952670 0.4858211 0.5003487 0.5439844 0.5771768 #>  [372,] 0.46687307 0.5791306 0.6023961 0.6096585 0.6263592 0.6651913 0.6726772 #>  [373,] 0.29146293 0.2915630 0.3484428 0.4093672 0.4829286 0.5178829 0.5243629 #>  [374,] 0.42490957 0.4940956 0.5114482 0.5967708 0.7349732 0.7566748 0.7617204 #>  [375,] 0.29925208 0.3479089 0.3641907 0.4070197 0.4909598 0.5040433 0.5492017 #>  [376,] 0.48630156 0.5059550 0.5642136 0.5860734 0.5883870 0.6274167 0.7065329 #>  [377,] 0.41220479 0.5319977 0.5557106 0.6481920 0.6500923 0.7274146 0.7287691 #>  [378,] 1.03478986 1.1621017 1.3796182 1.5907632 1.6954035 1.7751005 1.9210602 #>  [379,] 0.38101236 0.5633715 0.5824221 0.6001391 0.6142724 0.6220493 0.6356057 #>  [380,] 0.20461029 0.3468676 0.3629335 0.3867292 0.4122452 0.4590230 0.4704627 #>  [381,] 0.13160681 0.3580262 0.3961880 0.3980801 0.5395117 0.5801199 0.6130359 #>  [382,] 0.51510270 0.5904595 0.6302457 0.6550372 0.6941056 0.7499773 0.7868847 #>  [383,] 0.27600512 0.3531587 0.4698964 0.4945265 0.5428865 0.5593018 0.5668465 #>  [384,] 0.45029741 0.7205677 0.7977577 0.8172981 0.8383167 0.8525235 0.8782009 #>  [385,] 0.20802342 0.3728671 0.4378812 0.5842139 0.6113388 0.6267527 0.6305681 #>  [386,] 0.41320860 0.5527133 0.6330033 0.6780110 0.7035416 0.7134396 0.7220120 #>  [387,] 0.42490957 0.4298158 0.4549841 0.5855391 0.5931120 0.6524538 0.6705308 #>  [388,] 0.87116970 0.9859014 1.0595420 1.0997569 1.1033574 1.1233684 1.1570144 #>  [389,] 0.91885340 1.0156061 1.0684085 1.0740636 1.0845863 1.2044645 1.2255653 #>  [390,] 0.31585466 0.3960186 0.4271864 0.5031075 0.5035357 0.5036609 0.5091355 #>  [391,] 0.52260093 0.6652800 0.9620633 0.9666819 0.9682992 0.9724920 0.9745675 #>  [392,] 0.32814242 0.3551821 0.5508472 0.6085022 0.6161706 0.6277988 0.6369826 #>  [393,] 0.26633902 0.5370354 0.6130195 0.6462292 0.6788266 0.6871805 0.7014940 #>  [394,] 0.24773903 0.2604147 0.3566746 0.3964837 0.4642234 0.4915610 0.5031075 #>  [395,] 0.43924893 0.4979413 0.5015119 0.5512825 0.5518328 0.5587282 0.6300347 #>  [396,] 0.54536128 0.6501243 0.6638446 0.7019417 0.7575305 0.7945173 0.8035070 #>  [397,] 0.56025734 0.6746104 0.7716324 0.8842722 1.0233100 1.0617262 1.0634468 #>  [398,] 0.28017664 0.3119029 0.3864559 0.3913132 0.4333146 0.4356229 0.4411569 #>  [399,] 0.30398289 0.4672579 0.5298876 0.5311228 0.5805006 0.6283162 0.6727670 #>  [400,] 0.48501545 0.4974874 0.5496388 0.5593181 0.5638666 0.5889637 0.5913809 #>  [401,] 0.57046744 0.6150201 0.7875088 0.7955110 0.8067553 0.8373999 0.8812903 #>  [402,] 0.35395183 0.4015016 0.4242439 0.4654136 0.5778202 0.6359666 0.6378798 #>  [403,] 0.26325674 0.3777474 0.3820904 0.4109127 0.4577408 0.4813252 0.4851063 #>  [404,] 0.62190592 0.7323061 0.7360699 0.7886246 0.7964711 0.8086790 0.8422891 #>  [405,] 0.37175659 0.5058062 0.5359753 0.5489797 0.5544002 0.6013146 0.6078316 #>  [406,] 0.53376539 0.6636892 0.7398775 0.7533662 0.7601344 0.7791039 0.7842142 #>  [407,] 0.61946478 0.6729317 0.7212976 0.8060212 0.8321242 0.8377669 0.8960152 #>  [408,] 0.25826556 0.4705903 0.5055763 0.5234180 0.5475548 0.5568788 0.5584022 #>  [409,] 0.96635994 1.1463526 1.1667499 1.4257619 1.5415389 1.5549375 1.5567844 #>  [410,] 0.60126775 1.0280738 1.1065361 1.1722017 1.2117035 1.3092308 1.3583008 #>  [411,] 0.62616097 0.9817432 1.0133845 1.0454647 1.0575453 1.0867420 1.1555257 #>  [412,] 0.31585466 0.3923306 0.4059077 0.4273188 0.4651977 0.4679905 0.5475548 #>  [413,] 0.57477320 0.8945211 0.9955899 1.0316448 1.0567699 1.1112360 1.1164742 #>  [414,] 0.42887677 0.9042121 0.9504574 1.0114677 1.1255355 1.1674581 1.2299539 #>  [415,] 0.57715053 0.7045748 0.8756772 0.8832673 1.0797271 1.0944476 1.0992507 #>  [416,] 0.28471573 0.3717566 0.4470223 0.4792078 0.5547912 0.5653491 0.5740717 #>  [417,] 0.63086202 0.8620936 0.9342182 0.9615449 0.9766235 0.9927628 0.9986738 #>  [418,] 0.18695263 0.3644425 0.6194325 0.6608485 0.8056514 0.8210718 0.8612679 #>  [419,] 0.52647713 0.6320622 0.7570140 0.8016582 1.0212467 1.0393438 1.0783128 #>  [420,] 0.36833268 0.4180317 0.5718892 0.5872586 0.6739721 0.6909344 0.7060039 #>  [421,] 0.42970751 0.4499253 0.5287656 0.5859139 0.5926827 0.6030620 0.6102832 #>  [422,] 0.91804569 0.9326724 1.0032521 1.0358615 1.1257663 1.1701777 1.1806677 #>  [423,] 0.60440965 0.6257669 0.7024073 0.7075003 0.7976716 0.8353871 0.8362086 #>  [424,] 0.37675406 0.8684582 1.0651401 1.2587829 1.3174046 1.5163678 1.5195212 #>  [425,] 0.27151064 0.3460897 0.4193034 0.4424782 0.4993736 0.5311228 0.5382699 #>  [426,] 0.33780522 0.3690938 0.6628282 0.7017032 0.7134237 0.7376410 0.7557610 #>  [427,] 0.17751263 0.3103154 0.3465163 0.3539518 0.4813252 0.5006982 0.5017149 #>  [428,] 0.38670534 0.5912263 0.6122451 0.6263592 0.6541845 0.6679342 0.6758989 #>  [429,] 0.33601096 0.5247823 0.5984284 0.6190197 0.6349506 0.6384278 0.6521059 #>  [430,] 0.43312535 0.5490261 0.5827297 0.5835968 0.6219059 0.6454320 0.7021294 #>  [431,] 0.28977379 0.3629335 0.3865537 0.4374621 0.4785472 0.4819336 0.5006982 #>  [432,] 0.34941758 0.4768404 0.5157164 0.6532164 0.6710761 0.7314127 0.7378916 #>  [433,] 0.44271057 0.6013732 0.6635630 0.7066846 0.7205677 0.7244826 0.7446708 #>  [434,] 0.40112227 0.4773642 0.4797942 0.5070869 0.5656140 0.6342777 0.6434362 #>  [435,] 0.74586272 0.7872247 0.8970611 0.9954657 1.0071937 1.0252281 1.0357485 #>  [436,] 0.64230967 0.8795492 1.0481168 1.1921036 1.2490496 1.3775895 1.4290652 #>  [437,] 0.39042014 0.5631462 0.6103322 0.6366983 0.6580408 0.6597490 0.6808293 #>  [438,] 0.23708678 0.3135300 0.3227035 0.4167008 0.4470308 0.4849169 0.4957078 #>  [439,] 0.67293173 0.8483578 0.8620936 1.0044164 1.0119487 1.0540256 1.0715672 #>  [440,] 0.43241220 0.4575819 0.4836905 0.5835430 0.6064070 0.6108094 0.6371034 #>  [441,] 0.44219569 0.4802765 0.4851063 0.5335665 0.5564093 0.5828802 0.5925413 #>  [442,] 0.41264430 0.4998847 0.5101209 0.5169725 0.5685996 0.5712850 0.5904390 #>  [443,] 0.43643502 0.5120709 0.5780436 0.6006039 0.6053334 0.6330906 0.6593523 #>  [444,] 0.69909034 0.8027893 0.9687596 0.9999207 1.0154202 1.0853331 1.0938364 #>  [445,] 0.31190291 0.3208546 0.4259368 0.4546919 0.4631568 0.4780828 0.5661266 #>  [446,] 0.52888498 0.7268753 0.7440275 0.8368180 0.8491331 0.8858627 0.9117381 #>  [447,] 0.44194907 0.4467690 0.4583786 0.4819549 0.5381090 0.5523870 0.5873268 #>  [448,] 0.32230215 0.4338409 0.4999502 0.5431627 0.6034438 0.6926012 0.6973915 #>  [449,] 0.57573220 0.6621335 0.6950655 0.9585857 0.9621938 1.0621307 1.0815602 #>  [450,] 1.17723182 1.4069397 1.4799892 1.4827791 1.6550609 1.6865193 1.6931708 #>  [451,] 0.35291248 0.6344490 0.6594508 0.6996228 0.7535407 0.8306011 0.8458842 #>  [452,] 0.42470676 0.5517737 0.8836121 0.9764432 1.0492042 1.0889880 1.1024636 #>  [453,] 0.11325351 0.2975593 0.4024779 0.4030059 0.4829286 0.5348381 0.5446931 #>  [454,] 0.49317968 0.6008565 0.6806029 0.7632425 0.7775915 0.7972492 0.8176162 #>  [455,] 0.87487860 0.9800873 0.9972837 1.0259300 1.0815602 1.0830766 1.2027252 #>  [456,] 0.40955399 0.5492477 0.5563140 0.5571379 0.5807756 0.5843648 0.6372314 #>  [457,] 0.30381633 0.3462447 0.4628002 0.5040433 0.5262250 0.5394879 0.5728180 #>  [458,] 0.25898889 0.3137817 0.4628323 0.4867412 0.5673847 0.6151973 0.6502168 #>  [459,] 0.52392439 0.6388035 0.6616216 0.6683383 0.7289494 0.7375750 0.7521276 #>  [460,] 0.56904142 0.6036495 0.7702500 0.8458842 0.8859220 0.9173822 0.9508591 #>  [461,] 0.49679378 0.5677328 0.5870537 0.5911246 0.6561961 0.6888331 0.8230121 #>  [462,] 0.29808367 0.4186052 0.4210457 0.4328886 0.4513629 0.4982511 0.5328064 #>  [463,] 0.33162417 0.5491897 0.6353046 0.6648141 0.6995050 0.7663171 0.7821823 #>  [464,] 0.46955677 0.6370211 0.6551635 0.6710526 0.7660615 0.8239930 0.8448344 #>  [465,] 0.59182090 0.6331306 0.7286870 0.7975186 0.9347617 0.9411803 0.9438797 #>  [466,] 0.15030489 0.2370868 0.4316153 0.4994480 0.5130115 0.5387643 0.5487188 #>  [467,] 0.36058998 0.5536061 0.7252288 0.8655815 0.9383676 0.9430406 0.9949494 #>  [468,] 0.38493947 0.5140150 0.5326249 0.5396951 0.6135819 0.6686808 0.6858326 #>  [469,] 0.45646744 0.4850154 0.5231909 0.5976289 0.6130359 0.6151818 0.6288759 #>  [470,] 0.45029741 0.5059547 0.6296697 0.7066846 0.7428693 0.7479387 0.7701452 #>  [471,] 0.25252921 0.3039829 0.4193034 0.5406276 0.6614213 0.7127463 0.7363967 #>  [472,] 0.49550314 0.7160424 0.9800873 1.0226894 1.0316261 1.0767048 1.0816121 #>  [473,] 0.28591091 0.4830963 0.5599365 0.6492755 0.6703730 0.6932618 0.7169408 #>  [474,] 0.28547883 0.4370723 0.4595133 0.5869137 0.5990526 0.6018704 0.6525518 #>  [475,] 0.61413884 0.6749544 0.7160563 0.7978791 0.7998164 0.8080397 0.8422891 #>  [476,] 0.35904538 0.5744101 0.6273655 0.6278123 0.6304688 0.6756355 0.7139775 #>  [477,] 0.26865679 0.4171951 0.4922357 0.4959639 0.5276379 0.5807756 0.5823877 #>  [478,] 0.16501743 0.2769345 0.2992521 0.4904810 0.5229159 0.5396876 0.5522619 #>  [479,] 0.34608974 0.4410916 0.4658255 0.5298876 0.5331307 0.5338410 0.5406276 #>  [480,] 0.38554880 0.4042995 0.4780828 0.4861875 0.4894312 0.5127625 0.5193765 #>  [481,] 0.39468371 0.4698283 0.5382454 0.5705367 0.5904390 0.6403796 0.6482037 #>  [482,] 0.28511091 0.4103019 0.4332254 0.4455629 0.4960613 0.5169725 0.5282458 #>  [483,] 0.50593634 0.5529870 0.6057914 0.6223437 0.6660552 0.6661958 0.6692584 #>  [484,] 0.42864593 0.7019417 0.7235966 0.7495838 0.7652929 0.9106733 0.9462022 #>  [485,] 0.70107823 0.7863705 0.7918239 0.8220713 0.9155617 0.9186893 0.9579372 #>  [486,] 0.59373549 0.6190462 0.7363223 0.7563999 0.7761963 0.8275047 0.8365153 #>  [487,] 0.30531850 0.4474791 0.4747446 0.5360528 0.5410594 0.5523870 0.5854741 #>  [488,] 0.50858043 0.5738459 0.5742833 0.5827584 0.5889430 0.6223437 0.6268567 #>  [489,] 0.50104625 1.1810520 1.2327339 1.2992023 1.3079901 1.3651069 1.4714501 #>  [490,] 0.55338276 0.8175530 0.9783625 0.9824387 0.9909174 0.9972910 1.0092811 #>  [491,] 0.33138032 0.3627235 0.4311378 0.5487188 0.5903075 0.6078482 0.6266116 #>  [492,] 0.33269145 0.5770199 0.6807674 0.7010565 0.7266364 0.8384469 0.8482481 #>  [493,] 0.96863651 0.9740740 1.0334753 1.0994232 1.1393080 1.1988056 1.2249651 #>  [494,] 0.79090967 1.2081222 1.2955643 1.2964579 1.3108391 1.3681644 1.3964974 #>  [495,] 0.27587720 0.4325950 0.5147637 0.5723191 0.6439092 0.6442888 0.8047367 #>  [496,] 0.73899936 0.8870028 0.9361266 1.0751752 1.1654802 1.1903672 1.3140679 #>  [497,] 0.51138609 0.8023476 0.8684582 0.9685853 0.9728904 0.9842382 0.9867004 #>  [498,] 0.52691384 0.5552685 0.6041034 0.6657613 0.6927335 0.7174862 0.8053076 #>  [499,] 0.64878000 0.7268753 0.7601565 0.7974766 0.7997141 0.8711697 0.8752625 #>  [500,] 0.34275484 0.4301304 0.4364278 0.4406653 0.4779193 0.4871830 0.5112406 #>  [501,] 0.53346154 0.5598033 0.6256506 0.6685253 0.7498528 0.7651714 0.7669199 #>  [502,] 0.33360186 0.3700551 0.5292135 0.5298820 0.5689651 0.6011230 0.6079471 #>  [503,] 0.34359511 0.4549841 0.6635630 0.7362149 0.7589114 0.7692232 0.8119500 #>  [504,] 0.36005416 0.4167008 0.5505817 0.5557312 0.5677685 0.5847321 0.6011990 #>  [505,] 0.30256877 0.4093672 0.4384974 0.4831927 0.4978881 0.5244276 0.5303061 #>  [506,] 1.00409118 1.0510229 1.1750297 1.2325032 1.2516321 1.2887516 1.3071040 #>  [507,] 0.45417956 0.6308620 0.6851745 0.6959181 0.8014339 0.8179655 0.8377669 #>  [508,] 0.44696453 0.5505440 0.5751930 0.6350856 0.7398775 0.7440275 0.7453045 #>  [509,] 0.36362972 0.4021772 0.4355615 0.4974874 0.5081557 0.5100807 0.5336380 #>  [510,] 0.56303312 0.5685996 0.5931066 0.6120910 0.6569146 0.6638343 0.6718095 #>  [511,] 0.88165237 1.0239423 1.0355626 1.1024620 1.1326419 1.3295829 1.3435211 #>  [512,] 0.34159824 0.4282539 0.4448357 0.4873775 0.4949163 0.5393310 0.5439686 #>  [513,] 0.10575355 0.7249904 0.7418347 0.7764916 0.8338945 0.8667003 0.9032454 #>  [514,] 0.31671382 0.4035760 0.4099315 0.4328886 0.4830901 0.4861875 0.5081557 #>  [515,] 0.70301110 0.8030343 0.8476020 1.0454647 1.1148173 1.1185448 1.1437184 #>  [516,] 0.39618796 0.4469645 0.5091969 0.5175555 0.5317193 0.5337654 0.6349506 #>  [517,] 0.28299200 0.2843194 0.3522209 0.3529657 0.5155211 0.5648905 0.5677685 #>  [518,] 0.34263146 0.3464764 0.3593134 0.3603529 0.3931054 0.4473776 0.4776697 #>  [519,] 0.40965196 0.5583101 0.7948236 0.8100492 0.8300750 0.8856183 0.8877966 #>  [520,] 0.44302145 0.5502703 0.5537194 0.5559103 0.6054178 0.6282372 0.6336693 #>  [521,] 0.28080873 0.7235138 0.8041833 0.8078665 0.8131651 0.8148445 0.8652412 #>  [522,] 0.30114394 0.3281424 0.4102375 0.4241364 0.4343172 0.4415792 0.4543503 #>  [523,] 0.33346008 0.4356772 0.4928923 0.5130487 0.5418872 0.5587759 0.5734697 #>  [524,] 0.54732013 0.5908495 0.6861254 0.6950050 0.7418523 0.7814636 0.7876864 #>  [525,] 0.24470101 0.3693262 0.3693765 0.5123928 0.5534310 0.5535051 0.5670252 #>  [526,] 0.30571754 0.3529657 0.4413339 0.5709241 0.6018116 0.6112289 0.6199965 #>  [527,] 0.32509198 0.3687452 0.3946552 0.4920927 0.5533137 0.5581092 0.5656140 #>  [528,] 0.35611582 0.4122048 0.4271864 0.4273188 0.6218483 0.6596950 0.6651913 #>  [529,] 0.68102431 0.6857650 0.7835140 0.9313221 0.9351199 1.0998652 1.1031398 #>  [530,] 0.43292668 0.4520961 0.5138346 0.5411753 0.5420291 0.5547049 0.5566400 #>  [531,] 0.55338276 0.6579412 0.6775179 0.7354050 0.8292796 0.8650919 0.9126317 #>  [532,] 0.20461029 0.2778161 0.2826793 0.2908006 0.3372656 0.3830624 0.4890909 #>  [533,] 0.56666783 0.5872586 0.6665070 0.6888805 0.7053231 0.7434076 0.7641446 #>  [534,] 0.36229301 0.4329267 0.5150674 0.5321748 0.6113200 0.6186698 0.6301363 #>  [535,] 0.77491304 0.8744663 0.9383990 0.9477052 0.9499265 0.9940802 1.0287910 #>  [536,] 0.74219666 0.8837762 0.9029771 1.0045617 1.0077660 1.0750080 1.1025014 #>  [537,] 0.39210932 0.5070665 0.5296227 0.5904595 0.6869422 0.7632425 0.7727307 #>  [538,] 0.30256200 0.4316153 0.4849169 0.5261392 0.5400906 0.5930907 0.6367020 #>  [539,] 0.29066074 0.3162022 0.4645845 0.4726605 0.4830963 0.5146240 0.5477158 #>  [540,] 0.66855986 0.7695003 0.8337193 0.8707633 0.9382099 1.0086561 1.0608060 #>  [541,] 0.43849736 0.4576367 0.5015119 0.5142341 0.5767256 0.5824221 0.6519119 #>  [542,] 0.50457991 0.6268567 0.7488311 0.7795800 0.8072540 0.8231981 0.8430141 #>  [543,] 0.33612375 0.3507782 0.3865537 0.3971305 0.4411569 0.5101772 0.5336732 #>  [544,] 0.46416202 0.6594608 0.6623434 0.6866808 0.7319281 0.7393945 0.7416885 #>  [545,] 0.58107764 0.6876180 0.8248748 0.8409638 0.8569619 0.8841618 0.9018904 #>  [546,] 0.42033894 0.5204948 0.5431627 0.5762923 0.6874766 0.6962513 0.7407002 #>  [547,] 0.61067548 0.8978932 0.9173822 0.9984175 0.9999806 1.0140865 1.0212467 #>  [548,] 0.58994270 0.6261610 0.7700655 0.8245162 0.8588624 1.0043471 1.0046155 #>  [549,] 0.38927101 0.4030879 0.4278353 0.4598812 0.4884485 0.5117624 0.5413994 #>  [550,] 0.60022056 0.6302457 0.7684297 0.8867427 0.9520253 0.9751777 1.0030740 #>  [551,] 0.65164520 0.7560151 0.8190175 0.9272870 0.9637529 0.9691710 0.9836636 #>  [552,] 0.52825225 0.7835140 0.9364010 1.0168837 1.0551082 1.0738249 1.1011975 #>  [553,] 0.41067548 0.4162307 0.4484908 0.5296654 0.6137673 0.6347378 0.6372314 #>  [554,] 0.27693451 0.2775870 0.3648128 0.4909598 0.5284993 0.5661374 0.5668082 #>  [555,] 0.31677253 0.3935611 0.4572943 0.6738817 0.7332812 0.7834541 0.7984742 #>  [556,] 0.42101667 0.4213686 0.4577341 0.5081992 0.6133457 0.6159744 0.6277956 #>  [557,] 0.69909034 0.7607239 0.8164678 0.8319784 0.8763685 0.8970888 0.9260573 #>  [558,] 0.16029717 0.2575981 0.3606621 0.3890931 0.4765722 0.4776697 0.4806310 #>  [559,] 0.77124414 0.7981151 0.8108331 0.8178480 0.8775906 0.9317724 0.9383245 #>  [560,] 0.57020555 0.6646456 0.9011433 1.0539778 1.1024636 1.2212878 1.2314568 #>  [561,] 1.60899971 1.6156316 1.6928186 1.8132231 1.8245421 1.9251306 1.9270141 #>  [562,] 0.82833061 0.8753988 0.8816524 1.0864554 1.1192746 1.1848941 1.1999111 #>  [563,] 0.52362467 0.5677513 0.8892223 0.8959263 0.9554476 1.1023061 1.1360605 #>  [564,] 0.34224397 0.6044097 0.7098139 0.7273620 0.8248748 0.9094276 0.9460823 #>  [565,] 0.54580565 0.6594508 0.6988433 0.8242714 0.8730497 0.9029741 0.9357524 #>  [566,] 0.49831365 0.6887631 0.7010912 0.7351795 0.7454486 0.8143246 0.8169433 #>  [567,] 0.52640450 0.7362149 0.8339870 0.8753282 0.9518413 0.9878849 1.0124429 #>  [568,] 0.32038080 0.3779750 0.3952670 0.4060368 0.4570674 0.4940148 0.5317333 #>  [569,] 0.53306234 0.5530227 0.6342777 0.6927888 0.6989032 0.7521043 0.7540337 #>  [570,] 0.32053765 0.3250920 0.3566821 0.3735151 0.5410594 0.5691767 0.5955845 #>  [571,] 0.35428367 0.3921093 0.5706878 0.6366983 0.6593523 0.7052743 0.7147760 #>  [572,] 0.50622952 0.6676958 1.0055105 1.1040598 1.1251745 1.2090432 1.2411206 #>  [573,] 0.51033088 0.6740253 0.7385867 0.7546406 0.7601828 0.7868955 0.7988811 #>  [574,] 0.21775879 0.5026557 0.5045397 0.5770295 0.6055924 0.6426323 0.6445477 #>  [575,] 0.27969982 0.2967039 0.4736554 0.4832965 0.4932762 0.5261591 0.5320985 #>  [576,] 0.43156015 0.4825279 0.5520683 0.7916609 0.8360272 0.8373999 0.8858657 #>  [577,] 0.51755552 0.5395117 0.5505440 0.6091409 0.7378208 0.7555439 0.7564088 #>  [578,] 0.41803167 0.4544750 0.5147637 0.5563140 0.5790721 0.6643002 0.7128131 #>  [579,] 0.44411144 0.5288850 0.5751930 0.5839803 0.6628525 0.7065698 0.7161179 #>  [580,] 0.19689703 0.2047172 0.3127817 0.3635197 0.5020668 0.5723656 0.5952593 #>  [581,] 0.34566559 0.4299254 0.4718674 0.5317624 0.5693444 0.5916132 0.6313796 #>  [582,] 0.42887677 0.6996228 0.8452065 1.0271338 1.0506486 1.0734867 1.1042783 #>  [583,] 0.37774737 0.4741708 0.5192017 0.5370185 0.5439731 0.5522679 0.5524104 #>  [584,] 0.47980952 0.6453361 0.6532164 0.6532782 0.7173135 0.7324348 0.7952592 #>  [585,] 0.60038878 0.7311290 0.7627649 0.8877966 0.9416219 1.0181797 1.0265243 #>  [586,] 0.63858932 0.6430672 0.9416219 1.0306067 1.0510050 1.1459766 1.1894357 #>  [587,] 0.44501988 0.6835922 0.7219064 0.7434008 0.8104461 0.8154472 0.8191275 #>  [588,] 0.58798681 0.6861547 0.7661853 0.7848660 1.0599522 1.0612971 1.0856684 #>  [589,] 0.21610560 0.3302383 0.4342181 0.4678746 0.4978218 0.4978260 0.5152917 #>  [590,] 0.33269145 0.4648933 0.4697883 0.7123387 0.7647138 0.7687244 0.8121211 #>  [591,] 0.35904538 0.5117624 0.5735980 0.5762352 0.5874910 0.6266943 0.6788989 #>  [592,] 0.40353296 0.4132437 0.5205178 0.6336267 0.6604910 0.6935118 0.7015644 #>  [593,] 0.14133022 0.5053711 0.5069040 0.5123790 0.5290936 0.5372010 0.5889822 #>  [594,] 0.52647713 0.8851034 0.9996947 1.0680167 1.0828065 1.0892605 1.1312381 #>  [595,] 0.31620217 0.3969222 0.4430215 0.5550580 0.5802644 0.6015355 0.6359642 #>  [596,] 0.32372432 0.4442672 0.5827297 0.6318095 0.8157033 0.8502017 0.8612136 #>  [597,] 0.45951327 0.4958097 0.5062114 0.5971414 0.6452502 0.6518227 0.6545483 #>  [598,] 0.40701973 0.4076956 0.4299097 0.5144973 0.5263867 0.5522619 0.5935340 #>  [599,] 0.38522594 0.5791306 0.6122451 0.6584650 0.6853537 0.7069726 0.7602813 #>  [600,] 0.64230967 0.8810557 1.0090000 1.0295413 1.0309665 1.1792685 1.1870056 #>  [601,] 0.26382785 0.3343136 0.3682482 0.4301304 0.4310727 0.4320317 0.5027846 #>  [602,] 0.37380274 0.4591817 0.4849102 0.4982511 0.5045291 0.5054613 0.5068216 #>  [603,] 0.29670393 0.3146907 0.3613646 0.4140264 0.4590410 0.5317624 0.5321241 #>  [604,] 0.16046296 0.4150662 0.6034438 0.6262242 0.7204938 0.7375582 0.7818183 #>  [605,] 0.25632119 0.2586219 0.3830624 0.3867292 0.3907341 0.4466850 0.4940148 #>  [606,] 0.20802342 0.3614697 0.4161742 0.6296697 0.6446231 0.6576471 0.6843879 #>  [607,] 0.38493947 0.5250911 0.5555859 0.5917099 0.6147527 0.6436531 0.6896007 #>  [608,] 0.10810706 0.3931054 0.4076913 0.4412538 0.4588303 0.4641256 0.4978218 #>  [609,] 0.58049669 0.9373923 0.9659486 0.9869130 0.9954415 1.0114677 1.0155280 #>  [610,] 0.27518087 0.5155166 0.5250911 0.5566400 0.5794765 0.5901235 0.6841113 #>  [611,] 0.41292950 0.5321226 0.6430475 0.6432682 0.7057361 0.7406159 0.7602258 #>  [612,] 0.20007388 0.2498054 0.3793401 0.4816120 0.5157096 0.5290478 0.6555780 #>  [613,] 0.42825387 0.4540112 0.4930425 0.5518886 0.6128275 0.6286801 0.7126974 #>  [614,] 0.78312104 0.9706227 0.9711359 1.0030740 1.0514952 1.1240103 1.1897277 #>  [615,] 0.48463353 0.5170116 0.5176500 0.5839803 0.5908495 0.5980531 0.6541367 #>  [616,] 0.43813674 0.5598033 0.6457170 0.6579612 0.6813518 0.6866035 0.7091077 #>  [617,] 0.37755602 0.4904797 0.6370211 0.6676958 0.7492613 0.8469485 0.9181632 #>  [618,] 1.03096652 1.0481168 1.2153451 1.3594665 1.3770542 1.4057867 1.4291849 #>  [619,] 0.45293988 0.4810909 0.4871830 0.4950392 0.4957269 0.5120709 0.5243629 #>  [620,] 0.58798681 0.7615917 0.7811024 0.8839176 0.9908167 0.9908504 1.0375747 #>  [621,] 0.33726561 0.3844579 0.4122452 0.4210457 0.4262878 0.4540717 0.4591817 #>  [622,] 1.24613077 1.3915488 1.4617485 1.5690425 1.5918963 1.5919854 1.5975734 #>  [623,] 0.14279790 0.1473249 0.3854152 0.5101209 0.5226871 0.5268720 0.5686891 #>  [624,] 0.19820706 0.2009189 0.3462447 0.3573352 0.3864559 0.4006647 0.4259368 #>  [625,] 0.35734071 0.4242121 0.4407479 0.4577341 0.4691748 0.5593018 0.5800227 #>  [626,] 0.82062579 1.0947745 1.2584261 1.5811584 1.6532791 1.6539210 1.6786648 #>  [627,] 0.49039508 0.4994180 0.6137673 0.6924420 0.7480327 0.7807221 0.8144256 #>  [628,] 0.43259500 0.5810776 0.5964854 0.5998515 0.6249160 0.6643002 0.7205465 #>  [629,] 0.39488142 0.4754922 0.5369755 0.5823877 0.5827580 0.6347378 0.7086892 #>  [630,] 0.46649451 0.5893810 0.6079718 0.7287868 0.7511646 0.8221864 0.8662826 #>  [631,] 0.54296870 0.6560863 0.6835922 0.8422160 0.9214416 0.9284122 0.9968046 #>  [632,] 1.03713415 1.0677905 1.2128084 1.3244258 1.3560963 1.3815609 1.4811854 #>  [633,] 0.37472148 0.5908408 0.6735193 0.6829760 0.6989748 0.7514147 0.7547059 #>  [634,] 0.45008114 0.5517737 0.7806047 0.8586183 0.9011433 0.9286564 0.9320269 #>  [635,] 0.16124319 0.4475071 0.4613288 0.6111821 0.6639746 0.6766170 0.7018831 #>  [636,] 0.25554467 0.3494176 0.5845786 0.5868652 0.6144737 0.6996225 0.7284786 #>  [637,] 0.27518087 0.3742943 0.4520961 0.4836905 0.6138700 0.6243891 0.6436531 #>  [638,] 0.28937340 0.3343136 0.3524559 0.4679830 0.4687367 0.5511256 0.6147576 #>  [639,] 0.50457991 0.5059363 0.5827584 0.6495124 0.6811190 0.7573969 0.7612393 #>  [640,] 0.35667460 0.3803643 0.4241364 0.4254486 0.4922527 0.5007872 0.5255960 #>  [641,] 0.54298412 0.6109478 0.6755219 0.7547133 0.7844638 0.7845732 0.8465441 #>  [642,] 0.21628876 0.4045542 0.5234180 0.6121950 0.6288942 0.6959555 0.7259406 #>  [643,] 0.36260345 0.4025186 0.5166711 0.6925662 0.7749130 0.7932500 0.8812495 #>  [644,] 2.15817772 2.2177318 2.3130299 2.3556590 2.3620538 2.4000068 2.4715971 #>  [645,] 0.28060718 0.4631909 0.5028749 0.5682768 0.6026063 0.6029533 0.6164280 #>  [646,] 0.31373305 0.5893810 0.5930907 0.6104954 0.7162629 0.7746836 0.7801462 #>  [647,] 0.59856087 0.6371654 0.6766170 0.6949465 0.8620744 0.9286564 0.9286928 #>  [648,] 1.02353580 1.1459766 1.1559994 1.1824983 1.2016316 1.3002417 1.3389120 #>  [649,] 0.33163462 0.4419491 0.5016669 0.5589710 0.6195691 0.6507116 0.6866936 #>  [650,] 0.37563556 0.4025186 0.5745117 0.6029159 0.8570320 0.8865131 0.8989440 #>  [651,] 0.16046296 0.5258536 0.6839557 0.6973915 0.7170650 0.8021631 0.8371562 #>  [652,] 0.18025225 0.2075466 0.4030879 0.4177205 0.4904810 0.4955587 0.5260412 #>  [653,] 0.40222970 0.5157096 0.5867560 0.6585944 0.6654100 0.6869574 0.7291436 #>  [654,] 0.53262493 0.6536431 0.6883049 0.6888331 0.6896007 0.7025568 0.7280370 #>  [655,] 0.73112903 1.1408810 1.2200072 1.2537026 1.3969783 1.5029112 1.5068740 #>  [656,] 0.43384086 0.6262242 0.6263869 0.6839557 0.6962513 0.7242770 0.7342522 #>  [657,] 0.27776550 0.6616304 0.7868955 0.8329247 0.8471006 0.8695410 0.8781732 #>  [658,] 0.19820706 0.2971487 0.3038163 0.3856737 0.4678746 0.4792826 0.5116955 #>  [659,] 0.35291248 0.5690414 0.6508545 0.7871295 0.8230121 0.8452065 0.9029741 #>  [660,] 0.36995341 0.3935611 0.7507680 0.7552792 0.7701471 0.7859152 0.9233642 #>  [661,] 0.40060568 0.7827637 0.9331561 0.9419860 0.9449759 1.0114517 1.0487084 #>  [662,] 0.38522594 0.6928790 0.7098024 0.7476130 0.7492070 0.7582686 0.8080386 #>  [663,] 0.63038412 0.7205465 0.7890501 0.8544686 0.8655917 0.8873137 0.9469610 #>  [664,] 0.13160681 0.3268619 0.3827375 0.5091969 0.5251558 0.5541566 0.5840380 #>  [665,] 0.45418274 0.5396572 0.6053057 0.6391774 0.6821624 0.6866808 0.7091207 #>  [666,] 0.51740861 0.6763978 0.7540337 0.8626423 0.9464797 0.9669876 1.0186377 #>  [667,] 0.40150156 0.5852330 0.6521729 0.6551635 0.6828805 0.7023513 0.7193480 #>  [668,] 0.48038775 0.5985339 0.6064619 0.6361540 0.6505630 0.6637490 0.6724294 #>  [669,] 0.47943410 0.5140150 0.5358929 0.6147527 0.6998807 0.7172292 0.7735252 #>  [670,] 0.47317880 0.5758287 0.7095641 0.7169408 0.7687485 0.7845732 0.7861898 #>  [671,] 0.25252921 0.2715106 0.4672579 0.4821276 0.5338410 0.5841534 0.5939121 #>  [672,] 0.42033894 0.5912263 0.6230110 0.6462292 0.6830604 0.6972221 0.6988360 #>  [673,] 0.65958920 0.6629530 0.6949375 0.9806617 1.0180163 1.0508642 1.0688145 #>  [674,] 0.50377186 0.5099469 0.5246606 0.5883262 0.6384278 0.6452241 0.6522026 #>  [675,] 0.47526615 0.6710761 0.6992218 0.6996225 0.7274763 0.7342114 0.7599685 #>  [676,] 0.65958920 0.7389994 0.7912641 0.8868162 0.9302934 1.0021978 1.0238916 #>  [677,] 0.38398410 0.4513629 0.5536663 0.6483428 0.6649422 0.7187024 0.7299825 #>  [678,] 0.82739193 0.9183333 0.9547181 1.0243470 1.0329691 1.0405108 1.0449244 #>  [679,] 0.46745796 0.5194916 0.5805006 0.6267791 0.6558086 0.6715311 0.6724229 #>  [680,] 0.47859985 0.4907585 0.5007313 0.5146986 0.5621323 0.5646930 0.6468621 #>  [681,] 0.44439923 0.6303409 0.6536650 0.7242864 0.9169976 0.9558154 1.0062020 #>  [682,] 0.46774497 0.4973245 0.5170116 0.5439731 0.6052438 0.6271418 0.6334929 #>  [683,] 0.32953681 0.4050432 0.4266919 0.5192017 0.6365838 0.6721422 0.6990957 #>  [684,] 0.37429425 0.3770515 0.4575819 0.5155166 0.5728180 0.5734379 0.5815343 #>  [685,] 0.75186767 1.0040786 1.0958076 1.1243578 1.1725109 1.2210436 1.2604813 #>  [686,] 0.89226234 1.0596702 1.0926346 1.1542964 1.1771164 1.2163316 1.2794922 #>  [687,] 0.30787465 0.3239317 0.3783761 0.4030059 0.4174633 0.4734461 0.4950392 #>  [688,] 0.27579771 0.3402377 0.5471460 0.6358165 0.6821624 0.6884516 0.7969458 #>  [689,] 0.23676507 0.3302383 0.3856737 0.4129547 0.4471266 0.5394879 0.5513889 #>  [690,] 0.23996226 0.4111179 0.4949163 0.5125635 0.5788490 0.6315866 0.6388631 #>  [691,] 0.30187353 0.3137817 0.4829480 0.5121332 0.5865213 0.6179146 0.6300118 #>  [692,] 0.37085234 0.4849024 0.5420291 0.5618796 0.6039992 0.6313953 0.6452091 #>  [693,] 0.48330478 0.6423811 0.6459568 0.6652602 0.6841080 0.7500191 0.8021631 #>  [694,] 0.28720115 0.2915630 0.3025688 0.3897283 0.4467690 0.5524376 0.5767256 #>  [695,] 0.42612821 0.5151027 0.5952991 0.6165272 0.6869422 0.7013066 0.7252288 #>  [696,] 0.57720810 0.6009499 0.6033591 0.6871569 0.7348949 0.7499773 0.7684297 #>  [697,] 0.39138114 0.4475118 0.5146240 0.5565381 0.5599365 0.6458903 0.6761089 #>  [698,] 0.60403154 1.0259300 1.0970680 1.1358772 1.2819288 1.3171152 1.3841136 #>  [699,] 0.28267925 0.3468676 0.3796299 0.3907341 0.3999022 0.4112081 0.4353087 #>  [700,] 0.49441876 0.5518886 0.6452298 0.6562540 0.6726341 0.6793283 0.7153629 #>  [701,] 0.87539878 0.9034791 0.9602902 1.0153111 1.0295413 1.0581064 1.1206492 #>  [702,] 0.69015890 0.7492613 0.7658068 0.8041633 0.8633104 0.8986529 0.9641381 #>  [703,] 0.84368561 0.8967743 1.0158350 1.0760929 1.1048835 1.1315568 1.1822863 #>  [704,] 0.27579771 0.4868458 0.5094559 0.7106361 0.7981082 0.8230563 0.8619050 #>  [705,] 0.35295503 0.3779750 0.3913132 0.4006647 0.4109420 0.4546919 0.4858211 #>  [706,] 0.35818221 0.4014523 0.4547670 0.5580839 0.5646930 0.5712544 0.6631057 #>  [707,] 0.57573220 0.7483529 0.8428265 0.9186893 0.9931236 0.9972837 1.0579115 #>  [708,] 0.40455424 0.4868839 0.5319275 0.5952593 0.6121280 0.6193345 0.6453156 #>  [709,] 0.59327131 0.5954509 0.6241639 0.6953393 0.7251571 0.7776061 0.7837114 #>  [710,] 0.46047650 0.4941619 0.5016257 0.5399629 0.5405148 0.5706878 0.6200198 #>  [711,] 0.76251484 0.7807817 0.8136328 0.8366432 0.8763801 0.9261900 0.9356132 #>  [712,] 0.36550436 0.4152571 0.4227024 0.4412802 0.5032973 0.5402518 0.5413057 #>  [713,] 0.32610818 0.4715368 0.5251186 0.5786978 0.5840718 0.5989031 0.6521711 #>  [714,] 0.51251177 0.5885012 0.6350303 0.6662070 0.7453461 0.7971629 0.8229042 #>  [715,] 0.47402285 0.5472441 0.6690310 0.7174862 0.7288505 0.7910865 0.7997457 #>  [716,] 0.44109163 0.4674580 0.6378419 0.6586887 0.7026820 0.7030111 0.7264606 #>  [717,] 0.27969982 0.3036631 0.3146907 0.4092908 0.4173474 0.4467285 0.4734461 #>  [718,] 0.10202214 0.4260758 0.5502673 0.5659590 0.5757261 0.5887499 0.6164750 #>  [719,] 0.65733749 0.6807674 0.6933706 0.7920230 0.8014339 0.8187051 0.8533541 #>  [720,] 0.85703197 0.8744663 0.9678328 1.0389280 1.0811526 1.1879115 1.1992055 #>  [721,] 0.47647141 0.5236960 0.6343111 0.7379605 0.7599816 0.7686824 0.8119926 #>  [722,] 0.78655479 0.9032547 0.9996947 1.0343540 1.0777865 1.1673652 1.3113100 #>  [723,] 0.54477906 0.6966494 0.7587797 0.7815585 0.8281202 0.8410214 0.8417865 #>  [724,] 0.49988467 0.5802205 0.5899362 0.6304688 0.7075028 0.7117984 0.7281389 #>  [725,] 0.47302862 0.5400993 0.7405079 0.8795492 0.8976574 0.9419860 0.9446134 #>  [726,] 0.58505760 0.6509839 0.6759824 0.7063254 0.7308688 0.7319843 0.7883427 #>  [727,] 0.46846705 0.5403826 0.5725290 0.5906675 0.7625148 0.7721833 0.7898736 #>  [728,] 0.32053765 0.3773729 0.3946552 0.4328247 0.4747446 0.4764551 0.4797942 #>  [729,] 0.58341672 0.7153931 0.7226393 0.8272824 0.9100704 0.9677743 0.9732884 #>  [730,] 0.46496946 0.4829480 0.4897944 0.5002368 0.5573295 0.5723886 0.5971414 #>  [731,] 0.31773468 0.5166517 0.5986974 0.6464408 0.7168057 0.7250555 0.7684990 #>  [732,] 0.33138032 0.5155211 0.5591362 0.5709241 0.5888506 0.5975939 0.6196467 #>  [733,] 0.31243395 0.4825279 0.5704674 0.6501243 0.7035630 0.7454486 0.7662933 #>  [734,] 0.32230215 0.5710293 0.6013146 0.6263869 0.7121399 0.7152171 0.7220236 #>  [735,] 0.87454314 0.9600847 1.0387981 1.0629756 1.2857872 1.3538848 1.4249531 #>  [736,] 0.46955677 0.7162786 0.7977081 0.7988522 0.9260573 0.9483675 0.9866804 #>  [737,] 0.37675406 0.8023476 1.0312298 1.0818223 1.3511980 1.4056281 1.4342211 #>  [738,] 0.31314566 0.5997947 0.6364608 0.6394287 0.6643890 0.7165288 0.8533605 #>  [739,] 0.17442898 0.4439515 0.5189581 0.5527388 0.5621979 0.5753808 0.5762531 #>  [740,] 0.38726654 0.4592545 0.4679440 0.4735690 0.5321748 0.5411753 0.5766209 #>  [741,] 0.28937340 0.3155356 0.3217752 0.4223105 0.4320317 0.5356025 0.5646338 #>  [742,] 0.58080560 0.5835968 0.6886343 0.7424427 0.7997915 0.8078973 0.8324373 #>  [743,] 0.27239772 0.5031203 0.5642034 0.5756552 0.6083305 0.6182252 0.6194648 #>  [744,] 0.82728239 1.0931577 1.1062024 1.2461308 1.2604351 1.3547092 1.4068240 #>  [745,] 0.41121950 0.4490409 0.5263867 0.5530264 0.5712133 0.5901235 0.6166709 #>  [746,] 0.85723854 0.9457059 1.2989808 1.3350486 1.3735890 1.3915488 1.4620748 #>  [747,] 0.20128746 0.3872665 0.4976931 0.5154850 0.5516278 0.5712908 0.5913674 #>  [748,] 0.17751263 0.2642332 0.2718405 0.3820904 0.4531888 0.4654136 0.4702077 #>  [749,] 0.57320847 0.5742833 0.6782935 0.7521276 0.7570140 0.7716088 0.8442911 #>  [750,] 0.54820411 0.6107153 0.7374579 0.9174573 1.0329767 1.0371341 1.0439640 #>  [751,] 0.59805310 0.6350856 0.6436401 0.6499898 0.6636892 0.7040478 0.7278041 #>  [752,] 0.21760928 0.2908006 0.3796299 0.4466850 0.4540717 0.4617116 0.4682926 #>  [753,] 0.36874516 0.4279149 0.4764551 0.5070869 0.5691767 0.5707280 0.5758673 #>  [754,] 0.45401125 0.6226411 0.6793283 0.7161314 0.7473884 0.7577049 0.8006715 #>  [755,] 0.31373305 0.4767401 0.5261392 0.6079718 0.7292199 0.7584440 0.7722974 #>  [756,] 0.37477258 0.4132437 0.4287249 0.4398768 0.4402996 0.7248809 0.7749939 #>  [757,] 0.31842651 0.3334601 0.4163848 0.4745334 0.4901231 0.5223578 0.5236715 #>  [758,] 0.36229301 0.4442672 0.4813045 0.5525042 0.5529870 0.6521711 0.6832017 #>  [759,] 0.47707585 0.4969039 0.5527133 0.5778197 0.6081127 0.7233242 0.7556735 #>  [760,] 0.29657645 0.4300717 0.4342078 0.4506889 0.5091548 0.5693483 0.5787552 #>  [761,] 0.55831014 0.6083832 0.6365838 0.6708649 0.7172802 0.7411871 0.7684285 #>  [762,] 0.45197258 0.4666087 0.4792078 0.4920927 0.5335665 0.5472816 0.5955845 #>  [763,] 0.35595117 0.4000388 0.4152571 0.4163848 0.4334079 0.4577408 0.5174102 #>  [764,] 0.68507671 0.7434008 0.9356132 0.9393760 1.0192357 1.0713048 1.0844003 #>  [765,] 0.46846705 0.4708862 0.5226039 0.5318942 0.5387817 0.6052615 0.6096077 #>  [766,] 0.32080113 0.4642207 0.5327615 0.5568788 0.5766229 0.5998110 0.6297910 #>  [767,] 0.24056454 0.3747726 0.6893787 0.7052047 0.7742677 0.8170803 0.8314148 #>  [768,] 0.62491605 0.6335342 0.6487144 0.6540909 0.6843956 0.7165294 0.7487106 #>  [769,] 0.42521886 0.4544195 0.6429512 0.6769900 0.6809955 0.6865315 0.7284786 #>  [770,] 0.37755602 0.5062295 0.6901589 0.8239930 0.8444645 1.0480108 1.1232104 #>  [771,] 0.28431938 0.2894534 0.3135300 0.3600542 0.4994480 0.5118929 0.5342721 #>  [772,] 0.42421206 0.4945265 0.5198749 0.5367370 0.5715810 0.6351062 0.6485181 #>  [773,] 0.10202214 0.3706234 0.5649197 0.5661266 0.5851557 0.5925579 0.6157896 #>  [774,] 0.20471716 0.3323878 0.4094045 0.4189498 0.4726923 0.5481203 0.5612151 #>  [775,] 0.72637954 0.9869130 0.9972910 1.1674581 1.2352082 1.2619942 1.2986443 #>  [776,] 0.46416202 0.5396572 0.5420440 0.5431129 0.5460264 0.5925579 0.6006176 #>  [777,] 0.36368458 0.3794083 0.4285085 0.4613288 0.5428865 0.6518826 0.6533405 #>  [778,] 0.40399046 0.5319977 0.5497434 0.5561541 0.5599972 0.5697511 0.5718749 #>  [779,] 0.30366307 0.3203808 0.3239317 0.4174111 0.4529661 0.4535496 0.4779193 #>  [780,] 0.59391082 0.7188937 0.8784594 0.8960951 1.0156989 1.0574522 1.0808663 #>  [781,] 0.63320555 0.6532782 0.6698357 0.7431044 0.7470215 0.7723690 0.8241225 #>  [782,] 0.28997577 0.3359425 0.4006353 0.4564433 0.5040580 0.5204372 0.5901067 #>  [783,] 0.59170992 0.6868528 0.7231242 0.7508261 0.7535625 0.7735252 0.7775920 #>  [784,] 0.16124319 0.3636846 0.4363144 0.5668465 0.5744500 0.5808100 0.6371654 #>  [785,] 0.47943410 0.4863016 0.5555859 0.5620397 0.5794765 0.6135819 0.6243891 #>  [786,] 0.42864593 0.5631235 0.6638446 0.7060347 0.8477498 0.9940425 1.0047146 #>  [787,] 0.85723854 0.8731351 0.9554476 0.9605511 0.9762443 0.9849855 1.1360555 #>  [788,] 0.39692224 0.4726605 0.5007313 0.5154050 0.5418872 0.5518192 0.5537194 #>  [789,] 0.35428367 0.4818643 0.5296227 0.5886041 0.6047202 0.6053334 0.7013766 #>  [790,] 0.41292950 0.5207719 0.6318903 0.6860436 0.6986630 0.7475969 0.7580055 #>  [791,] 0.42716882 0.4331254 0.5289864 0.5808056 0.5954509 0.7162224 0.7514147 #>  [792,] 0.33601096 0.3606022 0.5176500 0.5797904 0.5915078 0.6193858 0.6334929 #>  [793,] 0.72351312 0.7246626 0.7409018 0.8095136 0.8504452 0.8631186 0.9312267 #>  [794,] 0.46391937 0.6621335 0.6708649 0.7483529 0.9256326 0.9861604 1.0271834 #>  [795,] 0.31553564 0.3351997 0.4006353 0.4620162 0.4687367 0.4808516 0.6207910 #>  [796,] 0.61613532 0.6791240 0.7997915 0.8482010 0.9115970 0.9166809 0.9709494 #>  [797,] 0.47308129 0.5576488 0.5673847 0.6214205 0.6324457 0.6637824 0.6651515 #>  [798,] 0.52499741 0.7384209 0.8310089 0.9068302 0.9727610 0.9999539 1.0309450 #>  [799,] 0.34359511 0.4298158 0.4427106 0.4814989 0.6844240 0.6938672 0.7428693 #>  [800,] 0.31314566 0.4616742 0.5650019 0.5884436 0.5901067 0.6435460 0.6537555 #>  [801,] 0.31243395 0.4293613 0.4315601 0.5873547 0.6150201 0.6462393 0.7751105 #>  [802,] 0.89330431 0.9788810 1.0003826 1.1217052 1.1318544 1.1919058 1.2598893 #>  [803,] 0.25898889 0.3018735 0.5002368 0.5814759 0.6066079 0.6110617 0.6355029 #>  [804,] 0.39488142 0.5276379 0.5296654 0.5603999 0.5736754 0.5819964 0.5843648 #>  [805,] 0.37934009 0.4022297 0.4134800 0.4718674 0.4799232 0.5963458 0.6458510 #>  [806,] 0.46979191 0.5558958 0.6018173 0.6144737 0.6207593 0.6649301 0.6958189 #>  [807,] 0.42716882 0.5890639 0.6054178 0.6466419 0.6467896 0.6786679 0.6822487 #>  [808,] 0.31677253 0.3699534 0.4860984 0.5381337 0.6260684 0.6944325 0.7556196 #>  [809,] 0.51150724 0.5464768 0.6146203 0.6591283 0.6636123 0.6659722 0.6754462 #>  [810,] 0.49441876 0.5827911 0.6062999 0.6096323 0.6430475 0.6860436 0.7023953 #>  [811,] 0.74844382 0.7887564 0.8663640 0.8665657 0.8756676 0.8759358 0.9775332 #>  [812,] 0.66514338 0.6866507 0.8148445 0.8336808 0.9512969 1.0483510 1.0750038 #>  [813,] 0.18433339 0.4200201 0.5389519 0.5875086 0.5884436 0.6229469 0.6364608 #>  [814,] 0.42190500 0.4677450 0.4846335 0.5062114 0.5723886 0.6544648 0.6597964 #>  [815,] 0.58850117 0.7394000 0.7538046 0.7670848 0.7726068 0.8080108 0.9192160 #>  [816,] 0.16337551 0.3295368 0.4705373 0.5689050 0.6097298 0.6858071 0.6892257 #>  [817,] 0.38004758 0.4186444 0.5460264 0.6391774 0.6623434 0.6821262 0.6908249 #>  [818,] 0.35818221 0.4840737 0.5677212 0.5948627 0.5991654 0.6011795 0.6211608 #>  [819,] 0.40405642 0.4381367 0.5782979 0.6008565 0.6628859 0.6685253 0.6836411 #>  [820,] 0.42002011 0.5495781 0.6430842 0.6944325 0.7478311 0.7688458 0.7834541 #>  [821,] 0.41066908 0.5452334 0.5779786 0.6183221 0.6336693 0.6966494 0.7017032 #>  [822,] 0.49047970 0.6271702 0.6285538 0.6499898 0.7270702 0.7318421 0.7436833 #>  [823,] 0.62131727 0.6426177 0.6560863 0.6672846 0.6953393 0.7547130 0.7600794 #>  [824,] 0.62061342 0.9814049 1.0354977 1.1667499 1.1725226 1.1749031 1.2815108 #>  [825,] 0.42470676 0.4500811 0.6533405 0.7741024 0.7944983 0.9127628 0.9286928 #>  [826,] 0.36029640 0.5282508 0.5512825 0.5719279 0.5785546 0.6350860 0.6540926 #>  [827,] 0.52559601 0.5957662 0.6055067 0.6393000 0.6691141 0.6869860 0.7390033 #>  [828,] 1.04356944 1.1318544 1.1621017 1.2074920 1.2242915 1.2979994 1.3513730 #>  [829,] 1.20574418 1.2146118 1.2405186 1.2826549 1.2969026 1.3529362 1.3806766 #>  [830,] 0.94770523 0.9663599 1.0458583 1.1874198 1.1879115 1.1981170 1.3434716 #>  [831,] 0.54634526 0.5602186 0.6594608 0.7298254 0.7384322 0.7512439 0.7656390 #>  [832,] 0.47729077 0.4897944 0.4999069 0.5962163 0.6035621 0.6497402 0.6819016 #>  [833,] 0.49794132 0.6001391 0.6509262 0.6567943 0.6932963 0.6989156 0.7716280 #>  [834,] 0.49690391 0.6276734 0.6924002 0.6973151 0.7909047 0.8043866 0.9049760 #>  [835,] 0.39138114 0.5154050 0.5477158 0.5480448 0.5621979 0.5948780 0.6015355 #>  [836,] 0.59159238 0.6685599 0.7117850 0.9680341 1.0303407 1.0407151 1.0554769 #>  [837,] 0.90325466 1.1065179 1.1826681 1.2794249 1.2870225 1.5230662 1.5331308 #>  [838,] 0.43567724 0.4745334 0.5059550 0.5620397 0.5923089 0.6128070 0.6314845 #>  [839,] 0.96559312 1.0572814 1.0666690 1.0906388 1.1571322 1.3440167 1.4380692 #>  [840,] 0.52691384 0.5472441 0.5669323 0.6096090 0.7314127 0.7819192 0.8354779 #>  [841,] 0.38554880 0.3964837 0.4300336 0.4606733 0.4866288 0.5186367 0.5503343 #>  [842,] 0.33711848 0.3834549 0.5570009 0.6106367 0.6599610 0.7223774 0.7692001 #>  [843,] 0.32080113 0.4770336 0.4828729 0.5016257 0.5055763 0.5301457 0.5584395 #>  [844,] 0.70457485 0.7609011 0.7883427 0.8644291 0.8842722 0.8874461 0.8980552 #>  [845,] 0.45578900 0.4869808 0.5478648 0.5509206 0.6085022 0.6503164 0.6590733 #>  [846,] 0.31743679 0.4604179 0.6283162 0.6763179 0.7291436 0.7299661 0.7446167 #>  [847,] 0.42215733 0.6600410 0.7800309 0.9252060 1.1176434 1.1240103 1.1548036 #>  [848,] 0.47819086 0.5771505 0.6260961 0.7611419 0.7719791 0.7997483 0.8178480 #>  [849,] 0.88361208 1.0660215 1.0984606 1.1963492 1.1976599 1.2347803 1.2587465 #>  [850,] 0.77160875 0.9285010 0.9357227 0.9588219 1.0212467 1.0863002 1.1189031 #>  [851,] 0.16337551 0.4266919 0.5370185 0.5595107 0.6743883 0.6882590 0.6999184 #>  [852,] 0.59210504 0.6927335 0.7594024 0.7723690 0.7981879 0.8273919 0.8803942 #>  [853,] 0.67663485 0.7455076 0.8549503 0.8641086 0.9154584 0.9603773 1.0092871 #>  [854,] 0.39278080 0.4375188 0.5561541 0.5850576 0.5897240 0.6479863 0.6688277 #>  [855,] 0.52825225 0.9580693 0.9724968 0.9988770 1.1031398 1.1569421 1.1623174 #>  [856,] 0.72629842 1.1977448 1.2449350 1.3944367 1.4370307 1.4666042 1.4971022 #>  [857,] 0.81901753 0.9490470 0.9993490 1.0416610 1.1463692 1.2030164 1.3076008 #>  [858,] 0.19689703 0.3139681 0.3323878 0.3327203 0.6109003 0.6121280 0.6218027 #>  [859,] 0.52049476 0.6866507 0.7384373 0.7419742 0.7552838 0.8078665 0.8319784 #>  [860,] 0.33551271 0.4035760 0.4042995 0.4641433 0.4880021 0.4907585 0.5046857 #>  [861,] 0.17271549 0.3992005 0.5557312 0.6006176 0.6776519 0.6811795 0.7081183 #>  [862,] 0.70413297 0.7286870 0.7926848 0.8041633 0.8070346 0.8300750 0.8680433 #>  [863,] 0.28977379 0.3507782 0.4445954 0.4824729 0.4868728 0.5091548 0.5689214 #>  [864,] 0.36833268 0.4544750 0.4844229 0.5691576 0.5723191 0.6724294 0.7309024 #>  [865,] 0.45403526 0.4816120 0.4938043 0.5963458 0.6198285 0.6869574 0.7295895 #>  [866,] 0.39222424 0.4445253 0.4701621 0.4814989 0.5655121 0.5723656 0.6013732 #>  [867,] 0.70955561 0.7217498 0.7347754 0.8772173 0.9158237 0.9277648 0.9307967 #>  [868,] 0.64170753 0.7670178 0.8626423 0.9239927 0.9272870 0.9383676 0.9696702 #>  [869,] 0.31229712 0.4092908 0.4535496 0.4736554 0.5028283 0.5132941 0.5216529 #>  [870,] 0.18838163 0.3971305 0.4021772 0.4099315 0.4333146 0.5046857 0.5189581 #>  [871,] 0.56934834 0.6109130 0.6785474 0.6866588 0.7000242 0.7238920 0.7294129 #>  [872,] 0.92530096 1.0947745 1.2513286 1.2816293 1.2879963 1.2888221 1.4949413 #>  [873,] 0.30787465 0.3613646 0.3899852 0.4173474 0.4338438 0.4529399 0.4529661 #>  [874,] 0.44205011 0.4770758 0.6276734 0.7162629 0.7490507 0.7506216 0.7580258 #>  [875,] 0.37286706 0.4161742 0.4445954 0.4506889 0.4785472 0.5065083 0.5879978 #>  [876,] 0.27178070 0.4575445 0.5296101 0.6230110 0.7226393 0.8574696 0.8711462 #>  [877,] 0.54296870 1.0415895 1.0899313 1.1700214 1.2219278 1.2412529 1.3329004 #>  [878,] 0.33519972 0.5204372 0.6277956 0.6331529 0.6337846 0.6443588 0.6801637 #>  [879,] 0.54477906 0.6183221 0.6282372 0.6814360 0.6983381 0.7704118 0.8358870 #>  [880,] 0.28415209 0.3415982 0.4835823 0.4892782 0.5032931 0.5125635 0.5323816 #>  [881,] 0.52736497 0.5525252 0.5962163 0.6017637 0.6214205 0.6257274 0.6502168 #>  [882,] 0.23996226 0.4448357 0.4892782 0.5112118 0.5738338 0.6245262 0.6286801 #>  [883,] 0.39701205 0.4999069 0.5273650 0.5865213 0.6036495 0.6508545 0.6545483 #>  [884,] 0.10575355 0.7044691 0.7560877 0.7916435 0.8220381 0.9108537 0.9186660 #>  [885,] 0.59230891 0.6158653 0.7013371 0.7250555 0.7350353 0.7411871 0.7687485 #>  [886,] 0.50595469 0.5114482 0.6705308 0.7164088 0.7952872 0.8172981 0.8346311 #>  [887,] 0.18386282 0.6052615 0.6259580 0.7274152 0.7308688 0.7537246 0.7558703 #>  [888,] 0.32372432 0.5490261 0.6886343 0.6976860 0.7075729 0.7854328 0.7964711 #>  [889,] 0.20128746 0.4467285 0.4592545 0.5073504 0.5313733 0.5562496 0.5564578 #>  [890,] 0.38398410 0.4186052 0.5358940 0.6260961 0.6571463 0.6585630 0.7346542 #>  [891,] 0.21775879 0.5424044 0.5571897 0.5694820 0.5779651 0.6009499 0.6198275 #>  [892,] 0.80703460 0.9411803 1.2980996 1.3251873 1.3384776 1.3723183 1.4017407 #>  [893,] 0.61262852 0.7120569 0.7930138 0.8190372 0.8805264 0.9248670 0.9540498 #>  [894,] 0.57477320 0.7694042 0.9034055 0.9057874 1.0078337 1.0555710 1.1367827 #>  [895,] 0.41016421 0.4392489 0.5785546 0.6147576 0.6914989 0.7128548 0.7309189 #>  [896,] 0.61190406 0.6361540 0.6527648 0.7017015 0.7791979 0.7919712 0.8191598 #>  [897,] 0.46829263 0.5058062 0.5324263 0.5710293 0.6482563 0.6856865 0.6926012 #>  [898,] 0.42252337 0.6274903 0.6488399 0.6540909 0.6776519 0.7098903 0.7252236 #>  [899,] 1.03110694 1.0750080 1.1450703 1.1633723 1.2448594 1.3306354 1.3544892 #>  [900,] 0.41808991 0.4362101 0.5952216 0.6023961 0.6483428 0.6560416 0.6560632 #>  [901,] 0.65733749 0.6851745 0.7952592 0.8745431 0.9053361 0.9986738 1.0059482 #>  [902,] 0.99934899 1.1914154 1.2634446 1.4228014 1.4474304 1.5463902 1.5843895 #>  [903,] 0.52054448 0.5666678 0.7295895 0.7518677 0.9105165 0.9703127 1.0329691 #>  [904,] 0.30114394 0.3132639 0.3259053 0.3551821 0.3980963 0.5980931 0.6191404 #>  [905,] 0.95914649 1.1347822 1.1673990 1.1820520 1.2178776 1.3053914 1.3549146 #>  [906,] 0.45155332 0.5090745 0.5125321 0.5290936 0.5714454 0.5926827 0.6219361 #>  [907,] 0.27012064 0.3573407 0.4210167 0.5567107 0.5718571 0.6253287 0.6477397 #>  [908,] 0.51667107 0.5745117 0.5865520 0.6345321 0.6537555 0.6573362 0.6608121 #>  [909,] 0.63038412 0.7667798 0.9834176 1.0341095 1.0449724 1.0763714 1.1137054 #>  [910,] 0.38626799 0.4214704 0.5103309 0.5521031 0.6485181 0.7312705 0.7484098 #>  [911,] 0.31396807 0.3635197 0.4094045 0.4650143 0.6545371 0.6742323 0.7112172 #>  [912,] 0.66163037 0.7091813 0.9361266 0.9892446 0.9978216 1.0111184 1.0324677 #>  [913,] 0.40398788 0.4370126 0.5906675 0.7273620 0.7733326 0.8254954 0.8362086 #>  [914,] 0.74709066 0.7671970 0.8149375 0.9505859 0.9530753 0.9739714 1.0388821 #>  [915,] 0.72466259 0.7393945 0.8445011 0.8617740 0.9502754 0.9605883 0.9760931 #>  [916,] 0.47647141 0.5453613 0.6025488 0.7426871 0.7486613 0.7883968 0.7884570 #>  [917,] 0.16501743 0.2775870 0.3641907 0.4930826 0.5144973 0.5152917 0.5338603 #>  [918,] 0.19540212 0.6305681 0.6657718 0.6769619 0.6874868 0.6899812 0.7051960 #>  [919,] 0.41623066 0.4903951 0.5408364 0.6126285 0.7299662 0.7819215 0.7964172 #>  [920,] 0.41320860 0.4785999 0.4869808 0.5580839 0.6011795 0.6025885 0.6081127 #>  [921,] 0.41404711 0.4547670 0.4840737 0.5721873 0.5783029 0.5801135 0.5864353 #>  [922,] 0.42215733 0.5733962 0.7137534 0.8496971 1.0452136 1.0532431 1.0734400 #>  [923,] 0.37380274 0.4429853 0.4642234 0.4688398 0.5036609 0.5383248 0.5566536 #>  [924,] 0.35315867 0.4285085 0.5230733 0.5713332 0.5800227 0.5808100 0.5924552 #>  [925,] 0.36146965 0.4378812 0.5231909 0.5361988 0.5554105 0.5593181 0.5669865 #>  [926,] 0.28997577 0.3187343 0.3201712 0.4595337 0.4620162 0.5356025 0.6633166 #>  [927,] 0.28471573 0.4412928 0.4439081 0.4519726 0.4802765 0.5059085 0.5083474 #>  [928,] 0.46978829 0.5770199 0.7660171 0.7736202 0.8173819 0.8305563 0.8373463 #>  [929,] 0.16029717 0.2541160 0.3663064 0.3803989 0.3986548 0.4162849 0.4873894 #>  [930,] 1.18249829 1.3473434 1.4381263 1.5142443 1.5416161 1.5832884 1.6544146 #>  [931,] 0.54580565 0.5869137 0.7527805 0.7694566 0.7950681 0.8167371 0.8230146 #>  [932,] 0.56054297 0.6345156 0.6545371 0.7423340 0.7537775 0.7619909 0.8026459 #>  [933,] 0.41111790 0.5738338 0.7073982 0.7168567 0.7192953 0.7351809 0.7577049 #>  [934,] 0.61051394 0.7086017 0.9793953 0.9814049 1.1081457 1.1536435 1.1981170 #>  [935,] 0.39224540 0.5788490 0.6846027 0.6986785 0.7114005 0.7375750 0.7453461 #>  [936,] 0.54729456 0.5602186 0.7044691 0.7217592 0.7418347 0.7437643 0.7490507 #>  [937,] 0.86039472 1.0090000 1.0877738 1.1682549 1.1781355 1.1813314 1.1823472 #>  [938,] 0.55302643 0.5915924 0.7065369 0.7142474 0.7293718 0.7360657 0.7424644 #>  [939,] 0.56025734 0.7609011 0.7737247 0.8310271 0.9707690 1.0650983 1.1750297 #>  [940,] 0.27254440 0.4039879 0.5613314 0.6550975 0.6688277 0.7024073 0.7098139 #>  [941,] 0.42136865 0.4223105 0.4565149 0.4679830 0.4777097 0.4808516 0.5155907 #>  [942,] 0.31895836 0.3899852 0.4024779 0.4174633 0.4282394 0.4286280 0.4909808 #>  [943,] 0.55526845 0.8175530 0.8621568 0.8743788 0.9037873 0.9106158 0.9126317 #>  [944,] 0.28945337 0.3522209 0.4355615 0.4726923 0.4824530 0.4957078 0.5020668 #>  [945,] 0.39701205 0.4441114 0.4649695 0.4772908 0.4958097 0.5121332 0.5525252 #>  [946,] 0.25826556 0.3960186 0.4059077 0.4712141 0.5264046 0.5756506 0.5998110 #>  [947,] 0.93058951 0.9938253 1.0666690 1.1109208 1.1775595 1.2319824 1.2613084 #>  [948,] 0.46391937 0.5937355 0.6950655 0.8280929 0.8356064 0.8428265 0.9122847 #>  [949,] 0.34790891 0.4680796 0.5396876 0.6382281 0.6400575 0.6411255 0.6481905 #>  [950,] 0.35238291 0.3668537 0.6109478 0.7095641 0.7749325 0.8901491 0.9312267 #>  [951,] 0.36014599 0.3626034 0.3756356 0.6345321 0.6914989 0.7432730 0.7683442 #>  [952,] 0.61051394 0.7913864 1.1114868 1.1826681 1.2551316 1.2594305 1.3036950 #>  [953,] 0.39042014 0.4158787 0.4810909 0.5647542 0.6021192 0.6182067 0.6234334 #>  [954,] 0.28017664 0.3355127 0.3529550 0.3573352 0.4484865 0.4631568 0.5127625 #>  [955,] 0.50265573 0.5694820 0.5804012 0.5873547 0.5907279 0.6416269 0.7694554 #>  [956,] 0.36014599 0.6029159 0.6925662 0.7998164 0.8139813 0.8228826 0.8433855 #>  [957,] 0.44593944 0.6209246 0.7702690 0.7912641 0.8469937 0.9152098 0.9808985 #>  [958,] 0.52260093 0.8206258 0.9253010 0.9740586 1.0478554 1.1794328 1.1998280 #>  [959,] 1.22005515 1.2812545 1.2916781 1.3668941 1.3808707 1.3824581 1.3858493 #>  [960,] 0.36443253 0.4299254 0.5113963 0.5261591 0.5371358 0.5701869 0.6043776 #>  [961,] 0.42612821 0.5536061 0.5648752 0.6924142 0.6987769 0.7122091 0.7164410 #>  [962,] 0.57320847 0.5996770 0.6378419 0.7153605 0.7258441 0.7281789 0.7300526 #>  [963,] 0.50104625 1.4013816 1.4365007 1.5010291 1.5630016 1.6604986 1.7171154 #>  [964,] 0.35611582 0.3923306 0.4362101 0.4761688 0.5309856 0.6096585 0.6523362 #>  [965,] 0.37936287 0.3992005 0.5410478 0.5420440 0.5847321 0.6120910 0.6313301 #>  [966,] 0.37918199 0.5827911 0.6410367 0.6615979 0.6618955 0.6919742 0.7004741 #>  [967,] 0.37347827 0.3764244 0.4297075 0.4413339 0.5535051 0.5607194 0.5714454 #>  [968,] 0.36181453 0.5862836 0.5911246 0.6382281 0.6601682 0.8033420 0.8270223 #>  [969,] 0.76963550 0.7877537 0.7930202 0.8200517 0.8242714 0.8347348 0.8366400 #>  [970,] 0.39804258 0.6163321 0.7753187 0.8112795 0.9329139 0.9580693 1.0356727 #>  [971,] 0.43641429 0.4869955 0.5239244 0.6068497 0.8021219 0.8538699 0.8701711 #>  [972,] 0.36029640 0.4101642 0.6057914 0.6300347 0.6495124 0.6710343 0.6735510 #>  [973,] 0.73258759 0.7385535 0.7601879 0.7712441 0.7952872 0.8133476 0.8404859 #>  [974,] 0.35238291 0.3941877 0.4484353 0.4731788 0.6755219 0.6932618 0.7235131 #>  [975,] 0.28567511 0.3119312 0.3259819 0.4281580 0.5549712 0.5563920 0.5995921 #>  [976,] 0.31278173 0.3327203 0.4189498 0.4445253 0.4650143 0.5033323 0.5605430 #>  [977,] 0.33594253 0.4595337 0.4616742 0.4790044 0.5860091 0.6331529 0.6494443 #>  [978,] 1.03478986 1.2242915 1.2413483 1.4842749 1.5761385 1.6427164 1.6620518 #>  [979,] 0.54009927 0.6608047 0.7609127 0.7673573 0.7806613 0.8027489 0.8694903 #>  [980,] 0.70067115 0.9695747 1.0765607 1.2625264 1.2850803 1.3643177 1.4147155 #>  [981,] 0.27012064 0.3933535 0.4691748 0.5316174 0.6159744 0.6591283 0.6766349 #>  [982,] 0.47819086 0.6507029 0.6649422 0.6726772 0.7346542 0.8108331 0.8133476 #>  [983,] 0.25632119 0.3184265 0.3863586 0.4112081 0.4334079 0.4686618 0.5032973 #>  [984,] 0.26873931 0.3952351 0.4735690 0.5415387 0.6043776 0.6151749 0.6195682 #>  [985,] 0.40244168 0.4227024 0.4747394 0.5176903 0.5282508 0.5285633 0.5378610 #>  [986,] 0.27254440 0.4370126 0.5706307 0.5897240 0.6493103 0.7134396 0.7233242 #>  [987,] 0.48688386 0.6742323 0.7075003 0.7383690 0.7426036 0.7431238 0.7503363 #>  [988,] 0.40112227 0.5530227 0.5707280 0.6055384 0.6936673 0.7024491 0.7044718 #>  [989,] 0.20091895 0.2971487 0.3208546 0.4109420 0.4129547 0.4356229 0.4484865 #>  [990,] 0.46807958 0.6391036 0.6435511 0.6968947 0.6986823 0.7038265 0.7354050 #>  [991,] 0.37430928 0.4076956 0.4342181 0.4370723 0.4923261 0.4930826 0.5229159 #>  [992,] 0.37737294 0.4666087 0.5360528 0.6306746 0.6502759 0.6671276 0.6949748 #>  [993,] 0.47302862 0.6527648 0.7141794 0.7995902 0.8027489 0.8131032 0.8469895 #>  [994,] 0.43641429 0.4955943 0.6032008 0.6039992 0.6253038 0.6265692 0.6388035 #>  [995,] 0.78312104 0.8867427 0.9464186 1.0914421 1.1405249 1.1466864 1.1500124 #>  [996,] 0.24056454 0.4287249 0.5852782 0.7953753 0.8061380 0.8229808 0.9020577 #>  [997,] 0.32610818 0.3282621 0.4813045 0.6113200 0.6141388 0.6661958 0.6705851 #>  [998,] 0.52910273 0.5802205 0.6012839 0.6083305 0.6278123 0.6500177 0.6560204 #>  [999,] 0.93511995 0.9626636 1.1011975 1.2041270 1.4155220 1.4191679 1.4664281 #> [1000,] 0.36937646 0.3764244 0.4011750 0.4294431 0.4499253 0.4866288 0.5418886 #>              [,8]      [,9]     [,10] #>    [1,] 0.5428312 0.5695790 0.6351611 #>    [2,] 0.5187856 0.5564578 0.5712908 #>    [3,] 0.7817423 0.9024040 0.9032454 #>    [4,] 0.6679337 0.7150483 0.7424457 #>    [5,] 0.7323096 0.7500014 0.7757407 #>    [6,] 0.7365349 0.7420333 0.8426230 #>    [7,] 0.5354334 0.5535050 0.5567739 #>    [8,] 0.6695459 0.6753192 0.6755490 #>    [9,] 1.2026024 1.3002345 1.3056620 #>   [10,] 0.9200251 0.9277648 0.9331858 #>   [11,] 0.7962362 0.8411464 0.9446996 #>   [12,] 0.9607031 0.9640132 0.9688383 #>   [13,] 0.6813682 0.6879926 0.6968224 #>   [14,] 0.5536038 0.5628452 0.5646981 #>   [15,] 0.7528559 0.7705488 0.7903492 #>   [16,] 0.8401095 0.8410214 0.8637399 #>   [17,] 1.2168120 1.2413483 1.2436479 #>   [18,] 1.1731417 1.3056620 1.3093604 #>   [19,] 1.0339820 1.0399492 1.0420816 #>   [20,] 1.1875216 1.2248730 1.2255292 #>   [21,] 0.5123790 0.5132941 0.5405952 #>   [22,] 0.7377129 0.7444957 0.7615671 #>   [23,] 0.5487745 0.5766229 0.5808484 #>   [24,] 0.9902790 1.0205112 1.0468283 #>   [25,] 0.8493089 0.8913478 0.9041137 #>   [26,] 0.6347758 0.6586887 0.6617352 #>   [27,] 1.1985865 1.1989443 1.2061804 #>   [28,] 0.6401428 0.6466583 0.6826828 #>   [29,] 0.9327631 1.0681614 1.0739387 #>   [30,] 0.8055647 0.8142795 0.8163081 #>   [31,] 0.6941056 0.7061397 0.7128839 #>   [32,] 0.5125321 0.5129071 0.5646999 #>   [33,] 0.5743378 0.5931820 0.6197073 #>   [34,] 1.1184913 1.1470804 1.1702995 #>   [35,] 0.6142724 0.6511493 0.6727196 #>   [36,] 0.9620633 0.9873606 0.9887100 #>   [37,] 1.1739421 1.2380052 1.2968317 #>   [38,] 0.6887631 0.7117984 0.7212976 #>   [39,] 0.6663782 0.6984045 0.7125792 #>   [40,] 0.7165133 0.7190591 0.7430287 #>   [41,] 0.6948340 0.7330044 0.7662933 #>   [42,] 1.1716053 1.2184584 1.2732701 #>   [43,] 0.8873840 0.9120311 0.9403597 #>   [44,] 0.9783486 0.9999806 1.0813540 #>   [45,] 0.5646999 0.5708156 0.5717981 #>   [46,] 1.1903672 1.2129435 1.2326678 #>   [47,] 0.9041555 0.9143293 0.9175895 #>   [48,] 0.5971163 0.6610440 0.6692584 #>   [49,] 0.6453361 0.7243669 0.7325497 #>   [50,] 0.6959181 0.7266364 0.9003672 #>   [51,] 1.0982137 1.1271582 1.2848889 #>   [52,] 0.9288915 0.9481439 1.0327111 #>   [53,] 0.7814949 0.7996211 0.8239334 #>   [54,] 0.9621047 1.0285556 1.0457997 #>   [55,] 0.9823696 1.0152949 1.0343540 #>   [56,] 0.7954697 0.8240416 0.8341672 #>   [57,] 1.1144895 1.1783745 1.1892486 #>   [58,] 0.7484438 0.8456453 0.8611074 #>   [59,] 0.7118552 0.7207807 0.7282719 #>   [60,] 0.7293718 0.7529247 0.7588167 #>   [61,] 0.6461238 0.6524538 0.6615364 #>   [62,] 0.5413057 0.5522679 0.5755501 #>   [63,] 1.0298076 1.0376311 1.0539778 #>   [64,] 0.5773675 0.6006617 0.6079518 #>   [65,] 0.7292199 0.7487106 0.7797094 #>   [66,] 0.9907991 0.9956017 1.0827801 #>   [67,] 0.5740717 0.5945680 0.6590372 #>   [68,] 0.7723401 0.7865356 0.8114874 #>   [69,] 0.6739721 0.7026732 0.7165133 #>   [70,] 0.8303697 0.8384469 0.8429769 #>   [71,] 0.4840733 0.4983791 0.5287118 #>   [72,] 1.4733477 1.4958421 1.5567460 #>   [73,] 0.5850075 0.6064619 0.6460080 #>   [74,] 0.7615282 0.7923748 0.8074366 #>   [75,] 0.8976574 0.9226537 0.9703127 #>   [76,] 1.3224794 1.3598033 1.4828114 #>   [77,] 0.7663171 0.7694554 0.8190901 #>   [78,] 1.0877738 1.0943233 1.1096481 #>   [79,] 0.5408641 0.5435034 0.6018774 #>   [80,] 0.6466854 0.6479109 0.6609845 #>   [81,] 0.6954350 0.7875189 0.7916990 #>   [82,] 0.7025182 0.7107874 0.7192953 #>   [83,] 0.9940629 1.0003826 1.0337300 #>   [84,] 0.9790082 1.0992992 1.1009800 #>   [85,] 0.9801788 0.9934764 0.9978238 #>   [86,] 0.9219119 0.9404603 0.9887478 #>   [87,] 0.9610354 0.9691710 0.9711359 #>   [88,] 0.6306805 0.6458510 0.6636778 #>   [89,] 0.7670848 0.7925374 0.8440142 #>   [90,] 0.7671853 0.7725817 0.8060969 #>   [91,] 1.0008567 1.0024658 1.0426593 #>   [92,] 0.6809644 0.7751105 0.7898526 #>   [93,] 1.8555652 1.8828961 1.9060081 #>   [94,] 0.5547413 0.5573295 0.5683977 #>   [95,] 0.6021192 0.6351454 0.6679342 #>   [96,] 0.5948780 0.6134443 0.6514323 #>   [97,] 1.0244518 1.0527093 1.0775075 #>   [98,] 0.7893370 0.7917788 0.8406311 #>   [99,] 1.1297811 1.2327339 1.2701719 #>  [100,] 1.1855553 1.2836102 1.2850803 #>  [101,] 1.1019892 1.1283304 1.1916691 #>  [102,] 0.9978445 1.1208978 1.1405413 #>  [103,] 1.6822846 1.7058183 1.7106336 #>  [104,] 0.7599685 0.8484403 0.8505745 #>  [105,] 1.1009788 1.1009800 1.1020872 #>  [106,] 0.9489703 0.9615929 0.9796470 #>  [107,] 0.5913191 0.6199408 0.6207910 #>  [108,] 1.0782947 1.0914421 1.1324678 #>  [109,] 0.7061848 0.7077581 0.7138760 #>  [110,] 0.6648141 0.6829232 0.6850721 #>  [111,] 0.9692382 0.9703239 0.9819270 #>  [112,] 0.9970328 0.9977730 1.0390497 #>  [113,] 0.5859139 0.6180130 0.6337927 #>  [114,] 0.5507824 0.5608670 0.6090956 #>  [115,] 0.7736282 0.7743580 0.7981251 #>  [116,] 0.5323816 0.5475102 0.5608639 #>  [117,] 0.5516278 0.5608670 0.5841534 #>  [118,] 1.2081222 1.2135877 1.2230174 #>  [119,] 0.5435188 0.5587013 0.6040103 #>  [120,] 0.6523088 0.6640171 0.6707013 #>  [121,] 0.5927020 0.6138700 0.6202199 #>  [122,] 1.1065361 1.1101612 1.1408810 #>  [123,] 0.9067788 0.9570966 0.9762603 #>  [124,] 1.2720417 1.2935925 1.3260996 #>  [125,] 0.7666463 0.7944303 0.8064355 #>  [126,] 0.9258032 0.9455802 0.9459684 #>  [127,] 0.7426124 0.7566748 0.7589114 #>  [128,] 0.7995127 0.8616728 0.8642680 #>  [129,] 1.0939103 1.1283304 1.1403445 #>  [130,] 1.8170843 1.9487832 1.9651832 #>  [131,] 0.7107537 0.7153605 0.7180072 #>  [132,] 0.7127463 0.7159491 0.7312168 #>  [133,] 0.7437863 0.7516307 0.7577734 #>  [134,] 0.6851276 0.8053505 0.8275560 #>  [135,] 0.8377634 0.8702008 0.8938511 #>  [136,] 0.7827637 0.8644956 0.8795207 #>  [137,] 0.5814759 0.6030079 0.6179146 #>  [138,] 0.6067358 0.6250772 0.6522443 #>  [139,] 0.7957083 0.8082671 0.8283955 #>  [140,] 0.6639075 0.6865075 0.6975890 #>  [141,] 0.6197073 0.6224116 0.6668682 #>  [142,] 0.6886432 0.6888805 0.7045670 #>  [143,] 1.0092811 1.1065930 1.1448886 #>  [144,] 1.0984606 1.2103435 1.2291750 #>  [145,] 1.2716881 1.3544715 1.3896788 #>  [146,] 0.9841743 1.0168837 1.0766818 #>  [147,] 0.5886536 0.5890158 0.6053119 #>  [148,] 0.9350864 0.9750576 0.9971648 #>  [149,] 0.8759358 0.9821284 0.9846402 #>  [150,] 0.7365723 0.7628844 0.7916435 #>  [151,] 0.7022323 0.7563999 0.7654694 #>  [152,] 0.9090649 0.9122847 0.9372404 #>  [153,] 0.7553068 0.7875640 0.7938210 #>  [154,] 0.9339699 0.9340461 0.9379641 #>  [155,] 1.4913288 1.5670429 1.5689853 #>  [156,] 0.6793651 0.7265836 0.7717929 #>  [157,] 0.8965497 0.9223993 0.9302575 #>  [158,] 0.6242068 0.6460080 0.6637490 #>  [159,] 0.7084903 0.7241422 0.7245461 #>  [160,] 1.0576715 1.0606433 1.0740219 #>  [161,] 0.6215111 0.6879653 0.7258441 #>  [162,] 0.5353137 0.5415676 0.5566536 #>  [163,] 0.6300118 0.6601669 0.6864747 #>  [164,] 0.9665671 1.0268859 1.0518401 #>  [165,] 0.8645391 0.9402593 0.9783486 #>  [166,] 0.7898806 0.8204658 0.8227050 #>  [167,] 0.9445889 0.9819952 0.9881837 #>  [168,] 0.5091355 0.5569715 0.6379992 #>  [169,] 1.0992992 1.1156776 1.1297811 #>  [170,] 0.6695362 0.6733117 0.6973461 #>  [171,] 0.5942006 0.6015820 0.6403009 #>  [172,] 0.7195854 0.7440475 0.7531731 #>  [173,] 0.7577483 0.7837114 0.7898736 #>  [174,] 0.8547600 0.8630979 0.8907378 #>  [175,] 0.5853618 0.6449725 0.6456969 #>  [176,] 0.5141013 0.5275119 0.5768938 #>  [177,] 0.6095806 0.6213413 0.6299666 #>  [178,] 0.4978881 0.5157680 0.5170958 #>  [179,] 0.6089877 0.6134404 0.6157482 #>  [180,] 0.6636778 0.6654100 0.7271265 #>  [181,] 1.3964024 1.4527950 1.4722173 #>  [182,] 0.7253465 0.7815200 0.7955110 #>  [183,] 0.7323061 0.7558966 0.7936875 #>  [184,] 1.1560213 1.1913274 1.1949207 #>  [185,] 0.8762341 0.8933043 0.9511342 #>  [186,] 0.5477623 0.6176997 0.6241833 #>  [187,] 0.5501862 0.5597784 0.5771096 #>  [188,] 0.8248959 0.8558286 0.8563963 #>  [189,] 0.6900892 0.6955504 0.6987582 #>  [190,] 0.6277988 0.6588848 0.7136158 #>  [191,] 1.1806111 1.2905648 1.3102469 #>  [192,] 0.6145745 0.6470026 0.6641624 #>  [193,] 0.9466312 0.9957216 1.0573702 #>  [194,] 0.5883262 0.6151818 0.6296162 #>  [195,] 0.9082753 0.9223589 0.9417332 #>  [196,] 0.5980760 0.6075141 0.6222206 #>  [197,] 0.7355629 0.7794644 0.8221603 #>  [198,] 0.8339755 0.8404604 0.8512837 #>  [199,] 0.7838901 0.8537475 0.8573890 #>  [200,] 0.9109017 0.9118628 0.9275678 #>  [201,] 0.4871285 0.4909694 0.5170958 #>  [202,] 0.5265330 0.5535050 0.5661895 #>  [203,] 0.7183294 0.7721887 0.8284145 #>  [204,] 0.8781732 0.8812495 0.8874623 #>  [205,] 0.9493435 0.9971806 1.0096119 #>  [206,] 0.8321211 0.8428223 0.8728060 #>  [207,] 0.7019481 0.7103726 0.7110289 #>  [208,] 0.6092549 0.6238525 0.6537288 #>  [209,] 0.8409085 0.8898983 0.9277421 #>  [210,] 0.6776292 0.6853537 0.6935605 #>  [211,] 1.3342959 1.4346070 1.4622897 #>  [212,] 0.8784390 0.8839426 0.9123238 #>  [213,] 0.5706307 0.5753808 0.5773675 #>  [214,] 0.6618070 0.7363223 0.7751308 #>  [215,] 0.7037881 0.7383699 0.7452692 #>  [216,] 0.9185150 0.9191754 0.9551984 #>  [217,] 0.6542160 0.6979998 0.7099077 #>  [218,] 0.7953238 0.7984742 0.8433325 #>  [219,] 1.1229860 1.1368542 1.1479002 #>  [220,] 1.0827801 1.0872987 1.1194567 #>  [221,] 0.7121584 0.7359753 0.7594386 #>  [222,] 0.7299662 0.7807221 0.7840526 #>  [223,] 0.7916609 0.8192357 0.8527369 #>  [224,] 0.9922093 1.0099407 1.0346766 #>  [225,] 0.8368210 0.8415885 0.8624726 #>  [226,] 0.5535276 0.5659730 0.5708156 #>  [227,] 0.8896054 0.9125568 0.9740586 #>  [228,] 1.1463526 1.2216547 1.2594305 #>  [229,] 0.8766831 0.8794074 0.9873110 #>  [230,] 0.6231875 0.6253014 0.6518902 #>  [231,] 1.0194436 1.0201499 1.0287234 #>  [232,] 0.9142916 0.9190856 0.9276079 #>  [233,] 0.5607186 0.5629145 0.5844075 #>  [234,] 0.5757261 0.5850075 0.5922951 #>  [235,] 1.1764114 1.1914160 1.1973431 #>  [236,] 0.5053711 0.5090745 0.5287118 #>  [237,] 0.8321242 0.8433325 0.8482481 #>  [238,] 1.0040760 1.0040912 1.0191599 #>  [239,] 0.6384502 0.6397974 0.6473845 #>  [240,] 1.3017722 1.3149393 1.3383306 #>  [241,] 1.2513286 1.2870755 1.3394380 #>  [242,] 0.5751313 0.5849882 0.6065019 #>  [243,] 0.6806029 0.6813518 0.7242816 #>  [244,] 0.7084379 0.7594386 0.7804850 #>  [245,] 0.6541367 0.7977026 0.8105286 #>  [246,] 0.8336963 0.8410720 0.8591950 #>  [247,] 0.9788810 0.9813812 1.0120162 #>  [248,] 0.7024491 0.7177328 0.7231681 #>  [249,] 0.8322009 0.8548759 0.8591950 #>  [250,] 0.5121097 0.5167264 0.5175902 #>  [251,] 0.6680707 0.6757104 0.6846982 #>  [252,] 0.8946704 0.9965749 1.0132401 #>  [253,] 0.8202138 0.8220979 0.8691706 #>  [254,] 0.7280370 0.7730874 0.9122673 #>  [255,] 0.8477245 0.9122673 0.9226374 #>  [256,] 0.6873371 0.6881486 0.7052047 #>  [257,] 1.2758291 1.3178454 1.3468434 #>  [258,] 0.6242068 0.6344204 0.6412341 #>  [259,] 1.0643107 1.0673566 1.0754532 #>  [260,] 0.6823097 0.6873607 0.7020166 #>  [261,] 0.6685223 0.6782660 0.6876180 #>  [262,] 0.8270395 0.8708811 0.8913068 #>  [263,] 1.0740219 1.0750903 1.1291211 #>  [264,] 0.8011536 0.8073320 0.8298273 #>  [265,] 1.1646126 1.2042414 1.2091737 #>  [266,] 0.7451530 0.7569013 0.7592414 #>  [267,] 0.6090956 0.6213173 0.6252532 #>  [268,] 0.6349318 0.6443000 0.6527970 #>  [269,] 1.0217933 1.0311069 1.0408233 #>  [270,] 0.6392396 0.7291157 0.7406025 #>  [271,] 0.6780110 0.6800894 0.6950290 #>  [272,] 1.2825475 1.3394380 1.3693175 #>  [273,] 1.1701777 1.1750385 1.2246513 #>  [274,] 0.5659730 0.5698817 0.6090584 #>  [275,] 0.7081183 0.7135747 0.7287868 #>  [276,] 0.9493760 1.0095489 1.0277655 #>  [277,] 0.8067553 0.8250206 0.8510327 #>  [278,] 1.0675754 1.0788709 1.1162190 #>  [279,] 0.7265359 0.7440475 0.7463220 #>  [280,] 0.6256506 0.7147760 0.7467148 #>  [281,] 1.0733613 1.0998441 1.1014008 #>  [282,] 0.6336267 0.6417348 0.6459385 #>  [283,] 1.3384776 1.4935578 1.5156947 #>  [284,] 0.8237431 0.8811457 0.8901399 #>  [285,] 0.7716950 0.8336963 0.8462351 #>  [286,] 0.7749325 0.8040726 0.8228566 #>  [287,] 0.6295640 0.6337927 0.6594195 #>  [288,] 0.6906443 0.7017563 0.7063254 #>  [289,] 0.5819431 0.5822674 0.6132660 #>  [290,] 0.8080409 0.8154270 0.8325751 #>  [291,] 0.7407002 0.7539032 0.7630795 #>  [292,] 0.6529808 0.6615348 0.6995511 #>  [293,] 0.6229592 0.6314845 0.6499316 #>  [294,] 0.7940180 0.8297595 0.8347948 #>  [295,] 1.0486135 1.0581064 1.0638883 #>  [296,] 0.6701211 0.6979998 0.7009911 #>  [297,] 0.5075005 0.5317193 0.5437060 #>  [298,] 0.5952216 0.6403172 0.6490485 #>  [299,] 1.0470596 1.0605172 1.0758215 #>  [300,] 0.6193858 0.6470441 0.6587651 #>  [301,] 0.5606403 0.5815007 0.5864755 #>  [302,] 1.2689485 1.2721955 1.3141648 #>  [303,] 0.7425069 0.7425966 0.7490270 #>  [304,] 0.9724968 0.9735032 0.9935833 #>  [305,] 1.0819005 1.0834758 1.0979884 #>  [306,] 0.6511493 0.6541090 0.6622475 #>  [307,] 0.6897682 0.6988360 0.7139105 #>  [308,] 0.6145484 0.6432996 0.6628859 #>  [309,] 0.7658068 0.7948236 0.7976439 #>  [310,] 0.7777261 0.7980101 0.8307865 #>  [311,] 0.5534722 0.5727841 0.5762352 #>  [312,] 1.2605449 1.2826081 1.2876778 #>  [313,] 0.7195165 0.8154053 0.8293106 #>  [314,] 1.2794249 1.5497985 1.5588674 #>  [315,] 0.6459385 0.6728004 0.6784487 #>  [316,] 0.8770516 0.8910733 0.8932242 #>  [317,] 1.6445072 1.6582598 1.6945460 #>  [318,] 0.7345390 0.7375582 0.7394000 #>  [319,] 0.5713332 0.6053119 0.6312769 #>  [320,] 0.6893881 0.7138760 0.7507680 #>  [321,] 0.8532488 0.8817030 0.8846713 #>  [322,] 0.7976439 0.8100492 0.8144046 #>  [323,] 0.8643944 0.8656774 0.8735583 #>  [324,] 0.5647202 0.5701869 0.5868033 #>  [325,] 1.0463820 1.0771323 1.1033574 #>  [326,] 0.9759280 0.9939919 1.0114876 #>  [327,] 0.7287691 0.7412575 0.7577483 #>  [328,] 0.6774654 0.7023953 0.7107874 #>  [329,] 0.6644753 0.6811190 0.6819476 #>  [330,] 0.9935833 1.0948390 1.1085215 #>  [331,] 1.0315543 1.0334753 1.0390517 #>  [332,] 1.3507276 1.3628622 1.3733022 #>  [333,] 0.9104134 0.9251782 0.9454556 #>  [334,] 0.7213871 0.7303336 0.7849155 #>  [335,] 0.6929627 0.7444637 0.7500939 #>  [336,] 0.5378610 0.5606774 0.5916723 #>  [337,] 0.7714269 0.7721887 0.8011401 #>  [338,] 0.6506952 0.7017235 0.7650664 #>  [339,] 0.8858496 0.9277806 0.9522564 #>  [340,] 1.4998030 1.5494214 1.5697137 #>  [341,] 1.8142891 1.8806032 1.8943152 #>  [342,] 0.8868289 0.8878189 0.9242391 #>  [343,] 1.8978531 1.9320523 1.9674976 #>  [344,] 1.2603461 1.2785781 1.2843089 #>  [345,] 0.6482563 0.6569735 0.6842596 #>  [346,] 0.6893881 0.7552792 0.7680064 #>  [347,] 0.5581549 0.5987974 0.6386280 #>  [348,] 1.5087673 1.5416675 1.5911480 #>  [349,] 0.8548952 0.8950243 0.9010835 #>  [350,] 1.0787296 1.1095135 1.1113592 #>  [351,] 0.9015736 0.9218583 0.9342182 #>  [352,] 0.5285633 0.5457086 0.5511256 #>  [353,] 0.6521973 0.6599610 0.6695516 #>  [354,] 0.8930258 0.9194363 0.9196474 #>  [355,] 1.1801025 1.1823408 1.1939617 #>  [356,] 1.1166502 1.1236923 1.1411491 #>  [357,] 0.8298273 0.8341672 0.8396259 #>  [358,] 0.8926291 0.9503942 0.9692382 #>  [359,] 0.8165996 0.8383167 0.8393845 #>  [360,] 0.7115334 0.7115509 0.7677375 #>  [361,] 0.9227037 0.9239927 0.9487377 #>  [362,] 1.1560213 1.1683196 1.1709926 #>  [363,] 0.6099657 0.6360188 0.6456969 #>  [364,] 0.9508850 0.9775332 1.0086561 #>  [365,] 1.4740621 1.5197829 1.5269524 #>  [366,] 0.6628282 0.6703730 0.6968046 #>  [367,] 0.7419742 0.8450891 0.8539320 #>  [368,] 0.6856507 0.7125669 0.7233269 #>  [369,] 0.7501093 0.8151688 0.8366432 #>  [370,] 0.8011401 0.8034408 0.8208846 #>  [371,] 0.6003424 0.6025310 0.6051237 #>  [372,] 0.7204938 0.7264462 0.7499850 #>  [373,] 0.5583857 0.5707035 0.5873268 #>  [374,] 0.7636652 0.7661853 0.7811024 #>  [375,] 0.5881123 0.6221576 0.6281053 #>  [376,] 0.7126689 0.7151236 0.7170826 #>  [377,] 0.7887989 0.8012549 0.8025315 #>  [378,] 2.0191613 2.0206633 2.0215489 #>  [379,] 0.6715935 0.6792674 0.6850721 #>  [380,] 0.4830901 0.4858087 0.5065083 #>  [381,] 0.6192598 0.6356567 0.6561756 #>  [382,] 0.8002504 0.8065753 0.8339204 #>  [383,] 0.6531761 0.6928941 0.7172273 #>  [384,] 0.9033377 0.9383245 0.9490470 #>  [385,] 0.6404836 0.6658032 0.7309560 #>  [386,] 0.7547130 0.7659608 0.7776061 #>  [387,] 0.7071099 0.7244826 0.7635905 #>  [388,] 1.2612451 1.2828349 1.2888005 #>  [389,] 1.2882603 1.2912405 1.3219642 #>  [390,] 0.5309856 0.5415676 0.5557106 #>  [391,] 1.0340016 1.0355295 1.0583202 #>  [392,] 0.6476882 0.6493103 0.6550975 #>  [393,] 0.7374828 0.7789166 0.7905680 #>  [394,] 0.5418886 0.5697511 0.5756506 #>  [395,] 0.6356057 0.6934027 0.7180751 #>  [396,] 0.8180519 0.8812903 0.8815210 #>  [397,] 1.1358772 1.1773387 1.2301861 #>  [398,] 0.4641433 0.5069489 0.5142285 #>  [399,] 0.7026820 0.7035586 0.7219064 #>  [400,] 0.6166315 0.6340176 0.6355029 #>  [401,] 0.9254642 0.9930713 0.9937332 #>  [402,] 0.6404836 0.6592049 0.6710526 #>  [403,] 0.5175902 0.5597083 0.5730866 #>  [404,] 0.8603947 0.8612136 0.8946704 #>  [405,] 0.6086359 0.6095877 0.6751862 #>  [406,] 0.8072549 0.8165570 0.8645961 #>  [407,] 0.9444025 0.9709334 0.9720352 #>  [408,] 0.6067871 0.6193345 0.6234643 #>  [409,] 1.6064542 1.6474080 1.6503440 #>  [410,] 1.3607060 1.3660513 1.3719572 #>  [411,] 1.1656144 1.2047255 1.2090903 #>  [412,] 0.6500923 0.7187232 0.7355434 #>  [413,] 1.1182210 1.1247584 1.1386625 #>  [414,] 1.2631048 1.3042647 1.3207455 #>  [415,] 1.1251618 1.1386073 1.1431776 #>  [416,] 0.5799551 0.5828802 0.6189363 #>  [417,] 1.0262764 1.0312298 1.0864427 #>  [418,] 0.8628054 0.9455802 0.9956017 #>  [419,] 1.0818590 1.0915724 1.1117587 #>  [420,] 0.7269744 0.7479862 0.7789189 #>  [421,] 0.6276498 0.6388721 0.6452198 #>  [422,] 1.2325032 1.2469546 1.3098382 #>  [423,] 0.8584383 0.8651742 0.8696395 #>  [424,] 1.5418992 1.6375926 1.6596990 #>  [425,] 0.6886757 0.6944488 0.7264606 #>  [426,] 0.8030115 0.8275047 0.8834812 #>  [427,] 0.5755501 0.5852330 0.5984719 #>  [428,] 0.6874766 0.7217498 0.7751263 #>  [429,] 0.6528501 0.6615348 0.6686105 #>  [430,] 0.7473518 0.7893473 0.8310538 #>  [431,] 0.5479756 0.5529793 0.5533911 #>  [432,] 0.7543045 0.7589584 0.7891682 #>  [433,] 0.7674044 0.8055647 0.8257411 #>  [434,] 0.6903848 0.6961547 0.7467029 #>  [435,] 1.0388821 1.0524557 1.1209138 #>  [436,] 1.4370337 1.4872883 1.4947465 #>  [437,] 0.6831843 0.6928790 0.7004741 #>  [438,] 0.5648905 0.5823519 0.6078482 #>  [439,] 1.1393026 1.1820580 1.2072285 #>  [440,] 0.6402763 0.6454320 0.6467896 #>  [441,] 0.5951777 0.6574248 0.6954854 #>  [442,] 0.5946205 0.5966398 0.6545545 #>  [443,] 0.6621642 0.6639746 0.6767022 #>  [444,] 1.1359361 1.1510277 1.1720173 #>  [445,] 0.5671933 0.5771751 0.5825039 #>  [446,] 0.9906321 1.0248959 1.0290134 #>  [447,] 0.5881518 0.6108004 0.6326375 #>  [448,] 0.7552838 0.7671467 0.7783628 #>  [449,] 1.0816121 1.0922465 1.0957159 #>  [450,] 1.7007961 1.7455601 1.7820004 #>  [451,] 0.8497146 0.9042121 0.9252886 #>  [452,] 1.1148306 1.1450397 1.1521600 #>  [453,] 0.5507693 0.5566304 0.5576925 #>  [454,] 0.8218825 0.8377052 0.8761744 #>  [455,] 1.3771371 1.4384254 1.5388329 #>  [456,] 0.6883640 0.6909344 0.7480327 #>  [457,] 0.5771096 0.5773100 0.5851557 #>  [458,] 0.6588883 0.6640171 0.6685335 #>  [459,] 0.7726068 0.8050708 0.8072540 #>  [460,] 0.9646371 1.0280738 1.0490663 #>  [461,] 0.8306011 0.8385625 0.8648049 #>  [462,] 0.5764966 0.5879978 0.6510546 #>  [463,] 0.7842142 0.7931939 0.8307159 #>  [464,] 0.8969442 0.9120642 0.9147027 #>  [465,] 0.9800233 1.0529037 1.0828409 #>  [466,] 0.5997829 0.6011990 0.6364663 #>  [467,] 1.0219678 1.0238294 1.0302596 #>  [468,] 0.7158574 0.7269726 0.7367443 #>  [469,] 0.6294275 0.6452241 0.6583939 #>  [470,] 0.7737927 0.7981151 0.8003901 #>  [471,] 0.7942507 0.8111291 0.8228032 #>  [472,] 1.0970680 1.1246912 1.2078061 #>  [473,] 0.7470142 0.7500014 0.7858504 #>  [474,] 0.6544648 0.6596743 0.6660163 #>  [475,] 0.8493387 0.8521907 0.8707633 #>  [476,] 0.7527956 0.7881000 0.7931696 #>  [477,] 0.5975939 0.6233332 0.6873371 #>  [478,] 0.5651328 0.5758697 0.5797815 #>  [479,] 0.6061091 0.6267791 0.6295668 #>  [480,] 0.5267255 0.5275758 0.5300075 #>  [481,] 0.7123387 0.7129494 0.7250075 #>  [482,] 0.5441986 0.5453885 0.5773246 #>  [483,] 0.6749544 0.7222800 0.7289607 #>  [484,] 0.9566653 1.0484810 1.1270001 #>  [485,] 0.9915241 0.9975635 0.9977222 #>  [486,] 0.8417865 0.8652587 0.9251782 #>  [487,] 0.5915078 0.6080251 0.6083228 #>  [488,] 0.6367697 0.6832017 0.7032088 #>  [489,] 1.4873768 1.5906089 1.6088265 #>  [490,] 1.0256590 1.0264553 1.0430024 #>  [491,] 0.6343111 0.6487144 0.6517854 #>  [492,] 0.8581195 0.8675830 0.8952745 #>  [493,] 1.2401250 1.2514323 1.2663813 #>  [494,] 1.4569039 1.4852244 1.5046454 #>  [495,] 0.8150625 0.8441257 0.8801181 #>  [496,] 1.3629123 1.3879795 1.4261250 #>  [497,] 1.0082666 1.1072523 1.1108137 #>  [498,] 0.9341330 0.9535655 1.0102705 #>  [499,] 0.8810152 1.0545842 1.0701982 #>  [500,] 0.5275119 0.5378858 0.5408641 #>  [501,] 0.7983866 0.8141405 0.8248959 #>  [502,] 0.6685335 0.6838181 0.6912304 #>  [503,] 0.8136345 0.8708811 0.8714945 #>  [504,] 0.6079898 0.6162667 0.6253014 #>  [505,] 0.6111821 0.6199408 0.6250720 #>  [506,] 1.3177117 1.3211396 1.3427624 #>  [507,] 0.8429769 0.8435128 0.8483578 #>  [508,] 0.7466316 0.7503842 0.7783493 #>  [509,] 0.5481203 0.5744581 0.5850803 #>  [510,] 0.6788989 0.6889525 0.6890499 #>  [511,] 1.4058192 1.5323548 1.5381616 #>  [512,] 0.5807167 0.5856444 0.7037422 #>  [513,] 0.9325599 0.9884113 1.0114876 #>  [514,] 0.5101772 0.5142285 0.5461855 #>  [515,] 1.1714138 1.1780282 1.2000624 #>  [516,] 0.6522026 0.6590051 0.6981170 #>  [517,] 0.6046089 0.6297910 0.6427209 #>  [518,] 0.4831592 0.4873894 0.4909694 #>  [519,] 0.9057635 0.9438797 0.9582357 #>  [520,] 0.6368057 0.7149509 0.7227897 #>  [521,] 0.8970888 0.9307967 0.9677743 #>  [522,] 0.5154850 0.5509206 0.5562496 #>  [523,] 0.5745819 0.5796680 0.5802644 #>  [524,] 0.7931939 0.8231171 0.8810152 #>  [525,] 0.5717981 0.5755021 0.5877363 #>  [526,] 0.6244878 0.6452198 0.6560204 #>  [527,] 0.5854741 0.5951777 0.6055384 #>  [528,] 0.6776292 0.6951659 0.7057361 #>  [529,] 1.1352325 1.1705946 1.1792646 #>  [530,] 0.5815343 0.6064070 0.6065024 #>  [531,] 0.9223589 0.9402593 0.9436176 #>  [532,] 0.5167264 0.5281382 0.5533911 #>  [533,] 0.7775998 0.7858887 0.7950090 #>  [534,] 0.6313953 0.6318095 0.7019481 #>  [535,] 1.0533030 1.0666678 1.1114868 #>  [536,] 1.1733365 1.1913689 1.2714116 #>  [537,] 0.7828555 0.8292245 0.8605209 #>  [538,] 0.6514323 0.6569517 0.7135747 #>  [539,] 0.6059288 0.6368057 0.6786679 #>  [540,] 1.1386625 1.1762692 1.1836221 #>  [541,] 0.6567943 0.6820452 0.6866486 #>  [542,] 0.8566232 0.8910913 0.9167389 #>  [543,] 0.5450850 0.5536038 0.5689651 #>  [544,] 0.7754381 0.7907056 0.8140275 #>  [545,] 0.9083925 0.9357147 0.9377109 #>  [546,] 0.7442463 0.8041833 0.8248477 #>  [547,] 1.1774721 1.2612451 1.2681574 #>  [548,] 1.0352908 1.0548004 1.1119143 #>  [549,] 0.5715436 0.5924954 0.6026063 #>  [550,] 1.0575600 1.0619929 1.0648524 #>  [551,] 1.0594260 1.0786798 1.0946448 #>  [552,] 1.1102575 1.1920485 1.2423692 #>  [553,] 0.7013810 0.7120569 0.8404604 #>  [554,] 0.5682768 0.5924954 0.6237282 #>  [555,] 0.8058892 0.8241225 0.8499281 #>  [556,] 0.6351062 0.6414686 0.6740253 #>  [557,] 0.9900425 1.0458091 1.0750038 #>  [558,] 0.5075005 0.5592224 0.5773246 #>  [559,] 0.9928493 1.0783131 1.0972857 #>  [560,] 1.2347803 1.3297016 1.3429729 #>  [561,] 1.9410945 2.0113572 2.0857777 #>  [562,] 1.2067666 1.2136525 1.2660493 #>  [563,] 1.1420538 1.2752688 1.2858068 #>  [564,] 0.9504846 0.9837571 1.0032521 #>  [565,] 0.9377660 0.9544969 0.9789290 #>  [566,] 0.8171348 0.8360272 0.8470188 #>  [567,] 1.0755476 1.0812836 1.0925347 #>  [568,] 0.5428712 0.5534310 0.5579855 #>  [569,] 0.7604429 0.8027893 0.8164678 #>  [570,] 0.6306746 0.6434362 0.6681253 #>  [571,] 0.7335899 0.7669199 0.7701144 #>  [572,] 1.2529339 1.3409754 1.3654288 #>  [573,] 0.7995944 0.8114099 0.8206699 #>  [574,] 0.6725759 0.6792826 0.7130495 #>  [575,] 0.5415387 0.5578793 0.5582641 #>  [576,] 0.9250218 0.9656663 0.9997240 #>  [577,] 0.7601344 0.7930202 0.8017151 #>  [578,] 0.7390033 0.7565201 0.8048172 #>  [579,] 0.7378208 0.7437863 0.7442070 #>  [580,] 0.6067695 0.6734665 0.6860507 #>  [581,] 0.6446966 0.6470026 0.6475727 #>  [582,] 1.1051998 1.2248730 1.2342312 #>  [583,] 0.5564093 0.5689050 0.5718871 #>  [584,] 0.8307034 0.8377634 0.8638260 #>  [585,] 1.0503103 1.0917530 1.0998366 #>  [586,] 1.2200072 1.2390880 1.2874552 #>  [587,] 0.8514104 0.9315502 0.9340461 #>  [588,] 1.1441249 1.2393866 1.2785847 #>  [589,] 0.5262250 0.5511658 0.5624790 #>  [590,] 0.8187051 0.8447163 0.8715072 #>  [591,] 0.7006285 0.7035262 0.7594024 #>  [592,] 0.7026732 0.7656853 0.7742677 #>  [593,] 0.6014520 0.6209301 0.6280897 #>  [594,] 1.1350001 1.2079282 1.2147532 #>  [595,] 0.6466419 0.6492755 0.6499316 #>  [596,] 0.8666847 0.8673748 0.8681628 #>  [597,] 0.6662186 0.7065698 0.7281721 #>  [598,] 0.6223004 0.6345191 0.6411255 #>  [599,] 0.7638726 0.7919155 0.8016725 #>  [600,] 1.2684352 1.2835906 1.3160226 #>  [601,] 0.5155907 0.5303061 0.5886536 #>  [602,] 0.5240128 0.5507693 0.6293948 #>  [603,] 0.5695790 0.5708486 0.5770662 #>  [604,] 0.8032455 0.8356082 0.8471021 #>  [605,] 0.5121097 0.5174102 0.5223578 #>  [606,] 0.7288261 0.7316538 0.7437043 #>  [607,] 0.7082764 0.7095461 0.7676551 #>  [608,] 0.5176903 0.5726426 0.5771768 #>  [609,] 1.0476398 1.0629767 1.0734867 #>  [610,] 0.6868528 0.7053972 0.7110289 #>  [611,] 0.7941338 0.8596603 0.8659015 #>  [612,] 0.6725527 0.7556196 0.7731929 #>  [613,] 0.7244878 0.7351809 0.7529393 #>  [614,] 1.2164773 1.2291282 1.2310098 #>  [615,] 0.6773804 0.7233039 0.7303336 #>  [616,] 0.7575305 0.7787227 0.7875088 #>  [617,] 0.9540578 0.9777319 0.9866804 #>  [618,] 1.4352250 1.4749679 1.4931422 #>  [619,] 0.5348381 0.5380946 0.5631462 #>  [620,] 1.1563623 1.1637227 1.1805013 #>  [621,] 0.5358940 0.5919004 0.6023910 #>  [622,] 1.6239287 1.6366489 1.6604024 #>  [623,] 0.5738802 0.6143111 0.6284892 #>  [624,] 0.4471266 0.5441749 0.5828953 #>  [625,] 0.6171621 0.7067141 0.7601828 #>  [626,] 1.7252742 1.8344280 1.8524217 #>  [627,] 0.8231362 0.8351031 0.9077773 #>  [628,] 0.7580258 0.7880545 0.8047819 #>  [629,] 0.7425966 0.7430631 0.7597606 #>  [630,] 0.8803086 0.8851060 0.9175344 #>  [631,] 1.0296380 1.0638883 1.0824596 #>  [632,] 1.5065179 1.6459014 1.6619717 #>  [633,] 0.7850979 0.7919712 0.7935451 #>  [634,] 0.9474298 1.0037335 1.0076667 #>  [635,] 0.7119851 0.7172273 0.7241422 #>  [636,] 0.7548253 0.7597481 0.8151782 #>  [637,] 0.7436965 0.7535965 0.7831478 #>  [638,] 0.6255646 0.6526818 0.6798351 #>  [639,] 0.7660291 0.7681734 0.7683442 #>  [640,] 0.5503343 0.5508472 0.5980931 #>  [641,] 0.8648049 0.9444048 0.9527809 #>  [642,] 0.7358185 0.7997382 0.8006226 #>  [643,] 0.9034527 0.9540060 0.9678328 #>  [644,] 2.4717902 2.5096127 2.5615304 #>  [645,] 0.6191064 0.6224116 0.6649301 #>  [646,] 0.7978832 0.8284770 0.8360591 #>  [647,] 0.9320430 0.9399527 0.9477255 #>  [648,] 1.3411025 1.3461907 1.4076908 #>  [649,] 0.7107938 0.7167198 0.7309560 #>  [650,] 0.9269911 0.9812354 0.9940802 #>  [651,] 0.9070331 0.9093026 0.9242324 #>  [652,] 0.5284993 0.5461826 0.5623854 #>  [653,] 0.7673573 0.7692360 0.8053898 #>  [654,] 0.7547133 0.7584904 0.8250231 #>  [655,] 1.5421070 1.5844493 1.6221478 #>  [656,] 0.7345390 0.7630795 0.7659655 #>  [657,] 0.8964843 0.9018734 0.9053446 #>  [658,] 0.5359161 0.5439844 0.5461826 #>  [659,] 0.9444048 0.9504574 0.9597441 #>  [660,] 0.9555831 0.9841186 0.9981651 #>  [661,] 1.1167174 1.1725109 1.1848144 #>  [662,] 0.8355436 0.8386198 0.8459161 #>  [663,] 0.9785282 0.9819270 0.9866417 #>  [664,] 0.5883125 0.5966398 0.6091409 #>  [665,] 0.8055734 0.8227603 0.8230563 #>  [666,] 1.0445103 1.0734619 1.0741231 #>  [667,] 0.7270702 0.8469485 0.8764149 #>  [668,] 0.7105933 0.7605897 0.7950090 #>  [669,] 0.8081914 0.8103686 0.8406065 #>  [670,] 0.8095136 0.9092680 0.9672832 #>  [671,] 0.7363122 0.7619395 0.8191598 #>  [672,] 0.7113880 0.7153931 0.8131651 #>  [673,] 1.0702777 1.0705108 1.0751322 #>  [674,] 0.6547079 0.6866309 0.6936098 #>  [675,] 0.7716950 0.8056514 0.8410720 #>  [676,] 1.0670114 1.0903416 1.2005463 #>  [677,] 0.7385535 0.7460606 0.7577744 #>  [678,] 1.0464038 1.0624691 1.1927402 #>  [679,] 0.7805570 0.7824505 0.8030343 #>  [680,] 0.6548008 0.6597545 0.6730196 #>  [681,] 1.0722590 1.0903974 1.0937161 #>  [682,] 0.6882590 0.6989156 0.7295030 #>  [683,] 0.7193480 0.7893083 0.7963273 #>  [684,] 0.6009259 0.6172196 0.6221576 #>  [685,] 1.2788872 1.2990998 1.3366333 #>  [686,] 1.3063766 1.3743385 1.3813290 #>  [687,] 0.5045291 0.5317333 0.5383248 #>  [688,] 0.8622749 0.8919790 0.8963433 #>  [689,] 0.5630331 0.5671933 0.6009033 #>  [690,] 0.6495725 0.7126974 0.7228706 #>  [691,] 0.6452502 0.6497402 0.6525518 #>  [692,] 0.6529372 0.6540926 0.6660552 #>  [693,] 0.8702550 0.8969771 0.8986714 #>  [694,] 0.6245017 0.6458991 0.6625639 #>  [695,] 0.8047034 0.8165996 0.8225497 #>  [696,] 0.8590415 0.8591852 0.8813455 #>  [697,] 0.7168057 0.7684124 0.7917788 #>  [698,] 1.4709704 1.4775470 1.4942782 #>  [699,] 0.4531888 0.5017149 0.5479756 #>  [700,] 0.7329587 0.7427499 0.7628858 #>  [701,] 1.1974052 1.2177584 1.2386148 #>  [702,] 0.9661438 0.9742568 0.9747173 #>  [703,] 1.2518350 1.2582436 1.3085084 #>  [704,] 0.9040167 0.9046276 0.9289277 #>  [705,] 0.4880021 0.5116955 0.5193765 #>  [706,] 0.6800894 0.6945520 0.6954666 #>  [707,] 1.0738071 1.1030842 1.1246912 #>  [708,] 0.6517854 0.6518902 0.6563096 #>  [709,] 0.8533320 0.8674131 0.8768613 #>  [710,] 0.6388721 0.6865766 0.6961337 #>  [711,] 0.9504846 1.0208493 1.0224300 #>  [712,] 0.5567739 0.5618796 0.5668762 #>  [713,] 0.6535339 0.7061848 0.7289607 #>  [714,] 0.8244259 0.9807552 1.0288089 #>  [715,] 0.8033420 0.8131396 0.8134786 #>  [716,] 0.7599733 0.7713052 0.7865100 #>  [717,] 0.5021878 0.5378858 0.5435034 #>  [718,] 0.6185189 0.6313301 0.6417255 #>  [719,] 0.9175625 0.9244670 0.9939002 #>  [720,] 1.3620916 1.4773415 1.4880456 #>  [721,] 0.8229808 0.8314148 0.8411741 #>  [722,] 1.3161240 1.3396736 1.3892325 #>  [723,] 0.8593323 0.8783001 0.8919169 #>  [724,] 0.7351795 0.7682724 0.8005065 #>  [725,] 1.0294590 1.0751958 1.1125055 #>  [726,] 0.8160279 0.8237431 0.8431165 #>  [727,] 0.8061379 0.8426053 0.8642680 #>  [728,] 0.5472816 0.5540647 0.6223924 #>  [729,] 0.9963050 1.0157343 1.0186377 #>  [730,] 0.6151973 0.6219973 0.6551338 #>  [731,] 0.7799816 0.7952463 0.8218263 #>  [732,] 0.6417348 0.6599865 0.6680538 #>  [733,] 0.7898526 0.8192357 0.8477498 #>  [734,] 0.7442463 0.7974642 0.8089014 #>  [735,] 1.4540060 1.5146366 1.5452173 #>  [736,] 0.9975635 0.9999207 1.0383387 #>  [737,] 1.4733477 1.5093559 1.5207121 #>  [738,] 0.8621565 0.8751074 0.8818817 #>  [739,] 0.5798542 0.6157630 0.6367020 #>  [740,] 0.6323688 0.6360769 0.6458689 #>  [741,] 0.6007774 0.6070534 0.6296501 #>  [742,] 0.8945406 0.8980431 0.9249597 #>  [743,] 0.6273655 0.6379144 0.7248809 #>  [744,] 1.4432738 1.4535732 1.4550374 #>  [745,] 0.6615927 0.6686808 0.6851402 #>  [746,] 1.4638895 1.4741407 1.4945673 #>  [747,] 0.6099010 0.6125269 0.6368952 #>  [748,] 0.5524104 0.5788040 0.5819431 #>  [749,] 0.8502017 0.8566232 0.8732358 #>  [750,] 1.0655618 1.0730120 1.0777865 #>  [751,] 0.7442070 0.7811311 0.8345023 #>  [752,] 0.4858087 0.5359753 0.5482046 #>  [753,] 0.6147454 0.6671276 0.7521043 #>  [754,] 0.8187191 0.8382279 0.8382757 #>  [755,] 0.7893370 0.8045765 0.8069467 #>  [756,] 0.7881000 0.8010065 0.8272963 #>  [757,] 0.5318109 0.5642136 0.5772901 #>  [758,] 0.7075729 0.7114989 0.7160563 #>  [759,] 0.8022305 0.8362839 0.8542169 #>  [760,] 0.6216147 0.6580449 0.6587454 #>  [761,] 0.7863705 0.7926848 0.7975186 #>  [762,] 0.6083228 0.6147454 0.6927031 #>  [763,] 0.5597784 0.5606774 0.5683977 #>  [764,] 1.1989971 1.2194943 1.2439524 #>  [765,] 0.6126398 0.6459568 0.6509839 #>  [766,] 0.6403172 0.6555965 0.6603943 #>  [767,] 0.8503242 0.8569323 0.8960152 #>  [768,] 0.7586657 0.7654303 0.7794644 #>  [769,] 0.7324348 0.7507996 0.7543045 #>  [770,] 1.1273220 1.1375138 1.1435162 #>  [771,] 0.5591362 0.5744581 0.6006617 #>  [772,] 0.6694105 0.6865249 0.6990475 #>  [773,] 0.6221397 0.6472786 0.6525513 #>  [774,] 0.5655121 0.6615364 0.6698510 #>  [775,] 1.3372905 1.3543248 1.3584166 #>  [776,] 0.6185189 0.6253014 0.6747781 #>  [777,] 0.6949465 0.7065814 0.7154106 #>  [778,] 0.6369043 0.6440858 0.6459604 #>  [779,] 0.5003487 0.5321241 0.5607186 #>  [780,] 1.0871213 1.1138950 1.1266378 #>  [781,] 0.8247680 0.8313680 0.8791103 #>  [782,] 0.6070534 0.7414587 0.7733867 #>  [783,] 0.8068634 0.8337193 0.8493387 #>  [784,] 0.6457408 0.7016643 0.7048638 #>  [785,] 0.7548614 0.7729185 0.7876731 #>  [786,] 1.0433574 1.0450757 1.0494890 #>  [787,] 1.2506654 1.2773448 1.2987341 #>  [788,] 0.5712544 0.6457970 0.6641358 #>  [789,] 0.7576680 0.7581988 0.7632992 #>  [790,] 0.7610605 0.7698679 0.8334903 #>  [791,] 0.7574440 0.7854328 0.8157033 #>  [792,] 0.6413127 0.7040478 0.7312258 #>  [793,] 1.0092087 1.0110830 1.0373614 #>  [794,] 1.0529037 1.0588049 1.1273791 #>  [795,] 0.6414686 0.6494443 0.6793651 #>  [796,] 0.9800975 0.9913626 1.0449478 #>  [797,] 0.6655731 0.6798108 0.6945009 #>  [798,] 1.0664339 1.0751524 1.0770154 #>  [799,] 0.7511601 0.7543690 0.7617204 #>  [800,] 0.6633166 0.6922430 0.7182691 #>  [801,] 0.8104777 0.8510327 0.8584367 #>  [802,] 1.2863371 1.3033656 1.3293598 #>  [803,] 0.6418545 0.6638343 0.6822225 #>  [804,] 0.5997069 0.7683455 0.7705941 #>  [805,] 0.6665070 0.6807229 0.7537331 #>  [806,] 0.7243669 0.7280104 0.7427108 #>  [807,] 0.6968046 0.7001319 0.7021294 #>  [808,] 0.7699665 0.7786234 0.7812579 #>  [809,] 0.7452692 0.7457071 0.7600168 #>  [810,] 0.7844647 0.8125506 0.8402202 #>  [811,] 0.9867099 0.9883132 0.9943872 #>  [812,] 1.1431776 1.1787053 1.2001852 #>  [813,] 0.6819476 0.7437657 0.7551296 #>  [814,] 0.6628525 0.6765517 0.6928077 #>  [815,] 0.9548882 0.9631204 1.0354977 #>  [816,] 0.7295030 0.7684285 0.8033879 #>  [817,] 0.7061065 0.8119412 0.8452654 #>  [818,] 0.6280414 0.6829760 0.7365723 #>  [819,] 0.7003315 0.7061397 0.7242816 #>  [820,] 0.7859152 0.7897465 0.8098944 #>  [821,] 0.7017763 0.7409183 0.8784718 #>  [822,] 0.7660615 0.7761465 0.7853701 #>  [823,] 0.7991946 0.8191275 0.8211285 #>  [824,] 1.2956004 1.3471961 1.3500053 #>  [825,] 0.9328732 0.9376552 0.9406661 #>  [826,] 0.6593720 0.7013428 0.7110555 #>  [827,] 0.7413770 0.7451825 0.7505073 #>  [828,] 1.3934901 1.4482065 1.4505676 #>  [829,] 1.4266529 1.4886948 1.6227102 #>  [830,] 1.4255873 1.4503904 1.4631522 #>  [831,] 0.7918192 0.8364643 0.8537475 #>  [832,] 0.6858071 0.7151236 0.7289813 #>  [833,] 0.7794641 0.7966472 0.8180949 #>  [834,] 0.9379641 0.9385246 0.9488498 #>  [835,] 0.6280158 0.6414614 0.6468621 #>  [836,] 1.0601448 1.0647862 1.0657076 #>  [837,] 1.6311476 1.6579477 1.6616264 #>  [838,] 0.6523088 0.6705028 0.6729305 #>  [839,] 1.4625817 1.4927532 1.4945263 #>  [840,] 0.8501345 0.8743788 0.9024251 #>  [841,] 0.5569715 0.5607194 0.6401670 #>  [842,] 0.8097010 0.8109489 0.8180395 #>  [843,] 0.5589871 0.6058008 0.6432996 #>  [844,] 0.9292044 0.9354601 0.9529875 #>  [845,] 0.6597545 0.6598923 0.6721068 #>  [846,] 0.7700655 0.7805570 0.7942507 #>  [847,] 1.2199227 1.2296462 1.2426696 #>  [848,] 0.8644291 0.9845522 1.0083372 #>  [849,] 1.3506966 1.3855734 1.4394814 #>  [850,] 1.1520439 1.2076360 1.2228369 #>  [851,] 0.7442111 0.7887564 0.8024544 #>  [852,] 0.9221459 0.9268490 0.9279015 #>  [853,] 1.0124648 1.0352098 1.0367178 #>  [854,] 0.6768566 0.6796991 0.7124849 #>  [855,] 1.1676306 1.1880156 1.2481878 #>  [856,] 1.5004740 1.5106218 1.5366781 #>  [857,] 1.3128360 1.3223973 1.3413295 #>  [858,] 0.6345156 0.6382422 0.6755490 #>  [859,] 0.8713037 0.8947971 0.9471454 #>  [860,] 0.5251973 0.5452705 0.5762531 #>  [861,] 0.7563347 0.7968124 0.7973349 #>  [862,] 0.9761800 0.9977222 1.0057677 #>  [863,] 0.5793923 0.5913809 0.5984719 #>  [864,] 0.7665226 0.7775998 0.8047819 #>  [865,] 0.7332812 0.7434076 0.7531991 #>  [866,] 0.6109003 0.6294275 0.7692232 #>  [867,] 0.9369640 0.9411373 0.9637529 #>  [868,] 0.9697275 0.9697300 0.9978529 #>  [869,] 0.5428712 0.5920916 0.6186698 #>  [870,] 0.5241810 0.5292135 0.5468664 #>  [871,] 0.7817824 0.7859846 0.7912773 #>  [872,] 1.4962481 1.5660922 1.5764536 #>  [873,] 0.4740565 0.5118320 0.5545067 #>  [874,] 0.7616043 0.7656390 0.7722974 #>  [875,] 0.5942006 0.6300187 0.6325627 #>  [876,] 0.8935901 0.9007427 0.9158237 #>  [877,] 1.3521985 1.3662430 1.3669513 #>  [878,] 0.6922430 0.6932407 0.7324947 #>  [879,] 0.8423239 0.8436320 0.8511564 #>  [880,] 0.5325155 0.5428312 0.5686183 #>  [881,] 0.7392166 0.7702500 0.7783493 #>  [882,] 0.6612932 0.6697886 0.6986785 #>  [883,] 0.7247906 0.7356491 0.7535407 #>  [884,] 0.9418483 0.9721861 0.9976520 #>  [885,] 0.8220237 0.8356064 0.8396415 #>  [886,] 0.8668565 0.8775906 0.8892321 #>  [887,] 0.7716324 0.8310271 0.8679539 #>  [888,] 0.8482010 0.8885938 0.8900224 #>  [889,] 0.5598632 0.5708486 0.6151749 #>  [890,] 0.7495871 0.7510241 0.7577017 #>  [891,] 0.6467386 0.6541176 0.7037881 #>  [892,] 1.4672235 1.4675502 1.5323173 #>  [893,] 1.0213896 1.0830565 1.0911461 #>  [894,] 1.1673990 1.1723557 1.1762692 #>  [895,] 0.7843570 0.7896239 0.7966472 #>  [896,] 0.8396755 0.8577266 0.8751215 #>  [897,] 0.6990349 0.7123459 0.7131977 #>  [898,] 0.7363613 0.7395484 0.7437643 #>  [899,] 1.3659049 1.3727317 1.3740764 #>  [900,] 0.6866936 0.6951659 0.7187232 #>  [901,] 1.0552413 1.0952895 1.1151833 #>  [902,] 1.5911340 1.5926916 1.5942111 #>  [903,] 1.0363572 1.0366701 1.0487084 #>  [904,] 0.6565475 0.6590733 0.6657522 #>  [905,] 1.3986018 1.4284469 1.4456722 #>  [906,] 0.6309082 0.6525902 0.6628970 #>  [907,] 0.7324947 0.7430718 0.7455076 #>  [908,] 0.6771071 0.7165288 0.7660291 #>  [909,] 1.1472587 1.3209149 1.3376905 #>  [910,] 0.7708390 0.7854220 0.7894649 #>  [911,] 0.7349732 0.7591687 0.7601879 #>  [912,] 1.0683309 1.0903416 1.0920130 #>  [913,] 0.8466499 0.8614730 0.8763801 #>  [914,] 1.0487760 1.1052623 1.1565164 #>  [915,] 1.0375482 1.0749380 1.1191841 #>  [916,] 0.8344835 0.8420471 0.8614190 #>  [917,] 0.5566050 0.5648737 0.5702927 #>  [918,] 0.7206994 0.7495871 0.7573808 #>  [919,] 0.8457246 0.8473334 0.8970413 #>  [920,] 0.6912278 0.7279951 0.7506216 #>  [921,] 0.6108094 0.6168993 0.6206132 #>  [922,] 1.1158712 1.1812501 1.2164773 #>  [923,] 0.5599972 0.5755021 0.5848577 #>  [924,] 0.6249022 0.6865249 0.7002475 #>  [925,] 0.6085746 0.6300187 0.6402119 #>  [926,] 0.6801637 0.7023126 0.7136502 #>  [927,] 0.5402518 0.5480086 0.5489797 #>  [928,] 0.8533541 0.9251153 0.9547777 #>  [929,] 0.5282458 0.5378320 0.5554105 #>  [930,] 1.6677217 1.6940342 1.6983756 #>  [931,] 0.8299168 0.8613244 0.8640921 #>  [932,] 0.8721525 0.8856719 0.8866785 #>  [933,] 0.7905920 0.8393238 0.8491993 #>  [934,] 1.2870225 1.3760477 1.4217933 #>  [935,] 0.7488311 0.8024811 0.8138999 #>  [936,] 0.8035544 0.8078775 0.8341101 #>  [937,] 1.1877580 1.2153451 1.2190296 #>  [938,] 0.7535625 0.7695003 0.7978791 #>  [939,] 1.1853239 1.2249658 1.2359674 #>  [940,] 0.7281257 0.7616043 0.8022305 #>  [941,] 0.5210050 0.5372010 0.5876651 #>  [942,] 0.4914041 0.5380946 0.5715138 #>  [943,] 0.9352506 1.0089246 1.0536012 #>  [944,] 0.5120623 0.5327615 0.5505817 #>  [945,] 0.6418545 0.6588883 0.6765517 #>  [946,] 0.6058008 0.6602667 0.6691141 #>  [947,] 1.2946552 1.3167706 1.3192843 #>  [948,] 0.9364368 0.9499167 0.9724920 #>  [949,] 0.6690310 0.6759248 0.7089592 #>  [950,] 0.9492849 0.9682992 1.0370443 #>  [951,] 0.8555979 0.8992551 0.9337327 #>  [952,] 1.3191120 1.3273905 1.3434716 #>  [953,] 0.6486643 0.6558416 0.6560416 #>  [954,] 0.5318109 0.5359161 0.5518192 #>  [955,] 0.8332531 0.8614159 0.8763303 #>  [956,] 0.8644643 0.8751074 0.8967691 #>  [957,] 1.0077660 1.0702777 1.1133433 #>  [958,] 1.2713827 1.2846231 1.3213154 #>  [959,] 1.4002147 1.4588897 1.4634157 #>  [960,] 0.6068476 0.6191064 0.6309082 #>  [961,] 0.7375854 0.7581922 0.7821429 #>  [962,] 0.7905489 0.8050708 0.8466474 #>  [963,] 1.7289006 1.7326041 1.7573803 #>  [964,] 0.7066357 0.7069726 0.7274146 #>  [965,] 0.6527446 0.6908249 0.6916150 #>  [966,] 0.7153629 0.7209967 0.7377619 #>  [967,] 0.6046089 0.6306458 0.6449557 #>  [968,] 0.8621568 0.8628212 0.8650919 #>  [969,] 0.8441430 0.8472799 0.8497146 #>  [970,] 1.0738249 1.0920461 1.1605544 #>  [971,] 0.8898451 0.9090649 0.9104134 #>  [972,] 0.6877089 0.7281739 0.7432730 #>  [973,] 0.8867971 0.9109356 0.9375436 #>  [974,] 0.9033628 0.9577043 1.0043520 #>  [975,] 0.6530011 0.6621642 0.6754462 #>  [976,] 0.6753192 0.7313764 0.7479387 #>  [977,] 0.6608121 0.6643890 0.6893433 #>  [978,] 1.6769480 1.7421969 1.7520489 #>  [979,] 0.9319987 0.9331561 0.9622858 #>  [980,] 1.4584759 1.5120518 1.5170963 #>  [981,] 0.6833282 0.7267305 0.8017374 #>  [982,] 0.8744906 0.8747362 0.8756772 #>  [983,] 0.5130487 0.5281382 0.5384694 #>  [984,] 0.6347627 0.6368952 0.6421195 #>  [985,] 0.5480086 0.5587282 0.5799551 #>  [986,] 0.7279951 0.7511080 0.7789033 #>  [987,] 0.7584440 0.7698812 0.7801462 #>  [988,] 0.7178039 0.7723067 0.7836681 #>  [989,] 0.4628002 0.4644055 0.4718671 #>  [990,] 0.7415261 0.7768351 0.7999838 #>  [991,] 0.5492017 0.6114482 0.6645475 #>  [992,] 0.7043284 0.7164410 0.7177328 #>  [993,] 0.9105165 0.9226537 0.9493760 #>  [994,] 0.6422609 0.6429186 0.6919340 #>  [995,] 1.1640049 1.1851507 1.2530949 #>  [996,] 0.9568611 0.9890690 1.0037660 #>  [997,] 0.7149990 0.7619953 0.7938210 #>  [998,] 0.6596286 0.6785773 0.6862083 #>  [999,] 1.4905846 1.5584941 1.6036529 #> [1000,] 0.5487745 0.5848577 0.5861700 #>   # Find the 10 approximate nearest neighbors tof_find_knn(     .data = sim_data,     k = 10,     distance_function = \"euclidean\", ) #> $neighbor_ids #>         [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] #>    [1,]  975  324  119  116  296  217   80  880  603   500 #>    [2,]  117  904  522  425  190  671  114  267  889   747 #>    [3,]  818  921  150  368   81  316  990  706  633   513 #>    [4,]  819  766  454  843  243  287  616  298   30    13 #>    [5,]  426  366  539  247  595  697  821  185  473   520 #>    [6,]  412  790  611  528  964  390  298  408  946   377 #>    [7,]  605  568  752  983  532  927  178  380  202   712 #>    [8,]  866  469  944  774  580  771  400  517  976   858 #>    [9,]  206  229  304  235  332  463  855  524  334    18 #>   [10,]   25  106  876  102  437   22  729   63  867   307 #>   [11,]  755   98  630  305  646  538  871  290  739    96 #>   [12,]  310  772  590  279  383  625  492  696  928   235 #>   [13,]  308  280  710  843  819  526  616  421  125    71 #>   [14,]  870  509  739  502   61  514  398  543  480    96 #>   [15,]  491  721  732  230  261  198  916  111  466   768 #>   [16,]  225  971  994  115  151  345  459  152  723   897 #>   [17,]  586  193  648  139  731  485  290  871  978   697 #>   [18,]  235  928  229  719  735  164  590  492    9    12 #>   [19,]  467  868  961  148  992  695  728  292   10   169 #>   [20,]  914  253  129  435  101  414  665  688  582   244 #>   [21,]  500  324  601  147  941   32  107  593  869    79 #>   [22,]  393   67  307  373  453  672   39  202   95   437 #>   [23,]  517  526  967  944  179  771  525 1000  766   480 #>   [24,]  211  922  847  751  822   56  359  617  406   508 #>   [25,]   10  876  106  437  867  307   63  102  428   537 #>   [26,]  479  186  512  196  239  131  882  880  716   132 #>   [27,]   66  970  529  999  552  855  126  285  220   418 #>   [28,]  752  532  699  621  380  897  605    7  983   462 #>   [29,]  191  700   74  349  810  321  754  846  613   804 #>   [30,]  866  976  580    4    8  858  932  433  766   616 #>   [31,]  537  674  574  695  338   87   71  382  819   194 #>   [32,]  371  568  779  201   21  869  500  906  147    45 #>   [33,]  623  175  236  442  481  482  110  363  518   141 #>   [34,]  564  711  913  423  545  940  827  628  495   986 #>   [35,]  159  910  110  541  352  338  242  379  306   505 #>   [36,]   52  252  681  227  323  950  974  391  990     3 #>   [37,]  302  279  995  647  550  780  310  696   12    99 #>   [38,]  743  223   50   70  998  237  476  566  724   407 #>   [39,]  233  942  176  202  453  405  994   67  416    22 #>   [40,]  280  125  629  809  188   13  217   69  421   710 #>   [41,]  194  664  955  381   92  801  574  674  469   733 #>   [42,]  775  513  884  490  544  793    3  915  831   817 #>   [43,]  563  810  790  611  263  966  700  662  613   349 #>   [44,]  325  461  255  370  968  654  344  165  547   565 #>   [45,]  558  929  179  242   71  518  201   32  226   525 #>   [46,]  957   84  169   99  536  220  676  496  780   146 #>   [47,]  881  189  435  832  139  519  266  797  667   122 #>   [48,]   79  329  186  488  534  758  713  575  869   483 #>   [49,]  258  134  645  354  549  554  781  584  806   158 #>   [50,]   70  237   38  743  125  223  998  507  492   360 #>   [51,]   63  980  102  100   10   25  876  106  634   278 #>   [52,]  252  681   36  404  323  183  430   60  195   783 #>   [53,]  861  965  504  898  776  771  275  331  517   510 #>   [54,]  936  884  199  513  663  342  768  197  628   326 #>   [55,]  908  204  542  952   90  934  977  643  639   722 #>   [56,]  359  674  925  469  606  516  385   85  799   357 #>   [57,]  265  915   98  630  831   11  834   83  544   755 #>   [58,]  814  682  334  615  379  597  524  811  363   833 #>   [59,]  495  864  578  628  392  845  199  640  522   904 #>   [60,]  183  842  353  195  684  440  207  938  121   554 #>   [61,]  221  760  509   14  127  870  171  863  387   774 #>   [62,]  289  250  763  403  927  748  208  712  583   427 #>   [63,]   51  100  634   25   10  102  278  382  537   560 #>   [64,]  538  438  480  466  841   96  739  213  771   944 #>   [65,]  275  630  230  466  646  538  438  755  768   898 #>   [66,]  970   27  285  126  249  304  330  104  418   220 #>   [67,]  373  694   22  178  505  393  453  416  202   447 #>   [68,]  109  270  713  813  153  997  820  329  180   258 #>   [69,]  282  629  477  421  804  303  256  420  592    40 #>   [70,]   50  223   38  743  237  125  566  998  492   507 #>   [71,]  482  226  929  558  297  194  518  242   45   236 #>   [72,]  893  919  829  424  553  627  497  737  315   303 #>   [73,]  138  353   81  549  311  652  921  234  668   158 #>   [74,]  321  846  335  700  679  613  399  512  190   174 #>   [75,]  136  653  979  846  805  533  865  725  993   903 #>   [76,]  529  552  146  855  999   27  220  536  970    84 #>   [77,]  108  891  229  306  574  206  338  463  955   481 #>   [78,]  404  430  742  600  888  596  791  937  709   276 #>   [79,]   48  176  186  329  575  869   21  500  717   324 #>   [80,]  880    1  132  512  196  140  186  116  324   603 #>   [81,]  150  633   73  921  818  138  353    3  706   195 #>   [82,]  119  116  443  296  268  975  966  882  328   933 #>   [83,]  265  834  366  185  316    5  697   98  802   759 #>   [84,]  957  146  833  536   46  212  220  395  169   105 #>   [85,]   56  433  359  922  232  799  384  866  674   469 #>   [86,]  813  738  800  270  820  703  153  350  977    68 #>   [87,]  695  359  382   31  674  537  278   56  551   614 #>   [88,]  581  960  142  984  114  575  668  603  805   180 #>   [89,]  131  318  962  714  935   26  459  815  716   690 #>   [90,]  156  926  204  977  782  908  800  795  639    55 #>   [91,]  987  932  273  858  708  230  911  466   15    65 #>   [92,]  664  724  442   41  381  481  194  200  801   733 #>   [93,]  980  746  787   51  632  452  263  560  102   634 #>   [94,]  929  226  558  431  187  543  297  518  730   763 #>   [95,]  453  202  210  301  602  687  942  953  307   428 #>   [96,]  739  213  680  860  480   64   14  835  870   538 #>   [97,]  916  566  721  355  396   15  733  767  223   743 #>   [98,]  831  290  739   96   11  544  835  755  697   538 #>   [99,]  957   46  496  780  912  676  647  169  489   467 #>  [100,]  560   63  124  634   51  550  452  278  825   980 #>  [101,]  969  577  582  446   20  565  567  200  129   451 #>  [102,]   10   51  106   25  876   63  980  647  278   729 #>  [103,]  350  738  418  285  246  104  157  126  956    86 #>  [104,]  418  246  285  249  337  203  370  675  126   636 #>  [105,]  811  146  212  947  669  339  529  364   84   833 #>  [106,]  876   10   25  729  672  102   22  307  393   867 #>  [107,]  601  741  638  500   21  826  941  201  505   795 #>  [108,]   77  229  955  891  206  182  574  463  995   406 #>  [109,]   68  180  612  270  813  153  960  713  329   320 #>  [110,]  306   35  175  910   33  623  338  463  242   379 #>  [111,]  627   15  768  721  315  197  491  358  261   663 #>  [112,]  796  709  742  791  888  115  596  173  430   807 #>  [113,]  525 1000  923  710  843  162  179  421  394   287 #>  [114,]  984  522  845  740  747    2  889   88  117   267 #>  [115,]  288  345  173  239  214  747   16  161  889   520 #>  [116,]    1  873  119  942  619  882  176  880   82   500 #>  [117,]    2  904  190  522  425  889  196  747  114   671 #>  [118,]  454  501  537   63  243  277  819  494  867   571 #>  [119,]  975  296    1  443  116  324   82  500  268   619 #>  [120,]  502  137  523  457  398  543  757  838  458   773 #>  [121,]  684  530  207  353  658  554  440  917  637   869 #>  [122,]  519  585  761   47  670  885  322  410  257   655 #>  [123,]  696  277  182  891  188  144  574  215  590   955 #>  [124,]  560  100  144  634  123  849  452  696   63   188 #>  [125,]   40   50  998  280   13  360  308  237   38   593 #>  [126,]  285   66  573  104  650  956  878  337  418   249 #>  [127,]  253  221   61  797  387  244  760  189  374   503 #>  [128,]  284  821  887  726  185  288  765  173  986   727 #>  [129,]  567  435  503  253   20  127  797  688  101   387 #>  [130,]  562  701  600  937  511  681   78   52  436   618 #>  [131,]  935   89   26  690  459  749  140  186  962   882 #>  [132,]  880   80  479  512  186  140   26  471  196   425 #>  [133,]  474  334  463  363  524  206  814  579  110   274 #>  [134,]   49  715  840  842  354  258  498  554  549   432 #>  [135,]  852  498  260  432  715  840  134  584   49   591 #>  [136,]  903   75  865  533  993  725  979  661  653   805 #>  [137,]  502  543  120  458  398  870  863  803   14   691 #>  [138,]  549   73  311  652  234  554  921  478  150   718 #>  [139,]  171  760  731  266  189  485  863  402  875   221 #>  [140,]  186  329  880  132  488   80  690   79   48   131 #>  [141,]  251  769  175  623  260  236  147   33  645   593 #>  [142,]   88  158  668  960  581  984  592  192  533   421 #>  [143,]  254  531  968  165  943  461  255  490  641   654 #>  [144,]  497  188  123  124  809  424  737  849   40   492 #>  [145,]  661  136  903  685  725  865  660  979  993    75 #>  [146,]   84  529  105  212  220  536  833   76  552    58 #>  [147,]  593   21  236  906   32  941  324  601  201   319 #>  [148,]  209  666  569  248  868  728   19  434  313   169 #>  [149,]  364  798  468  654  607  339  669  811  785   783 #>  [150,]   81  633  921  138    3   73  513  818  195   884 #>  [151,]  347  345  214  994  152  441  293  692  486   897 #>  [152,]  486  151  472  333   16  225  214  971  948   723 #>  [153,]   68  419  713  109   48  488  329  758  270   997 #>  [154,]  759  386  823  259  240  631  392  920  587   834 #>  [155,]  341  209  283  666  248  409  148  569  169   455 #>  [156,]   90  926  782  977  204  268  172  795  741   924 #>  [157,]  432  840  584  675  636  354  164  337  135   249 #>  [158,]  549  142  645  652  234  311  960  258   73   668 #>  [159,]   35  910  338  279  772  306  784  110  635   541 #>  [160,]  367  599  428  662  372  291  812  672  876   263 #>  [161,]  239  173  693  288  765  327  369  318   26   962 #>  [162,]  394  640 1000  841  113  168  946  192  390   923 #>  [163,]  817  458  965  776  294  665  502  691  137   120 #>  [164,]  719  432  636  157  901  249  675  769   18   584 #>  [165,]  968  461  451  254  659  255  949  143  531    44 #>  [166,]  416  673  393  762  826  405   39  994   67    22 #>  [167,]  704  688  484  916  200  504  244  396    8   721 #>  [168,]  394  778  213  854  923  640  162  390  841   522 #>  [169,]  957   46  676  666  992  148   19   84  673    99 #>  [170,]  745  598  991  203  917  589  375  478  608   363 #>  [171,]  760  863  266  731  139  543  870  875   61   221 #>  [172,]  657  924  784  777  156  268  912  383  279   635 #>  [173,]  288  161  239  115  765  369  887  327  709   727 #>  [174,]  750  231  754  321  362  846   74  613  335   512 #>  [175,]  623   33  236  141  110  481  442  251  306   363 #>  [176,]  942   79   39  873  233  717  186  116  500   779 #>  [177,]  462  514  480  509  860  677  870   14  213   602 #>  [178,]  694  373  985   67  927  416  447  505    7   201 #>  [179,]  525   45  558   23  113  929 1000  705  308   514 #>  [180,]  612  320  805  865  109  960  581   88  653   142 #>  [181,]  340  388  547  446  344  460  565  325  101   312 #>  [182,]  801  576  955  891  733  574  123  277  360   401 #>  [183,]   60  842  195  440  353  684  938  404  207   121 #>  [184,]  979  411  750  231  314  174  419  362  132   725 #>  [185,]  821  247    5  426  128  366  879   83  802   723 #>  [186,]   79   26   48  140  176  575  880  132   80   196 #>  [187,]  589  689  336  608  658   94  624  518  763   457 #>  [188,]  809  280  215  789   40  277  125  501  144   123 #>  [189,]  797  863  881  667  171  402  139   47  137   543 #>  [190,]  117  904  522    2  196  640  192  392  889   778 #>  [191,]   29  548  321   74  846  174   75  754  700   411 #>  [192,]  640  162  864  420  190 1000  421  522  581    88 #>  [193,]  586  731  585  697  290   17  266  473  139   670 #>  [194,]  664   41  381   71  297  482  226  674  469   929 #>  [195,]  842   60  183  681  150   81  353  134  531   138 #>  [196,]  603  190  880  873  117  512   80   26  575   889 #>  [197,]  756  592  303  996  256  767  477  282  768   315 #>  [198,]  642  222  708  261  408  491   15  946  553   987 #>  [199,]  874  936  628  495   59  326  759   54  831   768 #>  [200,]   92  232  664  381  577  969  567  167    8    41 #>  [201,]  601  242   32  352  608  985  505  336  518   178 #>  [202,]  453   95  687  942  233  602  373  301    7   779 #>  [203,]  745  170  370  598  468  938  104  246  337   991 #>  [204,]   90  908  156  977  926   55  782  657  643   172 #>  [205,]  714  219  815   22  935  656  672  393  318   882 #>  [206,]  463  229  133  334   77  524  110  306    9   406 #>  [207,]  997  713  121  745  806  554  684  534  258   610 #>  [208,]  748  250  427  402   62  403  431  487  583   699 #>  [209,]  148  248  569  666  728  988  434  570  753   313 #>  [210,]  953   95  453  202  437  942  687  528  599   873 #>  [211,]  922   24  847   85  567  406  751   56  359   508 #>  [212,]  682  833  300  583   84   58  146  570  851   105 #>  [213,]  854  168  841   96  394  940  480  986  739    64 #>  [214,]  345  347  520  151  530  293  692  115  486   333 #>  [215,]  789  772  188  696  319  383  338  891  574   809 #>  [216,]  656  734  166  971  405  151  448  753   16   994 #>  [217,]  328  975    1  809  119  966  324  349  296    40 #>  [218,]  981  907  351  808  346  809  320  625  555   237 #>  [219,]  673  205  676  393   22  166  729  672  106   815 #>  [220,]  330   84  780  146  957  970   46   66  126   657 #>  [221,]   61  760  127  387  374  871  171   14  509   244 #>  [222,]  553  198  804  642  315  261  456  919  627   408 #>  [223,]   38   70  566  743   50  998  724  576  733    92 #>  [224,]  339  669  783  948  333  391  785  607  364   486 #>  [225,]  971   16  994  333  459  214  115  345  152   151 #>  [226,]  297  929   71  518  558  482   94  194  274    45 #>  [227,]  950  974  286  391   36  641  670  473  885   958 #>  [228,]  824  934  905  459  971  830  542  409  535   952 #>  [229,]   77  206  928  481  235  306  108   18  463   590 #>  [230,]  466  438  491   65  771  538  275   64   15   708 #>  [231,]  750  174  716  515  132  512  131  690  679    89 #>  [232,]  786  200  484   41  396  567   85    8  733   866 #>  [233,]   39  176  942  202  345  405  416  779  453     7 #>  [234,]  311  652  989  138  549  158  591  718   73   658 #>  [235,]   18  229  928   12  304    9  590  206  719    77 #>  [236,]  623   33  482  175  518  147  242  593  906    71 #>  [237,]   50  507  743   38   70  125  781  407  218   492 #>  [238,]  423  982  973  422  913  677  726  940  506   412 #>  [239,]  288  161  778  173   26  765  327  889  115   747 #>  [240,]  834  759  154  326  874  265  199  386  259    83 #>  [241,]  472  152  948  794  486  455  449  872  707   272 #>  [242,]  518  201  236   71   45  274  558  226   35   608 #>  [243,]  298  843  501    4  710  408  766  454  616   819 #>  [244,]  688  665  253  704  504   61  776  127  221   163 #>  [245,]  792  292  300  429  822  487  751  615  269   682 #>  [246,]  104  418  370  836  203  938  337  285  675   249 #>  [247,]  426  185    5  821  366  520  539  802  723   595 #>  [248,]  570  728  209  527  753  300  434  988  992   148 #>  [249,]  285  675  636  104  337  418  432   66  370   246 #>  [250,]  748  208  427   62  699  431  380  605  532   403 #>  [251,]  141  769  623  175  806  645  556  147  260   236 #>  [252,]   52   36  681  783  607  183   60  404  610   938 #>  [253,]  127  244  688  797  665  914  704  221   61   129 #>  [254,]  641  143  461  531  968  165  990  654  949   255 #>  [255,]   44  461  968  370  654  715  165  675  254   598 #>  [256,]  592  756  282  743  998   69  197  477  526   767 #>  [257,]  410  914   47  585  122  670   20  435  460   193 #>  [258,]  645  554   49  806  917  549  478  158  652   134 #>  [259,]  587  764  154  631  727  823  711  495  904   369 #>  [260,]  141  476  510  591  623  251  769  175  478    33 #>  [261,]  198  456  491  827  477  642  768  708  222   545 #>  [262,]  374  387  886  433  932  620  588  799  503   911 #>  [263,]  563   43  662  787  599  746  790  160  611   966 #>  [264,]  918  385  736  875  988  402  606  890  621   357 #>  [265,]   57  834   83  316   98  240  831  759  326   874 #>  [266,]  731  171  838  885  523  139  189  543  863   137 #>  [267,]  271    2  425  740  747  709  671  114  823   117 #>  [268,]  777  784  635  924  119  741  443  107  156    82 #>  [269,]  524  615  751  245  499  332  792  334  899   682 #>  [270,]  813   68  820  800  713  109  738  329   86   878 #>  [271,]  267  845  818  920  740  440  353  386  706   114 #>  [272,]  698  455  707  472  397  723  152  844  241   449 #>  [273,]   91  987  686  198  642  932  708  422  545   423 #>  [274,]  336  518  608  352  429  242  379  226  363   201 #>  [275,]   65  898  438  230  466  776  768  861  538   630 #>  [276,]  295  823  633  896  701  631  271  993  267    81 #>  [277,]  123  955  574  891  696  182  188  401  501   801 #>  [278,]  550  494  382   87   63  614  467  695   25    10 #>  [279,]  310  383  784  647  159  635  777  772  172   924 #>  [280,]   13   40  308  710  188  789  125  501  571   843 #>  [281,]  465  309  798  811  322  816  851  761  683   519 #>  [282,]  477   69  303  629  256  804  421  592  732   315 #>  [283,]  449  455  947  465  794  707  155  892  472   241 #>  [284,]  887  128  397  765  939  173  288  726  161   115 #>  [285,]  249  104  337  636  126  418   66  675  246   432 #>  [286,]  473  974  670  539  227  595  885  950  697   366 #>  [287,]  900  649  602  953  923    4  301  179  113   298 #>  [288,]  239  173  161  115  765  778  747  889  327   726 #>  [289,]  403   62  763  712  441  583  927  748  983   985 #>  [290,]  697  835   98  871  739  731   11  171   96    14 #>  [291,]  604  372  448  651  428  734  367  546   95   656 #>  [292,]  487  447  961  245  792  728  300  357  429   208 #>  [293,]  983  757  523  347  520  699  605  214  838   595 #>  [294,]  817  163  120  502  544  793  776  773  665   368 #>  [295,]  276  633  342  823  993  896  668   81  701   631 #>  [296,]  975  119    1  116   82  324   80  268  217   741 #>  [297,]  226  381  929  664   71  194  482  558  516    94 #>  [298,]  243  412  408  946  964  390  843  900  766   113 #>  [299,]  499  309  702  862  667  683  617  751  519   446 #>  [300,]  570  487  728  245  583  682  527  792  292   248 #>  [301,]  649  621  447  602   95  202  453    7  532   307 #>  [302,]  780  330   37  279   12  912  310  657   99   995 #>  [303,]  477  282  315  197   69  592  420  256  629   456 #>  [304,]  970  334  910   66  206  110  573  855  463   330 #>  [305,]  588   11  374  221  871  290  911  127   61   262 #>  [306,]  338  110  481  360  891  574  175   35   77    33 #>  [307,]  428  649  301   95   22  393  437  447  672   453 #>  [308,]   13  280  710   71  482  526  179  525  843   819 #>  [309,]  683  465  761  816  851  862  299  702  519   322 #>  [310,]  383  279  772  924  625   12  777  784  215   172 #>  [311,]  234  652  138  549  989   73  718  158  658   591 #>  [312,]  565  344  931   44  325  451  165  461  968   255 #>  [313,]  753  434  393  728  992  569  988  527  248   672 #>  [314,]  722  594  317  231  184  750  419  837  515   749 #>  [315,]  456  477  553  627  303  919  804  282  222   358 #>  [316,]  818  366  831    3  539  706  920   83  323    98 #>  [317,]  314  850  594  419  515  749  231  962  184   716 #>  [318,]   89  161  693  714  239   26  651  656  604   815 #>  [319,]  625  941  593  556  772  981  907  924  147   119 #>  [320,]  612  180  805  865  808  653  555  346  109   660 #>  [321,]   74  846  335  548  679  174  399  613   29   700 #>  [322,]  816  851  832  683  761  838  885  309  519   376 #>  [323,]  791  807  430  742  562   36  271  818   52   440 #>  [324,]   21    1  500  603  575  119  975  116  960   147 #>  [325,]   44  344  461  547  255  811  370  565  597   388 #>  [326,]  199  834  759  936  874  884  831  240  633   513 #>  [327,]  369  765  727  161  239  693  288  377  778   173 #>  [328,]  966  217  975  349    1  119  809  443  810    82 #>  [329,]   48   79  140  488  713  270  800  186  639   813 #>  [330,]  220  780  970  302  573  657   66  304  910   126 #>  [331,]  356  609  861   53  665  969  965  776  493   167 #>  [332,]  269  524    9  899  206  463  334  536  751   855 #>  [333,]  225  796  888  152  894  214  596  971  486   151 #>  [334,]  524  463  133  379   58  206  110  814  615   274 #>  [335,]   74  512  613  679  321  700  846  196  880   479 #>  [336,]  608  274  518  187  201  352  589  985  763   363 #>  [337,]  636  806  432  285  249  104  675  251  203   370 #>  [338,]  306  574  159  891   35  242   31  110  215    77 #>  [339,]  224  669  364  783  149  798  468  607  785   105 #>  [340,]  547  181  388  325  460   44  499  344  659   461 #>  [341,]  155  666  569  209  148  444  557  361  859   455 #>  [342,]  495  864  663   59  295  578  199   54  628   420 #>  [343,]  356  439   97  493  767  407  996  331  566   609 #>  [344,]  325  312   44  565  388  931  255  461  547   552 #>  [345,]  347  214  692  994  233  151  115  897  530   293 #>  [346,]  555  808  907  218  769  820  981  320  660   180 #>  [347,]  345  692  712  293  983  214  530  151  233     7 #>  [348,]  496  912  657   99  204  676  330  220   46   780 #>  [349,]  328  810  754  217  700  966   29  809  975   613 #>  [350,]  270  813   68  738   86  820  713  103  153   109 #>  [351,]  218  808  507  981  492  346  555  907  237   417 #>  [352,]  379  201  541  608  336  601  274  985   35   638 #>  [353,]   73  440  121  684  896   60  921  183  842    81 #>  [354,]  584   49  134  781  840  498  157  432  135   258 #>  [355,]  786  856  484   97  396  916  733  401  167   566 #>  [356,]  331  721  609  861  916  493  167   53  767    97 #>  [357,]  822  551  292  359  434  385  208  264   56   988 #>  [358,]  456  315  578  909  627  663  303  420  553   111 #>  [359,]   56  674   87  357  925  551   31  695  384   606 #>  [360,]  481  590  306  891  574  175  492   33  125   338 #>  [361,]  521  859  557  812  546  569  367  672  868   313 #>  [362,]  750  174  754  653  632   80  933  184  846   132 #>  [363,]  474  991  623  589  274   33  336  608  187   175 #>  [364,]  149  339  468  798  607  669  783  654  811   540 #>  [365,]  450  790  118  222  501  243    6  553  198   611 #>  [366,]  539    5  595  697  835  788  316  426  473   807 #>  [367,]  546  160  428  812  672  521  291  859  599   372 #>  [368,]  773  706  921  718  818  457  788    3  624   120 #>  [369,]  327  765  727  161  693  679  239  173  288   711 #>  [370,]  203  255  598  246  675  654  104  337  745   715 #>  [371,]  869   32  568  705  779  658  608  717  689   624 #>  [372,]  291  599  900  964  428  528  982  604  210    95 #>  [373,]   67  694  178  505  453  202  619  500  201   447 #>  [374,]  387  262  886  221  911  127  799   61  588   620 #>  [375,]  478  949  917  598  554  457  991  589  684   658 #>  [376,]  785  838  757  763  457  589  187  120  832   598 #>  [377,]  528  778  390  168  412  964  327  923  210   394 #>  [378,]  978  828   17  586  655  193  185  247   83   585 #>  [379,]  352  274  541  833   35  334  395  336  608   110 #>  [380,]  532  699  431  605  621  250   28  514  752   875 #>  [381,]  664  297  516  194  577  226  469   41   92   482 #>  [382,]  695  537  550   87   31  696  789  278  961   338 #>  [383,]  310  924  279  772  777  625  784  319  215   635 #>  [384,]  470  433  606  886  359   56  799  385  559   857 #>  [385,]  606  875  925  431  863  264  918  402  380   649 #>  [386,]  920  759  154  271  845  986  680  823  392   709 #>  [387,]  374  799  503  127  221   61  886  262  433   774 #>  [388,]  499  181  340  524  325  446  344  547  269   579 #>  [389,]  955  401  182  801  277  576  733  123  108    85 #>  [390,]  412  946  528  394  298  923  168  964  162   377 #>  [391,]  958  227   36  224  950  948  486  974  607   252 #>  [392,]  522  904  640  845  117  190    2   59  986   940 #>  [393,]   22   67  313  672  307  405  166  416  992    39 #>  [394,]  168  162  640  841  923  213  390 1000  778   946 #>  [395,]  895  833  541  826  352  985  972  379  762   638 #>  [396,]  916  733  786  484  616    8  232   97  401   355 #>  [397,]  939  284  887  844  723  128  272  698   16   821 #>  [398,]  954  445  624  705  870  989  543  860  137   514 #>  [399,]  471  671  479  425  679  846    2  716  117   587 #>  [400,]  469  509  297  925  929   94  863  543    8   803 #>  [401,]  733  801  616  182  277  576  396  955  501   819 #>  [402,]  427  667  208  748  250  863  431  385  189   464 #>  [403,]  289  583  748   62  763  427  441  250  699   208 #>  [404,]  430  183   78   60  888   52  475  937  596   252 #>  [405,]  416  897  752  927  233  734  202    7   39   453 #>  [406,]  516  751  508  429  577  133  463  381  674   664 #>  [407,]  743  439   38  476  237  507  767  756   70    50 #>  [408,]  946  298  843  642  412  766  390  162  708   243 #>  [409,]  830  228  824  155  934  905  947  971  673   216 #>  [410,]  257  460  122  914   47  659  435  670  585   519 #>  [411,]  548  321  174  515  184  846  679  231   74   399 #>  [412,]  390  964  946  528  298    6  408  377  900   168 #>  [413,]  894  783  404  888  333  475  742  252  224   540 #>  [414,]  582  451  659  609   20  775  165  817  101   969 #>  [415,]  848  844  982  291  372  859  448  604  651   812 #>  [416,]  927  405  178  762  233    7   67  985  441   712 #>  [417,]  507  439  351  492   70  237  901   50  737   719 #>  [418,]  104  246  285  249  675  370  337  203  126    66 #>  [419,]  594  153  749  488  850   86  542  758  140    48 #>  [420,]  864  578  192  533   69  456  282  303  477    59 #>  [421,]  967 1000   69  113  906  192  282  525  710   526 #>  [422,]  423  238  564  987  973  273   34  506  755    11 #>  [423,]  564  238  940  987  827  946  913  412  708    34 #>  [424,]  737  497  144  417   72  351  893   70  492    50 #>  [425,]  671  479  471    2  117  399  267  904   26   716 #>  [426,]    5  247  366  821  539  185  595  520  486   697 #>  [427,]  748  208  250  402  403  431  699   62  667   863 #>  [428,]  307  672  599  372  367   95  291  546  867   900 #>  [429,]  792  274  226  245  516  674  518  297  292   929 #>  [430,]  791  888  596  742  404  440  807  323   78   758 #>  [431,]  863  380  543  250  875   94  427  699  514   532 #>  [432,]  636  157  337  584  675  840  164  769  249   806 #>  [433,]  799  866  503  470  384  387  262  976   30    85 #>  [434,]  988  313  728  753  527  569  570  248  357   487 #>  [435,]   47  129  881  253  127  797   20  914  189   446 #>  [436,]  600  725  618  993  979   78  661  276  701   896 #>  [437,]  953  619  210  571   25  453  443  307  662   966 #>  [438,]  466  771  230  504   64  538  944  517  275   491 #>  [439,]  407  507  417   70  743   38  237   50  223   901 #>  [440,]  353  684  637  121  530  921   60  183  430   807 #>  [441,]  289  927  403  762  583  416  712  527   62   151 #>  [442,]   33  724  623  482  510  175  481   92  664   236 #>  [443,]  119  619  268   82  789  505  571  975  635   500 #>  [444,]  557  569  361  736  988  209  868  521  434   148 #>  [445,]  398  989  624  705  954  480  773  689  870   658 #>  [446,]  579  499  508  945  577  751  881  615  524   883 #>  [447,]  649  694  301  178  292  487  373  927  250     7 #>  [448,]  734  656  291  546  604  897  651  859  405    95 #>  [449,]  707  794  948  283  761  152  455  472  441   465 #>  [450,]  365  563  560   43  790  810  349   29  829   263 #>  [451,]  659  165  565  582  883  461  460  969  414   968 #>  [452,]  825  634  849  777  647  383  560  924  310   100 #>  [453,]  202   95  942  687  373  619  210  602   67   301 #>  [454,]    4  819  243  537  118  501   30  616  298   287 #>  [455,]  272  472  707  698  449  283  241  152  794   948 #>  [456,]  315  358  578  261  477  804  553  222  420   627 #>  [457,]  658  624  989  375  589  689  684  187  120   773 #>  [458,]  803  691  137  163  797  730  881  945  120   502 #>  [459,]  971  994  131  225   89  935  749  815  962   542 #>  [460,]  659  883  881  451  945  547  832   47  410   322 #>  [461,]   44  255  165  968  254  654  659  451  325   641 #>  [462,]  177  890  621  514  677  602  380  532  875   923 #>  [463,]  206  334  133  110  306   77  338  406  524   429 #>  [464,]  736  617  667  402  822  770  264  918  357   988 #>  [465,]  309  281  862  761  683  892  519  702  794   816 #>  [466,]  230  438  538  771   64   65  491  275  504   944 #>  [467,]   19  961  695  382  868   10  278  292   25   647 #>  [468,]  607  669  654  149  785  745  203  364  376   610 #>  [469,]    8  400  925   56  381  194  297  866  674   664 #>  [470,]  384  886  606  433  799  976  385  387  559   774 #>  [471,]  671  399  425  479    2  132  117  846  716   267 #>  [472,]  241  152  455  486  272  948  449  698  707   794 #>  [473,]  286  539  697  595  366  974  670  835    5   788 #>  [474,]  363  991  597  931  133  589  691  814  187   730 #>  [475,]  997  483  758  938  956  713  404  783  207   540 #>  [476,]  591  260  743  998  724   38  256  510  756   549 #>  [477,]  282  315   69  303  804  456  629  732  261   256 #>  [478,]  917  554  375  652  991  949  598  589  658   258 #>  [479,]  425  716   26  399  132  671  471  117  679     2 #>  [480,]  841  860  445  514   64  954  705  177   96   398 #>  [481,]  360  306   33  175  442   92  623  590  110   574 #>  [482,]   71  226  236  297  194  442  929   33  518   558 #>  [483,]  639  758  972  488  692  997   48  475  534   713 #>  [484,]  786  396  167  232  355  916   30  866    8   704 #>  [485,]  139  761  266  731  667  707  402  464  736   862 #>  [486,]  948  152  214  151  520  426  293  723  595   333 #>  [487,]  292  300  728  992  570  447  527  792  927   762 #>  [488,]   48  329  749  639  140  483  542  186  758    79 #>  [489,]  963   19   99  467  169  868  666  148  899   729 #>  [490,]  531  943  968  150  165  775  143  949  852    42 #>  [491,]  732   15  230  466  261  438  771  721  768   708 #>  [492,]  590  928  719  360   50   70  237  507  351   125 #>  [493,]  200  566  331  356  969  101   92  916   97   724 #>  [494,]  278  118   87  550  614   63  867  857  551   382 #>  [495,]   59  628  578  864  199  342  874  420  827   392 #>  [496,]  676   99  912  348  957   46  169  204  673   657 #>  [497,]  144  737  424  188   70  492  123   50  125    40 #>  [498,]  840  943  135  134  852  715  354  157   49   584 #>  [499,]  299  446  579  615  269  388  751  524  309   945 #>  [500,]   21  601  324  107  779  619   32  176  717    79 #>  [501,]  243  616  280  819  710   13  571  843  789   188 #>  [502,]  137  120  870   14  543  398  163  458  776   773 #>  [503,]  799  387  433  567  127  866  129  374  262   797 #>  [504,]  771  438  944  861  517  965  466  244  509   776 #>  [505,]  694  373  541  201  178   67  601  635  107   352 #>  [506,]  238  913  939  422  726  986  128  564  940   727 #>  [507,]  237  417  901   50  719  351  407   70   38   439 #>  [508,]  516  577  579  751  406  446  797  945  381   881 #>  [509,]   14  870  944  400  514   61  177  774  771   480 #>  [510,]  689  442  260  965  691  803  474  591  589   187 #>  [511,]  562   36   52  681  323  252  958  742  701     3 #>  [512,]  880  613  882  335  690  132   26  196   80   186 #>  [513,]  884  150  936   42   54   81    3  831  633   326 #>  [514,]  177  860  870  462  380  480  509  543  398    14 #>  [515,]  716  679  231  411  962  479  399  335   89   321 #>  [516,]  381  508  664  577  297  406  429  674  194   226 #>  [517,]   23  771  944  526  732  438  504  967  766   509 #>  [518,]  274  242  336  226  608  236  558   71  929   201 #>  [519,]  122  761  309  322  862   47  585  885  465   683 #>  [520,]  595  214  788  293  807  879  821  539  366   680 #>  [521,]  361  367  546  859  672  812  428  557  867   729 #>  [522,]  904  392  117  640  190    2  114  747  845   889 #>  [523,]  757  838  293  983  788  120  543  954  398   595 #>  [524,]  334  615  133  269   58  814  579  463  206   499 #>  [525,]  179  113 1000   23  568  967   32   45  923   705 #>  [526,]   23  517  967  732   13  308  482  771  421   998 #>  [527,]  570  753  728  762  248  927  434  487  441   988 #>  [528,]  964  377  390  412    6  298  372  210  900   611 #>  [529,]   76  146  552   27  999  105  855  220  970    66 #>  [530,]  534  637  121  740  692  347  610  684  440   214 #>  [531,]  490  254  143  990  949  968  943  195  165     3 #>  [532,]  380   28  699  752  621  605    7  250  983   431 #>  [533,]  903  420  805  142  136  865   69  864  303   668 #>  [534,]  758  530   48  740  997  869  121  692  596   207 #>  [535,]  643  720  908  830  951  650  542  956   55   952 #>  [536,]   84  146   46  212  957  899  833  220  269   169 #>  [537,]  571   31  789  382  695  454   87  819  437     4 #>  [538,]   64  466  438  755  230  646  739   96   65   275 #>  [539,]  366  595    5  788  473  697  835  286  520   807 #>  [540,]  836  938  783  475  246  364  956  413  894   339 #>  [541,]  505  352  395   35  694  379  201  833  178   601 #>  [542,]  639  488  935   55  459  483  131  749  908   140 #>  [543,]  137  863  431  870  398  514   94  171   14   502 #>  [544,]  776  831  817  665  294  915   98  773  368   718 #>  [545,]  628  261  564  827  456  768  646  495  578   198 #>  [546,]  672  859  448  367  428  656  291  734  521   393 #>  [547,]  340  325  460  181   44  659  461  451  388   565 #>  [548,]  321  411  846   74  191  679  174   75  399   335 #>  [549,]  138  652  158  311  234  591   73  258  554   645 #>  [550,]  278  382  696  995  647   87  614   37  467    63 #>  [551,]  357  359  857  868  867   87  384   56  434   695 #>  [552,]  855  529   76  146   27  970  999   66  304   811 #>  [553,]  222  919  315  804  627  629  456  477  893   198 #>  [554,]  478  917  258  375  652  138  121  645  549    49 #>  [555,]  808  660  346  320  865  820  218  180  781   612 #>  [556,]  907  941  625  319  251  981  878  772  795   573 #>  [557,]  444  361  569  859  988  521  736  264  434   812 #>  [558,]  929   45  226   71  179  518   94  297  242   482 #>  [559,]  973  470  982  848  886  677  384  890  900   372 #>  [560,]  124  100  634   63  452  825  144  849  188    51 #>  [561,]  238  422  959  982  559  973  506  423  273   415 #>  [562,]  323  701  511  742   52  791  276  681   78   430 #>  [563,]   43  263  790  611  787  810  662    6  613   528 #>  [564,]   34  423  940  913  545  827  986  711  628   422 #>  [565,]  931  451  312  969  597  659  945  883  474   165 #>  [566,]  223   38   97  724  733   92   70  743  576   998 #>  [567,]  129  503  232  200  577  799  508  516  797   101 #>  [568,]  779  705  371   32    7  605  687  869  525   717 #>  [569,]  209  988  434  148  313  753  666  248  444   557 #>  [570,]  728  527  248  300  487  753  762  992  434   583 #>  [571,]  789  537  710  437  443  953  280  619  501    31 #>  [572,]  770  617  464  702  822   24  736  299  862   667 #>  [573,]  910  556  772  878  625  657  638   35  172   795 #>  [574,]  891  955  338   31  306  360  277   77   41   182 #>  [575,]  717  603  869   79  324  960  186  984   88    21 #>  [576,]  801  733  182  223  566  401   92  955  928    41 #>  [577,]  516  381  508  664  579  803  200  406  969   297 #>  [578,]  420  864  495  456   59  628  192  827  358   261 #>  [579,]  945  446  508  615  814  597  730  577  133   751 #>  [580,]  858  774  976  911  944  866  708    8  771   466 #>  [581,]   88  960  805  603  142  575  180  324  192   196 #>  [582,]  414  451  659  101  565  609  165  969   20   460 #>  [583,]  403  289  683  851  682   62  748  441  816   300 #>  [584,]  354   49  432  781  157  769  901  346  135   134 #>  [585,]  122  655  193  519  586  670  731  885  257   485 #>  [586,]  193   17  585  139  731  648  485  655  290   305 #>  [587,]  259  631  399  764  679  904  823  369  471   154 #>  [588,]  620  305  374  262  387  127  221  886  253   503 #>  [589,]  187  689  991  658  608  336  917  457  170   363 #>  [590,]  492  360  928  481   12  306  772  719  891   182 #>  [591,]  476  549  234  311  652  260  510  138  158   852 #>  [592,]  256  756  197  282  142  158  303   69  591   767 #>  [593,]  147  236  319   21  906  941  324   32  242   601 #>  [594,]  419  314  722  749   86  153  542  488  317   184 #>  [595,]  539  788  520  366  523  835    5  807  473   293 #>  [596,]  888  758  430  534  791  749  404  483  997   333 #>  [597,]  474  945  814  730  691  363  883  991  579   598 #>  [598,]  375  991  170  917  745  478  203  589  370   949 #>  [599,]  662  372  428  160  210  964  900  528  953   437 #>  [600,]  436   78  937  701  618  725  276  993  896   404 #>  [601,]  107  638  201  500   21  741  352  941  505   147 #>  [602,]  923  621  301  462  687  287  202   95  453     7 #>  [603,]  575  717  873  196  324  581  779    1  889   116 #>  [604,]  651  291  448  656  372  318   95  210  897   734 #>  [605,]  983    7  532  380  699  752  568  250  763   757 #>  [606,]  385  925  875  470  431  863   56  469  649   380 #>  [607,]  468  610  785  783  669  637  654  745  149   376 #>  [608,]  336  518  274  201  352  187  589  985   32   371 #>  [609,]  331  817  356  775  861  414  969   53  665   582 #>  [610,]  637  684  607  530  785  745  440  783  121   207 #>  [611,]  790    6  810   43  528  390  412  700  298   377 #>  [612,]  180  320  805  865  653  109  960  581  808    88 #>  [613,]  512  754  335  700  880  882  690   74  933   196 #>  [614,]  995  278   87  550  467  847  382  922   19   695 #>  [615,]  814  682  792  579  524  751  245   58  269   334 #>  [616,]  819  501   13    4  243  843  766  396  280   401 #>  [617,]  770  822  464  572  702  667  357  751  402   736 #>  [618,]  600  436  937  725  354  350  145  993  701   661 #>  [619,]  873  953  500  687  116  443  373  453  942   437 #>  [620,]  588  262  374  387  127  503  886  799  221   305 #>  [621,]  532  301  380  462   28  752  602  890    7   605 #>  [622,]  744  746  205  714  815  367  546  672  160   812 #>  [623,]   33  175  236  442  141  363  110  251  518   260 #>  [624,]  658  989  457  954  398  705  445  689  187   757 #>  [625,]  907  772  319  556  981  383  924  310  941   573 #>  [626,]  958  872  391  227  241  511  950   36  974   798 #>  [627,]  919  315  553  111  456  222   15  358  477   261 #>  [628,]  495  545   59  199  768  578  663  874  261   864 #>  [629,]  804   69  282  477   40  553  315  303  421   280 #>  [630,]   65  646  755  275   11  538   98  466  831   544 #>  [631,]  877  823  587  259  154  276  399  471  295   709 #>  [632,]  750  362  174  754  933  787  231   93  613   349 #>  [633,]   81  150  276  818  295   73  271  668  896   353 #>  [634,]  825  452   63  100  560  647  777  789  328   215 #>  [635,]  784  268  777  505  443  647  279  924  383   159 #>  [636,]  337  432  285  249  806  675  769  251  157   164 #>  [637,]  610  684  530  440  121  785  607  376  745   457 #>  [638,]  741  601  107  941  795  352  895   21  201   556 #>  [639,]  542  483  488  972  329  826  800  908  926   951 #>  [640,]  394  162  522  192  190  168  827  841  392   904 #>  [641,]  254  950  974  654  227  670  990  461  659   294 #>  [642,]  198  708  408  222  261  946  491  766   15   987 #>  [643,]  951  650  908  956  535  639  204  895  972   720 #>  [644,]  798  340  547  626  281  950  149  410  122   641 #>  [645,]  258  158   49  554  549  251  652  960  141   806 #>  [646,]  755  630  538   65  874   11  987  466  230   628 #>  [647,]  279  784  635  777  383  634  825  310  382    37 #>  [648,]   17  586  736  930  139  886  485  620  464   264 #>  [649,]  301  447  287  307  621  602  900   45  925   385 #>  [650,]  951  643  908  956  720  126  895  204  738   535 #>  [651,]  604  291  656  448  318  693  372  887  726   210 #>  [652,]  311  234  549  138  478  158  989  554  658    73 #>  [653,]  805  612  320   75  180  865  846  979   80   581 #>  [654,]  468  598  149  461  607  370  254  641  255   949 #>  [655,]  585  122  586  193  519  485   17  794  257   885 #>  [656,]  448  604  734  651  546  897  405  318  291    39 #>  [657,]  172  912  573  156  924  279  204  784  383   795 #>  [658,]  624  989  457  689  589  187  705  954  371   652 #>  [659,]  451  460  883  165  461  582  565  641  414   881 #>  [660,]  808  555  320  346  865  820  612  180  218   351 #>  [661,]  145  136  979  725  865  660  903   75  685   993 #>  [662,]  599  437  953  263  964  210  528  790  966   900 #>  [663,]  909  628  342  358   54  495  199  578  111   545 #>  [664,]  381  194  297  516   92   41  482  226  442   577 #>  [665,]  244  776  163  817  688  544  253  861  504   704 #>  [666,]  148  209  569  868  313  169  729  248   19   361 #>  [667,]  402  427  189  464  208  748  683  822  617   863 #>  [668,]  142   88   73  896  984  158  864  114  845   533 #>  [669,]  785  468  339  607  224  610  783  851  149   376 #>  [670,]  974  286  950  473  885  641  227  793  294   122 #>  [671,]  471  425  399    2  479  117  267  904  132   896 #>  [672,]  546  428  876  393  367   22  307  106  729   521 #>  [673,]  676  219  166  826  204   90  393  957  639   395 #>  [674,]   56   31  359  194  429  469  516  925  297   929 #>  [675,]  249  432  370  636  337  157  104  285  418   246 #>  [676,]  673  496  957  219  169  204   46   99  912   172 #>  [677,]  890  462  177  900  982  602  621  973  923   854 #>  [678,]  852  781  756  996  903  592  767  407  197   591 #>  [679,]  716  335  399  479  321   74  369  846  327   515 #>  [680,]  920  860  788   96  954  706  835  739  845   213 #>  [681,]   52  252   36  195  183   60  531  404    3   842 #>  [682,]  814   58  615  583  300  212  792  851  833   816 #>  [683,]  816  309  851  583  761  322  403  667  427   748 #>  [684,]  637  121  440  610  457  658  530  353  917   375 #>  [685,]  903  136  533  145  661  865  660  555  303   678 #>  [686,]  273   91  198   15  642  627  222  932  708   919 #>  [687,]  873  779  202  453  942  717  619  602  568   923 #>  [688,]  704  244  253  167  665  504  127   61  797   503 #>  [689,]  187  589  658  989  624  457  705  510  445   608 #>  [690,]  882  933  512  880  935  116  131  140  613    26 #>  [691,]  803  458  730  945  883  137  163  597  832   474 #>  [692,]  347  345  530  712  994  534  214  233  826   483 #>  [693,]  161  369  765  318  327  239  651  887  173   604 #>  [694,]  178  373  505   67  447  201  541  985   45   927 #>  [695,]  961  382   87   31  537  292  467  674  359   694 #>  [696,]  123  891  215  277  574  382  550  789  338   188 #>  [697,]  835  290  539  366  473    5  595  731  788    98 #>  [698,]  272  455  472  397  152  216   16  241  723   707 #>  [699,]  532  380  752  605   28  983  250  748  427   431 #>  [700,]  810  613  196   74  335  754  966  349   29   190 #>  [701,]  562  276  633  195  600  295   81  150  681    78 #>  [702,]  770  617  309  862  299  683  570  248  300   822 #>  [703,]   86  820  660  813  853  808  362  270  320   612 #>  [704,]  688  167  244  504  253  665  858  438  466   230 #>  [705,]  954  568  398  624  989  445  371  860  658   480 #>  [706,]  818  368  921  920  680  788  773  271  954   845 #>  [707,]  449  794  948  485  272  455  761  486  152   472 #>  [708,]  642  987  198  580  858  408  946  491  230   466 #>  [709,]  267  791  112  823  271  386  173  430  807   115 #>  [710,]  113  280  843  308   13  571  243  421  525   619 #>  [711,]  727  327   34  369  913  377  764  564  827   765 #>  [712,]  289  763  985  347  983  927   62    7  692   605 #>  [713,]  997  207   68   48  270  329  758  153  109   483 #>  [714,]  205  815   89  318  935  131  690  882  656   933 #>  [715,]  134  840  949  498  554  375  478  968  255    49 #>  [716,]  479  679  962   26  399  515  425  335  132   161 #>  [717,]  575  779  603  869  873  889  687  176  500    79 #>  [718,]  773  368  311  989  234  445  457  776  965   624 #>  [719,]  901  492  164  769  507  590  928   18  237   141 #>  [720,]  650  535  643  951  956  830  908  540  738   126 #>  [721,]  916   15  491   97  230  732  275  996  767   861 #>  [722,]  314  837  594   55  750   86  231  542  419   977 #>  [723,]  879  821  520  897  151   16  486   28  115   214 #>  [724,]  442  998   92  476  223   38  510  566  260   481 #>  [725,]  993  979  136  436   75  661  865  896  471   903 #>  [726,]  854  765  128  288  887  778  844  377  284   986 #>  [727,]  765  327  369  913  711  392  173  288  986   128 #>  [728,]  570  992  527  248  487  753  434  762  300   313 #>  [729,]  106  672  876  744   10  521  361  546  393   666 #>  [730,]  945  691  832  803   94  814  597  458  187   763 #>  [731,]  266  171  139  193  697  885  760  290  523   835 #>  [732,]  491  517  771  526   23  477   15  282  230   766 #>  [733,]  801  576  401  396  182  566   41   92  223   786 #>  [734,]  448  897  405  656  752  291   28  546  621    95 #>  [735,]  901   18  719  164  417  507  235  928  492   157 #>  [736,]  464  264  918  988  557  402  617  485  444   667 #>  [737,]  424  497  417  144   70  492  351   72   50   123 #>  [738,]  800  270  813   86  977  908  878  782  956   329 #>  [739,]   96   14  870   64  835  213  860  480   98   538 #>  [740,]  747  889  114  984  534  530  267  869  717   271 #>  [741,]  638  795  107  941  601  926  268   21  782   119 #>  [742,]  791  430  888  112  796  323   78  709  596   404 #>  [743,]   38   50  237   70  998  223  407  476  256   756 #>  [744,]  729  106  876  622  672  102   10  521  367   361 #>  [745,]  170  203  598  938  207  610  917  684  468   375 #>  [746,]  787  263  563   93  160  622  714   43  205   662 #>  [747,]  889  740  114  522  117    2  267  288  717   984 #>  [748,]  427  208  250  403  699  402   62  583  431   289 #>  [749,]  962  488  131  459  419  850   89  596  542   479 #>  [750,]  231  174  362  933  132  632  754  184  512   722 #>  [751,]  615  508  245  822  406  792  269  579  516   429 #>  [752,]   28  532  699  605  621    7  897  380  405   983 #>  [753,]  527  313  728  434  570  988  248  762  992   569 #>  [754,]  613  349  700  174  512  933  880  335   80    74 #>  [755,]  646   11  538  630   65  987  874   98  466    64 #>  [756,]  767  592  996  197  256  743  303  476  591   282 #>  [757,]  983  523  763  838  293  605  398  954  376   543 #>  [758,]  534  596  997   48  483  713  488  888  530   475 #>  [759,]  874  834  386  154  920  986  199  940  326   240 #>  [760,]  171   61  221  875  863  871  139  870   14   543 #>  [761,]  519  309  683  794  322  885  816  485  862   465 #>  [762,]  927  992  416  527  441  728  570  487  753   178 #>  [763,]  289   62  712  757  983  403  605  187  336    94 #>  [764,]  259  587  711  369  679  727  327  548  321   631 #>  [765,]  727  327  161  369  288  887  173  239  693   726 #>  [766,]  843    4  944  408   23  946  517  298  113   243 #>  [767,]  996  756  197  256  592  743  721   53  476   407 #>  [768,]  628  261  491  898  275  230   65  477  111   197 #>  [769,]  141  251  346  260  556  645  636  584  175   432 #>  [770,]  617  572  702  464  822  736  209  667  299   862 #>  [771,]  517  944  438  504  466   23  230  732  509    64 #>  [772,]  625  383  319  310  215  556  910  159  924    35 #>  [773,]  718  368  989  445  457  776  624  311  234   921 #>  [774,]  580  858  911  976  944  509    8  866   61   771 #>  [775,]   42  609  490  414  817  793  531  294  544   165 #>  [776,]  544  665  965  163  817  773  861  718  504   275 #>  [777,]  784  268  924  635  383  172  825  647  279   443 #>  [778,]  168  377  239  854  923  394  288  889  747   522 #>  [779,]  717  568  687   32  873  869  500  371  603   233 #>  [780,]  302  330  220   99  279  910  657  159  957    37 #>  [781,]   49  584  354  549  158  852  555  645  237   591 #>  [782,]  926  977  795  156   90  878  800  741  296   329 #>  [783,]  607  610  252  224  938  669  339  468  540   475 #>  [784,]  635  777  268  383  279  924  647  172  443   159 #>  [785,]  669  376  607  838  610  468  637  757  293   289 #>  [786,]  484  232  396  355  733  167  916  801  401   200 #>  [787,]  746  263  563   43  613  754  933  174  335   512 #>  [788,]  595  539  680  835  523  954  520  706  366   860 #>  [789,]  571  215  537  188  280  443  710  328   31   308 #>  [790,]  611    6   43  810  298  243  528  412  964   390 #>  [791,]  807  430  323  742  709  271  440  112  888   596 #>  [792,]  429  245  615  292  487  300  682  274  751   814 #>  [793,]  974  915  294  670  286  473  950    3  544   641 #>  [794,]  948  449  761  707  885  486  485  465  519   241 #>  [795,]  741  878  782  926  638  941  107  556  977   156 #>  [796,]  112  333  742  888  791  225  152  214  486   430 #>  [797,]  189  127  458  881  253   61  400  863  137   803 #>  [798,]  149  364  339  281  468  322  669  391  607   224 #>  [799,]  503  387  433  866    8  469  470  976  774   374 #>  [800,]  738  977  270  813  782  329  908  926  878    86 #>  [801,]  733  182  576  955  401   41   92  574  277   891 #>  [802,]  185  247   83  821  828  128    5  426  386   154 #>  [803,]  458  691  730  137   94  297  400  945  510   226 #>  [804,]  629  477  553   69  282  315  456  222  261   303 #>  [805,]  612  653  180  581  320  865   88  533  960   142 #>  [806,]  337  258  251  636  207  645  554   49  917   713 #>  [807,]  791  323  520  595  440  539  788  366  271   430 #>  [808,]  555  660  346  320  218  820  612  865  180   351 #>  [809,]  188  217   40  981  328  319  975  215  218   280 #>  [810,]  700  966   43  349  611  790  328  217  710    29 #>  [811,]   58  851  105  816  468  149  364  814  682   669 #>  [812,]  367  859  521  361  546  160  557  415  672   291 #>  [813,]  270  820   68  109  800   86  738  329  713   878 #>  [814,]   58  682  615  597  730  474  274  579  945   363 #>  [815,]  714  318  205   89  459  656  935  131  971   824 #>  [816,]  851  683  322  583  309  832  403  682  761   289 #>  [817,]  163  294  776  665  544  773  965  718  502   458 #>  [818,]  706  921    3  368  271  920   81  316  633   150 #>  [819,]    4  616   13  454  308  501  766  843   31   243 #>  [820,]  813  270  346  808  109   68  555  660  320   878 #>  [821,]  185  247  128  879  520  723  426    5  366   539 #>  [822,]  617  245  357  751  667  402  208  464  300   792 #>  [823,]  267  276  631  154  709  386  271  845  587   671 #>  [824,]  228  934  815  409  971  459  219  673  216   166 #>  [825,]  452  634  777  924  383  328  647  310  809   784 #>  [826,]  972  985  395  107  895  233  692  416  178   601 #>  [827,]  640  162  261  394  946  408  578  192  390   168 #>  [828,]  185  802  378   83  978  247  506  939  821    17 #>  [829,]  553  627  919  893   72  358  222  315  456   365 #>  [830,]  535  409  228  643  720  934  952  951  650   905 #>  [831,]   98  936  544  706  316  818  874  368  920   199 #>  [832,]  945  730  883  881  322  691  838  816  376   189 #>  [833,]  395  379   84  541  212  682  762  352  895   300 #>  [834,]  759  874  265  240  326   83  199  154  831   386 #>  [835,]  697  788  539  290  739   96  595  366  523   680 #>  [836,]  938  540  246  783  364  252  183  370  203   745 #>  [837,]  722   55  952  314  934  750  542  594   90   231 #>  [838,]  523  757  376  785  885  266  293  120  763   403 #>  [839,]  339  224  947  364  798  149  105  783  669   540 #>  [840,]  498  715  134  157  432  354  135  675  943    49 #>  [841,]  480  394  162  213 1000   64  640  168  967    23 #>  [842,]   60  183  195  134  353  554  258   73  207    49 #>  [843,]  766  243  113  710  408  298   13    4  946   308 #>  [844,]  415  939  726  848  397  887  723  284  291   651 #>  [845,]  114  920  271  522  392  267  904  680   59   984 #>  [846,]   74  321  399  335  653   75  132  548  679   471 #>  [847,]  922  211   24  406  751  614  108   85  359    87 #>  [848,]  982  415  890  372  291  677  559  844  973   264 #>  [849,]  452  825  144  634  853  560  124  809  310   383 #>  [850,]  749  888  962  596  419  112   78  225  317   742 #>  [851,]  816  683  583  322  403  682  309  289  811   832 #>  [852,]  135  498  591  781  549  678  476  134   49   354 #>  [853,]  981  907  625  218  924  808  809  782  975   351 #>  [854,]  213  168  778  726  986  394  940  177  462    96 #>  [855,]  552  970  304   76  529   66    9   27  146   524 #>  [856,]  355  786   97  484  733  576  401  566  396   493 #>  [857,]  551  384  902  867  521  559  470  361  359   357 #>  [858,]  580  911  774  976  866  708  944  932  466     8 #>  [859,]  546  812  361  367  448  521  557  734  672   291 #>  [860,]  954  514  480  398  705  680  870   96  177   739 #>  [861,]   53  965  504  776  898  331  275  771  163   438 #>  [862,]  309  465  761  702  892  519  299  683  485   667 #>  [863,]  431  543  875  189  171  760  137  380  400   427 #>  [864,]  420  578   59  192  495  668  342  142  533   628 #>  [865,]  180  612  320  805  136  653  903  555  533   109 #>  [866,]    8  976   30  799  774  580  433  858  469   503 #>  [867,]   25  428  307  599  876   10  521  900  662   551 #>  [868,]   19  148  666  361  551  467  209  521  569   434 #>  [869,]  371  717  779  575   32   21   79  568  500   534 #>  [870,]   14  543  509  514  398  860  739  137  502   480 #>  [871,]  760  221  290   61  739  171   14  870   11   177 #>  [872,]  958  626  241  796  413  391  742  472  333   894 #>  [873,]  687  603  942  717  116  619  779  176  196   500 #>  [874,]  199  759  834  646  936  920  628  940  831   755 #>  [875,]  385  606  863  760  431  380  462  171  925   514 #>  [876,]  106   10   25  672  729  428  102   22  307   867 #>  [877,]  631  587  823  259  154  709  399  276  471   764 #>  [878,]  795  782  556  977  741  941  926  800  638   907 #>  [879,]  723  821  520  835   28  293  595  752  697   185 #>  [880,]   80  512  132  882  196  690  116  186    1   140 #>  [881,]  883  945  832   47  797  189  458  691  460   508 #>  [882,]  690  512  880  116  933   26  613  942  176   935 #>  [883,]  945  832  881  691  460  659  597  458  730   451 #>  [884,]  513  936   54  150   42   81  831  326    3   633 #>  [885,]  838  266  286  731  322  761  670  473  948   523 #>  [886,]  470  374  387  262  973  384  433  799  559   911 #>  [887,]  284  765  128  288  726  161  173  397  939   239 #>  [888,]  596  430  742  333  758  791  404  796  225    78 #>  [889,]  747  717  740  117  114  522    2  575  603   984 #>  [890,]  677  462  621  848  875  177  982  918  532    28 #>  [891,]  574  338   77  955  306  696  360  182  277   215 #>  [892,]  862  465  702  309  283  519  761  299  281   794 #>  [893,]  919  553  629   72  315  303  804  627  477    69 #>  [894,]  413  333  888  475  783  224  596  905  404   540 #>  [895,]  972  395  826  638  951  107  352  741  985   833 #>  [896,]  353  668  993   73  984  633  671   88  276   109 #>  [897,]  752  405   28  734  345  621  448   95  202   233 #>  [898,]  275  438   53  768  861  776  771  718  230   936 #>  [899,]  269  536  332  245  148   19  209  770  617   614 #>  [900,]  287  964  298  372  677  953  602  649  528   412 #>  [901,]  719  507  584  735  164  417  237  769  157   432 #>  [902,]  857  551  384   24  444  357  211  433  359   572 #>  [903,]  136  533  865  685  993   75  678  781  805   661 #>  [904,]  522  117    2  392  190  640  114  267  845   747 #>  [905,]  228  225  894  333  971  459  824  796  152    16 #>  [906,]  147  236   32  593  967  421  525  960 1000   526 #>  [907,]  981  625  556  319  218  346  941  878  772   853 #>  [908,]  643  650  204  951  800   90  977   55  738   639 #>  [909,]  663  358  342  578  628  495  545  456  420    59 #>  [910,]   35  159  573  110  772  379  306  541  338   352 #>  [911,]  858  580  774  976  932  987  708  374  466   973 #>  [912,]  657  172  496   99  279  647  777  204  676   784 #>  [913,]  940  986  727  564  392  854  423  726   34   711 #>  [914,]  253  257   20  127   47  665  435  244  881   797 #>  [915,]  793  544   57   98  473  294  831  290  316   665 #>  [916,]  721  396   97   15  167  732  491  861   53   566 #>  [917,]  478  554  375  991  598  589  170  258  658   652 #>  [918,]  264  385  875  532   28  621  402  380  890   699 #>  [919,]  553  627  315  893  222  629  477  804  303   456 #>  [920,]  386  680  845  706  818  271  759   96  986   874 #>  [921,]  368  706  818  138   81   73    3  440  353   150 #>  [922,]  847  211   24   85  359   56  406   87  674   614 #>  [923,]  602  113  394  168  390  687  162  778  525  1000 #>  [924,]  383  777  268  319  625  784  310  172  772   795 #>  [925,]  606  385  469   56  929  400  431  558  875   863 #>  [926,]  782  156   90  977  795  741  800  878  204   268 #>  [927,]  416  178   62  762  441    7  289  712  985   405 #>  [928,]  590  492  229  360   18  182  481  719  223   235 #>  [929,]  558  226  297   71   94   45  518  482  179   925 #>  [930,]  648  736  485   17  978  707  464  862  557   586 #>  [931,]  565  474  597  363  991  510  133  442  969   260 #>  [932,]  976  858  911   91  262  580   30  866  987   774 #>  [933,]  690  882  512  880   82  613  754  296  116   140 #>  [934,]  952  228   55  824  542  535  830  837  643   459 #>  [935,]  131  690   89  882  140  459  714  542  176    39 #>  [936,]  199  831  884   54  513  898  874  818  706   275 #>  [937,]  404  600   78  842  681  183  195   52  618    60 #>  [938,]  745  836  203  183   60  207  246  783  540   475 #>  [939,]  397  844  284  887  128  726  506  185  723   765 #>  [940,]  986  913  213  392  854  423  564  168  874   759 #>  [941,]  556  741   21  638  319  795  601  147  593   107 #>  [942,]  176  873  453  687  202   39  116  233  619   779 #>  [943,]  498  490  968  840  715  143  531  135  852   165 #>  [944,]  771  517  509  774   23  438  580    8  766   504 #>  [945,]  883  579  730  832  597  691  881  803  458   814 #>  [946,]  408  390  412  298  162  394  766  843  168   827 #>  [947,]  105  339  839  224  449  283  281  669  465   212 #>  [948,]  794  486  449  761  885  707  152  224  785   391 #>  [949,]  375  990  478  968  554  598  917  715  138   457 #>  [950,]  974  227  641  670  286   36  793  254  391   473 #>  [951,]  956  643  650  908  895  972  639  483  800   738 #>  [952,]  934   55  535  837  908  228  542  643  204   830 #>  [953,]  437  210  619  453   95  287  687  202  873   900 #>  [954,]  398  860  705  624  989  445  480  757  658   788 #>  [955,]  574  891   41  801  182  277   77   31  733   194 #>  [956,]  951  650  643  475  972  895  483  908  738   126 #>  [957,]   46   84  169  676   99  220  833  536  673   395 #>  [958,]  391  626  872  227   36  252  950   52  224   974 #>  [959,]  711  693  765  727  369  377  327  651  238   726 #>  [960,]   88  581  142  575  180  324  984  158  645   906 #>  [961,]  695  467  292  694   19  487  992  505  541   447 #>  [962,]  749   89  716  131  161   26  479  173  459   318 #>  [963,]  489   19  868  467  614   99  666  148  278   899 #>  [964,]  528  412  900  298  390  372    6  946  599   377 #>  [965,]   53  861  163  776  504  510  718  773  817   458 #>  [966,]  328  810  217  953  116   82  437  700  619   349 #>  [967,]   23 1000  421  526  525  841  906  517  162   480 #>  [968,]  165  255  461  949  254  715  143  943  375   531 #>  [969,]  200  965  577  163  565  724  458  510  803   451 #>  [970,]   66   27  330  304  220  855  126  552  285   249 #>  [971,]  994  225  459   16  151  216  166  345  152   333 #>  [972,]  826  895  483  395  639  107  692  985  638   951 #>  [973,]  238  677  911  559  886  982  871  890  470   423 #>  [974,]  950  227  286  670  641  473  793  885   36   294 #>  [975,]  296  119    1  217  324  328  116  319  443   809 #>  [976,]  580  858  774  866  911   30  932    8  708   470 #>  [977,]  782  926  800   90  156  878  795  908  738   204 #>  [978,]  378  828   17  272  939  185  397  844  586   247 #>  [979,]  725   75  136  653  184  993  865  846  661   471 #>  [980,]   51  102   93   63  100  452  634   10  876   106 #>  [981,]  907  218  625  319  556  809  853  346  941   808 #>  [982,]  848  238  677  372  890  559  973  726  291   415 #>  [983,]  605  757  293  699  763    7  712  523  532   347 #>  [984,]  114   88  740  575  960  889  142    2  747   717 #>  [985,]  178  712  201  608  826  352  336  927  395   416 #>  [986,]  940  913  213  854  392  386  759  920   96   168 #>  [987,]  708  911  423   91  858  466  538  755  230   646 #>  [988,]  434  569  753  527  570  248  728  313  264   918 #>  [989,]  624  658  445  705  689  398  954  457  234   311 #>  [990,]  949  375  921  254  457  684  531  368    3   138 #>  [991,]  363  598  589  474  170  917  478  375  187   689 #>  [992,]  728  762  487  570  527  753  313  292  961   248 #>  [993,]  725  896  136  865  979  668  295  903   75   276 #>  [994,]  971  345  225  692   39  151  459   16  233   347 #>  [995,]  614  550   37  108  467  382   77  159  696   647 #>  [996,]  767  756  197  592  256  721  898   53  768   275 #>  [997,]  713  207  758  534  475  483   48  121   68   153 #>  [998,]   38  724  125  743  476  256  526  223  442    50 #>  [999,]  529   27  552   76   66  418  855  970  104   146 #> [1000,]  525  967  113  162  421  841  394   23  923   179 #>  #> $neighbor_distances #>               [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7] #>    [1,] 0.32598192 0.3517470 0.3983120 0.3988403 0.4299103 0.4523133 0.4572616 #>    [2,] 0.14772271 0.3259053 0.4415792 0.4424782 0.4461021 0.4821276 0.5026028 #>    [3,] 0.56772122 0.5864353 0.6326098 0.6856507 0.6954350 0.7472492 0.7768351 #>    [4,] 0.40405642 0.4642207 0.4931797 0.5589871 0.6006939 0.6264537 0.6579612 #>    [5,] 0.33780522 0.3520641 0.4645845 0.5369969 0.6359642 0.6458903 0.7017763 #>    [6,] 0.46799055 0.5207719 0.5321226 0.6218483 0.6523362 0.6733755 0.7184528 #>    [7,] 0.25862185 0.4570674 0.4617116 0.4686618 0.4890909 0.5059085 0.5157680 #>    [8,] 0.39222424 0.4564674 0.5120623 0.5612151 0.6067695 0.6308169 0.6340176 #>    [9,] 0.84282231 1.0042958 1.0372775 1.0957005 1.1094598 1.1284633 1.1623174 #>   [10,] 0.28660239 0.3502692 0.4575445 0.6278179 0.8589123 0.9097440 0.9100704 #>   [11,] 0.47674013 0.6761885 0.7511646 0.7621841 0.7746836 0.7762177 0.7859846 #>   [12,] 0.66802264 0.7333008 0.7647138 0.8863794 0.8958242 0.8987650 0.9262374 #>   [13,] 0.19789203 0.3916494 0.5405148 0.5584395 0.5782979 0.6018116 0.6457170 #>   [14,] 0.18838163 0.3636297 0.4439515 0.5298820 0.5307130 0.5461855 0.5535785 #>   [15,] 0.36272351 0.5236960 0.6196467 0.6253014 0.7292030 0.7394048 0.7426871 #>   [16,] 0.50921756 0.6068497 0.6422609 0.7028193 0.7795477 0.7979951 0.8310449 #>   [17,] 0.64306722 0.8723741 1.0235358 1.0872380 1.1144050 1.1241432 1.1735064 #>   [18,] 0.58741553 0.8173819 0.8766831 0.9175625 0.9600847 1.0268859 1.1398897 #>   [19,] 0.36058998 0.6417075 0.6987769 0.9320511 0.9366956 0.9455169 1.0261321 #>   [20,] 0.81493749 0.8783900 0.9590535 1.0357485 1.0792041 1.1255355 1.1414414 #>   [21,] 0.34275484 0.3475120 0.4310727 0.4427783 0.4565149 0.4942699 0.5088111 #>   [22,] 0.26633902 0.4318777 0.6535563 0.6697698 0.6745008 0.6972221 0.7125792 #>   [23,] 0.28299200 0.3057175 0.3734783 0.4824530 0.5037700 0.5118929 0.5123928 #>   [24,] 0.64981253 0.7137534 0.7800309 0.8423703 0.8638734 0.8718479 0.9858058 #>   [25,] 0.28660239 0.5296101 0.5356200 0.6580408 0.7095556 0.7747999 0.8317026 #>   [26,] 0.46582553 0.4895113 0.5439686 0.5980760 0.6058093 0.6076498 0.6245262 #>   [27,] 0.58851702 0.6163321 0.9313221 0.9626636 1.0551082 1.1676306 1.1874188 #>   [28,] 0.21760928 0.2778161 0.3999022 0.4262878 0.4704627 0.5324263 0.5690884 #>   [29,] 0.66732949 0.7427499 0.8170231 0.8247312 0.8402202 0.8817030 0.8994272 #>   [30,] 0.47016211 0.5033323 0.7129762 0.7150483 0.7208621 0.7431481 0.8026459 #>   [31,] 0.50706650 0.5099469 0.5770295 0.6165272 0.6400653 0.6669070 0.6838300 #>   [32,] 0.37929652 0.4060368 0.4174111 0.4324252 0.4942699 0.5028283 0.5112406 #>   [33,] 0.14279790 0.1962717 0.3929293 0.4126443 0.5382454 0.5441986 0.5656965 #>   [34,] 0.34224397 0.8136328 0.8614730 0.8696395 0.9392468 0.9550796 1.0518885 #>   [35,] 0.37912461 0.3862680 0.4823542 0.5142341 0.5457086 0.5510166 0.5849882 #>   [36,] 0.51021766 0.5283605 0.6536650 0.7364091 0.8554775 0.8901491 0.9577043 #>   [37,] 0.90030178 0.9196222 0.9464186 0.9477255 1.0575600 1.1266378 1.1601833 #>   [38,] 0.27239772 0.3724233 0.4396195 0.4510148 0.5291027 0.6003026 0.6756355 #>   [39,] 0.33897426 0.4286280 0.4738944 0.5689022 0.5893628 0.6095877 0.6253038 #>   [40,] 0.41899543 0.4767682 0.5827580 0.6146203 0.6198439 0.6971500 0.7099077 #>   [41,] 0.39725588 0.5541566 0.5804012 0.6192598 0.6274048 0.6462393 0.6792826 #>   [42,] 0.72637954 0.7764916 0.8220381 1.0430024 1.0553317 1.1237133 1.1620752 #>   [43,] 0.52362467 0.6062999 0.6318903 0.6432682 0.6464190 0.8079821 0.8639624 #>   [44,] 0.48842963 0.4967938 0.5159632 0.8401037 0.8981402 0.8993822 0.8998936 #>   [45,] 0.25759807 0.4162849 0.4702986 0.4972155 0.4983791 0.5380449 0.5598957 #>   [46,] 0.44593944 0.7554403 0.8576604 0.8808269 0.9029771 0.9832605 1.0238916 #>   [47,] 0.60176373 0.6900892 0.7458627 0.8747098 0.8789273 0.8856183 0.8859983 #>   [48,] 0.37763893 0.4018477 0.4982705 0.5085804 0.5150674 0.5525042 0.5786978 #>   [49,] 0.36538589 0.4545399 0.5028749 0.5624584 0.6050915 0.6237282 0.6332056 #>   [50,] 0.37960751 0.3979177 0.4396195 0.5031203 0.5443134 0.6264189 0.6862083 #>   [51,] 0.65294106 0.7006712 0.7163305 0.9782295 0.9822635 1.0339669 1.0520680 #>   [52,] 0.40133873 0.4443992 0.5102177 0.8086790 0.8656774 0.8719315 0.8932843 #>   [53,] 0.17271549 0.3793629 0.6358424 0.6488399 0.6931132 0.7681802 0.7739150 #>   [54,] 0.72175918 0.7560877 0.7838901 0.8338945 0.8655917 0.8868289 0.9618751 #>   [55,] 0.67710707 0.7459275 0.7795800 0.7913864 0.8060969 0.9793953 0.9817102 #>   [56,] 0.39582656 0.5037719 0.5361988 0.5976289 0.6843879 0.7468478 0.7578581 #>   [57,] 0.66191963 0.8445011 0.9588250 0.9630460 1.0309123 1.0773592 1.0981416 #>   [58,] 0.42190500 0.4973245 0.6307078 0.6773804 0.7283915 0.7302750 0.7418523 #>   [59,] 0.27587720 0.4844229 0.5790721 0.5964854 0.6476882 0.6598923 0.6949004 #>   [60,] 0.06835597 0.3371185 0.6155966 0.6270480 0.6312708 0.6371034 0.7290932 #>   [61,] 0.24968823 0.4300717 0.5100807 0.5307130 0.5506625 0.5961255 0.6015820 #>   [62,] 0.35240759 0.3824229 0.4000388 0.4109127 0.4439081 0.4702077 0.4834766 #>   [63,] 0.65294106 0.7087893 0.7806047 0.8317026 0.9200251 0.9227241 0.9255173 #>   [64,] 0.30256200 0.4470308 0.4894312 0.5130115 0.5186367 0.5507818 0.5527388 #>   [65,] 0.39735100 0.4664945 0.5209553 0.5387643 0.6104954 0.6569517 0.6652874 #>   [66,] 0.39804258 0.5885170 0.7238866 0.7639838 0.8322009 0.9095920 0.9826018 #>   [67,] 0.29146293 0.3897283 0.4318777 0.4349011 0.5244276 0.5370354 0.5566304 #>   [68,] 0.32410497 0.4609533 0.5251186 0.5389519 0.6262027 0.7619953 0.7688458 #>   [69,] 0.27037670 0.4754922 0.4922357 0.5287656 0.5603999 0.5631538 0.6638352 #>   [70,] 0.37960751 0.4428390 0.4510148 0.5756552 0.7030962 0.8106279 0.8169433 #>   [71,] 0.28511091 0.3408914 0.3803989 0.3890931 0.4147054 0.4208349 0.4831592 #>   [72,] 0.81903718 1.0685151 1.2969026 1.3174046 1.3473959 1.3727136 1.4303141 #>   [73,] 0.39305774 0.4012257 0.5376179 0.5413994 0.5473648 0.5623854 0.5801135 #>   [74,] 0.30372362 0.3174368 0.4289008 0.6562540 0.6715311 0.7244878 0.7383865 #>   [75,] 0.53366658 0.6585944 0.6608047 0.7299661 0.7946506 0.8450033 0.8872168 #>   [76,] 0.68102431 0.9364010 0.9841743 0.9988770 1.2041270 1.2258500 1.3201109 #>   [77,] 0.55179430 0.5571897 0.6122684 0.6541090 0.6725759 0.7530248 0.7650664 #>   [78,] 0.73606994 0.7893473 0.8324373 0.8810557 0.8900224 0.9026943 1.0333421 #>   [79,] 0.37763893 0.4349458 0.4712447 0.4828338 0.4832965 0.5216529 0.5405952 #>   [80,] 0.28415209 0.4572616 0.5067520 0.5856444 0.5940916 0.6001751 0.6176997 #>   [81,] 0.25269447 0.3747215 0.5376179 0.5783029 0.6211608 0.6599968 0.6695516 #>   [82,] 0.54198078 0.5475102 0.6006039 0.6128972 0.6527970 0.6810007 0.6919742 #>   [83,] 0.71079198 0.8043866 0.8472756 0.8762341 0.8770516 0.9281897 0.9680946 #>   [84,] 0.62092461 0.6445546 0.6509262 0.7421967 0.7554403 0.8471272 0.8671748 #>   [85,] 0.79546969 0.8257411 0.8485160 0.8496971 0.9060798 0.9406087 0.9523932 #>   [86,] 0.62294694 0.6394287 0.7182691 0.7291157 0.8301703 0.8436856 0.9178012 #>   [87,] 0.59529906 0.6333614 0.6550372 0.6669070 0.7617910 0.7727307 0.8793161 #>   [88,] 0.34566559 0.3644325 0.3824966 0.3952351 0.5507824 0.5578793 0.5985339 #>   [89,] 0.40861348 0.5824214 0.5996770 0.6350303 0.6846027 0.6996974 0.7289494 #>   [90,] 0.31737910 0.3201712 0.4559013 0.4790044 0.5040580 0.6573362 0.7421423 #>   [91,] 0.73836900 0.7423340 0.8310077 0.9232213 0.9555666 0.9589393 0.9726968 #>   [92,] 0.52515579 0.5899362 0.5946205 0.6274048 0.6356567 0.6403796 0.6420475 #>   [93,] 1.07656072 1.3350486 1.3567802 1.4678011 1.5065179 1.7212341 1.7423119 #>   [94,] 0.39865482 0.4279061 0.4806310 0.4819336 0.4874887 0.5336732 0.5437060 #>   [95,] 0.29755928 0.3098689 0.4416186 0.5195663 0.5240128 0.5756170 0.6015224 #>   [96,] 0.17442898 0.4724363 0.5146986 0.5251973 0.5275758 0.5507818 0.5646981 #>   [97,] 0.60254876 0.7010912 0.7379605 0.7886108 0.8180519 1.0015504 1.0106405 #>   [98,] 0.54634526 0.5798844 0.6157630 0.6737371 0.6761885 0.7416885 0.7508909 #>   [99,] 0.84699371 0.8808269 0.8870028 0.8960951 0.9892446 1.0670114 1.1085836 #>  [100,] 0.66464560 0.7087893 0.7521187 0.8586183 0.9782295 1.1252005 1.1521600 #>  [101,] 0.94507095 0.9917083 1.0271338 1.0642716 1.0792041 1.0845426 1.0925347 #>  [102,] 0.62781788 0.7163305 0.7357040 0.8493089 0.8711462 0.9227241 0.9695747 #>  [103,] 1.07872960 1.5046497 1.5211299 1.5451708 1.5545126 1.5867193 1.6613357 #>  [104,] 0.18695263 0.3601551 0.5258646 0.5894416 0.6977874 0.7150916 0.7227502 #>  [105,] 0.86636403 0.8719055 0.9123238 0.9305895 0.9516152 0.9522564 1.0998652 #>  [106,] 0.27178070 0.3502692 0.5356200 0.5834167 0.7113880 0.7357040 0.9018566 #>  [107,] 0.26382785 0.3217752 0.3524559 0.4406653 0.5088111 0.5719279 0.5876651 #>  [108,] 0.55179430 0.8758229 0.9184732 0.9910519 0.9966855 1.0773902 1.0776354 #>  [109,] 0.32410497 0.5086704 0.5290478 0.5870070 0.5875086 0.6723061 0.6870034 #>  [110,] 0.44192468 0.4823542 0.5233099 0.5521031 0.5656965 0.5686891 0.6506952 #>  [111,] 0.69244197 0.7528559 0.7654303 0.8621099 0.8732936 0.8968442 0.9514895 #>  [112,] 0.61613532 0.6241639 0.7424427 0.7574440 0.8975431 0.9750273 0.9930924 #>  [113,] 0.36932625 0.4011750 0.4429853 0.4604765 0.4828729 0.4978523 0.5291797 #>  [114,] 0.26873931 0.4543503 0.4557890 0.4679440 0.4976931 0.5026028 0.5313733 #>  [115,] 0.51050027 0.5921090 0.6021753 0.6397974 0.6618070 0.6769789 0.7028193 #>  [116,] 0.39884029 0.4338438 0.4769931 0.4909808 0.4957269 0.5112118 0.5141013 #>  [117,] 0.14772271 0.3132639 0.3269249 0.4102375 0.4993736 0.5073504 0.5408590 #>  [118,] 0.77759145 0.9951456 1.0756486 1.0774729 1.1177713 1.2063608 1.2068160 #>  [119,] 0.31193116 0.3547688 0.3983120 0.4364350 0.4769931 0.5036652 0.5419808 #>  [120,] 0.37005510 0.3871259 0.5587759 0.5773100 0.5947247 0.6255331 0.6449042 #>  [121,] 0.37705146 0.5138346 0.5139100 0.5252715 0.5541338 0.5668082 0.5835430 #>  [122,] 0.40965196 0.6003888 0.8927569 0.9175895 0.9672832 0.9714351 1.0484572 #>  [123,] 0.57720810 0.6077988 0.7163927 0.7542905 0.8563963 0.8893385 0.9017009 #>  [124,] 0.57020555 0.7521187 1.0352781 1.0682651 1.1456465 1.2587465 1.2695734 #>  [125,] 0.47676825 0.5443134 0.6012839 0.6122324 0.6879926 0.7115509 0.7272478 #>  [126,] 0.61224292 0.7639838 0.8348187 0.8484403 0.8865131 0.8967691 0.9056557 #>  [127,] 0.47128129 0.4742885 0.5506625 0.5576488 0.5855391 0.7084379 0.7361315 #>  [128,] 0.55902699 0.5779786 0.6259580 0.6759824 0.7406785 0.7412295 0.7706631 #>  [129,] 0.52640450 0.7872247 0.8119500 0.8691706 0.9590535 1.0056971 1.0547595 #>  [130,] 1.32460885 1.3372252 1.4753410 1.4921726 1.5647777 1.7410715 1.7702731 #>  [131,] 0.39224540 0.4086135 0.6076498 0.6388631 0.6616216 0.6782935 0.6975890 #>  [132,] 0.48358229 0.5067520 0.5331307 0.5393310 0.5477623 0.5784624 0.6617352 #>  [133,] 0.59905264 0.6009181 0.6353046 0.6514528 0.6861254 0.6981637 0.7038827 #>  [134,] 0.45453992 0.4740229 0.5669323 0.6106367 0.6221501 0.6412341 0.6657613 #>  [135,] 0.59210504 0.6041034 0.7940382 0.8103320 0.8341434 0.8354779 0.8376443 #>  [136,] 0.52054448 0.5336666 0.6198285 0.7053231 0.7141794 0.7405079 0.7609127 #>  [137,] 0.33360186 0.3361237 0.3871259 0.4628323 0.5069489 0.5241810 0.5689214 #>  [138,] 0.38927101 0.3930577 0.4042808 0.4177205 0.4701422 0.5661374 0.5721873 #>  [139,] 0.52682614 0.5787552 0.5986974 0.6351774 0.6751799 0.7010782 0.7737709 #>  [140,] 0.50103028 0.5390435 0.5686183 0.5784624 0.5889430 0.6001751 0.6495725 #>  [141,] 0.40653761 0.4252189 0.4953637 0.5226871 0.5490626 0.5771025 0.6129426 #>  [142,] 0.38249659 0.4300582 0.4803878 0.5113963 0.5693444 0.6195682 0.6604910 #>  [143,] 0.63449741 0.6775179 0.8270223 0.8645391 0.9106158 0.9164684 0.9447863 #>  [144,] 0.51138609 0.8558286 0.8893385 1.0352781 1.0409002 1.0651401 1.0818223 #>  [145,] 0.40060568 0.9769978 1.0996311 1.1243578 1.1423133 1.2060170 1.2254479 #>  [146,] 0.64455460 0.6857650 0.8719055 0.8759750 0.8826073 0.8837762 0.8979529 #>  [147,] 0.14133022 0.4427783 0.4481422 0.4515533 0.5129071 0.5210050 0.5868033 #>  [148,] 0.31256232 0.5174086 0.6927888 0.7231681 0.7670178 0.8893941 0.9320511 #>  [149,] 0.42079314 0.5249974 0.5396951 0.6883049 0.7095461 0.7897186 0.8103686 #>  [150,] 0.25269447 0.5908408 0.6206132 0.6250772 0.6326098 0.6569702 0.7249904 #>  [151,] 0.55815494 0.5773820 0.6062823 0.6265692 0.6492780 0.6954854 0.6967617 #>  [152,] 0.61904625 0.6492780 0.7160424 0.7298638 0.8401095 0.8415885 0.8908792 #>  [153,] 0.62620267 0.6320622 0.6535339 0.6723061 0.6955315 0.7127139 0.7325808 #>  [154,] 0.57781967 0.6330033 0.6672846 0.8335989 0.8949388 0.9214416 0.9268127 #>  [155,] 1.14346045 1.3087046 1.3093782 1.3639135 1.4085650 1.4257619 1.4399710 #>  [156,] 0.31737910 0.3187343 0.4564433 0.5860091 0.6232933 0.6443000 0.6696273 #>  [157,] 0.47684041 0.6096090 0.7173135 0.7342114 0.7597481 0.8649065 0.8888699 #>  [158,] 0.42783532 0.4300582 0.4631909 0.4955587 0.5308287 0.5534722 0.6068476 #>  [159,] 0.37912461 0.4214704 0.5252374 0.6655652 0.6694105 0.6915947 0.7048638 #>  [160,] 0.59452774 0.6584650 0.9193077 0.9254299 0.9310772 1.0383139 1.0483510 #>  [161,] 0.34846232 0.4755879 0.4833048 0.4908146 0.5226039 0.5821078 0.5929847 #>  [162,] 0.26041472 0.3803643 0.4294431 0.4300336 0.4978523 0.5012725 0.5264046 #>  [163,] 0.38004758 0.4867412 0.5410478 0.5431129 0.5665810 0.6053057 0.6079471 #>  [164,] 0.69337064 0.7378916 0.8151782 0.8888699 0.9053361 0.9114618 0.9593250 #>  [165,] 0.36181453 0.5870537 0.6344490 0.6603520 0.7871295 0.8400570 0.8608513 #>  [166,] 0.65550189 0.6949375 0.7014940 0.7199481 0.7239229 0.7383726 0.7574850 #>  [167,] 0.48684578 0.6358165 0.7235966 0.7486613 0.9109017 0.9310533 0.9337529 #>  [168,] 0.24773903 0.4039905 0.4258998 0.4375188 0.4688398 0.5007872 0.5012725 #>  [169,] 0.77026897 0.8576604 0.9302934 0.9669876 0.9931596 0.9971648 1.0420816 #>  [170,] 0.41121950 0.4299097 0.4923261 0.4994570 0.5338603 0.5511658 0.6654790 #>  [171,] 0.29657645 0.4868728 0.5069881 0.5166517 0.5268261 0.5450850 0.5856823 #>  [172,] 0.27776550 0.6249022 0.6457408 0.6518826 0.6696273 0.6987329 0.7091813 #>  [173,] 0.44458861 0.4755879 0.5550841 0.6021753 0.6096077 0.7501093 0.7558703 #>  [174,] 0.61071532 0.6898515 0.7161314 0.7284857 0.7518720 0.8066130 0.8074366 #>  [175,] 0.14732493 0.1962717 0.4338155 0.4953637 0.5233099 0.5705367 0.5712850 #>  [176,] 0.31895836 0.4349458 0.4738944 0.4740565 0.4854720 0.5021878 0.5130961 #>  [177,] 0.29808367 0.3167138 0.5267255 0.5336380 0.5452705 0.5536663 0.5548832 #>  [178,] 0.28720115 0.3484428 0.4024417 0.4349011 0.4412928 0.4470223 0.4819549 #>  [179,] 0.24470101 0.4702986 0.4765722 0.5037700 0.5291797 0.5378320 0.5861700 #>  [180,] 0.20007388 0.3235179 0.4134800 0.4540353 0.5086704 0.5371358 0.6313796 #>  [181,] 0.92876988 0.9859014 0.9984175 1.2811398 1.3444084 1.3683306 1.3792131 #>  [182,] 0.42936132 0.5520683 0.5907279 0.6467386 0.7035630 0.7130495 0.7163927 #>  [183,] 0.06835597 0.3834549 0.6396947 0.6402763 0.6521973 0.6598095 0.7142474 #>  [184,] 0.78066128 1.0575453 1.0655618 1.1074326 1.1173914 1.1382770 1.1542081 #>  [185,] 0.41066908 0.4734737 0.7323096 0.7376410 0.7406785 0.8487756 0.8511564 #>  [186,] 0.47124466 0.4895113 0.4982705 0.5010303 0.5130961 0.5320985 0.5325155 #>  [187,] 0.21610560 0.2367651 0.4427288 0.4641256 0.4792826 0.4874887 0.5441749 #>  [188,] 0.51150724 0.5554745 0.5787932 0.5886041 0.6198439 0.8046583 0.8133747 #>  [189,] 0.47308129 0.4824729 0.6257274 0.6521729 0.6588286 0.6592049 0.6751799 #>  [190,] 0.32692488 0.3980963 0.4343172 0.4461021 0.4623474 0.4922527 0.5957651 #>  [191,] 0.66732949 0.8588624 0.9108899 1.0408351 1.0693896 1.1057367 1.1557583 #>  [192,] 0.42544861 0.5353137 0.5691576 0.5718892 0.5957651 0.5974988 0.6030620 #>  [193,] 0.63858932 0.6464408 0.7627649 0.8257721 0.8446432 0.8723741 0.9450504 #>  [194,] 0.32686186 0.3972559 0.3980801 0.4208349 0.4232408 0.4960613 0.5535276 #>  [195,] 0.55700088 0.6270480 0.6396947 0.7242864 0.7628844 0.7916990 0.8473770 #>  [196,] 0.41402644 0.4623474 0.5032931 0.5118320 0.5408590 0.5807167 0.5940916 #>  [197,] 0.43987683 0.5205178 0.5224489 0.5852782 0.6680371 0.6893787 0.7041496 #>  [198,] 0.21628876 0.4861247 0.5319275 0.5321671 0.6488672 0.7288937 0.7394048 #>  [199,] 0.44205011 0.5472946 0.5998515 0.6439092 0.6949004 0.7251351 0.7556735 #>  [200,] 0.68096444 0.7229654 0.7305429 0.7436472 0.7564088 0.7696355 0.8753282 #>  [201,] 0.36824820 0.4251266 0.4324252 0.4376735 0.4412538 0.4747394 0.4831927 #>  [202,] 0.11325351 0.3098689 0.3783761 0.4282394 0.4960587 0.5068216 0.5178829 #>  [203,] 0.44904092 0.4994570 0.5419641 0.5935340 0.6858326 0.7065369 0.7150916 #>  [204,] 0.45590127 0.5865520 0.6232933 0.6893433 0.7023126 0.7459275 0.8449605 #>  [205,] 0.51251177 0.7445109 0.7538046 0.8546175 0.9033337 0.9332846 0.9382224 #>  [206,] 0.33162417 0.6527104 0.6981637 0.7181652 0.7530248 0.8231171 0.8313864 #>  [207,] 0.32826211 0.4715368 0.5139100 0.5712133 0.6207593 0.6825043 0.6832309 #>  [208,] 0.26423318 0.2859779 0.3103154 0.4242439 0.4834766 0.5730866 0.5980282 #>  [209,] 0.31256232 0.5267520 0.5330623 0.6763978 0.8033484 0.8300433 0.8341672 #>  [210,] 0.41587867 0.4416186 0.5446931 0.6101217 0.6103322 0.6279916 0.6577660 #>  [211,] 0.57339624 0.6498125 0.6600410 1.2153990 1.2409322 1.2762425 1.3071461 #>  [212,] 0.62714176 0.6932963 0.7129156 0.7762662 0.8471272 0.8753385 0.8759750 #>  [213,] 0.39278080 0.4258998 0.4606733 0.4724363 0.4915610 0.5613314 0.5678430 #>  [214,] 0.48368451 0.5458797 0.5502703 0.6062823 0.6065024 0.6229592 0.6452091 #>  [215,] 0.48186433 0.5715810 0.5787932 0.6033591 0.6728272 0.6928941 0.7017235 #>  [216,] 0.79124229 0.8242560 0.8439542 0.8538699 0.8701064 0.8945305 0.8954027 #>  [217,] 0.38305619 0.4281580 0.4523133 0.5464768 0.6071129 0.6410367 0.6503179 #>  [218,] 0.39335353 0.5718571 0.5952205 0.6260684 0.6284988 0.7457071 0.7670961 #>  [219,] 0.66295302 0.7445109 0.8868162 0.8999739 0.9124658 0.9296668 1.0543031 #>  [220,] 0.66030191 0.8671748 0.8784594 0.8826073 0.9152098 0.9329139 0.9832605 #>  [221,] 0.24968823 0.4342078 0.4742885 0.5931120 0.5967708 0.6109130 0.6403009 #>  [222,] 0.41067548 0.4861247 0.5997069 0.6121950 0.6728004 0.6782660 0.6883640 #>  [223,] 0.37242334 0.4428390 0.4983137 0.6182252 0.6264189 0.6596286 0.7075028 #>  [224,] 0.37424618 0.6998807 0.7508261 0.9364368 0.9567939 0.9666819 0.9880972 #>  [225,] 0.48699550 0.5092176 0.6032008 0.6112506 0.6683383 0.7991218 0.8259202 #>  [226,] 0.22933684 0.2541160 0.3408914 0.3603529 0.3606621 0.4103019 0.4279061 #>  [227,] 0.36685370 0.3941877 0.6103213 0.6652800 0.7364091 0.7844638 0.7861898 #>  [228,] 0.62061342 0.7086017 0.9591465 1.0044910 1.0321494 1.0458583 1.0826169 #>  [229,] 0.61226843 0.6527104 0.7660171 0.8260823 0.8315630 0.8636953 0.8758229 #>  [230,] 0.15030489 0.3227035 0.4311378 0.5209553 0.5342721 0.5400906 0.5858607 #>  [231,] 0.54820411 0.6898515 0.8432010 0.8476020 0.8726598 0.9015805 0.9961271 #>  [232,] 0.56312352 0.7229654 0.7495838 0.7817954 0.8035070 0.8339870 0.9060798 #>  [233,] 0.33897426 0.4854720 0.4914041 0.4960587 0.5452859 0.5544002 0.5547912 #>  [234,] 0.07132547 0.2075466 0.4644055 0.4701422 0.4884485 0.5308287 0.5735980 #>  [235,] 0.58741553 0.8315630 0.9547777 0.9688383 1.0759753 1.0957005 1.1478599 #>  [236,] 0.38541516 0.3929293 0.4332254 0.4338155 0.4473776 0.4481422 0.4737448 #>  [237,] 0.39791775 0.4541796 0.5642034 0.6003026 0.7030962 0.7666463 0.8313680 #>  [238,] 0.62576690 0.6507029 0.7325876 0.9326724 0.9524719 0.9660905 0.9841905 #>  [239,] 0.29789921 0.3484623 0.5497434 0.5550841 0.6058093 0.6126398 0.6239321 #>  [240,] 0.69731505 0.8542169 0.8949388 0.9759280 1.0468300 1.1380680 1.1725916 #>  [241,] 0.49550314 1.0933728 1.1092112 1.1273791 1.1616698 1.2027252 1.2364814 #>  [242,] 0.34647644 0.4251266 0.4737448 0.4840733 0.4972155 0.5416739 0.5592224 #>  [243,] 0.43673303 0.4770336 0.5334615 0.6006939 0.6200198 0.6234643 0.6603943 #>  [244,] 0.34023766 0.4541827 0.4934460 0.5094559 0.6079898 0.6895664 0.6967741 #>  [245,] 0.36060219 0.5660918 0.5712044 0.6190197 0.6271702 0.6377146 0.6436401 #>  [246,] 0.36015511 0.3644425 0.6944870 0.7117850 0.7183294 0.7424644 0.8306284 #>  [247,] 0.36909380 0.4734737 0.5369969 0.5452334 0.8001850 0.9234541 0.9477127 #>  [248,] 0.35668214 0.4328247 0.5267520 0.5533137 0.5758673 0.6587651 0.6903848 #>  [249,] 0.37200292 0.4752661 0.5868652 0.5894416 0.6342963 0.6608485 0.7589584 #>  [250,] 0.27184051 0.2859779 0.3465163 0.3824229 0.4353087 0.4374621 0.4590230 #>  [251,] 0.40653761 0.4544195 0.5738802 0.5853618 0.6018173 0.6029533 0.6133457 #>  [252,] 0.40133873 0.5283605 0.6303409 0.7231242 0.7940408 0.8170341 0.8737754 #>  [253,] 0.47128129 0.4934460 0.5471460 0.6324457 0.7091207 0.7470907 0.7981082 #>  [254,] 0.54298412 0.6344974 0.6561961 0.6579412 0.6601682 0.6603520 0.6968947 #>  [255,] 0.51596324 0.5677328 0.5862836 0.6027891 0.7584904 0.8131396 0.8400570 #>  [256,] 0.40353296 0.4402996 0.5402961 0.6379144 0.6500177 0.6638352 0.6680371 #>  [257,] 0.60126775 0.7671970 1.0910174 1.0917530 1.1101612 1.2407562 1.2723166 #>  [258,] 0.28060718 0.3648128 0.3653859 0.5558958 0.5566050 0.5715436 0.5797815 #>  [259,] 0.44501988 0.6850767 0.8335989 0.8422160 0.9627042 1.0000130 1.0416466 #>  [260,] 0.54906260 0.5744101 0.5931066 0.6266943 0.6284892 0.6757104 0.6769900 #>  [261,] 0.53216706 0.5571379 0.5903075 0.6055067 0.6233332 0.6288942 0.6335342 #>  [262,] 0.49409562 0.7071099 0.7164088 0.7446708 0.7537775 0.7615917 0.7848660 #>  [263,] 0.56775129 0.6464190 0.7476130 0.8731351 0.9056541 0.9457059 0.9853541 #>  [264,] 0.19540212 0.6267527 0.7162786 0.7389621 0.7723067 0.7726763 0.7923699 #>  [265,] 0.66191963 0.6924002 0.7107920 1.0698195 1.1324855 1.1380680 1.1598146 #>  [266,] 0.31773468 0.5069881 0.6128070 0.6158653 0.6285809 0.6351774 0.7193439 #>  [267,] 0.49819978 0.5187856 0.5382699 0.5766209 0.5913674 0.5932713 0.5939121 #>  [268,] 0.37940826 0.4363144 0.4475071 0.5230733 0.5587013 0.5646338 0.5780436 #>  [269,] 0.69500501 0.7233039 0.7278041 0.7977026 0.7997141 0.8243990 0.9716060 #>  [270,] 0.18433339 0.4609533 0.5495781 0.5650019 0.5840718 0.5870070 0.5997947 #>  [271,] 0.49819978 0.5478648 0.5991654 0.6025885 0.6458689 0.6494588 0.6696104 #>  [272,] 0.60403154 0.8748786 0.9931236 1.0316261 1.0634468 1.1212463 1.1462342 #>  [273,] 0.83100771 0.8892374 0.8922623 0.9570991 1.0051895 1.0496217 1.0506564 #>  [274,] 0.32946725 0.3426315 0.4076913 0.5062079 0.5247823 0.5416739 0.5633715 #>  [275,] 0.39735100 0.4225234 0.5823519 0.5858607 0.5997829 0.6747781 0.6843956 #>  [276,] 0.41532072 0.6426177 0.6735193 0.8577266 0.9034791 0.9284122 0.9382072 #>  [277,] 0.60779876 0.6416269 0.6445477 0.6541176 0.6871569 0.7253465 0.8046583 #>  [278,] 0.60022056 0.7909097 0.8002504 0.8793161 0.9255173 0.9706227 0.9949494 #>  [279,] 0.43420657 0.4698964 0.5744500 0.5985609 0.6655652 0.7018831 0.7065814 #>  [280,] 0.39164937 0.4189954 0.4676806 0.4941619 0.5554745 0.6047202 0.6122324 #>  [281,] 0.63313059 0.8374622 0.9068302 1.0229235 1.0394214 1.0601062 1.0659662 #>  [282,] 0.26865679 0.2703767 0.5199935 0.5369755 0.5402961 0.5736754 0.6102832 #>  [283,] 0.95858570 1.0830766 1.2319824 1.2365635 1.2951740 1.2952838 1.3093782 #>  [284,] 0.18386282 0.5590270 0.6746104 0.7282894 0.7737247 0.7915410 0.8153690 #>  [285,] 0.37200292 0.5258646 0.5786138 0.5845786 0.6122429 0.6194325 0.7238866 #>  [286,] 0.28591091 0.4484353 0.5758287 0.6059288 0.6103213 0.6884948 0.7013371 #>  [287,] 0.41808991 0.5016669 0.5054613 0.6182067 0.6224790 0.6264537 0.6277338 #>  [288,] 0.29789921 0.4445886 0.4908146 0.5105003 0.5387817 0.5718749 0.6099010 #>  [289,] 0.26325674 0.3524076 0.3559512 0.3655044 0.4421957 0.4741708 0.5083474 #>  [290,] 0.44751180 0.5480448 0.5798844 0.6785474 0.6920280 0.7799816 0.7962362 #>  [291,] 0.41506617 0.4668731 0.4999502 0.5258536 0.6758989 0.7152171 0.7330891 #>  [292,] 0.30531850 0.5381090 0.5648752 0.5660918 0.5797904 0.6416179 0.6470441 #>  [293,] 0.38635861 0.4901231 0.4928923 0.4948917 0.5559103 0.5813702 0.6005053 #>  [294,] 0.41864440 0.5665810 0.6904734 0.7173443 0.7319281 0.7409018 0.7776149 #>  [295,] 0.41532072 0.6989748 0.7922869 0.8280687 0.8469895 0.9656487 0.9843356 #>  [296,] 0.28567511 0.3547688 0.4299103 0.5960039 0.6128972 0.6370624 0.6694553 #>  [297,] 0.22933684 0.3580262 0.3663064 0.3827375 0.4147054 0.4232408 0.4455629 #>  [298,] 0.43673303 0.4651977 0.4705903 0.4712141 0.4761688 0.5035357 0.5301457 #>  [299,] 0.64878000 0.7364683 0.8633104 0.8680433 0.8897434 0.9342975 1.0127492 #>  [300,] 0.37351513 0.4474791 0.5540647 0.5712044 0.5718871 0.6052438 0.6080981 #>  [301,] 0.33163462 0.3844579 0.4583786 0.4849102 0.5195663 0.5265330 0.5576925 #>  [302,] 0.59391082 0.8758984 0.9003018 1.0793699 1.1993726 1.2638421 1.2645727 #>  [303,] 0.49596385 0.5199935 0.5203474 0.5224489 0.5631538 0.7015644 0.7269744 #>  [304,] 0.81127948 0.8427809 0.8971830 0.9095920 0.9205455 0.9616453 0.9629760 #>  [305,] 0.68615467 0.7621841 0.8688856 0.8811358 0.9343341 1.0532246 1.0752022 #>  [306,] 0.40768559 0.4419247 0.4698283 0.5233243 0.5779651 0.6055924 0.6449725 #>  [307,] 0.38670534 0.5589710 0.5864755 0.6351454 0.6535563 0.6788266 0.6831843 #>  [308,] 0.19789203 0.4676806 0.5399629 0.5524862 0.6054818 0.6112289 0.6134404 #>  [309,] 0.40504324 0.5918209 0.6083832 0.6097298 0.6999184 0.7041330 0.7364683 #>  [310,] 0.27600512 0.4342066 0.5367370 0.5924552 0.6171621 0.6680226 0.7774347 #>  [311,] 0.07132547 0.1802522 0.4042808 0.4598812 0.4718671 0.5473648 0.5502673 #>  [312,] 0.69884332 0.7383808 0.8702970 1.1327244 1.1397861 1.1692959 1.2375196 #>  [313,] 0.42791493 0.4773642 0.6130195 0.6223924 0.6949748 0.6989032 0.7178039 #>  [314,] 0.78655479 0.8851034 1.1068370 1.1141341 1.1173914 1.1265020 1.2483791 #>  [315,] 0.40955399 0.4171951 0.4484908 0.4994180 0.5203474 0.5408364 0.5819964 #>  [316,] 0.62804135 0.6616229 0.7384322 0.7472492 0.8019991 0.8228684 0.8408728 #>  [317,] 1.10683699 1.2076360 1.2079282 1.3998610 1.4022481 1.5033001 1.5756963 #>  [318,] 0.58242137 0.6215111 0.6652602 0.6662070 0.6831915 0.7141244 0.7170650 #>  [319,] 0.44074794 0.4777097 0.5069040 0.5081992 0.5198749 0.5316174 0.5567107 #>  [320,] 0.24980537 0.3235179 0.4799232 0.4938043 0.5381337 0.5867560 0.6738817 #>  [321,] 0.30372362 0.4604179 0.5440237 0.5899427 0.6558086 0.7284857 0.8437631 #>  [322,] 0.47053726 0.5595107 0.6035621 0.6721422 0.7172802 0.7280122 0.7350353 #>  [323,] 0.52898643 0.5890639 0.7473518 0.8078973 0.8283306 0.8554775 0.8580004 #>  [324,] 0.34751199 0.3517470 0.4364278 0.4590410 0.4932762 0.5036652 0.5549712 #>  [325,] 0.48842963 0.6629737 0.8385625 0.8978932 0.9510402 1.0357138 1.0402117 #>  [326,] 0.72513510 0.7909047 0.8362839 0.8708417 0.8733496 0.9418483 0.9755770 #>  [327,] 0.21983106 0.4708862 0.5403826 0.5821078 0.6239321 0.6841080 0.7017563 #>  [328,] 0.37918199 0.3830562 0.5563920 0.5978801 0.6508135 0.6534669 0.6636123 #>  [329,] 0.40184770 0.4828338 0.5390435 0.5738459 0.5989031 0.6392396 0.6435460 #>  [330,] 0.66030191 0.7188937 0.7753187 0.8758984 0.9394186 0.9430325 0.9826018 #>  [331,] 0.56393277 0.5804967 0.6811795 0.7814949 0.8822451 0.9641457 0.9746942 #>  [332,] 0.82439902 1.0427598 1.1094598 1.1450703 1.1883550 1.2314210 1.3088589 #>  [333,] 0.61125056 0.6791240 0.6976860 0.7298638 0.7694042 0.7751308 0.8681628 #>  [334,] 0.54732013 0.5491897 0.6009181 0.6220493 0.6307078 0.7181652 0.7212012 #>  [335,] 0.42890083 0.4873775 0.4930425 0.5194916 0.5440237 0.6726341 0.6763179 #>  [336,] 0.10810706 0.3294673 0.3593134 0.4427288 0.4871285 0.4893573 0.4978260 #>  [337,] 0.25554467 0.4697919 0.5157164 0.5786138 0.6342963 0.6977874 0.7274763 #>  [338,] 0.40768559 0.5045397 0.5252374 0.5424044 0.5510166 0.6072745 0.6400653 #>  [339,] 0.37424618 0.5358929 0.6992714 0.7775920 0.7897186 0.8310089 0.8320638 #>  [340,] 0.61067548 0.9287699 1.0595420 1.1747648 1.2706467 1.4426239 1.4912409 #>  [341,] 1.14346045 1.3122097 1.4672224 1.5237292 1.5838112 1.6915524 1.7849743 #>  [342,] 0.64428877 0.7309024 0.7890501 0.7893484 0.7922869 0.8149134 0.8630630 #>  [343,] 1.48377601 1.7592300 1.7654445 1.7690870 1.8097449 1.8252022 1.8458329 #>  [344,] 0.66297366 0.7383808 0.8998936 1.0120345 1.1570144 1.1594638 1.2400079 #>  [345,] 0.34298912 0.4836845 0.4849024 0.4955943 0.5452859 0.5773820 0.5921090 #>  [346,] 0.45729426 0.4860984 0.6253287 0.6284988 0.6429512 0.6430842 0.6833282 #>  [347,] 0.34298912 0.3708523 0.4412802 0.4948917 0.5384694 0.5458797 0.5547049 #>  [348,] 1.07517519 1.1103321 1.4139938 1.4293626 1.4705411 1.4828461 1.4891489 #>  [349,] 0.59788008 0.6096323 0.6226411 0.6542160 0.7329587 0.7377619 0.8247312 #>  [350,] 0.79014238 0.8369747 0.8456920 0.8906760 0.9219119 0.9649313 1.0450662 #>  [351,] 0.59522050 0.7812579 0.8179655 0.8478010 0.8675830 0.8816706 0.8863166 #>  [352,] 0.38101236 0.4376735 0.4576367 0.4588303 0.4893573 0.5027846 0.5062079 #>  [353,] 0.40122575 0.4324122 0.5252715 0.6009259 0.6119041 0.6155966 0.6168993 #>  [354,] 0.47980952 0.5624584 0.6221501 0.6698357 0.7819192 0.8053076 0.8649065 #>  [355,] 0.70603468 0.7262984 0.7652929 0.7886108 0.8815210 0.9732450 1.0855033 #>  [356,] 0.56393277 0.9512981 0.9659486 1.0412179 1.0469568 1.0994232 1.1009957 #>  [357,] 0.62855378 0.6516452 0.6529808 0.6901665 0.6961547 0.7831046 0.8133900 #>  [358,] 0.54924772 0.6784487 0.7565201 0.7667798 0.8231362 0.8544686 0.8582530 #>  [359,] 0.39582656 0.5246606 0.6333614 0.6901665 0.7236910 0.7560151 0.7966898 #>  [360,] 0.39468371 0.4648933 0.5233243 0.6198275 0.6426323 0.6649136 0.7010565 #>  [361,] 0.28080873 0.7384373 0.7607239 0.8336808 0.8524056 0.8684984 0.8956578 #>  [362,] 0.73745791 0.7518720 0.9013195 0.9325857 1.0677905 1.0805214 1.1259808 #>  [363,] 0.28547883 0.3743093 0.5268720 0.5624790 0.5698817 0.5743378 0.5916723 #>  [364,] 0.42079314 0.6992714 0.7158574 0.7384209 0.8770209 0.8800577 0.8984235 #>  [365,] 1.17723182 1.2294219 1.2891147 1.3122449 1.3487555 1.3535295 1.4423165 #>  [366,] 0.29066074 0.3520641 0.5550580 0.5565381 0.6280158 0.6457970 0.6616229 #>  [367,] 0.57629233 0.5945277 0.6541845 0.6651434 0.6830604 0.7235138 0.7330891 #>  [368,] 0.37062338 0.4014523 0.4140471 0.4260758 0.5948627 0.6694850 0.6829906 #>  [369,] 0.21983106 0.5318942 0.5725290 0.5929847 0.6423811 0.6724229 0.7362588 #>  [370,] 0.54196414 0.6027891 0.6345191 0.6944870 0.6992218 0.7025568 0.7227502 #>  [371,] 0.31229712 0.3792965 0.3952670 0.4858211 0.5003487 0.5439844 0.5771768 #>  [372,] 0.46687307 0.5791306 0.6023961 0.6096585 0.6263592 0.6651913 0.6726772 #>  [373,] 0.29146293 0.2915630 0.3484428 0.4093672 0.4829286 0.5178829 0.5243629 #>  [374,] 0.42490957 0.4940956 0.5114482 0.5967708 0.7349732 0.7566748 0.7617204 #>  [375,] 0.29925208 0.3479089 0.3641907 0.4070197 0.4909598 0.5040433 0.5492017 #>  [376,] 0.48630156 0.5059550 0.5642136 0.5860734 0.5883870 0.6274167 0.7065329 #>  [377,] 0.41220479 0.5319977 0.5557106 0.6481920 0.6500923 0.7274146 0.7287691 #>  [378,] 1.03478986 1.1621017 1.3796182 1.5907632 1.6954035 1.7751005 1.9210602 #>  [379,] 0.38101236 0.5633715 0.5824221 0.6001391 0.6142724 0.6220493 0.6356057 #>  [380,] 0.20461029 0.3468676 0.3629335 0.3867292 0.4122452 0.4590230 0.4704627 #>  [381,] 0.13160681 0.3580262 0.3961880 0.3980801 0.5395117 0.5801199 0.6130359 #>  [382,] 0.51510270 0.5904595 0.6302457 0.6550372 0.6941056 0.7499773 0.7868847 #>  [383,] 0.27600512 0.3531587 0.4698964 0.4945265 0.5428865 0.5593018 0.5668465 #>  [384,] 0.45029741 0.7205677 0.7977577 0.8172981 0.8383167 0.8525235 0.8782009 #>  [385,] 0.20802342 0.3728671 0.4378812 0.5842139 0.6113388 0.6267527 0.6305681 #>  [386,] 0.41320860 0.5527133 0.6330033 0.6780110 0.7035416 0.7134396 0.7220120 #>  [387,] 0.42490957 0.4298158 0.4549841 0.5855391 0.5931120 0.6524538 0.6705308 #>  [388,] 0.87116970 0.9859014 1.0595420 1.0997569 1.1033574 1.1233684 1.1570144 #>  [389,] 0.91885340 1.0156061 1.0684085 1.0740636 1.0845863 1.2044645 1.2255653 #>  [390,] 0.31585466 0.3960186 0.4271864 0.5031075 0.5035357 0.5036609 0.5091355 #>  [391,] 0.52260093 0.6652800 0.9620633 0.9666819 0.9682992 0.9724920 0.9745675 #>  [392,] 0.32814242 0.3551821 0.5508472 0.6085022 0.6161706 0.6277988 0.6369826 #>  [393,] 0.26633902 0.5370354 0.6130195 0.6462292 0.6788266 0.6871805 0.7014940 #>  [394,] 0.24773903 0.2604147 0.3566746 0.3964837 0.4642234 0.4915610 0.5031075 #>  [395,] 0.43924893 0.4979413 0.5015119 0.5512825 0.5518328 0.5587282 0.6300347 #>  [396,] 0.54536128 0.6501243 0.6638446 0.7019417 0.7575305 0.7945173 0.8035070 #>  [397,] 0.56025734 0.6746104 0.7716324 0.8842722 1.0233100 1.0617262 1.0634468 #>  [398,] 0.28017664 0.3119029 0.3864559 0.3913132 0.4333146 0.4356229 0.4411569 #>  [399,] 0.30398289 0.4672579 0.5298876 0.5311228 0.5805006 0.6283162 0.6727670 #>  [400,] 0.48501545 0.4974874 0.5496388 0.5593181 0.5638666 0.5889637 0.5913809 #>  [401,] 0.57046744 0.6150201 0.7875088 0.7955110 0.8067553 0.8373999 0.8812903 #>  [402,] 0.35395183 0.4015016 0.4242439 0.4654136 0.5778202 0.6359666 0.6378798 #>  [403,] 0.26325674 0.3777474 0.3820904 0.4109127 0.4577408 0.4813252 0.4851063 #>  [404,] 0.62190592 0.7323061 0.7360699 0.7886246 0.7964711 0.8086790 0.8422891 #>  [405,] 0.37175659 0.5058062 0.5359753 0.5489797 0.5544002 0.6013146 0.6078316 #>  [406,] 0.53376539 0.6636892 0.7398775 0.7533662 0.7601344 0.7791039 0.7842142 #>  [407,] 0.61946478 0.6729317 0.7212976 0.8060212 0.8321242 0.8377669 0.8960152 #>  [408,] 0.25826556 0.4705903 0.5055763 0.5234180 0.5475548 0.5568788 0.5584022 #>  [409,] 0.96635994 1.1463526 1.1667499 1.4257619 1.5415389 1.5549375 1.5567844 #>  [410,] 0.60126775 1.0280738 1.1065361 1.1722017 1.2117035 1.3092308 1.3583008 #>  [411,] 0.62616097 0.9817432 1.0133845 1.0454647 1.0575453 1.0867420 1.1555257 #>  [412,] 0.31585466 0.3923306 0.4059077 0.4273188 0.4651977 0.4679905 0.5475548 #>  [413,] 0.57477320 0.8945211 0.9955899 1.0316448 1.0567699 1.1112360 1.1164742 #>  [414,] 0.42887677 0.9042121 0.9504574 1.0114677 1.1255355 1.1674581 1.2299539 #>  [415,] 0.57715053 0.7045748 0.8756772 0.8832673 1.0797271 1.0944476 1.0992507 #>  [416,] 0.28471573 0.3717566 0.4470223 0.4792078 0.5547912 0.5653491 0.5740717 #>  [417,] 0.63086202 0.8620936 0.9342182 0.9615449 0.9766235 0.9927628 0.9986738 #>  [418,] 0.18695263 0.3644425 0.6194325 0.6608485 0.8056514 0.8210718 0.8612679 #>  [419,] 0.52647713 0.6320622 0.7570140 0.8016582 1.0212467 1.0393438 1.0783128 #>  [420,] 0.36833268 0.4180317 0.5718892 0.5872586 0.6739721 0.6909344 0.7060039 #>  [421,] 0.42970751 0.4499253 0.5287656 0.5859139 0.5926827 0.6030620 0.6102832 #>  [422,] 0.91804569 0.9326724 1.0032521 1.0358615 1.1257663 1.1701777 1.1806677 #>  [423,] 0.60440965 0.6257669 0.7024073 0.7075003 0.7976716 0.8353871 0.8362086 #>  [424,] 0.37675406 0.8684582 1.0651401 1.2587829 1.3174046 1.5163678 1.5195212 #>  [425,] 0.27151064 0.3460897 0.4193034 0.4424782 0.4993736 0.5311228 0.5382699 #>  [426,] 0.33780522 0.3690938 0.6628282 0.7017032 0.7134237 0.7376410 0.7557610 #>  [427,] 0.17751263 0.3103154 0.3465163 0.3539518 0.4813252 0.5006982 0.5017149 #>  [428,] 0.38670534 0.5912263 0.6122451 0.6263592 0.6541845 0.6679342 0.6758989 #>  [429,] 0.33601096 0.5247823 0.5984284 0.6190197 0.6349506 0.6384278 0.6521059 #>  [430,] 0.43312535 0.5490261 0.5827297 0.5835968 0.6219059 0.6454320 0.7021294 #>  [431,] 0.28977379 0.3629335 0.3865537 0.4374621 0.4785472 0.4819336 0.5006982 #>  [432,] 0.34941758 0.4768404 0.5157164 0.6532164 0.6710761 0.7314127 0.7378916 #>  [433,] 0.44271057 0.6013732 0.6635630 0.7066846 0.7205677 0.7244826 0.7446708 #>  [434,] 0.40112227 0.4773642 0.4797942 0.5070869 0.5656140 0.6342777 0.6434362 #>  [435,] 0.74586272 0.7872247 0.8970611 0.9954657 1.0071937 1.0252281 1.0357485 #>  [436,] 0.64230967 0.8795492 1.0481168 1.1921036 1.2490496 1.3775895 1.4290652 #>  [437,] 0.39042014 0.5631462 0.6103322 0.6366983 0.6580408 0.6597490 0.6808293 #>  [438,] 0.23708678 0.3135300 0.3227035 0.4167008 0.4470308 0.4849169 0.4957078 #>  [439,] 0.67293173 0.8483578 0.8620936 1.0044164 1.0119487 1.0540256 1.0715672 #>  [440,] 0.43241220 0.4575819 0.4836905 0.5835430 0.6064070 0.6108094 0.6371034 #>  [441,] 0.44219569 0.4802765 0.4851063 0.5335665 0.5564093 0.5828802 0.5925413 #>  [442,] 0.41264430 0.4998847 0.5101209 0.5169725 0.5685996 0.5712850 0.5904390 #>  [443,] 0.43643502 0.5120709 0.5780436 0.6006039 0.6053334 0.6330906 0.6593523 #>  [444,] 0.69909034 0.8027893 0.9687596 0.9999207 1.0154202 1.0853331 1.0938364 #>  [445,] 0.31190291 0.3208546 0.4259368 0.4546919 0.4631568 0.4780828 0.5661266 #>  [446,] 0.52888498 0.7268753 0.7440275 0.8368180 0.8491331 0.8858627 0.9117381 #>  [447,] 0.44194907 0.4467690 0.4583786 0.4819549 0.5381090 0.5523870 0.5873268 #>  [448,] 0.32230215 0.4338409 0.4999502 0.5431627 0.6034438 0.6926012 0.6973915 #>  [449,] 0.57573220 0.6621335 0.6950655 0.9585857 0.9621938 1.0621307 1.0815602 #>  [450,] 1.17723182 1.4069397 1.4799892 1.4827791 1.6550609 1.6865193 1.6931708 #>  [451,] 0.35291248 0.6344490 0.6594508 0.6996228 0.7535407 0.8306011 0.8458842 #>  [452,] 0.42470676 0.5517737 0.8836121 0.9764432 1.0492042 1.0889880 1.1024636 #>  [453,] 0.11325351 0.2975593 0.4024779 0.4030059 0.4829286 0.5348381 0.5446931 #>  [454,] 0.49317968 0.6008565 0.6806029 0.7632425 0.7775915 0.7972492 0.8176162 #>  [455,] 0.87487860 0.9800873 0.9972837 1.0259300 1.0815602 1.0830766 1.2027252 #>  [456,] 0.40955399 0.5492477 0.5563140 0.5571379 0.5807756 0.5843648 0.6372314 #>  [457,] 0.30381633 0.3462447 0.4628002 0.5040433 0.5262250 0.5394879 0.5728180 #>  [458,] 0.25898889 0.3137817 0.4628323 0.4867412 0.5673847 0.6151973 0.6502168 #>  [459,] 0.52392439 0.6388035 0.6616216 0.6683383 0.7289494 0.7375750 0.7521276 #>  [460,] 0.56904142 0.6036495 0.7702500 0.8458842 0.8859220 0.9173822 0.9508591 #>  [461,] 0.49679378 0.5677328 0.5870537 0.5911246 0.6561961 0.6888331 0.8230121 #>  [462,] 0.29808367 0.4186052 0.4210457 0.4328886 0.4513629 0.4982511 0.5328064 #>  [463,] 0.33162417 0.5491897 0.6353046 0.6648141 0.6995050 0.7663171 0.7821823 #>  [464,] 0.46955677 0.6370211 0.6551635 0.6710526 0.7660615 0.8239930 0.8448344 #>  [465,] 0.59182090 0.6331306 0.7286870 0.7975186 0.9347617 0.9411803 0.9438797 #>  [466,] 0.15030489 0.2370868 0.4316153 0.4994480 0.5130115 0.5387643 0.5487188 #>  [467,] 0.36058998 0.5536061 0.7252288 0.8655815 0.9383676 0.9430406 0.9949494 #>  [468,] 0.38493947 0.5140150 0.5326249 0.5396951 0.6135819 0.6686808 0.6858326 #>  [469,] 0.45646744 0.4850154 0.5231909 0.5976289 0.6130359 0.6151818 0.6288759 #>  [470,] 0.45029741 0.5059547 0.6296697 0.7066846 0.7428693 0.7479387 0.7701452 #>  [471,] 0.25252921 0.3039829 0.4193034 0.5406276 0.6614213 0.7127463 0.7363967 #>  [472,] 0.49550314 0.7160424 0.9800873 1.0226894 1.0316261 1.0767048 1.0816121 #>  [473,] 0.28591091 0.4830963 0.5599365 0.6492755 0.6703730 0.6932618 0.7169408 #>  [474,] 0.28547883 0.4370723 0.4595133 0.5869137 0.5990526 0.6018704 0.6525518 #>  [475,] 0.61413884 0.6749544 0.7160563 0.7978791 0.7998164 0.8080397 0.8422891 #>  [476,] 0.35904538 0.5744101 0.6273655 0.6278123 0.6304688 0.6756355 0.7139775 #>  [477,] 0.26865679 0.4171951 0.4922357 0.4959639 0.5276379 0.5807756 0.5823877 #>  [478,] 0.16501743 0.2769345 0.2992521 0.4904810 0.5229159 0.5396876 0.5522619 #>  [479,] 0.34608974 0.4410916 0.4658255 0.5298876 0.5331307 0.5338410 0.5406276 #>  [480,] 0.38554880 0.4042995 0.4780828 0.4861875 0.4894312 0.5127625 0.5193765 #>  [481,] 0.39468371 0.4698283 0.5382454 0.5705367 0.5904390 0.6403796 0.6482037 #>  [482,] 0.28511091 0.4103019 0.4332254 0.4455629 0.4960613 0.5169725 0.5282458 #>  [483,] 0.50593634 0.5529870 0.6057914 0.6223437 0.6660552 0.6661958 0.6692584 #>  [484,] 0.42864593 0.7019417 0.7235966 0.7495838 0.7652929 0.9106733 0.9462022 #>  [485,] 0.70107823 0.7863705 0.7918239 0.8220713 0.9155617 0.9186893 0.9579372 #>  [486,] 0.59373549 0.6190462 0.7363223 0.7563999 0.7761963 0.8275047 0.8365153 #>  [487,] 0.30531850 0.4474791 0.4747446 0.5360528 0.5410594 0.5523870 0.5854741 #>  [488,] 0.50858043 0.5738459 0.5742833 0.5827584 0.5889430 0.6223437 0.6268567 #>  [489,] 0.50104625 1.1810520 1.2327339 1.2992023 1.3079901 1.3651069 1.4714501 #>  [490,] 0.55338276 0.8175530 0.9783625 0.9824387 0.9909174 0.9972910 1.0092811 #>  [491,] 0.33138032 0.3627235 0.4311378 0.5487188 0.5903075 0.6078482 0.6266116 #>  [492,] 0.33269145 0.5770199 0.6807674 0.7010565 0.7266364 0.8384469 0.8482481 #>  [493,] 0.96863651 0.9740740 1.0334753 1.0994232 1.1393080 1.1988056 1.2249651 #>  [494,] 0.79090967 1.2081222 1.2955643 1.2964579 1.3108391 1.3681644 1.3964974 #>  [495,] 0.27587720 0.4325950 0.5147637 0.5723191 0.6439092 0.6442888 0.8047367 #>  [496,] 0.73899936 0.8870028 0.9361266 1.0751752 1.1654802 1.1903672 1.3140679 #>  [497,] 0.51138609 0.8023476 0.8684582 0.9685853 0.9728904 0.9842382 0.9867004 #>  [498,] 0.52691384 0.5552685 0.6041034 0.6657613 0.6927335 0.7174862 0.8053076 #>  [499,] 0.64878000 0.7268753 0.7601565 0.7974766 0.7997141 0.8711697 0.8752625 #>  [500,] 0.34275484 0.4301304 0.4364278 0.4406653 0.4779193 0.4871830 0.5112406 #>  [501,] 0.53346154 0.5598033 0.6256506 0.6685253 0.7498528 0.7651714 0.7669199 #>  [502,] 0.33360186 0.3700551 0.5292135 0.5298820 0.5689651 0.6011230 0.6079471 #>  [503,] 0.34359511 0.4549841 0.6635630 0.7362149 0.7589114 0.7692232 0.8119500 #>  [504,] 0.36005416 0.4167008 0.5505817 0.5557312 0.5677685 0.5847321 0.6011990 #>  [505,] 0.30256877 0.4093672 0.4384974 0.4831927 0.4978881 0.5244276 0.5303061 #>  [506,] 1.00409118 1.0510229 1.1750297 1.2325032 1.2516321 1.2887516 1.3071040 #>  [507,] 0.45417956 0.6308620 0.6851745 0.6959181 0.8014339 0.8179655 0.8377669 #>  [508,] 0.44696453 0.5505440 0.5751930 0.6350856 0.7398775 0.7440275 0.7453045 #>  [509,] 0.36362972 0.4021772 0.4355615 0.4974874 0.5081557 0.5100807 0.5336380 #>  [510,] 0.56303312 0.5685996 0.5931066 0.6120910 0.6569146 0.6638343 0.6718095 #>  [511,] 0.88165237 1.0239423 1.0355626 1.1024620 1.1326419 1.3295829 1.3435211 #>  [512,] 0.34159824 0.4282539 0.4448357 0.4873775 0.4949163 0.5393310 0.5439686 #>  [513,] 0.10575355 0.7249904 0.7418347 0.7764916 0.8338945 0.8667003 0.9032454 #>  [514,] 0.31671382 0.4035760 0.4099315 0.4328886 0.4830901 0.4861875 0.5081557 #>  [515,] 0.70301110 0.8030343 0.8476020 1.0454647 1.1148173 1.1185448 1.1437184 #>  [516,] 0.39618796 0.4469645 0.5091969 0.5175555 0.5317193 0.5337654 0.6349506 #>  [517,] 0.28299200 0.2843194 0.3522209 0.3529657 0.5155211 0.5648905 0.5677685 #>  [518,] 0.34263146 0.3464764 0.3593134 0.3603529 0.3931054 0.4473776 0.4776697 #>  [519,] 0.40965196 0.5583101 0.7948236 0.8100492 0.8300750 0.8856183 0.8877966 #>  [520,] 0.44302145 0.5502703 0.5537194 0.5559103 0.6054178 0.6282372 0.6336693 #>  [521,] 0.28080873 0.7235138 0.8041833 0.8078665 0.8131651 0.8148445 0.8652412 #>  [522,] 0.30114394 0.3281424 0.4102375 0.4241364 0.4343172 0.4415792 0.4543503 #>  [523,] 0.33346008 0.4356772 0.4928923 0.5130487 0.5418872 0.5587759 0.5734697 #>  [524,] 0.54732013 0.5908495 0.6861254 0.6950050 0.7418523 0.7814636 0.7876864 #>  [525,] 0.24470101 0.3693262 0.3693765 0.5123928 0.5534310 0.5535051 0.5670252 #>  [526,] 0.30571754 0.3529657 0.4413339 0.5709241 0.6018116 0.6112289 0.6199965 #>  [527,] 0.32509198 0.3687452 0.3946552 0.4920927 0.5533137 0.5581092 0.5656140 #>  [528,] 0.35611582 0.4122048 0.4271864 0.4273188 0.6218483 0.6596950 0.6651913 #>  [529,] 0.68102431 0.6857650 0.7835140 0.9313221 0.9351199 1.0998652 1.1031398 #>  [530,] 0.43292668 0.4520961 0.5138346 0.5411753 0.5420291 0.5547049 0.5566400 #>  [531,] 0.55338276 0.6579412 0.6775179 0.7354050 0.8292796 0.8650919 0.9126317 #>  [532,] 0.20461029 0.2778161 0.2826793 0.2908006 0.3372656 0.3830624 0.4890909 #>  [533,] 0.56666783 0.5872586 0.6665070 0.6888805 0.7053231 0.7434076 0.7641446 #>  [534,] 0.36229301 0.4329267 0.5150674 0.5321748 0.6113200 0.6186698 0.6301363 #>  [535,] 0.77491304 0.8744663 0.9383990 0.9477052 0.9499265 0.9940802 1.0287910 #>  [536,] 0.74219666 0.8837762 0.9029771 1.0045617 1.0077660 1.0750080 1.1025014 #>  [537,] 0.39210932 0.5070665 0.5296227 0.5904595 0.6869422 0.7632425 0.7727307 #>  [538,] 0.30256200 0.4316153 0.4849169 0.5261392 0.5400906 0.5930907 0.6367020 #>  [539,] 0.29066074 0.3162022 0.4645845 0.4726605 0.4830963 0.5146240 0.5477158 #>  [540,] 0.66855986 0.7695003 0.8337193 0.8707633 0.9382099 1.0086561 1.0608060 #>  [541,] 0.43849736 0.4576367 0.5015119 0.5142341 0.5767256 0.5824221 0.6519119 #>  [542,] 0.50457991 0.6268567 0.7488311 0.7795800 0.8072540 0.8231981 0.8430141 #>  [543,] 0.33612375 0.3507782 0.3865537 0.3971305 0.4411569 0.5101772 0.5336732 #>  [544,] 0.46416202 0.6594608 0.6623434 0.6866808 0.7319281 0.7393945 0.7416885 #>  [545,] 0.58107764 0.6876180 0.8248748 0.8409638 0.8569619 0.8841618 0.9018904 #>  [546,] 0.42033894 0.5204948 0.5431627 0.5762923 0.6874766 0.6962513 0.7407002 #>  [547,] 0.61067548 0.8978932 0.9173822 0.9984175 0.9999806 1.0140865 1.0212467 #>  [548,] 0.58994270 0.6261610 0.7700655 0.8245162 0.8588624 1.0043471 1.0046155 #>  [549,] 0.38927101 0.4030879 0.4278353 0.4598812 0.4884485 0.5117624 0.5413994 #>  [550,] 0.60022056 0.6302457 0.7684297 0.8867427 0.9520253 0.9751777 1.0030740 #>  [551,] 0.65164520 0.7560151 0.8190175 0.9272870 0.9637529 0.9691710 0.9836636 #>  [552,] 0.52825225 0.7835140 0.9364010 1.0168837 1.0551082 1.0738249 1.1011975 #>  [553,] 0.41067548 0.4162307 0.4484908 0.5296654 0.6137673 0.6347378 0.6372314 #>  [554,] 0.27693451 0.2775870 0.3648128 0.4909598 0.5284993 0.5661374 0.5668082 #>  [555,] 0.31677253 0.3935611 0.4572943 0.6738817 0.7332812 0.7834541 0.7984742 #>  [556,] 0.42101667 0.4213686 0.4577341 0.5081992 0.6133457 0.6159744 0.6277956 #>  [557,] 0.69909034 0.7607239 0.8164678 0.8319784 0.8763685 0.8970888 0.9260573 #>  [558,] 0.16029717 0.2575981 0.3606621 0.3890931 0.4765722 0.4776697 0.4806310 #>  [559,] 0.77124414 0.7981151 0.8108331 0.8178480 0.8775906 0.9317724 0.9383245 #>  [560,] 0.57020555 0.6646456 0.9011433 1.0539778 1.1024636 1.2212878 1.2314568 #>  [561,] 1.60899971 1.6156316 1.6928186 1.8132231 1.8245421 1.9251306 1.9270141 #>  [562,] 0.82833061 0.8753988 0.8816524 1.0864554 1.1192746 1.1848941 1.1999111 #>  [563,] 0.52362467 0.5677513 0.8892223 0.8959263 0.9554476 1.1023061 1.1360605 #>  [564,] 0.34224397 0.6044097 0.7098139 0.7273620 0.8248748 0.9094276 0.9460823 #>  [565,] 0.54580565 0.6594508 0.6988433 0.8242714 0.8730497 0.9029741 0.9357524 #>  [566,] 0.49831365 0.6887631 0.7010912 0.7351795 0.7454486 0.8143246 0.8169433 #>  [567,] 0.52640450 0.7362149 0.8339870 0.8753282 0.9518413 0.9878849 1.0124429 #>  [568,] 0.32038080 0.3779750 0.3952670 0.4060368 0.4570674 0.4940148 0.5317333 #>  [569,] 0.53306234 0.5530227 0.6342777 0.6927888 0.6989032 0.7521043 0.7540337 #>  [570,] 0.32053765 0.3250920 0.3566821 0.3735151 0.5410594 0.5691767 0.5955845 #>  [571,] 0.35428367 0.3921093 0.5706878 0.6366983 0.6593523 0.7052743 0.7147760 #>  [572,] 0.50622952 0.6676958 1.0055105 1.1040598 1.1251745 1.2090432 1.2411206 #>  [573,] 0.51033088 0.6740253 0.7385867 0.7546406 0.7601828 0.7868955 0.7988811 #>  [574,] 0.21775879 0.5026557 0.5045397 0.5770295 0.6055924 0.6426323 0.6445477 #>  [575,] 0.27969982 0.2967039 0.4736554 0.4832965 0.4932762 0.5261591 0.5320985 #>  [576,] 0.43156015 0.4825279 0.5520683 0.7916609 0.8360272 0.8373999 0.8858657 #>  [577,] 0.51755552 0.5395117 0.5505440 0.6091409 0.7378208 0.7555439 0.7564088 #>  [578,] 0.41803167 0.4544750 0.5147637 0.5563140 0.5790721 0.6643002 0.7128131 #>  [579,] 0.44411144 0.5288850 0.5751930 0.5839803 0.6628525 0.7065698 0.7161179 #>  [580,] 0.19689703 0.2047172 0.3127817 0.3635197 0.5020668 0.5723656 0.5952593 #>  [581,] 0.34566559 0.4299254 0.4718674 0.5317624 0.5693444 0.5916132 0.6313796 #>  [582,] 0.42887677 0.6996228 0.8452065 1.0271338 1.0506486 1.0734867 1.1042783 #>  [583,] 0.37774737 0.4741708 0.5192017 0.5370185 0.5439731 0.5522679 0.5524104 #>  [584,] 0.47980952 0.6453361 0.6532164 0.6532782 0.7173135 0.7324348 0.7952592 #>  [585,] 0.60038878 0.7311290 0.7627649 0.8877966 0.9416219 1.0181797 1.0265243 #>  [586,] 0.63858932 0.6430672 0.9416219 1.0306067 1.0510050 1.1459766 1.1894357 #>  [587,] 0.44501988 0.6835922 0.7219064 0.7434008 0.8104461 0.8154472 0.8191275 #>  [588,] 0.58798681 0.6861547 0.7661853 0.7848660 1.0599522 1.0612971 1.0856684 #>  [589,] 0.21610560 0.3302383 0.4342181 0.4678746 0.4978218 0.4978260 0.5152917 #>  [590,] 0.33269145 0.4648933 0.4697883 0.7123387 0.7647138 0.7687244 0.8121211 #>  [591,] 0.35904538 0.5117624 0.5735980 0.5762352 0.5874910 0.6266943 0.6788989 #>  [592,] 0.40353296 0.4132437 0.5205178 0.6336267 0.6604910 0.6935118 0.7015644 #>  [593,] 0.14133022 0.5053711 0.5069040 0.5123790 0.5290936 0.5372010 0.5889822 #>  [594,] 0.52647713 0.8851034 0.9996947 1.0680167 1.0828065 1.0892605 1.1312381 #>  [595,] 0.31620217 0.3969222 0.4430215 0.5550580 0.5802644 0.6015355 0.6359642 #>  [596,] 0.32372432 0.4442672 0.5827297 0.6318095 0.8157033 0.8502017 0.8612136 #>  [597,] 0.45951327 0.4958097 0.5062114 0.5971414 0.6452502 0.6518227 0.6545483 #>  [598,] 0.40701973 0.4076956 0.4299097 0.5144973 0.5263867 0.5522619 0.5935340 #>  [599,] 0.38522594 0.5791306 0.6122451 0.6584650 0.6853537 0.7069726 0.7602813 #>  [600,] 0.64230967 0.8810557 1.0090000 1.0295413 1.0309665 1.1792685 1.1870056 #>  [601,] 0.26382785 0.3343136 0.3682482 0.4301304 0.4310727 0.4320317 0.5027846 #>  [602,] 0.37380274 0.4591817 0.4849102 0.4982511 0.5045291 0.5054613 0.5068216 #>  [603,] 0.29670393 0.3146907 0.3613646 0.4140264 0.4590410 0.5317624 0.5321241 #>  [604,] 0.16046296 0.4150662 0.6034438 0.6262242 0.7204938 0.7375582 0.7818183 #>  [605,] 0.25632119 0.2586219 0.3830624 0.3867292 0.3907341 0.4466850 0.4940148 #>  [606,] 0.20802342 0.3614697 0.4161742 0.6296697 0.6446231 0.6576471 0.6843879 #>  [607,] 0.38493947 0.5250911 0.5555859 0.5917099 0.6147527 0.6436531 0.6896007 #>  [608,] 0.10810706 0.3931054 0.4076913 0.4412538 0.4588303 0.4641256 0.4978218 #>  [609,] 0.58049669 0.9373923 0.9659486 0.9869130 0.9954415 1.0114677 1.0155280 #>  [610,] 0.27518087 0.5155166 0.5250911 0.5566400 0.5794765 0.5901235 0.6841113 #>  [611,] 0.41292950 0.5321226 0.6430475 0.6432682 0.7057361 0.7406159 0.7602258 #>  [612,] 0.20007388 0.2498054 0.3793401 0.4816120 0.5157096 0.5290478 0.6555780 #>  [613,] 0.42825387 0.4540112 0.4930425 0.5518886 0.6128275 0.6286801 0.7126974 #>  [614,] 0.78312104 0.9706227 0.9711359 1.0030740 1.0514952 1.1240103 1.1897277 #>  [615,] 0.48463353 0.5170116 0.5176500 0.5839803 0.5908495 0.5980531 0.6541367 #>  [616,] 0.43813674 0.5598033 0.6457170 0.6579612 0.6813518 0.6866035 0.7091077 #>  [617,] 0.37755602 0.4904797 0.6370211 0.6676958 0.7492613 0.8469485 0.9181632 #>  [618,] 1.03096652 1.0481168 1.2153451 1.3594665 1.3770542 1.4057867 1.4291849 #>  [619,] 0.45293988 0.4810909 0.4871830 0.4950392 0.4957269 0.5120709 0.5243629 #>  [620,] 0.58798681 0.7615917 0.7811024 0.8839176 0.9908167 0.9908504 1.0375747 #>  [621,] 0.33726561 0.3844579 0.4122452 0.4210457 0.4262878 0.4540717 0.4591817 #>  [622,] 1.24613077 1.3915488 1.4617485 1.5690425 1.5918963 1.5919854 1.5975734 #>  [623,] 0.14279790 0.1473249 0.3854152 0.5101209 0.5226871 0.5268720 0.5686891 #>  [624,] 0.19820706 0.2009189 0.3462447 0.3573352 0.3864559 0.4006647 0.4259368 #>  [625,] 0.35734071 0.4242121 0.4407479 0.4577341 0.4691748 0.5593018 0.5800227 #>  [626,] 0.82062579 1.0947745 1.2584261 1.5811584 1.6532791 1.6539210 1.6786648 #>  [627,] 0.49039508 0.4994180 0.6137673 0.6924420 0.7480327 0.7807221 0.8144256 #>  [628,] 0.43259500 0.5810776 0.5964854 0.5998515 0.6249160 0.6643002 0.7205465 #>  [629,] 0.39488142 0.4754922 0.5369755 0.5823877 0.5827580 0.6347378 0.7086892 #>  [630,] 0.46649451 0.5893810 0.6079718 0.7287868 0.7511646 0.8221864 0.8662826 #>  [631,] 0.54296870 0.6560863 0.6835922 0.8422160 0.9214416 0.9284122 0.9968046 #>  [632,] 1.03713415 1.0677905 1.2128084 1.3244258 1.3560963 1.3815609 1.4811854 #>  [633,] 0.37472148 0.5908408 0.6735193 0.6829760 0.6989748 0.7514147 0.7547059 #>  [634,] 0.45008114 0.5517737 0.7806047 0.8586183 0.9011433 0.9286564 0.9320269 #>  [635,] 0.16124319 0.4475071 0.4613288 0.6111821 0.6639746 0.6766170 0.7018831 #>  [636,] 0.25554467 0.3494176 0.5845786 0.5868652 0.6144737 0.6996225 0.7284786 #>  [637,] 0.27518087 0.3742943 0.4520961 0.4836905 0.6138700 0.6243891 0.6436531 #>  [638,] 0.28937340 0.3343136 0.3524559 0.4679830 0.4687367 0.5511256 0.6147576 #>  [639,] 0.50457991 0.5059363 0.5827584 0.6495124 0.6811190 0.7573969 0.7612393 #>  [640,] 0.35667460 0.3803643 0.4241364 0.4254486 0.4922527 0.5007872 0.5255960 #>  [641,] 0.54298412 0.6109478 0.6755219 0.7547133 0.7844638 0.7845732 0.8465441 #>  [642,] 0.21628876 0.4045542 0.5234180 0.6121950 0.6288942 0.6959555 0.7259406 #>  [643,] 0.36260345 0.4025186 0.5166711 0.6925662 0.7749130 0.7932500 0.8812495 #>  [644,] 2.15817772 2.2177318 2.3130299 2.3556590 2.3620538 2.4000068 2.4715971 #>  [645,] 0.28060718 0.4631909 0.5028749 0.5682768 0.6026063 0.6029533 0.6164280 #>  [646,] 0.31373305 0.5893810 0.5930907 0.6104954 0.7162629 0.7746836 0.7801462 #>  [647,] 0.59856087 0.6371654 0.6766170 0.6949465 0.8620744 0.9286564 0.9286928 #>  [648,] 1.02353580 1.1459766 1.1559994 1.1824983 1.2016316 1.3002417 1.3389120 #>  [649,] 0.33163462 0.4419491 0.5016669 0.5589710 0.6195691 0.6507116 0.6866936 #>  [650,] 0.37563556 0.4025186 0.5745117 0.6029159 0.8570320 0.8865131 0.8989440 #>  [651,] 0.16046296 0.5258536 0.6839557 0.6973915 0.7170650 0.8021631 0.8371562 #>  [652,] 0.18025225 0.2075466 0.4030879 0.4177205 0.4904810 0.4955587 0.5260412 #>  [653,] 0.40222970 0.5157096 0.5867560 0.6585944 0.6654100 0.6869574 0.7291436 #>  [654,] 0.53262493 0.6536431 0.6883049 0.6888331 0.6896007 0.7025568 0.7280370 #>  [655,] 0.73112903 1.1408810 1.2200072 1.2537026 1.3969783 1.5029112 1.5068740 #>  [656,] 0.43384086 0.6262242 0.6263869 0.6839557 0.6962513 0.7242770 0.7342522 #>  [657,] 0.27776550 0.6616304 0.7868955 0.8329247 0.8471006 0.8695410 0.8781732 #>  [658,] 0.19820706 0.2971487 0.3038163 0.3856737 0.4678746 0.4792826 0.5116955 #>  [659,] 0.35291248 0.5690414 0.6508545 0.7871295 0.8230121 0.8452065 0.9029741 #>  [660,] 0.36995341 0.3935611 0.7507680 0.7552792 0.7701471 0.7859152 0.9233642 #>  [661,] 0.40060568 0.7827637 0.9331561 0.9419860 0.9449759 1.0114517 1.0487084 #>  [662,] 0.38522594 0.6928790 0.7098024 0.7476130 0.7492070 0.7582686 0.8080386 #>  [663,] 0.63038412 0.7205465 0.7890501 0.8544686 0.8655917 0.8873137 0.9469610 #>  [664,] 0.13160681 0.3268619 0.3827375 0.5091969 0.5251558 0.5541566 0.5840380 #>  [665,] 0.45418274 0.5396572 0.6053057 0.6391774 0.6821624 0.6866808 0.7091207 #>  [666,] 0.51740861 0.6763978 0.7540337 0.8626423 0.9464797 0.9669876 1.0186377 #>  [667,] 0.40150156 0.5852330 0.6521729 0.6551635 0.6828805 0.7023513 0.7193480 #>  [668,] 0.48038775 0.5985339 0.6064619 0.6361540 0.6505630 0.6637490 0.6724294 #>  [669,] 0.47943410 0.5140150 0.5358929 0.6147527 0.6998807 0.7172292 0.7735252 #>  [670,] 0.47317880 0.5758287 0.7095641 0.7169408 0.7687485 0.7845732 0.7861898 #>  [671,] 0.25252921 0.2715106 0.4672579 0.4821276 0.5338410 0.5841534 0.5939121 #>  [672,] 0.42033894 0.5912263 0.6230110 0.6462292 0.6830604 0.6972221 0.6988360 #>  [673,] 0.65958920 0.6629530 0.6949375 0.9806617 1.0180163 1.0508642 1.0688145 #>  [674,] 0.50377186 0.5099469 0.5246606 0.5883262 0.6384278 0.6452241 0.6522026 #>  [675,] 0.47526615 0.6710761 0.6992218 0.6996225 0.7274763 0.7342114 0.7599685 #>  [676,] 0.65958920 0.7389994 0.7912641 0.8868162 0.9302934 1.0021978 1.0238916 #>  [677,] 0.38398410 0.4513629 0.5536663 0.6483428 0.6649422 0.7187024 0.7299825 #>  [678,] 0.82739193 0.9183333 0.9547181 1.0243470 1.0329691 1.0405108 1.0449244 #>  [679,] 0.46745796 0.5194916 0.5805006 0.6267791 0.6558086 0.6715311 0.6724229 #>  [680,] 0.47859985 0.4907585 0.5007313 0.5146986 0.5621323 0.5646930 0.6468621 #>  [681,] 0.44439923 0.6303409 0.6536650 0.7242864 0.9169976 0.9558154 1.0062020 #>  [682,] 0.46774497 0.4973245 0.5170116 0.5439731 0.6052438 0.6271418 0.6334929 #>  [683,] 0.32953681 0.4050432 0.4266919 0.5192017 0.6365838 0.6721422 0.6990957 #>  [684,] 0.37429425 0.3770515 0.4575819 0.5155166 0.5728180 0.5734379 0.5815343 #>  [685,] 0.75186767 1.0040786 1.0958076 1.1243578 1.1725109 1.2210436 1.2604813 #>  [686,] 0.89226234 1.0596702 1.0926346 1.1542964 1.1771164 1.2163316 1.2794922 #>  [687,] 0.30787465 0.3239317 0.3783761 0.4030059 0.4174633 0.4734461 0.4950392 #>  [688,] 0.27579771 0.3402377 0.5471460 0.6358165 0.6821624 0.6884516 0.7969458 #>  [689,] 0.23676507 0.3302383 0.3856737 0.4129547 0.4471266 0.5394879 0.5513889 #>  [690,] 0.23996226 0.4111179 0.4949163 0.5125635 0.5788490 0.6315866 0.6388631 #>  [691,] 0.30187353 0.3137817 0.4829480 0.5121332 0.5865213 0.6179146 0.6300118 #>  [692,] 0.37085234 0.4849024 0.5420291 0.5618796 0.6039992 0.6313953 0.6452091 #>  [693,] 0.48330478 0.6423811 0.6459568 0.6652602 0.6841080 0.7500191 0.8021631 #>  [694,] 0.28720115 0.2915630 0.3025688 0.3897283 0.4467690 0.5524376 0.5767256 #>  [695,] 0.42612821 0.5151027 0.5952991 0.6165272 0.6869422 0.7013066 0.7252288 #>  [696,] 0.57720810 0.6009499 0.6033591 0.6871569 0.7348949 0.7499773 0.7684297 #>  [697,] 0.39138114 0.4475118 0.5146240 0.5565381 0.5599365 0.6458903 0.6761089 #>  [698,] 0.60403154 1.0259300 1.0970680 1.1358772 1.2819288 1.3171152 1.3841136 #>  [699,] 0.28267925 0.3468676 0.3796299 0.3907341 0.3999022 0.4112081 0.4353087 #>  [700,] 0.49441876 0.5518886 0.6452298 0.6562540 0.6726341 0.6793283 0.7153629 #>  [701,] 0.87539878 0.9034791 0.9602902 1.0153111 1.0295413 1.0581064 1.1206492 #>  [702,] 0.69015890 0.7492613 0.7658068 0.8041633 0.8633104 0.8986529 0.9641381 #>  [703,] 0.84368561 0.8967743 1.0158350 1.0760929 1.1048835 1.1315568 1.1822863 #>  [704,] 0.27579771 0.4868458 0.5094559 0.7106361 0.7981082 0.8230563 0.8619050 #>  [705,] 0.35295503 0.3779750 0.3913132 0.4006647 0.4109420 0.4546919 0.4858211 #>  [706,] 0.35818221 0.4014523 0.4547670 0.5580839 0.5646930 0.5712544 0.6631057 #>  [707,] 0.57573220 0.7483529 0.8428265 0.9186893 0.9931236 0.9972837 1.0579115 #>  [708,] 0.40455424 0.4868839 0.5319275 0.5952593 0.6121280 0.6193345 0.6453156 #>  [709,] 0.59327131 0.5954509 0.6241639 0.6953393 0.7251571 0.7776061 0.7837114 #>  [710,] 0.46047650 0.4941619 0.5016257 0.5399629 0.5405148 0.5706878 0.6200198 #>  [711,] 0.76251484 0.7807817 0.8136328 0.8366432 0.8763801 0.9261900 0.9356132 #>  [712,] 0.36550436 0.4152571 0.4227024 0.4412802 0.5032973 0.5402518 0.5413057 #>  [713,] 0.32610818 0.4715368 0.5251186 0.5786978 0.5840718 0.5989031 0.6521711 #>  [714,] 0.51251177 0.5885012 0.6350303 0.6662070 0.7453461 0.7971629 0.8229042 #>  [715,] 0.47402285 0.5472441 0.6690310 0.7174862 0.7288505 0.7910865 0.7997457 #>  [716,] 0.44109163 0.4674580 0.6378419 0.6586887 0.7026820 0.7030111 0.7264606 #>  [717,] 0.27969982 0.3036631 0.3146907 0.4092908 0.4173474 0.4467285 0.4734461 #>  [718,] 0.10202214 0.4260758 0.5502673 0.5659590 0.5757261 0.5887499 0.6164750 #>  [719,] 0.65733749 0.6807674 0.6933706 0.7920230 0.8014339 0.8187051 0.8533541 #>  [720,] 0.85703197 0.8744663 0.9678328 1.0389280 1.0811526 1.1879115 1.1992055 #>  [721,] 0.47647141 0.5236960 0.6343111 0.7379605 0.7599816 0.7686824 0.8119926 #>  [722,] 0.78655479 0.9032547 0.9996947 1.0343540 1.0777865 1.1673652 1.3113100 #>  [723,] 0.54477906 0.6966494 0.7587797 0.7815585 0.8281202 0.8410214 0.8417865 #>  [724,] 0.49988467 0.5802205 0.5899362 0.6304688 0.7075028 0.7117984 0.7281389 #>  [725,] 0.47302862 0.5400993 0.7405079 0.8795492 0.8976574 0.9419860 0.9446134 #>  [726,] 0.58505760 0.6509839 0.6759824 0.7063254 0.7308688 0.7319843 0.7883427 #>  [727,] 0.46846705 0.5403826 0.5725290 0.5906675 0.7625148 0.7721833 0.7898736 #>  [728,] 0.32053765 0.3773729 0.3946552 0.4328247 0.4747446 0.4764551 0.4797942 #>  [729,] 0.58341672 0.7153931 0.7226393 0.8272824 0.9100704 0.9677743 0.9732884 #>  [730,] 0.46496946 0.4829480 0.4897944 0.5002368 0.5573295 0.5723886 0.5971414 #>  [731,] 0.31773468 0.5166517 0.5986974 0.6464408 0.7168057 0.7250555 0.7684990 #>  [732,] 0.33138032 0.5155211 0.5591362 0.5709241 0.5888506 0.5975939 0.6196467 #>  [733,] 0.31243395 0.4825279 0.5704674 0.6501243 0.7035630 0.7454486 0.7662933 #>  [734,] 0.32230215 0.5710293 0.6013146 0.6263869 0.7121399 0.7152171 0.7220236 #>  [735,] 0.87454314 0.9600847 1.0387981 1.0629756 1.2857872 1.3538848 1.4249531 #>  [736,] 0.46955677 0.7162786 0.7977081 0.7988522 0.9260573 0.9483675 0.9866804 #>  [737,] 0.37675406 0.8023476 1.0312298 1.0818223 1.3511980 1.4056281 1.4342211 #>  [738,] 0.31314566 0.5997947 0.6364608 0.6394287 0.6643890 0.7165288 0.8533605 #>  [739,] 0.17442898 0.4439515 0.5189581 0.5527388 0.5621979 0.5753808 0.5762531 #>  [740,] 0.38726654 0.4592545 0.4679440 0.4735690 0.5321748 0.5411753 0.5766209 #>  [741,] 0.28937340 0.3155356 0.3217752 0.4223105 0.4320317 0.5356025 0.5646338 #>  [742,] 0.58080560 0.5835968 0.6886343 0.7424427 0.7997915 0.8078973 0.8324373 #>  [743,] 0.27239772 0.5031203 0.5642034 0.5756552 0.6083305 0.6182252 0.6194648 #>  [744,] 0.82728239 1.0931577 1.1062024 1.2461308 1.2604351 1.3547092 1.4068240 #>  [745,] 0.41121950 0.4490409 0.5263867 0.5530264 0.5712133 0.5901235 0.6166709 #>  [746,] 0.85723854 0.9457059 1.2989808 1.3350486 1.3735890 1.3915488 1.4620748 #>  [747,] 0.20128746 0.3872665 0.4976931 0.5154850 0.5516278 0.5712908 0.5913674 #>  [748,] 0.17751263 0.2642332 0.2718405 0.3820904 0.4531888 0.4654136 0.4702077 #>  [749,] 0.57320847 0.5742833 0.6782935 0.7521276 0.7570140 0.7716088 0.8442911 #>  [750,] 0.54820411 0.6107153 0.7374579 0.9174573 1.0329767 1.0371341 1.0439640 #>  [751,] 0.59805310 0.6350856 0.6436401 0.6499898 0.6636892 0.7040478 0.7278041 #>  [752,] 0.21760928 0.2908006 0.3796299 0.4466850 0.4540717 0.4617116 0.4682926 #>  [753,] 0.36874516 0.4279149 0.4764551 0.5070869 0.5691767 0.5707280 0.5758673 #>  [754,] 0.45401125 0.6226411 0.6793283 0.7161314 0.7473884 0.7577049 0.8006715 #>  [755,] 0.31373305 0.4767401 0.5261392 0.6079718 0.7292199 0.7584440 0.7722974 #>  [756,] 0.37477258 0.4132437 0.4287249 0.4398768 0.4402996 0.7248809 0.7749939 #>  [757,] 0.31842651 0.3334601 0.4163848 0.4745334 0.4901231 0.5223578 0.5236715 #>  [758,] 0.36229301 0.4442672 0.4813045 0.5525042 0.5529870 0.6521711 0.6832017 #>  [759,] 0.47707585 0.4969039 0.5527133 0.5778197 0.6081127 0.7233242 0.7556735 #>  [760,] 0.29657645 0.4300717 0.4342078 0.4506889 0.5091548 0.5693483 0.5787552 #>  [761,] 0.55831014 0.6083832 0.6365838 0.6708649 0.7172802 0.7411871 0.7684285 #>  [762,] 0.45197258 0.4666087 0.4792078 0.4920927 0.5335665 0.5472816 0.5955845 #>  [763,] 0.35595117 0.4000388 0.4152571 0.4163848 0.4334079 0.4577408 0.5174102 #>  [764,] 0.68507671 0.7434008 0.9356132 0.9393760 1.0192357 1.0713048 1.0844003 #>  [765,] 0.46846705 0.4708862 0.5226039 0.5318942 0.5387817 0.6052615 0.6096077 #>  [766,] 0.32080113 0.4642207 0.5327615 0.5568788 0.5766229 0.5998110 0.6297910 #>  [767,] 0.24056454 0.3747726 0.6893787 0.7052047 0.7742677 0.8170803 0.8314148 #>  [768,] 0.62491605 0.6335342 0.6487144 0.6540909 0.6843956 0.7165294 0.7487106 #>  [769,] 0.42521886 0.4544195 0.6429512 0.6769900 0.6809955 0.6865315 0.7284786 #>  [770,] 0.37755602 0.5062295 0.6901589 0.8239930 0.8444645 1.0480108 1.1232104 #>  [771,] 0.28431938 0.2894534 0.3135300 0.3600542 0.4994480 0.5118929 0.5342721 #>  [772,] 0.42421206 0.4945265 0.5198749 0.5367370 0.5715810 0.6351062 0.6485181 #>  [773,] 0.10202214 0.3706234 0.5649197 0.5661266 0.5851557 0.5925579 0.6157896 #>  [774,] 0.20471716 0.3323878 0.4094045 0.4189498 0.4726923 0.5481203 0.5612151 #>  [775,] 0.72637954 0.9869130 0.9972910 1.1674581 1.2352082 1.2619942 1.2986443 #>  [776,] 0.46416202 0.5396572 0.5420440 0.5431129 0.5460264 0.5925579 0.6006176 #>  [777,] 0.36368458 0.3794083 0.4285085 0.4613288 0.5428865 0.6518826 0.6533405 #>  [778,] 0.40399046 0.5319977 0.5497434 0.5561541 0.5599972 0.5697511 0.5718749 #>  [779,] 0.30366307 0.3203808 0.3239317 0.4174111 0.4529661 0.4535496 0.4779193 #>  [780,] 0.59391082 0.7188937 0.8784594 0.8960951 1.0156989 1.0574522 1.0808663 #>  [781,] 0.63320555 0.6532782 0.6698357 0.7431044 0.7470215 0.7723690 0.8241225 #>  [782,] 0.28997577 0.3359425 0.4006353 0.4564433 0.5040580 0.5204372 0.5901067 #>  [783,] 0.59170992 0.6868528 0.7231242 0.7508261 0.7535625 0.7735252 0.7775920 #>  [784,] 0.16124319 0.3636846 0.4363144 0.5668465 0.5744500 0.5808100 0.6371654 #>  [785,] 0.47943410 0.4863016 0.5555859 0.5620397 0.5794765 0.6135819 0.6243891 #>  [786,] 0.42864593 0.5631235 0.6638446 0.7060347 0.8477498 0.9940425 1.0047146 #>  [787,] 0.85723854 0.8731351 0.9554476 0.9605511 0.9762443 0.9849855 1.1360555 #>  [788,] 0.39692224 0.4726605 0.5007313 0.5154050 0.5418872 0.5518192 0.5537194 #>  [789,] 0.35428367 0.4818643 0.5296227 0.5886041 0.6047202 0.6053334 0.7013766 #>  [790,] 0.41292950 0.5207719 0.6318903 0.6860436 0.6986630 0.7475969 0.7580055 #>  [791,] 0.42716882 0.4331254 0.5289864 0.5808056 0.5954509 0.7162224 0.7514147 #>  [792,] 0.33601096 0.3606022 0.5176500 0.5797904 0.5915078 0.6193858 0.6334929 #>  [793,] 0.72351312 0.7246626 0.7409018 0.8095136 0.8504452 0.8631186 0.9312267 #>  [794,] 0.46391937 0.6621335 0.6708649 0.7483529 0.9256326 0.9861604 1.0271834 #>  [795,] 0.31553564 0.3351997 0.4006353 0.4620162 0.4687367 0.4808516 0.6207910 #>  [796,] 0.61613532 0.6791240 0.7997915 0.8482010 0.9115970 0.9166809 0.9709494 #>  [797,] 0.47308129 0.5576488 0.5673847 0.6214205 0.6324457 0.6637824 0.6651515 #>  [798,] 0.52499741 0.7384209 0.8310089 0.9068302 0.9727610 0.9999539 1.0309450 #>  [799,] 0.34359511 0.4298158 0.4427106 0.4814989 0.6844240 0.6938672 0.7428693 #>  [800,] 0.31314566 0.4616742 0.5650019 0.5884436 0.5901067 0.6435460 0.6537555 #>  [801,] 0.31243395 0.4293613 0.4315601 0.5873547 0.6150201 0.6462393 0.7751105 #>  [802,] 0.89330431 0.9788810 1.0003826 1.1217052 1.1318544 1.1919058 1.2598893 #>  [803,] 0.25898889 0.3018735 0.5002368 0.5814759 0.6066079 0.6110617 0.6355029 #>  [804,] 0.39488142 0.5276379 0.5296654 0.5603999 0.5736754 0.5819964 0.5843648 #>  [805,] 0.37934009 0.4022297 0.4134800 0.4718674 0.4799232 0.5963458 0.6458510 #>  [806,] 0.46979191 0.5558958 0.6018173 0.6144737 0.6207593 0.6649301 0.6958189 #>  [807,] 0.42716882 0.5890639 0.6054178 0.6466419 0.6467896 0.6786679 0.6822487 #>  [808,] 0.31677253 0.3699534 0.4860984 0.5381337 0.6260684 0.6944325 0.7556196 #>  [809,] 0.51150724 0.5464768 0.6146203 0.6591283 0.6636123 0.6659722 0.6754462 #>  [810,] 0.49441876 0.5827911 0.6062999 0.6096323 0.6430475 0.6860436 0.7023953 #>  [811,] 0.74844382 0.7887564 0.8663640 0.8665657 0.8756676 0.8759358 0.9775332 #>  [812,] 0.66514338 0.6866507 0.8148445 0.8336808 0.9512969 1.0483510 1.0750038 #>  [813,] 0.18433339 0.4200201 0.5389519 0.5875086 0.5884436 0.6229469 0.6364608 #>  [814,] 0.42190500 0.4677450 0.4846335 0.5062114 0.5723886 0.6544648 0.6597964 #>  [815,] 0.58850117 0.7394000 0.7538046 0.7670848 0.7726068 0.8080108 0.9192160 #>  [816,] 0.16337551 0.3295368 0.4705373 0.5689050 0.6097298 0.6858071 0.6892257 #>  [817,] 0.38004758 0.4186444 0.5460264 0.6391774 0.6623434 0.6821262 0.6908249 #>  [818,] 0.35818221 0.4840737 0.5677212 0.5948627 0.5991654 0.6011795 0.6211608 #>  [819,] 0.40405642 0.4381367 0.5782979 0.6008565 0.6628859 0.6685253 0.6836411 #>  [820,] 0.42002011 0.5495781 0.6430842 0.6944325 0.7478311 0.7688458 0.7834541 #>  [821,] 0.41066908 0.5452334 0.5779786 0.6183221 0.6336693 0.6966494 0.7017032 #>  [822,] 0.49047970 0.6271702 0.6285538 0.6499898 0.7270702 0.7318421 0.7436833 #>  [823,] 0.62131727 0.6426177 0.6560863 0.6672846 0.6953393 0.7547130 0.7600794 #>  [824,] 0.62061342 0.9814049 1.0354977 1.1667499 1.1725226 1.1749031 1.2815108 #>  [825,] 0.42470676 0.4500811 0.6533405 0.7741024 0.7944983 0.9127628 0.9286928 #>  [826,] 0.36029640 0.5282508 0.5512825 0.5719279 0.5785546 0.6350860 0.6540926 #>  [827,] 0.52559601 0.5957662 0.6055067 0.6393000 0.6691141 0.6869860 0.7390033 #>  [828,] 1.04356944 1.1318544 1.1621017 1.2074920 1.2242915 1.2979994 1.3513730 #>  [829,] 1.20574418 1.2146118 1.2405186 1.2826549 1.2969026 1.3529362 1.3806766 #>  [830,] 0.94770523 0.9663599 1.0458583 1.1874198 1.1879115 1.1981170 1.3434716 #>  [831,] 0.54634526 0.5602186 0.6594608 0.7298254 0.7384322 0.7512439 0.7656390 #>  [832,] 0.47729077 0.4897944 0.4999069 0.5962163 0.6035621 0.6497402 0.6819016 #>  [833,] 0.49794132 0.6001391 0.6509262 0.6567943 0.6932963 0.6989156 0.7716280 #>  [834,] 0.49690391 0.6276734 0.6924002 0.6973151 0.7909047 0.8043866 0.9049760 #>  [835,] 0.39138114 0.5154050 0.5477158 0.5480448 0.5621979 0.5948780 0.6015355 #>  [836,] 0.59159238 0.6685599 0.7117850 0.9680341 1.0303407 1.0407151 1.0554769 #>  [837,] 0.90325466 1.1065179 1.1826681 1.2794249 1.2870225 1.5230662 1.5331308 #>  [838,] 0.43567724 0.4745334 0.5059550 0.5620397 0.5923089 0.6128070 0.6314845 #>  [839,] 0.96559312 1.0572814 1.0666690 1.0906388 1.1571322 1.3440167 1.4380692 #>  [840,] 0.52691384 0.5472441 0.5669323 0.6096090 0.7314127 0.7819192 0.8354779 #>  [841,] 0.38554880 0.3964837 0.4300336 0.4606733 0.4866288 0.5186367 0.5503343 #>  [842,] 0.33711848 0.3834549 0.5570009 0.6106367 0.6599610 0.7223774 0.7692001 #>  [843,] 0.32080113 0.4770336 0.4828729 0.5016257 0.5055763 0.5301457 0.5584395 #>  [844,] 0.70457485 0.7609011 0.7883427 0.8644291 0.8842722 0.8874461 0.8980552 #>  [845,] 0.45578900 0.4869808 0.5478648 0.5509206 0.6085022 0.6503164 0.6590733 #>  [846,] 0.31743679 0.4604179 0.6283162 0.6763179 0.7291436 0.7299661 0.7446167 #>  [847,] 0.42215733 0.6600410 0.7800309 0.9252060 1.1176434 1.1240103 1.1548036 #>  [848,] 0.47819086 0.5771505 0.6260961 0.7611419 0.7719791 0.7997483 0.8178480 #>  [849,] 0.88361208 1.0660215 1.0984606 1.1963492 1.1976599 1.2347803 1.2587465 #>  [850,] 0.77160875 0.9285010 0.9357227 0.9588219 1.0212467 1.0863002 1.1189031 #>  [851,] 0.16337551 0.4266919 0.5370185 0.5595107 0.6743883 0.6882590 0.6999184 #>  [852,] 0.59210504 0.6927335 0.7594024 0.7723690 0.7981879 0.8273919 0.8803942 #>  [853,] 0.67663485 0.7455076 0.8549503 0.8641086 0.9154584 0.9603773 1.0092871 #>  [854,] 0.39278080 0.4375188 0.5561541 0.5850576 0.5897240 0.6479863 0.6688277 #>  [855,] 0.52825225 0.9580693 0.9724968 0.9988770 1.1031398 1.1569421 1.1623174 #>  [856,] 0.72629842 1.1977448 1.2449350 1.3944367 1.4370307 1.4666042 1.4971022 #>  [857,] 0.81901753 0.9490470 0.9993490 1.0416610 1.1463692 1.2030164 1.3076008 #>  [858,] 0.19689703 0.3139681 0.3323878 0.3327203 0.6109003 0.6121280 0.6218027 #>  [859,] 0.52049476 0.6866507 0.7384373 0.7419742 0.7552838 0.8078665 0.8319784 #>  [860,] 0.33551271 0.4035760 0.4042995 0.4641433 0.4880021 0.4907585 0.5046857 #>  [861,] 0.17271549 0.3992005 0.5557312 0.6006176 0.6776519 0.6811795 0.7081183 #>  [862,] 0.70413297 0.7286870 0.7926848 0.8041633 0.8070346 0.8300750 0.8680433 #>  [863,] 0.28977379 0.3507782 0.4445954 0.4824729 0.4868728 0.5091548 0.5689214 #>  [864,] 0.36833268 0.4544750 0.4844229 0.5691576 0.5723191 0.6724294 0.7309024 #>  [865,] 0.45403526 0.4816120 0.4938043 0.5963458 0.6198285 0.6869574 0.7295895 #>  [866,] 0.39222424 0.4445253 0.4701621 0.4814989 0.5655121 0.5723656 0.6013732 #>  [867,] 0.70955561 0.7217498 0.7347754 0.8772173 0.9158237 0.9277648 0.9307967 #>  [868,] 0.64170753 0.7670178 0.8626423 0.9239927 0.9272870 0.9383676 0.9696702 #>  [869,] 0.31229712 0.4092908 0.4535496 0.4736554 0.5028283 0.5132941 0.5216529 #>  [870,] 0.18838163 0.3971305 0.4021772 0.4099315 0.4333146 0.5046857 0.5189581 #>  [871,] 0.56934834 0.6109130 0.6785474 0.6866588 0.7000242 0.7238920 0.7294129 #>  [872,] 0.92530096 1.0947745 1.2513286 1.2816293 1.2879963 1.2888221 1.4949413 #>  [873,] 0.30787465 0.3613646 0.3899852 0.4173474 0.4338438 0.4529399 0.4529661 #>  [874,] 0.44205011 0.4770758 0.6276734 0.7162629 0.7490507 0.7506216 0.7580258 #>  [875,] 0.37286706 0.4161742 0.4445954 0.4506889 0.4785472 0.5065083 0.5879978 #>  [876,] 0.27178070 0.4575445 0.5296101 0.6230110 0.7226393 0.8574696 0.8711462 #>  [877,] 0.54296870 1.0415895 1.0899313 1.1700214 1.2219278 1.2412529 1.3329004 #>  [878,] 0.33519972 0.5204372 0.6277956 0.6331529 0.6337846 0.6443588 0.6801637 #>  [879,] 0.54477906 0.6183221 0.6282372 0.6814360 0.6983381 0.7704118 0.8358870 #>  [880,] 0.28415209 0.3415982 0.4835823 0.4892782 0.5032931 0.5125635 0.5323816 #>  [881,] 0.52736497 0.5525252 0.5962163 0.6017637 0.6214205 0.6257274 0.6502168 #>  [882,] 0.23996226 0.4448357 0.4892782 0.5112118 0.5738338 0.6245262 0.6286801 #>  [883,] 0.39701205 0.4999069 0.5273650 0.5865213 0.6036495 0.6508545 0.6545483 #>  [884,] 0.10575355 0.7044691 0.7560877 0.7916435 0.8220381 0.9108537 0.9186660 #>  [885,] 0.59230891 0.6158653 0.7013371 0.7250555 0.7350353 0.7411871 0.7687485 #>  [886,] 0.50595469 0.5114482 0.6705308 0.7164088 0.7952872 0.8172981 0.8346311 #>  [887,] 0.18386282 0.6052615 0.6259580 0.7274152 0.7308688 0.7537246 0.7558703 #>  [888,] 0.32372432 0.5490261 0.6886343 0.6976860 0.7075729 0.7854328 0.7964711 #>  [889,] 0.20128746 0.4467285 0.4592545 0.5073504 0.5313733 0.5562496 0.5564578 #>  [890,] 0.38398410 0.4186052 0.5358940 0.6260961 0.6571463 0.6585630 0.7346542 #>  [891,] 0.21775879 0.5424044 0.5571897 0.5694820 0.5779651 0.6009499 0.6198275 #>  [892,] 0.80703460 0.9411803 1.2980996 1.3251873 1.3384776 1.3723183 1.4017407 #>  [893,] 0.61262852 0.7120569 0.7930138 0.8190372 0.8805264 0.9248670 0.9540498 #>  [894,] 0.57477320 0.7694042 0.9034055 0.9057874 1.0078337 1.0555710 1.1367827 #>  [895,] 0.41016421 0.4392489 0.5785546 0.6147576 0.6914989 0.7128548 0.7309189 #>  [896,] 0.61190406 0.6361540 0.6527648 0.7017015 0.7791979 0.7919712 0.8191598 #>  [897,] 0.46829263 0.5058062 0.5324263 0.5710293 0.6482563 0.6856865 0.6926012 #>  [898,] 0.42252337 0.6274903 0.6488399 0.6540909 0.6776519 0.7098903 0.7252236 #>  [899,] 1.03110694 1.0750080 1.1450703 1.1633723 1.2448594 1.3306354 1.3544892 #>  [900,] 0.41808991 0.4362101 0.5952216 0.6023961 0.6483428 0.6560416 0.6560632 #>  [901,] 0.65733749 0.6851745 0.7952592 0.8745431 0.9053361 0.9986738 1.0059482 #>  [902,] 0.99934899 1.1914154 1.2634446 1.4228014 1.4474304 1.5463902 1.5843895 #>  [903,] 0.52054448 0.5666678 0.7295895 0.7518677 0.9105165 0.9703127 1.0329691 #>  [904,] 0.30114394 0.3132639 0.3259053 0.3551821 0.3980963 0.5980931 0.6191404 #>  [905,] 0.95914649 1.1347822 1.1673990 1.1820520 1.2178776 1.3053914 1.3549146 #>  [906,] 0.45155332 0.5090745 0.5125321 0.5290936 0.5714454 0.5926827 0.6219361 #>  [907,] 0.27012064 0.3573407 0.4210167 0.5567107 0.5718571 0.6253287 0.6477397 #>  [908,] 0.51667107 0.5745117 0.5865520 0.6345321 0.6537555 0.6573362 0.6608121 #>  [909,] 0.63038412 0.7667798 0.9834176 1.0341095 1.0449724 1.0763714 1.1137054 #>  [910,] 0.38626799 0.4214704 0.5103309 0.5521031 0.6485181 0.7312705 0.7484098 #>  [911,] 0.31396807 0.3635197 0.4094045 0.4650143 0.6545371 0.6742323 0.7112172 #>  [912,] 0.66163037 0.7091813 0.9361266 0.9892446 0.9978216 1.0111184 1.0324677 #>  [913,] 0.40398788 0.4370126 0.5906675 0.7273620 0.7733326 0.8254954 0.8362086 #>  [914,] 0.74709066 0.7671970 0.8149375 0.9505859 0.9530753 0.9739714 1.0388821 #>  [915,] 0.72466259 0.7393945 0.8445011 0.8617740 0.9502754 0.9605883 0.9760931 #>  [916,] 0.47647141 0.5453613 0.6025488 0.7426871 0.7486613 0.7883968 0.7884570 #>  [917,] 0.16501743 0.2775870 0.3641907 0.4930826 0.5144973 0.5152917 0.5338603 #>  [918,] 0.19540212 0.6305681 0.6657718 0.6769619 0.6874868 0.6899812 0.7051960 #>  [919,] 0.41623066 0.4903951 0.5408364 0.6126285 0.7299662 0.7819215 0.7964172 #>  [920,] 0.41320860 0.4785999 0.4869808 0.5580839 0.6011795 0.6025885 0.6081127 #>  [921,] 0.41404711 0.4547670 0.4840737 0.5721873 0.5783029 0.5801135 0.5864353 #>  [922,] 0.42215733 0.5733962 0.7137534 0.8496971 1.0452136 1.0532431 1.0734400 #>  [923,] 0.37380274 0.4429853 0.4642234 0.4688398 0.5036609 0.5383248 0.5566536 #>  [924,] 0.35315867 0.4285085 0.5230733 0.5713332 0.5800227 0.5808100 0.5924552 #>  [925,] 0.36146965 0.4378812 0.5231909 0.5361988 0.5554105 0.5593181 0.5669865 #>  [926,] 0.28997577 0.3187343 0.3201712 0.4595337 0.4620162 0.5356025 0.6633166 #>  [927,] 0.28471573 0.4412928 0.4439081 0.4519726 0.4802765 0.5059085 0.5083474 #>  [928,] 0.46978829 0.5770199 0.7660171 0.7736202 0.8173819 0.8305563 0.8373463 #>  [929,] 0.16029717 0.2541160 0.3663064 0.3803989 0.3986548 0.4162849 0.4873894 #>  [930,] 1.18249829 1.3473434 1.4381263 1.5142443 1.5416161 1.5832884 1.6544146 #>  [931,] 0.54580565 0.5869137 0.7527805 0.7694566 0.7950681 0.8167371 0.8230146 #>  [932,] 0.56054297 0.6345156 0.6545371 0.7423340 0.7537775 0.7619909 0.8026459 #>  [933,] 0.41111790 0.5738338 0.7073982 0.7168567 0.7192953 0.7351809 0.7577049 #>  [934,] 0.61051394 0.7086017 0.9793953 0.9814049 1.1081457 1.1536435 1.1981170 #>  [935,] 0.39224540 0.5788490 0.6846027 0.6986785 0.7114005 0.7375750 0.7453461 #>  [936,] 0.54729456 0.5602186 0.7044691 0.7217592 0.7418347 0.7437643 0.7490507 #>  [937,] 0.86039472 1.0090000 1.0877738 1.1682549 1.1781355 1.1813314 1.1823472 #>  [938,] 0.55302643 0.5915924 0.7065369 0.7142474 0.7293718 0.7360657 0.7424644 #>  [939,] 0.56025734 0.7609011 0.7737247 0.8310271 0.9707690 1.0650983 1.1750297 #>  [940,] 0.27254440 0.4039879 0.5613314 0.6550975 0.6688277 0.7024073 0.7098139 #>  [941,] 0.42136865 0.4223105 0.4565149 0.4679830 0.4777097 0.4808516 0.5155907 #>  [942,] 0.31895836 0.3899852 0.4024779 0.4174633 0.4282394 0.4286280 0.4909808 #>  [943,] 0.55526845 0.8175530 0.8621568 0.8743788 0.9037873 0.9106158 0.9126317 #>  [944,] 0.28945337 0.3522209 0.4355615 0.4726923 0.4824530 0.4957078 0.5020668 #>  [945,] 0.39701205 0.4441114 0.4649695 0.4772908 0.4958097 0.5121332 0.5525252 #>  [946,] 0.25826556 0.3960186 0.4059077 0.4712141 0.5264046 0.5756506 0.5998110 #>  [947,] 0.93058951 0.9938253 1.0666690 1.1109208 1.1775595 1.2319824 1.2613084 #>  [948,] 0.46391937 0.5937355 0.6950655 0.8280929 0.8356064 0.8428265 0.9122847 #>  [949,] 0.34790891 0.4680796 0.5396876 0.6382281 0.6400575 0.6411255 0.6481905 #>  [950,] 0.35238291 0.3668537 0.6109478 0.7095641 0.7749325 0.8901491 0.9312267 #>  [951,] 0.36014599 0.3626034 0.3756356 0.6345321 0.6914989 0.7432730 0.7683442 #>  [952,] 0.61051394 0.7913864 1.1114868 1.1826681 1.2551316 1.2594305 1.3036950 #>  [953,] 0.39042014 0.4158787 0.4810909 0.5647542 0.6021192 0.6182067 0.6234334 #>  [954,] 0.28017664 0.3355127 0.3529550 0.3573352 0.4484865 0.4631568 0.5127625 #>  [955,] 0.50265573 0.5694820 0.5804012 0.5873547 0.5907279 0.6416269 0.7694554 #>  [956,] 0.36014599 0.6029159 0.6925662 0.7998164 0.8139813 0.8228826 0.8433855 #>  [957,] 0.44593944 0.6209246 0.7702690 0.7912641 0.8469937 0.9152098 0.9808985 #>  [958,] 0.52260093 0.8206258 0.9253010 0.9740586 1.0478554 1.1794328 1.1998280 #>  [959,] 1.22005515 1.2812545 1.2916781 1.3668941 1.3808707 1.3824581 1.3858493 #>  [960,] 0.36443253 0.4299254 0.5113963 0.5261591 0.5371358 0.5701869 0.6043776 #>  [961,] 0.42612821 0.5536061 0.5648752 0.6924142 0.6987769 0.7122091 0.7164410 #>  [962,] 0.57320847 0.5996770 0.6378419 0.7153605 0.7258441 0.7281789 0.7300526 #>  [963,] 0.50104625 1.4013816 1.4365007 1.5010291 1.5630016 1.6604986 1.7171154 #>  [964,] 0.35611582 0.3923306 0.4362101 0.4761688 0.5309856 0.6096585 0.6523362 #>  [965,] 0.37936287 0.3992005 0.5410478 0.5420440 0.5847321 0.6120910 0.6313301 #>  [966,] 0.37918199 0.5827911 0.6410367 0.6615979 0.6618955 0.6919742 0.7004741 #>  [967,] 0.37347827 0.3764244 0.4297075 0.4413339 0.5535051 0.5607194 0.5714454 #>  [968,] 0.36181453 0.5862836 0.5911246 0.6382281 0.6601682 0.8033420 0.8270223 #>  [969,] 0.76963550 0.7877537 0.7930202 0.8200517 0.8242714 0.8347348 0.8366400 #>  [970,] 0.39804258 0.6163321 0.7753187 0.8112795 0.9329139 0.9580693 1.0356727 #>  [971,] 0.43641429 0.4869955 0.5239244 0.6068497 0.8021219 0.8538699 0.8701711 #>  [972,] 0.36029640 0.4101642 0.6057914 0.6300347 0.6495124 0.6710343 0.6735510 #>  [973,] 0.73258759 0.7385535 0.7601879 0.7712441 0.7952872 0.8133476 0.8404859 #>  [974,] 0.35238291 0.3941877 0.4484353 0.4731788 0.6755219 0.6932618 0.7235131 #>  [975,] 0.28567511 0.3119312 0.3259819 0.4281580 0.5549712 0.5563920 0.5995921 #>  [976,] 0.31278173 0.3327203 0.4189498 0.4445253 0.4650143 0.5033323 0.5605430 #>  [977,] 0.33594253 0.4595337 0.4616742 0.4790044 0.5860091 0.6331529 0.6494443 #>  [978,] 1.03478986 1.2242915 1.2413483 1.4842749 1.5761385 1.6427164 1.6620518 #>  [979,] 0.54009927 0.6608047 0.7609127 0.7673573 0.7806613 0.8027489 0.8694903 #>  [980,] 0.70067115 0.9695747 1.0765607 1.2625264 1.2850803 1.3643177 1.4147155 #>  [981,] 0.27012064 0.3933535 0.4691748 0.5316174 0.6159744 0.6591283 0.6766349 #>  [982,] 0.47819086 0.6507029 0.6649422 0.6726772 0.7346542 0.8108331 0.8133476 #>  [983,] 0.25632119 0.3184265 0.3863586 0.4112081 0.4334079 0.4686618 0.5032973 #>  [984,] 0.26873931 0.3952351 0.4735690 0.5415387 0.6043776 0.6151749 0.6195682 #>  [985,] 0.40244168 0.4227024 0.4747394 0.5176903 0.5282508 0.5285633 0.5378610 #>  [986,] 0.27254440 0.4370126 0.5706307 0.5897240 0.6493103 0.7134396 0.7233242 #>  [987,] 0.48688386 0.6742323 0.7075003 0.7383690 0.7426036 0.7431238 0.7503363 #>  [988,] 0.40112227 0.5530227 0.5707280 0.6055384 0.6936673 0.7024491 0.7044718 #>  [989,] 0.20091895 0.2971487 0.3208546 0.4109420 0.4129547 0.4356229 0.4484865 #>  [990,] 0.46807958 0.6391036 0.6435511 0.6968947 0.6986823 0.7038265 0.7354050 #>  [991,] 0.37430928 0.4076956 0.4342181 0.4370723 0.4923261 0.4930826 0.5229159 #>  [992,] 0.37737294 0.4666087 0.5360528 0.6306746 0.6502759 0.6671276 0.6949748 #>  [993,] 0.47302862 0.6527648 0.7141794 0.7995902 0.8027489 0.8131032 0.8469895 #>  [994,] 0.43641429 0.4955943 0.6032008 0.6039992 0.6253038 0.6265692 0.6388035 #>  [995,] 0.78312104 0.8867427 0.9464186 1.0914421 1.1405249 1.1466864 1.1500124 #>  [996,] 0.24056454 0.4287249 0.5852782 0.7953753 0.8061380 0.8229808 0.9020577 #>  [997,] 0.32610818 0.3282621 0.4813045 0.6113200 0.6141388 0.6661958 0.6705851 #>  [998,] 0.52910273 0.5802205 0.6012839 0.6083305 0.6278123 0.6500177 0.6560204 #>  [999,] 0.93511995 0.9626636 1.1011975 1.2041270 1.4155220 1.4191679 1.4664281 #> [1000,] 0.36937646 0.3764244 0.4011750 0.4294431 0.4499253 0.4866288 0.5418886 #>              [,8]      [,9]     [,10] #>    [1,] 0.5428312 0.5695790 0.6351611 #>    [2,] 0.5187856 0.5564578 0.5712908 #>    [3,] 0.7817423 0.9024040 0.9032454 #>    [4,] 0.6679337 0.7150483 0.7424457 #>    [5,] 0.7323096 0.7500014 0.7757407 #>    [6,] 0.7365349 0.7420333 0.8426230 #>    [7,] 0.5354334 0.5535050 0.5567739 #>    [8,] 0.6695459 0.6753192 0.6755490 #>    [9,] 1.2026024 1.3002345 1.3056620 #>   [10,] 0.9200251 0.9277648 0.9331858 #>   [11,] 0.7962362 0.8411464 0.9446996 #>   [12,] 0.9607031 0.9640132 0.9688383 #>   [13,] 0.6813682 0.6879926 0.6968224 #>   [14,] 0.5536038 0.5628452 0.5646981 #>   [15,] 0.7528559 0.7705488 0.7903492 #>   [16,] 0.8401095 0.8410214 0.8637399 #>   [17,] 1.2168120 1.2413483 1.2436479 #>   [18,] 1.1731417 1.3056620 1.3093604 #>   [19,] 1.0339820 1.0399492 1.0420816 #>   [20,] 1.1875216 1.2248730 1.2255292 #>   [21,] 0.5123790 0.5132941 0.5405952 #>   [22,] 0.7377129 0.7444957 0.7615671 #>   [23,] 0.5487745 0.5766229 0.5808484 #>   [24,] 0.9902790 1.0205112 1.0468283 #>   [25,] 0.8493089 0.8913478 0.9041137 #>   [26,] 0.6347758 0.6586887 0.6617352 #>   [27,] 1.1985865 1.1989443 1.2061804 #>   [28,] 0.6401428 0.6466583 0.6826828 #>   [29,] 0.9327631 1.0681614 1.0739387 #>   [30,] 0.8055647 0.8142795 0.8163081 #>   [31,] 0.6941056 0.7061397 0.7128839 #>   [32,] 0.5125321 0.5129071 0.5646999 #>   [33,] 0.5743378 0.5931820 0.6197073 #>   [34,] 1.1184913 1.1470804 1.1702995 #>   [35,] 0.6142724 0.6511493 0.6727196 #>   [36,] 0.9620633 0.9873606 0.9887100 #>   [37,] 1.1739421 1.2380052 1.2968317 #>   [38,] 0.6887631 0.7117984 0.7212976 #>   [39,] 0.6663782 0.6984045 0.7125792 #>   [40,] 0.7165133 0.7190591 0.7430287 #>   [41,] 0.6948340 0.7330044 0.7662933 #>   [42,] 1.1716053 1.2184584 1.2732701 #>   [43,] 0.8873840 0.9120311 0.9403597 #>   [44,] 0.9783486 0.9999806 1.0813540 #>   [45,] 0.5646999 0.5708156 0.5717981 #>   [46,] 1.1903672 1.2129435 1.2326678 #>   [47,] 0.9041555 0.9143293 0.9175895 #>   [48,] 0.5971163 0.6610440 0.6692584 #>   [49,] 0.6453361 0.7243669 0.7325497 #>   [50,] 0.6959181 0.7266364 0.9003672 #>   [51,] 1.0982137 1.1271582 1.2848889 #>   [52,] 0.9288915 0.9481439 1.0327111 #>   [53,] 0.7814949 0.7996211 0.8239334 #>   [54,] 0.9621047 1.0285556 1.0457997 #>   [55,] 0.9823696 1.0152949 1.0343540 #>   [56,] 0.7954697 0.8240416 0.8341672 #>   [57,] 1.1144895 1.1783745 1.1892486 #>   [58,] 0.7484438 0.8456453 0.8611074 #>   [59,] 0.7118552 0.7207807 0.7282719 #>   [60,] 0.7293718 0.7529247 0.7588167 #>   [61,] 0.6461238 0.6524538 0.6615364 #>   [62,] 0.5413057 0.5522679 0.5755501 #>   [63,] 1.0298076 1.0376311 1.0539778 #>   [64,] 0.5773675 0.6006617 0.6079518 #>   [65,] 0.7292199 0.7487106 0.7797094 #>   [66,] 0.9907991 0.9956017 1.0827801 #>   [67,] 0.5740717 0.5945680 0.6590372 #>   [68,] 0.7723401 0.7865356 0.8114874 #>   [69,] 0.6739721 0.7026732 0.7165133 #>   [70,] 0.8303697 0.8384469 0.8429769 #>   [71,] 0.4840733 0.4983791 0.5287118 #>   [72,] 1.4733477 1.4958421 1.5567460 #>   [73,] 0.5850075 0.6064619 0.6460080 #>   [74,] 0.7615282 0.7923748 0.8074366 #>   [75,] 0.8976574 0.9226537 0.9703127 #>   [76,] 1.3224794 1.3598033 1.4828114 #>   [77,] 0.7663171 0.7694554 0.8190901 #>   [78,] 1.0877738 1.0943233 1.1096481 #>   [79,] 0.5408641 0.5435034 0.6018774 #>   [80,] 0.6466854 0.6479109 0.6609845 #>   [81,] 0.6954350 0.7875189 0.7916990 #>   [82,] 0.7025182 0.7107874 0.7192953 #>   [83,] 0.9940629 1.0003826 1.0337300 #>   [84,] 0.9790082 1.0992992 1.1009800 #>   [85,] 0.9801788 0.9934764 0.9978238 #>   [86,] 0.9219119 0.9404603 0.9887478 #>   [87,] 0.9610354 0.9691710 0.9711359 #>   [88,] 0.6306805 0.6458510 0.6636778 #>   [89,] 0.7670848 0.7925374 0.8440142 #>   [90,] 0.7671853 0.7725817 0.8060969 #>   [91,] 1.0008567 1.0024658 1.0426593 #>   [92,] 0.6809644 0.7751105 0.7898526 #>   [93,] 1.8555652 1.8828961 1.9060081 #>   [94,] 0.5547413 0.5573295 0.5683977 #>   [95,] 0.6021192 0.6351454 0.6679342 #>   [96,] 0.5948780 0.6134443 0.6514323 #>   [97,] 1.0244518 1.0527093 1.0775075 #>   [98,] 0.7893370 0.7917788 0.8406311 #>   [99,] 1.1297811 1.2327339 1.2701719 #>  [100,] 1.1855553 1.2836102 1.2850803 #>  [101,] 1.1019892 1.1283304 1.1916691 #>  [102,] 0.9978445 1.1208978 1.1405413 #>  [103,] 1.6822846 1.7058183 1.7106336 #>  [104,] 0.7599685 0.8484403 0.8505745 #>  [105,] 1.1009788 1.1009800 1.1020872 #>  [106,] 0.9489703 0.9615929 0.9796470 #>  [107,] 0.5913191 0.6199408 0.6207910 #>  [108,] 1.0782947 1.0914421 1.1324678 #>  [109,] 0.7061848 0.7077581 0.7138760 #>  [110,] 0.6648141 0.6829232 0.6850721 #>  [111,] 0.9692382 0.9703239 0.9819270 #>  [112,] 0.9970328 0.9977730 1.0390497 #>  [113,] 0.5859139 0.6180130 0.6337927 #>  [114,] 0.5507824 0.5608670 0.6090956 #>  [115,] 0.7736282 0.7743580 0.7981251 #>  [116,] 0.5323816 0.5475102 0.5608639 #>  [117,] 0.5516278 0.5608670 0.5841534 #>  [118,] 1.2081222 1.2135877 1.2230174 #>  [119,] 0.5435188 0.5587013 0.6040103 #>  [120,] 0.6523088 0.6640171 0.6707013 #>  [121,] 0.5927020 0.6138700 0.6202199 #>  [122,] 1.1065361 1.1101612 1.1408810 #>  [123,] 0.9067788 0.9570966 0.9762603 #>  [124,] 1.2720417 1.2935925 1.3260996 #>  [125,] 0.7666463 0.7944303 0.8064355 #>  [126,] 0.9258032 0.9455802 0.9459684 #>  [127,] 0.7426124 0.7566748 0.7589114 #>  [128,] 0.7995127 0.8616728 0.8642680 #>  [129,] 1.0939103 1.1283304 1.1403445 #>  [130,] 1.8170843 1.9487832 1.9651832 #>  [131,] 0.7107537 0.7153605 0.7180072 #>  [132,] 0.7127463 0.7159491 0.7312168 #>  [133,] 0.7437863 0.7516307 0.7577734 #>  [134,] 0.6851276 0.8053505 0.8275560 #>  [135,] 0.8377634 0.8702008 0.8938511 #>  [136,] 0.7827637 0.8644956 0.8795207 #>  [137,] 0.5814759 0.6030079 0.6179146 #>  [138,] 0.6067358 0.6250772 0.6522443 #>  [139,] 0.7957083 0.8082671 0.8283955 #>  [140,] 0.6639075 0.6865075 0.6975890 #>  [141,] 0.6197073 0.6224116 0.6668682 #>  [142,] 0.6886432 0.6888805 0.7045670 #>  [143,] 1.0092811 1.1065930 1.1448886 #>  [144,] 1.0984606 1.2103435 1.2291750 #>  [145,] 1.2716881 1.3544715 1.3896788 #>  [146,] 0.9841743 1.0168837 1.0766818 #>  [147,] 0.5886536 0.5890158 0.6053119 #>  [148,] 0.9350864 0.9750576 0.9971648 #>  [149,] 0.8759358 0.9821284 0.9846402 #>  [150,] 0.7365723 0.7628844 0.7916435 #>  [151,] 0.7022323 0.7563999 0.7654694 #>  [152,] 0.9090649 0.9122847 0.9372404 #>  [153,] 0.7553068 0.7875640 0.7938210 #>  [154,] 0.9339699 0.9340461 0.9379641 #>  [155,] 1.4913288 1.5670429 1.5689853 #>  [156,] 0.6793651 0.7265836 0.7717929 #>  [157,] 0.8965497 0.9223993 0.9302575 #>  [158,] 0.6242068 0.6460080 0.6637490 #>  [159,] 0.7084903 0.7241422 0.7245461 #>  [160,] 1.0576715 1.0606433 1.0740219 #>  [161,] 0.6215111 0.6879653 0.7258441 #>  [162,] 0.5353137 0.5415676 0.5566536 #>  [163,] 0.6300118 0.6601669 0.6864747 #>  [164,] 0.9665671 1.0268859 1.0518401 #>  [165,] 0.8645391 0.9402593 0.9783486 #>  [166,] 0.7898806 0.8204658 0.8227050 #>  [167,] 0.9445889 0.9819952 0.9881837 #>  [168,] 0.5091355 0.5569715 0.6379992 #>  [169,] 1.0992992 1.1156776 1.1297811 #>  [170,] 0.6695362 0.6733117 0.6973461 #>  [171,] 0.5942006 0.6015820 0.6403009 #>  [172,] 0.7195854 0.7440475 0.7531731 #>  [173,] 0.7577483 0.7837114 0.7898736 #>  [174,] 0.8547600 0.8630979 0.8907378 #>  [175,] 0.5853618 0.6449725 0.6456969 #>  [176,] 0.5141013 0.5275119 0.5768938 #>  [177,] 0.6095806 0.6213413 0.6299666 #>  [178,] 0.4978881 0.5157680 0.5170958 #>  [179,] 0.6089877 0.6134404 0.6157482 #>  [180,] 0.6636778 0.6654100 0.7271265 #>  [181,] 1.3964024 1.4527950 1.4722173 #>  [182,] 0.7253465 0.7815200 0.7955110 #>  [183,] 0.7323061 0.7558966 0.7936875 #>  [184,] 1.1560213 1.1913274 1.1949207 #>  [185,] 0.8762341 0.8933043 0.9511342 #>  [186,] 0.5477623 0.6176997 0.6241833 #>  [187,] 0.5501862 0.5597784 0.5771096 #>  [188,] 0.8248959 0.8558286 0.8563963 #>  [189,] 0.6900892 0.6955504 0.6987582 #>  [190,] 0.6277988 0.6588848 0.7136158 #>  [191,] 1.1806111 1.2905648 1.3102469 #>  [192,] 0.6145745 0.6470026 0.6641624 #>  [193,] 0.9466312 0.9957216 1.0573702 #>  [194,] 0.5883262 0.6151818 0.6296162 #>  [195,] 0.9082753 0.9223589 0.9417332 #>  [196,] 0.5980760 0.6075141 0.6222206 #>  [197,] 0.7355629 0.7794644 0.8221603 #>  [198,] 0.8339755 0.8404604 0.8512837 #>  [199,] 0.7838901 0.8537475 0.8573890 #>  [200,] 0.9109017 0.9118628 0.9275678 #>  [201,] 0.4871285 0.4909694 0.5170958 #>  [202,] 0.5265330 0.5535050 0.5661895 #>  [203,] 0.7183294 0.7721887 0.8284145 #>  [204,] 0.8781732 0.8812495 0.8874623 #>  [205,] 0.9493435 0.9971806 1.0096119 #>  [206,] 0.8321211 0.8428223 0.8728060 #>  [207,] 0.7019481 0.7103726 0.7110289 #>  [208,] 0.6092549 0.6238525 0.6537288 #>  [209,] 0.8409085 0.8898983 0.9277421 #>  [210,] 0.6776292 0.6853537 0.6935605 #>  [211,] 1.3342959 1.4346070 1.4622897 #>  [212,] 0.8784390 0.8839426 0.9123238 #>  [213,] 0.5706307 0.5753808 0.5773675 #>  [214,] 0.6618070 0.7363223 0.7751308 #>  [215,] 0.7037881 0.7383699 0.7452692 #>  [216,] 0.9185150 0.9191754 0.9551984 #>  [217,] 0.6542160 0.6979998 0.7099077 #>  [218,] 0.7953238 0.7984742 0.8433325 #>  [219,] 1.1229860 1.1368542 1.1479002 #>  [220,] 1.0827801 1.0872987 1.1194567 #>  [221,] 0.7121584 0.7359753 0.7594386 #>  [222,] 0.7299662 0.7807221 0.7840526 #>  [223,] 0.7916609 0.8192357 0.8527369 #>  [224,] 0.9922093 1.0099407 1.0346766 #>  [225,] 0.8368210 0.8415885 0.8624726 #>  [226,] 0.5535276 0.5659730 0.5708156 #>  [227,] 0.8896054 0.9125568 0.9740586 #>  [228,] 1.1463526 1.2216547 1.2594305 #>  [229,] 0.8766831 0.8794074 0.9873110 #>  [230,] 0.6231875 0.6253014 0.6518902 #>  [231,] 1.0194436 1.0201499 1.0287234 #>  [232,] 0.9142916 0.9190856 0.9276079 #>  [233,] 0.5607186 0.5629145 0.5844075 #>  [234,] 0.5757261 0.5850075 0.5922951 #>  [235,] 1.1764114 1.1914160 1.1973431 #>  [236,] 0.5053711 0.5090745 0.5287118 #>  [237,] 0.8321242 0.8433325 0.8482481 #>  [238,] 1.0040760 1.0040912 1.0191599 #>  [239,] 0.6384502 0.6397974 0.6473845 #>  [240,] 1.3017722 1.3149393 1.3383306 #>  [241,] 1.2513286 1.2870755 1.3394380 #>  [242,] 0.5751313 0.5849882 0.6065019 #>  [243,] 0.6806029 0.6813518 0.7242816 #>  [244,] 0.7084379 0.7594386 0.7804850 #>  [245,] 0.6541367 0.7977026 0.8105286 #>  [246,] 0.8336963 0.8410720 0.8591950 #>  [247,] 0.9788810 0.9813812 1.0120162 #>  [248,] 0.7024491 0.7177328 0.7231681 #>  [249,] 0.8322009 0.8548759 0.8591950 #>  [250,] 0.5121097 0.5167264 0.5175902 #>  [251,] 0.6680707 0.6757104 0.6846982 #>  [252,] 0.8946704 0.9965749 1.0132401 #>  [253,] 0.8202138 0.8220979 0.8691706 #>  [254,] 0.7280370 0.7730874 0.9122673 #>  [255,] 0.8477245 0.9122673 0.9226374 #>  [256,] 0.6873371 0.6881486 0.7052047 #>  [257,] 1.2758291 1.3178454 1.3468434 #>  [258,] 0.6242068 0.6344204 0.6412341 #>  [259,] 1.0643107 1.0673566 1.0754532 #>  [260,] 0.6823097 0.6873607 0.7020166 #>  [261,] 0.6685223 0.6782660 0.6876180 #>  [262,] 0.8270395 0.8708811 0.8913068 #>  [263,] 1.0740219 1.0750903 1.1291211 #>  [264,] 0.8011536 0.8073320 0.8298273 #>  [265,] 1.1646126 1.2042414 1.2091737 #>  [266,] 0.7451530 0.7569013 0.7592414 #>  [267,] 0.6090956 0.6213173 0.6252532 #>  [268,] 0.6349318 0.6443000 0.6527970 #>  [269,] 1.0217933 1.0311069 1.0408233 #>  [270,] 0.6392396 0.7291157 0.7406025 #>  [271,] 0.6780110 0.6800894 0.6950290 #>  [272,] 1.2825475 1.3394380 1.3693175 #>  [273,] 1.1701777 1.1750385 1.2246513 #>  [274,] 0.5659730 0.5698817 0.6090584 #>  [275,] 0.7081183 0.7135747 0.7287868 #>  [276,] 0.9493760 1.0095489 1.0277655 #>  [277,] 0.8067553 0.8250206 0.8510327 #>  [278,] 1.0675754 1.0788709 1.1162190 #>  [279,] 0.7265359 0.7440475 0.7463220 #>  [280,] 0.6256506 0.7147760 0.7467148 #>  [281,] 1.0733613 1.0998441 1.1014008 #>  [282,] 0.6336267 0.6417348 0.6459385 #>  [283,] 1.3384776 1.4935578 1.5156947 #>  [284,] 0.8237431 0.8811457 0.8901399 #>  [285,] 0.7716950 0.8336963 0.8462351 #>  [286,] 0.7749325 0.8040726 0.8228566 #>  [287,] 0.6295640 0.6337927 0.6594195 #>  [288,] 0.6906443 0.7017563 0.7063254 #>  [289,] 0.5819431 0.5822674 0.6132660 #>  [290,] 0.8080409 0.8154270 0.8325751 #>  [291,] 0.7407002 0.7539032 0.7630795 #>  [292,] 0.6529808 0.6615348 0.6995511 #>  [293,] 0.6229592 0.6314845 0.6499316 #>  [294,] 0.7940180 0.8297595 0.8347948 #>  [295,] 1.0486135 1.0581064 1.0638883 #>  [296,] 0.6701211 0.6979998 0.7009911 #>  [297,] 0.5075005 0.5317193 0.5437060 #>  [298,] 0.5952216 0.6403172 0.6490485 #>  [299,] 1.0470596 1.0605172 1.0758215 #>  [300,] 0.6193858 0.6470441 0.6587651 #>  [301,] 0.5606403 0.5815007 0.5864755 #>  [302,] 1.2689485 1.2721955 1.3141648 #>  [303,] 0.7425069 0.7425966 0.7490270 #>  [304,] 0.9724968 0.9735032 0.9935833 #>  [305,] 1.0819005 1.0834758 1.0979884 #>  [306,] 0.6511493 0.6541090 0.6622475 #>  [307,] 0.6897682 0.6988360 0.7139105 #>  [308,] 0.6145484 0.6432996 0.6628859 #>  [309,] 0.7658068 0.7948236 0.7976439 #>  [310,] 0.7777261 0.7980101 0.8307865 #>  [311,] 0.5534722 0.5727841 0.5762352 #>  [312,] 1.2605449 1.2826081 1.2876778 #>  [313,] 0.7195165 0.8154053 0.8293106 #>  [314,] 1.2794249 1.5497985 1.5588674 #>  [315,] 0.6459385 0.6728004 0.6784487 #>  [316,] 0.8770516 0.8910733 0.8932242 #>  [317,] 1.6445072 1.6582598 1.6945460 #>  [318,] 0.7345390 0.7375582 0.7394000 #>  [319,] 0.5713332 0.6053119 0.6312769 #>  [320,] 0.6893881 0.7138760 0.7507680 #>  [321,] 0.8532488 0.8817030 0.8846713 #>  [322,] 0.7976439 0.8100492 0.8144046 #>  [323,] 0.8643944 0.8656774 0.8735583 #>  [324,] 0.5647202 0.5701869 0.5868033 #>  [325,] 1.0463820 1.0771323 1.1033574 #>  [326,] 0.9759280 0.9939919 1.0114876 #>  [327,] 0.7287691 0.7412575 0.7577483 #>  [328,] 0.6774654 0.7023953 0.7107874 #>  [329,] 0.6644753 0.6811190 0.6819476 #>  [330,] 0.9935833 1.0948390 1.1085215 #>  [331,] 1.0315543 1.0334753 1.0390517 #>  [332,] 1.3507276 1.3628622 1.3733022 #>  [333,] 0.9104134 0.9251782 0.9454556 #>  [334,] 0.7213871 0.7303336 0.7849155 #>  [335,] 0.6929627 0.7444637 0.7500939 #>  [336,] 0.5378610 0.5606774 0.5916723 #>  [337,] 0.7714269 0.7721887 0.8011401 #>  [338,] 0.6506952 0.7017235 0.7650664 #>  [339,] 0.8858496 0.9277806 0.9522564 #>  [340,] 1.4998030 1.5494214 1.5697137 #>  [341,] 1.8142891 1.8806032 1.8943152 #>  [342,] 0.8868289 0.8878189 0.9242391 #>  [343,] 1.8978531 1.9320523 1.9674976 #>  [344,] 1.2603461 1.2785781 1.2843089 #>  [345,] 0.6482563 0.6569735 0.6842596 #>  [346,] 0.6893881 0.7552792 0.7680064 #>  [347,] 0.5581549 0.5987974 0.6386280 #>  [348,] 1.5087673 1.5416675 1.5911480 #>  [349,] 0.8548952 0.8950243 0.9010835 #>  [350,] 1.0787296 1.1095135 1.1113592 #>  [351,] 0.9015736 0.9218583 0.9342182 #>  [352,] 0.5285633 0.5457086 0.5511256 #>  [353,] 0.6521973 0.6599610 0.6695516 #>  [354,] 0.8930258 0.9194363 0.9196474 #>  [355,] 1.1801025 1.1823408 1.1939617 #>  [356,] 1.1166502 1.1236923 1.1411491 #>  [357,] 0.8298273 0.8341672 0.8396259 #>  [358,] 0.8926291 0.9503942 0.9692382 #>  [359,] 0.8165996 0.8383167 0.8393845 #>  [360,] 0.7115334 0.7115509 0.7677375 #>  [361,] 0.9227037 0.9239927 0.9487377 #>  [362,] 1.1560213 1.1683196 1.1709926 #>  [363,] 0.6099657 0.6360188 0.6456969 #>  [364,] 0.9508850 0.9775332 1.0086561 #>  [365,] 1.4740621 1.5197829 1.5269524 #>  [366,] 0.6628282 0.6703730 0.6968046 #>  [367,] 0.7419742 0.8450891 0.8539320 #>  [368,] 0.6856507 0.7125669 0.7233269 #>  [369,] 0.7501093 0.8151688 0.8366432 #>  [370,] 0.8011401 0.8034408 0.8208846 #>  [371,] 0.6003424 0.6025310 0.6051237 #>  [372,] 0.7204938 0.7264462 0.7499850 #>  [373,] 0.5583857 0.5707035 0.5873268 #>  [374,] 0.7636652 0.7661853 0.7811024 #>  [375,] 0.5881123 0.6221576 0.6281053 #>  [376,] 0.7126689 0.7151236 0.7170826 #>  [377,] 0.7887989 0.8012549 0.8025315 #>  [378,] 2.0191613 2.0206633 2.0215489 #>  [379,] 0.6715935 0.6792674 0.6850721 #>  [380,] 0.4830901 0.4858087 0.5065083 #>  [381,] 0.6192598 0.6356567 0.6561756 #>  [382,] 0.8002504 0.8065753 0.8339204 #>  [383,] 0.6531761 0.6928941 0.7172273 #>  [384,] 0.9033377 0.9383245 0.9490470 #>  [385,] 0.6404836 0.6658032 0.7309560 #>  [386,] 0.7547130 0.7659608 0.7776061 #>  [387,] 0.7071099 0.7244826 0.7635905 #>  [388,] 1.2612451 1.2828349 1.2888005 #>  [389,] 1.2882603 1.2912405 1.3219642 #>  [390,] 0.5309856 0.5415676 0.5557106 #>  [391,] 1.0340016 1.0355295 1.0583202 #>  [392,] 0.6476882 0.6493103 0.6550975 #>  [393,] 0.7374828 0.7789166 0.7905680 #>  [394,] 0.5418886 0.5697511 0.5756506 #>  [395,] 0.6356057 0.6934027 0.7180751 #>  [396,] 0.8180519 0.8812903 0.8815210 #>  [397,] 1.1358772 1.1773387 1.2301861 #>  [398,] 0.4641433 0.5069489 0.5142285 #>  [399,] 0.7026820 0.7035586 0.7219064 #>  [400,] 0.6166315 0.6340176 0.6355029 #>  [401,] 0.9254642 0.9930713 0.9937332 #>  [402,] 0.6404836 0.6592049 0.6710526 #>  [403,] 0.5175902 0.5597083 0.5730866 #>  [404,] 0.8603947 0.8612136 0.8946704 #>  [405,] 0.6086359 0.6095877 0.6751862 #>  [406,] 0.8072549 0.8165570 0.8645961 #>  [407,] 0.9444025 0.9709334 0.9720352 #>  [408,] 0.6067871 0.6193345 0.6234643 #>  [409,] 1.6064542 1.6474080 1.6503440 #>  [410,] 1.3607060 1.3660513 1.3719572 #>  [411,] 1.1656144 1.2047255 1.2090903 #>  [412,] 0.6500923 0.7187232 0.7355434 #>  [413,] 1.1182210 1.1247584 1.1386625 #>  [414,] 1.2631048 1.3042647 1.3207455 #>  [415,] 1.1251618 1.1386073 1.1431776 #>  [416,] 0.5799551 0.5828802 0.6189363 #>  [417,] 1.0262764 1.0312298 1.0864427 #>  [418,] 0.8628054 0.9455802 0.9956017 #>  [419,] 1.0818590 1.0915724 1.1117587 #>  [420,] 0.7269744 0.7479862 0.7789189 #>  [421,] 0.6276498 0.6388721 0.6452198 #>  [422,] 1.2325032 1.2469546 1.3098382 #>  [423,] 0.8584383 0.8651742 0.8696395 #>  [424,] 1.5418992 1.6375926 1.6596990 #>  [425,] 0.6886757 0.6944488 0.7264606 #>  [426,] 0.8030115 0.8275047 0.8834812 #>  [427,] 0.5755501 0.5852330 0.5984719 #>  [428,] 0.6874766 0.7217498 0.7751263 #>  [429,] 0.6528501 0.6615348 0.6686105 #>  [430,] 0.7473518 0.7893473 0.8310538 #>  [431,] 0.5479756 0.5529793 0.5533911 #>  [432,] 0.7543045 0.7589584 0.7891682 #>  [433,] 0.7674044 0.8055647 0.8257411 #>  [434,] 0.6903848 0.6961547 0.7467029 #>  [435,] 1.0388821 1.0524557 1.1209138 #>  [436,] 1.4370337 1.4872883 1.4947465 #>  [437,] 0.6831843 0.6928790 0.7004741 #>  [438,] 0.5648905 0.5823519 0.6078482 #>  [439,] 1.1393026 1.1820580 1.2072285 #>  [440,] 0.6402763 0.6454320 0.6467896 #>  [441,] 0.5951777 0.6574248 0.6954854 #>  [442,] 0.5946205 0.5966398 0.6545545 #>  [443,] 0.6621642 0.6639746 0.6767022 #>  [444,] 1.1359361 1.1510277 1.1720173 #>  [445,] 0.5671933 0.5771751 0.5825039 #>  [446,] 0.9906321 1.0248959 1.0290134 #>  [447,] 0.5881518 0.6108004 0.6326375 #>  [448,] 0.7552838 0.7671467 0.7783628 #>  [449,] 1.0816121 1.0922465 1.0957159 #>  [450,] 1.7007961 1.7455601 1.7820004 #>  [451,] 0.8497146 0.9042121 0.9252886 #>  [452,] 1.1148306 1.1450397 1.1521600 #>  [453,] 0.5507693 0.5566304 0.5576925 #>  [454,] 0.8218825 0.8377052 0.8761744 #>  [455,] 1.3771371 1.4384254 1.5388329 #>  [456,] 0.6883640 0.6909344 0.7480327 #>  [457,] 0.5771096 0.5773100 0.5851557 #>  [458,] 0.6588883 0.6640171 0.6685335 #>  [459,] 0.7726068 0.8050708 0.8072540 #>  [460,] 0.9646371 1.0280738 1.0490663 #>  [461,] 0.8306011 0.8385625 0.8648049 #>  [462,] 0.5764966 0.5879978 0.6510546 #>  [463,] 0.7842142 0.7931939 0.8307159 #>  [464,] 0.8969442 0.9120642 0.9147027 #>  [465,] 0.9800233 1.0529037 1.0828409 #>  [466,] 0.5997829 0.6011990 0.6364663 #>  [467,] 1.0219678 1.0238294 1.0302596 #>  [468,] 0.7158574 0.7269726 0.7367443 #>  [469,] 0.6294275 0.6452241 0.6583939 #>  [470,] 0.7737927 0.7981151 0.8003901 #>  [471,] 0.7942507 0.8111291 0.8228032 #>  [472,] 1.0970680 1.1246912 1.2078061 #>  [473,] 0.7470142 0.7500014 0.7858504 #>  [474,] 0.6544648 0.6596743 0.6660163 #>  [475,] 0.8493387 0.8521907 0.8707633 #>  [476,] 0.7527956 0.7881000 0.7931696 #>  [477,] 0.5975939 0.6233332 0.6873371 #>  [478,] 0.5651328 0.5758697 0.5797815 #>  [479,] 0.6061091 0.6267791 0.6295668 #>  [480,] 0.5267255 0.5275758 0.5300075 #>  [481,] 0.7123387 0.7129494 0.7250075 #>  [482,] 0.5441986 0.5453885 0.5773246 #>  [483,] 0.6749544 0.7222800 0.7289607 #>  [484,] 0.9566653 1.0484810 1.1270001 #>  [485,] 0.9915241 0.9975635 0.9977222 #>  [486,] 0.8417865 0.8652587 0.9251782 #>  [487,] 0.5915078 0.6080251 0.6083228 #>  [488,] 0.6367697 0.6832017 0.7032088 #>  [489,] 1.4873768 1.5906089 1.6088265 #>  [490,] 1.0256590 1.0264553 1.0430024 #>  [491,] 0.6343111 0.6487144 0.6517854 #>  [492,] 0.8581195 0.8675830 0.8952745 #>  [493,] 1.2401250 1.2514323 1.2663813 #>  [494,] 1.4569039 1.4852244 1.5046454 #>  [495,] 0.8150625 0.8441257 0.8801181 #>  [496,] 1.3629123 1.3879795 1.4261250 #>  [497,] 1.0082666 1.1072523 1.1108137 #>  [498,] 0.9341330 0.9535655 1.0102705 #>  [499,] 0.8810152 1.0545842 1.0701982 #>  [500,] 0.5275119 0.5378858 0.5408641 #>  [501,] 0.7983866 0.8141405 0.8248959 #>  [502,] 0.6685335 0.6838181 0.6912304 #>  [503,] 0.8136345 0.8708811 0.8714945 #>  [504,] 0.6079898 0.6162667 0.6253014 #>  [505,] 0.6111821 0.6199408 0.6250720 #>  [506,] 1.3177117 1.3211396 1.3427624 #>  [507,] 0.8429769 0.8435128 0.8483578 #>  [508,] 0.7466316 0.7503842 0.7783493 #>  [509,] 0.5481203 0.5744581 0.5850803 #>  [510,] 0.6788989 0.6889525 0.6890499 #>  [511,] 1.4058192 1.5323548 1.5381616 #>  [512,] 0.5807167 0.5856444 0.7037422 #>  [513,] 0.9325599 0.9884113 1.0114876 #>  [514,] 0.5101772 0.5142285 0.5461855 #>  [515,] 1.1714138 1.1780282 1.2000624 #>  [516,] 0.6522026 0.6590051 0.6981170 #>  [517,] 0.6046089 0.6297910 0.6427209 #>  [518,] 0.4831592 0.4873894 0.4909694 #>  [519,] 0.9057635 0.9438797 0.9582357 #>  [520,] 0.6368057 0.7149509 0.7227897 #>  [521,] 0.8970888 0.9307967 0.9677743 #>  [522,] 0.5154850 0.5509206 0.5562496 #>  [523,] 0.5745819 0.5796680 0.5802644 #>  [524,] 0.7931939 0.8231171 0.8810152 #>  [525,] 0.5717981 0.5755021 0.5877363 #>  [526,] 0.6244878 0.6452198 0.6560204 #>  [527,] 0.5854741 0.5951777 0.6055384 #>  [528,] 0.6776292 0.6951659 0.7057361 #>  [529,] 1.1352325 1.1705946 1.1792646 #>  [530,] 0.5815343 0.6064070 0.6065024 #>  [531,] 0.9223589 0.9402593 0.9436176 #>  [532,] 0.5167264 0.5281382 0.5533911 #>  [533,] 0.7775998 0.7858887 0.7950090 #>  [534,] 0.6313953 0.6318095 0.7019481 #>  [535,] 1.0533030 1.0666678 1.1114868 #>  [536,] 1.1733365 1.1913689 1.2714116 #>  [537,] 0.7828555 0.8292245 0.8605209 #>  [538,] 0.6514323 0.6569517 0.7135747 #>  [539,] 0.6059288 0.6368057 0.6786679 #>  [540,] 1.1386625 1.1762692 1.1836221 #>  [541,] 0.6567943 0.6820452 0.6866486 #>  [542,] 0.8566232 0.8910913 0.9167389 #>  [543,] 0.5450850 0.5536038 0.5689651 #>  [544,] 0.7754381 0.7907056 0.8140275 #>  [545,] 0.9083925 0.9357147 0.9377109 #>  [546,] 0.7442463 0.8041833 0.8248477 #>  [547,] 1.1774721 1.2612451 1.2681574 #>  [548,] 1.0352908 1.0548004 1.1119143 #>  [549,] 0.5715436 0.5924954 0.6026063 #>  [550,] 1.0575600 1.0619929 1.0648524 #>  [551,] 1.0594260 1.0786798 1.0946448 #>  [552,] 1.1102575 1.1920485 1.2423692 #>  [553,] 0.7013810 0.7120569 0.8404604 #>  [554,] 0.5682768 0.5924954 0.6237282 #>  [555,] 0.8058892 0.8241225 0.8499281 #>  [556,] 0.6351062 0.6414686 0.6740253 #>  [557,] 0.9900425 1.0458091 1.0750038 #>  [558,] 0.5075005 0.5592224 0.5773246 #>  [559,] 0.9928493 1.0783131 1.0972857 #>  [560,] 1.2347803 1.3297016 1.3429729 #>  [561,] 1.9410945 2.0113572 2.0857777 #>  [562,] 1.2067666 1.2136525 1.2660493 #>  [563,] 1.1420538 1.2752688 1.2858068 #>  [564,] 0.9504846 0.9837571 1.0032521 #>  [565,] 0.9377660 0.9544969 0.9789290 #>  [566,] 0.8171348 0.8360272 0.8470188 #>  [567,] 1.0755476 1.0812836 1.0925347 #>  [568,] 0.5428712 0.5534310 0.5579855 #>  [569,] 0.7604429 0.8027893 0.8164678 #>  [570,] 0.6306746 0.6434362 0.6681253 #>  [571,] 0.7335899 0.7669199 0.7701144 #>  [572,] 1.2529339 1.3409754 1.3654288 #>  [573,] 0.7995944 0.8114099 0.8206699 #>  [574,] 0.6725759 0.6792826 0.7130495 #>  [575,] 0.5415387 0.5578793 0.5582641 #>  [576,] 0.9250218 0.9656663 0.9997240 #>  [577,] 0.7601344 0.7930202 0.8017151 #>  [578,] 0.7390033 0.7565201 0.8048172 #>  [579,] 0.7378208 0.7437863 0.7442070 #>  [580,] 0.6067695 0.6734665 0.6860507 #>  [581,] 0.6446966 0.6470026 0.6475727 #>  [582,] 1.1051998 1.2248730 1.2342312 #>  [583,] 0.5564093 0.5689050 0.5718871 #>  [584,] 0.8307034 0.8377634 0.8638260 #>  [585,] 1.0503103 1.0917530 1.0998366 #>  [586,] 1.2200072 1.2390880 1.2874552 #>  [587,] 0.8514104 0.9315502 0.9340461 #>  [588,] 1.1441249 1.2393866 1.2785847 #>  [589,] 0.5262250 0.5511658 0.5624790 #>  [590,] 0.8187051 0.8447163 0.8715072 #>  [591,] 0.7006285 0.7035262 0.7594024 #>  [592,] 0.7026732 0.7656853 0.7742677 #>  [593,] 0.6014520 0.6209301 0.6280897 #>  [594,] 1.1350001 1.2079282 1.2147532 #>  [595,] 0.6466419 0.6492755 0.6499316 #>  [596,] 0.8666847 0.8673748 0.8681628 #>  [597,] 0.6662186 0.7065698 0.7281721 #>  [598,] 0.6223004 0.6345191 0.6411255 #>  [599,] 0.7638726 0.7919155 0.8016725 #>  [600,] 1.2684352 1.2835906 1.3160226 #>  [601,] 0.5155907 0.5303061 0.5886536 #>  [602,] 0.5240128 0.5507693 0.6293948 #>  [603,] 0.5695790 0.5708486 0.5770662 #>  [604,] 0.8032455 0.8356082 0.8471021 #>  [605,] 0.5121097 0.5174102 0.5223578 #>  [606,] 0.7288261 0.7316538 0.7437043 #>  [607,] 0.7082764 0.7095461 0.7676551 #>  [608,] 0.5176903 0.5726426 0.5771768 #>  [609,] 1.0476398 1.0629767 1.0734867 #>  [610,] 0.6868528 0.7053972 0.7110289 #>  [611,] 0.7941338 0.8596603 0.8659015 #>  [612,] 0.6725527 0.7556196 0.7731929 #>  [613,] 0.7244878 0.7351809 0.7529393 #>  [614,] 1.2164773 1.2291282 1.2310098 #>  [615,] 0.6773804 0.7233039 0.7303336 #>  [616,] 0.7575305 0.7787227 0.7875088 #>  [617,] 0.9540578 0.9777319 0.9866804 #>  [618,] 1.4352250 1.4749679 1.4931422 #>  [619,] 0.5348381 0.5380946 0.5631462 #>  [620,] 1.1563623 1.1637227 1.1805013 #>  [621,] 0.5358940 0.5919004 0.6023910 #>  [622,] 1.6239287 1.6366489 1.6604024 #>  [623,] 0.5738802 0.6143111 0.6284892 #>  [624,] 0.4471266 0.5441749 0.5828953 #>  [625,] 0.6171621 0.7067141 0.7601828 #>  [626,] 1.7252742 1.8344280 1.8524217 #>  [627,] 0.8231362 0.8351031 0.9077773 #>  [628,] 0.7580258 0.7880545 0.8047819 #>  [629,] 0.7425966 0.7430631 0.7597606 #>  [630,] 0.8803086 0.8851060 0.9175344 #>  [631,] 1.0296380 1.0638883 1.0824596 #>  [632,] 1.5065179 1.6459014 1.6619717 #>  [633,] 0.7850979 0.7919712 0.7935451 #>  [634,] 0.9474298 1.0037335 1.0076667 #>  [635,] 0.7119851 0.7172273 0.7241422 #>  [636,] 0.7548253 0.7597481 0.8151782 #>  [637,] 0.7436965 0.7535965 0.7831478 #>  [638,] 0.6255646 0.6526818 0.6798351 #>  [639,] 0.7660291 0.7681734 0.7683442 #>  [640,] 0.5503343 0.5508472 0.5980931 #>  [641,] 0.8648049 0.9444048 0.9527809 #>  [642,] 0.7358185 0.7997382 0.8006226 #>  [643,] 0.9034527 0.9540060 0.9678328 #>  [644,] 2.4717902 2.5096127 2.5615304 #>  [645,] 0.6191064 0.6224116 0.6649301 #>  [646,] 0.7978832 0.8284770 0.8360591 #>  [647,] 0.9320430 0.9399527 0.9477255 #>  [648,] 1.3411025 1.3461907 1.4076908 #>  [649,] 0.7107938 0.7167198 0.7309560 #>  [650,] 0.9269911 0.9812354 0.9940802 #>  [651,] 0.9070331 0.9093026 0.9242324 #>  [652,] 0.5284993 0.5461826 0.5623854 #>  [653,] 0.7673573 0.7692360 0.8053898 #>  [654,] 0.7547133 0.7584904 0.8250231 #>  [655,] 1.5421070 1.5844493 1.6221478 #>  [656,] 0.7345390 0.7630795 0.7659655 #>  [657,] 0.8964843 0.9018734 0.9053446 #>  [658,] 0.5359161 0.5439844 0.5461826 #>  [659,] 0.9444048 0.9504574 0.9597441 #>  [660,] 0.9555831 0.9841186 0.9981651 #>  [661,] 1.1167174 1.1725109 1.1848144 #>  [662,] 0.8355436 0.8386198 0.8459161 #>  [663,] 0.9785282 0.9819270 0.9866417 #>  [664,] 0.5883125 0.5966398 0.6091409 #>  [665,] 0.8055734 0.8227603 0.8230563 #>  [666,] 1.0445103 1.0734619 1.0741231 #>  [667,] 0.7270702 0.8469485 0.8764149 #>  [668,] 0.7105933 0.7605897 0.7950090 #>  [669,] 0.8081914 0.8103686 0.8406065 #>  [670,] 0.8095136 0.9092680 0.9672832 #>  [671,] 0.7363122 0.7619395 0.8191598 #>  [672,] 0.7113880 0.7153931 0.8131651 #>  [673,] 1.0702777 1.0705108 1.0751322 #>  [674,] 0.6547079 0.6866309 0.6936098 #>  [675,] 0.7716950 0.8056514 0.8410720 #>  [676,] 1.0670114 1.0903416 1.2005463 #>  [677,] 0.7385535 0.7460606 0.7577744 #>  [678,] 1.0464038 1.0624691 1.1927402 #>  [679,] 0.7805570 0.7824505 0.8030343 #>  [680,] 0.6548008 0.6597545 0.6730196 #>  [681,] 1.0722590 1.0903974 1.0937161 #>  [682,] 0.6882590 0.6989156 0.7295030 #>  [683,] 0.7193480 0.7893083 0.7963273 #>  [684,] 0.6009259 0.6172196 0.6221576 #>  [685,] 1.2788872 1.2990998 1.3366333 #>  [686,] 1.3063766 1.3743385 1.3813290 #>  [687,] 0.5045291 0.5317333 0.5383248 #>  [688,] 0.8622749 0.8919790 0.8963433 #>  [689,] 0.5630331 0.5671933 0.6009033 #>  [690,] 0.6495725 0.7126974 0.7228706 #>  [691,] 0.6452502 0.6497402 0.6525518 #>  [692,] 0.6529372 0.6540926 0.6660552 #>  [693,] 0.8702550 0.8969771 0.8986714 #>  [694,] 0.6245017 0.6458991 0.6625639 #>  [695,] 0.8047034 0.8165996 0.8225497 #>  [696,] 0.8590415 0.8591852 0.8813455 #>  [697,] 0.7168057 0.7684124 0.7917788 #>  [698,] 1.4709704 1.4775470 1.4942782 #>  [699,] 0.4531888 0.5017149 0.5479756 #>  [700,] 0.7329587 0.7427499 0.7628858 #>  [701,] 1.1974052 1.2177584 1.2386148 #>  [702,] 0.9661438 0.9742568 0.9747173 #>  [703,] 1.2518350 1.2582436 1.3085084 #>  [704,] 0.9040167 0.9046276 0.9289277 #>  [705,] 0.4880021 0.5116955 0.5193765 #>  [706,] 0.6800894 0.6945520 0.6954666 #>  [707,] 1.0738071 1.1030842 1.1246912 #>  [708,] 0.6517854 0.6518902 0.6563096 #>  [709,] 0.8533320 0.8674131 0.8768613 #>  [710,] 0.6388721 0.6865766 0.6961337 #>  [711,] 0.9504846 1.0208493 1.0224300 #>  [712,] 0.5567739 0.5618796 0.5668762 #>  [713,] 0.6535339 0.7061848 0.7289607 #>  [714,] 0.8244259 0.9807552 1.0288089 #>  [715,] 0.8033420 0.8131396 0.8134786 #>  [716,] 0.7599733 0.7713052 0.7865100 #>  [717,] 0.5021878 0.5378858 0.5435034 #>  [718,] 0.6185189 0.6313301 0.6417255 #>  [719,] 0.9175625 0.9244670 0.9939002 #>  [720,] 1.3620916 1.4773415 1.4880456 #>  [721,] 0.8229808 0.8314148 0.8411741 #>  [722,] 1.3161240 1.3396736 1.3892325 #>  [723,] 0.8593323 0.8783001 0.8919169 #>  [724,] 0.7351795 0.7682724 0.8005065 #>  [725,] 1.0294590 1.0751958 1.1125055 #>  [726,] 0.8160279 0.8237431 0.8431165 #>  [727,] 0.8061379 0.8426053 0.8642680 #>  [728,] 0.5472816 0.5540647 0.6223924 #>  [729,] 0.9963050 1.0157343 1.0186377 #>  [730,] 0.6151973 0.6219973 0.6551338 #>  [731,] 0.7799816 0.7952463 0.8218263 #>  [732,] 0.6417348 0.6599865 0.6680538 #>  [733,] 0.7898526 0.8192357 0.8477498 #>  [734,] 0.7442463 0.7974642 0.8089014 #>  [735,] 1.4540060 1.5146366 1.5452173 #>  [736,] 0.9975635 0.9999207 1.0383387 #>  [737,] 1.4733477 1.5093559 1.5207121 #>  [738,] 0.8621565 0.8751074 0.8818817 #>  [739,] 0.5798542 0.6157630 0.6367020 #>  [740,] 0.6323688 0.6360769 0.6458689 #>  [741,] 0.6007774 0.6070534 0.6296501 #>  [742,] 0.8945406 0.8980431 0.9249597 #>  [743,] 0.6273655 0.6379144 0.7248809 #>  [744,] 1.4432738 1.4535732 1.4550374 #>  [745,] 0.6615927 0.6686808 0.6851402 #>  [746,] 1.4638895 1.4741407 1.4945673 #>  [747,] 0.6099010 0.6125269 0.6368952 #>  [748,] 0.5524104 0.5788040 0.5819431 #>  [749,] 0.8502017 0.8566232 0.8732358 #>  [750,] 1.0655618 1.0730120 1.0777865 #>  [751,] 0.7442070 0.7811311 0.8345023 #>  [752,] 0.4858087 0.5359753 0.5482046 #>  [753,] 0.6147454 0.6671276 0.7521043 #>  [754,] 0.8187191 0.8382279 0.8382757 #>  [755,] 0.7893370 0.8045765 0.8069467 #>  [756,] 0.7881000 0.8010065 0.8272963 #>  [757,] 0.5318109 0.5642136 0.5772901 #>  [758,] 0.7075729 0.7114989 0.7160563 #>  [759,] 0.8022305 0.8362839 0.8542169 #>  [760,] 0.6216147 0.6580449 0.6587454 #>  [761,] 0.7863705 0.7926848 0.7975186 #>  [762,] 0.6083228 0.6147454 0.6927031 #>  [763,] 0.5597784 0.5606774 0.5683977 #>  [764,] 1.1989971 1.2194943 1.2439524 #>  [765,] 0.6126398 0.6459568 0.6509839 #>  [766,] 0.6403172 0.6555965 0.6603943 #>  [767,] 0.8503242 0.8569323 0.8960152 #>  [768,] 0.7586657 0.7654303 0.7794644 #>  [769,] 0.7324348 0.7507996 0.7543045 #>  [770,] 1.1273220 1.1375138 1.1435162 #>  [771,] 0.5591362 0.5744581 0.6006617 #>  [772,] 0.6694105 0.6865249 0.6990475 #>  [773,] 0.6221397 0.6472786 0.6525513 #>  [774,] 0.5655121 0.6615364 0.6698510 #>  [775,] 1.3372905 1.3543248 1.3584166 #>  [776,] 0.6185189 0.6253014 0.6747781 #>  [777,] 0.6949465 0.7065814 0.7154106 #>  [778,] 0.6369043 0.6440858 0.6459604 #>  [779,] 0.5003487 0.5321241 0.5607186 #>  [780,] 1.0871213 1.1138950 1.1266378 #>  [781,] 0.8247680 0.8313680 0.8791103 #>  [782,] 0.6070534 0.7414587 0.7733867 #>  [783,] 0.8068634 0.8337193 0.8493387 #>  [784,] 0.6457408 0.7016643 0.7048638 #>  [785,] 0.7548614 0.7729185 0.7876731 #>  [786,] 1.0433574 1.0450757 1.0494890 #>  [787,] 1.2506654 1.2773448 1.2987341 #>  [788,] 0.5712544 0.6457970 0.6641358 #>  [789,] 0.7576680 0.7581988 0.7632992 #>  [790,] 0.7610605 0.7698679 0.8334903 #>  [791,] 0.7574440 0.7854328 0.8157033 #>  [792,] 0.6413127 0.7040478 0.7312258 #>  [793,] 1.0092087 1.0110830 1.0373614 #>  [794,] 1.0529037 1.0588049 1.1273791 #>  [795,] 0.6414686 0.6494443 0.6793651 #>  [796,] 0.9800975 0.9913626 1.0449478 #>  [797,] 0.6655731 0.6798108 0.6945009 #>  [798,] 1.0664339 1.0751524 1.0770154 #>  [799,] 0.7511601 0.7543690 0.7617204 #>  [800,] 0.6633166 0.6922430 0.7182691 #>  [801,] 0.8104777 0.8510327 0.8584367 #>  [802,] 1.2863371 1.3033656 1.3293598 #>  [803,] 0.6418545 0.6638343 0.6822225 #>  [804,] 0.5997069 0.7683455 0.7705941 #>  [805,] 0.6665070 0.6807229 0.7537331 #>  [806,] 0.7243669 0.7280104 0.7427108 #>  [807,] 0.6968046 0.7001319 0.7021294 #>  [808,] 0.7699665 0.7786234 0.7812579 #>  [809,] 0.7452692 0.7457071 0.7600168 #>  [810,] 0.7844647 0.8125506 0.8402202 #>  [811,] 0.9867099 0.9883132 0.9943872 #>  [812,] 1.1431776 1.1787053 1.2001852 #>  [813,] 0.6819476 0.7437657 0.7551296 #>  [814,] 0.6628525 0.6765517 0.6928077 #>  [815,] 0.9548882 0.9631204 1.0354977 #>  [816,] 0.7295030 0.7684285 0.8033879 #>  [817,] 0.7061065 0.8119412 0.8452654 #>  [818,] 0.6280414 0.6829760 0.7365723 #>  [819,] 0.7003315 0.7061397 0.7242816 #>  [820,] 0.7859152 0.7897465 0.8098944 #>  [821,] 0.7017763 0.7409183 0.8784718 #>  [822,] 0.7660615 0.7761465 0.7853701 #>  [823,] 0.7991946 0.8191275 0.8211285 #>  [824,] 1.2956004 1.3471961 1.3500053 #>  [825,] 0.9328732 0.9376552 0.9406661 #>  [826,] 0.6593720 0.7013428 0.7110555 #>  [827,] 0.7413770 0.7451825 0.7505073 #>  [828,] 1.3934901 1.4482065 1.4505676 #>  [829,] 1.4266529 1.4886948 1.6227102 #>  [830,] 1.4255873 1.4503904 1.4631522 #>  [831,] 0.7918192 0.8364643 0.8537475 #>  [832,] 0.6858071 0.7151236 0.7289813 #>  [833,] 0.7794641 0.7966472 0.8180949 #>  [834,] 0.9379641 0.9385246 0.9488498 #>  [835,] 0.6280158 0.6414614 0.6468621 #>  [836,] 1.0601448 1.0647862 1.0657076 #>  [837,] 1.6311476 1.6579477 1.6616264 #>  [838,] 0.6523088 0.6705028 0.6729305 #>  [839,] 1.4625817 1.4927532 1.4945263 #>  [840,] 0.8501345 0.8743788 0.9024251 #>  [841,] 0.5569715 0.5607194 0.6401670 #>  [842,] 0.8097010 0.8109489 0.8180395 #>  [843,] 0.5589871 0.6058008 0.6432996 #>  [844,] 0.9292044 0.9354601 0.9529875 #>  [845,] 0.6597545 0.6598923 0.6721068 #>  [846,] 0.7700655 0.7805570 0.7942507 #>  [847,] 1.2199227 1.2296462 1.2426696 #>  [848,] 0.8644291 0.9845522 1.0083372 #>  [849,] 1.3506966 1.3855734 1.4394814 #>  [850,] 1.1520439 1.2076360 1.2228369 #>  [851,] 0.7442111 0.7887564 0.8024544 #>  [852,] 0.9221459 0.9268490 0.9279015 #>  [853,] 1.0124648 1.0352098 1.0367178 #>  [854,] 0.6768566 0.6796991 0.7124849 #>  [855,] 1.1676306 1.1880156 1.2481878 #>  [856,] 1.5004740 1.5106218 1.5366781 #>  [857,] 1.3128360 1.3223973 1.3413295 #>  [858,] 0.6345156 0.6382422 0.6755490 #>  [859,] 0.8713037 0.8947971 0.9471454 #>  [860,] 0.5251973 0.5452705 0.5762531 #>  [861,] 0.7563347 0.7968124 0.7973349 #>  [862,] 0.9761800 0.9977222 1.0057677 #>  [863,] 0.5793923 0.5913809 0.5984719 #>  [864,] 0.7665226 0.7775998 0.8047819 #>  [865,] 0.7332812 0.7434076 0.7531991 #>  [866,] 0.6109003 0.6294275 0.7692232 #>  [867,] 0.9369640 0.9411373 0.9637529 #>  [868,] 0.9697275 0.9697300 0.9978529 #>  [869,] 0.5428712 0.5920916 0.6186698 #>  [870,] 0.5241810 0.5292135 0.5468664 #>  [871,] 0.7817824 0.7859846 0.7912773 #>  [872,] 1.4962481 1.5660922 1.5764536 #>  [873,] 0.4740565 0.5118320 0.5545067 #>  [874,] 0.7616043 0.7656390 0.7722974 #>  [875,] 0.5942006 0.6300187 0.6325627 #>  [876,] 0.8935901 0.9007427 0.9158237 #>  [877,] 1.3521985 1.3662430 1.3669513 #>  [878,] 0.6922430 0.6932407 0.7324947 #>  [879,] 0.8423239 0.8436320 0.8511564 #>  [880,] 0.5325155 0.5428312 0.5686183 #>  [881,] 0.7392166 0.7702500 0.7783493 #>  [882,] 0.6612932 0.6697886 0.6986785 #>  [883,] 0.7247906 0.7356491 0.7535407 #>  [884,] 0.9418483 0.9721861 0.9976520 #>  [885,] 0.8220237 0.8356064 0.8396415 #>  [886,] 0.8668565 0.8775906 0.8892321 #>  [887,] 0.7716324 0.8310271 0.8679539 #>  [888,] 0.8482010 0.8885938 0.8900224 #>  [889,] 0.5598632 0.5708486 0.6151749 #>  [890,] 0.7495871 0.7510241 0.7577017 #>  [891,] 0.6467386 0.6541176 0.7037881 #>  [892,] 1.4672235 1.4675502 1.5323173 #>  [893,] 1.0213896 1.0830565 1.0911461 #>  [894,] 1.1673990 1.1723557 1.1762692 #>  [895,] 0.7843570 0.7896239 0.7966472 #>  [896,] 0.8396755 0.8577266 0.8751215 #>  [897,] 0.6990349 0.7123459 0.7131977 #>  [898,] 0.7363613 0.7395484 0.7437643 #>  [899,] 1.3659049 1.3727317 1.3740764 #>  [900,] 0.6866936 0.6951659 0.7187232 #>  [901,] 1.0552413 1.0952895 1.1151833 #>  [902,] 1.5911340 1.5926916 1.5942111 #>  [903,] 1.0363572 1.0366701 1.0487084 #>  [904,] 0.6565475 0.6590733 0.6657522 #>  [905,] 1.3986018 1.4284469 1.4456722 #>  [906,] 0.6309082 0.6525902 0.6628970 #>  [907,] 0.7324947 0.7430718 0.7455076 #>  [908,] 0.6771071 0.7165288 0.7660291 #>  [909,] 1.1472587 1.3209149 1.3376905 #>  [910,] 0.7708390 0.7854220 0.7894649 #>  [911,] 0.7349732 0.7591687 0.7601879 #>  [912,] 1.0683309 1.0903416 1.0920130 #>  [913,] 0.8466499 0.8614730 0.8763801 #>  [914,] 1.0487760 1.1052623 1.1565164 #>  [915,] 1.0375482 1.0749380 1.1191841 #>  [916,] 0.8344835 0.8420471 0.8614190 #>  [917,] 0.5566050 0.5648737 0.5702927 #>  [918,] 0.7206994 0.7495871 0.7573808 #>  [919,] 0.8457246 0.8473334 0.8970413 #>  [920,] 0.6912278 0.7279951 0.7506216 #>  [921,] 0.6108094 0.6168993 0.6206132 #>  [922,] 1.1158712 1.1812501 1.2164773 #>  [923,] 0.5599972 0.5755021 0.5848577 #>  [924,] 0.6249022 0.6865249 0.7002475 #>  [925,] 0.6085746 0.6300187 0.6402119 #>  [926,] 0.6801637 0.7023126 0.7136502 #>  [927,] 0.5402518 0.5480086 0.5489797 #>  [928,] 0.8533541 0.9251153 0.9547777 #>  [929,] 0.5282458 0.5378320 0.5554105 #>  [930,] 1.6677217 1.6940342 1.6983756 #>  [931,] 0.8299168 0.8613244 0.8640921 #>  [932,] 0.8721525 0.8856719 0.8866785 #>  [933,] 0.7905920 0.8393238 0.8491993 #>  [934,] 1.2870225 1.3760477 1.4217933 #>  [935,] 0.7488311 0.8024811 0.8138999 #>  [936,] 0.8035544 0.8078775 0.8341101 #>  [937,] 1.1877580 1.2153451 1.2190296 #>  [938,] 0.7535625 0.7695003 0.7978791 #>  [939,] 1.1853239 1.2249658 1.2359674 #>  [940,] 0.7281257 0.7616043 0.8022305 #>  [941,] 0.5210050 0.5372010 0.5876651 #>  [942,] 0.4914041 0.5380946 0.5715138 #>  [943,] 0.9352506 1.0089246 1.0536012 #>  [944,] 0.5120623 0.5327615 0.5505817 #>  [945,] 0.6418545 0.6588883 0.6765517 #>  [946,] 0.6058008 0.6602667 0.6691141 #>  [947,] 1.2946552 1.3167706 1.3192843 #>  [948,] 0.9364368 0.9499167 0.9724920 #>  [949,] 0.6690310 0.6759248 0.7089592 #>  [950,] 0.9492849 0.9682992 1.0370443 #>  [951,] 0.8555979 0.8992551 0.9337327 #>  [952,] 1.3191120 1.3273905 1.3434716 #>  [953,] 0.6486643 0.6558416 0.6560416 #>  [954,] 0.5318109 0.5359161 0.5518192 #>  [955,] 0.8332531 0.8614159 0.8763303 #>  [956,] 0.8644643 0.8751074 0.8967691 #>  [957,] 1.0077660 1.0702777 1.1133433 #>  [958,] 1.2713827 1.2846231 1.3213154 #>  [959,] 1.4002147 1.4588897 1.4634157 #>  [960,] 0.6068476 0.6191064 0.6309082 #>  [961,] 0.7375854 0.7581922 0.7821429 #>  [962,] 0.7905489 0.8050708 0.8466474 #>  [963,] 1.7289006 1.7326041 1.7573803 #>  [964,] 0.7066357 0.7069726 0.7274146 #>  [965,] 0.6527446 0.6908249 0.6916150 #>  [966,] 0.7153629 0.7209967 0.7377619 #>  [967,] 0.6046089 0.6306458 0.6449557 #>  [968,] 0.8621568 0.8628212 0.8650919 #>  [969,] 0.8441430 0.8472799 0.8497146 #>  [970,] 1.0738249 1.0920461 1.1605544 #>  [971,] 0.8898451 0.9090649 0.9104134 #>  [972,] 0.6877089 0.7281739 0.7432730 #>  [973,] 0.8867971 0.9109356 0.9375436 #>  [974,] 0.9033628 0.9577043 1.0043520 #>  [975,] 0.6530011 0.6621642 0.6754462 #>  [976,] 0.6753192 0.7313764 0.7479387 #>  [977,] 0.6608121 0.6643890 0.6893433 #>  [978,] 1.6769480 1.7421969 1.7520489 #>  [979,] 0.9319987 0.9331561 0.9622858 #>  [980,] 1.4584759 1.5120518 1.5170963 #>  [981,] 0.6833282 0.7267305 0.8017374 #>  [982,] 0.8744906 0.8747362 0.8756772 #>  [983,] 0.5130487 0.5281382 0.5384694 #>  [984,] 0.6347627 0.6368952 0.6421195 #>  [985,] 0.5480086 0.5587282 0.5799551 #>  [986,] 0.7279951 0.7511080 0.7789033 #>  [987,] 0.7584440 0.7698812 0.7801462 #>  [988,] 0.7178039 0.7723067 0.7836681 #>  [989,] 0.4628002 0.4644055 0.4718671 #>  [990,] 0.7415261 0.7768351 0.7999838 #>  [991,] 0.5492017 0.6114482 0.6645475 #>  [992,] 0.7043284 0.7164410 0.7177328 #>  [993,] 0.9105165 0.9226537 0.9493760 #>  [994,] 0.6422609 0.6429186 0.6919340 #>  [995,] 1.1640049 1.1851507 1.2530949 #>  [996,] 0.9568611 0.9890690 1.0037660 #>  [997,] 0.7149990 0.7619953 0.7938210 #>  [998,] 0.6596286 0.6785773 0.6862083 #>  [999,] 1.4905846 1.5584941 1.6036529 #> [1000,] 0.5487745 0.5848577 0.5861700 #>"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_log_rank_threshold.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"Compute log-rank test p-value difference two survival curves obtained splitting dataset \"low\" \"high\" risk group using possible relative-risk thresholds.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_log_rank_threshold.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"","code":"tof_find_log_rank_threshold(input_data, relative_risk_col, time_col, event_col)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_log_rank_threshold.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"input_data tbl_df data.frame observation row. relative_risk_col unquote column name indicating column contains relative-risk estimates observation. time_col unquoted column name indicating column contains true time--event information observation. event_col unquoted column name indicating column contains outcome (event censorship). Must binary column - values  either 0 1 (1 indicating adverse event 0 indicating  censorship) FALSE TRUE (TRUE indicating adverse event FALSE indicating censorship).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_log_rank_threshold.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"tibble 3 columns: \"candidate_thresholds\" (relative-risk threshold used log-rank test), \"log_rank_p_val\" (p-values log-rank tests) \"is_best\" (logical value indicating candidate threshold gave optimal, .e. smallest, p-value).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_panel_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Use tidytof's opinionated heuristic for extracted a high-dimensional cytometry panel's metal-antigen pairs\nfrom a flowFrame (read from a .fcs file.) — tof_find_panel_info","title":"Use tidytof's opinionated heuristic for extracted a high-dimensional cytometry panel's metal-antigen pairs\nfrom a flowFrame (read from a .fcs file.) — tof_find_panel_info","text":"Using character vectors obtained `name` `desc` columns parameters data flowFrame, figure high-dimensional cytometry panel used collect data return tidy tibble.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_panel_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use tidytof's opinionated heuristic for extracted a high-dimensional cytometry panel's metal-antigen pairs\nfrom a flowFrame (read from a .fcs file.) — tof_find_panel_info","text":"","code":"tof_find_panel_info(input_flowFrame)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_panel_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use tidytof's opinionated heuristic for extracted a high-dimensional cytometry panel's metal-antigen pairs\nfrom a flowFrame (read from a .fcs file.) — tof_find_panel_info","text":"input_flowFrame raw flowFrame (just read .fcs file) high-dimensional cytometry panel extracted","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_panel_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use tidytof's opinionated heuristic for extracted a high-dimensional cytometry panel's metal-antigen pairs\nfrom a flowFrame (read from a .fcs file.) — tof_find_panel_info","text":"tibble 2 columns (`metals` `antigens`) correspond metals antigens high-dimensional cytometry panel used data acquisition.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_fit_split.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a glmnet model and calculate performance metrics using a single rsplit object — tof_fit_split","title":"Fit a glmnet model and calculate performance metrics using a single rsplit object — tof_fit_split","text":"function trains glmnet model training set rsplit object, calculates performance metrics model validation/holdout set combinations mixture penalty hyperparameters provided hyperparameter grid.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_fit_split.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a glmnet model and calculate performance metrics using a single rsplit object — tof_fit_split","text":"","code":"tof_fit_split(   split_data,   prepped_recipe,   hyperparameter_grid,   model_type,   outcome_colnames )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_fit_split.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a glmnet model and calculate performance metrics using a single rsplit object — tof_fit_split","text":"split_data `rsplit` object rsample package. Alternatively, unsplit tbl_df can provided, though recommended. prepped_recipe trained recipe hyperparameter_grid tibble containing hyperparameter values tune. Can created using tof_create_grid model_type string representing type glmnet model fit. outcome_colnames Quoted column names indicating columns data fit represent outcome variables (others assumed predictors).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_fit_split.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit a glmnet model and calculate performance metrics using a single rsplit object — tof_fit_split","text":"tibble number rows input hyperparameter grid. row represents combination mixture penalty, column contains performance metric fitted glmnet model `split_data`'s holdout set. specific performance metrics depend type model fit: \"linear\" mean-squared error (`mse`) mean absolute error (`mae`) \"two-class\" binomial deviance (`binomial_deviance`); misclassification error rate `misclassification_error`; area receiver-operating curve (`roc_auc`); `mse` `mse` \"multiclass\" multinomial deviance (`multinomial_deviance`); misclassification error rate `misclassification_error`; area receiver-operating curve (`roc_auc`) computed using Hand-Till method roc_auc; `mse` `mse` \"survival\" negative log2-transformed partial likelihood (`neg_log_partial_likelihood`) Harrel's concordance index (often simply called \"C\"; `concordance_index`)","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_fit_split.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fit a glmnet model and calculate performance metrics using a single rsplit object — tof_fit_split","text":"Harrel Jr, F. E. Lee, K. L. Mark, D. B. (1996) Tutorial biostatistics: multivariable prognostic models: issues developing models, evaluating assumptions adequacy, measuring reducing error, Statistics Medicine, 15, pages 361–387.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_generate_palette.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a color palette using tidytof. — tof_generate_palette","title":"Generate a color palette using tidytof. — tof_generate_palette","text":"function generates color palette based color palette author's favorite pokemon.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_generate_palette.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a color palette using tidytof. — tof_generate_palette","text":"","code":"tof_generate_palette(num_colors)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_generate_palette.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a color palette using tidytof. — tof_generate_palette","text":"num_colors integer specifying number colors like generate.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_generate_palette.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a color palette using tidytof. — tof_generate_palette","text":"character vector hex codes specifying colors palette.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_generate_palette.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a color palette using tidytof. — tof_generate_palette","text":"","code":"tof_generate_palette(num_colors = 5L) #> [1] \"#D86020\" \"#28A8B8\" \"#F89040\" \"#D0D0D0\" \"#903000\""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_mixture.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s optimal mixture (alpha) value — tof_get_model_mixture","title":"Get a `tof_model`'s optimal mixture (alpha) value — tof_get_model_mixture","text":"Get `tof_model`'s optimal mixture (alpha) value","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_mixture.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s optimal mixture (alpha) value — tof_get_model_mixture","text":"","code":"tof_get_model_mixture(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_mixture.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s optimal mixture (alpha) value — tof_get_model_mixture","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_mixture.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s optimal mixture (alpha) value — tof_get_model_mixture","text":"numeric value","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_mixture.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s optimal mixture (alpha) value — tof_get_model_mixture","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_mixture(regression_model) #> [1] 0"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_outcomes.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s outcome variable name(s) — tof_get_model_outcomes","title":"Get a `tof_model`'s outcome variable name(s) — tof_get_model_outcomes","text":"Get `tof_model`'s outcome variable name(s)","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_outcomes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s outcome variable name(s) — tof_get_model_outcomes","text":"","code":"tof_get_model_outcomes(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_outcomes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s outcome variable name(s) — tof_get_model_outcomes","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_outcomes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s outcome variable name(s) — tof_get_model_outcomes","text":"character vector","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_outcomes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s outcome variable name(s) — tof_get_model_outcomes","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_outcomes(regression_model) #> [1] \"outcome\""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_penalty.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s optimal penalty (lambda) value — tof_get_model_penalty","title":"Get a `tof_model`'s optimal penalty (lambda) value — tof_get_model_penalty","text":"Get `tof_model`'s optimal penalty (lambda) value","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_penalty.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s optimal penalty (lambda) value — tof_get_model_penalty","text":"","code":"tof_get_model_penalty(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_penalty.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s optimal penalty (lambda) value — tof_get_model_penalty","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_penalty.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s optimal penalty (lambda) value — tof_get_model_penalty","text":"numeric value","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_penalty.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s optimal penalty (lambda) value — tof_get_model_penalty","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_penalty(regression_model) #> [1] 1"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_training_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s training data — tof_get_model_training_data","title":"Get a `tof_model`'s training data — tof_get_model_training_data","text":"Get `tof_model`'s training data","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_training_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s training data — tof_get_model_training_data","text":"","code":"tof_get_model_training_data(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_training_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s training data — tof_get_model_training_data","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_training_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s training data — tof_get_model_training_data","text":"tibble (non-preprocessed) training data used fit model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_training_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s training data — tof_get_model_training_data","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_training_data(regression_model) #> # A tibble: 100 × 9 #>    sample   cd45 pstat5   cd34 outcome class  multiclass event time_to_event #>    <chr>   <dbl>  <dbl>  <dbl>   <dbl> <fct>  <fct>      <dbl>         <dbl> #>  1 1      0.971   0.722 0.598    6.91  class1 class1         0          6.98 #>  2 51     0.274   0.241 0.696    2.51  class2 class2         1          9.88 #>  3 41     0.0148  0.613 0.986    0.824 class2 class2         1         11.4  #>  4 20     0.648   0.353 0.600    1.93  class2 class1         0         11.9  #>  5 86     0.904   0.356 0.781    4.37  class1 class3         1         12.1  #>  6 17     0.903   0.335 0.324    4.23  class1 class1         0          5.22 #>  7 34     0.883   0.119 0.977    2.60  class2 class2         1          9.16 #>  8 93     0.166   0.677 0.0583   2.87  class2 class3         1          7.88 #>  9 67     0.124   0.264 0.588    1.49  class2 class3         1         11.4  #> 10 31     0.990   0.663 0.252    6.06  class1 class2         1         10.8  #> # ℹ 90 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s model type — tof_get_model_type","title":"Get a `tof_model`'s model type — tof_get_model_type","text":"Get `tof_model`'s model type","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s model type — tof_get_model_type","text":"","code":"tof_get_model_type(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s model type — tof_get_model_type","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s model type — tof_get_model_type","text":"string","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_type.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s model type — tof_get_model_type","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_type(regression_model) #> [1] \"linear\""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_x.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s processed predictor matrix (for glmnet) — tof_get_model_x","title":"Get a `tof_model`'s processed predictor matrix (for glmnet) — tof_get_model_x","text":"Get `tof_model`'s processed predictor matrix (glmnet)","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_x.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s processed predictor matrix (for glmnet) — tof_get_model_x","text":"","code":"tof_get_model_x(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_x.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s processed predictor matrix (for glmnet) — tof_get_model_x","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_x.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s processed predictor matrix (for glmnet) — tof_get_model_x","text":"x value formatted glmnet","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_x.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s processed predictor matrix (for glmnet) — tof_get_model_x","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_x(regression_model) #>               cd45      pstat5         cd34 #>   [1,] -0.77922805  1.24682317 -0.292496809 #>   [2,]  1.03283223  0.53351234 -1.160388764 #>   [3,]  0.48827292 -0.09537686 -1.496123107 #>   [4,]  0.14069560  0.25665041  0.086568491 #>   [5,]  1.62477180 -0.57942986 -0.112768854 #>   [6,]  0.52529903  0.04544393 -1.141232550 #>   [7,] -0.80077091 -1.58282093 -0.488987318 #>   [8,] -1.17367624  1.69285366 -0.544326585 #>   [9,] -0.64488959 -0.19122891 -1.031325151 #>  [10,]  0.07002697 -0.59838391  0.773808401 #>  [11,]  0.93089215 -0.77052216 -1.424591611 #>  [12,] -0.02178463 -0.97119593 -0.868222668 #>  [13,]  0.32998838  1.48178704 -0.502313165 #>  [14,] -0.74866143 -0.52678497  1.543523974 #>  [15,]  0.02502026  1.19529685  0.035795885 #>  [16,]  1.07740267 -0.32977703  0.472792418 #>  [17,] -0.62181359 -0.91957861 -0.958067111 #>  [18,] -0.39382852 -1.23578739  0.618316751 #>  [19,]  0.42159456  1.28092178 -1.455928261 #>  [20,] -1.30402579 -0.74278575 -1.399963712 #>  [21,] -1.16450518 -1.60139939  0.005165964 #>  [22,] -0.34461856 -0.60724621 -0.610182658 #>  [23,]  0.50848935 -1.20930026  1.365608028 #>  [24,]  1.66349205 -0.55609573  1.366389797 #>  [25,] -1.41318484 -0.46102935  0.914073611 #>  [26,] -0.11284472  1.03266530 -1.355294320 #>  [27,] -0.46091507 -0.30042502  0.129961357 #>  [28,] -0.44081447 -0.87674660  0.666981841 #>  [29,] -1.22908973 -1.14558256 -0.804468950 #>  [30,]  0.97246959 -0.85535859 -0.329376944 #>  [31,]  1.51781931  1.75871229 -1.222387382 #>  [32,] -1.22443667  0.66795597  0.837031279 #>  [33,]  0.50601379  1.47730551 -0.178931978 #>  [34,] -0.66705250  0.19614994 -1.225703404 #>  [35,] -0.68363806  1.19509523  1.743923836 #>  [36,] -1.53448131  1.39352125  0.798932163 #>  [37,]  1.18800480 -0.77747092 -0.519164259 #>  [38,] -1.14695452  1.74129962 -1.442403908 #>  [39,] -0.73723894 -1.02377454 -0.787498119 #>  [40,] -1.54820941 -1.38771535  1.681837656 #>  [41,] -0.65194782  0.05272989  0.614670113 #>  [42,]  0.94640954  1.42430959  0.736184512 #>  [43,] -1.23824385  0.96902822 -0.553164089 #>  [44,]  1.49195713 -0.35947354 -0.040494824 #>  [45,]  1.46481567 -0.50150995  1.060891454 #>  [46,] -0.32959048  1.49366428 -0.603615037 #>  [47,] -1.31521704 -0.23008756  0.196930675 #>  [48,] -0.27885450  1.18520215 -0.093886527 #>  [49,] -0.50890012  0.98624117  0.662837847 #>  [50,]  0.85882526  0.89349239  1.546941719 #>  [51,] -1.13897935  1.26513635  1.748445015 #>  [52,] -1.03897025 -1.37765714  0.759226967 #>  [53,]  1.65985738 -1.26849579 -0.221480695 #>  [54,]  1.60081133  0.58750521 -1.104533455 #>  [55,]  1.47005225  1.04807813 -0.508649360 #>  [56,] -1.38630415  1.38953382  0.323403889 #>  [57,] -0.39592240 -1.43559307  0.151455785 #>  [58,]  0.10676225 -0.08175603  0.768051230 #>  [59,]  0.11817813 -0.81569429  0.369737212 #>  [60,]  1.29122868  0.38076277 -0.584274678 #>  [61,] -1.43592495 -1.46307370 -1.204805642 #>  [62,]  0.74468016  0.08380689  1.695475398 #>  [63,]  0.56614423 -0.94666539  1.456160843 #>  [64,]  0.29382812 -1.52554162  1.039074624 #>  [65,] -0.03508727  0.05734213  0.316269075 #>  [66,] -1.20358228  0.37937314 -1.408839951 #>  [67,] -0.36436631 -0.54175946 -0.844545797 #>  [68,]  1.58460876  0.93438988  0.016407964 #>  [69,]  0.48978070  1.71325370 -0.705727819 #>  [70,] -0.98864007 -0.69409330  0.950750764 #>  [71,]  1.63769050  0.55055421  1.525442590 #>  [72,]  0.08377991  0.61976386 -1.378658574 #>  [73,]  0.75512227 -1.44852624  1.022940517 #>  [74,] -0.52403794  1.53049945  1.363178887 #>  [75,] -1.60730946  0.79387315 -1.155098666 #>  [76,]  0.07179686  0.46601658  1.421380948 #>  [77,]  0.80090367  0.42460375 -1.179246450 #>  [78,]  0.46714199  1.17992916 -0.716904133 #>  [79,]  1.71589714 -1.37884797 -1.088468181 #>  [80,] -1.53521189  0.09644515 -1.412850375 #>  [81,]  0.68715208 -0.15515501 -0.760932631 #>  [82,] -0.41267853 -0.96994229  0.751744314 #>  [83,]  0.76265613  1.49068749  0.414532028 #>  [84,] -0.29412627 -1.02328647  1.450404241 #>  [85,] -0.84386199 -0.76747750  0.530047542 #>  [86,] -1.55500072  0.62616869  1.529271522 #>  [87,] -1.08961572  0.90174977  0.015384740 #>  [88,]  0.13048979  0.25311983  0.454107620 #>  [89,] -1.68687070 -0.99776733 -0.693601935 #>  [90,]  1.26561802  1.44904951  0.767626582 #>  [91,]  0.88938654 -0.76809879 -1.015002612 #>  [92,] -1.60682074 -0.90655284 -0.978699611 #>  [93,]  0.32747866 -0.84665166 -0.929492816 #>  [94,]  0.13661612 -0.74726735  1.456766696 #>  [95,]  0.49960293  0.24670498  1.705829017 #>  [96,]  1.17235136  0.24690589 -0.773478694 #>  [97,]  0.90571133  0.84636130 -0.250858506 #>  [98,] -0.11323109 -0.93901935  1.479847658 #>  [99,]  1.36366644 -1.58100315 -0.303307288 #> [100,]  1.39187182 -0.64546316 -1.479365504"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_y.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s processed outcome variable matrix (for glmnet) — tof_get_model_y","title":"Get a `tof_model`'s processed outcome variable matrix (for glmnet) — tof_get_model_y","text":"Get `tof_model`'s processed outcome variable matrix (glmnet)","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_y.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s processed outcome variable matrix (for glmnet) — tof_get_model_y","text":"","code":"tof_get_model_y(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_y.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s processed outcome variable matrix (for glmnet) — tof_get_model_y","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_y.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s processed outcome variable matrix (for glmnet) — tof_get_model_y","text":"y value formatted glmnet","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_y.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s processed outcome variable matrix (for glmnet) — tof_get_model_y","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_y(regression_model) #>   [1]  2.6009891  4.5015827  3.0738863  4.0885244  3.7033724  3.8123591 #>   [7]  2.3673585  5.0527428  7.5266632  3.2465749  3.8377850  2.9735399 #>  [13]  6.0467756  2.2926558  3.8328732  4.9557251  4.8840109  5.9134013 #>  [19]  4.7523882  3.5672634  4.1246215  2.4816778  2.3734854  4.2231337 #>  [25]  3.1410708  3.0873851  4.4030963  4.1430007  3.7096179  3.1482607 #>  [31]  4.8741802  5.2602747  1.3791760  3.3706576  4.0677916  5.4400732 #>  [37]  1.9499751  1.4990938  2.8391534  4.1078848  3.7310306  5.4769863 #>  [43]  3.0513368  5.0444760  3.9780593  3.0819308 -0.2099372  5.4479812 #>  [49]  3.2179865  5.2285649  3.6580381  5.9350099  5.4968023  5.4243290 #>  [55]  5.4404322  3.7408947  3.4707175  7.1674941  1.0057500  5.8661021 #>  [61]  2.9494488  2.8250549  6.1613824  5.7931430  2.2931858  2.6887173 #>  [67]  3.8420713  2.2544827  2.1732201  5.5885368  5.3996356  1.7608525 #>  [73]  1.7226867  3.0568840  1.8078239  6.1473721  3.0306016  0.5748454 #>  [79]  4.2348661  0.9904826  3.2926754  2.0903464  6.3696034  3.5798625 #>  [85]  3.6057191  4.6273375  0.8740694  7.5537695  4.2254881  2.0680927 #>  [91]  1.5939706  2.2286393  0.3818956  3.0213807  3.8064578  5.6930170 #>  [97]  4.8177876  1.8726608  6.1421176  6.0145174"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_panel.html","id":null,"dir":"Reference","previous_headings":"","what":"Get panel information from a tof_tibble — tof_get_panel","title":"Get panel information from a tof_tibble — tof_get_panel","text":"Get panel information tof_tibble","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_panel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get panel information from a tof_tibble — tof_get_panel","text":"","code":"tof_get_panel(tof_tibble)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_panel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get panel information from a tof_tibble — tof_get_panel","text":"tof_tibble `tof_tbl`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_panel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get panel information from a tof_tibble — tof_get_panel","text":"tibble containing information CyTOF panel used data acquisition data contained `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_panel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get panel information from a tof_tibble — tof_get_panel","text":"","code":"input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]] tof_tibble <- tof_read_data(input_file) tof_get_panel(tof_tibble) #> # A tibble: 59 × 2 #>    metals       antigens     #>    <chr>        <chr>        #>  1 Time         Time         #>  2 Event_length Event_length #>  3 Y89          CD45         #>  4 Pd102        empty        #>  5 Pd104        empty        #>  6 Pd105        empty        #>  7 Pd106        empty        #>  8 Pd108        empty        #>  9 Pd110        empty        #> 10 In113        CD61         #> # ℹ 49 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_is_numeric.html","id":null,"dir":"Reference","previous_headings":"","what":"Find if a vector is numeric — tof_is_numeric","title":"Find if a vector is numeric — tof_is_numeric","text":"function takes input vector `.vec` checks either integer double (.e. type vector might encode high-dimensional cytometry measurements).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_is_numeric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find if a vector is numeric — tof_is_numeric","text":"","code":"tof_is_numeric(.vec)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_is_numeric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find if a vector is numeric — tof_is_numeric","text":".vec vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_is_numeric.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find if a vector is numeric — tof_is_numeric","text":"boolean value indicating .vec type integer double.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_knn_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate cells' local densities using K-nearest-neighbor density estimation — tof_knn_density","title":"Estimate cells' local densities using K-nearest-neighbor density estimation — tof_knn_density","text":"function uses distances cell K nearest neighbors estimate local density cell `tof_tbl` `tibble` containing high-dimensional cytometry data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_knn_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate cells' local densities using K-nearest-neighbor density estimation — tof_knn_density","text":"","code":"tof_knn_density(   tof_tibble,   distance_cols = where(tof_is_numeric),   num_neighbors = min(15L, nrow(tof_tibble)),   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\"),   estimation_method = c(\"mean_distance\", \"sum_distance\"),   normalize = TRUE,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_knn_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate cells' local densities using K-nearest-neighbor density estimation — tof_knn_density","text":"tof_tibble `tof_tbl` `tibble`. distance_cols Unquoted names columns `tof_tibble` use calculating cell--cell distances local density estimation cell. Defaults numeric columns `tof_tibble`. num_neighbors integer indicating number nearest neighbors use estimating local density cell. Defaults minimum 15 number rows `tof_tibble`. distance_function string indicating distance function use calculating cell--cell distances local density estimation. Options include \"euclidean\" (default) \"cosine\". estimation_method string indicating relative density cell calculated distances k nearest neighbors. Options \"mean_distance\" (default; estimates relative density cell's neighborhood taking negative average distances nearest neighbors) \"sum_distance\" (estimates relative density cell's neighborhood taking negative sum distances nearest neighbors). normalize boolean value indicating vector local density estimates normalized values 0 1. Defaults TRUE. ... Additional optional arguments pass tof_find_knn.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_knn_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate cells' local densities using K-nearest-neighbor density estimation — tof_knn_density","text":"tibble single column named \".knn_density\" containing local density estimates input cell `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_log_rank_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"Compute log-rank test p-value difference two survival curves obtained splitting dataset \"low\" \"high\" risk group using given relative-risk threshold.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_log_rank_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"","code":"tof_log_rank_test(   input_data,   relative_risk_col,   time_col,   event_col,   threshold )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_log_rank_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"input_data tbl_df data.frame observation row. relative_risk_col unquote column name indicating column contains relative-risk estimates observation. time_col unquoted column name indicating column contains true time--event information observation. event_col unquoted column name indicating column contains outcome (event censorship). Must binary column - values  either 0 1 (1 indicating adverse event 0 indicating  censorship) FALSE TRUE (TRUE indicating adverse event FALSE indicating censorship). threshold numeric value indicating relative-risk threshold used split observations low- high-risk groups.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_log_rank_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"numeric value <1, p-value log-rank test.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_log_rank_test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_knn_graph.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — tof_make_knn_graph","title":"Title — tof_make_knn_graph","text":"Title","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_knn_graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — tof_make_knn_graph","text":"","code":"tof_make_knn_graph(   tof_tibble,   knn_cols,   num_neighbors,   distance_function = c(\"euclidean\", \"cosine\"),   graph_type = c(\"weighted\", \"unweighted\"),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_knn_graph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — tof_make_knn_graph","text":"tof_tibble tibble tof_tbl. knn_cols Unquoted column names indicating columns tof_tibble used KNN calculation. num_neighbors integer number neighbors find cell ( including ). distance_function string indicating distance function use nearest-neighbor calculation. Options include \"euclidean\" (default) \"cosine\" distances. graph_type string indicating graph's edges weights (\"weighted\"; default) (\"unweighted\"). ... Optional additional arguments pass tof_find_knn","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_knn_graph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — tof_make_knn_graph","text":"tbl_graph.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_knn_graph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title — tof_make_knn_graph","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_roc_curve.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute a receiver-operating curve (ROC) for a two-class or multiclass dataset — tof_make_roc_curve","title":"Compute a receiver-operating curve (ROC) for a two-class or multiclass dataset — tof_make_roc_curve","text":"Compute receiver-operating curve (ROC) two-class multiclass dataset","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_roc_curve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute a receiver-operating curve (ROC) for a two-class or multiclass dataset — tof_make_roc_curve","text":"","code":"tof_make_roc_curve(input_data, truth_col, prob_cols)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_roc_curve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute a receiver-operating curve (ROC) for a two-class or multiclass dataset — tof_make_roc_curve","text":"input_data tof_tbl, tbl_df, data.frame row observation. truth_col unquoted column name indicating column `input_data` contains true class labels observation. Must factor. prob_cols Unquoted column names indicating columns `input_data` contain probability estimates class `truth_col`. columns must specified order factor levels `truth_col`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_roc_curve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute a receiver-operating curve (ROC) for a two-class or multiclass dataset — tof_make_roc_curve","text":"tibble can used plot ROC classification task. candidate probability threshold, following reported: specificity, sensitivity, true-positive rate (tpr), false-positive rate (fpr).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_roc_curve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute a receiver-operating curve (ROC) for a two-class or multiclass dataset — tof_make_roc_curve","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             )     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a logistic regression classifier log_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = class,         model_type = \"two-class\"     )  # make predictions predictions <-     tof_predict(         log_model,         new_data = feature_tibble,         prediction_type = \"response\"     ) prediction_tibble <-     dplyr::tibble(         truth = feature_tibble$class,         prediction = predictions$.pred     )  # make ROC curve tof_make_roc_curve(     input_data = prediction_tibble,     truth_col = truth,     prob_cols = prediction )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster.html","id":null,"dir":"Reference","previous_headings":"","what":"Metacluster clustered CyTOF data. — tof_metacluster","title":"Metacluster clustered CyTOF data. — tof_metacluster","text":"function wrapper around tidytof's tof_metacluster_* function family. performs metaclustering CyTOF data using user-specified method (5 choices) method's corresponding input parameters.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metacluster clustered CyTOF data. — tof_metacluster","text":"","code":"tof_metacluster(   tof_tibble,   cluster_col,   metacluster_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   ...,   augment = TRUE,   method = c(\"consensus\", \"hierarchical\", \"kmeans\", \"phenograph\", \"flowsom\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metacluster clustered CyTOF data. — tof_metacluster","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. metacluster_cols Unquoted column names indicating columns `tof_tibble` use computing metaclusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster metaclustering. function used compute summary statistic input cluster `cluster_col` across columns specified `metacluster_cols`, resulting vector (one cluster) used input metaclustering. Defaults median. ... Additional arguments pass `tof_metacluster_*` function family member corresponding chosen `method`. augment boolean value indicating output column-bind metacluster ids cell new column `tof_tibble` (TRUE; default) single-column tibble including metacluster ids returned (FALSE). method string indicating clustering method used. Valid values include \"consensus\", \"hierarchical\", \"kmeans\", \"phenograph\", \"flowsom\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metacluster clustered CyTOF data. — tof_metacluster","text":"`tof_tbl` `tibble` augment = FALSE, single column encoding metacluster ids cell `tof_tibble`. augment = TRUE, ncol(tof_tibble) + 1 columns: (unaltered) columns `tof_tibble` plus additional column encoding metacluster ids.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metacluster clustered CyTOF data. — tof_metacluster","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  tof_metacluster(     tof_tibble = sim_data,     cluster_col = cluster_id,     clustering_algorithm = \"consensus\",     method = \"flowsom\" ) #> # A tibble: 1,000 × 6 #>      cd45   cd38   cd34   cd19 cluster_id .flowsom_metacluster #>     <dbl>  <dbl>  <dbl>  <dbl> <chr>      <chr>                #>  1 -0.661  0.635  0.311  0.978 e          2                    #>  2 -0.382  0.335  0.244  2.30  z          3                    #>  3  0.973  0.888 -1.95  -0.888 m          3                    #>  4  0.803  0.914  0.107 -1.73  r          3                    #>  5  1.58  -0.407 -2.08  -1.62  q          3                    #>  6  0.742 -1.29  -0.349 -0.140 f          4                    #>  7 -0.290  0.240  0.621  2.25  z          3                    #>  8  1.64   0.440  0.125  1.09  c          3                    #>  9 -0.594  0.133  1.20  -1.14  o          6                    #> 10 -0.642 -0.865 -0.308 -0.276 b          2                    #> # ℹ 990 more rows  tof_metacluster(     tof_tibble = sim_data,     cluster_col = cluster_id,     method = \"phenograph\" ) #> # A tibble: 1,000 × 6 #>      cd45   cd38   cd34   cd19 cluster_id .phenograph_metacluster #>     <dbl>  <dbl>  <dbl>  <dbl> <chr>      <chr>                   #>  1 -0.661  0.635  0.311  0.978 e          4                       #>  2 -0.382  0.335  0.244  2.30  z          3                       #>  3  0.973  0.888 -1.95  -0.888 m          1                       #>  4  0.803  0.914  0.107 -1.73  r          2                       #>  5  1.58  -0.407 -2.08  -1.62  q          4                       #>  6  0.742 -1.29  -0.349 -0.140 f          1                       #>  7 -0.290  0.240  0.621  2.25  z          3                       #>  8  1.64   0.440  0.125  1.09  c          4                       #>  9 -0.594  0.133  1.20  -1.14  o          2                       #> 10 -0.642 -0.865 -0.308 -0.276 b          4                       #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_consensus.html","id":null,"dir":"Reference","previous_headings":"","what":"Metacluster clustered CyTOF data using consensus clustering — tof_metacluster_consensus","title":"Metacluster clustered CyTOF data using consensus clustering — tof_metacluster_consensus","text":"function performs consensus metaclustering `tof_tbl` containing CyTOF data using user-specified selection input variables/CyTOF measurements number desired metaclusters. See ConsensusClusterPlus additional details.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_consensus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metacluster clustered CyTOF data using consensus clustering — tof_metacluster_consensus","text":"","code":"tof_metacluster_consensus(   tof_tibble,   cluster_col,   metacluster_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   num_metaclusters = 10L,   proportion_clusters = 0.9,   proportion_features = 1,   num_reps = 20L,   clustering_algorithm = c(\"hierarchical\", \"pam\", \"kmeans\"),   distance_function = c(\"euclidean\", \"minkowski\", \"pearson\", \"spearman\", \"maximum\",     \"binary\", \"canberra\"),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_consensus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metacluster clustered CyTOF data using consensus clustering — tof_metacluster_consensus","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. metacluster_cols Unquoted column names indicating columns `tof_tibble` use computing metaclusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster metaclustering. function used compute summary statistic input cluster `cluster_col` across columns specified `metacluster_cols`, resulting vector (one cluster) used input metaclustering. Defaults median. num_metaclusters integer indicating number clusters returned. Defaults 10. proportion_clusters numeric value 0 1 indicating proportion clusters subsample (total number clusters `cluster_col`) iteration consensus clustering. Defaults 0.9 proportion_features numeric value 0 1 indicating proportion features (.e. proportion columns specified `metacluster_cols`) subsample iteration consensus clustering. Defaults 1 (features included). num_reps integer indicating many subsampled replicates run consensus clustering. Defaults 20. clustering_algorithm string indicating clustering algorithm ConsensusClusterPlus use metacluster subsampled clusters resampling. Options \"hierarchical\" (default), \"pam\" (partitioning around medoids), \"kmeans\". distance_function string indicating distance function used compute distances clusters consensus clustering. Options \"euclidean\" (default), \"manhattan\", \"minkowski\", \"pearson\", \"spearman\", \"maximum\", \"binary\", \"canberra\". See ConsensusClusterPlus. ... Optional additional arguments pass ConsensusClusterPlus.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_consensus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metacluster clustered CyTOF data using consensus clustering — tof_metacluster_consensus","text":"tibble single column (`.consensus_metacluster`) number rows input `tof_tibble`. entry column indicates metacluster label assigned row `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_consensus.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metacluster clustered CyTOF data using consensus clustering — tof_metacluster_consensus","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  tof_metacluster_consensus(tof_tibble = sim_data, cluster_col = cluster_id) #> # A tibble: 1,000 × 1 #>    .consensus_metacluster #>    <chr>                  #>  1 8                      #>  2 9                      #>  3 3                      #>  4 6                      #>  5 3                      #>  6 1                      #>  7 4                      #>  8 6                      #>  9 8                      #> 10 7                      #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_flowsom.html","id":null,"dir":"Reference","previous_headings":"","what":"Metacluster clustered CyTOF data using FlowSOM's built-in metaclustering algorithm — tof_metacluster_flowsom","title":"Metacluster clustered CyTOF data using FlowSOM's built-in metaclustering algorithm — tof_metacluster_flowsom","text":"function performs metaclustering `tof_tbl` containing CyTOF data using user-specified selection input variables/CyTOF measurements number desired metaclusters. takes advantage FlowSOM package's built-functionality automatically detecting number metaclusters can use several strategies adapted FlowSOM team: consensus metaclustering, hierarchical metaclustering, k-means metaclustering, metaclustering using FlowSOM algorithm . See MetaClustering additional details.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_flowsom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metacluster clustered CyTOF data using FlowSOM's built-in metaclustering algorithm — tof_metacluster_flowsom","text":"","code":"tof_metacluster_flowsom(   tof_tibble,   cluster_col,   metacluster_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   num_metaclusters = 10L,   clustering_algorithm = c(\"consensus\", \"hierarchical\", \"kmeans\", \"som\"),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_flowsom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metacluster clustered CyTOF data using FlowSOM's built-in metaclustering algorithm — tof_metacluster_flowsom","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. metacluster_cols Unquoted column names indicating columns `tof_tibble` use computing metaclusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster metaclustering. function used compute summary statistic input cluster `cluster_col` across columns specified `metacluster_cols`, resulting vector (one cluster) used input metaclustering. Defaults median. num_metaclusters integer indicating maximum number clusters returned. Defaults 10. Note function, output may provide small number metaclusters requested. MetaClustering uses \"Elbow method\" automatically detect optimal number metaclusters. clustering_algorithm string indicating clustering algorithm MetaClustering use perform metaclustering. Options \"consensus\" (default), \"hierarchical\", \"kmeans\", \"som\" (.e. self-organizing map; FlowSOM algorithm ). ... Optional additional arguments pass MetaClustering.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_flowsom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metacluster clustered CyTOF data using FlowSOM's built-in metaclustering algorithm — tof_metacluster_flowsom","text":"tibble single column (`.flowsom_metacluster`) number rows input `tof_tibble`. entry column indicates metacluster label assigned row `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_flowsom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metacluster clustered CyTOF data using FlowSOM's built-in metaclustering algorithm — tof_metacluster_flowsom","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  tof_metacluster_flowsom(     tof_tibble = sim_data,     cluster_col = cluster_id,     clustering_algorithm = \"consensus\" ) #> # A tibble: 1,000 × 1 #>    .flowsom_metacluster #>    <chr>                #>  1 4                    #>  2 2                    #>  3 1                    #>  4 4                    #>  5 1                    #>  6 1                    #>  7 1                    #>  8 1                    #>  9 2                    #> 10 1                    #> # ℹ 990 more rows  tof_metacluster_flowsom(     tof_tibble = sim_data,     cluster_col = cluster_id,     clustering_algorithm = \"som\" ) #> # A tibble: 1,000 × 1 #>    .flowsom_metacluster #>    <chr>                #>  1 2                    #>  2 1                    #>  3 3                    #>  4 2                    #>  5 1                    #>  6 4                    #>  7 4                    #>  8 4                    #>  9 1                    #> 10 1                    #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_hierarchical.html","id":null,"dir":"Reference","previous_headings":"","what":"Metacluster clustered CyTOF data using hierarchical agglomerative clustering — tof_metacluster_hierarchical","title":"Metacluster clustered CyTOF data using hierarchical agglomerative clustering — tof_metacluster_hierarchical","text":"function performs hierarchical metaclustering `tof_tbl` containing CyTOF data using user-specified selection input variables/CyTOF measurements number desired metaclusters. See hclust.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_hierarchical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metacluster clustered CyTOF data using hierarchical agglomerative clustering — tof_metacluster_hierarchical","text":"","code":"tof_metacluster_hierarchical(   tof_tibble,   cluster_col,   metacluster_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   num_metaclusters = 10L,   distance_function = c(\"euclidean\", \"manhattan\", \"minkowski\", \"maximum\", \"canberra\",     \"binary\"),   agglomeration_method = c(\"complete\", \"single\", \"average\", \"median\", \"centroid\",     \"ward.D\", \"ward.D2\", \"mcquitty\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_hierarchical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metacluster clustered CyTOF data using hierarchical agglomerative clustering — tof_metacluster_hierarchical","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. metacluster_cols Unquoted column names indicating columns `tof_tibble` use computing metaclusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster metaclustering. function used compute summary statistic input cluster `cluster_col` across columns specified `metacluster_cols`, resulting vector (one cluster) used input metaclustering. Defaults median. num_metaclusters integer indicating number clusters returned. Defaults 10. distance_function string indicating distance function used compute distances clusters hierarchical metaclustering. Options \"euclidean\" (default), \"manhattan\", \"minkowski\", \"maximum\", \"canberra\", \"binary\". See dist additional details. agglomeration_method string indicating agglomeration algorithm used hierarchical cluster combination. Options \"complete\" (default), \"single\", \"average\", \"median\", \"centroid\", \"ward.D\", \"ward.D2\", \"mcquitty\". See hclust details.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_hierarchical.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metacluster clustered CyTOF data using hierarchical agglomerative clustering — tof_metacluster_hierarchical","text":"tibble single column (`.hierarchical_metacluster`) number rows input `tof_tibble`. entry column indicates metacluster label assigned row `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_hierarchical.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metacluster clustered CyTOF data using hierarchical agglomerative clustering — tof_metacluster_hierarchical","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  tof_metacluster_hierarchical(tof_tibble = sim_data, cluster_col = cluster_id) #> # A tibble: 1,000 × 1 #>    .hierarchical_metacluster #>    <chr>                     #>  1 7                         #>  2 3                         #>  3 6                         #>  4 3                         #>  5 5                         #>  6 7                         #>  7 1                         #>  8 8                         #>  9 9                         #> 10 1                         #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_kmeans.html","id":null,"dir":"Reference","previous_headings":"","what":"Metacluster clustered CyTOF data using k-means clustering — tof_metacluster_kmeans","title":"Metacluster clustered CyTOF data using k-means clustering — tof_metacluster_kmeans","text":"function performs k-means metaclustering `tof_tbl` containing CyTOF data using user-specified selection input variables/CyTOF measurements number desired metaclusters. See hclust.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_kmeans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metacluster clustered CyTOF data using k-means clustering — tof_metacluster_kmeans","text":"","code":"tof_metacluster_kmeans(   tof_tibble,   cluster_col,   metacluster_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   num_metaclusters = 10L,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_kmeans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metacluster clustered CyTOF data using k-means clustering — tof_metacluster_kmeans","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. metacluster_cols Unquoted column names indicating columns `tof_tibble` use computing metaclusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster metaclustering. function used compute summary statistic input cluster `cluster_col` across columns specified `metacluster_cols`, resulting vector (one cluster) used input metaclustering. Defaults median. num_metaclusters integer indicating number clusters returned. Defaults 10. ... Optional additional method specifications pass tof_cluster_kmeans.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_kmeans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metacluster clustered CyTOF data using k-means clustering — tof_metacluster_kmeans","text":"tibble single column (`.kmeans_metacluster`) number rows input `tof_tibble`. entry column indicates metacluster label assigned row `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_kmeans.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metacluster clustered CyTOF data using k-means clustering — tof_metacluster_kmeans","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  tof_metacluster_kmeans(tof_tibble = sim_data, cluster_col = cluster_id) #> # A tibble: 1,000 × 1 #>    .kmeans_metacluster #>    <chr>               #>  1 3                   #>  2 3                   #>  3 2                   #>  4 4                   #>  5 4                   #>  6 2                   #>  7 2                   #>  8 1                   #>  9 1                   #> 10 3                   #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_phenograph.html","id":null,"dir":"Reference","previous_headings":"","what":"Metacluster clustered CyTOF data using PhenoGraph clustering — tof_metacluster_phenograph","title":"Metacluster clustered CyTOF data using PhenoGraph clustering — tof_metacluster_phenograph","text":"function performs PhenoGraph metaclustering `tof_tbl` containing CyTOF data using user-specified selection input variables/CyTOF measurements. number metaclusters automatically detected PhenoGraph algorithm. See tof_cluster_phenograph.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_phenograph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metacluster clustered CyTOF data using PhenoGraph clustering — tof_metacluster_phenograph","text":"","code":"tof_metacluster_phenograph(   tof_tibble,   cluster_col,   metacluster_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   num_neighbors = 5L,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_phenograph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metacluster clustered CyTOF data using PhenoGraph clustering — tof_metacluster_phenograph","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. metacluster_cols Unquoted column names indicating columns `tof_tibble` use computing metaclusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster metaclustering. function used compute summary statistic input cluster `cluster_col` across columns specified `metacluster_cols`, resulting vector (one cluster) used input metaclustering. Defaults median. num_neighbors integer indicating number neighbors use constructing PhenoGraph's k-nearest-neighbor graph. Smaller values emphasize local graph structure; larger values emphasize global graph structure (add time computation). Defaults 5. ... Optional additional method specifications pass tof_cluster_phenograph.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_phenograph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metacluster clustered CyTOF data using PhenoGraph clustering — tof_metacluster_phenograph","text":"tibble single column (`.phenograph_metacluster`) number rows input `tof_tibble`. entry column indicates metacluster label assigned row `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_phenograph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metacluster clustered CyTOF data using PhenoGraph clustering — tof_metacluster_phenograph","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  tof_metacluster_phenograph(tof_tibble = sim_data, cluster_col = cluster_id) #> # A tibble: 1,000 × 1 #>    .phenograph_metacluster #>    <chr>                   #>  1 1                       #>  2 1                       #>  3 2                       #>  4 1                       #>  5 1                       #>  6 4                       #>  7 2                       #>  8 2                       #>  9 3                       #> 10 2                       #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot marker expression density plots — tof_plot_cells_density","title":"Plot marker expression density plots — tof_plot_cells_density","text":"function plots marker expression density plots user-specified column tof_tbl. Optionally, cells can grouped plot multiple vertically-arranged density plots","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot marker expression density plots — tof_plot_cells_density","text":"","code":"tof_plot_cells_density(   tof_tibble,   marker_col,   group_col,   num_points = 512,   theme = ggplot2::theme_bw(),   use_ggridges = FALSE,   scale = 1,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot marker expression density plots — tof_plot_cells_density","text":"tof_tibble `tof_tbl` `tibble`. marker_col unquoted column name representing column `tof_tibble` (.e. CyTOF protein measurement) included feature extraction calculation. group_col Unquoted column names representing column `tof_tibble` used break rows `tof_tibble` subgroups plotted separate histograms. Defaults plotting without subgroups. num_points number points along full range `marker_col` density calculated theme ggplot2 theme plot. Defaults theme_bw use_ggridges boolean value indicting geom_ridgeline used plot overlain histograms. Defaults FALSE. TRUE, ggridges package must installed. scale Use set `scale` argument geom_ridgeline, controls far apart (vertically) density plots arranged along y-axis. Defaults 1. ... Additional optional arguments send geom_ridgeline.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot marker expression density plots — tof_plot_cells_density","text":"ggplot object","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot marker expression density plots — tof_plot_cells_density","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(c(\"a\", \"b\"), size = 1000, replace = TRUE)     )  density_plot <-     tof_plot_cells_density(         tof_tibble = sim_data,         marker_col = cd45,         group_col = cluster_id     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_embedding.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot scatterplots of single-cell data using low-dimensional feature embeddings — tof_plot_cells_embedding","title":"Plot scatterplots of single-cell data using low-dimensional feature embeddings — tof_plot_cells_embedding","text":"function makes scatterplots using single-cell data embedded low-dimensional space (generated tof_reduce_dimensions, point colored using user-specified variable.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_embedding.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot scatterplots of single-cell data using low-dimensional feature embeddings — tof_plot_cells_embedding","text":"","code":"tof_plot_cells_embedding(   tof_tibble,   embedding_cols,   color_col,   facet_cols,   compute_embedding_cols = where(tof_is_numeric),   embedding_method = c(\"pca\", \"tsne\", \"umap\"),   embedding_args = list(),   theme = ggplot2::theme_bw(),   ...,   method = c(\"ggplot2\", \"scattermore\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_embedding.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot scatterplots of single-cell data using low-dimensional feature embeddings — tof_plot_cells_embedding","text":"tof_tibble `tof_tbl` `tibble`. embedding_cols Unquoted column names indicating columns `tof_tibble` used x y axes scatterplot. Supports tidyselect helpers. Must select exactly 2 columns. provided, feature embedding can computed scratch using method provided using `embedding_method` argument tof_reduce_dimensions arguments passed `embedding_args`. color_col unquoted column name specifying column `tof_tibble` used color point scatterplot. facet_cols unquoted column name specifying column `tof_tibble` used break scatterplot facets using facet_wrap. compute_embedding_cols Unquoted column names indicating columns 'tof_tibble' use computing embeddings method specified `embedding_method`. Defaults numeric columns 'tof_tibble'. Supports tidyselect helpers. embedding_method string indicating method used feature embedding (`embedding_cols` provided). Options (passed tof_reduce_dimensions) \"pca\" (default), \"tsne\", \"umap\". embedding_args Optional additional arguments pass tof_reduce_dimensions. example, `method = \"tsne\"`, might include `num_comp`, `perplexity`, `theta`. theme ggplot2 theme apply scatterplot. Defaults theme_bw. ... Optional additional arguments pass tof_plot_cells_scatter. method string indicating plotting engine used. Valid values include \"ggplot2\" (default) \"scattermore\" (recommended 100K cells plotted). Note method = \"scattermore\" requires scattermore package installed.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_embedding.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot scatterplots of single-cell data using low-dimensional feature embeddings — tof_plot_cells_embedding","text":"ggplot object.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_embedding.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot scatterplots of single-cell data using low-dimensional feature embeddings — tof_plot_cells_embedding","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = c(rnorm(n = 500), rnorm(n = 500, mean = 2)),         cd34 = c(rnorm(n = 500), rnorm(n = 500, mean = 4)),         cd19 = rnorm(n = 1000),         cluster_id = c(rep(\"a\", 500), rep(\"b\", 500))     )  # embed with pca pca_plot <-     tof_plot_cells_embedding(         tof_tibble = sim_data,         color_col = cd38,         embedding_method = \"pca\",         compute_embedding_cols = starts_with(\"cd\")     )  # embed with tsne tsne_plot <-     tof_plot_cells_embedding(         tof_tibble = sim_data,         color_col = cluster_id,         embedding_method = \"tsne\",         compute_embedding_cols = starts_with(\"cd\")     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_layout.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot force-directed layouts of single-cell data — tof_plot_cells_layout","title":"Plot force-directed layouts of single-cell data — tof_plot_cells_layout","text":"function makes force-directed layouts using single-cell data embedded 2-dimensional space representing k-nearest-neighbor graph constructed using cell--cell similarities. node force-directed layout represents single cell colored using user-specified variable.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_layout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot force-directed layouts of single-cell data — tof_plot_cells_layout","text":"","code":"tof_plot_cells_layout(   tof_tibble,   knn_cols = where(tof_is_numeric),   color_col,   facet_cols,   num_neighbors = 5,   graph_type = c(\"weighted\", \"unweighted\"),   graph_layout = \"fr\",   distance_function = c(\"euclidean\", \"cosine\"),   edge_alpha = 0.25,   node_size = 2,   theme = ggplot2::theme_void(),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_layout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot force-directed layouts of single-cell data — tof_plot_cells_layout","text":"tof_tibble `tof_tbl` `tibble`. knn_cols Unquoted column names indicating columns `tof_tibble` used compute cell--cell distances used construct k-nearest-neighbor graph. Supports tidyselect helpers. Defaults numeric columns. color_col Unquoted column name indicating column `tof_tibble` used color nodes force-directed layout. facet_cols Unquoted column names indicating columns `tof_tibble` used separate nodes different force-directed layouts. num_neighbors integer specifying many neighbors used construct k-nearest neighbor graph. graph_type string specifying k-nearest neighbor graph \"weighted\" (default) \"unweighted\". graph_layout string specifying algorithm used compute force-directed layout. Passed ggraph. Defaults \"fr\", Fruchterman-Reingold algorithm. examples include \"nicely\", \"gem\", \"kk\", many others. See layout_tbl_graph_igraph examples. distance_function string indicating distance function use computing cell--cell distances. Valid options include \"euclidean\" (default) \"cosine\". edge_alpha numeric value 0 1 specifying transparency edges drawn force-directed layout. Defaults 0.25. node_size numeric value specifying size nodes force-directed layout. Defaults 2. theme ggplot2 theme apply force-directed layout. Defaults theme_void ... hnsw_knn","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_layout.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot force-directed layouts of single-cell data — tof_plot_cells_layout","text":"ggraph/ggplot object.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_layout.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot force-directed layouts of single-cell data — tof_plot_cells_layout","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = c(rnorm(n = 500), rnorm(n = 500, mean = 2)),         cd34 = c(rnorm(n = 500), rnorm(n = 500, mean = 4)),         cd19 = rnorm(n = 1000),         cluster_id = c(rep(\"a\", 500), rep(\"b\", 500))     )  # make a layout colored by a marker layout_cd38 <-     tof_plot_cells_layout(         tof_tibble = sim_data,         color_col = cd38     )  # make a layout colored by cluster id layout_cluster <-     tof_plot_cells_layout(         tof_tibble = sim_data,         color_col = cluster_id,     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_scatter.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot scatterplots of single-cell data. — tof_plot_cells_scatter","title":"Plot scatterplots of single-cell data. — tof_plot_cells_scatter","text":"function makes scatterplots single-cell data using user-specified x- y-axes. Additionally, point scatterplot can colored using user-specified variable.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_scatter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot scatterplots of single-cell data. — tof_plot_cells_scatter","text":"","code":"tof_plot_cells_scatter(   tof_tibble,   x_col,   y_col,   color_col,   facet_cols,   theme = ggplot2::theme_bw(),   ...,   method = c(\"ggplot2\", \"scattermore\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_scatter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot scatterplots of single-cell data. — tof_plot_cells_scatter","text":"tof_tibble `tof_tbl` `tibble`. x_col unquoted column name specifying column `tof_tibble` used x-axis. y_col unquoted column name specifying column `tof_tibble` used y-axis. color_col unquoted column name specifying column `tof_tibble` used color point scatterplot. facet_cols unquoted column name specifying column `tof_tibble` used break scatterplot facets using facet_wrap. theme ggplot2 theme apply scatterplot. Defaults theme_bw. ... Optional additional arguments pass geom_point method = \"ggplot2\" geom_scattermore method = \"scattermore\". method string indicating plotting engine used. Valid values include \"ggplot2\" (default) \"scattermore\" (recommended 100K cells plotted). Note method = \"scattermore\" requires scattermore package installed.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_scatter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot scatterplots of single-cell data. — tof_plot_cells_scatter","text":"ggplot object.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_scatter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot scatterplots of single-cell data. — tof_plot_cells_scatter","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = c(rnorm(n = 500), rnorm(n = 500, mean = 2)),         cd34 = c(rnorm(n = 500), rnorm(n = 500, mean = 4)),         cd19 = rnorm(n = 1000),         cluster_id = c(rep(\"a\", 500), rep(\"b\", 500))     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a heatmap summarizing cluster marker expression patterns in CyTOF data — tof_plot_clusters_heatmap","title":"Make a heatmap summarizing cluster marker expression patterns in CyTOF data — tof_plot_clusters_heatmap","text":"function makes heatmap cluster--cluster marker expression patterns single-cell data. Markers plotted along horizontal (x-) axis heatmap cluster IDs plotted along vertical (y-) axis heatmap.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a heatmap summarizing cluster marker expression patterns in CyTOF data — tof_plot_clusters_heatmap","text":"","code":"tof_plot_clusters_heatmap(   tof_tibble,   cluster_col,   marker_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   scale_markerwise = FALSE,   scale_clusterwise = FALSE,   cluster_markers = TRUE,   cluster_clusters = TRUE,   line_width = 0.25,   theme = ggplot2::theme_minimal() )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a heatmap summarizing cluster marker expression patterns in CyTOF data — tof_plot_clusters_heatmap","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names indicating column `tof_tibble` interpreted markers plotted along x-axis heatmap. Supports tidyselect helpers. central_tendency_function function use computing measure central tendency aggregated cluster cluster_col. Defaults median. scale_markerwise boolean value indicating heatmap rescale columns heatmap maximum value marker 1 minimum value 0. Defaults FALSE. scale_clusterwise boolean value indicating heatmap rescale rows heatmap maximum value cluster 1 minimum value 0. Defaults FALSE. cluster_markers boolean value indicating heatmap order columns (.e. markers) using hierarchical clustering. Defaults TRUE. cluster_clusters boolean value indicating heatmap order rows (.e. clusters) using hierarchical clustering. Defaults TRUE. line_width numeric value indicating thick lines separating tiles heatmap . Defaults 0.25. theme ggplot2 theme apply heatmap. Defaults theme_minimal","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a heatmap summarizing cluster marker expression patterns in CyTOF data — tof_plot_clusters_heatmap","text":"ggplot object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_heatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a heatmap summarizing cluster marker expression patterns in CyTOF data — tof_plot_clusters_heatmap","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  heatmap <-     tof_plot_clusters_heatmap(         tof_tibble = sim_data,         cluster_col = cluster_id     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_mst.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize clusters in CyTOF data using a minimum spanning tree (MST). — tof_plot_clusters_mst","title":"Visualize clusters in CyTOF data using a minimum spanning tree (MST). — tof_plot_clusters_mst","text":"function plots minimum-spanning tree using clustered single-cell data order summarize cluster-level characteristics. node MST represents single cluster colored using user-specified variable (either continuous discrete).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_mst.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize clusters in CyTOF data using a minimum spanning tree (MST). — tof_plot_clusters_mst","text":"","code":"tof_plot_clusters_mst(   tof_tibble,   cluster_col,   knn_cols = where(tof_is_numeric),   color_col,   num_neighbors = 5L,   graph_type = c(\"unweighted\", \"weighted\"),   graph_layout = \"nicely\",   central_tendency_function = stats::median,   distance_function = c(\"euclidean\", \"cosine\"),   edge_alpha = 0.4,   node_size = \"cluster_size\",   theme = ggplot2::theme_void(),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_mst.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize clusters in CyTOF data using a minimum spanning tree (MST). — tof_plot_clusters_mst","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. knn_cols Unquoted column names indicating columns `tof_tibble` used compute cluster--cluster distances used construct k-nearest-neighbor graph. Supports tidyselect helpers. Defaults numeric columns. color_col Unquoted column name indicating column `tof_tibble` used color nodes MST. num_neighbors integer specifying many neighbors used construct k-nearest neighbor graph. graph_type string specifying k-nearest neighbor graph \"weighted\" (default) \"unweighted\". graph_layout argument specifies layout MST one two ways. Option 1: Provide string specifying algorithm used compute force-directed layout. Passed ggraph. Defaults \"nicely\", tries automatically select visually-appealing layout. examples include \"fr\", \"gem\", \"kk\", many others. See layout_tbl_graph_igraph examples. Option 2: Provide ggraph object previously generated function. layout used plot ggraph object used template new plot. Using option, number clusters (labels) must identical template. option useful want make multiple plots tof_tibble colored different protein markers, example. central_tendency_function function use computing measure central tendency aggregated cluster cluster_col. Defaults median. distance_function string indicating distance function use computing cluster--clusters distances constructing MST. Valid options include \"euclidean\" (default) \"cosine\". edge_alpha numeric value 0 1 specifying transparency edges drawn force-directed layout. Defaults 0.25. node_size Either numeric value specifying size nodes MST string \"cluster_size\", case size node representing cluster scaled according number cells cluster (default). theme ggplot2 theme apply force-directed layout. Defaults theme_void ... Optional additional arguments hnsw_knn","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_mst.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize clusters in CyTOF data using a minimum spanning tree (MST). — tof_plot_clusters_mst","text":"ggraph/ggplot object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_mst.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize clusters in CyTOF data using a minimum spanning tree (MST). — tof_plot_clusters_mst","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  # make a layout colored by a marker layout_cd38 <-     tof_plot_clusters_mst(         tof_tibble = sim_data,         cluster_col = cluster_id,         color_col = cd38     )  # use the same layout as the plot above to color the same # tree using a different marker layout_cd45 <-     tof_plot_clusters_mst(         tof_tibble = sim_data,         cluster_col = cluster_id,         color_col = cd45,         graph_layout = layout_cd38     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_volcano.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a volcano plot from differential expression analysis results — tof_plot_clusters_volcano","title":"Create a volcano plot from differential expression analysis results — tof_plot_clusters_volcano","text":"function makes volcano plot using results differential expression analysis (DEA) produced one `tof_dea_*` verbs. point volcano plot represents single cluster-marker pair, colored significance level direction marker expression difference.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_volcano.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a volcano plot from differential expression analysis results — tof_plot_clusters_volcano","text":"","code":"tof_plot_clusters_volcano(   dea_result,   num_top_pairs = 10L,   alpha = 0.05,   point_size = 2,   label_size = 3,   nudge_x = 0,   nudge_y = 0.25,   increase_color = \"#207394\",   decrease_color = \"#cd5241\",   insignificant_color = \"#cdcdcd\",   use_ggrepel = FALSE,   theme = ggplot2::theme_bw() )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_volcano.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a volcano plot from differential expression analysis results — tof_plot_clusters_volcano","text":"dea_result tibble containing differential expression analysis (DEA) results produced one members `tof_dea_*` function family. num_top_pairs integer representing number significant cluster-marker pairs labeled volcano plot. alpha numeric value 0 1 representing significance level p-value considered statistically significant. Defaults 0.05. point_size numeric value specifying size points volcano plot. label_size numeric value specifying size text labeling cluster-marker pairs. nudge_x numeric value specifying far cluster-marker pair labels adjusted left (`nudge_x` negative) right (`nudge_x` positive) avoid overlap plotted points. Passed  geom_text, ignored `use_ggrepel` = TRUE. Defaults 0. nudge_y numeric value specifying far cluster-marker pair labels adjusted downwards (`nudge_y` negative) upwards (`nudge_y` positive) avoid overlap plotted points. Passed  geom_text, ignored `use_ggrepel` = TRUE. Defaults 0.25. increase_color hex code specifying fill color used points corresponding cluster-marker pairs significant increases detected. decrease_color hex code specifying fill color used points corresponding cluster-marker pairs significant decreases detected. insignificant_color hex code specifying fill color used points corresponding cluster-marker pairs significant differences detected. use_ggrepel boolean value indicting geom_text_repel used plot labels cluster-marker pairs. Defaults FALSE. TRUE, ggrepel package must installed. theme ggplot2 theme apply volcano plot. Defaults theme_bw","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_volcano.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a volcano plot from differential expression analysis results — tof_plot_clusters_volcano","text":"ggplot object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_volcano.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a volcano plot from differential expression analysis results — tof_plot_clusters_volcano","text":"","code":"# create a mock differential expression analysis result sim_dea_result <-     dplyr::tibble(         cluster_id = rep(letters, 2),         marker = rep(c(\"cd45\", \"cd34\"), times = length(letters)),         p_adj = runif(n = 2 * length(letters), min = 0, max = 0.5),         mean_fc = runif(n = 2 * length(letters), min = 0.01, max = 10),         significant = dplyr::if_else(p_adj < 0.05, \"*\", \"\")     )  attr(sim_dea_result, which = \"dea_method\") <- \"t_unpaired\"  # create the volcano plot volcano <- tof_plot_clusters_volcano(dea_result = sim_dea_result)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a heatmap summarizing group marker expression patterns in high-dimensional cytometry data — tof_plot_heatmap","title":"Make a heatmap summarizing group marker expression patterns in high-dimensional cytometry data — tof_plot_heatmap","text":"function makes heatmap group--group marker expression patterns single-cell data. Markers plotted along horizontal (x-) axis heatmap groups plotted along vertical (y-) axis heatmap.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a heatmap summarizing group marker expression patterns in high-dimensional cytometry data — tof_plot_heatmap","text":"","code":"tof_plot_heatmap(   tof_tibble,   y_col,   marker_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   scale_markerwise = FALSE,   scale_ywise = FALSE,   cluster_markers = TRUE,   cluster_groups = TRUE,   line_width = 0.25,   theme = ggplot2::theme_minimal() )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a heatmap summarizing group marker expression patterns in high-dimensional cytometry data — tof_plot_heatmap","text":"tof_tibble `tof_tbl` `tibble`. y_col unquoted column name indicating column `tof_tibble` stores ids group cell belongs. marker_cols Unquoted column names indicating column `tof_tibble` interpreted markers plotted along x-axis heatmap. Supports tidyselect helpers. central_tendency_function function use computing measure central tendency aggregated cluster cluster_col. Defaults median. scale_markerwise boolean value indicating heatmap rescale columns heatmap maximum value marker 1 minimum value 0. Defaults FALSE. scale_ywise boolean value indicating heatmap rescale rows heatmap maximum value group 1 minimum value 0. Defaults FALSE. cluster_markers boolean value indicating heatmap order columns (.e. markers) using hierarchical clustering. Defaults TRUE. cluster_groups boolean value indicating heatmap order rows (.e. groups) using hierarchical clustering. Defaults TRUE. line_width numeric value indicating thick lines separating tiles heatmap . Defaults 0.25. theme ggplot2 theme apply heatmap. Defaults theme_minimal","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a heatmap summarizing group marker expression patterns in high-dimensional cytometry data — tof_plot_heatmap","text":"ggplot object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the results of a glmnet model fit on sample-level data. — tof_plot_model","title":"Plot the results of a glmnet model fit on sample-level data. — tof_plot_model","text":"Plot results glmnet model fit sample-level data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the results of a glmnet model fit on sample-level data. — tof_plot_model","text":"","code":"tof_plot_model(tof_model, new_data, theme = ggplot2::theme_bw())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the results of a glmnet model fit on sample-level data. — tof_plot_model","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations plot made. new_data provided, plot made using training data used fit model. Alternatively, string \"tuning_data\" can provided, plot generated using predictions generated model tuning. theme ggplot2 theme apply plot Defaults theme_bw","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the results of a glmnet model fit on sample-level data. — tof_plot_model","text":"ggplot object. `tof_model` linear model, scatterplot predicted outcome vs. true outcome returned. `tof_model` two-class model, ROC curve returned. `tof_model` multiclass model, one-versus-ROC curve returned class. `tof_model` survival model, Kaplan-Meier curve returned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the results of a glmnet model fit on sample-level data. — tof_plot_model","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             )     )  new_tibble <-     dplyr::tibble(         sample = as.character(1:20),         cd45 = runif(n = 20),         pstat5 = runif(n = 20),         cd34 = runif(n = 20),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(20),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             )     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  # make the plot plot_1 <- tof_plot_model(tof_model = regression_model, new_data = new_tibble)  # train a logistic regression classifier logistic_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = class,         model_type = \"two-class\"     )  # make the plot  plot_2 <- tof_plot_model(tof_model = logistic_model, new_data = new_tibble)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_linear.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the results of a linear glmnet model fit on sample-level data. — tof_plot_model_linear","title":"Plot the results of a linear glmnet model fit on sample-level data. — tof_plot_model_linear","text":"Plot results linear glmnet model fit sample-level data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_linear.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the results of a linear glmnet model fit on sample-level data. — tof_plot_model_linear","text":"","code":"tof_plot_model_linear(tof_model, new_data, theme = ggplot2::theme_bw())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_linear.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the results of a linear glmnet model fit on sample-level data. — tof_plot_model_linear","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations plot made. new_data provided, plot made using training data used fit model. Alternatively, string \"tuning_data\" can provided, plot generated using predictions generated model tuning. theme ggplot2 theme apply plot Defaults theme_bw","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_linear.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the results of a linear glmnet model fit on sample-level data. — tof_plot_model_linear","text":"ggplot object. Specifically, scatterplot predicted outcome vs. true outcome returned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_logistic.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the results of a two-class glmnet model fit on sample-level data. — tof_plot_model_logistic","title":"Plot the results of a two-class glmnet model fit on sample-level data. — tof_plot_model_logistic","text":"Plot results two-class glmnet model fit sample-level data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_logistic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the results of a two-class glmnet model fit on sample-level data. — tof_plot_model_logistic","text":"","code":"tof_plot_model_logistic(tof_model, new_data, theme = ggplot2::theme_bw())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_logistic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the results of a two-class glmnet model fit on sample-level data. — tof_plot_model_logistic","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations plot made. new_data provided, plot made using training data used fit model. Alternatively, string \"tuning_data\" can provided, plot generated using predictions generated model tuning. theme ggplot2 theme apply plot. Defaults theme_bw","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_logistic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the results of a two-class glmnet model fit on sample-level data. — tof_plot_model_logistic","text":"ggplot object. Specifically, ROC curve..","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_multinomial.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the results of a multiclass glmnet model fit on sample-level data. — tof_plot_model_multinomial","title":"Plot the results of a multiclass glmnet model fit on sample-level data. — tof_plot_model_multinomial","text":"Plot results multiclass glmnet model fit sample-level data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_multinomial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the results of a multiclass glmnet model fit on sample-level data. — tof_plot_model_multinomial","text":"","code":"tof_plot_model_multinomial(tof_model, new_data, theme = ggplot2::theme_bw())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_multinomial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the results of a multiclass glmnet model fit on sample-level data. — tof_plot_model_multinomial","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations plot made. new_data provided, plot made using training data used fit model. Alternatively, string \"tuning_data\" can provided, plot generated using predictions generated model tuning. theme ggplot2 theme apply plot. Defaults theme_bw.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_multinomial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the results of a multiclass glmnet model fit on sample-level data. — tof_plot_model_multinomial","text":"ggplot object. Specifically, one-versus-ROC curve (one class).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_survival.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the results of a survival glmnet model fit on sample-level data. — tof_plot_model_survival","title":"Plot the results of a survival glmnet model fit on sample-level data. — tof_plot_model_survival","text":"Plot results survival glmnet model fit sample-level data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_survival.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the results of a survival glmnet model fit on sample-level data. — tof_plot_model_survival","text":"","code":"tof_plot_model_survival(   tof_model,   new_data,   censor_size = 2.5,   theme = ggplot2::theme_bw() )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_survival.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the results of a survival glmnet model fit on sample-level data. — tof_plot_model_survival","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations plot made. new_data provided, plot made using training data used fit model. Alternatively, string \"tuning_data\" can provided, plot generated using predictions generated model tuning. censor_size numeric value indicating large plot tick marks representing censored values Kaplan-Meier curve. theme ggplot2 theme apply plot. Defaults theme_bw","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_survival.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the results of a survival glmnet model fit on sample-level data. — tof_plot_model_survival","text":"ggplot object. Specifically, Kaplan-Meier curve.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_features","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_features","text":"function makes heatmap sample--sample marker expression patterns single-cell data. Markers plotted along horizontal (x-) axis heatmap sample IDs plotted along vertical (y-) axis heatmap.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_features","text":"","code":"tof_plot_sample_features(   feature_tibble,   sample_col,   feature_cols = where(tof_is_numeric),   scale_featurewise = FALSE,   scale_samplewise = FALSE,   line_width = 0.25,   theme = ggplot2::theme_minimal() )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_features","text":"feature_tibble tbl_df data.frame aggregated sample-level features, generated tof_extract_features. sample_col unquoted column name indicating column `tof_tibble` stores IDs sample. sample IDs present, numeric ID assigned row `feature_tibble` based row index. feature_cols Unquoted column names indicating column `feature_tibble` interpreted features plotted along x-axis heatmap. Supports tidyselect helpers. scale_featurewise boolean value indicating heatmap rescale columns heatmap maximum value marker 1 minimum value 0. Defaults FALSE. scale_samplewise boolean value indicating heatmap rescale rows heatmap maximum value sample 1 minimum value 0. Defaults FALSE. line_width numeric value indicating thick lines separating tiles heatmap . Defaults 0.25. theme ggplot2 theme apply heatmap. Defaults theme_minimal","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_features","text":"ggplot object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_features.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_features","text":"","code":"# simulate single-cell data sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         sample_id = sample(paste0(\"sample\", 1:5), size = 1000, replace = TRUE)     )  # extract cluster proportions in each simulated patient feature_data <-     tof_extract_proportion(         tof_tibble = sim_data,         cluster_col = cluster_id,         group_cols = sample_id     )  # plot the heatmap heatmap <- tof_plot_sample_features(feature_tibble = feature_data)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_heatmap","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_heatmap","text":"function makes heatmap sample--sample marker expression patterns single-cell data. Markers plotted along horizontal (x-) axis heatmap sample IDs plotted along vertical (y-) axis heatmap.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_heatmap","text":"","code":"tof_plot_sample_heatmap(   tof_tibble,   sample_col,   marker_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   scale_markerwise = FALSE,   scale_samplewise = FALSE,   line_width = 0.25,   theme = ggplot2::theme_minimal() )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_heatmap","text":"tof_tibble `tof_tbl` `tibble`. sample_col unquoted column name indicating column `tof_tibble` stores ids sample cell belongs. marker_cols Unquoted column names indicating column `tof_tibble` interpreted markers plotted along x-axis heatmap. Supports tidyselect helpers. central_tendency_function function use computing measure central tendency aggregated sample cluster_col. Defaults median. scale_markerwise boolean value indicating heatmap rescale columns heatmap maximum value marker 1 minimum value 0. Defaults FALSE. scale_samplewise boolean value indicating heatmap rescale rows heatmap maximum value sample 1 minimum value 0. Defaults FALSE. line_width numeric value indicating thick lines separating tiles heatmap . Defaults 0.25. theme ggplot2 theme apply heatmap. Defaults theme_minimal","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_heatmap","text":"ggplot object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_heatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_heatmap","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         sample_id = sample(paste0(\"sample\", 1:5), size = 1000, replace = TRUE)     )  heatmap <-     tof_plot_sample_heatmap(         tof_tibble = sim_data,         sample_col = sample_id     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_postprocess.html","id":null,"dir":"Reference","previous_headings":"","what":"Post-process transformed CyTOF data. — tof_postprocess","title":"Post-process transformed CyTOF data. — tof_postprocess","text":"function transforms `tof_tibble` transformed ion counts mass cytometer back something looks like .fcs file Fluidigm software generates.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_postprocess.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Post-process transformed CyTOF data. — tof_postprocess","text":"","code":"tof_postprocess(   tof_tibble = NULL,   channel_cols = where(tof_is_numeric),   redo_noise = FALSE,   transform_fun = function(x) rev_asinh(x, shift_factor = 0, scale_factor = 0.2) )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_postprocess.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Post-process transformed CyTOF data. — tof_postprocess","text":"tof_tibble `tof_tibble` `tibble`. channel_cols vector non-quoted column names indicating columns `tof_tibble` contain protein measurements. Supports tidyselect helpers. nothing specified, default transform numeric columns. redo_noise boolean value indicating whether add  uniform noise CyTOF measurement aesthetic visualization purposes. See paper. Defaults FALSE transform_fun vectorized function apply column specified `channel_cols` post-processing. Defaults rev_asinh transformation (cofactor 5).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_postprocess.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Post-process transformed CyTOF data. — tof_postprocess","text":"`tof_tbl` identical dimensions input `tof_tibble`, columns specified channel_cols transformed using `transform_fun` (noise added removed depending `redo_noise`).","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_postprocess.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Post-process transformed CyTOF data. — tof_postprocess","text":"","code":"# read in an example .fcs file from tidytof's internal datasets input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]] tof_tibble <- tof_read_data(input_file)  # preprocess all numeric columns with default behavior # arcsinh transformation with a cofactor of 5 preprocessed_tof_tibble <- tof_preprocess(tof_tibble)  # postprocess all numeric columns to reverse the preprocessing tof_postprocess(tof_tibble) #> # A tibble: 100 × 59 #>     Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>    <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1   Inf    22215276.   6.00e224          8.82      1411688.    Inf        #>  2   Inf   446205752. Inf               135.         859679.    Inf        #>  3   Inf    22215276. Inf              2634.            321.      8.51e277 #>  4   Inf    22215276.   2.24e254          3.47         1383.      8.29e254 #>  5   Inf   164149923. Inf               127.          38726.      3.70e280 #>  6   Inf   446205752.   1.14e211        163.            116.      3.29e272 #>  7   Inf    22215276.   2.62e219         79.1           175.      1.82e246 #>  8   Inf   164149923.   5.35e246       1876.         291228.      5.64e305 #>  9   Inf   446205752. Inf                55.3         24727.    Inf        #> 10   Inf    22215276.   2.38e236          5.05      2010273.    Inf        #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_predict.html","id":null,"dir":"Reference","previous_headings":"","what":"Use a trained elastic net model to predict fitted values from new data — tof_predict","title":"Use a trained elastic net model to predict fitted values from new data — tof_predict","text":"function uses trained `tof_model` make predictions new data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_predict.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use a trained elastic net model to predict fitted values from new data — tof_predict","text":"","code":"tof_predict(   tof_model,   new_data,   prediction_type = c(\"response\", \"class\", \"link\", \"survival curve\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_predict.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use a trained elastic net model to predict fitted values from new data — tof_predict","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations predictions made. new_data provided, predictions made training data used fit model. prediction_type string indicating type prediction provided model: \"response\" (default) \"linear\" models, predicted response observation. \"two-class\" \"multiclass\" models, fitted probabilities class observation. \"survival\" models, fitted relative-risk observation. \"class\" applies \"two-class\" \"multiclass\" models. , class label corresponding class maximum fitted probability. \"link\" linear predictions model (output link function model family.) \"survival curve\" applies \"survival\" models. Returns tibble indicating patient's probability survival (1 - probability(event)) timepoint dataset. Obtained using survfit function.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_predict.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use a trained elastic net model to predict fitted values from new data — tof_predict","text":"tibble single column (`.pred`) containing predictions , multiclass models `prediction_type` == \"response\", tibble one column class. row output corresponds row `new_data` ( , `new_data` provided, row `tof_model`'s training data). latter case, sure check `tof_model$training_data` confirm order observations, resampling procedure can change ordering relative original input data.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_predict.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Use a trained elastic net model to predict fitted values from new data — tof_predict","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100)     )  new_tibble <-     dplyr::tibble(         sample = as.character(1:20),         cd45 = runif(n = 20),         pstat5 = runif(n = 20),         cd34 = runif(n = 20),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(20)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  # apply the model to new data tof_predict(tof_model = regression_model, new_data = new_tibble) #> # A tibble: 20 × 1 #>    .pred #>    <dbl> #>  1 3.44  #>  2 2.68  #>  3 2.53  #>  4 4.25  #>  5 5.10  #>  6 1.83  #>  7 0.782 #>  8 5.67  #>  9 4.83  #> 10 4.54  #> 11 6.75  #> 12 3.78  #> 13 3.11  #> 14 2.81  #> 15 3.18  #> 16 2.37  #> 17 6.61  #> 18 4.70  #> 19 5.36  #> 20 3.90"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_prep_recipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Train a recipe or list of recipes for preprocessing sample-level cytometry data — tof_prep_recipe","title":"Train a recipe or list of recipes for preprocessing sample-level cytometry data — tof_prep_recipe","text":"Train recipe list recipes preprocessing sample-level cytometry data","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_prep_recipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Train a recipe or list of recipes for preprocessing sample-level cytometry data — tof_prep_recipe","text":"","code":"tof_prep_recipe(split_data, unprepped_recipe)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_prep_recipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Train a recipe or list of recipes for preprocessing sample-level cytometry data — tof_prep_recipe","text":"split_data `rsplit` `rset` object rsample package containing sample-level data use modeling. easiest way generate use tof_split_data. Alternatively, unsplit tbl_df, though recommended. unprepped_recipe recipe object (`split_data` `rsplit` object `tbl_df`) list recipes (`split_data` `rset` object).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_prep_recipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Train a recipe or list of recipes for preprocessing sample-level cytometry data — tof_prep_recipe","text":"split_data \"rsplit\" \"tbl_df\" object, return single prepped recipe. split_data \"rset\" object, return list prepped recipes specific fold resampling procedure.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_preprocess.html","id":null,"dir":"Reference","previous_headings":"","what":"Preprocess raw high-dimensional cytometry data. — tof_preprocess","title":"Preprocess raw high-dimensional cytometry data. — tof_preprocess","text":"function transforms `tof_tbl` raw ion counts, reads, fluorescence intensity units directly measured cytometer using user-provided function. can used perform standard pre-processing steps (.e. arcsinh transformation) cytometry data analysis.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_preprocess.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preprocess raw high-dimensional cytometry data. — tof_preprocess","text":"","code":"tof_preprocess(   tof_tibble = NULL,   channel_cols = where(tof_is_numeric),   undo_noise = FALSE,   transform_fun = function(x) asinh(x/5) )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_preprocess.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preprocess raw high-dimensional cytometry data. — tof_preprocess","text":"tof_tibble `tof_tbl` `tibble`. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. nothing specified, default transform numeric columns. undo_noise boolean value indicating whether remove uniform noise Fluidigm software adds CyTOF measurements aesthetic visualization purposes. See paper. Defaults FALSE. transform_fun vectorized function apply protein value variance stabilization. Defaults asinh transformation (co-factor 5).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_preprocess.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preprocess raw high-dimensional cytometry data. — tof_preprocess","text":"`tof_tbl` identical dimensions input `tof_tibble`, columns specified channel_cols transformed using `transform_fun` (noise removed removed depending `undo_noise`).","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_preprocess.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Preprocess raw high-dimensional cytometry data. — tof_preprocess","text":"","code":"# read in an example .fcs file from tidytof's internal datasets input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]] tof_tibble <- tof_read_data(input_file)  # preprocess all numeric columns with default behavior # arcsinh transformation with a cofactor of 5 tof_preprocess(tof_tibble) #> # A tibble: 100 × 59 #>     Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>    <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1 15.3          1.88       5.33         0.263         1.70           5.85 #>  2 14.9          2.05       5.83         0.731         1.67           5.71 #>  3 15.2          1.88       5.70         1.13          0.861          5.54 #>  4 13.7          1.88       5.45         0.129         1.06           5.46 #>  5 15.2          1.99       5.73         0.721         1.41           5.55 #>  6 14.4          2.05       5.27         0.760         0.708          5.52 #>  7 13.9          1.88       5.31         0.645         0.771          5.42 #>  8 14.2          1.99       5.42         1.09          1.58           5.64 #>  9 15.6          2.05       6.03         0.586         1.37           5.83 #> 10  9.75         1.88       5.38         0.177         1.73           5.78 #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …  # preprocess all numeric columns using the log base 10 tranformation tof_preprocess(tof_tibble, transform_fun = log10) #> # A tibble: 100 × 59 #>     Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>    <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1  7.04         1.20       2.71        0.125          1.12           2.94 #>  2  6.85         1.28       2.93        0.601          1.11           2.88 #>  3  6.99         1.20       2.87        0.843          0.686          2.81 #>  4  6.36         1.20       2.77       -0.189          0.800          2.77 #>  5  6.98         1.26       2.89        0.594          0.984          2.81 #>  6  6.65         1.28       2.69        0.621          0.584          2.80 #>  7  6.44         1.20       2.70        0.539          0.628          2.75 #>  8  6.57         1.26       2.75        0.821          1.07           2.85 #>  9  7.18         1.28       3.02        0.491          0.964          2.93 #> 10  4.63         1.20       2.74       -0.0515         1.13           2.91 #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Read high-dimensional cytometry data from a .csv file into a tidy tibble. — tof_read_csv","title":"Read high-dimensional cytometry data from a .csv file into a tidy tibble. — tof_read_csv","text":"Read high-dimensional cytometry data .csv file tidy tibble.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read high-dimensional cytometry data from a .csv file into a tidy tibble. — tof_read_csv","text":"","code":"tof_read_csv(file_path = NULL, panel_info = dplyr::tibble())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read high-dimensional cytometry data from a .csv file into a tidy tibble. — tof_read_csv","text":"file_path file path single .csv file. panel_info Optional. tibble data.frame containing information panel used high-dimensional cytometry data acquisition. Two columns required: \"metals\" \"antigens\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_csv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read high-dimensional cytometry data from a .csv file into a tidy tibble. — tof_read_csv","text":"`tof_tbl` row represents single cell column represents high-dimensional cytometry antigen channel. `tof_tbl` S3 class extends \"tibble\" class storing one additional attribute: \"panel\" (tibble storing information panel used data acquisition). panel information obvious data read .csv file, information must provided manually user (unlike `tof_read_fcs`).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Read data from an .fcs/.csv file or a directory of .fcs/.csv files. — tof_read_data","title":"Read data from an .fcs/.csv file or a directory of .fcs/.csv files. — tof_read_data","text":"Read data .fcs/.csv file directory .fcs/.csv files.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read data from an .fcs/.csv file or a directory of .fcs/.csv files. — tof_read_data","text":"","code":"tof_read_data(path = NULL, sep = \"|\", panel_info = dplyr::tibble())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read data from an .fcs/.csv file or a directory of .fcs/.csv files. — tof_read_data","text":"path file path single file directory files. valid file types .fcs files .csv files containing high-dimensional cytometry data. sep Optional. string use separate antigen name associated metal column names output tibble. Defaults \"|\". used input file .fcs file. panel_info Optional. tibble data.frame containing information panel used high-dimensional cytometry data acquisition. Two columns required: \"metals\" \"antigens\". used input file .csv file.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read data from an .fcs/.csv file or a directory of .fcs/.csv files. — tof_read_data","text":"[c m+1] tibble row represents single cell (c total dataset) column represents high-dimensional cytometry measurement (m total dataset). one .fcs read , last column tibble (`file_name`) represent file name .fcs file cell read.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read data from an .fcs/.csv file or a directory of .fcs/.csv files. — tof_read_data","text":"","code":"input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]] tof_read_data(input_file) #> # A tibble: 100 × 59 #>         Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>        <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1 11021370            16       517.         1.33          13.2           865. #>  2  7112446.           19       850.         3.99          12.7           756. #>  3  9722098            16       747.         6.96           4.85          639. #>  4  2267279.           16       585.         0.648          6.32          586. #>  5  9624729            18       773.         3.93           9.65          645. #>  6  4439897            19       485.         4.18           3.84          627. #>  7  2762526.           16       504.         3.46           4.25          566. #>  8  3746682.           18       567.         6.62          11.7           703. #>  9 15214280            19      1043.         3.10           9.20          853. #> 10    42699.           16       543.         0.888         13.6           813. #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_fcs.html","id":null,"dir":"Reference","previous_headings":"","what":"Read high-dimensional cytometry data from an .fcs file into a tidy tibble. — tof_read_fcs","title":"Read high-dimensional cytometry data from an .fcs file into a tidy tibble. — tof_read_fcs","text":"function reads high-dimensional cytometry data single .fcs file tidy data structure called `tof_tbl` (\"tof_tibble\"). tof_tibbles identical normal tibbles except additional attribute (\"panel\") stores information high-dimensional cytometry panel used data acquisition.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_fcs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read high-dimensional cytometry data from an .fcs file into a tidy tibble. — tof_read_fcs","text":"","code":"tof_read_fcs(file_path = NULL, sep = \"|\")"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_fcs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read high-dimensional cytometry data from an .fcs file into a tidy tibble. — tof_read_fcs","text":"file_path file path single .fcs file. sep string use separate antigen name associated metal column names output tibble. Defaults \"|\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_fcs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read high-dimensional cytometry data from an .fcs file into a tidy tibble. — tof_read_fcs","text":"`tof_tbl` row represents single cell column represents high-dimensional cytometry antigen channel. `tof_tbl` S3 class extends \"tibble\" class storing one additional attribute: \"panel\" (tibble storing information panel used data acquisition).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Read high-dimensional cytometry data from a single .fcs or .csv file into a tidy tibble. — tof_read_file","title":"Read high-dimensional cytometry data from a single .fcs or .csv file into a tidy tibble. — tof_read_file","text":"Read high-dimensional cytometry data single .fcs .csv file tidy tibble.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read high-dimensional cytometry data from a single .fcs or .csv file into a tidy tibble. — tof_read_file","text":"","code":"tof_read_file(file_path = NULL, sep = \"|\", panel_info = dplyr::tibble())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read high-dimensional cytometry data from a single .fcs or .csv file into a tidy tibble. — tof_read_file","text":"file_path file path single .fcs .csv file. sep string use separate antigen name associated metal column names output tibble. Defaults \"|\". used input file .fcs file. panel_info Optional. tibble data.frame containing information panel used high-dimensional cytometry data acquisition. Two columns required: \"metals\" \"antigens\". used input file .csv file.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read high-dimensional cytometry data from a single .fcs or .csv file into a tidy tibble. — tof_read_file","text":"`tof_tbl` row represents single cell column represents high-dimensional cytometry antigen channel. `tof_tbl` S3 class extends \"tibble\" class storing one additional attribute: \"panel\" (tibble storing information panel used data acquisition). panel information obvious data read .csv file, information must provided manually user.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_dimensions.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply dimensionality reduction to a single-cell dataset. — tof_reduce_dimensions","title":"Apply dimensionality reduction to a single-cell dataset. — tof_reduce_dimensions","text":"function wrapper around tidytof's tof_reduce_* function family. performs dimensionality reduction single-cell data using user-specified method (3 choices) method's corresponding input parameters","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_dimensions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply dimensionality reduction to a single-cell dataset. — tof_reduce_dimensions","text":"","code":"tof_reduce_dimensions(   tof_tibble,   ...,   augment = TRUE,   method = c(\"pca\", \"tsne\", \"umap\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_dimensions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply dimensionality reduction to a single-cell dataset. — tof_reduce_dimensions","text":"tof_tibble `tof_tbl` `tibble`. ... Arguments passed tof_reduce_* function corresponding embedding method. See tof_reduce_pca, tof_reduce_tsne, tof_reduce_umap. augment boolean value indicating output column-bind dimensionality-reduced embedding vectors cell new column `tof_tibble` (TRUE, default) tibble including low-dimensionality embeddings returned (FALSE). method method dimensionality reduction. Currently, PCA, tSNE, UMAP embedding supported.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_dimensions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply dimensionality reduction to a single-cell dataset. — tof_reduce_dimensions","text":"tibble number rows `tof_tibble`, representing single cell. `num_comp` columns represents cell's embedding calculated embedding space.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_dimensions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply dimensionality reduction to a single-cell dataset. — tof_reduce_dimensions","text":"","code":"# simulate single-cell data sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 100),         cd38 = rnorm(n = 100),         cd34 = rnorm(n = 100),         cd19 = rnorm(n = 100)     )  # calculate pca tof_reduce_dimensions(tof_tibble = sim_data, method = \"pca\") #> # A tibble: 100 × 8 #>      cd45    cd38   cd34    cd19   .pc1    .pc2    .pc3    .pc4 #>     <dbl>   <dbl>  <dbl>   <dbl>  <dbl>   <dbl>   <dbl>   <dbl> #>  1 -1.10  -0.127  -1.74   1.44    0.133 -1.81   -0.0753  1.34   #>  2  0.530 -0.377  -1.16   0.889   0.439 -0.379  -1.08    0.751  #>  3  1.83  -1.75   -0.359  0.641   1.58   0.324  -2.24   -0.326  #>  4 -0.637  1.05   -0.765 -0.469  -1.25  -0.0862  0.423   0.0991 #>  5 -1.84  -0.385   0.524  0.214   0.415 -1.14    1.35   -0.909  #>  6 -1.18   0.498  -1.74   0.0575 -1.19  -1.32    0.0733  0.615  #>  7  1.41   0.829   1.30  -1.26   -0.290  2.42   -0.0800 -1.32   #>  8 -0.671  0.0307  1.08  -0.114   0.460  0.233   1.01   -1.05   #>  9  0.292  1.92   -0.785 -0.0763 -1.25   0.924   0.259   0.969  #> 10  0.479  1.53   -1.09   0.231  -0.960  0.659  -0.183   1.18   #> # ℹ 90 more rows  # calculate tsne tof_reduce_dimensions(tof_tibble = sim_data, method = \"tsne\") #> # A tibble: 100 × 6 #>      cd45    cd38   cd34    cd19 .tsne1  .tsne2 #>     <dbl>   <dbl>  <dbl>   <dbl>  <dbl>   <dbl> #>  1 -1.10  -0.127  -1.74   1.44    3.61   1.29   #>  2  0.530 -0.377  -1.16   0.889   1.85  -0.949  #>  3  1.83  -1.75   -0.359  0.641   0.383 -3.90   #>  4 -0.637  1.05   -0.765 -0.469  -2.60   0.944  #>  5 -1.84  -0.385   0.524  0.214   0.449  3.32   #>  6 -1.18   0.498  -1.74   0.0575  4.65   0.978  #>  7  1.41   0.829   1.30  -1.26   -4.73   2.57   #>  8 -0.671  0.0307  1.08  -0.114  -0.826  2.54   #>  9  0.292  1.92   -0.785 -0.0763 -5.07   0.0356 #> 10  0.479  1.53   -1.09   0.231  -5.21  -0.510  #> # ℹ 90 more rows  # calculate umap tof_reduce_dimensions(tof_tibble = sim_data, method = \"umap\") #> Found more than one class \"dist\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘spam’ #> Found more than one class \"dist\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘spam’ #> # A tibble: 100 × 6 #>      cd45    cd38   cd34    cd19 .umap1 .umap2 #>     <dbl>   <dbl>  <dbl>   <dbl>  <dbl>  <dbl> #>  1 -1.10  -0.127  -1.74   1.44    1.16   1.84  #>  2  0.530 -0.377  -1.16   0.889   1.58   0.429 #>  3  1.83  -1.75   -0.359  0.641   1.16  -0.766 #>  4 -0.637  1.05   -0.765 -0.469  -2.62   0.913 #>  5 -1.84  -0.385   0.524  0.214   4.08  -0.167 #>  6 -1.18   0.498  -1.74   0.0575 -0.516  1.46  #>  7  1.41   0.829   1.30  -1.26   -3.58  -1.04  #>  8 -0.671  0.0307  1.08  -0.114   4.42  -0.990 #>  9  0.292  1.92   -0.785 -0.0763 -4.92   1.19  #> 10  0.479  1.53   -1.09   0.231  -5.11   1.20  #> # ℹ 90 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_pca.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform principal component analysis on single-cell data — tof_reduce_pca","title":"Perform principal component analysis on single-cell data — tof_reduce_pca","text":"function calculates principal components using single-cell data `tof_tibble`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_pca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform principal component analysis on single-cell data — tof_reduce_pca","text":"","code":"tof_reduce_pca(   tof_tibble,   pca_cols = where(tof_is_numeric),   num_comp = 5,   threshold = NA,   center = TRUE,   scale = TRUE,   return_recipe = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_pca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform principal component analysis on single-cell data — tof_reduce_pca","text":"tof_tibble `tof_tbl` `tibble`. pca_cols Unquoted column names indicating columns `tof_tibble` use computing principal components. Defaults numeric columns. Supports tidyselect helpers. num_comp number PCA components calculate. Defaults 5. See step_pca. threshold double 0 1 representing fraction total variance covered components returned output. See step_pca. center boolean value indicating column centered mean 0 PCA analysis. Defaults TRUE. scale boolean value indicating column scaled standard deviation = 1 PCA analysis. Defaults TRUE. return_recipe boolean value indicating instead UMAP result, prepped recipe object containing PCA embedding returned. Set option TRUE want create PCA embedding using one dataset also want project new observations onto embedding space later.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_pca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform principal component analysis on single-cell data — tof_reduce_pca","text":"tibble number rows `tof_tibble`, representing single cell. `num_comp` columns represents cell's embedding calculated principal component space.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_pca.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform principal component analysis on single-cell data — tof_reduce_pca","text":"","code":"# simulate single-cell data sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200)     ) new_data <-     dplyr::tibble(         cd45 = rnorm(n = 50),         cd38 = rnorm(n = 50),         cd34 = rnorm(n = 50),         cd19 = rnorm(n = 50)     )  # calculate pca tof_reduce_pca(tof_tibble = sim_data, num_comp = 2) #> # A tibble: 200 × 2 #>        .pc1    .pc2 #>       <dbl>   <dbl> #>  1  0.130   -0.206  #>  2 -1.20     0.472  #>  3  0.518   -0.404  #>  4 -0.00438  0.376  #>  5 -0.204    0.833  #>  6 -0.111   -0.0790 #>  7 -1.02     1.43   #>  8  0.299   -0.829  #>  9  0.973   -1.54   #> 10  0.194   -0.689  #> # ℹ 190 more rows  # return recipe instead of embeddings pca_recipe <- tof_reduce_pca(tof_tibble = sim_data, return_recipe = TRUE)  # apply recipe to new data recipes::bake(pca_recipe, new_data = new_data) #> # A tibble: 50 × 4 #>       PC1     PC2     PC3     PC4 #>     <dbl>   <dbl>   <dbl>   <dbl> #>  1 -2.16  -0.102   0.484  -0.0454 #>  2  0.916 -0.658   0.664   1.07   #>  3  0.822 -0.195   1.12   -1.57   #>  4 -0.959 -0.545  -0.249   0.670  #>  5 -0.304 -0.0561 -0.0212 -0.261  #>  6  0.690  0.885  -2.94   -0.957  #>  7  0.638  0.954  -0.429   1.28   #>  8  0.585 -0.698  -0.202   0.824  #>  9 -1.06   0.114  -1.56    0.357  #> 10 -1.81   0.890  -0.312  -0.935  #> # ℹ 40 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_tsne.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform t-distributed stochastic neighborhood embedding on single-cell data — tof_reduce_tsne","title":"Perform t-distributed stochastic neighborhood embedding on single-cell data — tof_reduce_tsne","text":"function calculates tSNE embedding using single-cell data `tof_tibble`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_tsne.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform t-distributed stochastic neighborhood embedding on single-cell data — tof_reduce_tsne","text":"","code":"tof_reduce_tsne(   tof_tibble,   tsne_cols = where(tof_is_numeric),   num_comp = 2,   perplexity = 30,   theta = 0.5,   max_iterations = 1000,   verbose = FALSE,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_tsne.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform t-distributed stochastic neighborhood embedding on single-cell data — tof_reduce_tsne","text":"tof_tibble `tof_tbl` `tibble`. tsne_cols Unquoted column names indicating columns `tof_tibble` use computing tSNE embedding. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. num_comp number tSNE components calculate embedding. Defaults 2. perplexity positive numeric value represents represents rough balance input data’s local global structure emphasized embedding. Smaller values emphasize local structure; larger values emphasize global structure. recommended range generally 5-50. Defaults 30. theta numeric value representing speed/accuracy tradeoff embedding. Set 0 exact tSNE; increase faster approximation. Defaults 0.5 max_iterations integer number iterations use embedding calculation. Defaults 1000. verbose boolean value indicating whether progress updates printed embedding calculation. Default FALSE. ... Additional arguments pass Rtsne.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_tsne.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform t-distributed stochastic neighborhood embedding on single-cell data — tof_reduce_tsne","text":"tibble number rows `tof_tibble`, representing single cell. `num_comp` columns represents cell's embedding calculated tSNE space.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_tsne.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform t-distributed stochastic neighborhood embedding on single-cell data — tof_reduce_tsne","text":"","code":"# simulate single-cell data sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200)     )  # calculate tsne tof_reduce_tsne(tof_tibble = sim_data) #> # A tibble: 200 × 2 #>     .tsne1 .tsne2 #>      <dbl>  <dbl> #>  1  2.50   -3.96  #>  2  1.11    6.57  #>  3 -0.200  -6.73  #>  4  5.43    4.98  #>  5  0.0547  4.39  #>  6  6.05   -1.29  #>  7 -5.01   -0.170 #>  8 -4.44   -1.65  #>  9  5.89   -2.29  #> 10  3.17    4.01  #> # ℹ 190 more rows  # calculate tsne with only 2 columns tof_reduce_tsne(tof_tibble = sim_data, tsne_cols = c(cd34, cd38)) #> # A tibble: 200 × 2 #>    .tsne1 .tsne2 #>     <dbl>  <dbl> #>  1  5.81   5.59  #>  2  0.981 -0.614 #>  3 -3.08  -5.52  #>  4  2.33  -6.23  #>  5 -6.09  -3.56  #>  6  5.71   5.12  #>  7 -6.35   6.50  #>  8 -3.26  -0.196 #>  9  0.589  3.18  #> 10 -3.01   4.02  #> # ℹ 190 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_umap.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply uniform manifold approximation and projection (UMAP) to single-cell data — tof_reduce_umap","title":"Apply uniform manifold approximation and projection (UMAP) to single-cell data — tof_reduce_umap","text":"function calculates UMAP embedding single-cell data `tof_tibble`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_umap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply uniform manifold approximation and projection (UMAP) to single-cell data — tof_reduce_umap","text":"","code":"tof_reduce_umap(   tof_tibble,   umap_cols = where(tof_is_numeric),   num_comp = 2,   neighbors = 5,   min_dist = 0.01,   learn_rate = 1,   epochs = NULL,   verbose = FALSE,   n_threads = 1,   return_recipe = FALSE,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_umap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply uniform manifold approximation and projection (UMAP) to single-cell data — tof_reduce_umap","text":"tof_tibble `tof_tbl` `tibble`. umap_cols Unquoted column names indicating columns `tof_tibble` use computing UMAP embedding. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. num_comp integer number UMAP components. neighbors integer number nearest neighbors used construct target simplicial set. min_dist effective minimum distance embedded points. learn_rate Positive number learning rate optimization process. epochs Number iterations neighbor optimization. See umap details. verbose boolean indicating run details logged console. Defaults FALSE. n_threads Number threads use UMAP calculation. Defaults 1. return_recipe boolean value indicating instead UMAP result, prepped recipe object containing UMAP embedding returned. Set option TRUE want create UMAP embedding using one dataset also want project new observations onto embedding space later. ... Optional. options passed arguments umap.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_umap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply uniform manifold approximation and projection (UMAP) to single-cell data — tof_reduce_umap","text":"tibble number rows `tof_tibble`, representing single cell. `num_comp` columns represents cell's embedding calculated UMAP space.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_umap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply uniform manifold approximation and projection (UMAP) to single-cell data — tof_reduce_umap","text":"","code":"# simulate single-cell data sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200)     ) new_data <-     dplyr::tibble(         cd45 = rnorm(n = 50),         cd38 = rnorm(n = 50),         cd34 = rnorm(n = 50),         cd19 = rnorm(n = 50)     )  # calculate umap tof_reduce_umap(tof_tibble = sim_data) #> Found more than one class \"dist\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘spam’ #> Found more than one class \"dist\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘spam’ #> # A tibble: 200 × 2 #>     .umap1  .umap2 #>      <dbl>   <dbl> #>  1 -1.31   -2.65   #>  2  2.74   -2.14   #>  3  1.46    4.60   #>  4  0.400   3.85   #>  5 -0.995  -2.61   #>  6 -2.43    2.90   #>  7  0.0905 -3.71   #>  8  3.05   -0.0332 #>  9  0.0623 -2.23   #> 10 -0.787   1.95   #> # ℹ 190 more rows  # calculate umap with only 2 columns tof_reduce_tsne(tof_tibble = sim_data, umap_cols = c(cd34, cd38)) #> # A tibble: 200 × 2 #>    .tsne1 .tsne2 #>     <dbl>  <dbl> #>  1  6.08  -0.306 #>  2  0.811 -6.05  #>  3 -2.23  -0.473 #>  4 -6.79   4.14  #>  5  6.37  -1.95  #>  6 -0.861  2.43  #>  7  3.38  -3.99  #>  8 -5.12  -6.40  #>  9  4.11  -5.42  #> 10 -4.99   4.38  #> # ℹ 190 more rows  # return recipe umap_recipe <- tof_reduce_umap(tof_tibble = sim_data, return_recipe = TRUE) #> Found more than one class \"dist\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘spam’ #> Found more than one class \"dist\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘spam’  # apply recipe to new data recipes::bake(umap_recipe, new_data = new_data) #> # A tibble: 50 × 2 #>     UMAP1     UMAP2 #>     <dbl>     <dbl> #>  1 -3.75  -1.18     #>  2 -2.05  -0.354    #>  3 -0.105 -2.61     #>  4 -3.55  -1.01     #>  5  1.46  -4.03     #>  6 -1.69   3.16     #>  7 -3.09  -0.403    #>  8  1.56   2.02     #>  9  1.75  -2.82     #> 10 -1.51   0.000813 #> # ℹ 40 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_set_panel.html","id":null,"dir":"Reference","previous_headings":"","what":"Set panel information from a tof_tibble — tof_set_panel","title":"Set panel information from a tof_tibble — tof_set_panel","text":"Set panel information tof_tibble","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_set_panel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set panel information from a tof_tibble — tof_set_panel","text":"","code":"tof_set_panel(tof_tibble, panel)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_set_panel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set panel information from a tof_tibble — tof_set_panel","text":"tof_tibble `tof_tbl`. panel tibble containing two columns (`metals` `antigens`) representing information panel","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_set_panel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set panel information from a tof_tibble — tof_set_panel","text":"`tof_tibble` containing information CyTOF panel used data acquisition data contained input `tof_tibble`. Two columns required: \"metals\" \"antigens\".","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_set_panel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set panel information from a tof_tibble — tof_set_panel","text":"","code":"# get current panel from an .fcs file input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]] tof_tibble <- tof_read_data(input_file) current_panel <- tof_get_panel(tof_tibble)  # create a new panel (remove empty channels) new_panel <- dplyr::filter(current_panel, antigens != \"empty\") tof_set_panel(tof_tibble = tof_tibble, panel = new_panel) #> # A tibble: 100 × 59 #>         Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>        <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1 11021370            16       517.         1.33          13.2           865. #>  2  7112446.           19       850.         3.99          12.7           756. #>  3  9722098            16       747.         6.96           4.85          639. #>  4  2267279.           16       585.         0.648          6.32          586. #>  5  9624729            18       773.         3.93           9.65          645. #>  6  4439897            19       485.         4.18           3.84          627. #>  7  2762526.           16       504.         3.46           4.25          566. #>  8  3746682.           18       567.         6.62          11.7           703. #>  9 15214280            19      1043.         3.10           9.20          853. #> 10    42699.           16       543.         0.888         13.6           813. #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_spade_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate cells' local densities as done in Spanning-tree Progression Analysis of Density-normalized Events (SPADE) — tof_spade_density","title":"Estimate cells' local densities as done in Spanning-tree Progression Analysis of Density-normalized Events (SPADE) — tof_spade_density","text":"function uses algorithm described Qiu et al., (2011) estimate local density cell `tof_tbl` `tibble` containing high-dimensional cytometry data. Briefly, algorithm involves counting number neighboring cells within  sphere radius alpha surrounding cell. , using nn2 function.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_spade_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate cells' local densities as done in Spanning-tree Progression Analysis of Density-normalized Events (SPADE) — tof_spade_density","text":"","code":"tof_spade_density(   tof_tibble,   distance_cols = where(tof_is_numeric),   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\"),   num_alpha_cells = 2000L,   alpha_multiplier = 5,   max_neighbors = round(0.01 * nrow(tof_tibble)),   normalize = TRUE,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_spade_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate cells' local densities as done in Spanning-tree Progression Analysis of Density-normalized Events (SPADE) — tof_spade_density","text":"tof_tibble `tof_tbl` `tibble`. distance_cols Unquoted names columns `tof_tibble` use calculating cell--cell distances local density estimation cell. Defaults numeric columns `tof_tibble`. distance_function string indicating distance function use calculating cell--cell distances local density estimation. Options include \"euclidean\" (default) \"cosine\". num_alpha_cells integer indicating many cells `tof_tibble` randomly sampled `tof_tibble` order estimate `alpha`, radius sphere constructed around cell local density estimation. Alpha calculated taking median nearest-neighbor distance `num_alpha_cells` randomly-sampled cells multiplying `alpha_multiplier`. Defaults 2000. alpha_multiplier numeric value indicating multiplier used calculating `alpha`, radius sphere constructed around cell local density estimation. Alpha calculated taking median nearest-neighbor distance `num_alpha_cells` cells randomly-sampled `tof_tibble` multiplying `alpha_multiplier`. Defaults 5. max_neighbors integer indicating maximum number neighbors can counted within sphere surrounding given cell. Implemented reduce density estimation procedure's speed memory requirements. Defaults 1% number rows `tof_tibble`. normalize boolean value indicating vector local density estimates normalized values 0 1. Defaults TRUE. ... Additional optional arguments pass tof_find_knn.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_spade_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate cells' local densities as done in Spanning-tree Progression Analysis of Density-normalized Events (SPADE) — tof_spade_density","text":"tibble single column named \".spade_density\" containing local density estimates input cell `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_spade_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate cells' local densities as done in Spanning-tree Progression Analysis of Density-normalized Events (SPADE) — tof_spade_density","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  # perform the density estimation tof_spade_density(tof_tibble = sim_data) #> # A tibble: 1,000 × 1 #>    .spade_density #>             <dbl> #>  1              1 #>  2              1 #>  3              1 #>  4              1 #>  5              1 #>  6              1 #>  7              1 #>  8              1 #>  9              1 #> 10              1 #> # ℹ 990 more rows  # perform the density estimation using cosine distance tof_spade_density(     tof_tibble = sim_data,     distance_function = \"cosine\",     alpha_multiplier = 2 ) #> # A tibble: 1,000 × 1 #>    .spade_density #>             <dbl> #>  1          0.5   #>  2          1     #>  3          0     #>  4          0.167 #>  5          0.167 #>  6          0.167 #>  7          0.167 #>  8          0.5   #>  9          0.667 #> 10          0.167 #> # ℹ 990 more rows  # perform the density estimation with a smaller search radius around # each cell tof_spade_density(     tof_tibble = sim_data,     alpha_multiplier = 2 ) #> # A tibble: 1,000 × 1 #>    .spade_density #>             <dbl> #>  1            1   #>  2            0.2 #>  3            1   #>  4            1   #>  5            1   #>  6            1   #>  7            1   #>  8            1   #>  9            1   #> 10            0.2 #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Split high-dimensional cytometry data into a training and test set — tof_split_data","title":"Split high-dimensional cytometry data into a training and test set — tof_split_data","text":"Split high-dimensional cytometry data training test set","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split high-dimensional cytometry data into a training and test set — tof_split_data","text":"","code":"tof_split_data(   feature_tibble,   split_method = c(\"k-fold\", \"bootstrap\", \"simple\"),   split_col,   simple_prop = 3/4,   num_cv_folds = 10,   num_cv_repeats = 1L,   num_bootstraps = 10,   strata = NULL,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split high-dimensional cytometry data into a training and test set — tof_split_data","text":"feature_tibble tibble row represents sample- patient- level observation, produced tof_extract_features. split_method Either string logical vector specifying perform split. string, valid options include k-fold cross validation (\"k-fold\"; default), bootstrapping (\"bootstrap\"), single binary split (\"simple\"). logical vector, contain one entry row `feature_tibble` indicating row included training set (TRUE) excluded validation/test set (FALSE). Ignored entirely `split_col` specified. split_col unquoted column name logical column `feature_tibble` indicating row included training set (TRUE) excluded validation/test set (FALSE). simple_prop numeric value 0 1 indicating proportion data used training. Defaults 3/4. Ignored split_method \"simple\". num_cv_folds integer indicating many cross-validation folds used. Defaults 10. Ignored split_method \"k-fold\". num_cv_repeats integer indicating many independent cross-validation replicates used (.e. many num_cv_fold splits performed). Defaults 1. Ignored split_method \"k-fold\". num_bootstraps integer indicating many independent bootstrap replicates used. Defaults 25. Ignored split_method \"bootstrap\". strata unquoted column name representing column feature_tibble used stratify data splitting. Defaults NULL (stratification). ... Optional additional arguments pass vfold_cv k-fold cross validation, bootstraps bootstrapping, initial_split simple splitting.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split high-dimensional cytometry data into a training and test set — tof_split_data","text":"k-fold cross validation bootstrapping, \"rset\" object; simple splitting, \"rsplit\" object. details, see rsample.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split high-dimensional cytometry data into a training and test set — tof_split_data","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 50), rep(1, times = 50)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  # split the dataset into 10 CV folds tof_split_data(     feature_tibble = feature_tibble,     split_method = \"k-fold\" ) #> #  10-fold cross-validation  #> # A tibble: 10 × 2 #>    splits          id     #>    <list>          <chr>  #>  1 <split [90/10]> Fold01 #>  2 <split [90/10]> Fold02 #>  3 <split [90/10]> Fold03 #>  4 <split [90/10]> Fold04 #>  5 <split [90/10]> Fold05 #>  6 <split [90/10]> Fold06 #>  7 <split [90/10]> Fold07 #>  8 <split [90/10]> Fold08 #>  9 <split [90/10]> Fold09 #> 10 <split [90/10]> Fold10  # split the dataset into 10 bootstrap resamplings tof_split_data(     feature_tibble = feature_tibble,     split_method = \"bootstrap\" ) #> # Bootstrap sampling  #> # A tibble: 10 × 2 #>    splits           id          #>    <list>           <chr>       #>  1 <split [100/37]> Bootstrap01 #>  2 <split [100/38]> Bootstrap02 #>  3 <split [100/40]> Bootstrap03 #>  4 <split [100/37]> Bootstrap04 #>  5 <split [100/38]> Bootstrap05 #>  6 <split [100/43]> Bootstrap06 #>  7 <split [100/38]> Bootstrap07 #>  8 <split [100/38]> Bootstrap08 #>  9 <split [100/35]> Bootstrap09 #> 10 <split [100/40]> Bootstrap10  # split the dataset into a single training/test set # stratified by the \"class\" column tof_split_data(     feature_tibble = feature_tibble,     split_method = \"simple\",     strata = class ) #> <Training/Testing/Total> #> <74/26/100>"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_tidytof_reduced_dimensions.html","id":null,"dir":"Reference","previous_headings":"","what":"Split the dimensionality reduction data that tidytof combines during SingleCellExperiment conversion — tof_split_tidytof_reduced_dimensions","title":"Split the dimensionality reduction data that tidytof combines during SingleCellExperiment conversion — tof_split_tidytof_reduced_dimensions","text":"Split dimensionality reduction data tidytof combines SingleCellExperiment conversion","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_tidytof_reduced_dimensions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split the dimensionality reduction data that tidytof combines during SingleCellExperiment conversion — tof_split_tidytof_reduced_dimensions","text":"","code":"tof_split_tidytof_reduced_dimensions(sce)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_tidytof_reduced_dimensions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split the dimensionality reduction data that tidytof combines during SingleCellExperiment conversion — tof_split_tidytof_reduced_dimensions","text":"sce SingleCellExperiment entry named \"tidytof_reduced_dimensions\" reducedDims slot.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_tidytof_reduced_dimensions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split the dimensionality reduction data that tidytof combines during SingleCellExperiment conversion — tof_split_tidytof_reduced_dimensions","text":"SingleCellExperiment separate entries named \"tidytof_pca\", \"tidytof_umap\", \"tidytof_tsne\" reducedDims slots (one dimensionality reduction methods tidytof native support).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_tidytof_reduced_dimensions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split the dimensionality reduction data that tidytof combines during SingleCellExperiment conversion — tof_split_tidytof_reduced_dimensions","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_train_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Train an elastic net model to predict sample-level phenomena using high-dimensional cytometry data. — tof_train_model","title":"Train an elastic net model to predict sample-level phenomena using high-dimensional cytometry data. — tof_train_model","text":"function uses training set/test set paradigm tune fit elastic net model using variety user-specified details. Tuning can performed using either simple training vs. test set split, k-fold cross-validation, bootstrapping, multiple preprocessing options available.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_train_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Train an elastic net model to predict sample-level phenomena using high-dimensional cytometry data. — tof_train_model","text":"","code":"tof_train_model(   split_data,   unsplit_data,   predictor_cols,   response_col = NULL,   time_col = NULL,   event_col = NULL,   model_type = c(\"linear\", \"two-class\", \"multiclass\", \"survival\"),   hyperparameter_grid = tof_create_grid(),   standardize_predictors = TRUE,   remove_zv_predictors = FALSE,   impute_missing_predictors = FALSE,   optimization_metric = \"tidytof_default\",   best_model_type = c(\"best\", \"best with sparsity\"),   num_cores = 1 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_train_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Train an elastic net model to predict sample-level phenomena using high-dimensional cytometry data. — tof_train_model","text":"split_data `rsplit` `rset` object rsample package containing sample-level data use modeling. easiest way generate use tof_split_data. unsplit_data tibble containing sample-level data use modeling without resampling. using resampling method advised, argument provides interface fit model without using cross-validation bootstrap resampling. Ignored split_data provided. predictor_cols Unquoted column names indicating columns data contained `split_data` used predictors elastic net model. Supports tidyselect helpers. response_col Unquoted column name indicating column data contained `split_data` used outcome \"two-class\", \"multiclass\", \"linear\" elastic net model. Must factor \"two-class\" \"multiclass\" models must numeric \"linear\" models. Ignored `model_type` \"survival\". time_col Unquoted column name indicating column data contained `split_data` represents time--event outcome \"survival\" elastic net model. Must numeric. Ignored `model_type` \"two-class\", \"multiclass\", \"linear\". event_col Unquoted column name indicating column data contained `split_data` represents time--event outcome \"survival\" elastic net model. Must binary column - values either 0 1 (1 indicating adverse event) FALSE TRUE (TRUE indicating adverse event). Ignored `model_type` \"two-class\", \"multiclass\", \"linear\". model_type string indicating kind elastic net model build. continuous response predicted, use \"linear\" linear regression; categorical response 2 classes predicted, use \"two-class\" logistic regression; categorical response 2 levels predicted, use \"multiclass\" multinomial regression; time--event outcome predicted, use \"survival\" Cox regression. hyperparameter_grid hyperparameter grid indicating values elastic net penalty (lambda) elastic net mixture (alpha) hyperparamters used model tuning. Generate grid using tof_create_grid. standardize_predictors logical value indicating numeric predictor columns standardized (centered scaled) model fitting, standard practice elastic net regularization. Defaults TRUE. remove_zv_predictors logical value indicating predictor columns near-zero variance removed model fitting using step_nzv. Defaults FALSE. impute_missing_predictors logical value indicating predictor columns missing values imputed using k-nearest neighbors model fitting (see step_impute_knn). Imputation performed using observation's 5 nearest-neighbors. Defaults FALSE. optimization_metric string indicating optimization metric used hyperparameter selection model tuning. Valid values depend model_type. \"linear\" models, choices \"mse\" (mean squared error predictions; default) \"mae\" (mean absolute error predictions). \"two-class\" models, choices \"roc_auc\" (area Receiver-Operating Curve classification; default), \"misclassification error\" (proportion misclassified observations), \"binomial_deviance\" (see deviance.glmnet), \"mse\" (mean squared error logit function), \"mae\" (mean absolute error logit function). \"multiclass\" models, choices \"roc_auc\" (area Receiver-Operating Curve classification using Hand-Till generalization ROC AUC multiclass models roc_auc; default), \"misclassification error\" (proportion misclassified observations), \"multinomial_deviance\" (see deviance.glmnet), \"mse\" \"mae\" . \"survival\" models, choices \"concordance_index\" (Harrel's C index; see deviance.glmnet) \"partial_likelihood_deviance\" (see deviance.glmnet). best_model_type Currently unused. num_cores Integer indicating many cores used parallel processing fitting multiple models. Defaults 1. Overhead separate models across multiple cores can high, significant speedup unlikely observed unless many large models fit.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_train_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Train an elastic net model to predict sample-level phenomena using high-dimensional cytometry data. — tof_train_model","text":"`tof_model`, S3 class includes elastic net model best performance (assessed via cross-validation, bootstrapping, simple splitting depending `split_data`) across tested hyperparameter value combinations. `tof_models` store following information: model final elastic net (\"glmnet\") model, chosen selecting elastic net hyperparameters best `optimization_metric` performance validation sets resample used train model (average) recipe recipe used data preprocessing mixture optimal mixture hyperparameter (alpha) glmnet model penalty optimal penalty hyperparameter (lambda) glmnet model model_type string indicating type glmnet model fit outcome_colnames character vector representing names columns training data modeled outcome variables training_data tibble containing (preprocessed) data used train model tuning_metrics tibble containing validation set performance metrics (model predictions) resample fold model tuning. log_rank_thresholds survival models , tibble containing information relative-risk thresholds can used split training data 2 risk groups (low- high-risk) based final model's predictions. relative-risk threshold, log-rank test p-value indicator threshold gives significant separation provided. best_log_rank_threshold survival models , numeric value representing relative-risk threshold yields significant log-rank test separating training data low- high-risk groups.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_train_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Train an elastic net model to predict sample-level phenomena using high-dimensional cytometry data. — tof_train_model","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model tof_train_model(     split_data = split_data,     predictor_cols = c(cd45, pstat5, cd34),     response_col = outcome,     model_type = \"linear\" ) #> A linear `tof_model` with a mixture parameter (alpha) of 0 and a penalty parameter (lambda) of 1e+00  #> # A tibble: 4 × 2 #>   feature     coefficient #>   <chr>             <dbl> #> 1 (Intercept)     3.45    #> 2 pstat5          0.747   #> 3 cd45            0.633   #> 4 cd34            0.00187  # train a logistic regression classifier tof_train_model(     split_data = split_data,     predictor_cols = c(cd45, pstat5, cd34),     response_col = class,     model_type = \"two-class\" ) #> A two-class `tof_model` with a mixture parameter (alpha) of 0 and a penalty parameter (lambda) of 1e+00  #> # A tibble: 4 × 2 #>   feature     coefficient #>   <chr>             <dbl> #> 1 pstat5        -0.258    #> 2 cd45          -0.167    #> 3 cd34           0.0267   #> 4 (Intercept)   -0.000308  # train a cox regression survival model tof_train_model(     split_data = split_data,     predictor_cols = c(cd45, pstat5, cd34),     time_col = time_to_event,     event_col = event,     model_type = \"survival\" ) #> A survival `tof_model` with a mixture parameter (alpha) of 1 and a penalty parameter (lambda) of 3.162e-03  #> # A tibble: 3 × 2 #>   feature coefficient #>   <chr>         <dbl> #> 1 pstat5      -0.273  #> 2 cd45        -0.160  #> 3 cd34        -0.0898"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_transform.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform raw high-dimensional cytometry data. — tof_transform","title":"Transform raw high-dimensional cytometry data. — tof_transform","text":"function transforms `tof_tbl` raw ion counts, reads, fluorescence intensity units directly measured cytometer using user-provided function.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_transform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform raw high-dimensional cytometry data. — tof_transform","text":"","code":"tof_transform(   tof_tibble = NULL,   channel_cols = where(tof_is_numeric),   transform_fun )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_transform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform raw high-dimensional cytometry data. — tof_transform","text":"tof_tibble `tof_tbl` `tibble`. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. nothing specified, default transform numeric columns. transform_fun vectorized function apply protein value variance stabilization.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_transform.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform raw high-dimensional cytometry data. — tof_transform","text":"`tof_tbl` identical dimensions input `tof_tibble`, columns specified channel_cols transformed using `transform_fun`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_transform.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform raw high-dimensional cytometry data. — tof_transform","text":"","code":"# read in an example .fcs file from tidytof's internal datasets input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]] tof_tibble <- tof_read_data(input_file)  # preprocess all numeric columns with default behavior # arcsinh transformation with a cofactor of 5 tof_preprocess(tof_tibble) #> # A tibble: 100 × 59 #>     Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>    <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1 15.3          1.88       5.33         0.263         1.70           5.85 #>  2 14.9          2.05       5.83         0.731         1.67           5.71 #>  3 15.2          1.88       5.70         1.13          0.861          5.54 #>  4 13.7          1.88       5.45         0.129         1.06           5.46 #>  5 15.2          1.99       5.73         0.721         1.41           5.55 #>  6 14.4          2.05       5.27         0.760         0.708          5.52 #>  7 13.9          1.88       5.31         0.645         0.771          5.42 #>  8 14.2          1.99       5.42         1.09          1.58           5.64 #>  9 15.6          2.05       6.03         0.586         1.37           5.83 #> 10  9.75         1.88       5.38         0.177         1.73           5.78 #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …  # preprocess all numeric columns using the log base 10 tranformation tof_preprocess(tof_tibble, transform_fun = log10) #> # A tibble: 100 × 59 #>     Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>    <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1  7.04         1.20       2.71        0.125          1.12           2.94 #>  2  6.85         1.28       2.93        0.601          1.11           2.88 #>  3  6.99         1.20       2.87        0.843          0.686          2.81 #>  4  6.36         1.20       2.77       -0.189          0.800          2.77 #>  5  6.98         1.26       2.89        0.594          0.984          2.81 #>  6  6.65         1.28       2.69        0.621          0.584          2.80 #>  7  6.44         1.20       2.70        0.539          0.628          2.75 #>  8  6.57         1.26       2.75        0.821          1.07           2.85 #>  9  7.18         1.28       3.02        0.491          0.964          2.93 #> 10  4.63         1.20       2.74       -0.0515         1.13           2.91 #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_tune_glmnet.html","id":null,"dir":"Reference","previous_headings":"","what":"Tune an elastic net model's hyperparameters over multiple resamples — tof_tune_glmnet","title":"Tune an elastic net model's hyperparameters over multiple resamples — tof_tune_glmnet","text":"Tune elastic net model's hyperparameters multiple resamples","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_tune_glmnet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tune an elastic net model's hyperparameters over multiple resamples — tof_tune_glmnet","text":"","code":"tof_tune_glmnet(   split_data,   prepped_recipe,   hyperparameter_grid,   model_type,   outcome_cols,   optimization_metric = \"tidytof_default\",   num_cores = 1 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_tune_glmnet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tune an elastic net model's hyperparameters over multiple resamples — tof_tune_glmnet","text":"split_data `rsplit` `rset` object rsample package. easiest way generate use tof_split_data. Alternatively, unsplit tbl_df can provided, though recommended. prepped_recipe Either single recipe object (`split_data` `rsplit` object `tbl_df`) list recipes (`split_data` `rset` object) entry list corresponds resample `split_data`. hyperparameter_grid hyperparameter grid indicating values elastic net penalty (lambda) elastic net mixture (alpha) hyperparameters used model tuning. Generate grid using tof_create_grid. model_type string indicating kind elastic net model build. continuous response predicted, use \"linear\" linear regression; categorical response 2 classes predicted, use \"two-class\" logistic regression; categorical response 2 levels predicted, use \"multiclass\" multinomial regression; time--event outcome predicted, use \"survival\" Cox regression. outcome_cols Unquoted column name(s) indicating column(s) data contained `split_data` used outcome elastic net model. survival models, two columns selected; others, one column selected. optimization_metric string indicating optimization metric used hyperparameter selection model tuning. Valid values depend model_type. num_cores Integer indicating many cores used parallel processing fitting multiple models. Defaults 1. Overhead separate models across multiple cores can high, significant speedup unlikely observed unless many large models fit.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_tune_glmnet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tune an elastic net model's hyperparameters over multiple resamples — tof_tune_glmnet","text":"tibble containing summary model's performance resampling iteration across hyperparameter combinations. contain 3 columns: \"splits\" (list-col containing resampling iteration's `rsplit` object), \"id\" (name resampling iteration), \"performance_metrics\" (list-col containing performance metrics resampling iteration. row \"performance_metrics\" tibble columns \"mixture\" \"penalty\" several additional columns containing performance metrics model mixture/penalty combination). See tof_fit_split additional details.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample.html","id":null,"dir":"Reference","previous_headings":"","what":"Upsample cells into the closest cluster in a reference dataset — tof_upsample","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample","text":"function performs distance-based upsampling CyTOF data sorting single cells (passed function `tof_tibble`) phenotypically similar cell subpopulation reference dataset (passed function `reference_tibble`). calculating distance (either mahalanobis, cosine, pearson) cell `tof_tibble` centroid cluster `reference_tibble`, sorting cells cluster corresponding closest centroid.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample","text":"","code":"tof_upsample(   tof_tibble,   reference_tibble,   reference_cluster_col,   upsample_cols = where(tof_is_numeric),   ...,   augment = TRUE,   method = c(\"distance\", \"neighbor\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample","text":"tof_tibble `tibble` `tof_tbl` containing cells upsampled nearest reference subpopulation. reference_tibble `tibble` `tof_tibble` containing cells already clustered manually gated subpopulations. reference_cluster_col unquoted column name indicating column `reference_tibble` contains subpopulation label (cluster id) cell `reference_tibble`. upsample_cols Unquoted column names indicating columns `tof_tibble` use computing distances used upsampling. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. ... Additional arguments pass `tof_upsample_*` function family member corresponding chosen method. augment boolean value indicating output column-bind cluster ids cell new column `tof_tibble` (TRUE, default) single-column tibble including cluster ids returned (FALSE). method string indicating clustering methods used. Valid values include \"distance\" (default) \"neighbor\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample","text":"`tof_tbl` `tibble` augment = FALSE, single column encoding upsampled cluster ids cell `tof_tibble`. augment = TRUE, ncol(tof_tibble) + 1 columns: (unaltered) columns `tof_tibble` plus additional column encoding cluster ids.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample","text":"","code":"# simulate single-cell data (and reference data with clusters to upsample # into sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     ) reference_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200),         cluster_id = c(rep(\"a\", times = 100), rep(\"b\", times = 100))     )  # upsample using distance to cluster centroids tof_upsample(     tof_tibble = sim_data,     reference_tibble = reference_data,     reference_cluster_col = cluster_id,     method = \"distance\" ) #> # A tibble: 1,000 × 5 #>       cd45   cd38    cd34    cd19 .upsample_cluster #>      <dbl>  <dbl>   <dbl>   <dbl> <chr>             #>  1 -1.56    0.498 -0.270  -0.512  b                 #>  2  0.145   0.392 -0.0881 -2.40   a                 #>  3 -0.0618 -1.07  -0.254   0.643  b                 #>  4  1.81   -1.51  -0.643   0.0611 b                 #>  5  0.680  -0.398  1.34   -0.0740 b                 #>  6 -0.143  -1.83   2.14    2.15   b                 #>  7  0.751   0.497 -0.660   2.61   b                 #>  8  0.496  -1.64  -0.495   1.69   b                 #>  9  0.721  -0.186  0.311   0.243  b                 #> 10  0.504   3.04   3.61    1.51   b                 #> # ℹ 990 more rows  # upsample using distance to nearest neighbor tof_upsample(     tof_tibble = sim_data,     reference_tibble = reference_data,     reference_cluster_col = cluster_id,     method = \"neighbor\" ) #> # A tibble: 1,000 × 5 #>       cd45   cd38    cd34    cd19 .upsample_cluster #>      <dbl>  <dbl>   <dbl>   <dbl> <chr>             #>  1 -1.56    0.498 -0.270  -0.512  b                 #>  2  0.145   0.392 -0.0881 -2.40   a                 #>  3 -0.0618 -1.07  -0.254   0.643  a                 #>  4  1.81   -1.51  -0.643   0.0611 b                 #>  5  0.680  -0.398  1.34   -0.0740 b                 #>  6 -0.143  -1.83   2.14    2.15   b                 #>  7  0.751   0.497 -0.660   2.61   b                 #>  8  0.496  -1.64  -0.495   1.69   b                 #>  9  0.721  -0.186  0.311   0.243  a                 #> 10  0.504   3.04   3.61    1.51   b                 #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_distance.html","id":null,"dir":"Reference","previous_headings":"","what":"Upsample cells into the closest cluster in a reference dataset — tof_upsample_distance","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample_distance","text":"function performs distance-based upsampling CyTOF data sorting single cells (passed function `tof_tibble`) phenotypically similar cell subpopulation reference dataset (passed function `reference_tibble`). calculating distance (either mahalanobis, cosine, pearson) cell `tof_tibble` centroid cluster `reference_tibble`, sorting cells cluster corresponding closest centroid.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample_distance","text":"","code":"tof_upsample_distance(   tof_tibble,   reference_tibble,   reference_cluster_col,   upsample_cols = where(tof_is_numeric),   parallel_cols,   distance_function = c(\"mahalanobis\", \"cosine\", \"pearson\"),   num_cores = 1L,   return_distances = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_distance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample_distance","text":"tof_tibble `tibble` `tof_tbl` containing cells upsampled nearest reference subpopulation. reference_tibble `tibble` `tof_tibble` containing cells already clustered manually gated subpopulations. reference_cluster_col unquoted column name indicating column `reference_tibble` contains subpopulation label (cluster id) cell `reference_tibble`. upsample_cols Unquoted column names indicating columns `tof_tibble` use computing distances used upsampling. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. parallel_cols Optional. Unquoted column names indicating columns `tof_tibble` use breaking data order parallelize upsampling using `foreach` `doParallel` backend. Supports tidyselect helpers. distance_function string indicating distance function used perform upsampling. Options \"mahalanobis\" (default), \"cosine\", \"pearson\". num_cores integer indicating number CPU cores used parallelize classification. Defaults 1 (single core). return_distances boolean value indicating whether returned result include one column, cluster ids corresponding row `tof_tibble` (return_distances = FALSE, default), returned result include additional columns representing distance row `tof_tibble` reference subpopulation centroids (return_distances = TRUE).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_distance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample_distance","text":"`return_distances = FALSE`, tibble one column named `.upsample_cluster`, character vector length `nrow(tof_tibble)` indicating id reference cluster cell (.e. row) `tof_tibble` assigned. `return_distances = TRUE`, tibble `nrow(tof_tibble)` rows num_clusters + 1 columns, num_clusters number clusters `reference_tibble`. row represents cell `tof_tibble`, num_clusters columns represent distance cell reference subpopulations' cluster centroids. final column represents cluster id reference subpopulation minimum distance cell represented row.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_distance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample_distance","text":"","code":"# simulate single-cell data (and reference data with clusters to upsample # into sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  reference_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200),         cluster_id = c(rep(\"a\", times = 100), rep(\"b\", times = 100))     )  # upsample using mahalanobis distance tof_upsample_distance(     tof_tibble = sim_data,     reference_tibble = reference_data,     reference_cluster_col = cluster_id ) #> # A tibble: 1,000 × 1 #>    .upsample_cluster #>    <chr>             #>  1 a                 #>  2 a                 #>  3 b                 #>  4 b                 #>  5 a                 #>  6 a                 #>  7 b                 #>  8 b                 #>  9 b                 #> 10 b                 #> # ℹ 990 more rows  # upsample using cosine distance tof_upsample_distance(     tof_tibble = sim_data,     reference_tibble = reference_data,     reference_cluster_col = cluster_id,     distance_function = \"cosine\" ) #> # A tibble: 1,000 × 1 #>    .upsample_cluster #>    <chr>             #>  1 a                 #>  2 a                 #>  3 b                 #>  4 b                 #>  5 b                 #>  6 b                 #>  7 b                 #>  8 b                 #>  9 b                 #> 10 a                 #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_neighbor.html","id":null,"dir":"Reference","previous_headings":"","what":"Upsample cells into the cluster of their nearest neighbor a reference dataset — tof_upsample_neighbor","title":"Upsample cells into the cluster of their nearest neighbor a reference dataset — tof_upsample_neighbor","text":"function performs upsampling CyTOF data sorting single cells (passed function `tof_tibble`) phenotypically similar cell subpopulation reference dataset (passed function `reference_tibble`). finding cell `tof_tibble`'s nearest neighbor `reference_tibble` assigning cluster nearest neighbor belongs. nearest neighbor calculation can performed either euclidean cosine distance.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_neighbor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upsample cells into the cluster of their nearest neighbor a reference dataset — tof_upsample_neighbor","text":"","code":"tof_upsample_neighbor(   tof_tibble,   reference_tibble,   reference_cluster_col,   upsample_cols = where(tof_is_numeric),   num_neighbors = 1L,   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_neighbor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upsample cells into the cluster of their nearest neighbor a reference dataset — tof_upsample_neighbor","text":"tof_tibble `tibble` `tof_tbl` containing cells upsampled nearest reference subpopulation. reference_tibble `tibble` `tof_tibble` containing cells already clustered manually gated subpopulations. reference_cluster_col unquoted column name indicating column `reference_tibble` contains subpopulation label (cluster id) cell `reference_tibble`. upsample_cols Unquoted column names indicating columns `tof_tibble` use computing distances used upsampling. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. num_neighbors integer indicating many neighbors used nearest neighbor calculation. Clusters assigned based majority vote. distance_function string indicating distance function used perform upsampling. Options \"euclidean\" (default) \"cosine\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_neighbor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Upsample cells into the cluster of their nearest neighbor a reference dataset — tof_upsample_neighbor","text":"tibble one column named `.upsample_cluster`, character vector length `nrow(tof_tibble)` indicating id reference cluster cell (.e. row) `tof_tibble` assigned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_neighbor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Upsample cells into the cluster of their nearest neighbor a reference dataset — tof_upsample_neighbor","text":"","code":"# simulate single-cell data (and reference data with clusters to upsample # into sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  reference_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200),         cluster_id = c(rep(\"a\", times = 100), rep(\"b\", times = 100))     )  # upsample using euclidean distance tof_upsample_neighbor(     tof_tibble = sim_data,     reference_tibble = reference_data,     reference_cluster_col = cluster_id ) #> # A tibble: 1,000 × 1 #>    .upsample_cluster #>    <chr>             #>  1 a                 #>  2 b                 #>  3 b                 #>  4 a                 #>  5 a                 #>  6 b                 #>  7 b                 #>  8 b                 #>  9 b                 #> 10 b                 #> # ℹ 990 more rows  # upsample using cosine distance tof_upsample_neighbor(     tof_tibble = sim_data,     reference_tibble = reference_data,     reference_cluster_col = cluster_id,     distance_function = \"cosine\" ) #> # A tibble: 1,000 × 1 #>    .upsample_cluster #>    <chr>             #>  1 a                 #>  2 a                 #>  3 b                 #>  4 a                 #>  5 a                 #>  6 b                 #>  7 b                 #>  8 b                 #>  9 b                 #> 10 b                 #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a series of .csv files from a tof_tbl — tof_write_csv","title":"Write a series of .csv files from a tof_tbl — tof_write_csv","text":"function takes given `tof_tbl` writes single-cell data contains .csv files within directory located `out_path`. `group_cols` argument specifies rows `tof_tbl` (cell) broken separate .csv files","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a series of .csv files from a tof_tbl — tof_write_csv","text":"","code":"tof_write_csv(tof_tibble, group_cols, out_path, sep = \"_\", file_name)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a series of .csv files from a tof_tbl — tof_write_csv","text":"tof_tibble `tof_tbl` `tibble`. group_cols Optional. Unquoted names columns `tof_tibble` used group cells separate files. Supports tidyselect helpers. Defaults NULL (cells written single file). out_path system path indicating directory output .csv files saved. directory exist, created. sep Delimiter used values `group_cols` create output .csv file names. Defaults \"_\". file_name `group_cols` specified, name (without extension) used saved .csv file.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_csv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write a series of .csv files from a tof_tbl — tof_write_csv","text":"function return anything. Instead, side-effect saving .csv files `out_path`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Write high-dimensional cytometry data to a file or to a directory of files — tof_write_data","title":"Write high-dimensional cytometry data to a file or to a directory of files — tof_write_data","text":"Write data (form `tof_tbl`) either .csv .fcs file storage.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write high-dimensional cytometry data to a file or to a directory of files — tof_write_data","text":"","code":"tof_write_data(   tof_tibble = NULL,   group_cols,   out_path = NULL,   format = c(\"fcs\", \"csv\"),   sep = \"_\",   file_name )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write high-dimensional cytometry data to a file or to a directory of files — tof_write_data","text":"tof_tibble `tof_tbl` `tibble`. group_cols Optional. Unquoted names columns `tof_tibble` used group cells separate files. Supports tidyselect helpers. Defaults grouping (cells written single file). out_path Path directory output files saved. format format files written. Currently supports .csv .fcs files sep Delimiter used values `group_cols` create output .csv/.fcs file names. Defaults \"_\". file_name `group_cols` specified, name (without extension) used saved file.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write high-dimensional cytometry data to a file or to a directory of files — tof_write_data","text":"function explicitly return values. Instead, writes .csv /.fcs files specified `out_path`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write high-dimensional cytometry data to a file or to a directory of files — tof_write_data","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_fcs.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a series of .fcs files from a tof_tbl — tof_write_fcs","title":"Write a series of .fcs files from a tof_tbl — tof_write_fcs","text":"function takes given `tof_tbl` writes single-cell data contains .fcs files within directory located `out_path`. `group_cols` argument specifies rows `tof_tbl` (cell) broken separate .fcs files","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_fcs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a series of .fcs files from a tof_tbl — tof_write_fcs","text":"","code":"tof_write_fcs(tof_tibble, group_cols, out_path, sep = \"_\", file_name)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_fcs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a series of .fcs files from a tof_tbl — tof_write_fcs","text":"tof_tibble `tof_tbl` `tibble`. group_cols Unquoted names columns `tof_tibble` used group cells separate files. Supports tidyselect helpers. Defaults NULL (cells written single file). out_path system path indicating directory output .csv files saved. directory exist, created. sep Delimiter used values `group_cols` create output .fcs file names. Defaults \"_\". file_name `group_cols` specified, name (without extension) used saved .csv file.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_fcs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write a series of .fcs files from a tof_tbl — tof_write_fcs","text":"function return anything. Instead, side-effect saving .fcs files `out_path`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_fcs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write a series of .fcs files from a tof_tbl — tof_write_fcs","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":null,"dir":"Reference","previous_headings":"","what":"Select variables with a function — where","title":"Select variables with a function — where","text":"copy , selection helper selects variables predicate function returns TRUE. See  language details tidyselection.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select variables with a function — where","text":"","code":"where(fn)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select variables with a function — where","text":"fn function returns TRUE FALSE (technically, predicate function). Can also purrr-like formula.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select variables with a function — where","text":"predicate can used select columns data.frame.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Select variables with a function — where","text":"help file replicated verbatim tidyselect-package.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Select variables with a function — where","text":"Lionel Henry Hadley Wickham (2021). tidyselect: Select Set Strings. R package version 1.1.1. https://CRAN.R-project.org/package=tidyselect","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select variables with a function — where","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/news/index.html","id":"tidytof-0990","dir":"Changelog","previous_headings":"","what":"tidytof 0.99.0","title":"tidytof 0.99.0","text":"NEW FEATURES Added NEWS.md file track changes package. SIGNIFICANT USER-VISIBLE CHANGES Submitted Bioconductor BUG FIXES None","code":""}]
